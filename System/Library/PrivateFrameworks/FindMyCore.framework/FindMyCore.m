uint64_t Person.Handle.fmlHandle.getter()
{
  uint64_t vars8;

  swift_bridgeObjectRetain();
  sub_24E295410(MEMORY[0x263F8EE78]);
  return sub_24E2F0B50();
}

uint64_t Handle.fmuiPersonHandle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_24E2F0B10();
  return Person.Handle.init(rawValue:)(v2, v3, a1);
}

uint64_t Handle.fmuiPersonAssociatedHandles.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_24E2F0B10();
  Person.Handle.init(rawValue:)(v2, v3, (uint64_t)v32);
  uint64_t v4 = v32[0];
  uint64_t v5 = v32[1];
  char v6 = v33;
  uint64_t v7 = sub_24E2F0B40();
  int64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    char v27 = v6;
    uint64_t v28 = v5;
    uint64_t v29 = v4;
    uint64_t v30 = a1;
    uint64_t v31 = MEMORY[0x263F8EE78];
    sub_24E2956E4(0, v8, 0);
    uint64_t v9 = v31;
    v10 = (unint64_t *)(v7 + 40);
    do
    {
      uint64_t v12 = *(v10 - 1);
      unint64_t v11 = *v10;
      uint64_t v13 = sub_24E2F0EF0();
      uint64_t v15 = v14;
      uint64_t v16 = HIBYTE(v11) & 0xF;
      if ((v11 & 0x2000000000000000) == 0) {
        uint64_t v16 = v12 & 0xFFFFFFFFFFFFLL;
      }
      if (v16)
      {
        sub_24E295704();
        __swift_instantiateConcreteTypeFromMangledName(&qword_2698CA510);
        uint64_t v17 = swift_allocObject();
        *(_OWORD *)(v17 + 16) = xmmword_24E2F1C10;
        *(void *)(v17 + 56) = MEMORY[0x263F8D310];
        *(void *)(v17 + 64) = sub_24E295788();
        *(void *)(v17 + 32) = 0xD000000000000029;
        *(void *)(v17 + 40) = 0x800000024E2F6730;
        swift_bridgeObjectRetain();
        v18 = (void *)sub_24E2F11B0();
        v19 = (void *)sub_24E2F0E90();
        unsigned __int8 v20 = objc_msgSend(v18, sel_evaluateWithObject_, v19);

        if (v20)
        {
          swift_bridgeObjectRelease();
          char v21 = 1;
        }
        else
        {
          BOOL v22 = sub_24E2E64A8(v12, v11);
          swift_bridgeObjectRelease();
          if (v22) {
            char v21 = 0;
          }
          else {
            char v21 = 2;
          }
        }
      }
      else
      {
        char v21 = 2;
      }
      unint64_t v24 = *(void *)(v31 + 16);
      unint64_t v23 = *(void *)(v31 + 24);
      if (v24 >= v23 >> 1) {
        sub_24E2956E4(v23 > 1, v24 + 1, 1);
      }
      v10 += 2;
      *(void *)(v31 + 16) = v24 + 1;
      uint64_t v25 = v31 + 24 * v24;
      *(void *)(v25 + 32) = v13;
      *(void *)(v25 + 40) = v15;
      *(unsigned char *)(v25 + 48) = v21;
      --v8;
    }
    while (v8);
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v4 = v29;
    a1 = v30;
    uint64_t v5 = v28;
    char v6 = v27;
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v9 = MEMORY[0x263F8EE78];
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v9;
  return result;
}

uint64_t Handle.fmuiPersonServerIdentifier.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_24E2F0B60();
  if (v3) {
    uint64_t v4 = result;
  }
  else {
    uint64_t v4 = 0;
  }
  *a1 = v4;
  a1[1] = v3;
  return result;
}

double Location.fmuiPublishedLocation.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v40 = sub_24E2F0AB0();
  uint64_t v39 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  uint64_t v3 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24E2F0A10();
  uint64_t v38 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24E2F0930();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24E2F0C90();
  double v12 = v11;
  sub_24E2F0CA0();
  double v14 = v13;
  sub_24E2F0C70();
  double v16 = v15;
  sub_24E2F0C20();
  double v18 = v17;
  sub_24E2F0C10();
  double v20 = v19;
  sub_24E2F0C40();
  double v22 = v21;
  sub_24E2F0CB0();
  sub_24E2F0900();
  id v23 = objc_allocWithZone(MEMORY[0x263F00A50]);
  unint64_t v24 = (void *)sub_24E2F08E0();
  id v25 = objc_msgSend(v23, sel_initWithCoordinate_altitude_horizontalAccuracy_verticalAccuracy_course_courseAccuracy_speed_speedAccuracy_timestamp_, v24, v12, v14, v16, v18, v20, 0.0, 0.0, v22, 0);

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_24E2F0C00();
  uint64_t v26 = v38;
  int v27 = (*(uint64_t (**)(char *, uint64_t))(v38 + 88))(v6, v4);
  if (v27 == *MEMORY[0x263F3CD38])
  {
    char v28 = 0;
  }
  else if (v27 == *MEMORY[0x263F3CD28])
  {
    char v28 = 1;
  }
  else if (v27 == *MEMORY[0x263F3CD30])
  {
    char v28 = 2;
  }
  else if (v27 == *MEMORY[0x263F3CD40])
  {
    char v28 = 3;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v6, v4);
    char v28 = 5;
  }
  sub_24E2F0C30();
  uint64_t v29 = v39;
  uint64_t v30 = v40;
  int v31 = (*(uint64_t (**)(char *, uint64_t))(v39 + 88))(v3, v40);
  if (v31 != *MEMORY[0x263F3CDB0])
  {
    if (v31 == *MEMORY[0x263F3CD98])
    {
      char v32 = 1;
      goto LABEL_22;
    }
    if (v31 == *MEMORY[0x263F3CDB8])
    {
      char v32 = 2;
      goto LABEL_22;
    }
    if (v31 == *MEMORY[0x263F3CDA8])
    {
      char v32 = 3;
      goto LABEL_22;
    }
    if (v31 == *MEMORY[0x263F3CDA0])
    {
      char v32 = 4;
      goto LABEL_22;
    }
    if (v31 == *MEMORY[0x263F3CD90])
    {
      char v32 = 5;
      goto LABEL_22;
    }
    (*(void (**)(char *, uint64_t))(v29 + 8))(v3, v30);
  }
  char v32 = 0;
LABEL_22:
  sub_24E294900((uint64_t *)v41);
  *(void *)a1 = v25;
  *(unsigned char *)(a1 + 8) = v28;
  *(unsigned char *)(a1 + 9) = v32;
  long long v33 = v41[1];
  *(_OWORD *)(a1 + 16) = v41[0];
  *(_OWORD *)(a1 + 32) = v33;
  long long v34 = v41[3];
  *(_OWORD *)(a1 + 48) = v41[2];
  *(_OWORD *)(a1 + 64) = v34;
  long long v35 = v41[5];
  *(_OWORD *)(a1 + 80) = v41[4];
  *(_OWORD *)(a1 + 96) = v35;
  double result = v42[0];
  *(_OWORD *)(a1 + 112) = *(_OWORD *)v42;
  return result;
}

uint64_t sub_24E294900@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CA618);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  v59 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  v56 = (char *)&v49 - v6;
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v49 - v8;
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  double v12 = (char *)&v49 - v11;
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  double v15 = (char *)&v49 - v14;
  MEMORY[0x270FA5388](v13);
  double v17 = (char *)&v49 - v16;
  uint64_t v18 = sub_24E294D90();
  uint64_t v57 = v19;
  uint64_t v58 = v18;
  sub_24E2F0C60();
  uint64_t v20 = sub_24E2F0D40();
  uint64_t v21 = *(void *)(v20 - 8);
  double v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
  int v23 = v22(v17, 1, v20);
  uint64_t v60 = v21;
  if (v23 == 1)
  {
    sub_24E296710((uint64_t)v17, &qword_2698CA618);
    uint64_t v54 = 0;
    uint64_t v55 = 0;
  }
  else
  {
    v53 = v12;
    uint64_t v24 = sub_24E2F0D10();
    uint64_t v54 = v25;
    uint64_t v55 = v24;
    double v12 = v53;
    (*(void (**)(char *, uint64_t))(v21 + 8))(v17, v20);
  }
  sub_24E2F0C60();
  if (v22(v15, 1, v20) == 1)
  {
    sub_24E296710((uint64_t)v15, &qword_2698CA618);
    uint64_t v52 = 0;
    v53 = 0;
  }
  else
  {
    uint64_t v26 = sub_24E2F0CE0();
    uint64_t v52 = v27;
    v53 = (char *)v26;
    (*(void (**)(char *, uint64_t))(v60 + 8))(v15, v20);
  }
  sub_24E2F0C60();
  if (v22(v12, 1, v20) == 1)
  {
    sub_24E296710((uint64_t)v12, &qword_2698CA618);
    uint64_t v50 = 0;
    uint64_t v51 = 0;
  }
  else
  {
    uint64_t v28 = sub_24E2F0D00();
    uint64_t v50 = v29;
    uint64_t v51 = v28;
    (*(void (**)(char *, uint64_t))(v60 + 8))(v12, v20);
  }
  sub_24E2F0C60();
  if (v22(v9, 1, v20) == 1)
  {
    sub_24E296710((uint64_t)v9, &qword_2698CA618);
    uint64_t v30 = 0;
    uint64_t v31 = 0;
  }
  else
  {
    uint64_t v30 = sub_24E2F0D20();
    uint64_t v31 = v32;
    (*(void (**)(char *, uint64_t))(v60 + 8))(v9, v20);
  }
  uint64_t v33 = (uint64_t)v56;
  sub_24E2F0C60();
  if (v22((char *)v33, 1, v20) == 1)
  {
    sub_24E296710(v33, &qword_2698CA618);
    uint64_t v34 = 0;
    uint64_t v35 = 0;
  }
  else
  {
    uint64_t v36 = sub_24E2F0CF0();
    uint64_t v37 = v33;
    uint64_t v34 = v36;
    uint64_t v35 = v38;
    (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v37, v20);
  }
  uint64_t v39 = (uint64_t)v59;
  sub_24E2F0C60();
  if (v22((char *)v39, 1, v20) == 1)
  {
    uint64_t result = sub_24E296710(v39, &qword_2698CA618);
    uint64_t v41 = 0;
    uint64_t v42 = 0;
  }
  else
  {
    uint64_t v41 = sub_24E2F0CD0();
    uint64_t v43 = v39;
    uint64_t v42 = v44;
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v60 + 8))(v43, v20);
  }
  uint64_t v45 = v57;
  *a1 = v58;
  a1[1] = v45;
  uint64_t v46 = v54;
  a1[2] = v55;
  a1[3] = v46;
  uint64_t v47 = v52;
  a1[4] = (uint64_t)v53;
  a1[5] = v47;
  uint64_t v48 = v50;
  a1[6] = v51;
  a1[7] = v48;
  a1[8] = v30;
  a1[9] = v31;
  a1[10] = v34;
  a1[11] = v35;
  a1[12] = v41;
  a1[13] = v42;
  return result;
}

uint64_t sub_24E294D90()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_2698CA620);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_24E2F0C50();
  if (*(void *)(v3 + 16))
  {
    uint64_t v4 = *(void *)(v3 + 32);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRelease();
    sub_24E2F0A90();
    uint64_t v5 = sub_24E2F0AA0();
    uint64_t v6 = *(void *)(v5 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v2, 1, v5) == 1)
    {
      sub_24E296710((uint64_t)v2, (uint64_t *)&unk_2698CA620);
    }
    else
    {
      uint64_t v4 = sub_24E2F0A80();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v2, v5);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v4;
}

uint64_t sub_24E294F04(uint64_t a1, uint64_t a2)
{
  return sub_24E295278(a1, a2, MEMORY[0x263F07B58]);
}

uint64_t sub_24E294F2C(uint64_t a1, id *a2)
{
  uint64_t result = sub_24E2F0EA0();
  *a2 = 0;
  return result;
}

uint64_t sub_24E294FA4(uint64_t a1, id *a2)
{
  char v3 = sub_24E2F0EB0();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_24E295024@<X0>(uint64_t *a1@<X8>)
{
  sub_24E2F0EC0();
  uint64_t v2 = sub_24E2F0E90();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_24E29506C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_24E2F0EC0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_24E295098(uint64_t a1)
{
  uint64_t v2 = sub_24E29686C(&qword_2698CA688, type metadata accessor for SPBeaconType);
  uint64_t v3 = sub_24E29686C((unint64_t *)&unk_2698CA690, type metadata accessor for SPBeaconType);
  uint64_t v4 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_24E295154@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_24E2F0E90();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_24E29519C(uint64_t a1)
{
  uint64_t v2 = sub_24E29686C(&qword_2698CA678, type metadata accessor for SPBeaconLocationSource);
  uint64_t v3 = sub_24E29686C(&qword_2698CA680, type metadata accessor for SPBeaconLocationSource);
  uint64_t v4 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_24E295258(uint64_t a1, uint64_t a2)
{
  return sub_24E295278(a1, a2, MEMORY[0x263F8D308]);
}

uint64_t sub_24E295278(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_24E2F0EC0();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_24E2952BC()
{
  sub_24E2F0EC0();
  sub_24E2F0F20();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24E295310()
{
  sub_24E2F0EC0();
  sub_24E2F14A0();
  sub_24E2F0F20();
  uint64_t v0 = sub_24E2F14D0();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_24E295384()
{
  uint64_t v0 = sub_24E2F0EC0();
  uint64_t v2 = v1;
  if (v0 == sub_24E2F0EC0() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_24E2F1430();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

unint64_t sub_24E295410(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698CA630);
  uint64_t v2 = (void *)sub_24E2F1380();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_24E295524(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_24E295524(uint64_t a1, uint64_t a2)
{
  sub_24E2F14A0();
  sub_24E2F0F20();
  uint64_t v4 = sub_24E2F14D0();
  return sub_24E29559C(a1, a2, v4);
}

unint64_t sub_24E29559C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (sub_24E2F1430() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      unint64_t i = (i + 1) & v12;
      if ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
      {
        uint64_t v13 = (void *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (sub_24E2F1430() & 1) == 0)
        {
          for (unint64_t i = (i + 1) & v12; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v12)
          {
            double v15 = (void *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2) {
              break;
            }
            if (sub_24E2F1430()) {
              break;
            }
          }
        }
      }
    }
  }
  return i;
}

uint64_t sub_24E2956E4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24E295A44(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

unint64_t sub_24E295704()
{
  unint64_t result = qword_2698CA508;
  if (!qword_2698CA508)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2698CA508);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_24E295788()
{
  unint64_t result = qword_2698CA518;
  if (!qword_2698CA518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CA518);
  }
  return result;
}

uint64_t sub_24E2957DC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24E295D10(a1, a2, a3, *v3, &qword_2698CA528);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_24E295804(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24E295D10(a1, a2, a3, *v3, &qword_2698CA530);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_24E29582C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24E295BC0(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_24E29584C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24E295D10(a1, a2, a3, *v3, &qword_2698CA540);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_24E295874(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24E296118(a1, a2, a3, (void *)*v3, &qword_2698CA5F8, (uint64_t (*)(void))type metadata accessor for Item);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_24E2958B0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24E296360(a1, a2, a3, (void *)*v3, &qword_2698CA600, &qword_2698CA608);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_24E2958E0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24E296118(a1, a2, a3, (void *)*v3, &qword_2698CA5F0, (uint64_t (*)(void))type metadata accessor for ItemEntity);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_24E29591C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24E296360(a1, a2, a3, (void *)*v3, &qword_2698CA5E0, &qword_2698CA5E8);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_24E29594C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24E296118(a1, a2, a3, (void *)*v3, &qword_2698CA5C0, (uint64_t (*)(void))type metadata accessor for Person);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_24E295988(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24E296360(a1, a2, a3, (void *)*v3, &qword_2698CA5C8, &qword_2698CA5D0);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_24E2959B8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24E296118(a1, a2, a3, (void *)*v3, &qword_2698CA5B8, (uint64_t (*)(void))type metadata accessor for PersonEntity);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_24E2959F4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24E296360(a1, a2, a3, (void *)*v3, &qword_2698CA5A8, &qword_2698CA5B0);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_24E295A24(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_24E2965A0(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_24E295A44(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698CB740);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  size_t v14 = 24 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_24E2F1390();
  __break(1u);
  return result;
}

uint64_t sub_24E295BC0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698CA538);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_24E2F1390();
  __break(1u);
  return result;
}

uint64_t sub_24E295D10(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  int64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    int64_t v10 = *((void *)a4 + 2);
  }
  else {
    int64_t v10 = v8;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    size_t v11 = (char *)swift_allocObject();
    size_t v12 = _swift_stdlib_malloc_size(v11);
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    size_t v11 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v11 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v11 != a4 || v13 >= &v14[v9]) {
      memmove(v13, v14, v9);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v9] || v13 >= &v14[v9])
  {
    memcpy(v13, v14, v9);
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  uint64_t result = sub_24E2F1390();
  __break(1u);
  return result;
}

uint64_t sub_24E295E5C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698CA610);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_24E2F1390();
  __break(1u);
  return result;
}

uint64_t sub_24E295FC8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698CA5D8);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_24E2F1390();
  __break(1u);
  return result;
}

uint64_t sub_24E296118(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (char *)v16 + v20;
  double v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  uint64_t v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_24E2F1390();
  __break(1u);
  return result;
}

uint64_t sub_24E296360(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v13 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (char *)v16 + v20;
  double v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  uint64_t v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_24E2F1390();
  __break(1u);
  return result;
}

uint64_t sub_24E2965A0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698CA520);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_24E2F1390();
  __break(1u);
  return result;
}

uint64_t sub_24E296710(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void type metadata accessor for SPBeaconLocationSource(uint64_t a1)
{
}

void type metadata accessor for SPBeaconType(uint64_t a1)
{
}

void sub_24E296794(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_24E2967DC()
{
  return sub_24E29686C(&qword_2698CA648, type metadata accessor for SPBeaconType);
}

uint64_t sub_24E296824()
{
  return sub_24E29686C(&qword_2698CA650, type metadata accessor for SPBeaconType);
}

uint64_t sub_24E29686C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24E2968B4()
{
  return sub_24E29686C(&qword_2698CA658, type metadata accessor for SPBeaconType);
}

uint64_t sub_24E2968FC()
{
  return sub_24E29686C(&qword_2698CA660, type metadata accessor for SPBeaconLocationSource);
}

uint64_t sub_24E296944()
{
  return sub_24E29686C(&qword_2698CA668, type metadata accessor for SPBeaconLocationSource);
}

uint64_t sub_24E29698C()
{
  return sub_24E29686C(&qword_2698CA670, type metadata accessor for SPBeaconLocationSource);
}

uint64_t SPBeaconLocation.fmuiPublishedLocation(label:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_24E2F0930();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *a1;
  uint64_t v10 = a1[1];
  uint64_t v11 = a1[3];
  uint64_t v42 = a1[2];
  uint64_t v43 = v9;
  uint64_t v12 = a1[4];
  uint64_t v13 = a1[5];
  uint64_t v40 = a1[6];
  uint64_t v41 = v12;
  uint64_t v14 = a1[8];
  uint64_t v15 = a1[9];
  uint64_t v34 = a1[7];
  uint64_t v35 = v15;
  uint64_t v38 = a1[10];
  uint64_t v39 = v14;
  uint64_t v16 = a1[11];
  uint64_t v17 = a1[12];
  uint64_t v18 = a1[13];
  uint64_t v36 = v16;
  uint64_t v37 = v17;
  objc_msgSend(v2, sel_latitude);
  double v20 = v19;
  objc_msgSend(v2, sel_longitude);
  double v22 = v21;
  objc_msgSend(v2, sel_horizontalAccuracy);
  double v24 = v23;
  id v25 = objc_msgSend(v2, sel_timestamp);
  sub_24E2F0920();

  id v26 = objc_allocWithZone(MEMORY[0x263F00A50]);
  uint64_t v27 = (void *)sub_24E2F08E0();
  id v28 = objc_msgSend(v26, sel_initWithCoordinate_altitude_horizontalAccuracy_verticalAccuracy_course_courseAccuracy_speed_speedAccuracy_timestamp_, v27, v20, v22, 0.0, v24, 0.0, 0.0, 0.0, 0.0, 0);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *(void *)a2 = v28;
  *(_WORD *)(a2 + 8) = 5;
  *(_DWORD *)(a2 + 10) = v44;
  *(_WORD *)(a2 + 14) = v45;
  *(void *)(a2 + 16) = v43;
  *(void *)(a2 + 24) = v10;
  *(void *)(a2 + 32) = v42;
  *(void *)(a2 + 40) = v11;
  *(void *)(a2 + 48) = v41;
  *(void *)(a2 + 56) = v13;
  uint64_t v30 = v34;
  uint64_t v29 = v35;
  *(void *)(a2 + 64) = v40;
  *(void *)(a2 + 72) = v30;
  *(void *)(a2 + 80) = v39;
  *(void *)(a2 + 88) = v29;
  uint64_t v31 = v36;
  *(void *)(a2 + 96) = v38;
  *(void *)(a2 + 104) = v31;
  *(void *)(a2 + 112) = v37;
  *(void *)(a2 + 120) = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Bool.sortOrder.getter(int a1)
{
  return ~a1 & 1;
}

uint64_t Either.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
  type metadata accessor for Either();
  return swift_storeEnumTagMultiPayload();
}

uint64_t type metadata accessor for Either()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t Either.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1);
  type metadata accessor for Either();
  return swift_storeEnumTagMultiPayload();
}

uint64_t _s10FindMyCore6EitherO4leftxSgvg_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v6);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = v9;
  if (EnumCaseMultiPayload == 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a2, 1, 1, v8);
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, a1);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(a2, v6, v8);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(a2, 0, 1, v8);
  }
}

uint64_t _s10FindMyCore6EitherO5rightq_Sgvg_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v6);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = v9;
  if (EnumCaseMultiPayload == 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(a2, v6, v8);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(a2, 0, 1, v8);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a2, 1, 1, v8);
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, a1);
  }
}

uint64_t static Either.first(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  MEMORY[0x270FA5388](a1);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v7 + 16))(v6);
  return Either.init(_:)((uint64_t)v6, a2, a3);
}

uint64_t static Either.second(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  MEMORY[0x270FA5388](a1);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v7 + 16))(v6);
  return Either.init(_:)((uint64_t)v6, a2, a3);
}

uint64_t static Either<>.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v36 = a5;
  uint64_t v37 = a6;
  uint64_t v42 = a1;
  uint64_t v43 = a2;
  uint64_t v40 = *(void *)(a4 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](a1);
  uint64_t v35 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v34 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = v11;
  uint64_t v12 = type metadata accessor for Either();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v34 - v17;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v38 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  double v22 = (char *)&v34 - v21;
  double v23 = (char *)&v34 + *(int *)(v20 + 48) - v21;
  double v24 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v24((char *)&v34 - v21, v42, v12);
  v24(v23, v43, v12);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v24(v16, (uint64_t)v22, v12);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v26 = v40;
      uint64_t v25 = v41;
      uint64_t v27 = v35;
      (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v35, v23, v41);
      char v28 = sub_24E2F0E20();
      uint64_t v29 = *(void (**)(char *, uint64_t))(v26 + 8);
      v29(v27, v25);
      v29(v16, v25);
      goto LABEL_10;
    }
    (*(void (**)(char *, uint64_t))(v40 + 8))(v16, v41);
LABEL_7:
    char v28 = 0;
    uint64_t v13 = v38;
    uint64_t v12 = TupleTypeMetadata2;
    goto LABEL_10;
  }
  v24(v18, (uint64_t)v22, v12);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, uint64_t))(v39 + 8))(v18, a3);
    goto LABEL_7;
  }
  uint64_t v30 = v39;
  uint64_t v31 = v34;
  (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v34, v23, a3);
  char v28 = sub_24E2F0E20();
  uint64_t v32 = *(void (**)(char *, uint64_t))(v30 + 8);
  v32(v31, a3);
  v32(v18, a3);
LABEL_10:
  (*(void (**)(char *, uint64_t))(v13 + 8))(v22, v12);
  return v28 & 1;
}

uint64_t sub_24E297680(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static Either<>.== infix(_:_:)(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24), *(void *)(a4 - 8), *(void *)(a4 - 16));
}

uint64_t Either<>.hash(into:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v21[1] = a4;
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](a1);
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(v10 + 16);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v7);
  uint64_t v15 = (char *)v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v17, v19, a2);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v17, v5);
    sub_24E2F14B0();
    sub_24E2F0E00();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v15, v17, v11);
    sub_24E2F14B0();
    sub_24E2F0E00();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  }
}

uint64_t Either<>.hashValue.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_24E2F14A0();
  Either<>.hash(into:)((uint64_t)v7, a1, a2, a3);
  return sub_24E2F14D0();
}

uint64_t sub_24E297970(uint64_t a1, uint64_t a2)
{
  return Either<>.hashValue.getter(a1, *(void *)(a2 - 8), *(void *)(a2 - 16));
}

uint64_t sub_24E29797C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Either<>.hash(into:)(a1, a2, *(void *)(a3 - 8), *(void *)(a3 - 16));
}

uint64_t sub_24E297988(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 - 16);
  uint64_t v4 = *(void *)(a3 - 8);
  sub_24E2F14A0();
  Either<>.hash(into:)((uint64_t)v7, a2, v4, v5);
  return sub_24E2F14D0();
}

uint64_t Either<>.id.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v19[1] = a3;
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](a1);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v6 + 16);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v6);
  uint64_t v13 = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v15, v17, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v15, v4);
    sub_24E2F12A0();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v15, v9);
    sub_24E2F12A0();
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  }
}

uint64_t sub_24E297C4C()
{
  return swift_getWitnessTable();
}

uint64_t sub_24E297C98()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_24E297CBC(uint64_t a1, uint64_t a2)
{
  return Either<>.id.getter(a1, *(void *)(a2 - 8), *(void *)(a2 - 16));
}

uint64_t sub_24E297CC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 24);
}

uint64_t sub_24E297CD0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

void *sub_24E297D9C(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) - 8);
  if (*(void *)(v5 + 64) <= *(void *)(v4 + 64)) {
    uint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  else {
    uint64_t v6 = *(void *)(v5 + 64);
  }
  uint64_t v7 = (*(unsigned char *)(v5 + 80) | *(unsigned char *)(v4 + 80));
  if (v7 <= 7
    && (unint64_t)(v6 + 1) <= 0x18
    && ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v4 + 80)) & 0x100000) == 0)
  {
    unsigned int v11 = a2[v6];
    unsigned int v12 = v11 - 2;
    if (v11 >= 2)
    {
      if (v6 <= 3) {
        uint64_t v13 = v6;
      }
      else {
        uint64_t v13 = 4;
      }
      switch(v13)
      {
        case 1:
          int v14 = *a2;
          goto LABEL_21;
        case 2:
          int v14 = *(unsigned __int16 *)a2;
          goto LABEL_21;
        case 3:
          int v14 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_21;
        case 4:
          int v14 = *(_DWORD *)a2;
LABEL_21:
          int v15 = (v14 | (v12 << (8 * v6))) + 2;
          unsigned int v11 = v14 + 2;
          if (v6 < 4) {
            unsigned int v11 = v15;
          }
          break;
        default:
          break;
      }
    }
    if (v11 == 1)
    {
      (*(void (**)(void *))(v5 + 16))(a1);
      *((unsigned char *)v3 + v6) = 1;
    }
    else
    {
      (*(void (**)(void *))(v4 + 16))(a1);
      *((unsigned char *)v3 + v6) = 0;
    }
  }
  else
  {
    uint64_t v10 = *(void *)a2;
    *uint64_t v3 = *(void *)a2;
    uint64_t v3 = (void *)(v10 + ((v7 + 16) & ~v7));
    swift_retain();
  }
  return v3;
}

uint64_t sub_24E297F70(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 24) - 8;
  uint64_t v3 = *(void *)v2;
  unint64_t v4 = *(void *)(*(void *)v2 + 64);
  if (v4 <= *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64)) {
    unint64_t v4 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  }
  unsigned int v5 = a1[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a1;
        goto LABEL_12;
      case 2:
        int v8 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v8 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v8 = *(_DWORD *)a1;
LABEL_12:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1) {
    uint64_t v10 = v3;
  }
  else {
    uint64_t v10 = *(void *)(*(void *)(a2 + 16) - 8);
  }
  return (*(uint64_t (**)(void))(v10 + 8))();
}

uint64_t sub_24E2980AC(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 24);
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(*(void *)(v4 - 8) + 64) <= *(void *)(v5 + 64)) {
    uint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  else {
    uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  }
  unsigned int v7 = a2[v6];
  unsigned int v8 = v7 - 2;
  if (v7 >= 2)
  {
    if (v6 <= 3) {
      uint64_t v9 = v6;
    }
    else {
      uint64_t v9 = 4;
    }
    switch(v9)
    {
      case 1:
        int v10 = *a2;
        goto LABEL_13;
      case 2:
        int v10 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v10 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v10 = *(_DWORD *)a2;
LABEL_13:
        int v11 = (v10 | (v8 << (8 * v6))) + 2;
        unsigned int v7 = v10 + 2;
        if (v6 < 4) {
          unsigned int v7 = v11;
        }
        break;
      default:
        break;
    }
  }
  BOOL v12 = v7 == 1;
  if (v7 == 1) {
    uint64_t v5 = *(void *)(v4 - 8);
  }
  (*(void (**)(uint64_t))(v5 + 16))(a1);
  *(unsigned char *)(a1 + v6) = v12;
  return a1;
}

unsigned __int8 *sub_24E298220(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(a3 + 24);
    uint64_t v7 = *(void *)(v5 - 8);
    uint64_t v8 = *(void *)(v6 - 8);
    if (*(void *)(v8 + 64) <= *(void *)(v7 + 64)) {
      uint64_t v9 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
    }
    else {
      uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
    }
    unsigned int v10 = a1[v9];
    unsigned int v11 = v10 - 2;
    if (v10 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v12 = v9;
      }
      else {
        uint64_t v12 = 4;
      }
      switch(v12)
      {
        case 1:
          int v13 = *a1;
          goto LABEL_14;
        case 2:
          int v13 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v13 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v13 = *(_DWORD *)a1;
LABEL_14:
          int v14 = (v13 | (v11 << (8 * v9))) + 2;
          unsigned int v10 = v13 + 2;
          if (v9 < 4) {
            unsigned int v10 = v14;
          }
          break;
        default:
          break;
      }
    }
    if (v10 == 1) {
      uint64_t v15 = *(void *)(v6 - 8);
    }
    else {
      uint64_t v15 = *(void *)(*(void *)(a3 + 16) - 8);
    }
    if (v10 == 1) {
      uint64_t v16 = *(void *)(a3 + 24);
    }
    else {
      uint64_t v16 = *(void *)(a3 + 16);
    }
    (*(void (**)(unsigned __int8 *, uint64_t))(v15 + 8))(a1, v16);
    unsigned int v17 = a2[v9];
    unsigned int v18 = v17 - 2;
    if (v17 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v19 = v9;
      }
      else {
        uint64_t v19 = 4;
      }
      switch(v19)
      {
        case 1:
          int v20 = *a2;
          goto LABEL_31;
        case 2:
          int v20 = *(unsigned __int16 *)a2;
          goto LABEL_31;
        case 3:
          int v20 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_31;
        case 4:
          int v20 = *(_DWORD *)a2;
LABEL_31:
          int v21 = (v20 | (v18 << (8 * v9))) + 2;
          unsigned int v17 = v20 + 2;
          if (v9 < 4) {
            unsigned int v17 = v21;
          }
          break;
        default:
          break;
      }
    }
    BOOL v22 = v17 == 1;
    if (v17 == 1) {
      uint64_t v23 = v8;
    }
    else {
      uint64_t v23 = v7;
    }
    if (v17 == 1) {
      uint64_t v24 = v6;
    }
    else {
      uint64_t v24 = v5;
    }
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v23 + 16))(a1, a2, v24);
    a1[v9] = v22;
  }
  return a1;
}

uint64_t sub_24E298460(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 24);
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(*(void *)(v4 - 8) + 64) <= *(void *)(v5 + 64)) {
    uint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  else {
    uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  }
  unsigned int v7 = a2[v6];
  unsigned int v8 = v7 - 2;
  if (v7 >= 2)
  {
    if (v6 <= 3) {
      uint64_t v9 = v6;
    }
    else {
      uint64_t v9 = 4;
    }
    switch(v9)
    {
      case 1:
        int v10 = *a2;
        goto LABEL_13;
      case 2:
        int v10 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v10 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v10 = *(_DWORD *)a2;
LABEL_13:
        int v11 = (v10 | (v8 << (8 * v6))) + 2;
        unsigned int v7 = v10 + 2;
        if (v6 < 4) {
          unsigned int v7 = v11;
        }
        break;
      default:
        break;
    }
  }
  BOOL v12 = v7 == 1;
  if (v7 == 1) {
    uint64_t v5 = *(void *)(v4 - 8);
  }
  (*(void (**)(uint64_t))(v5 + 32))(a1);
  *(unsigned char *)(a1 + v6) = v12;
  return a1;
}

unsigned __int8 *sub_24E2985D4(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(a3 + 24);
    uint64_t v7 = *(void *)(v5 - 8);
    uint64_t v8 = *(void *)(v6 - 8);
    if (*(void *)(v8 + 64) <= *(void *)(v7 + 64)) {
      uint64_t v9 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
    }
    else {
      uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
    }
    unsigned int v10 = a1[v9];
    unsigned int v11 = v10 - 2;
    if (v10 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v12 = v9;
      }
      else {
        uint64_t v12 = 4;
      }
      switch(v12)
      {
        case 1:
          int v13 = *a1;
          goto LABEL_14;
        case 2:
          int v13 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v13 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v13 = *(_DWORD *)a1;
LABEL_14:
          int v14 = (v13 | (v11 << (8 * v9))) + 2;
          unsigned int v10 = v13 + 2;
          if (v9 < 4) {
            unsigned int v10 = v14;
          }
          break;
        default:
          break;
      }
    }
    if (v10 == 1) {
      uint64_t v15 = *(void *)(v6 - 8);
    }
    else {
      uint64_t v15 = *(void *)(*(void *)(a3 + 16) - 8);
    }
    if (v10 == 1) {
      uint64_t v16 = *(void *)(a3 + 24);
    }
    else {
      uint64_t v16 = *(void *)(a3 + 16);
    }
    (*(void (**)(unsigned __int8 *, uint64_t))(v15 + 8))(a1, v16);
    unsigned int v17 = a2[v9];
    unsigned int v18 = v17 - 2;
    if (v17 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v19 = v9;
      }
      else {
        uint64_t v19 = 4;
      }
      switch(v19)
      {
        case 1:
          int v20 = *a2;
          goto LABEL_31;
        case 2:
          int v20 = *(unsigned __int16 *)a2;
          goto LABEL_31;
        case 3:
          int v20 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_31;
        case 4:
          int v20 = *(_DWORD *)a2;
LABEL_31:
          int v21 = (v20 | (v18 << (8 * v9))) + 2;
          unsigned int v17 = v20 + 2;
          if (v9 < 4) {
            unsigned int v17 = v21;
          }
          break;
        default:
          break;
      }
    }
    BOOL v22 = v17 == 1;
    if (v17 == 1) {
      uint64_t v23 = v8;
    }
    else {
      uint64_t v23 = v7;
    }
    if (v17 == 1) {
      uint64_t v24 = v6;
    }
    else {
      uint64_t v24 = v5;
    }
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v23 + 32))(a1, a2, v24);
    a1[v9] = v22;
  }
  return a1;
}

uint64_t sub_24E298814(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v3 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  if (v3 <= *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64)) {
    unint64_t v3 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_22;
  }
  unint64_t v4 = v3 + 1;
  char v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    unsigned int v8 = ((a2 + ~(-1 << v5) - 254) >> v5) + 1;
    if (HIWORD(v8))
    {
      int v6 = *(_DWORD *)((char *)a1 + v4);
      if (!v6) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v8 > 0xFF)
    {
      int v6 = *(unsigned __int16 *)((char *)a1 + v4);
      if (!*(unsigned __int16 *)((char *)a1 + v4)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v8 < 2)
    {
LABEL_22:
      unsigned int v10 = *((unsigned __int8 *)a1 + v3);
      if (v10 >= 2) {
        return (v10 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v6 = *((unsigned __int8 *)a1 + v4);
  if (!*((unsigned char *)a1 + v4)) {
    goto LABEL_22;
  }
LABEL_14:
  int v9 = (v6 - 1) << v5;
  if (v4 > 3) {
    int v9 = 0;
  }
  if (v4)
  {
    if (v4 > 3) {
      LODWORD(v4) = 4;
    }
    switch((int)v4)
    {
      case 2:
        LODWORD(v4) = *a1;
        break;
      case 3:
        LODWORD(v4) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v4) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v4) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v4 | v9) + 255;
}

void sub_24E298958(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (*(void *)(*(void *)(*(void *)(a4 + 24) - 8) + 64) > v5) {
    unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 24) - 8) + 64);
  }
  size_t v6 = v5 + 1;
  if (a3 < 0xFF)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = ((a3 + ~(-1 << (8 * v6)) - 254) >> (8 * v6)) + 1;
    if (HIWORD(v10))
    {
      int v7 = 4;
    }
    else if (v10 >= 0x100)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 > 1;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v8 = a2 - 255;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v5 != -1)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x24E298B30);
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v7)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_24E298B58(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 24) - 8) + 64);
  if (v2 <= *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64)) {
    unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  }
  uint64_t v3 = a1[v2];
  int v4 = v3 - 2;
  if (v3 >= 2)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *a1;
        goto LABEL_12;
      case 2:
        int v6 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v6 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v6 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v7 = (v6 | (v4 << (8 * v2))) + 2;
        LODWORD(v3) = v6 + 2;
        if (v2 >= 4) {
          uint64_t v3 = v3;
        }
        else {
          uint64_t v3 = v7;
        }
        break;
      default:
        return v3;
    }
  }
  return v3;
}

void sub_24E298C24(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  if (a2 > 1)
  {
    uint64_t v6 = *(void *)(*(void *)(a3 + 24) - 8);
    if (*(void *)(v6 + 64) <= *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64)) {
      size_t v7 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
    }
    else {
      size_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a2 - 2;
    if (v7 < 4)
    {
      unsigned int v9 = v8 >> (8 * v7);
      int v10 = v8 & ~(-1 << (8 * v7));
      a1[v7] = v9 + 2;
      bzero(a1, v7);
      if (v7 == 3)
      {
        *(_WORD *)a1 = v10;
        a1[2] = BYTE2(v10);
      }
      else if (v7 == 2)
      {
        *(_WORD *)a1 = v10;
      }
      else
      {
        *a1 = v10;
      }
    }
    else
    {
      a1[v7] = 2;
      bzero(a1, v7);
      *(_DWORD *)a1 = v8;
    }
  }
  else
  {
    uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
    unint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
    if (*(void *)(v4 + 64) > v5) {
      unint64_t v5 = *(void *)(v4 + 64);
    }
    a1[v5] = a2;
  }
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

const char *Feature.FindMyUI.domain.getter()
{
  return "FindMy";
}

const char *Feature.FindMyUI.feature.getter()
{
  if (*v0) {
    return "New_People_List_Rows";
  }
  else {
    return "New_Contact_Picker";
  }
}

BOOL static Feature.FindMyUI.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t Feature.FindMyUI.hash(into:)()
{
  return sub_24E2F14B0();
}

uint64_t Feature.FindMyUI.hashValue.getter()
{
  return sub_24E2F14D0();
}

BOOL sub_24E298E4C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t _s10FindMyCore17PublishedLocationV8PriorityO9hashValueSivg_0()
{
  return sub_24E2F14D0();
}

uint64_t sub_24E298EAC()
{
  return sub_24E2F14B0();
}

uint64_t sub_24E298ED8()
{
  return sub_24E2F14D0();
}

const char *sub_24E298F1C()
{
  return "FindMy";
}

const char *sub_24E298F30()
{
  if (*v0) {
    return "New_People_List_Rows";
  }
  else {
    return "New_Contact_Picker";
  }
}

Swift::Bool __swiftcall FeatureFlagsKey.isEnabled()()
{
  uint64_t v2 = v1;
  uint64_t v3 = v0;
  uint64_t v4 = *(void *)(v0 - 8);
  uint64_t v5 = ((uint64_t (*)())MEMORY[0x270FA5388])();
  size_t v7 = (char *)&v15[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[3] = v5;
  v15[4] = v8;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v15);
  int v10 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v4 + 16);
  v10(boxed_opaque_existential_1, v2, v3);
  char v11 = sub_24E2F0670();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  v10((uint64_t *)v7, v2, v3);
  if (v11) {
    unsigned __int8 v12 = 1;
  }
  else {
    unsigned __int8 v12 = sub_24E299154();
  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  return v12 & 1;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

id sub_24E299154()
{
  sub_24E2F09C0();
  sub_24E2F12B0();
  sub_24E2F0F50();
  swift_bridgeObjectRelease();
  sub_24E2F0F50();
  sub_24E2F09D0();
  sub_24E2F12B0();
  sub_24E2F0F50();
  swift_bridgeObjectRelease();
  if (qword_2698CA480 != -1) {
    swift_once();
  }
  if (byte_2698CA8C0 == 1)
  {
    uint64_t v0 = (void *)qword_2698CA8B8;
    swift_bridgeObjectRetain();
    id v1 = v0;
    uint64_t v2 = (void *)sub_24E2F0E90();
    id v3 = objc_msgSend(v1, sel_BOOLForKey_, v2, 6243910, 0xE300000000000000);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v3;
}

unint64_t sub_24E2992B0()
{
  unint64_t result = qword_2698CA8A0;
  if (!qword_2698CA8A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CA8A0);
  }
  return result;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t _s8FindMyUIOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s8FindMyUIOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E299470);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_24E299498(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_24E2994A0(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for Feature.FindMyUI()
{
  return &type metadata for Feature.FindMyUI;
}

uint64_t FindMyUserDefaults.Key.init(rawValue:internalBuildOnly:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  *(void *)a4 = result;
  *(void *)(a4 + 8) = a2;
  *(unsigned char *)(a4 + 16) = a3;
  return result;
}

uint64_t FindMyUserDefaults.value<A>(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v9 = sub_24E2F1210();
  MEMORY[0x270FA5388](v9);
  char v11 = (char *)&v18[-1] - v10;
  char v12 = *(unsigned char *)(a1 + 16);
  if ((*(unsigned char *)(v4 + 24) & 1) == 0 && *(unsigned char *)(a1 + 16)) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 8))(a2, a3);
  }
  uint64_t v14 = *(void *)(v4 + 16);
  uint64_t v15 = *(void *)(a1 + 8);
  v18[0] = *(void *)a1;
  v18[1] = v15;
  char v19 = v12;
  (*(void (**)(uint64_t, void *, uint64_t, uint64_t))(a3 + 16))(v14, v18, a2, a3);
  uint64_t v16 = *(void *)(a2 - 8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v11, 0, 1, a2);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v16 + 32))(a4, v11, a2);
}

uint64_t sub_24E299700()
{
  id v0 = objc_msgSend(self, sel_standardUserDefaults);
  uint64_t result = sub_24E2F0620();
  qword_2698CA8A8 = 0;
  qword_2698CA8B0 = 0;
  qword_2698CA8B8 = (uint64_t)v0;
  byte_2698CA8C0 = result & 1;
  return result;
}

id static FindMyUserDefaults.standard.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2698CA480 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_2698CA8B0;
  uint64_t v3 = qword_2698CA8B8;
  id v6 = (id)qword_2698CA8B8;
  char v4 = byte_2698CA8C0;
  *(void *)a1 = qword_2698CA8A8;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = v4;
  swift_bridgeObjectRetain();
  return v6;
}

Swift::Void __swiftcall FindMyUserDefaults.resetAllValues()()
{
  if (*(void *)(v0 + 8))
  {
    id v1 = *(void **)(v0 + 16);
    id v3 = (id)sub_24E2F0E90();
    objc_msgSend(v1, sel_removePersistentDomainForName_, v3);
  }
  else
  {
    uint64_t v2 = self;
    objc_msgSend(v2, sel_resetStandardUserDefaults);
  }
}

void FindMyUserDefaults.set<A>(_:for:)(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(v2 + 24) & 1) != 0 || !*(unsigned char *)(a2 + 16))
  {
    id v3 = *(void **)(v2 + 16);
    uint64_t v4 = sub_24E2F1420();
    id v5 = (id)sub_24E2F0E90();
    objc_msgSend(v3, sel_setObject_forKey_, v4, v5);
    swift_unknownObjectRelease();
  }
}

uint64_t static Bool.defaultValue.getter()
{
  return 0;
}

id static Bool.value(from:and:)(void *a1)
{
  uint64_t v2 = (void *)sub_24E2F0E90();
  id v3 = objc_msgSend(a1, sel_BOOLForKey_, v2);

  return v3;
}

void sub_24E299994(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

void sub_24E29999C(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v4 = (void *)sub_24E2F0E90();
  LOBYTE(a1) = objc_msgSend(a1, sel_BOOLForKey_, v4);

  *a2 = (_BYTE)a1;
}

uint64_t static Int.defaultValue.getter()
{
  return 0;
}

id static Int.value(from:and:)(void *a1)
{
  uint64_t v2 = (void *)sub_24E2F0E90();
  id v3 = objc_msgSend(a1, sel_integerForKey_, v2);

  return v3;
}

void sub_24E299A60(void *a1@<X8>)
{
  *a1 = 0;
}

void sub_24E299A68(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = (void *)sub_24E2F0E90();
  id v5 = objc_msgSend(a1, sel_integerForKey_, v4);

  *a2 = v5;
}

double static Double.defaultValue.getter()
{
  return 0.0;
}

double static Double.value(from:and:)(void *a1)
{
  uint64_t v2 = (void *)sub_24E2F0E90();
  objc_msgSend(a1, sel_doubleForKey_, v2);
  double v4 = v3;

  return v4;
}

void sub_24E299B34(void *a1@<X0>, void *a2@<X8>)
{
  double v4 = (void *)sub_24E2F0E90();
  objc_msgSend(a1, sel_doubleForKey_, v4);
  uint64_t v6 = v5;

  *a2 = v6;
}

uint64_t static Optional<A>.defaultValue.getter()
{
  return 0;
}

uint64_t static Optional<A>.value(from:and:)(void *a1)
{
  uint64_t v2 = (void *)sub_24E2F0E90();
  id v3 = objc_msgSend(a1, sel_stringForKey_, v2);

  if (!v3) {
    return 0;
  }
  uint64_t v4 = sub_24E2F0EC0();

  return v4;
}

void sub_24E299C34(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

void sub_24E299C3C(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = (void *)sub_24E2F0E90();
  id v5 = objc_msgSend(a1, sel_stringForKey_, v4);

  if (v5)
  {
    uint64_t v6 = sub_24E2F0EC0();
    uint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = 0;
  }
  *a2 = v6;
  a2[1] = v8;
}

uint64_t initializeBufferWithCopyOfBuffer for FindMyUserDefaults(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

void destroy for FindMyUserDefaults(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 16);
}

uint64_t initializeWithCopy for FindMyUserDefaults(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  id v5 = v4;
  return a1;
}

uint64_t assignWithCopy for FindMyUserDefaults(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a2 + 16);
  id v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v4;
  id v6 = v4;

  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for FindMyUserDefaults(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for FindMyUserDefaults(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FindMyUserDefaults(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FindMyUserDefaults()
{
  return &type metadata for FindMyUserDefaults;
}

uint64_t _s16UniqueIdentifierVwxx()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s6HandleVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s6HandleVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t _s6HandleVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t _s6HandleVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 17)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s6HandleVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for FindMyUserDefaults.Key()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t dispatch thunk of static FindMyUserDefaultsValue.defaultValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of static FindMyUserDefaultsValue.value(from:and:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t ImageCacheRequest.fileURL(in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
  sub_24E2F0870();
  return swift_bridgeObjectRelease();
}

id ImageCacheRequest.fileExists(on:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_24E2F0880();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
  sub_24E2F0870();
  swift_bridgeObjectRelease();
  sub_24E2F0850();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  id v9 = objc_msgSend(self, sel_defaultManager);
  uint64_t v10 = (void *)sub_24E2F0E90();
  swift_bridgeObjectRelease();
  id v11 = objc_msgSend(v9, sel_fileExistsAtPath_, v10);

  return v11;
}

uint64_t ImageCacheRequest.createAndStoreIfNeeded(on:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[5] = a3;
  v4[6] = v3;
  v4[3] = a1;
  v4[4] = a2;
  uint64_t v5 = sub_24E2F0880();
  v4[7] = v5;
  v4[8] = *(void *)(v5 - 8);
  v4[9] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E29A390, 0, 0);
}

uint64_t sub_24E29A390()
{
  if (ImageCacheRequest.fileExists(on:)(v0[3], v0[4], v0[5]))
  {
    swift_task_dealloc();
    id v1 = (uint64_t (*)(void))v0[1];
    return v1();
  }
  else
  {
    uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v0[5] + 24) + **(int **)(v0[5] + 24));
    uint64_t v3 = (void *)swift_task_alloc();
    v0[10] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_24E29A508;
    uint64_t v4 = v0[5];
    uint64_t v5 = v0[4];
    return v6(v5, v4);
  }
}

uint64_t sub_24E29A508(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  v4[11] = a1;
  v4[12] = a2;
  v4[13] = v2;
  swift_task_dealloc();
  if (v2)
  {
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v4[1];
    return v5();
  }
  else
  {
    return MEMORY[0x270FA2498](sub_24E29A698, 0, 0);
  }
}

uint64_t sub_24E29A698()
{
  (*(void (**)(void))(v0[5] + 16))(v0[4]);
  sub_24E2F0870();
  swift_bridgeObjectRelease();
  id v1 = objc_msgSend(self, sel_defaultManager);
  uint64_t v2 = (void *)sub_24E2F0860();
  v0[2] = 0;
  unsigned int v3 = objc_msgSend(v1, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v2, 1, 0, v0 + 2);

  uint64_t v4 = (void *)v0[2];
  if (v3)
  {
    id v5 = v4;
    sub_24E2F0890();
    uint64_t v7 = v0[11];
    unint64_t v6 = v0[12];
    (*(void (**)(void, void))(v0[8] + 8))(v0[9], v0[7]);
    sub_24E29A8B8(v7, v6);
  }
  else
  {
    uint64_t v9 = v0[11];
    unint64_t v8 = v0[12];
    uint64_t v11 = v0[8];
    uint64_t v10 = v0[9];
    uint64_t v12 = v0[7];
    id v13 = v4;
    sub_24E2F0790();

    swift_willThrow();
    sub_24E29A8B8(v9, v8);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  }
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_24E29A8B8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

uint64_t ImageCacheDiskResult.loadFromDisk()(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24E2F0880();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(a2 + 8))(a1, a2);
  uint64_t v8 = sub_24E2F08A0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v8;
}

uint64_t ImageDiskCache.__allocating_init(cacheDirectory:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  ImageDiskCache.init(cacheDirectory:)(a1);
  return v2;
}

uint64_t ImageDiskCache.init(cacheDirectory:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24E2F0990();
  MEMORY[0x270FA5388](v4 - 8);
  swift_defaultActor_initialize();
  uint64_t v5 = qword_2698CA950;
  sub_24E2F0660();
  sub_24E2F0980();
  *(void *)(v1 + v5) = sub_24E2F0640();
  sub_24E2F0D60();
  uint64_t v6 = v1 + qword_2698CA960;
  uint64_t v7 = sub_24E2F0880();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v6, a1, v7);
  return v2;
}

uint64_t sub_24E29ABD0(uint64_t a1)
{
  v2[3] = a1;
  v2[4] = v1;
  uint64_t v3 = *v1;
  v2[5] = *v1;
  uint64_t v4 = *(void *)(v3 + 80);
  v2[6] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v2[7] = v5;
  v2[8] = *(void *)(v5 + 64);
  v2[9] = swift_task_alloc();
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  uint64_t v6 = sub_24E2F0D70();
  v2[13] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v2[14] = v7;
  v2[15] = *(void *)(v7 + 64);
  v2[16] = swift_task_alloc();
  v2[17] = swift_task_alloc();
  uint64_t v8 = sub_24E2F0880();
  v2[18] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v2[19] = v9;
  v2[20] = *(void *)(v9 + 64);
  v2[21] = swift_task_alloc();
  v2[22] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E29ADDC, v1, 0);
}

uint64_t sub_24E29ADDC()
{
  v75 = v0;
  uint64_t v72 = v0[4] + qword_2698CA958;
  uint64_t v1 = sub_24E2F0D50();
  os_log_type_t v2 = sub_24E2F11E0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_24E292000, v1, v2, "preload(requests:)", v3, 2u);
    MEMORY[0x253338AC0](v3, -1, -1);
  }
  uint64_t v4 = v0[22];
  uint64_t v6 = v0[18];
  uint64_t v5 = v0[19];
  uint64_t v7 = v0[17];
  uint64_t v8 = v0[13];
  uint64_t v9 = v0[14];
  uint64_t v70 = v0[6];
  uint64_t v10 = v0[4];

  uint64_t v60 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  v60(v4, v10 + qword_2698CA960, v6);
  v59 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
  v59(v7, v72, v8);
  uint64_t v11 = swift_bridgeObjectRetain();
  if (MEMORY[0x253338020](v11, v70))
  {
    uint64_t v12 = 0;
    uint64_t v54 = v0[8];
    uint64_t v56 = v0[5];
    uint64_t v69 = v0[7];
    v71 = (void (**)(uint64_t, uint64_t, uint64_t))(v69 + 16);
    id v13 = (void (**)(unint64_t, uint64_t, uint64_t))(v69 + 32);
    uint64_t v57 = v0[14];
    uint64_t v58 = v0[19];
    uint64_t v55 = (void (**)(uint64_t, uint64_t))(v69 + 8);
    do
    {
      char v29 = sub_24E2F1090();
      sub_24E2F1060();
      if (v29)
      {
        uint64_t v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(v69 + 16);
        v30(v0[12], v0[3]+ ((*(unsigned __int8 *)(v69 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80))+ *(void *)(v69 + 72) * v12, v0[6]);
        uint64_t v31 = v12 + 1;
        if (__OFADD__(v12, 1)) {
          goto LABEL_14;
        }
      }
      else
      {
        uint64_t result = sub_24E2F12C0();
        if (v54 != 8)
        {
          __break(1u);
          return result;
        }
        uint64_t v47 = result;
        uint64_t v48 = v0[12];
        uint64_t v49 = v0[6];
        v0[2] = v47;
        uint64_t v30 = *v71;
        (*v71)(v48, (uint64_t)(v0 + 2), v49);
        swift_unknownObjectRelease();
        uint64_t v31 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_14:
          __break(1u);
          break;
        }
      }
      unint64_t v32 = v0[11];
      uint64_t v33 = v0[10];
      v73 = v30;
      uint64_t v34 = v0[6];
      uint64_t v35 = *v13;
      (*v13)(v32, v0[12], v34);
      v73(v33, v32, v34);
      uint64_t v36 = sub_24E2F0D50();
      os_log_type_t v37 = sub_24E2F11E0();
      BOOL v38 = os_log_type_enabled(v36, v37);
      uint64_t v39 = v0[10];
      uint64_t v67 = v31;
      uint64_t v68 = v12;
      v66 = v35;
      if (v38)
      {
        uint64_t v40 = v0[9];
        uint64_t v41 = v0[6];
        uint64_t v42 = swift_slowAlloc();
        uint64_t v43 = swift_slowAlloc();
        v74[0] = v43;
        *(_DWORD *)uint64_t v42 = 136315394;
        *(void *)(v42 + 4) = sub_24E29CA04(0xD000000000000012, 0x800000024E2F6830, v74);
        *(_WORD *)(v42 + 12) = 2080;
        v73(v40, v39, v41);
        uint64_t v44 = sub_24E2F0EE0();
        *(void *)(v42 + 14) = sub_24E29CA04(v44, v45, v74);
        swift_bridgeObjectRelease();
        v65 = *v55;
        (*v55)(v39, v41);
        _os_log_impl(&dword_24E292000, v36, v37, "%s %s", (uint8_t *)v42, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x253338AC0](v43, -1, -1);
        MEMORY[0x253338AC0](v42, -1, -1);
      }
      else
      {
        uint64_t v14 = v0[6];

        v65 = *v55;
        (*v55)(v39, v14);
      }
      uint64_t v15 = v0[21];
      uint64_t v16 = v0[22];
      uint64_t v17 = v0[18];
      uint64_t v18 = v0[15];
      uint64_t v19 = v0[16];
      uint64_t v20 = v0[13];
      uint64_t v21 = v0[11];
      uint64_t v63 = v21;
      uint64_t v22 = v0[9];
      uint64_t v62 = v22;
      uint64_t v61 = v0[8];
      uint64_t v23 = v0[6];
      uint64_t v64 = v0[3];
      v59(v19, v0[17], v20);
      v73(v22, v21, v23);
      v60(v15, v16, v17);
      unint64_t v24 = (*(unsigned __int8 *)(v57 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
      unint64_t v25 = (v18 + *(unsigned __int8 *)(v69 + 80) + v24) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80);
      unint64_t v26 = (v61 + *(unsigned __int8 *)(v58 + 80) + v25) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
      uint64_t v27 = swift_allocObject();
      *(void *)(v27 + 16) = v23;
      *(_OWORD *)(v27 + 24) = *(_OWORD *)(v56 + 88);
      *(void *)(v27 + 40) = *(void *)(v56 + 104);
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v57 + 32))(v27 + v24, v19, v20);
      unint64_t v28 = v27 + v25;
      id v13 = (void (**)(unint64_t, uint64_t, uint64_t))(v69 + 32);
      v66(v28, v62, v23);
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v58 + 32))(v27 + v26, v15, v17);
      sub_24E2F0650();
      swift_release();
      swift_release();
      v65(v63, v23);
      uint64_t v12 = v68 + 1;
    }
    while (v67 != MEMORY[0x253338020](v64, v23));
  }
  swift_bridgeObjectRelease();
  uint64_t v50 = v0[22];
  uint64_t v51 = v0[18];
  uint64_t v52 = v0[19];
  (*(void (**)(void, void))(v0[14] + 8))(v0[17], v0[13]);
  (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v50, v51);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v53 = (uint64_t (*)(void))v0[1];
  return v53();
}

uint64_t sub_24E29B4C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[7] = a4;
  v6[8] = a6;
  v6[5] = a2;
  v6[6] = a3;
  v6[4] = a1;
  uint64_t v8 = sub_24E2F0880();
  v6[9] = v8;
  v6[10] = *(void *)(v8 - 8);
  v6[11] = swift_task_alloc();
  v6[12] = swift_task_alloc();
  v6[13] = *(void *)(a4 - 8);
  v6[14] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E29B5EC, 0, 0);
}

uint64_t sub_24E29B5EC()
{
  uint64_t v34 = v0;
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[10];
  uint64_t v4 = v0[6];
  (*(void (**)(void, void, void))(v0[13] + 16))(v0[14], v0[5], v0[7]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v4, v2);
  uint64_t v5 = sub_24E2F0D50();
  os_log_type_t v6 = sub_24E2F11E0();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v31 = v0[13];
    uint64_t v7 = v0[11];
    uint64_t v26 = v0[12];
    uint64_t v8 = v0[8];
    uint64_t v29 = v0[9];
    uint64_t v30 = v0[10];
    uint64_t v9 = v0[7];
    uint64_t v27 = v9;
    uint64_t v28 = v0[14];
    uint64_t v10 = swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    uint64_t v33 = v32;
    *(_DWORD *)uint64_t v10 = 136315394;
    v0[2] = sub_24E29CA04(0xD000000000000012, 0x800000024E2F6830, &v33);
    sub_24E2F1220();
    *(_WORD *)(v10 + 12) = 2080;
    (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v9, v8);
    sub_24E2F0870();
    swift_bridgeObjectRelease();
    sub_24E29DBA4();
    uint64_t v11 = sub_24E2F1410();
    unint64_t v13 = v12;
    uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
    v14(v7, v29);
    v0[3] = sub_24E29CA04(v11, v13, &v33);
    sub_24E2F1220();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v28, v27);
    v14(v26, v29);
    _os_log_impl(&dword_24E292000, v5, v6, "%s Will CreateAndStore %s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x253338AC0](v32, -1, -1);
    MEMORY[0x253338AC0](v10, -1, -1);
  }
  else
  {
    uint64_t v15 = v0[13];
    uint64_t v16 = v0[14];
    uint64_t v17 = v0[12];
    uint64_t v18 = v0[9];
    uint64_t v19 = v0[10];
    uint64_t v20 = v0[7];

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v16, v20);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
  }
  uint64_t v21 = (void *)swift_task_alloc();
  v0[15] = v21;
  *uint64_t v21 = v0;
  v21[1] = sub_24E29DC5C;
  uint64_t v22 = v0[7];
  uint64_t v23 = v0[8];
  uint64_t v24 = v0[6];
  return ImageCacheRequest.createAndStoreIfNeeded(on:)(v24, v22, v23);
}

uint64_t sub_24E29B934(uint64_t a1, uint64_t a2)
{
  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  uint64_t v4 = *v2;
  v3[7] = *v2;
  uint64_t v5 = sub_24E2F0D70();
  v3[8] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v3[9] = v6;
  v3[10] = *(void *)(v6 + 64);
  v3[11] = swift_task_alloc();
  uint64_t v7 = sub_24E2F0880();
  v3[12] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v3[13] = v8;
  v3[14] = *(void *)(v8 + 64);
  v3[15] = swift_task_alloc();
  v3[16] = swift_task_alloc();
  v3[17] = swift_task_alloc();
  uint64_t v9 = *(void *)(v4 + 80);
  v3[18] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v3[19] = v10;
  v3[20] = *(void *)(v10 + 64);
  v3[21] = swift_task_alloc();
  v3[22] = swift_task_alloc();
  v3[23] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E29BB40, v2, 0);
}

uint64_t sub_24E29BB40()
{
  unint64_t v45 = v0;
  uint64_t v1 = v0[6] + qword_2698CA958;
  uint64_t v40 = (void (**)(uint64_t, uint64_t, uint64_t))(v0[19] + 16);
  uint64_t v39 = *v40;
  (*v40)(v0[23], v0[5], v0[18]);
  uint64_t v38 = v1;
  uint64_t v2 = sub_24E2F0D50();
  os_log_type_t v3 = sub_24E2F11E0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v5 = v0[22];
    uint64_t v4 = v0[23];
    uint64_t v6 = v0[18];
    uint64_t v37 = v0[19];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v41 = swift_slowAlloc();
    uint64_t v44 = v41;
    *(_DWORD *)uint64_t v7 = 136315394;
    v0[2] = sub_24E29CA04(0x7165722864616F6CLL, 0xEE00293A74736575, &v44);
    sub_24E2F1220();
    *(_WORD *)(v7 + 12) = 2080;
    v39(v5, v4, v6);
    uint64_t v8 = sub_24E2F0EE0();
    v0[3] = sub_24E29CA04(v8, v9, &v44);
    sub_24E2F1220();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v4, v6);
    _os_log_impl(&dword_24E292000, v2, v3, "%s %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x253338AC0](v41, -1, -1);
    MEMORY[0x253338AC0](v7, -1, -1);
  }
  else
  {
    uint64_t v10 = v0[23];
    uint64_t v11 = v0[18];
    uint64_t v12 = v0[19];

    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  }
  uint64_t v13 = v0[21];
  uint64_t v35 = v0[20];
  uint64_t v33 = v0[19];
  uint64_t v31 = v0[18];
  uint64_t v29 = v0[17];
  uint64_t v42 = v0[16];
  uint64_t v14 = v0[13];
  uint64_t v15 = v0[11];
  uint64_t v16 = v0[12];
  uint64_t v34 = v15;
  uint64_t v17 = v0[9];
  uint64_t v32 = v0[10];
  uint64_t v18 = v0[8];
  uint64_t v36 = (void *)v0[7];
  uint64_t v30 = v0[5];
  uint64_t v19 = *(void (**)(void))(v14 + 16);
  v19();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v15, v38, v18);
  v39(v13, v30, v31);
  ((void (*)(uint64_t, uint64_t, uint64_t))v19)(v42, v29, v16);
  unint64_t v20 = (*(unsigned __int8 *)(v17 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  unint64_t v21 = (v32 + *(unsigned __int8 *)(v33 + 80) + v20) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  unint64_t v22 = (v35 + *(unsigned __int8 *)(v14 + 80) + v21) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v23 = (char *)swift_allocObject();
  v0[24] = v23;
  *((void *)v23 + 2) = v31;
  uint64_t v24 = v36[11];
  v0[25] = v24;
  *((void *)v23 + 3) = v24;
  uint64_t v25 = v36[12];
  v0[26] = v25;
  *((void *)v23 + 4) = v25;
  uint64_t v26 = v36[13];
  v0[27] = v26;
  *((void *)v23 + 5) = v26;
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 32))(&v23[v20], v34, v18);
  (*(void (**)(char *, uint64_t, uint64_t))(v33 + 32))(&v23[v21], v13, v31);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 32))(&v23[v22], v42, v16);
  uint64_t v43 = (uint64_t (*)(void *, char *))((int)*MEMORY[0x263F3C9D0] + MEMORY[0x263F3C9D0]);
  uint64_t v27 = (void *)swift_task_alloc();
  v0[28] = v27;
  *uint64_t v27 = v0;
  v27[1] = sub_24E29BFB0;
  return v43(&unk_2698CA990, v23);
}

uint64_t sub_24E29BFB0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 232) = v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v3 = *(void *)(v2 + 48);
  if (v0) {
    uint64_t v4 = sub_24E29C24C;
  }
  else {
    uint64_t v4 = sub_24E29C0F8;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_24E29C0F8()
{
  uint64_t v1 = v0[27];
  uint64_t v2 = v0[25];
  uint64_t v3 = v0[17];
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[12];
  uint64_t v6 = v0[13];
  (*(void (**)(void))(v0[26] + 16))(v0[18]);
  sub_24E2F0870();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v4, v2, v1);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v3, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_24E29C24C()
{
  (*(void (**)(void, void))(v0[13] + 8))(v0[17], v0[12]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_24E29C324(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[7] = a4;
  v6[8] = a6;
  v6[5] = a2;
  v6[6] = a3;
  v6[4] = a1;
  uint64_t v8 = sub_24E2F0880();
  v6[9] = v8;
  v6[10] = *(void *)(v8 - 8);
  v6[11] = swift_task_alloc();
  v6[12] = swift_task_alloc();
  v6[13] = *(void *)(a4 - 8);
  v6[14] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E29C450, 0, 0);
}

uint64_t sub_24E29C450()
{
  uint64_t v34 = v0;
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[10];
  uint64_t v4 = v0[6];
  (*(void (**)(void, void, void))(v0[13] + 16))(v0[14], v0[5], v0[7]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v4, v2);
  uint64_t v5 = sub_24E2F0D50();
  os_log_type_t v6 = sub_24E2F11E0();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v31 = v0[13];
    uint64_t v7 = v0[11];
    uint64_t v26 = v0[12];
    uint64_t v8 = v0[8];
    uint64_t v29 = v0[9];
    uint64_t v30 = v0[10];
    uint64_t v9 = v0[7];
    uint64_t v27 = v9;
    uint64_t v28 = v0[14];
    uint64_t v10 = swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    uint64_t v33 = v32;
    *(_DWORD *)uint64_t v10 = 136315394;
    v0[2] = sub_24E29CA04(0x7165722864616F6CLL, 0xEE00293A74736575, &v33);
    sub_24E2F1220();
    *(_WORD *)(v10 + 12) = 2080;
    (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v9, v8);
    sub_24E2F0870();
    swift_bridgeObjectRelease();
    sub_24E29DBA4();
    uint64_t v11 = sub_24E2F1410();
    unint64_t v13 = v12;
    uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
    v14(v7, v29);
    v0[3] = sub_24E29CA04(v11, v13, &v33);
    sub_24E2F1220();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v28, v27);
    v14(v26, v29);
    _os_log_impl(&dword_24E292000, v5, v6, "%s Will CreateAndStore %s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x253338AC0](v32, -1, -1);
    MEMORY[0x253338AC0](v10, -1, -1);
  }
  else
  {
    uint64_t v15 = v0[13];
    uint64_t v16 = v0[14];
    uint64_t v17 = v0[12];
    uint64_t v18 = v0[9];
    uint64_t v19 = v0[10];
    uint64_t v20 = v0[7];

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v16, v20);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
  }
  unint64_t v21 = (void *)swift_task_alloc();
  v0[15] = v21;
  *unint64_t v21 = v0;
  v21[1] = sub_24E29C7A0;
  uint64_t v22 = v0[7];
  uint64_t v23 = v0[8];
  uint64_t v24 = v0[6];
  return ImageCacheRequest.createAndStoreIfNeeded(on:)(v24, v22, v23);
}

uint64_t sub_24E29C7A0()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t ImageDiskCache.deinit()
{
  uint64_t v1 = v0 + qword_2698CA960;
  uint64_t v2 = sub_24E2F0880();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  uint64_t v3 = v0 + qword_2698CA958;
  uint64_t v4 = sub_24E2F0D70();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_defaultActor_destroy();
  return v0;
}

uint64_t ImageDiskCache.__deallocating_deinit()
{
  ImageDiskCache.deinit();
  return MEMORY[0x270FA2418](v0);
}

uint64_t ImageDiskCache.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_24E29C9E8()
{
  return ImageDiskCache.unownedExecutor.getter();
}

uint64_t sub_24E29CA04(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_24E29CAD8(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_24E29DBFC((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_24E29DBFC((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_24E29CAD8(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_24E2F1230();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_24E29CC94(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_24E2F12E0();
  if (!v8)
  {
    sub_24E2F1350();
    __break(1u);
LABEL_17:
    uint64_t result = sub_24E2F1390();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_24E29CC94(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_24E29CD2C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_24E29CEA4(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_24E29CEA4(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_24E29CD2C(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_24E2BE928(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_24E2F1280();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_24E2F1350();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_24E2F0F60();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_24E2F1390();
    __break(1u);
LABEL_14:
    uint64_t result = sub_24E2F1350();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

uint64_t sub_24E29CEA4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAA38);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_24E2F1390();
  __break(1u);
  return result;
}

uint64_t sub_24E29CFF8()
{
  uint64_t v3 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = *(void *)(sub_24E2F0D70() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (v6 + *(void *)(v5 + 64) + *(unsigned __int8 *)(*(void *)(v3 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80);
  uint64_t v8 = *(void *)(*(void *)(v3 - 8) + 64);
  uint64_t v9 = *(unsigned __int8 *)(*(void *)(sub_24E2F0880() - 8) + 80);
  unint64_t v10 = v7 + v8 + v9;
  uint64_t v11 = (uint64_t)v0 + v6;
  uint64_t v12 = (uint64_t)v0 + v7;
  uint64_t v13 = (uint64_t)v0 + (v10 & ~v9);
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v14;
  *uint64_t v14 = v1;
  v14[1] = sub_24E29DC58;
  return sub_24E29B4C0(v11, v12, v13, v3, v2, v4);
}

uint64_t objectdestroyTm()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v17 = v1;
  uint64_t v18 = sub_24E2F0D70();
  uint64_t v2 = *(void *)(v18 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = *(void *)(v1 - 8);
  uint64_t v6 = v5;
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = (v4 + *(void *)(v2 + 64) + v7) & ~v7;
  uint64_t v9 = *(void *)(v5 + 64);
  uint64_t v10 = sub_24E2F0880();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = (v8 + v9 + v12) & ~v12;
  uint64_t v16 = v13 + *(void *)(v11 + 64);
  uint64_t v14 = v3 | v12 | v7 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v18);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v8, v17);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v0 + v13, v10);
  return MEMORY[0x270FA0238](v0, v16, v14);
}

uint64_t sub_24E29D384()
{
  uint64_t v3 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = *(void *)(sub_24E2F0D70() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (v6 + *(void *)(v5 + 64) + *(unsigned __int8 *)(*(void *)(v3 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80);
  uint64_t v8 = *(void *)(*(void *)(v3 - 8) + 64);
  uint64_t v9 = *(unsigned __int8 *)(*(void *)(sub_24E2F0880() - 8) + 80);
  unint64_t v10 = v7 + v8 + v9;
  uint64_t v11 = (uint64_t)v0 + v6;
  uint64_t v12 = (uint64_t)v0 + v7;
  uint64_t v13 = (uint64_t)v0 + (v10 & ~v9);
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v14;
  *uint64_t v14 = v1;
  v14[1] = sub_24E29DC58;
  return sub_24E29C324(v11, v12, v13, v3, v2, v4);
}

uint64_t dispatch thunk of ImageCacheRequest.fileName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ImageCacheRequest.generateData()(uint64_t a1, uint64_t a2)
{
  unint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 24) + **(int **)(a2 + 24));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_24E29D63C;
  return v7(a1, a2);
}

uint64_t sub_24E29D63C(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *v2;
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
  return v5(a1, a2);
}

uint64_t dispatch thunk of ImageCacheDiskResult.fullImageURL.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ImageCacheDiskResult.init(fullImageURL:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_24E29D774()
{
  uint64_t result = sub_24E2F0880();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_24E2F0D70();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_initClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t type metadata accessor for ImageDiskCache()
{
  return swift_getGenericMetadata();
}

uint64_t method lookup function for ImageDiskCache(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ImageDiskCache);
}

uint64_t dispatch thunk of ImageDiskCache.__allocating_init(cacheDirectory:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of ImageDiskCache.preload(requests:)(uint64_t a1)
{
  unint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 152) + **(int **)(*(void *)v1 + 152));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_24E29D9A0;
  return v6(a1);
}

uint64_t sub_24E29D9A0()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t dispatch thunk of ImageDiskCache.load(request:)(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 160) + **(int **)(*(void *)v2 + 160));
  unint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *unint64_t v6 = v3;
  v6[1] = sub_24E29D9A0;
  return v8(a1, a2);
}

unint64_t sub_24E29DBA4()
{
  unint64_t result = qword_2698CAA30;
  if (!qword_2698CAA30)
  {
    sub_24E2F0880();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CAA30);
  }
  return result;
}

uint64_t sub_24E29DBFC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_24E29DC60(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = *(void *)(*v2 + 96);
  uint64_t v7 = sub_24E2F1210();
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  unint64_t v10 = (char *)&v16 - v9;
  uint64_t v11 = *(void *)(v5 + 80);
  MEMORY[0x270FA5388](v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v16 - v12, a2, v11);
  uint64_t v14 = *(void *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v10, a1, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v10, 0, 1, v6);
  swift_beginAccess();
  sub_24E2F0DC0();
  sub_24E2F0DE0();
  return swift_endAccess();
}

uint64_t ImageMemoryAndDiskCache.__allocating_init(cacheDirectory:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  ImageMemoryAndDiskCache.init(cacheDirectory:)(a1);
  return v2;
}

void *ImageMemoryAndDiskCache.init(cacheDirectory:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (void *)*v1;
  uint64_t v5 = sub_24E2F0880();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24E2F0990();
  MEMORY[0x270FA5388](v9 - 8);
  swift_defaultActor_initialize();
  sub_24E2F0660();
  sub_24E2F0980();
  v1[15] = sub_24E2F0640();
  sub_24E2F0D60();
  uint64_t v10 = qword_2698CAA48;
  uint64_t v11 = v4[10];
  swift_getTupleTypeMetadata2();
  sub_24E2F1070();
  uint64_t v12 = v4[13];
  *(void *)((char *)v2 + v10) = sub_24E2F0D90();
  uint64_t v13 = v4[11];
  uint64_t v14 = v4[14];
  v17[0] = v11;
  v17[1] = v13;
  v17[2] = v12;
  v17[3] = v14;
  type metadata accessor for ImageDiskCache();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  uint64_t v15 = ImageDiskCache.__allocating_init(cacheDirectory:)((uint64_t)v8);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
  v2[14] = v15;
  return v2;
}

uint64_t sub_24E29E150(uint64_t a1)
{
  v2[3] = a1;
  v2[4] = v1;
  uint64_t v3 = *v1;
  v2[5] = *v1;
  uint64_t v4 = *(void *)(v3 + 80);
  v2[6] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v2[7] = v5;
  v2[8] = *(void *)(v5 + 64);
  v2[9] = swift_task_alloc();
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E29E274, v1, 0);
}

uint64_t sub_24E29E274()
{
  uint64_t v47 = v0;
  uint64_t v1 = sub_24E2F0D50();
  os_log_type_t v2 = sub_24E2F11E0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_24E292000, v1, v2, "preload(requests:)", v3, 2u);
    MEMORY[0x253338AC0](v3, -1, -1);
  }
  uint64_t v4 = v0[6];

  uint64_t v5 = swift_bridgeObjectRetain();
  if (MEMORY[0x253338020](v5, v4))
  {
    uint64_t v6 = 0;
    uint64_t v37 = v0[8];
    uint64_t v7 = v0[7];
    uint64_t v39 = v0[5];
    unint64_t v45 = (void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
    uint64_t v43 = (void (**)(unint64_t, uint64_t, uint64_t))(v7 + 32);
    uint64_t v44 = v7;
    uint64_t v38 = (void (**)(uint64_t, uint64_t))(v7 + 8);
    do
    {
      char v16 = sub_24E2F1090();
      sub_24E2F1060();
      if (v16)
      {
        uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 16);
        v17(v0[12], v0[3]+ ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80))+ *(void *)(v44 + 72) * v6, v0[6]);
        uint64_t v18 = v6 + 1;
        if (__OFADD__(v6, 1)) {
          goto LABEL_14;
        }
      }
      else
      {
        uint64_t result = sub_24E2F12C0();
        if (v37 != 8)
        {
          __break(1u);
          return result;
        }
        uint64_t v33 = result;
        uint64_t v34 = v0[12];
        uint64_t v35 = v0[6];
        v0[2] = v33;
        uint64_t v17 = *v45;
        (*v45)(v34, (uint64_t)(v0 + 2), v35);
        swift_unknownObjectRelease();
        uint64_t v18 = v6 + 1;
        if (__OFADD__(v6, 1))
        {
LABEL_14:
          __break(1u);
          break;
        }
      }
      uint64_t v42 = v18;
      unint64_t v19 = v0[11];
      uint64_t v20 = v0[10];
      uint64_t v21 = v0[6];
      uint64_t v41 = *v43;
      (*v43)(v19, v0[12], v21);
      v17(v20, v19, v21);
      uint64_t v22 = sub_24E2F0D50();
      os_log_type_t v23 = sub_24E2F11E0();
      BOOL v24 = os_log_type_enabled(v22, v23);
      uint64_t v25 = v0[10];
      if (v24)
      {
        uint64_t v26 = v0[9];
        uint64_t v27 = v0[6];
        uint64_t v28 = swift_slowAlloc();
        uint64_t v29 = swift_slowAlloc();
        uint64_t v46 = v29;
        *(_DWORD *)uint64_t v28 = 136315394;
        *(void *)(v28 + 4) = sub_24E29CA04(0xD000000000000012, 0x800000024E2F6830, &v46);
        *(_WORD *)(v28 + 12) = 2080;
        v17(v26, v25, v27);
        uint64_t v30 = sub_24E2F0EE0();
        *(void *)(v28 + 14) = sub_24E29CA04(v30, v31, &v46);
        swift_bridgeObjectRelease();
        uint64_t v40 = *v38;
        (*v38)(v25, v27);
        _os_log_impl(&dword_24E292000, v22, v23, "%s %s", (uint8_t *)v28, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x253338AC0](v29, -1, -1);
        MEMORY[0x253338AC0](v28, -1, -1);
      }
      else
      {
        uint64_t v8 = v0[6];

        uint64_t v40 = *v38;
        (*v38)(v25, v8);
      }
      uint64_t v9 = v0[11];
      uint64_t v10 = v0[9];
      uint64_t v11 = v0[6];
      uint64_t v13 = v0[3];
      uint64_t v12 = v0[4];
      v17(v10, v9, v11);
      unint64_t v14 = (*(unsigned __int8 *)(v44 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
      uint64_t v15 = swift_allocObject();
      *(void *)(v15 + 16) = v11;
      *(void *)(v15 + 24) = *(void *)(v39 + 88);
      *(void *)(v15 + 32) = *(void *)(v39 + 96);
      *(_OWORD *)(v15 + 40) = *(_OWORD *)(v39 + 104);
      *(void *)(v15 + 56) = *(void *)(v39 + 120);
      *(void *)(v15 + 64) = v12;
      v41(v15 + v14, v10, v11);
      swift_retain();
      sub_24E2F0650();
      swift_release();
      swift_release();
      v40(v9, v11);
      ++v6;
    }
    while (v42 != MEMORY[0x253338020](v13, v11));
  }
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v36 = (uint64_t (*)(void))v0[1];
  return v36();
}

uint64_t sub_24E29E7A8(void *a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  uint64_t v3 = (void *)*a1;
  v2[7] = *a1;
  sub_24E2F0880();
  v2[8] = swift_task_alloc();
  uint64_t v4 = v3[12];
  v2[9] = v4;
  v2[10] = *(void *)(v4 - 8);
  v2[11] = swift_task_alloc();
  uint64_t v5 = v3[11];
  v2[12] = v5;
  v2[13] = *(void *)(v5 - 8);
  v2[14] = swift_task_alloc();
  uint64_t v6 = sub_24E2F1210();
  v2[15] = v6;
  v2[16] = *(void *)(v6 - 8);
  v2[17] = swift_task_alloc();
  uint64_t v7 = v3[10];
  v2[18] = v7;
  v2[19] = *(void *)(v7 - 8);
  v2[20] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E29EA0C, 0, 0);
}

uint64_t sub_24E29EA0C()
{
  uint64_t v1 = v0[5];
  (*(void (**)(void, void, void))(v0[19] + 16))(v0[20], v0[6], v0[18]);
  return MEMORY[0x270FA2498](sub_24E29EA88, v1, 0);
}

uint64_t sub_24E29EA88()
{
  uint64_t v1 = (void *)(*(void *)(v0 + 40) + qword_2698CAA48);
  swift_beginAccess();
  *(void *)(v0 + 168) = *v1;
  swift_bridgeObjectRetain();
  return MEMORY[0x270FA2498](sub_24E29EB1C, 0, 0);
}

uint64_t sub_24E29EB1C()
{
  uint64_t v1 = v0[20];
  uint64_t v2 = v0[18];
  uint64_t v3 = v0[19];
  uint64_t v5 = v0[16];
  uint64_t v4 = v0[17];
  uint64_t v6 = v0[15];
  uint64_t v7 = v0[9];
  uint64_t v8 = v0[10];
  MEMORY[0x253337D30](v1, v0[21], v2, v7, *(void *)(*(void *)(v0[7] + 104) + 8));
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  int v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v7);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  if (v9 == 1)
  {
    uint64_t v10 = (void *)swift_task_alloc();
    v0[22] = v10;
    void *v10 = v0;
    v10[1] = sub_24E29ECF0;
    uint64_t v11 = v0[14];
    uint64_t v12 = v0[6];
    return sub_24E29B934(v11, v12);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v14 = (uint64_t (*)(void))v0[1];
    return v14();
  }
}

uint64_t sub_24E29ECF0()
{
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_24E2A0C90;
  }
  else {
    uint64_t v2 = sub_24E29EE04;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24E29EE04()
{
  uint64_t v1 = v0[23];
  uint64_t v2 = *(void *)(v0[7] + 112);
  uint64_t v3 = ImageCacheDiskResult.loadFromDisk()(v0[12], v2);
  if (v1)
  {
    (*(void (**)(void, void))(v0[13] + 8))(v0[14], v0[12]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
  else
  {
    uint64_t v7 = v3;
    unint64_t v8 = v4;
    uint64_t v9 = v0[12];
    uint64_t v11 = v0[8];
    uint64_t v10 = v0[9];
    uint64_t v13 = v0[7];
    uint64_t v14 = v0[5];
    v0[24] = v4;
    v0[25] = v3;
    uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
    sub_24E2A0C38(v3, v4);
    v12(v9, v2);
    (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(*(void *)(v13 + 120) + 16))(v7, v8, v11, v10);
    return MEMORY[0x270FA2498](sub_24E29EFB8, v14, 0);
  }
}

uint64_t sub_24E29EFB8()
{
  sub_24E29DC60(*(void *)(v0 + 88), *(void *)(v0 + 48));
  return MEMORY[0x270FA2498](sub_24E2A0C94, 0, 0);
}

uint64_t sub_24E29F024(uint64_t a1, uint64_t a2)
{
  v3[14] = a2;
  v3[15] = v2;
  v3[13] = a1;
  uint64_t v4 = *v2;
  v3[16] = *v2;
  v3[17] = *(void *)(v4 + 96);
  uint64_t v5 = sub_24E2F1210();
  v3[18] = v5;
  v3[19] = *(void *)(v5 - 8);
  v3[20] = swift_task_alloc();
  uint64_t v6 = *(void *)(v4 + 80);
  v3[21] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v3[22] = v7;
  v3[23] = *(void *)(v7 + 64);
  v3[24] = swift_task_alloc();
  v3[25] = swift_task_alloc();
  v3[26] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E29F1B8, v2, 0);
}

uint64_t sub_24E29F1B8()
{
  uint64_t v32 = v0;
  uint64_t v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[22] + 16);
  v29(v0[26], v0[14], v0[21]);
  uint64_t v1 = sub_24E2F0D50();
  os_log_type_t v2 = sub_24E2F11E0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[25];
    uint64_t v4 = v0[26];
    uint64_t v5 = v0[21];
    uint64_t v27 = v0[22];
    os_log_type_t type = v2;
    uint64_t v6 = swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    uint64_t v31 = v28;
    *(_DWORD *)uint64_t v6 = 136315394;
    v0[11] = sub_24E29CA04(0x7165722864616F6CLL, 0xEE00293A74736575, &v31);
    sub_24E2F1220();
    *(_WORD *)(v6 + 12) = 2080;
    v29(v3, v4, v5);
    uint64_t v7 = sub_24E2F0EE0();
    v0[12] = sub_24E29CA04(v7, v8, &v31);
    sub_24E2F1220();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v4, v5);
    _os_log_impl(&dword_24E292000, v1, type, "%s %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x253338AC0](v28, -1, -1);
    MEMORY[0x253338AC0](v6, -1, -1);
  }
  else
  {
    uint64_t v9 = v0[26];
    uint64_t v10 = v0[21];
    uint64_t v11 = v0[22];

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  }
  uint64_t v12 = v0[24];
  uint64_t v13 = v0[21];
  uint64_t v14 = v0[22];
  char v16 = (void *)v0[16];
  uint64_t v15 = v0[17];
  uint64_t v17 = v0[15];
  v29(v12, v0[14], v13);
  unint64_t v18 = (*(unsigned __int8 *)(v14 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  unint64_t v19 = (char *)swift_allocObject();
  v0[27] = v19;
  *((void *)v19 + 2) = v13;
  uint64_t v20 = v16[11];
  v0[28] = v20;
  *((void *)v19 + 3) = v20;
  *((void *)v19 + 4) = v15;
  uint64_t v21 = v16[13];
  v0[29] = v21;
  *((void *)v19 + 5) = v21;
  uint64_t v22 = v16[14];
  v0[30] = v22;
  *((void *)v19 + 6) = v22;
  uint64_t v23 = v16[15];
  v0[31] = v23;
  *((void *)v19 + 7) = v23;
  *((void *)v19 + 8) = v17;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 32))(&v19[v18], v12, v13);
  uint64_t v30 = (uint64_t (*)(void *, char *))((int)*MEMORY[0x263F3C9D0] + MEMORY[0x263F3C9D0]);
  swift_retain();
  BOOL v24 = (void *)swift_task_alloc();
  v0[32] = v24;
  *BOOL v24 = v0;
  v24[1] = sub_24E29F520;
  return v30(&unk_2698CAA78, v19);
}

uint64_t sub_24E29F520()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 264) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 120);
  swift_release();
  if (v0) {
    uint64_t v4 = sub_24E29F8A0;
  }
  else {
    uint64_t v4 = sub_24E29F668;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_24E29F668()
{
  uint64_t v1 = *(void *)(v0 + 232);
  uint64_t v2 = *(void *)(v0 + 160);
  uint64_t v3 = *(void *)(v0 + 168);
  uint64_t v4 = *(void *)(v0 + 136);
  uint64_t v5 = *(void *)(v0 + 112);
  uint64_t v6 = (uint64_t *)(*(void *)(v0 + 120) + qword_2698CAA48);
  swift_beginAccess();
  uint64_t v7 = *v6;
  uint64_t v8 = *(void *)(v1 + 8);
  swift_bridgeObjectRetain();
  MEMORY[0x253337D30](v5, v7, v3, v4, v8);
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(v4 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v2, 1, v4) == 1)
  {
    uint64_t v10 = *(void *)(v0 + 248);
    uint64_t v11 = *(void *)(v0 + 224);
    uint64_t v12 = *(void *)(v0 + 168);
    uint64_t v13 = *(void *)(v0 + 136);
    long long v16 = *(_OWORD *)(v0 + 232);
    (*(void (**)(void, void))(*(void *)(v0 + 152) + 8))(*(void *)(v0 + 160), *(void *)(v0 + 144));
    *(void *)(v0 + 16) = v12;
    *(void *)(v0 + 24) = v11;
    *(void *)(v0 + 32) = v13;
    *(_OWORD *)(v0 + 40) = v16;
    *(void *)(v0 + 56) = v10;
    type metadata accessor for ImageMemoryAndDiskCache.Error();
    swift_getWitnessTable();
    swift_allocError();
    swift_willThrow();
  }
  else
  {
    (*(void (**)(void, void, void))(v9 + 32))(*(void *)(v0 + 104), *(void *)(v0 + 160), *(void *)(v0 + 136));
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

uint64_t sub_24E29F8A0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24E29F92C(void *a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  uint64_t v3 = (void *)*a1;
  v2[7] = *a1;
  sub_24E2F0880();
  v2[8] = swift_task_alloc();
  uint64_t v4 = v3[12];
  v2[9] = v4;
  v2[10] = *(void *)(v4 - 8);
  v2[11] = swift_task_alloc();
  uint64_t v5 = v3[11];
  v2[12] = v5;
  v2[13] = *(void *)(v5 - 8);
  v2[14] = swift_task_alloc();
  uint64_t v6 = sub_24E2F1210();
  v2[15] = v6;
  v2[16] = *(void *)(v6 - 8);
  v2[17] = swift_task_alloc();
  uint64_t v7 = v3[10];
  v2[18] = v7;
  v2[19] = *(void *)(v7 - 8);
  v2[20] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E29FB90, 0, 0);
}

uint64_t sub_24E29FB90()
{
  uint64_t v1 = v0[5];
  (*(void (**)(void, void, void))(v0[19] + 16))(v0[20], v0[6], v0[18]);
  return MEMORY[0x270FA2498](sub_24E29FC0C, v1, 0);
}

uint64_t sub_24E29FC0C()
{
  uint64_t v1 = (void *)(*(void *)(v0 + 40) + qword_2698CAA48);
  swift_beginAccess();
  *(void *)(v0 + 168) = *v1;
  swift_bridgeObjectRetain();
  return MEMORY[0x270FA2498](sub_24E29FCA0, 0, 0);
}

uint64_t sub_24E29FCA0()
{
  uint64_t v1 = v0[20];
  uint64_t v2 = v0[18];
  uint64_t v3 = v0[19];
  uint64_t v5 = v0[16];
  uint64_t v4 = v0[17];
  uint64_t v6 = v0[15];
  uint64_t v7 = v0[9];
  uint64_t v8 = v0[10];
  MEMORY[0x253337D30](v1, v0[21], v2, v7, *(void *)(*(void *)(v0[7] + 104) + 8));
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  int v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v7);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  if (v9 == 1)
  {
    uint64_t v10 = (void *)swift_task_alloc();
    v0[22] = v10;
    void *v10 = v0;
    v10[1] = sub_24E29FE74;
    uint64_t v11 = v0[14];
    uint64_t v12 = v0[6];
    return sub_24E29B934(v11, v12);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v14 = (uint64_t (*)(void))v0[1];
    return v14();
  }
}

uint64_t sub_24E29FE74()
{
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_24E2A0290;
  }
  else {
    uint64_t v2 = sub_24E29FF88;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24E29FF88()
{
  uint64_t v1 = v0[23];
  uint64_t v2 = *(void *)(v0[7] + 112);
  uint64_t v3 = ImageCacheDiskResult.loadFromDisk()(v0[12], v2);
  if (v1)
  {
    (*(void (**)(void, void))(v0[13] + 8))(v0[14], v0[12]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
  else
  {
    uint64_t v7 = v3;
    unint64_t v8 = v4;
    uint64_t v9 = v0[12];
    uint64_t v11 = v0[8];
    uint64_t v10 = v0[9];
    uint64_t v13 = v0[7];
    uint64_t v14 = v0[5];
    v0[24] = v4;
    v0[25] = v3;
    uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
    sub_24E2A0C38(v3, v4);
    v12(v9, v2);
    (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(*(void *)(v13 + 120) + 16))(v7, v8, v11, v10);
    return MEMORY[0x270FA2498](sub_24E2A013C, v14, 0);
  }
}

uint64_t sub_24E2A013C()
{
  sub_24E29DC60(*(void *)(v0 + 88), *(void *)(v0 + 48));
  return MEMORY[0x270FA2498](sub_24E2A01A8, 0, 0);
}

uint64_t sub_24E2A01A8()
{
  uint64_t v2 = v0[13];
  uint64_t v1 = v0[14];
  uint64_t v4 = v0[11];
  uint64_t v3 = v0[12];
  uint64_t v5 = v0[9];
  uint64_t v6 = v0[10];
  sub_24E29A8B8(v0[25], v0[24]);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_24E2A0290()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t static ImageMemoryAndDiskCache.Error.== infix(_:_:)()
{
  return 1;
}

uint64_t ImageMemoryAndDiskCache.Error.hash(into:)()
{
  return sub_24E2F14B0();
}

uint64_t ImageMemoryAndDiskCache.Error.hashValue.getter()
{
  return sub_24E2F14D0();
}

uint64_t sub_24E2A03A8()
{
  return 1;
}

uint64_t sub_24E2A03B0()
{
  return sub_24E2F14D0();
}

uint64_t sub_24E2A03F4()
{
  return sub_24E2F14B0();
}

uint64_t sub_24E2A041C()
{
  return sub_24E2F14D0();
}

uint64_t ImageMemoryAndDiskCache.deinit()
{
  swift_release();
  swift_release();
  uint64_t v1 = v0 + qword_2698CAA40;
  uint64_t v2 = sub_24E2F0D70();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t ImageMemoryAndDiskCache.__deallocating_deinit()
{
  ImageMemoryAndDiskCache.deinit();
  return MEMORY[0x270FA2418](v0);
}

uint64_t ImageMemoryAndDiskCache.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_24E2A0530()
{
  return ImageMemoryAndDiskCache.unownedExecutor.getter();
}

uint64_t sub_24E2A0550()
{
  uint64_t v2 = *(void **)(v0 + 64);
  uint64_t v3 = v0
     + ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_24E29DC58;
  return sub_24E29E7A8(v2, v3);
}

uint64_t objectdestroyTm_0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 72) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_24E2A06E8()
{
  uint64_t v2 = *(void **)(v0 + 64);
  uint64_t v3 = v0
     + ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_24E29DC58;
  return sub_24E29F92C(v2, v3);
}

uint64_t type metadata accessor for ImageMemoryAndDiskCache.Error()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24E2A07D0()
{
  return swift_getWitnessTable();
}

uint64_t dispatch thunk of ImageCacheResult.init(data:fullImageURL:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t sub_24E2A0800()
{
  uint64_t result = sub_24E2F0D70();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for ImageMemoryAndDiskCache()
{
  return swift_getGenericMetadata();
}

uint64_t method lookup function for ImageMemoryAndDiskCache(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ImageMemoryAndDiskCache);
}

uint64_t dispatch thunk of ImageMemoryAndDiskCache.__allocating_init(cacheDirectory:)()
{
  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t dispatch thunk of ImageMemoryAndDiskCache.preload(requests:)(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 216) + **(int **)(*(void *)v1 + 216));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_24E29D9A0;
  return v6(a1);
}

uint64_t dispatch thunk of ImageMemoryAndDiskCache.load(request:)(uint64_t a1, uint64_t a2)
{
  unint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 224) + **(int **)(*(void *)v2 + 224));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_24E29D9A0;
  return v8(a1, a2);
}

uint64_t sub_24E2A0B10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 48);
}

uint64_t _s16UniqueIdentifierV14IdentifierTypeOwet(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *sub_24E2A0B6C(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24E2A0C08);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24E2A0C30()
{
  return 0;
}

uint64_t sub_24E2A0C38(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }
  return swift_retain();
}

uint64_t String.fmLocalized(replacements:table:)(uint64_t a1, uint64_t a2)
{
  int v3 = *(void **)(a2 + 8);
  unsigned int v4 = *(void **)(a2 + 16);
  if (v3) {
    BOOL v5 = v4 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  if (v5)
  {
    id v6 = objc_msgSend(self, sel_mainBundle);
    uint64_t v7 = (void *)sub_24E2F0E90();
    if (!v3) {
      goto LABEL_8;
    }
  }
  else
  {
    id v6 = v4;
    uint64_t v7 = (void *)sub_24E2F0E90();
  }
  int v3 = (void *)sub_24E2F0E90();
LABEL_8:
  id v8 = objc_msgSend(v6, sel_localizedStringForKey_value_table_, v7, 0, v3);

  uint64_t v9 = sub_24E2F0EC0();
  if (a1)
  {
    uint64_t v10 = sub_24E2F0ED0();

    swift_bridgeObjectRelease();
    return v10;
  }
  else
  {

    return v9;
  }
}

uint64_t FindMyLocalizationTable.tableName.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void *FindMyLocalizationTable.tableBundle.getter()
{
  uint64_t v1 = *(void **)(v0 + 16);
  id v2 = v1;
  return v1;
}

uint64_t FindMyLocalizationTable.init(tableName:tableBundle:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t FindMyLocalizationTableDescription.name.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FindMyLocalizationTableDescription.bundleDescription.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FindMyLocalizationTableDescription() + 20);
  uint64_t v4 = sub_24E2F07B0();
  BOOL v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for FindMyLocalizationTableDescription()
{
  uint64_t result = qword_2698CAB90;
  if (!qword_2698CAB90) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t FindMyLocalizationTableDescription.init(name:bundleDescription:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = a1;
  a4[1] = a2;
  BOOL v5 = (char *)a4 + *(int *)(type metadata accessor for FindMyLocalizationTableDescription() + 20);
  uint64_t v6 = sub_24E2F07B0();
  uint64_t v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  return v7(v5, a3, v6);
}

void *sub_24E2A0FA8(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = (void *)a2[2];
  a1[2] = v4;
  swift_bridgeObjectRetain();
  id v5 = v4;
  return a1;
}

void *assignWithCopy for FindMyLocalizationTable(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a1[2];
  id v5 = (void *)a2[2];
  a1[2] = v5;
  id v6 = v5;

  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for FindMyLocalizationTable(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  return a1;
}

uint64_t getEnumTagSinglePayload for FindMyLocalizationTable(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FindMyLocalizationTable(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FindMyLocalizationTable()
{
  return &type metadata for FindMyLocalizationTable;
}

uint64_t *initializeBufferWithCopyOfBuffer for FindMyLocalizationTableDescription(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    id v8 = (char *)a2 + v6;
    uint64_t v9 = sub_24E2F07B0();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t destroy for FindMyLocalizationTableDescription(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_24E2F07B0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *initializeWithCopy for FindMyLocalizationTableDescription(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_24E2F07B0();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

void *assignWithCopy for FindMyLocalizationTableDescription(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24E2F07B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *initializeWithTake for FindMyLocalizationTableDescription(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_24E2F07B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *assignWithTake for FindMyLocalizationTableDescription(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_24E2F07B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for FindMyLocalizationTableDescription(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24E2A14EC);
}

uint64_t sub_24E2A14EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_24E2F07B0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for FindMyLocalizationTableDescription(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24E2A15B0);
}

uint64_t sub_24E2A15B0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_24E2F07B0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_24E2A1658()
{
  uint64_t result = sub_24E2F07B0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t String.nilIfEmpty.getter(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2) {
    return 0;
  }
  uint64_t v3 = a1;
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_24E2A1744()
{
  uint64_t result = sub_24E2F1210();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_24E2A17D8()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 88);
  uint64_t v2 = sub_24E2F1210();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v4 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return MEMORY[0x270FA0228](v0, v3, v4);
}

uint64_t type metadata accessor for UnsafeSendableBox()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t NSUserDefaults.set<A>(codableValue:forKey:)()
{
  sub_24E2F0700();
  swift_allocObject();
  sub_24E2F06F0();
  uint64_t v2 = sub_24E2F06E0();
  unint64_t v4 = v3;
  uint64_t result = swift_release();
  if (!v1)
  {
    uint64_t v6 = (void *)sub_24E2F08B0();
    uint64_t v7 = (void *)sub_24E2F0E90();
    objc_msgSend(v0, sel_setValue_forKey_, v6, v7);

    return sub_24E29A8B8(v2, v4);
  }
  return result;
}

uint64_t NSUserDefaults.codable<A>(forKey:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v6 = (void *)sub_24E2F0E90();
  id v7 = objc_msgSend(v2, sel_dataForKey_, v6);

  if (!v7) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 56))(a2, 1, 1, a1);
  }
  uint64_t v8 = sub_24E2F08C0();
  unint64_t v10 = v9;

  sub_24E2F06D0();
  swift_allocObject();
  sub_24E2F06C0();
  sub_24E2F06B0();
  if (v3)
  {
    swift_release();
    return sub_24E29A8B8(v8, v10);
  }
  else
  {
    sub_24E29A8B8(v8, v10);
    swift_release();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(a1 - 8) + 56))(a2, 0, 1, a1);
  }
}

uint64_t sub_24E2A1B28()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAC60);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v17 = (char *)v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_24E2F09B0();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v16 = sub_24E2F07B0();
  uint64_t v3 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24E2F0E70();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t MyLocalizationTableDescription = type metadata accessor for FindMyLocalizationTableDescription();
  MEMORY[0x270FA5388](MyLocalizationTableDescription);
  unint64_t v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_24E2F07D0();
  uint64_t v10 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v11 = sub_24E2F0600();
  __swift_allocate_value_buffer(v11, qword_2698CAC20);
  v14[1] = __swift_project_value_buffer(v11, (uint64_t)qword_2698CAC20);
  if (qword_2698CA4B0 != -1) {
    swift_once();
  }
  uint64_t v12 = __swift_project_value_buffer(MyLocalizationTableDescription, (uint64_t)qword_2698D1E48);
  sub_24E2A3F6C(v12, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FindMyLocalizationTableDescription);
  sub_24E2F0E80();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, &v9[*(int *)(MyLocalizationTableDescription + 20)], v16);
  swift_bridgeObjectRetain();
  sub_24E2F09A0();
  sub_24E2F07E0();
  sub_24E2A3FD4((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FindMyLocalizationTableDescription);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v17, 1, 1, v15);
  return sub_24E2F05F0();
}

uint64_t static ItemEntity.typeDisplayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2698CA488 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_24E2F0600();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_2698CAC20);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_24E2A1FB0()
{
  uint64_t v0 = sub_24E2F0D70();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t v3 = MEMORY[0x270FA5388](v0);
  uint64_t v4 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v13 - v5;
  uint64_t v7 = type metadata accessor for ItemEntityQuery();
  __swift_allocate_value_buffer(v7, qword_2698CAC38);
  uint64_t v8 = (void *)__swift_project_value_buffer(v7, (uint64_t)qword_2698CAC38);
  sub_24E2F0D60();
  unint64_t v9 = *(void (**)(char *, char *, uint64_t))(v1 + 32);
  v9(v4, v6, v0);
  unint64_t v10 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v11 = swift_allocObject();
  v9((char *)(v11 + v10), v4, v0);
  uint64_t result = sub_24E2F0D60();
  *uint64_t v8 = &unk_2698CACE8;
  v8[1] = v11;
  return result;
}

uint64_t static ItemEntity.defaultQuery.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2698CA490 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for ItemEntityQuery();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_2698CAC38);
  return sub_24E2A3F6C(v3, a1, (uint64_t (*)(void))type metadata accessor for ItemEntityQuery);
}

unint64_t static ItemEntity.attributionBundleIdentifier.getter()
{
  return 0xD000000000000010;
}

uint64_t ItemEntity.id.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for Item();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (uint64_t *)((char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_24E2A3F6C(v1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for Item);
  uint64_t v7 = *v5;
  uint64_t v6 = v5[1];
  swift_bridgeObjectRetain();
  uint64_t result = sub_24E2A3FD4((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for Beacon);
  *a1 = v7;
  a1[1] = v6;
  return result;
}

uint64_t ItemEntity.item.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24E2A3F6C(v1, a1, (uint64_t (*)(void))type metadata accessor for Item);
}

uint64_t ItemEntity.init(item:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_24E2A3F6C(a1, a2, (uint64_t (*)(void))type metadata accessor for Item);
  type metadata accessor for AnyDisplayRepresentationImageCache();
  uint64_t v4 = swift_allocObject();
  swift_defaultActor_initialize();
  uint64_t v5 = v4 + OBJC_IVAR____TtC10FindMyCore34AnyDisplayRepresentationImageCache_cachedDisplayRepresentationImage;
  uint64_t v6 = sub_24E2F0590();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  uint64_t v7 = (void *)(v4 + OBJC_IVAR____TtC10FindMyCore34AnyDisplayRepresentationImageCache_imageBuilder);
  *uint64_t v7 = &unk_2698CAC50;
  v7[1] = 0;
  sub_24E2A3FD4(a1, (uint64_t (*)(void))type metadata accessor for Item);
  uint64_t result = type metadata accessor for ItemEntity();
  *(void *)(a2 + *(int *)(result + 20)) = v4;
  return result;
}

uint64_t sub_24E2A2420(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return MEMORY[0x270FA2498](sub_24E2A2440, 0, 0);
}

uint64_t sub_24E2A2440()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = sub_24E2F0590();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t type metadata accessor for ItemEntity()
{
  uint64_t result = qword_2698CACD0;
  if (!qword_2698CACD0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t ItemEntity.displayRepresentation.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAC58);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAC60);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24E2F07D0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = type metadata accessor for Item();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_24E2F0E60();
  MEMORY[0x270FA5388](v12 - 8);
  sub_24E2F0E50();
  sub_24E2F0E40();
  sub_24E2A3F6C(v0, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for Item);
  type metadata accessor for Beacon();
  swift_bridgeObjectRetain();
  sub_24E2A3FD4((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for Beacon);
  sub_24E2F0E30();
  swift_bridgeObjectRelease();
  sub_24E2F0E40();
  sub_24E2F07C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
  uint64_t v13 = sub_24E2F0590();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v3, 1, 1, v13);
  return sub_24E2F05A0();
}

uint64_t sub_24E2A2814@<X0>(uint64_t a1@<X8>)
{
  if (qword_2698CA490 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for ItemEntityQuery();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_2698CAC38);
  return sub_24E2A3F6C(v3, a1, (uint64_t (*)(void))type metadata accessor for ItemEntityQuery);
}

uint64_t sub_24E2A2894@<X0>(void *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for Item();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (uint64_t *)((char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_24E2A3F6C(v1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for Item);
  uint64_t v7 = *v5;
  uint64_t v6 = v5[1];
  swift_bridgeObjectRetain();
  uint64_t result = sub_24E2A3FD4((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for Beacon);
  *a1 = v7;
  a1[1] = v6;
  return result;
}

uint64_t sub_24E2A2954@<X0>(uint64_t a1@<X8>)
{
  if (qword_2698CA488 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_24E2F0600();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_2698CAC20);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t sub_24E2A29FC(uint64_t a1)
{
  uint64_t v2 = sub_24E2A3C60(&qword_2698CACE0, (void (*)(uint64_t))type metadata accessor for ItemEntity);
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_24E2A2A7C(uint64_t a1)
{
  uint64_t v2 = sub_24E2A3C60(&qword_2698CACA8, (void (*)(uint64_t))type metadata accessor for ItemEntity);
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t Beacon.UniqueIdentifier.entityIdentifierString.getter()
{
  return 0x3A315644494142;
}

uint64_t static Beacon.UniqueIdentifier.entityIdentifier(for:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  swift_bridgeObjectRetain();
  uint64_t result = sub_24E2F0FC0();
  if (result)
  {
    unint64_t v7 = sub_24E2F0F30();
    unint64_t v8 = sub_24E2A2D20(v7, a1, a2);
    uint64_t v10 = v9;
    uint64_t v12 = v11;
    uint64_t v14 = v13;
    swift_bridgeObjectRelease();
    a1 = MEMORY[0x253337E60](v8, v10, v12, v14);
    a2 = v15;
    uint64_t result = swift_bridgeObjectRelease();
  }
  *a3 = a1;
  a3[1] = a2;
  return result;
}

uint64_t sub_24E2A2C0C()
{
  return 0x3A315644494142;
}

uint64_t sub_24E2A2C58@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  swift_bridgeObjectRetain();
  uint64_t result = sub_24E2F0FC0();
  if (result)
  {
    unint64_t v7 = sub_24E2F0F30();
    unint64_t v8 = sub_24E2A2D20(v7, a1, a2);
    uint64_t v10 = v9;
    uint64_t v12 = v11;
    uint64_t v14 = v13;
    swift_bridgeObjectRelease();
    a1 = MEMORY[0x253337E60](v8, v10, v12, v14);
    a2 = v15;
    uint64_t result = swift_bridgeObjectRelease();
  }
  *a3 = a1;
  a3[1] = a2;
  return result;
}

unint64_t sub_24E2A2D20(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if ((a3 & 0x2000000000000000) != 0) {
    uint64_t v3 = HIBYTE(a3) & 0xF;
  }
  else {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v4 = 7;
  if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0) {
    uint64_t v4 = 11;
  }
  unint64_t v5 = v4 | (v3 << 16);
  uint64_t result = sub_24E2F0F40();
  if (v6) {
    uint64_t result = v5;
  }
  if (4 * v3 < result >> 14) {
    goto LABEL_14;
  }
  return sub_24E2F0FE0();
}

uint64_t sub_24E2A2DD0()
{
  return sub_24E2A3C60(&qword_2698CAC68, (void (*)(uint64_t))type metadata accessor for ItemEntity);
}

uint64_t sub_24E2A2E18()
{
  return sub_24E2A3C60(&qword_2698CAC70, (void (*)(uint64_t))type metadata accessor for ItemEntity);
}

uint64_t sub_24E2A2E60()
{
  return sub_24E2A3C60(&qword_2698CAC78, (void (*)(uint64_t))type metadata accessor for ItemEntity);
}

uint64_t sub_24E2A2EA8()
{
  return sub_24E2A3C60(&qword_2698CAC80, (void (*)(uint64_t))type metadata accessor for ItemEntityQuery);
}

unint64_t sub_24E2A2EF4()
{
  unint64_t result = qword_2698CAC88;
  if (!qword_2698CAC88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CAC88);
  }
  return result;
}

uint64_t sub_24E2A2F48()
{
  return sub_24E2A3C60(&qword_2698CAC90, (void (*)(uint64_t))type metadata accessor for ItemEntity);
}

uint64_t sub_24E2A2F90()
{
  return sub_24E2A3C60(&qword_2698CAC98, (void (*)(uint64_t))type metadata accessor for ItemEntity);
}

uint64_t sub_24E2A2FD8()
{
  return sub_24E2A3C60(&qword_2698CACA0, (void (*)(uint64_t))type metadata accessor for ItemEntity);
}

uint64_t sub_24E2A3020()
{
  return sub_24E2A3C60(&qword_2698CACA8, (void (*)(uint64_t))type metadata accessor for ItemEntity);
}

unint64_t sub_24E2A306C()
{
  unint64_t result = qword_2698CACB0;
  if (!qword_2698CACB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CACB0);
  }
  return result;
}

unint64_t sub_24E2A30C4()
{
  unint64_t result = qword_2698CACB8;
  if (!qword_2698CACB8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2698CACC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CACB8);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_24E2A3168()
{
  return sub_24E2A3C60(&qword_2698CACC8, (void (*)(uint64_t))type metadata accessor for ItemEntity);
}

void *initializeBufferWithCopyOfBuffer for ItemEntity(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v27 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v27 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    unint64_t v7 = (int *)type metadata accessor for Beacon();
    uint64_t v8 = v7[5];
    uint64_t v9 = (char *)v4 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_24E2F0990();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v29 = v7;
    uint64_t v13 = v7[6];
    uint64_t v14 = (void *)((char *)v4 + v13);
    unint64_t v15 = (void *)((char *)a2 + v13);
    uint64_t v16 = v15[1];
    *uint64_t v14 = *v15;
    v14[1] = v16;
    uint64_t v17 = v7[7];
    unint64_t v18 = (char *)v4 + v17;
    unint64_t v19 = (char *)a2 + v17;
    uint64_t v20 = *(void *)v19;
    uint64_t v21 = *((void *)v19 + 1);
    uint64_t v22 = *((void *)v19 + 2);
    uint64_t v23 = *((void *)v19 + 3);
    uint64_t v25 = *((void *)v19 + 4);
    uint64_t v24 = *((void *)v19 + 5);
    LOBYTE(v6) = v19[48];
    swift_bridgeObjectRetain();
    sub_24E2A3364(v20, v21, v22, v23, v25, v24, v6);
    *(void *)unint64_t v18 = v20;
    *((void *)v18 + 1) = v21;
    *((void *)v18 + 2) = v22;
    *((void *)v18 + 3) = v23;
    *((void *)v18 + 4) = v25;
    *((void *)v18 + 5) = v24;
    v18[48] = v6;
    *((unsigned char *)v4 + v29[8]) = *((unsigned char *)a2 + v29[8]);
    *((unsigned char *)v4 + v29[9]) = *((unsigned char *)a2 + v29[9]);
    uint64_t v26 = type metadata accessor for Item();
    *((unsigned char *)v4 + *(int *)(v26 + 20)) = *((unsigned char *)a2 + *(int *)(v26 + 20));
    *(void *)((char *)v4 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  }
  swift_retain();
  return v4;
}

uint64_t sub_24E2A3364(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if ((a7 & 0x80) == 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return swift_bridgeObjectRetain();
}

uint64_t destroy for ItemEntity(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = type metadata accessor for Beacon();
  uint64_t v3 = a1 + *(int *)(v2 + 20);
  uint64_t v4 = sub_24E2F0990();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(v2 + 28);
  sub_24E2A3478(*(void *)v5, *(void *)(v5 + 8), *(void *)(v5 + 16), *(void *)(v5 + 24), *(void *)(v5 + 32), *(void *)(v5 + 40), *(unsigned char *)(v5 + 48));
  return swift_release();
}

uint64_t sub_24E2A3478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t result = swift_bridgeObjectRelease();
  if ((a7 & 0x80) == 0)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *initializeWithCopy for ItemEntity(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = (int *)type metadata accessor for Beacon();
  uint64_t v7 = v6[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_24E2F0990();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v27 = v6;
  uint64_t v12 = v6[6];
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  uint64_t v16 = v6[7];
  uint64_t v17 = (char *)a1 + v16;
  unint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = *(void *)v18;
  uint64_t v20 = *((void *)v18 + 1);
  uint64_t v21 = *((void *)v18 + 2);
  uint64_t v22 = *((void *)v18 + 3);
  uint64_t v24 = *((void *)v18 + 4);
  uint64_t v23 = *((void *)v18 + 5);
  LOBYTE(v5) = v18[48];
  swift_bridgeObjectRetain();
  sub_24E2A3364(v19, v20, v21, v22, v24, v23, v5);
  *(void *)uint64_t v17 = v19;
  *((void *)v17 + 1) = v20;
  *((void *)v17 + 2) = v21;
  *((void *)v17 + 3) = v22;
  *((void *)v17 + 4) = v24;
  *((void *)v17 + 5) = v23;
  v17[48] = v5;
  *((unsigned char *)a1 + v27[8]) = *((unsigned char *)a2 + v27[8]);
  *((unsigned char *)a1 + v27[9]) = *((unsigned char *)a2 + v27[9]);
  uint64_t v25 = type metadata accessor for Item();
  *((unsigned char *)a1 + *(int *)(v25 + 20)) = *((unsigned char *)a2 + *(int *)(v25 + 20));
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  swift_retain();
  return a1;
}

void *assignWithCopy for ItemEntity(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = type metadata accessor for Beacon();
  uint64_t v6 = *(int *)(v5 + 20);
  uint64_t v7 = v5;
  uint64_t v32 = v5;
  uint64_t v8 = (char *)a1 + v6;
  uint64_t v9 = (char *)a2 + v6;
  uint64_t v10 = sub_24E2F0990();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(v7 + 24);
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = *(int *)(v7 + 28);
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = *(void *)v16;
  uint64_t v18 = *((void *)v16 + 1);
  uint64_t v19 = *((void *)v16 + 2);
  uint64_t v20 = *((void *)v16 + 3);
  uint64_t v21 = *((void *)v16 + 4);
  uint64_t v22 = *((void *)v16 + 5);
  LOBYTE(v7) = v16[48];
  sub_24E2A3364(*(void *)v16, v18, v19, v20, v21, v22, v7);
  uint64_t v23 = *(void *)v15;
  uint64_t v24 = *((void *)v15 + 1);
  uint64_t v25 = *((void *)v15 + 2);
  uint64_t v26 = *((void *)v15 + 3);
  uint64_t v27 = *((void *)v15 + 4);
  uint64_t v28 = *((void *)v15 + 5);
  *(void *)uint64_t v15 = v17;
  *((void *)v15 + 1) = v18;
  *((void *)v15 + 2) = v19;
  *((void *)v15 + 3) = v20;
  *((void *)v15 + 4) = v21;
  *((void *)v15 + 5) = v22;
  char v29 = v15[48];
  v15[48] = v7;
  sub_24E2A3478(v23, v24, v25, v26, v27, v28, v29);
  *((unsigned char *)a1 + *(int *)(v32 + 32)) = *((unsigned char *)a2 + *(int *)(v32 + 32));
  *((unsigned char *)a1 + *(int *)(v32 + 36)) = *((unsigned char *)a2 + *(int *)(v32 + 36));
  uint64_t v30 = type metadata accessor for Item();
  *((unsigned char *)a1 + *(int *)(v30 + 20)) = *((unsigned char *)a2 + *(int *)(v30 + 20));
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *initializeWithTake for ItemEntity(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = (int *)type metadata accessor for Beacon();
  uint64_t v7 = v6[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_24E2F0990();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  *(_OWORD *)((char *)a1 + v6[6]) = *(_OWORD *)((char *)a2 + v6[6]);
  uint64_t v11 = v6[7];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  long long v14 = *((_OWORD *)v13 + 1);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *((_OWORD *)v12 + 1) = v14;
  *((_OWORD *)v12 + 2) = *((_OWORD *)v13 + 2);
  v12[48] = v13[48];
  *((unsigned char *)a1 + v6[8]) = *((unsigned char *)a2 + v6[8]);
  *((unsigned char *)a1 + v6[9]) = *((unsigned char *)a2 + v6[9]);
  uint64_t v15 = type metadata accessor for Item();
  *((unsigned char *)a1 + *(int *)(v15 + 20)) = *((unsigned char *)a2 + *(int *)(v15 + 20));
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *assignWithTake for ItemEntity(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = (int *)type metadata accessor for Beacon();
  uint64_t v8 = v7[5];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_24E2F0990();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = v7[6];
  uint64_t v13 = (void *)((char *)a1 + v12);
  long long v14 = (void *)((char *)a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = v7[7];
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  char v20 = v19[48];
  uint64_t v21 = *(void *)v18;
  uint64_t v22 = *((void *)v18 + 1);
  uint64_t v23 = *((void *)v18 + 2);
  uint64_t v24 = *((void *)v18 + 3);
  uint64_t v25 = *((void *)v18 + 4);
  uint64_t v26 = *((void *)v18 + 5);
  long long v27 = *((_OWORD *)v19 + 1);
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  *((_OWORD *)v18 + 1) = v27;
  *((_OWORD *)v18 + 2) = *((_OWORD *)v19 + 2);
  char v28 = v18[48];
  v18[48] = v20;
  sub_24E2A3478(v21, v22, v23, v24, v25, v26, v28);
  *((unsigned char *)a1 + v7[8]) = *((unsigned char *)a2 + v7[8]);
  *((unsigned char *)a1 + v7[9]) = *((unsigned char *)a2 + v7[9]);
  uint64_t v29 = type metadata accessor for Item();
  *((unsigned char *)a1 + *(int *)(v29 + 20)) = *((unsigned char *)a2 + *(int *)(v29 + 20));
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ItemEntity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24E2A3A38);
}

uint64_t sub_24E2A3A38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Item();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for ItemEntity(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24E2A3B0C);
}

uint64_t sub_24E2A3B0C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Item();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_24E2A3BC8()
{
  uint64_t result = type metadata accessor for Item();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_24E2A3C60(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_24E2A3D0C()
{
  uint64_t v1 = sub_24E2F0D70();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_24E2A3D9C(uint64_t *a1)
{
  uint64_t v4 = *(void *)(sub_24E2F0D70() - 8);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_24E2A3E70;
  return sub_24E2AF7C4(a1, v5);
}

uint64_t sub_24E2A3E70(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t sub_24E2A3F6C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24E2A3FD4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

__n128 ItemEntityQuery.init(dependencies:)@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  type metadata accessor for ItemEntityQuery();
  sub_24E2F0D60();
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t type metadata accessor for ItemEntityQuery()
{
  uint64_t result = qword_2698CAD78;
  if (!qword_2698CAD78) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t ItemEntityQuery.init()@<X0>(void *a1@<X8>)
{
  uint64_t v2 = sub_24E2F0D70();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  uint64_t v5 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v13 - v7;
  sub_24E2F0D60();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
  v9(v6, v8, v2);
  unint64_t v10 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v11 = swift_allocObject();
  v9((char *)(v11 + v10), v6, v2);
  type metadata accessor for ItemEntityQuery();
  uint64_t result = sub_24E2F0D60();
  *a1 = &unk_2698CACE8;
  a1[1] = v11;
  return result;
}

uint64_t ItemEntityQuery.defaultResult()(uint64_t a1)
{
  v2[6] = a1;
  v2[7] = v1;
  uint64_t v3 = type metadata accessor for ItemEntity();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for Item();
  v2[11] = v4;
  v2[12] = *(void *)(v4 - 8);
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698CACF8);
  v2[15] = swift_task_alloc();
  v2[16] = swift_task_alloc();
  uint64_t v5 = sub_24E2F0D70();
  v2[17] = v5;
  v2[18] = *(void *)(v5 - 8);
  v2[19] = swift_task_alloc();
  v2[20] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E2A4490, 0, 0);
}

uint64_t sub_24E2A4490()
{
  uint64_t v22 = v0;
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 136);
  uint64_t v3 = *(void *)(v0 + 144);
  uint64_t v4 = *(void *)(v0 + 56);
  uint64_t v5 = *(int *)(type metadata accessor for ItemEntityQuery() + 20);
  *(_DWORD *)(v0 + 216) = v5;
  uint64_t v6 = v4 + v5;
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(void *)(v0 + 168) = v7;
  *(void *)(v0 + 176) = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v7(v1, v6, v2);
  uint64_t v8 = sub_24E2F0D50();
  os_log_type_t v9 = sub_24E2F11E0();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = *(void *)(v0 + 160);
    uint64_t v11 = *(void *)(v0 + 136);
    uint64_t v12 = *(void *)(v0 + 144);
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v21 = v14;
    *(_DWORD *)uint64_t v13 = 136315138;
    *(void *)(v0 + 40) = sub_24E29CA04(0x52746C7561666564, 0xEF2928746C757365, &v21);
    sub_24E2F1220();
    _os_log_impl(&dword_24E292000, v8, v9, "%s", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x253338AC0](v14, -1, -1);
    MEMORY[0x253338AC0](v13, -1, -1);

    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v15(v10, v11);
  }
  else
  {
    uint64_t v16 = *(void *)(v0 + 160);
    uint64_t v17 = *(void *)(v0 + 136);
    uint64_t v18 = *(void *)(v0 + 144);

    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
    v15(v16, v17);
  }
  *(void *)(v0 + 184) = v15;
  *(void *)(v0 + 16) = 0;
  uint64_t v19 = (void *)swift_task_alloc();
  *(void *)(v0 + 192) = v19;
  void *v19 = v0;
  v19[1] = sub_24E2A46DC;
  return sub_24E2A4E94((uint64_t *)(v0 + 16));
}

uint64_t sub_24E2A46DC(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 200) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_24E2A4B78;
  }
  else
  {
    *(void *)(v4 + 208) = a1;
    uint64_t v5 = sub_24E2A4804;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_24E2A4804()
{
  sub_24E2AE778((uint64_t)&unk_27003AA30, (void (*)(void))sub_24E2AF2C4, (uint64_t)&type metadata for Item.Section.Category, &qword_2698CAEA0);
  uint64_t v20 = MEMORY[0x263F8EE78];
  sub_24E2A7BE8();
  swift_bridgeObjectRelease();
  if (*(void *)(v20 + 16))
  {
    uint64_t v1 = *(unsigned __int8 *)(v0[12] + 80);
    sub_24E2AF154(v20 + ((v1 + 32) & ~v1), v0[16], (uint64_t (*)(void))type metadata accessor for Item);
    uint64_t v2 = 0;
  }
  else
  {
    uint64_t v2 = 1;
  }
  uint64_t v4 = v0[15];
  uint64_t v3 = v0[16];
  uint64_t v6 = v0[11];
  uint64_t v5 = v0[12];
  uint64_t v7 = 1;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, v2, 1, v6);
  sub_24E2AD390(v3, v4);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v4, 1, v6) != 1)
  {
    uint64_t v8 = v0[14];
    uint64_t v9 = v0[13];
    uint64_t v10 = v0[10];
    uint64_t v18 = v0[8];
    uint64_t v19 = v0[6];
    sub_24E2AF030(v0[15], v8, (uint64_t (*)(void))type metadata accessor for Item);
    sub_24E2AF154(v8, v9, (uint64_t (*)(void))type metadata accessor for Item);
    sub_24E2AF154(v9, v10, (uint64_t (*)(void))type metadata accessor for Item);
    type metadata accessor for AnyDisplayRepresentationImageCache();
    uint64_t v11 = swift_allocObject();
    swift_defaultActor_initialize();
    uint64_t v12 = v11 + OBJC_IVAR____TtC10FindMyCore34AnyDisplayRepresentationImageCache_cachedDisplayRepresentationImage;
    uint64_t v13 = sub_24E2F0590();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
    uint64_t v14 = (void *)(v11 + OBJC_IVAR____TtC10FindMyCore34AnyDisplayRepresentationImageCache_imageBuilder);
    *uint64_t v14 = &unk_2698CAC50;
    v14[1] = 0;
    sub_24E2AF098(v9, (uint64_t (*)(void))type metadata accessor for Item);
    *(void *)(v10 + *(int *)(v18 + 20)) = v11;
    sub_24E2AF030(v10, v19, (uint64_t (*)(void))type metadata accessor for ItemEntity);
    sub_24E2AF098(v8, (uint64_t (*)(void))type metadata accessor for Item);
    uint64_t v7 = 0;
  }
  uint64_t v15 = v0[16];
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[9] + 56))(v0[6], v7, 1, v0[8]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24E296710(v15, &qword_2698CACF8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

uint64_t sub_24E2A4B78()
{
  uint64_t v22 = v0;
  uint64_t v1 = *(void **)(v0 + 200);
  (*(void (**)(void, void, void))(v0 + 168))(*(void *)(v0 + 152), *(void *)(v0 + 56) + *(int *)(v0 + 216), *(void *)(v0 + 136));
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_24E2F0D50();
  os_log_type_t v5 = sub_24E2F11D0();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = *(void **)(v0 + 200);
    uint64_t v19 = *(void *)(v0 + 152);
    uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v0 + 184);
    uint64_t v18 = *(void *)(v0 + 136);
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    uint64_t v21 = v17;
    *(_DWORD *)uint64_t v7 = 136315394;
    *(void *)(v0 + 24) = sub_24E29CA04(0x52746C7561666564, 0xEF2928746C757365, &v21);
    sub_24E2F1220();
    *(_WORD *)(v7 + 12) = 2114;
    id v9 = v6;
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 32) = v10;
    sub_24E2F1220();
    *uint64_t v8 = v10;

    _os_log_impl(&dword_24E292000, v4, v5, "%s - error: %{public}@", (uint8_t *)v7, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAD08);
    swift_arrayDestroy();
    MEMORY[0x253338AC0](v8, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x253338AC0](v17, -1, -1);
    MEMORY[0x253338AC0](v7, -1, -1);

    v20(v19, v18);
  }
  else
  {
    uint64_t v11 = *(void **)(v0 + 200);
    uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v0 + 184);
    uint64_t v13 = *(void *)(v0 + 152);
    uint64_t v14 = *(void *)(v0 + 136);

    v12(v13, v14);
  }
  (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 72) + 56))(*(void *)(v0 + 48), 1, 1, *(void *)(v0 + 64));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
  return v15();
}

uint64_t sub_24E2A4E94(uint64_t *a1)
{
  v2[8] = v1;
  uint64_t v4 = sub_24E2F0D70();
  v2[9] = v4;
  v2[10] = *(void *)(v4 - 8);
  v2[11] = swift_task_alloc();
  uint64_t v5 = swift_task_alloc();
  uint64_t v6 = *a1;
  v2[12] = v5;
  v2[13] = v6;
  return MEMORY[0x270FA2498](sub_24E2A4F6C, 0, 0);
}

uint64_t sub_24E2A4F6C()
{
  uint64_t v27 = v0;
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v4 = *(void *)(v0 + 80);
  uint64_t v5 = *(int *)(type metadata accessor for ItemEntityQuery() + 20);
  *(_DWORD *)(v0 + 160) = v5;
  uint64_t v6 = v1 + v5;
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  *(void *)(v0 + 112) = v7;
  *(void *)(v0 + 120) = (v4 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v7(v2, v6, v3);
  swift_bridgeObjectRetain_n();
  uint64_t v8 = sub_24E2F0D50();
  os_log_type_t v9 = sub_24E2F11E0();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = *(void *)(v0 + 104);
    uint64_t v22 = *(void *)(v0 + 80);
    uint64_t v23 = *(void *)(v0 + 72);
    uint64_t v24 = *(void *)(v0 + 96);
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v26 = v12;
    *(_DWORD *)uint64_t v11 = 136315394;
    *(void *)(v0 + 40) = sub_24E29CA04(0xD000000000000014, 0x800000024E2F6B80, &v26);
    sub_24E2F1220();
    *(_WORD *)(v11 + 12) = 2080;
    *(void *)(v0 + 48) = v10;
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_24E2F0EE0();
    *(void *)(v0 + 56) = sub_24E29CA04(v13, v14, &v26);
    sub_24E2F1220();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24E292000, v8, v9, "%s - will call fetchItemsWithOptions: %s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x253338AC0](v12, -1, -1);
    MEMORY[0x253338AC0](v11, -1, -1);

    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
    v15(v24, v23);
  }
  else
  {
    uint64_t v16 = *(void *)(v0 + 96);
    uint64_t v17 = *(void *)(v0 + 72);
    uint64_t v18 = *(void *)(v0 + 80);
    swift_bridgeObjectRelease_n();

    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
    v15(v16, v17);
  }
  *(void *)(v0 + 128) = v15;
  uint64_t v19 = **(int ***)(v0 + 64);
  *(void *)(v0 + 16) = *(void *)(v0 + 104);
  uint64_t v25 = (uint64_t (*)(uint64_t))((char *)v19 + *v19);
  uint64_t v20 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v20;
  *uint64_t v20 = v0;
  v20[1] = sub_24E2A5278;
  return v25(v0 + 16);
}

uint64_t sub_24E2A5278(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 144) = a1;
  *(void *)(v3 + 152) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_24E2A5620;
  }
  else {
    uint64_t v4 = sub_24E2A538C;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_24E2A538C()
{
  uint64_t v20 = v0;
  (*(void (**)(void, void, void))(v0 + 112))(*(void *)(v0 + 88), *(void *)(v0 + 64) + *(int *)(v0 + 160), *(void *)(v0 + 72));
  swift_bridgeObjectRetain_n();
  uint64_t v1 = sub_24E2F0D50();
  os_log_type_t v2 = sub_24E2F11E0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v17 = *(void *)(v0 + 88);
    uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v0 + 128);
    uint64_t v16 = *(void *)(v0 + 72);
    uint64_t v3 = swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    uint64_t v19 = v15;
    *(_DWORD *)uint64_t v3 = 136315394;
    *(void *)(v0 + 24) = sub_24E29CA04(0xD000000000000014, 0x800000024E2F6B80, &v19);
    sub_24E2F1220();
    *(_WORD *)(v3 + 12) = 2080;
    uint64_t v4 = type metadata accessor for Item();
    uint64_t v5 = swift_bridgeObjectRetain();
    uint64_t v6 = MEMORY[0x253337FA0](v5, v4);
    unint64_t v8 = v7;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 32) = sub_24E29CA04(v6, v8, &v19);
    sub_24E2F1220();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24E292000, v1, v2, "%s - did receive fetchItemsWithOptions: %s", (uint8_t *)v3, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x253338AC0](v15, -1, -1);
    MEMORY[0x253338AC0](v3, -1, -1);

    v18(v17, v16);
  }
  else
  {
    os_log_type_t v9 = *(void (**)(uint64_t, uint64_t))(v0 + 128);
    uint64_t v10 = *(void *)(v0 + 88);
    uint64_t v11 = *(void *)(v0 + 72);
    swift_bridgeObjectRelease_n();

    v9(v10, v11);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v13 = *(void *)(v0 + 144);
  return v12(v13);
}

uint64_t sub_24E2A5620()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t ItemEntityQuery.entities(for:)(uint64_t a1)
{
  v2[5] = a1;
  v2[6] = v1;
  v2[7] = *(void *)(type metadata accessor for Item() - 8);
  v2[8] = swift_task_alloc();
  v2[9] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for ItemEntity();
  v2[10] = v3;
  v2[11] = *(void *)(v3 - 8);
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  uint64_t v4 = sub_24E2F0D70();
  v2[14] = v4;
  v2[15] = *(void *)(v4 - 8);
  v2[16] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E2A5820, 0, 0);
}

uint64_t sub_24E2A5820()
{
  uint64_t v25 = v0;
  uint64_t v2 = v0[15];
  uint64_t v1 = v0[16];
  uint64_t v3 = v0[14];
  uint64_t v4 = v0[6];
  uint64_t v5 = type metadata accessor for ItemEntityQuery();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4 + *(int *)(v5 + 20), v3);
  swift_bridgeObjectRetain_n();
  uint64_t v6 = sub_24E2F0D50();
  os_log_type_t v7 = sub_24E2F11E0();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v21 = v0[15];
    uint64_t v22 = v0[14];
    uint64_t v23 = v0[16];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    uint64_t v24 = v20;
    *(_DWORD *)uint64_t v8 = 136315394;
    v0[3] = sub_24E29CA04(0x7365697469746E65, 0xEE00293A726F6628, &v24);
    sub_24E2F1220();
    *(_WORD *)(v8 + 12) = 2082;
    uint64_t v9 = swift_bridgeObjectRetain();
    uint64_t v10 = MEMORY[0x253337FA0](v9, &type metadata for Beacon.UniqueIdentifier);
    unint64_t v12 = v11;
    swift_bridgeObjectRelease();
    v0[4] = sub_24E29CA04(v10, v12, &v24);
    sub_24E2F1220();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24E292000, v6, v7, "%s - ids: %{public}s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x253338AC0](v20, -1, -1);
    MEMORY[0x253338AC0](v8, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v23, v22);
  }
  else
  {
    uint64_t v14 = v0[15];
    uint64_t v13 = v0[16];
    uint64_t v15 = v0[14];
    swift_bridgeObjectRelease_n();

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  }
  uint64_t v16 = swift_bridgeObjectRetain();
  uint64_t v17 = sub_24E2AE6A0(v16, (void (*)(void))sub_24E2A306C, (uint64_t)&type metadata for Beacon.UniqueIdentifier, &qword_2698CAE48);
  v0[17] = v17;
  swift_bridgeObjectRelease();
  v0[2] = v17;
  uint64_t v18 = (void *)swift_task_alloc();
  v0[18] = (uint64_t)v18;
  void *v18 = v0;
  v18[1] = sub_24E2A5B3C;
  return sub_24E2A4E94(v0 + 2);
}

uint64_t sub_24E2A5B3C(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 152) = a1;
  *(void *)(v3 + 160) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1) {
    uint64_t v4 = sub_24E2A5F68;
  }
  else {
    uint64_t v4 = sub_24E2A5C70;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_24E2A5C70()
{
  uint64_t v1 = v0[19];
  int64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v20 = v0[10];
    uint64_t v21 = v0[11];
    uint64_t v3 = v0[7];
    uint64_t v22 = MEMORY[0x263F8EE78];
    sub_24E2958E0(0, v2, 0);
    uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v19 = *(void *)(v3 + 72);
    uint64_t v5 = v22;
    do
    {
      uint64_t v7 = v0[12];
      uint64_t v6 = v0[13];
      uint64_t v9 = v0[8];
      uint64_t v8 = v0[9];
      sub_24E2AF154(v4, v8, (uint64_t (*)(void))type metadata accessor for Item);
      sub_24E2AF154(v8, v9, (uint64_t (*)(void))type metadata accessor for Item);
      sub_24E2AF154(v9, v7, (uint64_t (*)(void))type metadata accessor for Item);
      type metadata accessor for AnyDisplayRepresentationImageCache();
      uint64_t v10 = swift_allocObject();
      swift_defaultActor_initialize();
      uint64_t v11 = v10 + OBJC_IVAR____TtC10FindMyCore34AnyDisplayRepresentationImageCache_cachedDisplayRepresentationImage;
      uint64_t v12 = sub_24E2F0590();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
      uint64_t v13 = (void *)(v10 + OBJC_IVAR____TtC10FindMyCore34AnyDisplayRepresentationImageCache_imageBuilder);
      *uint64_t v13 = &unk_2698CAC50;
      v13[1] = 0;
      sub_24E2AF098(v9, (uint64_t (*)(void))type metadata accessor for Item);
      *(void *)(v7 + *(int *)(v20 + 20)) = v10;
      sub_24E2AF030(v7, v6, (uint64_t (*)(void))type metadata accessor for ItemEntity);
      sub_24E2AF098(v8, (uint64_t (*)(void))type metadata accessor for Item);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24E2958E0(0, *(void *)(v5 + 16) + 1, 1);
        uint64_t v5 = v22;
      }
      unint64_t v15 = *(void *)(v5 + 16);
      unint64_t v14 = *(void *)(v5 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_24E2958E0(v14 > 1, v15 + 1, 1);
        uint64_t v5 = v22;
      }
      uint64_t v16 = v0[13];
      *(void *)(v5 + 16) = v15 + 1;
      sub_24E2AF030(v16, v5+ ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80))+ *(void *)(v21 + 72) * v15, (uint64_t (*)(void))type metadata accessor for ItemEntity);
      v4 += v19;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = MEMORY[0x263F8EE78];
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(uint64_t))v0[1];
  return v17(v5);
}

uint64_t sub_24E2A5F68()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t ItemEntityQuery.entities(matching:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[7] = a3;
  v4[8] = v3;
  v4[5] = a1;
  v4[6] = a2;
  uint64_t v5 = sub_24E2F0D70();
  v4[9] = v5;
  v4[10] = *(void *)(v5 - 8);
  v4[11] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E2A60C0, 0, 0);
}

uint64_t sub_24E2A60C0()
{
  uint64_t v21 = v0;
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  uint64_t v4 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v5 = type metadata accessor for ItemEntityQuery();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4 + *(int *)(v5 + 20), v3);
  swift_bridgeObjectRetain_n();
  uint64_t v6 = sub_24E2F0D50();
  os_log_type_t v7 = sub_24E2F11E0();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = v0[10];
    uint64_t v18 = v0[9];
    uint64_t v19 = v0[11];
    unint64_t v9 = v0[7];
    uint64_t v17 = v0[6];
    uint64_t v10 = swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v20 = v11;
    *(_DWORD *)uint64_t v10 = 136315394;
    v0[3] = sub_24E29CA04(0xD000000000000013, 0x800000024E2F6AD0, &v20);
    sub_24E2F1220();
    *(_WORD *)(v10 + 12) = 2082;
    swift_bridgeObjectRetain();
    v0[4] = sub_24E29CA04(v17, v9, &v20);
    sub_24E2F1220();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24E292000, v6, v7, "%s - string: %{public}s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x253338AC0](v11, -1, -1);
    MEMORY[0x253338AC0](v10, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v19, v18);
  }
  else
  {
    uint64_t v13 = v0[10];
    uint64_t v12 = v0[11];
    uint64_t v14 = v0[9];
    swift_bridgeObjectRelease_n();

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  v0[2] = 0;
  unint64_t v15 = (void *)swift_task_alloc();
  v0[12] = (uint64_t)v15;
  *unint64_t v15 = v0;
  v15[1] = sub_24E2A6350;
  return sub_24E2A4E94(v0 + 2);
}

uint64_t sub_24E2A6350(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 104) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_24E2A6584;
  }
  else
  {
    *(void *)(v4 + 112) = a1;
    uint64_t v5 = sub_24E2A6478;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_24E2A6478()
{
  uint64_t v11 = v0;
  uint64_t v2 = v0[6];
  uint64_t v1 = v0[7];
  uint64_t v3 = v0[5];
  uint64_t v4 = sub_24E2AE778((uint64_t)&unk_27003AC10, (void (*)(void))sub_24E2AF2C4, (uint64_t)&type metadata for Item.Section.Category, &qword_2698CAEA0);
  v7[0] = MEMORY[0x263F8EE78];
  v7[1] = MEMORY[0x263F8EE78];
  v7[2] = MEMORY[0x263F8EE78];
  v7[3] = v4;
  char v8 = 0;
  uint64_t v9 = v2;
  uint64_t v10 = v1;
  swift_bridgeObjectRetain();
  sub_24E2A7BE8();
  swift_bridgeObjectRelease();
  sub_24E2A65E8(v7, v3);
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_24E2A6584()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24E2A65E8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v55 = a2;
  uint64_t v3 = type metadata accessor for Item();
  uint64_t v57 = *(void *)(v3 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  char v8 = (char *)v51 - v7;
  uint64_t v9 = type metadata accessor for ItemEntity();
  uint64_t v69 = *(void *)(v9 - 8);
  uint64_t v70 = v9;
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v51 - v13;
  uint64_t v15 = sub_24E2F07D0();
  uint64_t v53 = *(void *)(v15 - 8);
  uint64_t v54 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CA5E8);
  uint64_t v18 = *(void *)(v62 - 8);
  MEMORY[0x270FA5388](v62);
  uint64_t v68 = (char *)v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAC60);
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v52 = (char *)v51 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = *a1;
  uint64_t v22 = a1[1];
  uint64_t v24 = a1[3];
  uint64_t v63 = a1[2];
  uint64_t v25 = a1[6];
  int64_t v26 = *(void *)(v22 + 16);
  if (v26)
  {
    v51[4] = v23;
    v51[1] = v25;
    v51[2] = v24;
    uint64_t v73 = MEMORY[0x263F8EE78];
    int64_t v27 = v26;
    swift_bridgeObjectRetain();
    int64_t v60 = v27;
    sub_24E29591C(0, v27, 0);
    uint64_t v28 = 0;
    v51[3] = v22;
    uint64_t v58 = v18 + 32;
    uint64_t v59 = v22 + 32;
    uint64_t v56 = v17;
    uint64_t v61 = v18;
    do
    {
      uint64_t v67 = v28;
      uint64_t v29 = (uint64_t *)(v59 + 24 * v28);
      unint64_t v31 = v29[1];
      uint64_t v32 = v29[2];
      uint64_t v71 = *v29;
      uint64_t v30 = v71;
      unint64_t v72 = v31;
      sub_24E2AF210(v71, v31);
      swift_bridgeObjectRetain();
      sub_24E2DEB58();
      sub_24E2F07A0();
      int64_t v33 = *(void *)(v32 + 16);
      if (v33)
      {
        unint64_t v64 = v31;
        uint64_t v65 = v30;
        uint64_t v71 = MEMORY[0x263F8EE78];
        swift_bridgeObjectRetain();
        sub_24E2958E0(0, v33, 0);
        uint64_t v34 = *(unsigned __int8 *)(v57 + 80);
        uint64_t v66 = v32;
        uint64_t v35 = v32 + ((v34 + 32) & ~v34);
        uint64_t v36 = *(void *)(v57 + 72);
        do
        {
          sub_24E2AF154(v35, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for Item);
          sub_24E2AF154((uint64_t)v8, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for Item);
          sub_24E2AF154((uint64_t)v6, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for Item);
          type metadata accessor for AnyDisplayRepresentationImageCache();
          uint64_t v37 = swift_allocObject();
          swift_defaultActor_initialize();
          uint64_t v38 = v37 + OBJC_IVAR____TtC10FindMyCore34AnyDisplayRepresentationImageCache_cachedDisplayRepresentationImage;
          uint64_t v39 = sub_24E2F0590();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v38, 1, 1, v39);
          uint64_t v40 = (void *)(v37 + OBJC_IVAR____TtC10FindMyCore34AnyDisplayRepresentationImageCache_imageBuilder);
          *uint64_t v40 = &unk_2698CAC50;
          v40[1] = 0;
          sub_24E2AF098((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for Item);
          *(void *)&v12[*(int *)(v70 + 20)] = v37;
          sub_24E2AF030((uint64_t)v12, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ItemEntity);
          sub_24E2AF098((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for Item);
          uint64_t v41 = v71;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_24E2958E0(0, *(void *)(v41 + 16) + 1, 1);
            uint64_t v41 = v71;
          }
          unint64_t v43 = *(void *)(v41 + 16);
          unint64_t v42 = *(void *)(v41 + 24);
          if (v43 >= v42 >> 1)
          {
            sub_24E2958E0(v42 > 1, v43 + 1, 1);
            uint64_t v41 = v71;
          }
          *(void *)(v41 + 16) = v43 + 1;
          sub_24E2AF030((uint64_t)v14, v41+ ((*(unsigned __int8 *)(v69 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80))+ *(void *)(v69 + 72) * v43, (uint64_t (*)(void))type metadata accessor for ItemEntity);
          v35 += v36;
          --v33;
        }
        while (v33);
        swift_bridgeObjectRelease();
        unint64_t v31 = v64;
        uint64_t v30 = v65;
      }
      sub_24E2AF238(&qword_2698CACA0, (void (*)(uint64_t))type metadata accessor for ItemEntity);
      sub_24E2F0570();
      sub_24E2AF224(v30, v31);
      swift_bridgeObjectRelease();
      uint64_t v44 = v73;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v46 = v61;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_24E29591C(0, *(void *)(v44 + 16) + 1, 1);
        uint64_t v44 = v73;
      }
      unint64_t v48 = *(void *)(v44 + 16);
      unint64_t v47 = *(void *)(v44 + 24);
      if (v48 >= v47 >> 1)
      {
        sub_24E29591C(v47 > 1, v48 + 1, 1);
        uint64_t v44 = v73;
      }
      uint64_t v49 = v68;
      uint64_t v28 = v67 + 1;
      *(void *)(v44 + 16) = v48 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v46 + 32))(v44+ ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80))+ *(void *)(v46 + 72) * v48, v49, v62);
    }
    while (v28 != v60);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v53 + 56))(v52, 1, 1, v54);
  sub_24E2AF238(&qword_2698CACA0, (void (*)(uint64_t))type metadata accessor for ItemEntity);
  return sub_24E2F0580();
}

uint64_t ItemEntityQuery.allEntities()(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  uint64_t v3 = sub_24E2F0D70();
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E2A6E48, 0, 0);
}

uint64_t sub_24E2A6E48()
{
  uint64_t v19 = v0;
  uint64_t v2 = v0[7];
  uint64_t v1 = v0[8];
  uint64_t v4 = v0[5];
  uint64_t v3 = v0[6];
  uint64_t v5 = type metadata accessor for ItemEntityQuery();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4 + *(int *)(v5 + 20), v3);
  uint64_t v6 = sub_24E2F0D50();
  os_log_type_t v7 = sub_24E2F11E0();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v9 = v0[7];
    uint64_t v8 = v0[8];
    uint64_t v10 = v0[6];
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v18 = v12;
    *(_DWORD *)uint64_t v11 = 136315138;
    v0[3] = sub_24E29CA04(0x7469746E456C6C61, 0xED00002928736569, &v18);
    sub_24E2F1220();
    _os_log_impl(&dword_24E292000, v6, v7, "%s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x253338AC0](v12, -1, -1);
    MEMORY[0x253338AC0](v11, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  else
  {
    uint64_t v14 = v0[7];
    uint64_t v13 = v0[8];
    uint64_t v15 = v0[6];

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  }
  v0[2] = 0;
  uint64_t v16 = (void *)swift_task_alloc();
  v0[9] = (uint64_t)v16;
  *uint64_t v16 = v0;
  v16[1] = sub_24E2A707C;
  return sub_24E2A4E94(v0 + 2);
}

uint64_t sub_24E2A707C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 80) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_24E2A72A8;
  }
  else
  {
    *(void *)(v4 + 88) = a1;
    uint64_t v5 = sub_24E2A71A4;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_24E2A71A4()
{
  uint64_t v9 = v0;
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = sub_24E2AE778((uint64_t)&unk_27003AC38, (void (*)(void))sub_24E2AF2C4, (uint64_t)&type metadata for Item.Section.Category, &qword_2698CAEA0);
  v5[0] = MEMORY[0x263F8EE78];
  v5[1] = MEMORY[0x263F8EE78];
  v5[2] = MEMORY[0x263F8EE78];
  v5[3] = v2;
  char v6 = 0;
  uint64_t v7 = 0;
  unint64_t v8 = 0xE000000000000000;
  sub_24E2A7BE8();
  swift_bridgeObjectRelease();
  sub_24E2A65E8(v5, v1);
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_24E2A72A8()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24E2A730C(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_24E29D9A0;
  return ItemEntityQuery.allEntities()(a1);
}

uint64_t sub_24E2A73A8@<X0>(void *a1@<X8>)
{
  uint64_t v2 = sub_24E2F0D70();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  uint64_t v5 = MEMORY[0x270FA5388](v2);
  char v6 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  unint64_t v8 = (char *)&v13 - v7;
  sub_24E2F0D60();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
  v9(v6, v8, v2);
  unint64_t v10 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v11 = swift_allocObject();
  v9((char *)(v11 + v10), v6, v2);
  uint64_t result = sub_24E2F0D60();
  *a1 = &unk_2698CAD90;
  a1[1] = v11;
  return result;
}

uint64_t sub_24E2A756C(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_24E2A7600;
  return ItemEntityQuery.entities(for:)(a1);
}

uint64_t sub_24E2A7600(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t sub_24E2A7700(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  uint64_t v6 = sub_24E2AF238(&qword_2698CAD88, (void (*)(uint64_t))type metadata accessor for ItemEntityQuery);
  *uint64_t v5 = v2;
  v5[1] = sub_24E29DC58;
  return MEMORY[0x270EE1978](a1, a2, v6);
}

uint64_t sub_24E2A77E4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  uint64_t v6 = sub_24E2AF238(&qword_2698CAC80, (void (*)(uint64_t))type metadata accessor for ItemEntityQuery);
  *uint64_t v5 = v2;
  v5[1] = sub_24E29DC58;
  return MEMORY[0x270EE0E40](a1, a2, v6);
}

uint64_t sub_24E2A78C8(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_24E29D9A0;
  return ItemEntityQuery.defaultResult()(a1);
}

uint64_t sub_24E2A7968(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for Person();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v22 = (uint64_t)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v19 - v10;
  uint64_t v12 = MEMORY[0x263F8EE78];
  uint64_t v23 = MEMORY[0x263F8EE78];
  uint64_t v21 = *(void *)(a1 + 16);
  if (v21)
  {
    unint64_t v13 = 0;
    uint64_t v19 = a2;
    uint64_t v20 = a1;
    while (v13 < *(void *)(a1 + 16))
    {
      unint64_t v14 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      uint64_t v15 = *(void *)(v6 + 72);
      sub_24E2AF154(a1 + v14 + v15 * v13, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for Person);
      char v16 = sub_24E2A86A0((uint64_t)v11, a2);
      if (v2)
      {
        sub_24E2AF098((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for Person);
        swift_release();
        swift_bridgeObjectRelease();
        return v12;
      }
      if (v16)
      {
        sub_24E2AF030((uint64_t)v11, v22, (uint64_t (*)(void))type metadata accessor for Person);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_24E29594C(0, *(void *)(v12 + 16) + 1, 1);
        }
        uint64_t v12 = v23;
        unint64_t v18 = *(void *)(v23 + 16);
        unint64_t v17 = *(void *)(v23 + 24);
        if (v18 >= v17 >> 1)
        {
          sub_24E29594C(v17 > 1, v18 + 1, 1);
          uint64_t v12 = v23;
        }
        *(void *)(v12 + 16) = v18 + 1;
        uint64_t result = sub_24E2AF030(v22, v12 + v14 + v18 * v15, (uint64_t (*)(void))type metadata accessor for Person);
        a2 = v19;
        a1 = v20;
      }
      else
      {
        uint64_t result = sub_24E2AF098((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for Person);
      }
      if (v21 == ++v13)
      {
        uint64_t v12 = v23;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v12;
  }
  return result;
}

uint64_t sub_24E2A7BE8()
{
  uint64_t v1 = swift_bridgeObjectRetain();
  uint64_t v32 = (void *)v0;
  uint64_t v2 = 0;
  uint64_t v3 = sub_24E2AD420(v1, v0);
  swift_bridgeObjectRelease();
  uint64_t v36 = MEMORY[0x263F8EE78];
  swift_bridgeObjectRetain_n();
  uint64_t v4 = sub_24E2AAE70(v3);
  swift_bridgeObjectRelease();
  uint64_t v35 = (uint64_t)v4;
  sub_24E2AB030(&v35, sub_24E2AD008, sub_24E2AB0B4);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(v35 + 16);
  if (!v5)
  {
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v29 = MEMORY[0x263F8EE78];
    uint64_t v8 = (void *)MEMORY[0x263F8EE78];
    uint64_t v6 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_24;
  }
  uint64_t v6 = (void *)MEMORY[0x263F8EE78];
  uint64_t v31 = v3;
  uint64_t v7 = (unint64_t *)(v35 + 40);
  uint64_t v8 = (void *)MEMORY[0x263F8EE78];
  do
  {
    uint64_t v10 = *(v7 - 1);
    unint64_t v9 = *v7;
    uint64_t v11 = *(void *)(v3 + 16);
    sub_24E2AF210(v10, *v7);
    uint64_t v34 = v10;
    if (v11)
    {
      unint64_t v12 = sub_24E2C9960(v10, v9);
      uint64_t v13 = MEMORY[0x263F8EE78];
      if (v14)
      {
        uint64_t v13 = *(void *)(*(void *)(v3 + 56) + 8 * v12);
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      uint64_t v13 = MEMORY[0x263F8EE78];
    }
    uint64_t v35 = v13;
    uint64_t MyCore4ItemV4SortO8allCasesSayAEGvgZ_0 = _s10FindMyCore4ItemV4SortO8allCasesSayAEGvgZ_0();
    MEMORY[0x270FA5388](MyCore4ItemV4SortO8allCasesSayAEGvgZ_0);
    type metadata accessor for Item();
    sub_24E2AF238(&qword_2698CAE50, (void (*)(uint64_t))type metadata accessor for Item);
    sub_24E2AF238(&qword_2698CAE58, (void (*)(uint64_t))type metadata accessor for Item);
    sub_24E2AF238(&qword_2698CAE60, (void (*)(uint64_t))type metadata accessor for Item);
    uint64_t KeyPath = swift_getKeyPath();
    swift_retain();
    sub_24E2AD030(MyCore4ItemV4SortO8allCasesSayAEGvgZ_0, KeyPath);
    swift_bridgeObjectRelease();
    swift_release_n();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE68);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE70);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698CA608);
    sub_24E2AF280(&qword_2698CAE78, &qword_2698CAE68);
    sub_24E2AF280(&qword_2698CAE80, &qword_2698CAE70);
    sub_24E2AF280(&qword_2698CAE88, &qword_2698CA608);
    uint64_t v17 = sub_24E2F0FF0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v18 = swift_bridgeObjectRetain();
    uint64_t v19 = sub_24E2AD850(v18, (uint64_t)v32);
    swift_bridgeObjectRelease();
    uint64_t v20 = sub_24E2ADB5C(v19, (uint64_t)v32);
    swift_bridgeObjectRelease();
    uint64_t v33 = v2;
    if (*(void *)(v17 + 16))
    {
      sub_24E2AF210(v34, v9);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v8 = sub_24E2E447C(0, v8[2] + 1, 1, v8);
      }
      uint64_t v21 = v31;
      unint64_t v23 = v8[2];
      unint64_t v22 = v8[3];
      if (v23 >= v22 >> 1) {
        uint64_t v8 = sub_24E2E447C((void *)(v22 > 1), v23 + 1, 1, v8);
      }
      v8[2] = v23 + 1;
      uint64_t v24 = &v8[3 * v23];
      uint64_t v25 = v34;
      v24[4] = v34;
      v24[5] = v9;
      v24[6] = v17;
      if (!*(void *)(v20 + 16))
      {
LABEL_3:
        sub_24E2AF224(v25, v9);
        swift_bridgeObjectRelease();
        goto LABEL_4;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v21 = v31;
      uint64_t v25 = v34;
      if (!*(void *)(v20 + 16)) {
        goto LABEL_3;
      }
    }
    sub_24E2AF210(v25, v9);
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v6 = sub_24E2E447C(0, v6[2] + 1, 1, v6);
    }
    unint64_t v27 = v6[2];
    unint64_t v26 = v6[3];
    if (v27 >= v26 >> 1) {
      uint64_t v6 = sub_24E2E447C((void *)(v26 > 1), v27 + 1, 1, v6);
    }
    v6[2] = v27 + 1;
    uint64_t v28 = &v6[3 * v27];
    v28[4] = v25;
    v28[5] = v9;
    v28[6] = v20;
    sub_24E2E3830(v20);
    sub_24E2AF224(v25, v9);
LABEL_4:
    v7 += 2;
    --v5;
    uint64_t v3 = v21;
    uint64_t v2 = v33;
  }
  while (v5);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v29 = v36;
LABEL_24:
  swift_bridgeObjectRelease();
  *uint64_t v32 = v8;
  swift_bridgeObjectRelease();
  v32[1] = v6;
  uint64_t result = swift_bridgeObjectRelease();
  void v32[2] = v29;
  return result;
}

uint64_t sub_24E2A8180()
{
  uint64_t v1 = swift_bridgeObjectRetain();
  uint64_t v28 = (void *)v0;
  uint64_t v2 = sub_24E2AE900(v1, v0);
  swift_bridgeObjectRelease();
  uint64_t v31 = MEMORY[0x263F8EE78];
  swift_bridgeObjectRetain_n();
  uint64_t v3 = sub_24E2AAF58(v2);
  swift_bridgeObjectRelease();
  uint64_t v30 = v3;
  sub_24E2AB030(&v30, sub_24E2AD01C, sub_24E2AB968);
  swift_bridgeObjectRelease();
  uint64_t v4 = v30;
  uint64_t v27 = *(void *)(v30 + 16);
  if (!v27)
  {
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v23 = MEMORY[0x263F8EE78];
    uint64_t v7 = (void *)MEMORY[0x263F8EE78];
    uint64_t v6 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_24;
  }
  uint64_t v5 = 0;
  uint64_t v6 = (void *)MEMORY[0x263F8EE78];
  uint64_t v7 = (void *)MEMORY[0x263F8EE78];
  uint64_t v25 = v30;
  uint64_t v26 = v2;
  do
  {
    unint64_t v8 = *(unsigned __int8 *)(v4 + v5 + 32);
    char v29 = *(unsigned char *)(v4 + v5 + 32);
    if (*(void *)(v2 + 16))
    {
      unint64_t v8 = sub_24E2C9A34(v8);
      uint64_t v9 = MEMORY[0x263F8EE78];
      if (v10)
      {
        uint64_t v9 = *(void *)(*(void *)(v2 + 56) + 8 * v8);
        unint64_t v8 = swift_bridgeObjectRetain();
      }
    }
    else
    {
      uint64_t v9 = MEMORY[0x263F8EE78];
    }
    uint64_t v30 = v9;
    MEMORY[0x270FA5388](v8);
    type metadata accessor for Person();
    sub_24E2AF238(&qword_2698CADC8, (void (*)(uint64_t))type metadata accessor for Person);
    sub_24E2AF238(&qword_2698CADD0, (void (*)(uint64_t))type metadata accessor for Person);
    sub_24E2AF238(&qword_2698CADD8, (void (*)(uint64_t))type metadata accessor for Person);
    uint64_t KeyPath = swift_getKeyPath();
    swift_retain();
    sub_24E2AD1CC((uint64_t)&unk_27003AC60, KeyPath);
    swift_release_n();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698CADE0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698CADE8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698CA5D0);
    sub_24E2AF280(&qword_2698CADF0, &qword_2698CADE0);
    sub_24E2AF280(&qword_2698CADF8, &qword_2698CADE8);
    sub_24E2AF280(&qword_2698CAE00, &qword_2698CA5D0);
    uint64_t v12 = sub_24E2F0FF0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v13 = swift_bridgeObjectRetain();
    uint64_t v14 = sub_24E2A7968(v13, (uint64_t)v28);
    uint64_t v15 = sub_24E2AEDB4(v14, (uint64_t)v28);
    swift_bridgeObjectRelease();
    if (*(void *)(v12 + 16))
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v7 = sub_24E2E4988(0, v7[2] + 1, 1, v7);
      }
      uint64_t v4 = v25;
      uint64_t v2 = v26;
      unint64_t v17 = v7[2];
      unint64_t v16 = v7[3];
      if (v17 >= v16 >> 1) {
        uint64_t v7 = sub_24E2E4988((void *)(v16 > 1), v17 + 1, 1, v7);
      }
      v7[2] = v17 + 1;
      uint64_t v18 = &v7[2 * v17];
      char v19 = v29;
      *((unsigned char *)v18 + 32) = v29;
      v18[5] = v12;
      if (!*(void *)(v15 + 16))
      {
LABEL_3:
        swift_bridgeObjectRelease();
        goto LABEL_4;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v4 = v25;
      uint64_t v2 = v26;
      char v19 = v29;
      if (!*(void *)(v15 + 16)) {
        goto LABEL_3;
      }
    }
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v6 = sub_24E2E4988(0, v6[2] + 1, 1, v6);
    }
    unint64_t v21 = v6[2];
    unint64_t v20 = v6[3];
    if (v21 >= v20 >> 1) {
      uint64_t v6 = sub_24E2E4988((void *)(v20 > 1), v21 + 1, 1, v6);
    }
    v6[2] = v21 + 1;
    unint64_t v22 = &v6[2 * v21];
    *((unsigned char *)v22 + 32) = v19;
    v22[5] = v15;
    sub_24E2E3878(v15);
LABEL_4:
    ++v5;
  }
  while (v27 != v5);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v23 = v31;
LABEL_24:
  swift_bridgeObjectRelease();
  *uint64_t v28 = v7;
  swift_bridgeObjectRelease();
  v28[1] = v6;
  uint64_t result = swift_bridgeObjectRelease();
  v28[2] = v23;
  return result;
}

uint64_t sub_24E2A86A0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for Person();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a2 + 40);
  unint64_t v9 = *(void *)(a2 + 48);
  if ((v9 & 0x2000000000000000) != 0) {
    uint64_t v10 = HIBYTE(v9) & 0xF;
  }
  else {
    uint64_t v10 = v8 & 0xFFFFFFFFFFFFLL;
  }
  sub_24E2AF154(a1, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for Person);
  if (v10)
  {
    uint64_t v35 = v2;
    uint64_t v11 = *((void *)v7 + 9);
    uint64_t v33 = *((void *)v7 + 8);
    uint64_t v34 = v11;
    uint64_t v31 = v8;
    unint64_t v32 = v9;
    sub_24E2AF0F8();
    swift_bridgeObjectRetain();
    int v12 = sub_24E2F1250();
    uint64_t v13 = *((void *)v7 + 4);
    uint64_t v14 = *((void *)v7 + 5);
    char v15 = v7[48];
    uint64_t v16 = *((void *)v7 + 7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698CB740);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24E2F1C10;
    *(void *)(inited + 32) = v13;
    *(void *)(inited + 40) = v14;
    *(unsigned char *)(inited + 48) = v15;
    uint64_t v33 = inited;
    uint64_t v30 = v14;
    swift_bridgeObjectRetain();
    uint64_t v18 = swift_bridgeObjectRetain();
    uint64_t v29 = v16;
    sub_24E2E3A98(v18);
    uint64_t v19 = v33;
    uint64_t v20 = *(void *)(v33 + 16);
    if (v20)
    {
      HIDWORD(v28) = v12;
      swift_bridgeObjectRetain();
      uint64_t v21 = v20 - 1;
      unint64_t v22 = (uint64_t *)(v19 + 40);
      do
      {
        uint64_t v23 = v21;
        uint64_t v24 = *v22;
        uint64_t v33 = *(v22 - 1);
        uint64_t v34 = v24;
        uint64_t v31 = v8;
        unint64_t v32 = v9;
        char v25 = sub_24E2F1250();
        if (v25) {
          break;
        }
        uint64_t v21 = v23 - 1;
        v22 += 3;
      }
      while (v23);
      swift_bridgeObjectRelease();
      LOBYTE(v12) = BYTE4(v28);
    }
    else
    {
      char v25 = 0;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v26 = v12 | v25;
  }
  else
  {
    char v26 = 1;
  }
  sub_24E2AF098((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for Person);
  return v26 & 1;
}

uint64_t sub_24E2A88EC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE90);
  uint64_t v6 = sub_24E2F1370();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v31 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v30 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v15 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v16 = v15 | (v13 << 6);
      }
      else
      {
        int64_t v17 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v17 >= v30) {
          goto LABEL_35;
        }
        unint64_t v18 = v31[v17];
        ++v13;
        if (!v18)
        {
          int64_t v13 = v17 + 1;
          if (v17 + 1 >= v30) {
            goto LABEL_35;
          }
          unint64_t v18 = v31[v13];
          if (!v18)
          {
            int64_t v19 = v17 + 2;
            if (v19 >= v30)
            {
LABEL_35:
              swift_release();
              uint64_t v3 = v2;
              if (a2)
              {
                uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
                if (v29 >= 64) {
                  bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v31 = -1 << v29;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v18 = v31[v19];
            if (!v18)
            {
              while (1)
              {
                int64_t v13 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_42;
                }
                if (v13 >= v30) {
                  goto LABEL_35;
                }
                unint64_t v18 = v31[v13];
                ++v19;
                if (v18) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v19;
          }
        }
LABEL_21:
        unint64_t v10 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v13 << 6);
      }
      uint64_t v20 = *(void *)(*(void *)(v5 + 56) + 8 * v16);
      long long v32 = *(_OWORD *)(*(void *)(v5 + 48) + 16 * v16);
      unint64_t v21 = *(void *)(*(void *)(v5 + 48) + 16 * v16 + 8);
      if ((a2 & 1) == 0)
      {
        sub_24E2AF210(v32, v21);
        swift_bridgeObjectRetain();
      }
      sub_24E2F14A0();
      sub_24E2F14B0();
      sub_24E2F14B0();
      if (v21 > 2)
      {
        swift_bridgeObjectRetain();
        sub_24E2F0F20();
        sub_24E2AF224(v32, v21);
      }
      uint64_t result = sub_24E2F14D0();
      uint64_t v22 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v11 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v23) & ~*(void *)(v11 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v14 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_OWORD *)(*(void *)(v7 + 48) + 16 * v14) = v32;
      *(void *)(*(void *)(v7 + 56) + 8 * v14) = v20;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_24E2A8C4C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE28);
  uint64_t result = sub_24E2F1370();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    int64_t v30 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v29 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v19 >= v29) {
          goto LABEL_33;
        }
        unint64_t v20 = v30[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v29) {
            goto LABEL_33;
          }
          unint64_t v20 = v30[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v29)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v28 = 1 << *(unsigned char *)(v5 + 32);
              if (v28 >= 64) {
                bzero(v30, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *int64_t v30 = -1 << v28;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v30[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v29) {
                  goto LABEL_33;
                }
                unint64_t v20 = v30[v8];
                ++v21;
                if (v20) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_30:
        unint64_t v11 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      char v26 = *(unsigned char *)(*(void *)(v5 + 48) + v18);
      uint64_t v27 = *(void *)(*(void *)(v5 + 56) + 8 * v18);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_24E2F14A0();
      sub_24E2F14B0();
      uint64_t result = sub_24E2F14D0();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v24 = v15 == v23;
          if (v15 == v23) {
            unint64_t v15 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v12 + 8 * v15);
        }
        while (v25 == -1);
        unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(unsigned char *)(*(void *)(v7 + 48) + v16) = v26;
      *(void *)(*(void *)(v7 + 56) + 8 * v16) = v27;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_24E2A8F20(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE40);
  uint64_t v6 = sub_24E2F1370();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v31 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v30 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v15 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v16 = v15 | (v13 << 6);
      }
      else
      {
        int64_t v17 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v17 >= v30) {
          goto LABEL_35;
        }
        unint64_t v18 = v31[v17];
        ++v13;
        if (!v18)
        {
          int64_t v13 = v17 + 1;
          if (v17 + 1 >= v30) {
            goto LABEL_35;
          }
          unint64_t v18 = v31[v13];
          if (!v18)
          {
            int64_t v19 = v17 + 2;
            if (v19 >= v30)
            {
LABEL_35:
              swift_release();
              uint64_t v3 = v2;
              if (a2)
              {
                uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
                if (v29 >= 64) {
                  bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v31 = -1 << v29;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v18 = v31[v19];
            if (!v18)
            {
              while (1)
              {
                int64_t v13 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_42;
                }
                if (v13 >= v30) {
                  goto LABEL_35;
                }
                unint64_t v18 = v31[v13];
                ++v19;
                if (v18) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v19;
          }
        }
LABEL_21:
        unint64_t v10 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v13 << 6);
      }
      uint64_t v20 = *(void *)(*(void *)(v5 + 56) + 8 * v16);
      long long v32 = *(_OWORD *)(*(void *)(v5 + 48) + 16 * v16);
      uint64_t v21 = *(void *)(*(void *)(v5 + 48) + 16 * v16 + 8);
      if ((a2 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_24E2F14A0();
      sub_24E2F14C0();
      if (v21)
      {
        swift_bridgeObjectRetain();
        sub_24E2F0F20();
        swift_bridgeObjectRelease();
      }
      uint64_t result = sub_24E2F14D0();
      uint64_t v22 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v11 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v23) & ~*(void *)(v11 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v14 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_OWORD *)(*(void *)(v7 + 48) + 16 * v14) = v32;
      *(void *)(*(void *)(v7 + 56) + 8 * v14) = v20;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_24E2A9244(unsigned char *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v7 = *v3;
  sub_24E2F14A0();
  sub_24E2F14B0();
  uint64_t v8 = sub_24E2F14D0();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v15 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_24E2A9EF0(a2, v10, isUniquelyReferenced_nonNull_native, a3);
    *uint64_t v3 = v15;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v11 = *(void *)(v7 + 48);
  if (*(unsigned __int8 *)(v11 + v10) != a2)
  {
    uint64_t v12 = ~v9;
    do
    {
      unint64_t v10 = (v10 + 1) & v12;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(unsigned __int8 *)(v11 + v10) != a2);
  }
  uint64_t result = 0;
  LOBYTE(a2) = *(unsigned char *)(*(void *)(*v3 + 48) + v10);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_24E2A937C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v9 = *v4;
  sub_24E2F14A0();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24E2F0F20();
  swift_bridgeObjectRelease();
  sub_24E2F14B0();
  uint64_t v10 = sub_24E2F14D0();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  if ((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    uint64_t v13 = *(void *)(v9 + 48);
    unint64_t v14 = (void *)(v13 + 16 * v12);
    BOOL v15 = *v14 == a2 && v14[1] == a3;
    if (v15 || (sub_24E2F1430() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v16 = (uint64_t *)(*(void *)(*v4 + 48) + 16 * v12);
      uint64_t v17 = v16[1];
      *a1 = *v16;
      a1[1] = v17;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v19 = ~v11;
    while (1)
    {
      unint64_t v12 = (v12 + 1) & v19;
      if (((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
        break;
      }
      uint64_t v20 = (void *)(v13 + 16 * v12);
      BOOL v21 = *v20 == a2 && v20[1] == a3;
      if (v21 || (sub_24E2F1430() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v23 = *v4;
  *uint64_t v4 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_24E2AA04C(a2, a3, v12, isUniquelyReferenced_nonNull_native, a4);
  *uint64_t v4 = v23;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_24E2A9558(unsigned char *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v7 = *v3;
  sub_24E2F14A0();
  sub_24E2F14B0();
  sub_24E2F14B0();
  uint64_t v8 = sub_24E2F14D0();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v15 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_24E2AA210(a2, v10, isUniquelyReferenced_nonNull_native, a3);
    *uint64_t v3 = v15;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v11 = *(void *)(v7 + 48);
  if (*(unsigned __int8 *)(v11 + v10) != a2)
  {
    uint64_t v12 = ~v9;
    do
    {
      unint64_t v10 = (v10 + 1) & v12;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(unsigned __int8 *)(v11 + v10) != a2);
  }
  uint64_t result = 0;
  LOBYTE(a2) = *(unsigned char *)(*(void *)(*v3 + 48) + v10);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_24E2A969C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t result = sub_24E2F1270();
  uint64_t v6 = result;
  if (*(void *)(v4 + 16))
  {
    int64_t v7 = 0;
    uint64_t v8 = (void *)(v4 + 56);
    uint64_t v9 = 1 << *(unsigned char *)(v4 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v4 + 56);
    int64_t v12 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = result + 56;
    while (1)
    {
      if (v11)
      {
        unint64_t v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v16 = v15 | (v7 << 6);
      }
      else
      {
        int64_t v17 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v17 >= v12) {
          goto LABEL_33;
        }
        unint64_t v18 = v8[v17];
        ++v7;
        if (!v18)
        {
          int64_t v7 = v17 + 1;
          if (v17 + 1 >= v12) {
            goto LABEL_33;
          }
          unint64_t v18 = v8[v7];
          if (!v18)
          {
            int64_t v7 = v17 + 2;
            if (v17 + 2 >= v12) {
              goto LABEL_33;
            }
            unint64_t v18 = v8[v7];
            if (!v18)
            {
              int64_t v19 = v17 + 3;
              if (v19 >= v12)
              {
LABEL_33:
                uint64_t v28 = 1 << *(unsigned char *)(v4 + 32);
                if (v28 > 63) {
                  bzero((void *)(v4 + 56), ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v8 = -1 << v28;
                }
                uint64_t v3 = v2;
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v18 = v8[v19];
              if (!v18)
              {
                while (1)
                {
                  int64_t v7 = v19 + 1;
                  if (__OFADD__(v19, 1)) {
                    goto LABEL_39;
                  }
                  if (v7 >= v12) {
                    goto LABEL_33;
                  }
                  unint64_t v18 = v8[v7];
                  ++v19;
                  if (v18) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v7 = v19;
            }
          }
        }
LABEL_23:
        unint64_t v11 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v7 << 6);
      }
      char v20 = *(unsigned char *)(*(void *)(v4 + 48) + v16);
      sub_24E2F14A0();
      sub_24E2F14B0();
      uint64_t result = sub_24E2F14D0();
      uint64_t v21 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v22 = result & ~v21;
      unint64_t v23 = v22 >> 6;
      if (((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v26 = v23 == v25;
          if (v23 == v25) {
            unint64_t v23 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v13 + 8 * v23);
        }
        while (v27 == -1);
        unint64_t v14 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(void *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(unsigned char *)(*(void *)(v6 + 48) + v14) = v20;
      ++*(void *)(v6 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v6;
  return result;
}

uint64_t sub_24E2A9944(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v5 = sub_24E2F1270();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    long long v32 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v4 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v9)
      {
        unint64_t v16 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v17 = v16 | (v13 << 6);
      }
      else
      {
        int64_t v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v10) {
          goto LABEL_33;
        }
        unint64_t v19 = v32[v18];
        ++v13;
        if (!v19)
        {
          int64_t v13 = v18 + 1;
          if (v18 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v19 = v32[v13];
          if (!v19)
          {
            int64_t v13 = v18 + 2;
            if (v18 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v19 = v32[v13];
            if (!v19)
            {
              int64_t v20 = v18 + 3;
              if (v20 >= v10)
              {
LABEL_33:
                swift_release();
                uint64_t v3 = v2;
                uint64_t v31 = 1 << *(unsigned char *)(v4 + 32);
                if (v31 > 63) {
                  bzero(v32, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *long long v32 = -1 << v31;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v19 = v32[v20];
              if (!v19)
              {
                while (1)
                {
                  int64_t v13 = v20 + 1;
                  if (__OFADD__(v20, 1)) {
                    goto LABEL_39;
                  }
                  if (v13 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v19 = v32[v13];
                  ++v20;
                  if (v19) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v13 = v20;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      uint64_t v21 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v17);
      uint64_t v22 = *v21;
      uint64_t v23 = v21[1];
      sub_24E2F14A0();
      swift_bridgeObjectRetain();
      sub_24E2F0F20();
      swift_bridgeObjectRelease();
      sub_24E2F14B0();
      uint64_t result = sub_24E2F14D0();
      uint64_t v24 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v25 = result & ~v24;
      unint64_t v26 = v25 >> 6;
      if (((-1 << v25) & ~*(void *)(v11 + 8 * (v25 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v25) & ~*(void *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v27 = 0;
        unint64_t v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v29 = v26 == v28;
          if (v26 == v28) {
            unint64_t v26 = 0;
          }
          v27 |= v29;
          uint64_t v30 = *(void *)(v11 + 8 * v26);
        }
        while (v30 == -1);
        unint64_t v14 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      unint64_t v15 = (void *)(*(void *)(v6 + 48) + 16 * v14);
      *unint64_t v15 = v22;
      v15[1] = v23;
      ++*(void *)(v6 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v6;
  return result;
}

uint64_t sub_24E2A9C3C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t result = sub_24E2F1270();
  uint64_t v6 = result;
  if (*(void *)(v4 + 16))
  {
    int64_t v7 = 0;
    uint64_t v8 = (void *)(v4 + 56);
    uint64_t v9 = 1 << *(unsigned char *)(v4 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v4 + 56);
    int64_t v12 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = result + 56;
    while (1)
    {
      if (v11)
      {
        unint64_t v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v16 = v15 | (v7 << 6);
      }
      else
      {
        int64_t v17 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v17 >= v12) {
          goto LABEL_33;
        }
        unint64_t v18 = v8[v17];
        ++v7;
        if (!v18)
        {
          int64_t v7 = v17 + 1;
          if (v17 + 1 >= v12) {
            goto LABEL_33;
          }
          unint64_t v18 = v8[v7];
          if (!v18)
          {
            int64_t v7 = v17 + 2;
            if (v17 + 2 >= v12) {
              goto LABEL_33;
            }
            unint64_t v18 = v8[v7];
            if (!v18)
            {
              int64_t v19 = v17 + 3;
              if (v19 >= v12)
              {
LABEL_33:
                uint64_t v28 = 1 << *(unsigned char *)(v4 + 32);
                if (v28 > 63) {
                  bzero((void *)(v4 + 56), ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v8 = -1 << v28;
                }
                uint64_t v3 = v2;
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v18 = v8[v19];
              if (!v18)
              {
                while (1)
                {
                  int64_t v7 = v19 + 1;
                  if (__OFADD__(v19, 1)) {
                    goto LABEL_39;
                  }
                  if (v7 >= v12) {
                    goto LABEL_33;
                  }
                  unint64_t v18 = v8[v7];
                  ++v19;
                  if (v18) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v7 = v19;
            }
          }
        }
LABEL_23:
        unint64_t v11 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v7 << 6);
      }
      char v20 = *(unsigned char *)(*(void *)(v4 + 48) + v16);
      sub_24E2F14A0();
      sub_24E2F14B0();
      sub_24E2F14B0();
      uint64_t result = sub_24E2F14D0();
      uint64_t v21 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v22 = result & ~v21;
      unint64_t v23 = v22 >> 6;
      if (((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v26 = v23 == v25;
          if (v23 == v25) {
            unint64_t v23 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v13 + 8 * v23);
        }
        while (v27 == -1);
        unint64_t v14 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(void *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(unsigned char *)(*(void *)(v6 + 48) + v14) = v20;
      ++*(void *)(v6 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v6;
  return result;
}

uint64_t sub_24E2A9EF0(uint64_t result, unint64_t a2, char a3, uint64_t *a4)
{
  int v6 = result;
  unint64_t v7 = *(void *)(*v4 + 16);
  unint64_t v8 = *(void *)(*v4 + 24);
  if (v8 > v7 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v9 = v7 + 1;
  if (a3)
  {
    sub_24E2A969C(v9, a4);
  }
  else
  {
    if (v8 > v7)
    {
      uint64_t result = (uint64_t)sub_24E2AA378(a4);
      goto LABEL_14;
    }
    sub_24E2AA6B0(v9, a4);
  }
  uint64_t v10 = *v4;
  sub_24E2F14A0();
  sub_24E2F14B0();
  uint64_t result = sub_24E2F14D0();
  uint64_t v11 = -1 << *(unsigned char *)(v10 + 32);
  a2 = result & ~v11;
  if ((*(void *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v12 = *(void *)(v10 + 48);
    if (*(unsigned __int8 *)(v12 + a2) == v6)
    {
LABEL_13:
      uint64_t result = sub_24E2F1440();
      __break(1u);
    }
    else
    {
      uint64_t v13 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(void *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(unsigned __int8 *)(v12 + a2) == v6) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v14 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v14 + 48) + a2) = v6;
  uint64_t v15 = *(void *)(v14 + 16);
  BOOL v16 = __OFADD__(v15, 1);
  uint64_t v17 = v15 + 1;
  if (v16) {
    __break(1u);
  }
  else {
    *(void *)(v14 + 16) = v17;
  }
  return result;
}

uint64_t sub_24E2AA04C(uint64_t result, uint64_t a2, unint64_t a3, char a4, uint64_t *a5)
{
  int v6 = v5;
  uint64_t v9 = result;
  unint64_t v10 = *(void *)(*v5 + 16);
  unint64_t v11 = *(void *)(*v5 + 24);
  if (v11 > v10 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  uint64_t v12 = v10 + 1;
  if (a4)
  {
    sub_24E2A9944(v12, a5);
  }
  else
  {
    if (v11 > v10)
    {
      uint64_t result = (uint64_t)sub_24E2AA504(a5);
      goto LABEL_22;
    }
    sub_24E2AA928(v12, a5);
  }
  uint64_t v13 = *v5;
  sub_24E2F14A0();
  swift_bridgeObjectRetain();
  sub_24E2F0F20();
  swift_bridgeObjectRelease();
  sub_24E2F14B0();
  uint64_t result = sub_24E2F14D0();
  uint64_t v14 = -1 << *(unsigned char *)(v13 + 32);
  a3 = result & ~v14;
  uint64_t v15 = v13 + 56;
  if ((*(void *)(v13 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v16 = *(void *)(v13 + 48);
    uint64_t v17 = (void *)(v16 + 16 * a3);
    BOOL v18 = *v17 == v9 && v17[1] == a2;
    if (v18 || (uint64_t result = sub_24E2F1430(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_24E2F1440();
      __break(1u);
    }
    else
    {
      uint64_t v19 = ~v14;
      while (1)
      {
        a3 = (a3 + 1) & v19;
        if (((*(void *)(v15 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        char v20 = (void *)(v16 + 16 * a3);
        if (*v20 != v9 || v20[1] != a2)
        {
          uint64_t result = sub_24E2F1430();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v22 = *v6;
  *(void *)(*v6 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  unint64_t v23 = (uint64_t *)(*(void *)(v22 + 48) + 16 * a3);
  *unint64_t v23 = v9;
  v23[1] = a2;
  uint64_t v24 = *(void *)(v22 + 16);
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25) {
    __break(1u);
  }
  else {
    *(void *)(v22 + 16) = v26;
  }
  return result;
}

uint64_t sub_24E2AA210(uint64_t result, unint64_t a2, char a3, uint64_t *a4)
{
  int v6 = result;
  unint64_t v7 = *(void *)(*v4 + 16);
  unint64_t v8 = *(void *)(*v4 + 24);
  if (v8 > v7 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v9 = v7 + 1;
  if (a3)
  {
    sub_24E2A9C3C(v9, a4);
  }
  else
  {
    if (v8 > v7)
    {
      uint64_t result = (uint64_t)sub_24E2AA378(a4);
      goto LABEL_14;
    }
    sub_24E2AABEC(v9, a4);
  }
  uint64_t v10 = *v4;
  sub_24E2F14A0();
  sub_24E2F14B0();
  sub_24E2F14B0();
  uint64_t result = sub_24E2F14D0();
  uint64_t v11 = -1 << *(unsigned char *)(v10 + 32);
  a2 = result & ~v11;
  if ((*(void *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v12 = *(void *)(v10 + 48);
    if (*(unsigned __int8 *)(v12 + a2) == v6)
    {
LABEL_13:
      uint64_t result = sub_24E2F1440();
      __break(1u);
    }
    else
    {
      uint64_t v13 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(void *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(unsigned __int8 *)(v12 + a2) == v6) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v14 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v14 + 48) + a2) = v6;
  uint64_t v15 = *(void *)(v14 + 16);
  BOOL v16 = __OFADD__(v15, 1);
  uint64_t v17 = v15 + 1;
  if (v16) {
    __break(1u);
  }
  else {
    *(void *)(v14 + 16) = v17;
  }
  return result;
}

void *sub_24E2AA378(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_24E2F1260();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  uint64_t result = (void *)(v4 + 56);
  uint64_t v7 = v3 + 56;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8) {
    uint64_t result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v17);
    ++v10;
    if (!v18)
    {
      int64_t v10 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v7 + 8 * v10);
      if (!v18)
      {
        int64_t v10 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v7 + 8 * v10);
        if (!v18) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v13 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_12:
    *(unsigned char *)(*(void *)(v5 + 48) + v16) = *(unsigned char *)(*(void *)(v3 + 48) + v16);
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v7 + 8 * v19);
  if (v18)
  {
    int64_t v10 = v19;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v10 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v10);
    ++v19;
    if (v18) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_24E2AA504(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_24E2F1260();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  uint64_t result = (void *)(v4 + 56);
  uint64_t v7 = v3 + 56;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8) {
    uint64_t result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v14) {
      goto LABEL_28;
    }
    unint64_t v22 = *(void *)(v7 + 8 * v21);
    ++v10;
    if (!v22)
    {
      int64_t v10 = v21 + 1;
      if (v21 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v22 = *(void *)(v7 + 8 * v10);
      if (!v22)
      {
        int64_t v10 = v21 + 2;
        if (v21 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v22 = *(void *)(v7 + 8 * v10);
        if (!v22) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v13 = (v22 - 1) & v22;
    unint64_t v16 = __clz(__rbit64(v22)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 16 * v16;
    unint64_t v18 = (void *)(*(void *)(v3 + 48) + v17);
    uint64_t v19 = v18[1];
    char v20 = (void *)(*(void *)(v5 + 48) + v17);
    *char v20 = *v18;
    v20[1] = v19;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v23 = v21 + 3;
  if (v23 >= v14) {
    goto LABEL_28;
  }
  unint64_t v22 = *(void *)(v7 + 8 * v23);
  if (v22)
  {
    int64_t v10 = v23;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v10 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_28;
    }
    unint64_t v22 = *(void *)(v7 + 8 * v10);
    ++v23;
    if (v22) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_24E2AA6B0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t result = sub_24E2F1270();
  uint64_t v6 = result;
  if (!*(void *)(v4 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v3 = v6;
    return result;
  }
  int64_t v7 = 0;
  uint64_t v8 = v4 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(v4 + 32);
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v4 + 56);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = result + 56;
  while (1)
  {
    if (v11)
    {
      unint64_t v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v16 = v15 | (v7 << 6);
      goto LABEL_24;
    }
    int64_t v17 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v17 >= v12) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v8 + 8 * v17);
    ++v7;
    if (!v18)
    {
      int64_t v7 = v17 + 1;
      if (v17 + 1 >= v12) {
        goto LABEL_33;
      }
      unint64_t v18 = *(void *)(v8 + 8 * v7);
      if (!v18)
      {
        int64_t v7 = v17 + 2;
        if (v17 + 2 >= v12) {
          goto LABEL_33;
        }
        unint64_t v18 = *(void *)(v8 + 8 * v7);
        if (!v18) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v11 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v7 << 6);
LABEL_24:
    char v20 = *(unsigned char *)(*(void *)(v4 + 48) + v16);
    sub_24E2F14A0();
    sub_24E2F14B0();
    uint64_t result = sub_24E2F14D0();
    uint64_t v21 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v13 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v14 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(unsigned char *)(*(void *)(v6 + 48) + v14) = v20;
    ++*(void *)(v6 + 16);
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v12)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v3 = v2;
    goto LABEL_35;
  }
  unint64_t v18 = *(void *)(v8 + 8 * v19);
  if (v18)
  {
    int64_t v7 = v19;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v7 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v7 >= v12) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v8 + 8 * v7);
    ++v19;
    if (v18) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_24E2AA928(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v5 = sub_24E2F1270();
  uint64_t v6 = v5;
  if (!*(void *)(v4 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v3 = v6;
    return result;
  }
  uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v8 = v4 + 56;
  if (v7 < 64) {
    uint64_t v9 = ~(-1 << v7);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v4 + 56);
  int64_t v31 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = v5 + 56;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v13 << 6);
      goto LABEL_24;
    }
    int64_t v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >= v31) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v8 + 8 * v18);
    ++v13;
    if (!v19)
    {
      int64_t v13 = v18 + 1;
      if (v18 + 1 >= v31) {
        goto LABEL_33;
      }
      unint64_t v19 = *(void *)(v8 + 8 * v13);
      if (!v19)
      {
        int64_t v13 = v18 + 2;
        if (v18 + 2 >= v31) {
          goto LABEL_33;
        }
        unint64_t v19 = *(void *)(v8 + 8 * v13);
        if (!v19) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_24:
    uint64_t v21 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v17);
    uint64_t v22 = *v21;
    uint64_t v23 = v21[1];
    sub_24E2F14A0();
    swift_bridgeObjectRetain_n();
    sub_24E2F0F20();
    swift_bridgeObjectRelease();
    sub_24E2F14B0();
    uint64_t result = sub_24E2F14D0();
    uint64_t v24 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v25 = result & ~v24;
    unint64_t v26 = v25 >> 6;
    if (((-1 << v25) & ~*(void *)(v11 + 8 * (v25 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v25) & ~*(void *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v29 = v26 == v28;
        if (v26 == v28) {
          unint64_t v26 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v26);
      }
      while (v30 == -1);
      unint64_t v14 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    unint64_t v15 = (void *)(*(void *)(v6 + 48) + 16 * v14);
    *unint64_t v15 = v22;
    v15[1] = v23;
    ++*(void *)(v6 + 16);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v31)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v3 = v2;
    goto LABEL_35;
  }
  unint64_t v19 = *(void *)(v8 + 8 * v20);
  if (v19)
  {
    int64_t v13 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v13 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v13 >= v31) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v8 + 8 * v13);
    ++v20;
    if (v19) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_24E2AABEC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t result = sub_24E2F1270();
  uint64_t v6 = result;
  if (!*(void *)(v4 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v3 = v6;
    return result;
  }
  int64_t v7 = 0;
  uint64_t v8 = v4 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(v4 + 32);
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v4 + 56);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = result + 56;
  while (1)
  {
    if (v11)
    {
      unint64_t v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v16 = v15 | (v7 << 6);
      goto LABEL_24;
    }
    int64_t v17 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v17 >= v12) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v8 + 8 * v17);
    ++v7;
    if (!v18)
    {
      int64_t v7 = v17 + 1;
      if (v17 + 1 >= v12) {
        goto LABEL_33;
      }
      unint64_t v18 = *(void *)(v8 + 8 * v7);
      if (!v18)
      {
        int64_t v7 = v17 + 2;
        if (v17 + 2 >= v12) {
          goto LABEL_33;
        }
        unint64_t v18 = *(void *)(v8 + 8 * v7);
        if (!v18) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v11 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v7 << 6);
LABEL_24:
    char v20 = *(unsigned char *)(*(void *)(v4 + 48) + v16);
    sub_24E2F14A0();
    sub_24E2F14B0();
    sub_24E2F14B0();
    uint64_t result = sub_24E2F14D0();
    uint64_t v21 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v13 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v14 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(unsigned char *)(*(void *)(v6 + 48) + v14) = v20;
    ++*(void *)(v6 + 16);
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v12)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v3 = v2;
    goto LABEL_35;
  }
  unint64_t v18 = *(void *)(v8 + 8 * v19);
  if (v18)
  {
    int64_t v7 = v19;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v7 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v7 >= v12) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v8 + 8 * v7);
    ++v19;
    if (v18) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t *sub_24E2AAE70(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (uint64_t *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698CA610);
  uint64_t v3 = (uint64_t *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_24E2ACC74((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_24E2AF14C();
  if (v6 != v1)
  {
    __break(1u);
    return (uint64_t *)MEMORY[0x263F8EE78];
  }
  return v3;
}

uint64_t sub_24E2AAF58(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698CA5D8);
  uint64_t v3 = swift_allocObject();
  size_t v4 = _swift_stdlib_malloc_size((const void *)v3);
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = 2 * v4 - 64;
  uint64_t v5 = sub_24E2ACE74(&v7, (unsigned char *)(v3 + 32), v1, a1);
  swift_bridgeObjectRetain();
  sub_24E2AF14C();
  if (v5 != (void *)v1)
  {
    __break(1u);
    return MEMORY[0x263F8EE78];
  }
  return v3;
}

uint64_t sub_24E2AB030(uint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(void *))
{
  uint64_t v6 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v6 = a2(v6);
  }
  uint64_t v7 = *(void *)(v6 + 16);
  v9[0] = v6 + 32;
  v9[1] = v7;
  uint64_t result = a3(v9);
  *a1 = v6;
  return result;
}

uint64_t sub_24E2AB0B4(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_24E2F1400();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_161;
    }
    if (v3) {
      return sub_24E2AC084(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_169;
  }
  uint64_t v110 = v3;
  uint64_t v106 = result;
  v103 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    v112 = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v13 = *(void *)(MEMORY[0x263F8EE78] + 16);
      unint64_t v11 = (char *)MEMORY[0x263F8EE78];
LABEL_127:
      uint64_t v105 = v8;
      if (v13 >= 2)
      {
        uint64_t v96 = *v103;
        do
        {
          unint64_t v97 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_156;
          }
          if (!v96) {
            goto LABEL_168;
          }
          uint64_t v98 = *(void *)&v11[16 * v97 + 32];
          uint64_t v99 = *(void *)&v11[16 * v13 + 24];
          sub_24E2AC324((uint64_t *)(v96 + 16 * v98), (uint64_t *)(v96 + 16 * *(void *)&v11[16 * v13 + 16]), v96 + 16 * v99, v112);
          if (v1) {
            break;
          }
          if (v99 < v98) {
            goto LABEL_157;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v11 = sub_24E2ACC60((uint64_t)v11);
          }
          if (v97 >= *((void *)v11 + 2)) {
            goto LABEL_158;
          }
          v100 = &v11[16 * v97 + 32];
          *(void *)v100 = v98;
          *((void *)v100 + 1) = v99;
          unint64_t v101 = *((void *)v11 + 2);
          if (v13 > v101) {
            goto LABEL_159;
          }
          memmove(&v11[16 * v13 + 16], &v11[16 * v13 + 32], 16 * (v101 - v13));
          *((void *)v11 + 2) = v101 - 1;
          unint64_t v13 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_138:
      swift_bridgeObjectRelease();
      *(void *)(v105 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v105 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_24E2F1080();
    *(void *)(v7 + 16) = v6;
    uint64_t v105 = v7;
    v112 = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v104 = *a1 + 40;
  uint64_t v102 = *a1 - 16;
  unint64_t v11 = (char *)MEMORY[0x263F8EE78];
  uint64_t v12 = v110;
  uint64_t v113 = *a1;
LABEL_16:
  uint64_t v14 = v9++;
  uint64_t v108 = v14;
  v109 = v11;
  if (v9 < v12)
  {
    unint64_t v15 = (uint64_t *)(v10 + 16 * v9);
    unint64_t v16 = v15[1];
    if (v16 > 2) {
      uint64_t v17 = 50;
    }
    else {
      uint64_t v17 = qword_24E2F2858[v16];
    }
    unint64_t v18 = (uint64_t *)(v10 + 16 * v14);
    unint64_t v19 = v18[1];
    if (v19 > 2) {
      uint64_t v20 = 50;
    }
    else {
      uint64_t v20 = qword_24E2F2858[v19];
    }
    uint64_t v21 = *v15;
    uint64_t v22 = *v18;
    if (v17 == v20) {
      int v23 = 0;
    }
    else {
      int v23 = sub_24E2F1430();
    }
    sub_24E2AF210(v22, v19);
    sub_24E2AF210(v21, v16);
    swift_bridgeObjectRelease_n();
    sub_24E2AF224(v22, v19);
    sub_24E2AF224(v21, v16);
    uint64_t v9 = v14 + 2;
    if (v14 + 2 >= v110)
    {
      unint64_t v11 = v109;
      uint64_t v10 = v113;
      if ((v23 & 1) == 0)
      {
LABEL_52:
        uint64_t v12 = v110;
        goto LABEL_53;
      }
    }
    else
    {
      char v24 = (unint64_t *)(v104 + 16 * v14);
      while (1)
      {
        unint64_t v25 = *v24;
        uint64_t v26 = *v24 > 2 ? 50 : qword_24E2F2858[v25];
        unint64_t v27 = *(v24 - 2);
        uint64_t v28 = v27 > 2 ? 50 : qword_24E2F2858[v27];
        uint64_t v29 = *(v24 - 1);
        uint64_t v30 = *(v24 - 3);
        int v31 = v26 == v28 ? 0 : sub_24E2F1430();
        sub_24E2AF210(v30, v27);
        sub_24E2AF210(v29, v25);
        swift_bridgeObjectRelease_n();
        sub_24E2AF224(v30, v27);
        sub_24E2AF224(v29, v25);
        if ((v23 ^ v31)) {
          break;
        }
        v24 += 2;
        ++v9;
        unint64_t v11 = v109;
        uint64_t v10 = v113;
        if (v110 == v9)
        {
          uint64_t v9 = v110;
          goto LABEL_43;
        }
      }
      unint64_t v11 = v109;
      uint64_t v10 = v113;
LABEL_43:
      uint64_t v14 = v108;
      if ((v23 & 1) == 0) {
        goto LABEL_52;
      }
    }
    if (v9 < v14) {
      goto LABEL_162;
    }
    if (v14 < v9)
    {
      long long v32 = (long long *)(v102 + 16 * v9);
      uint64_t v33 = v9;
      uint64_t v34 = v14;
      uint64_t v35 = (long long *)(v10 + 16 * v14);
      uint64_t v12 = v110;
      while (1)
      {
        if (v34 != --v33)
        {
          if (!v10) {
            goto LABEL_167;
          }
          long long v36 = *v35;
          *uint64_t v35 = *v32;
          *long long v32 = v36;
        }
        ++v34;
        --v32;
        ++v35;
        if (v34 >= v33) {
          goto LABEL_53;
        }
      }
    }
    goto LABEL_52;
  }
LABEL_53:
  if (v9 >= v12) {
    goto LABEL_78;
  }
  if (__OFSUB__(v9, v14)) {
    goto LABEL_160;
  }
  if (v9 - v14 >= v106) {
    goto LABEL_78;
  }
  uint64_t v37 = v14 + v106;
  if (__OFADD__(v14, v106)) {
    goto LABEL_163;
  }
  if (v37 >= v12) {
    uint64_t v37 = v12;
  }
  if (v37 >= v14)
  {
    if (v9 == v37) {
      goto LABEL_78;
    }
    uint64_t v38 = (uint64_t *)(v10 + 16 * v9);
    uint64_t v107 = v37;
LABEL_65:
    uint64_t v39 = (uint64_t *)(v10 + 16 * v9);
    uint64_t v40 = *v39;
    unint64_t v41 = v39[1];
    v111 = v38;
    while (1)
    {
      if (v41 > 2) {
        uint64_t v42 = 50;
      }
      else {
        uint64_t v42 = qword_24E2F2858[v41];
      }
      uint64_t v44 = *(v38 - 2);
      unint64_t v43 = *(v38 - 1);
      if (v43 > 2)
      {
        if (v42 == 50)
        {
LABEL_62:
          sub_24E2AF210(*(v38 - 2), *(v38 - 1));
          sub_24E2AF210(v40, v41);
          swift_bridgeObjectRelease_n();
          sub_24E2AF224(v44, v43);
          sub_24E2AF224(v40, v41);
LABEL_63:
          uint64_t v10 = v113;
LABEL_64:
          ++v9;
          uint64_t v38 = v111 + 2;
          uint64_t v14 = v108;
          if (v9 != v107) {
            goto LABEL_65;
          }
          uint64_t v9 = v107;
          unint64_t v11 = v109;
LABEL_78:
          if (v9 < v14) {
            goto LABEL_155;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v11 = sub_24E2ACA04(0, *((void *)v11 + 2) + 1, 1, v11);
          }
          unint64_t v47 = *((void *)v11 + 2);
          unint64_t v46 = *((void *)v11 + 3);
          unint64_t v13 = v47 + 1;
          uint64_t v10 = v113;
          if (v47 >= v46 >> 1)
          {
            v95 = sub_24E2ACA04((char *)(v46 > 1), v47 + 1, 1, v11);
            uint64_t v10 = v113;
            unint64_t v11 = v95;
          }
          *((void *)v11 + 2) = v13;
          unint64_t v48 = v11 + 32;
          uint64_t v49 = &v11[16 * v47 + 32];
          *(void *)uint64_t v49 = v14;
          *((void *)v49 + 1) = v9;
          if (v47)
          {
LABEL_84:
            unint64_t v50 = v13 - 1;
            if (v13 >= 4)
            {
              uint64_t v55 = &v48[16 * v13];
              uint64_t v56 = *((void *)v55 - 8);
              uint64_t v57 = *((void *)v55 - 7);
              BOOL v61 = __OFSUB__(v57, v56);
              uint64_t v58 = v57 - v56;
              if (v61) {
                goto LABEL_144;
              }
              uint64_t v60 = *((void *)v55 - 6);
              uint64_t v59 = *((void *)v55 - 5);
              BOOL v61 = __OFSUB__(v59, v60);
              uint64_t v53 = v59 - v60;
              char v54 = v61;
              if (v61) {
                goto LABEL_145;
              }
              unint64_t v62 = v13 - 2;
              uint64_t v63 = &v48[16 * v13 - 32];
              uint64_t v65 = *(void *)v63;
              uint64_t v64 = *((void *)v63 + 1);
              BOOL v61 = __OFSUB__(v64, v65);
              uint64_t v66 = v64 - v65;
              if (v61) {
                goto LABEL_147;
              }
              BOOL v61 = __OFADD__(v53, v66);
              uint64_t v67 = v53 + v66;
              if (v61) {
                goto LABEL_150;
              }
              if (v67 >= v58)
              {
                v85 = &v48[16 * v50];
                uint64_t v87 = *(void *)v85;
                uint64_t v86 = *((void *)v85 + 1);
                BOOL v61 = __OFSUB__(v86, v87);
                uint64_t v88 = v86 - v87;
                if (v61) {
                  goto LABEL_154;
                }
                BOOL v78 = v53 < v88;
              }
              else
              {
LABEL_97:
                if (v54) {
                  goto LABEL_146;
                }
                unint64_t v62 = v13 - 2;
                uint64_t v68 = &v48[16 * v13 - 32];
                uint64_t v70 = *(void *)v68;
                uint64_t v69 = *((void *)v68 + 1);
                BOOL v71 = __OFSUB__(v69, v70);
                uint64_t v72 = v69 - v70;
                char v73 = v71;
                if (v71) {
                  goto LABEL_149;
                }
                v74 = &v48[16 * v50];
                uint64_t v76 = *(void *)v74;
                uint64_t v75 = *((void *)v74 + 1);
                BOOL v61 = __OFSUB__(v75, v76);
                uint64_t v77 = v75 - v76;
                if (v61) {
                  goto LABEL_152;
                }
                if (__OFADD__(v72, v77)) {
                  goto LABEL_153;
                }
                if (v72 + v77 < v53) {
                  goto LABEL_109;
                }
                BOOL v78 = v53 < v77;
              }
              if (v78) {
                unint64_t v50 = v62;
              }
            }
            else
            {
              if (v13 == 3)
              {
                uint64_t v52 = *((void *)v11 + 4);
                uint64_t v51 = *((void *)v11 + 5);
                BOOL v61 = __OFSUB__(v51, v52);
                uint64_t v53 = v51 - v52;
                char v54 = v61;
                goto LABEL_97;
              }
              uint64_t v79 = *((void *)v11 + 4);
              uint64_t v80 = *((void *)v11 + 5);
              BOOL v61 = __OFSUB__(v80, v79);
              uint64_t v72 = v80 - v79;
              char v73 = v61;
LABEL_109:
              if (v73) {
                goto LABEL_148;
              }
              v81 = &v48[16 * v50];
              uint64_t v83 = *(void *)v81;
              uint64_t v82 = *((void *)v81 + 1);
              BOOL v61 = __OFSUB__(v82, v83);
              uint64_t v84 = v82 - v83;
              if (v61) {
                goto LABEL_151;
              }
              if (v84 < v72) {
                goto LABEL_15;
              }
            }
            unint64_t v89 = v50 - 1;
            if (v50 - 1 >= v13)
            {
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
LABEL_147:
              __break(1u);
LABEL_148:
              __break(1u);
LABEL_149:
              __break(1u);
LABEL_150:
              __break(1u);
LABEL_151:
              __break(1u);
LABEL_152:
              __break(1u);
LABEL_153:
              __break(1u);
LABEL_154:
              __break(1u);
LABEL_155:
              __break(1u);
LABEL_156:
              __break(1u);
LABEL_157:
              __break(1u);
LABEL_158:
              __break(1u);
LABEL_159:
              __break(1u);
LABEL_160:
              __break(1u);
LABEL_161:
              __break(1u);
LABEL_162:
              __break(1u);
LABEL_163:
              __break(1u);
              break;
            }
            if (!v10) {
              goto LABEL_166;
            }
            v90 = &v48[16 * v89];
            uint64_t v91 = *(void *)v90;
            v92 = &v48[16 * v50];
            uint64_t v93 = *((void *)v92 + 1);
            sub_24E2AC324((uint64_t *)(v10 + 16 * *(void *)v90), (uint64_t *)(v10 + 16 * *(void *)v92), v10 + 16 * v93, v112);
            if (v1) {
              goto LABEL_138;
            }
            if (v93 < v91) {
              goto LABEL_141;
            }
            if (v50 > *((void *)v11 + 2)) {
              goto LABEL_142;
            }
            *(void *)v90 = v91;
            *(void *)&v48[16 * v89 + 8] = v93;
            unint64_t v94 = *((void *)v11 + 2);
            if (v50 >= v94) {
              goto LABEL_143;
            }
            unint64_t v13 = v94 - 1;
            memmove(&v48[16 * v50], v92 + 16, 16 * (v94 - 1 - v50));
            *((void *)v11 + 2) = v94 - 1;
            uint64_t v10 = v113;
            if (v94 <= 2) {
              goto LABEL_15;
            }
            goto LABEL_84;
          }
          unint64_t v13 = 1;
LABEL_15:
          uint64_t v12 = v110;
          if (v9 >= v110)
          {
            uint64_t v8 = v105;
            goto LABEL_127;
          }
          goto LABEL_16;
        }
      }
      else if (v42 == qword_24E2F2858[v43])
      {
        goto LABEL_62;
      }
      char v45 = sub_24E2F1430();
      sub_24E2AF210(v44, v43);
      sub_24E2AF210(v40, v41);
      swift_bridgeObjectRelease_n();
      sub_24E2AF224(v44, v43);
      sub_24E2AF224(v40, v41);
      if ((v45 & 1) == 0) {
        goto LABEL_63;
      }
      uint64_t v10 = v113;
      if (!v113) {
        goto LABEL_165;
      }
      uint64_t v40 = *v38;
      unint64_t v41 = v38[1];
      *(_OWORD *)uint64_t v38 = *((_OWORD *)v38 - 1);
      *(v38 - 1) = v41;
      *(v38 - 2) = v40;
      v38 -= 2;
      if (v9 == ++v14) {
        goto LABEL_64;
      }
    }
  }
  __break(1u);
LABEL_165:
  __break(1u);
LABEL_166:
  __break(1u);
LABEL_167:
  __break(1u);
LABEL_168:
  __break(1u);
LABEL_169:
  uint64_t result = sub_24E2F1350();
  __break(1u);
  return result;
}

uint64_t sub_24E2AB968(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_24E2F1400();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_143;
    }
    if (v3) {
      return sub_24E2AC22C(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_151;
  }
  uint64_t v87 = v3;
  uint64_t v88 = v3 - 2;
  uint64_t v86 = result;
  uint64_t v84 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    __dst = (unsigned char *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x263F8EE78] + 16);
      unint64_t v11 = (char *)MEMORY[0x263F8EE78];
LABEL_109:
      uint64_t v76 = v11;
      uint64_t v85 = v8;
      if (v12 >= 2)
      {
        uint64_t v77 = *v84;
        do
        {
          unint64_t v78 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_138;
          }
          if (!v77) {
            goto LABEL_150;
          }
          uint64_t v79 = v76;
          uint64_t v80 = *(void *)&v76[16 * v78 + 32];
          uint64_t v81 = *(void *)&v76[16 * v12 + 24];
          sub_24E2AC73C((unsigned char *)(v77 + v80), (unsigned char *)(v77 + *(void *)&v76[16 * v12 + 16]), v77 + v81, __dst);
          if (v1) {
            break;
          }
          if (v81 < v80) {
            goto LABEL_139;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v79 = sub_24E2ACC60((uint64_t)v79);
          }
          if (v78 >= *((void *)v79 + 2)) {
            goto LABEL_140;
          }
          uint64_t v82 = &v79[16 * v78 + 32];
          *(void *)uint64_t v82 = v80;
          *((void *)v82 + 1) = v81;
          unint64_t v83 = *((void *)v79 + 2);
          if (v12 > v83) {
            goto LABEL_141;
          }
          memmove(&v79[16 * v12 + 16], &v79[16 * v12 + 32], 16 * (v83 - v12));
          uint64_t v76 = v79;
          *((void *)v79 + 2) = v83 - 1;
          unint64_t v12 = v83 - 1;
        }
        while (v83 > 2);
      }
LABEL_106:
      swift_bridgeObjectRelease();
      *(void *)(v85 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v85 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_24E2F1080();
    *(void *)(v7 + 16) = v6;
    uint64_t v3 = v87;
    uint64_t v85 = v7;
    __dst = (unsigned char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  unint64_t v11 = (char *)MEMORY[0x263F8EE78];
  uint64_t v89 = *a1;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_40;
    }
    if (*(unsigned __int8 *)(v10 + v9) == *(unsigned __int8 *)(v10 + v13)) {
      int v14 = 0;
    }
    else {
      int v14 = sub_24E2F1430();
    }
    swift_bridgeObjectRelease_n();
    uint64_t v9 = v13 + 2;
    uint64_t v15 = v13;
    if (v13 + 2 < v3)
    {
      while (1)
      {
        if (*(unsigned __int8 *)(v10 + v15 + 2) == *(unsigned __int8 *)(v10 + v15 + 1))
        {
          swift_bridgeObjectRelease_n();
          if (v14)
          {
            uint64_t v9 = v15 + 2;
            if (v15 + 2 < v13) {
              goto LABEL_144;
            }
            goto LABEL_23;
          }
        }
        else
        {
          int v19 = sub_24E2F1430();
          swift_bridgeObjectRelease_n();
          if ((v14 ^ v19))
          {
            uint64_t v9 = v15 + 2;
            if (v14) {
              goto LABEL_22;
            }
            goto LABEL_40;
          }
        }
        if (v88 == ++v15)
        {
          uint64_t v9 = v3;
          if ((v14 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_22;
        }
      }
    }
    if (v14)
    {
LABEL_22:
      if (v9 < v13) {
        goto LABEL_144;
      }
LABEL_23:
      if (v13 < v9)
      {
        uint64_t v16 = v9 - 1;
        uint64_t v17 = v13;
        do
        {
          if (v17 != v16)
          {
            if (!v10) {
              goto LABEL_149;
            }
            char v18 = *(unsigned char *)(v10 + v17);
            *(unsigned char *)(v10 + v17) = *(unsigned char *)(v10 + v16);
            *(unsigned char *)(v10 + v16) = v18;
          }
          BOOL v57 = ++v17 < v16--;
        }
        while (v57);
      }
    }
LABEL_40:
    if (v9 >= v3) {
      goto LABEL_58;
    }
    if (__OFSUB__(v9, v13)) {
      goto LABEL_142;
    }
    if (v9 - v13 >= v86) {
      goto LABEL_58;
    }
    if (__OFADD__(v13, v86)) {
      goto LABEL_145;
    }
    if (v13 + v86 < v3) {
      uint64_t v3 = v13 + v86;
    }
    if (v3 < v13) {
      break;
    }
    if (v9 != v3)
    {
      uint64_t v20 = (unsigned char *)(v10 + v9);
      do
      {
        int v21 = *(unsigned __int8 *)(v10 + v9);
        uint64_t v22 = v13;
        int v23 = v20;
        while (v21 != *(v23 - 1))
        {
          char v24 = sub_24E2F1430();
          swift_bridgeObjectRelease_n();
          if ((v24 & 1) == 0) {
            goto LABEL_50;
          }
          if (!v10) {
            goto LABEL_147;
          }
          int v21 = *v23;
          *int v23 = *(v23 - 1);
          *(v23 - 1) = v21;
          ++v22;
          --v23;
          if (v9 == v22) {
            goto LABEL_50;
          }
        }
        swift_bridgeObjectRelease_n();
LABEL_50:
        ++v9;
        ++v20;
      }
      while (v9 != v3);
      uint64_t v9 = v3;
    }
LABEL_58:
    if (v9 < v13) {
      goto LABEL_137;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v11 = sub_24E2ACA04(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v26 = *((void *)v11 + 2);
    unint64_t v25 = *((void *)v11 + 3);
    unint64_t v12 = v26 + 1;
    if (v26 >= v25 >> 1) {
      unint64_t v11 = sub_24E2ACA04((char *)(v25 > 1), v26 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    unint64_t v27 = v11 + 32;
    uint64_t v28 = &v11[16 * v26 + 32];
    *(void *)uint64_t v28 = v13;
    *((void *)v28 + 1) = v9;
    if (v26)
    {
      uint64_t v10 = v89;
      while (1)
      {
        unint64_t v29 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v34 = &v27[16 * v12];
          uint64_t v35 = *((void *)v34 - 8);
          uint64_t v36 = *((void *)v34 - 7);
          BOOL v40 = __OFSUB__(v36, v35);
          uint64_t v37 = v36 - v35;
          if (v40) {
            goto LABEL_126;
          }
          uint64_t v39 = *((void *)v34 - 6);
          uint64_t v38 = *((void *)v34 - 5);
          BOOL v40 = __OFSUB__(v38, v39);
          uint64_t v32 = v38 - v39;
          char v33 = v40;
          if (v40) {
            goto LABEL_127;
          }
          unint64_t v41 = v12 - 2;
          uint64_t v42 = &v27[16 * v12 - 32];
          uint64_t v44 = *(void *)v42;
          uint64_t v43 = *((void *)v42 + 1);
          BOOL v40 = __OFSUB__(v43, v44);
          uint64_t v45 = v43 - v44;
          if (v40) {
            goto LABEL_129;
          }
          BOOL v40 = __OFADD__(v32, v45);
          uint64_t v46 = v32 + v45;
          if (v40) {
            goto LABEL_132;
          }
          if (v46 >= v37)
          {
            uint64_t v64 = &v27[16 * v29];
            uint64_t v66 = *(void *)v64;
            uint64_t v65 = *((void *)v64 + 1);
            BOOL v40 = __OFSUB__(v65, v66);
            uint64_t v67 = v65 - v66;
            if (v40) {
              goto LABEL_136;
            }
            BOOL v57 = v32 < v67;
            goto LABEL_96;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v58 = *((void *)v11 + 4);
            uint64_t v59 = *((void *)v11 + 5);
            BOOL v40 = __OFSUB__(v59, v58);
            uint64_t v51 = v59 - v58;
            char v52 = v40;
            goto LABEL_90;
          }
          uint64_t v31 = *((void *)v11 + 4);
          uint64_t v30 = *((void *)v11 + 5);
          BOOL v40 = __OFSUB__(v30, v31);
          uint64_t v32 = v30 - v31;
          char v33 = v40;
        }
        if (v33) {
          goto LABEL_128;
        }
        unint64_t v41 = v12 - 2;
        unint64_t v47 = &v27[16 * v12 - 32];
        uint64_t v49 = *(void *)v47;
        uint64_t v48 = *((void *)v47 + 1);
        BOOL v50 = __OFSUB__(v48, v49);
        uint64_t v51 = v48 - v49;
        char v52 = v50;
        if (v50) {
          goto LABEL_131;
        }
        uint64_t v53 = &v27[16 * v29];
        uint64_t v55 = *(void *)v53;
        uint64_t v54 = *((void *)v53 + 1);
        BOOL v40 = __OFSUB__(v54, v55);
        uint64_t v56 = v54 - v55;
        if (v40) {
          goto LABEL_134;
        }
        if (__OFADD__(v51, v56)) {
          goto LABEL_135;
        }
        if (v51 + v56 >= v32)
        {
          BOOL v57 = v32 < v56;
LABEL_96:
          if (v57) {
            unint64_t v29 = v41;
          }
          goto LABEL_98;
        }
LABEL_90:
        if (v52) {
          goto LABEL_130;
        }
        uint64_t v60 = &v27[16 * v29];
        uint64_t v62 = *(void *)v60;
        uint64_t v61 = *((void *)v60 + 1);
        BOOL v40 = __OFSUB__(v61, v62);
        uint64_t v63 = v61 - v62;
        if (v40) {
          goto LABEL_133;
        }
        if (v63 < v51) {
          goto LABEL_15;
        }
LABEL_98:
        unint64_t v68 = v29 - 1;
        if (v29 - 1 >= v12)
        {
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
          goto LABEL_146;
        }
        if (!v10) {
          goto LABEL_148;
        }
        uint64_t v69 = v11;
        uint64_t v70 = v10;
        BOOL v71 = &v27[16 * v68];
        uint64_t v72 = *(void *)v71;
        char v73 = &v27[16 * v29];
        uint64_t v74 = *((void *)v73 + 1);
        sub_24E2AC73C((unsigned char *)(v70 + *(void *)v71), (unsigned char *)(v70 + *(void *)v73), v70 + v74, __dst);
        if (v1) {
          goto LABEL_106;
        }
        if (v74 < v72) {
          goto LABEL_123;
        }
        if (v29 > *((void *)v69 + 2)) {
          goto LABEL_124;
        }
        *(void *)BOOL v71 = v72;
        *(void *)&v27[16 * v68 + 8] = v74;
        unint64_t v75 = *((void *)v69 + 2);
        if (v29 >= v75) {
          goto LABEL_125;
        }
        unint64_t v11 = v69;
        unint64_t v12 = v75 - 1;
        memmove(&v27[16 * v29], v73 + 16, 16 * (v75 - 1 - v29));
        *((void *)v69 + 2) = v75 - 1;
        BOOL v57 = v75 > 2;
        uint64_t v10 = v89;
        if (!v57) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
    uint64_t v10 = v89;
LABEL_15:
    uint64_t v3 = v87;
    if (v9 >= v87)
    {
      uint64_t v8 = v85;
      goto LABEL_109;
    }
  }
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  __break(1u);
LABEL_151:
  uint64_t result = sub_24E2F1350();
  __break(1u);
  return result;
}

uint64_t sub_24E2AC084(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v15 = result;
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v17 = *a4;
    uint64_t v5 = (uint64_t *)(*a4 + 16 * a3);
LABEL_6:
    uint64_t v6 = (uint64_t *)(v17 + 16 * v4);
    uint64_t v7 = *v6;
    unint64_t v8 = v6[1];
    uint64_t v9 = v15;
    uint64_t v16 = v5;
    while (1)
    {
      uint64_t v10 = v8 > 2 ? 50 : qword_24E2F2858[v8];
      uint64_t v12 = *(v5 - 2);
      unint64_t v11 = *(v5 - 1);
      if (v11 > 2)
      {
        if (v10 == 50)
        {
LABEL_4:
          sub_24E2AF210(*(v5 - 2), *(v5 - 1));
          sub_24E2AF210(v7, v8);
          swift_bridgeObjectRelease_n();
          sub_24E2AF224(v12, v11);
          uint64_t result = sub_24E2AF224(v7, v8);
LABEL_5:
          ++v4;
          uint64_t v5 = v16 + 2;
          if (v4 == a2) {
            return result;
          }
          goto LABEL_6;
        }
      }
      else if (v10 == qword_24E2F2858[v11])
      {
        goto LABEL_4;
      }
      char v13 = sub_24E2F1430();
      sub_24E2AF210(v12, v11);
      sub_24E2AF210(v7, v8);
      swift_bridgeObjectRelease_n();
      sub_24E2AF224(v12, v11);
      uint64_t result = sub_24E2AF224(v7, v8);
      if ((v13 & 1) == 0) {
        goto LABEL_5;
      }
      if (!v17) {
        break;
      }
      uint64_t v7 = *v5;
      unint64_t v8 = v5[1];
      *(_OWORD *)uint64_t v5 = *((_OWORD *)v5 - 1);
      *(v5 - 1) = v8;
      *(v5 - 2) = v7;
      v5 -= 2;
      if (v4 == ++v9) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_24E2AC22C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    unint64_t v8 = (unsigned char *)(*a4 + a3);
LABEL_6:
    int v9 = *(unsigned __int8 *)(v7 + v4);
    uint64_t v10 = v6;
    unint64_t v11 = v8;
    while (1)
    {
      if (v9 == *(v11 - 1))
      {
        uint64_t result = swift_bridgeObjectRelease_n();
LABEL_5:
        ++v4;
        ++v8;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_6;
      }
      char v12 = sub_24E2F1430();
      uint64_t result = swift_bridgeObjectRelease_n();
      if ((v12 & 1) == 0) {
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      int v9 = *v11;
      *unint64_t v11 = *(v11 - 1);
      *(v11 - 1) = v9;
      ++v10;
      --v11;
      if (v4 == v10) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_24E2AC324(uint64_t *a1, uint64_t *__src, unint64_t a3, char *a4)
{
  uint64_t v4 = __src;
  uint64_t v5 = (char *)__src - (char *)a1;
  uint64_t v6 = (char *)__src - (char *)a1 + 15;
  if ((char *)__src - (char *)a1 >= 0) {
    uint64_t v6 = (char *)__src - (char *)a1;
  }
  uint64_t v7 = v6 >> 4;
  uint64_t v8 = a3 - (void)__src;
  uint64_t v9 = a3 - (void)__src + 15;
  if ((uint64_t)(a3 - (void)__src) >= 0) {
    uint64_t v9 = a3 - (void)__src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v43 = a1;
  uint64_t v42 = a4;
  if (v7 >= v9 >> 4)
  {
    if (v8 >= -15)
    {
      if (a4 != (char *)__src || &__src[2 * v10] <= (uint64_t *)a4) {
        memmove(a4, __src, 16 * v10);
      }
      int v23 = &a4[16 * v10];
      unint64_t v41 = v23;
      uint64_t v43 = v4;
      if (a1 < v4 && v8 >= 16)
      {
        char v24 = (uint64_t *)(a3 - 16);
        do
        {
          uint64_t v27 = *((void *)v23 - 2);
          unint64_t v26 = *((void *)v23 - 1);
          unint64_t v25 = v23 - 16;
          unint64_t v38 = (unint64_t)v23;
          if (v26 > 2) {
            uint64_t v28 = 50;
          }
          else {
            uint64_t v28 = qword_24E2F2858[v26];
          }
          uint64_t v31 = *(v4 - 2);
          unint64_t v30 = *(v4 - 1);
          unint64_t v29 = v4 - 2;
          if (v30 > 2) {
            uint64_t v32 = 50;
          }
          else {
            uint64_t v32 = qword_24E2F2858[v30];
          }
          BOOL v40 = v4;
          if (v28 == v32) {
            char v33 = 0;
          }
          else {
            char v33 = sub_24E2F1430();
          }
          uint64_t v34 = v24 + 2;
          sub_24E2AF210(v31, v30);
          sub_24E2AF210(v27, v26);
          swift_bridgeObjectRelease_n();
          sub_24E2AF224(v31, v30);
          sub_24E2AF224(v27, v26);
          if (v33)
          {
            int v23 = (char *)v38;
            if (v34 != v40 || v24 >= v40) {
              *(_OWORD *)char v24 = *(_OWORD *)v29;
            }
            uint64_t v43 = v29;
          }
          else
          {
            unint64_t v41 = v25;
            if ((unint64_t)v34 < v38 || (unint64_t)v24 >= v38)
            {
              *(_OWORD *)char v24 = *(_OWORD *)v25;
              unint64_t v29 = v40;
            }
            else
            {
              unint64_t v29 = v40;
              if (v34 != (uint64_t *)v38) {
                *(_OWORD *)char v24 = *(_OWORD *)v25;
              }
            }
            int v23 = v25;
          }
          if (v29 <= a1) {
            break;
          }
          v24 -= 2;
          uint64_t v4 = v29;
        }
        while (v23 > a4);
      }
LABEL_61:
      sub_24E2ACB00((void **)&v43, (const void **)&v42, &v41);
      return 1;
    }
  }
  else if (v5 >= -15)
  {
    unint64_t v11 = a4;
    if (a4 != (char *)a1 || &a1[2 * v7] <= (uint64_t *)a4) {
      memmove(a4, a1, 16 * v7);
    }
    char v12 = &a4[16 * v7];
    unint64_t v41 = v12;
    if ((unint64_t)v4 < a3 && v5 >= 16)
    {
      char v13 = a1;
      while (1)
      {
        unint64_t v14 = v4[1];
        if (v14 > 2) {
          uint64_t v15 = 50;
        }
        else {
          uint64_t v15 = qword_24E2F2858[v14];
        }
        unint64_t v16 = *((void *)v11 + 1);
        if (v16 > 2) {
          uint64_t v17 = 50;
        }
        else {
          uint64_t v17 = qword_24E2F2858[v16];
        }
        char v18 = v4;
        uint64_t v19 = *v4;
        uint64_t v20 = *(void *)v11;
        if (v15 == v17)
        {
          sub_24E2AF210(*(void *)v11, *((void *)v11 + 1));
          sub_24E2AF210(v19, v14);
          swift_bridgeObjectRelease_n();
          sub_24E2AF224(v20, v16);
          sub_24E2AF224(v19, v14);
        }
        else
        {
          char v21 = sub_24E2F1430();
          sub_24E2AF210(v20, v16);
          sub_24E2AF210(v19, v14);
          swift_bridgeObjectRelease_n();
          sub_24E2AF224(v20, v16);
          sub_24E2AF224(v19, v14);
          if (v21)
          {
            uint64_t v22 = v18 + 2;
            if (v13 < v18 || v13 >= v22 || v13 != v18) {
              *(_OWORD *)char v13 = *(_OWORD *)v18;
            }
            goto LABEL_29;
          }
        }
        uint64_t v22 = v18;
        if (v13 != (uint64_t *)v11) {
          *(_OWORD *)char v13 = *(_OWORD *)v11;
        }
        v11 += 16;
        uint64_t v42 = v11;
LABEL_29:
        v13 += 2;
        if (v11 < v12)
        {
          uint64_t v4 = v22;
          if ((unint64_t)v22 < a3) {
            continue;
          }
        }
        uint64_t v43 = v13;
        goto LABEL_61;
      }
    }
    goto LABEL_61;
  }
  uint64_t result = sub_24E2F1390();
  __break(1u);
  return result;
}

uint64_t sub_24E2AC73C(unsigned char *__src, unsigned char *a2, unint64_t a3, unsigned char *__dst)
{
  uint64_t v22 = __src;
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  size_t v8 = a2 - __src;
  unint64_t v9 = a3 - (void)a2;
  char v21 = __dst;
  if (a2 - __src >= (uint64_t)(a3 - (void)a2))
  {
    if ((v9 & 0x8000000000000000) != 0) {
      goto LABEL_43;
    }
    if (__dst != a2 || a3 <= (unint64_t)__dst) {
      memmove(__dst, a2, a3 - (void)a2);
    }
    char v13 = &v4[v9];
    uint64_t v20 = v13;
    uint64_t v22 = v6;
    if (v7 >= v6 || (unsigned char *)a3 == v6)
    {
LABEL_42:
      sub_24E2ACBBC(&v22, (const void **)&v21, &v20);
      return 1;
    }
    unint64_t v14 = (unsigned char *)(a3 - 1);
    uint64_t v15 = v6;
    while (1)
    {
      unint64_t v16 = v14 + 1;
      int v17 = *--v15;
      if (*(v13 - 1) == v17) {
        break;
      }
      char v18 = sub_24E2F1430();
      swift_bridgeObjectRelease_n();
      if ((v18 & 1) == 0) {
        goto LABEL_36;
      }
      if (v16 != v6 || v14 >= v6) {
        *unint64_t v14 = *v15;
      }
      uint64_t v22 = v15;
      if (v15 <= v7) {
        goto LABEL_42;
      }
LABEL_41:
      --v14;
      uint64_t v6 = v15;
      if (v13 <= v4) {
        goto LABEL_42;
      }
    }
    swift_bridgeObjectRelease_n();
LABEL_36:
    uint64_t v20 = v13 - 1;
    if (v16 < v13 || v14 >= v13 || v16 != v13) {
      *unint64_t v14 = *(v13 - 1);
    }
    uint64_t v15 = v6;
    --v13;
    if (v6 <= v7) {
      goto LABEL_42;
    }
    goto LABEL_41;
  }
  if ((v8 & 0x8000000000000000) == 0)
  {
    if (__dst != __src || a2 <= __dst) {
      memmove(__dst, __src, v8);
    }
    uint64_t v10 = &v4[v8];
    uint64_t v20 = &v4[v8];
    if (v6 != v7 && (unint64_t)v6 < a3)
    {
      while (1)
      {
        if (*v6 == *v4)
        {
          swift_bridgeObjectRelease_n();
        }
        else
        {
          char v11 = sub_24E2F1430();
          swift_bridgeObjectRelease_n();
          if (v11)
          {
            char v12 = v6 + 1;
            if (v7 < v6 || v7 >= v12 || v7 != v6) {
              *uint64_t v7 = *v6;
            }
            goto LABEL_18;
          }
        }
        if (v7 != v4) {
          *uint64_t v7 = *v4;
        }
        char v21 = ++v4;
        char v12 = v6;
LABEL_18:
        ++v7;
        if (v4 < v10)
        {
          uint64_t v6 = v12;
          if ((unint64_t)v12 < a3) {
            continue;
          }
        }
        uint64_t v22 = v7;
        goto LABEL_42;
      }
    }
    goto LABEL_42;
  }
LABEL_43:
  uint64_t result = sub_24E2F1390();
  __break(1u);
  return result;
}

char *sub_24E2ACA04(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE10);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  char v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_24E2ACB00(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 15;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -16)
  {
    uint64_t result = (char *)sub_24E2F1390();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
    {
      return (char *)memmove(result, v3, 16 * v7);
    }
  }
  return result;
}

char *sub_24E2ACBBC(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  int64_t v4 = *a3 - (void)v3;
  if (v4 < 0)
  {
    uint64_t result = (char *)sub_24E2F1390();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    if (result != v3 || result >= &v3[v4])
    {
      return (char *)memmove(result, v3, v4);
    }
  }
  return result;
}

char *sub_24E2ACC60(uint64_t a1)
{
  return sub_24E2ACA04(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_24E2ACC74(uint64_t result, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    uint64_t v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  int64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (uint64_t *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = *v20;
    unint64_t v22 = v20[1];
    *int64_t v11 = *v20;
    v11[1] = v22;
    if (v13 == v10)
    {
      sub_24E2AF210(v21, v22);
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = sub_24E2AF210(v21, v22);
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void *sub_24E2ACE74(void *result, unsigned char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + 64;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v8 = 0;
    a3 = 0;
LABEL_35:
    *uint64_t result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (void *)a3;
  }
  if (!a3)
  {
    int64_t v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  int64_t v8 = 0;
  uint64_t v9 = 0;
  int64_t v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(unsigned char *)(*(void *)(a4 + 48) + v12);
    if (v9 == a3) {
      goto LABEL_35;
    }
  }
  int64_t v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v13);
  if (v14) {
    goto LABEL_19;
  }
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    int64_t v13 = v8;
LABEL_19:
    unint64_t v16 = __clz(__rbit64(v14));
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = v16 + (v13 << 6);
    int64_t v8 = v13;
    goto LABEL_8;
  }
  int64_t v15 = v13 + 2;
  if (v13 + 2 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    int64_t v13 = v15;
    goto LABEL_19;
  }
  int64_t v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13 + 2;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14) {
    goto LABEL_15;
  }
  int64_t v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    unint64_t v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v13 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v13 >= v10)
    {
      unint64_t v7 = 0;
      int64_t v8 = v10 - 1;
      goto LABEL_34;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v15;
    if (v14) {
      goto LABEL_19;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_24E2AD008(uint64_t a1)
{
  return sub_24E295E5C(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_24E2AD01C(uint64_t a1)
{
  return sub_24E295FC8(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_24E2AD030(uint64_t a1, uint64_t a2)
{
  v15[2] = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CA608);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = MEMORY[0x263F8EE78];
  if (v8)
  {
    v15[1] = v2;
    uint64_t v17 = MEMORY[0x263F8EE78];
    sub_24E2958B0(0, v8, 0);
    uint64_t v9 = v17;
    int64_t v10 = (char *)(a1 + 32);
    do
    {
      char v11 = *v10++;
      char v16 = v11;
      swift_getAtKeyPath();
      uint64_t v17 = v9;
      unint64_t v13 = *(void *)(v9 + 16);
      unint64_t v12 = *(void *)(v9 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_24E2958B0(v12 > 1, v13 + 1, 1);
        uint64_t v9 = v17;
      }
      *(void *)(v9 + 16) = v13 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v13, v7, v4);
      --v8;
    }
    while (v8);
  }
  return v9;
}

uint64_t sub_24E2AD1CC(uint64_t a1, uint64_t a2)
{
  v15[2] = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CA5D0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = MEMORY[0x263F8EE78];
  if (v8)
  {
    v15[1] = v2;
    uint64_t v17 = MEMORY[0x263F8EE78];
    sub_24E295988(0, v8, 0);
    uint64_t v9 = v17;
    int64_t v10 = (char *)(a1 + 32);
    do
    {
      char v11 = *v10++;
      char v16 = v11;
      swift_getAtKeyPath();
      uint64_t v17 = v9;
      unint64_t v13 = *(void *)(v9 + 16);
      unint64_t v12 = *(void *)(v9 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_24E295988(v12 > 1, v13 + 1, 1);
        uint64_t v9 = v17;
      }
      *(void *)(v9 + 16) = v13 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v13, v7, v4);
      --v8;
    }
    while (v8);
  }
  return v9;
}

uint64_t sub_24E2AD368(uint64_t a1)
{
  return sub_24E2AE778(a1, (void (*)(void))sub_24E2AF2C4, (uint64_t)&type metadata for Item.Section.Category, &qword_2698CAEA0);
}

uint64_t sub_24E2AD390(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CACF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24E2AD3F8(uint64_t a1)
{
  return sub_24E2AE5EC(a1, (void (*)(void))sub_24E2AE858, (uint64_t)&type metadata for Beacon.Section.Category, &qword_2698CADB0);
}

uint64_t sub_24E2AD420(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for Item() - 8;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v53 = (uint64_t)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v54 = (uint64_t)&v47 - v10;
  char v11 = (void *)MEMORY[0x263F8EE80];
  uint64_t v55 = (void *)MEMORY[0x263F8EE80];
  uint64_t v12 = *(void *)(a1 + 16);
  if (!v12) {
    return (uint64_t)v11;
  }
  uint64_t v13 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v14 = (v13 + 32) & ~v13;
  uint64_t v15 = a1 + v14;
  uint64_t v16 = *(void *)(v9 + 72);
  uint64_t v52 = v14;
  uint64_t v49 = v16 + v14;
  uint64_t v48 = v13 | 7;
  long long v47 = xmmword_24E2F1C10;
  uint64_t v50 = a2;
  uint64_t v51 = v16;
  while (1)
  {
    uint64_t v19 = v54;
    sub_24E2AF154(v15, v54, (uint64_t (*)(void))type metadata accessor for Item);
    uint64_t v20 = swift_bridgeObjectRetain();
    uint64_t v21 = v3;
    uint64_t v22 = sub_24E2DC52C(v20);
    uint64_t v23 = sub_24E2AE5EC(v22, (void (*)(void))sub_24E2AE858, (uint64_t)&type metadata for Beacon.Section.Category, &qword_2698CADB0);
    swift_bridgeObjectRelease();
    if (*(unsigned char *)(v19 + *(int *)(type metadata accessor for Beacon() + 32)) == 1)
    {
      char v24 = sub_24E2D9470(1, v23);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v25 = 0;
      unint64_t v26 = (v24 & 1) != 0 ? 1 : 2;
    }
    else
    {
      char v27 = sub_24E2D9470(2, v23);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v25 = (v27 & 1) != 0 ? 0x4E574F4E4B4E55 : 0;
      unint64_t v26 = (v27 & 1) != 0 ? 0xE700000000000000 : 2;
    }
    unint64_t v29 = sub_24E2C9960(v25, v26);
    uint64_t v30 = v11[2];
    BOOL v31 = (v28 & 1) == 0;
    uint64_t v32 = v30 + v31;
    if (__OFADD__(v30, v31)) {
      break;
    }
    char v33 = v28;
    if (v11[3] < v32)
    {
      sub_24E2A88EC(v32, 1);
      char v11 = v55;
      unint64_t v34 = sub_24E2C9960(v25, v26);
      if ((v33 & 1) != (v35 & 1)) {
        goto LABEL_29;
      }
      unint64_t v29 = v34;
    }
    if (v33)
    {
      sub_24E2AF224(v25, v26);
      uint64_t v36 = v11[7];
      sub_24E2AF030(v54, v53, (uint64_t (*)(void))type metadata accessor for Item);
      unint64_t v37 = *(void *)(v36 + 8 * v29);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v36 + 8 * v29) = v37;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v37 = sub_24E2E4448(0, *(void *)(v37 + 16) + 1, 1, v37);
        *(void *)(v36 + 8 * v29) = v37;
      }
      unint64_t v40 = *(void *)(v37 + 16);
      unint64_t v39 = *(void *)(v37 + 24);
      if (v40 >= v39 >> 1)
      {
        unint64_t v37 = sub_24E2E4448(v39 > 1, v40 + 1, 1, v37);
        *(void *)(v36 + 8 * v29) = v37;
      }
      *(void *)(v37 + 16) = v40 + 1;
      unint64_t v17 = v37 + v52;
      uint64_t v18 = v51;
      sub_24E2AF030(v53, v17 + v40 * v51, (uint64_t (*)(void))type metadata accessor for Item);
      uint64_t v3 = v21;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2698CA5F8);
      uint64_t v41 = swift_allocObject();
      *(_OWORD *)(v41 + 16) = v47;
      sub_24E2AF030(v54, v41 + v52, (uint64_t (*)(void))type metadata accessor for Item);
      v11[(v29 >> 6) + 8] |= 1 << v29;
      uint64_t v42 = (uint64_t *)(v11[6] + 16 * v29);
      *uint64_t v42 = v25;
      v42[1] = v26;
      *(void *)(v11[7] + 8 * v29) = v41;
      uint64_t v43 = v11[2];
      BOOL v44 = __OFADD__(v43, 1);
      uint64_t v45 = v43 + 1;
      if (v44) {
        goto LABEL_28;
      }
      v11[2] = v45;
      uint64_t v18 = v51;
    }
    v15 += v18;
    if (!--v12) {
      return (uint64_t)v11;
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  uint64_t result = sub_24E2F1450();
  __break(1u);
  return result;
}

uint64_t sub_24E2AD850(uint64_t a1, uint64_t a2)
{
  uint64_t v34 = a2;
  uint64_t v4 = type metadata accessor for Item() - 8;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v35 = (uint64_t)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  MEMORY[0x270FA5388](v7);
  char v11 = (char *)&v30 - v10;
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v40 = MEMORY[0x263F8EE78];
  uint64_t v13 = *(void *)(a1 + 16);
  if (v13)
  {
    uint64_t v33 = v9;
    uint64_t v14 = *(unsigned __int8 *)(v8 + 80);
    uint64_t v15 = *(void *)(v8 + 72);
    uint64_t v30 = v2;
    uint64_t v31 = (v14 + 32) & ~v14;
    uint64_t v16 = a1 + v31;
    uint64_t v17 = MEMORY[0x263F8EE78];
    uint64_t v32 = v15;
    while (1)
    {
      sub_24E2AF154(v16, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for Item);
      uint64_t v18 = *(void *)(v34 + 40);
      unint64_t v19 = *(void *)(v34 + 48);
      uint64_t v20 = (v19 & 0x2000000000000000) != 0 ? HIBYTE(v19) & 0xF : v18 & 0xFFFFFFFFFFFFLL;
      uint64_t v21 = (uint64_t)v11;
      uint64_t v22 = (uint64_t)v11;
      uint64_t v23 = v33;
      sub_24E2AF154(v22, v33, (uint64_t (*)(void))type metadata accessor for Item);
      if (!v20) {
        break;
      }
      uint64_t v24 = type metadata accessor for Beacon();
      uint64_t v25 = *(void *)(v23 + *(int *)(v24 + 24) + 8);
      uint64_t v38 = *(void *)(v23 + *(int *)(v24 + 24));
      uint64_t v39 = v25;
      uint64_t v36 = v18;
      unint64_t v37 = v19;
      sub_24E2AF0F8();
      char v26 = sub_24E2F1250();
      sub_24E2AF098(v23, (uint64_t (*)(void))type metadata accessor for Item);
      uint64_t v27 = v32;
      char v11 = (char *)v21;
      if (v26) {
        goto LABEL_12;
      }
      sub_24E2AF098(v21, (uint64_t (*)(void))type metadata accessor for Item);
LABEL_4:
      v16 += v27;
      if (!--v13) {
        return v40;
      }
    }
    sub_24E2AF098(v23, (uint64_t (*)(void))type metadata accessor for Item);
    uint64_t v27 = v32;
    char v11 = (char *)v21;
LABEL_12:
    sub_24E2AF030((uint64_t)v11, v35, (uint64_t (*)(void))type metadata accessor for Item);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_24E295874(0, *(void *)(v17 + 16) + 1, 1);
    }
    uint64_t v17 = v40;
    unint64_t v29 = *(void *)(v40 + 16);
    unint64_t v28 = *(void *)(v40 + 24);
    if (v29 >= v28 >> 1)
    {
      sub_24E295874(v28 > 1, v29 + 1, 1);
      uint64_t v17 = v40;
    }
    *(void *)(v17 + 16) = v29 + 1;
    sub_24E2AF030(v35, v17 + v31 + v29 * v27, (uint64_t (*)(void))type metadata accessor for Item);
    goto LABEL_4;
  }
  return result;
}

uint64_t sub_24E2ADB5C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for Item() - 8;
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  char v11 = (char *)&v21 - v10;
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v23 = MEMORY[0x263F8EE78];
  uint64_t v13 = *(void *)(a1 + 16);
  if (v13)
  {
    uint64_t v21 = v2;
    uint64_t v14 = *(void *)(v9 + 72);
    unint64_t v22 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v15 = a1 + v22;
    uint64_t v16 = MEMORY[0x263F8EE78];
    do
    {
      sub_24E2AF154(v15, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for Item);
      unint64_t v17 = *(void *)(a2 + 48);
      uint64_t v18 = *(void *)(a2 + 40) & 0xFFFFFFFFFFFFLL;
      if ((v17 & 0x2000000000000000) != 0) {
        uint64_t v18 = HIBYTE(v17) & 0xF;
      }
      if (!v18 && (*(unsigned char *)(a2 + 32) & 1) != 0)
      {
        sub_24E2AF098((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for Item);
      }
      else
      {
        sub_24E2AF030((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for Item);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_24E295874(0, *(void *)(v16 + 16) + 1, 1);
        }
        uint64_t v16 = v23;
        unint64_t v20 = *(void *)(v23 + 16);
        unint64_t v19 = *(void *)(v23 + 24);
        if (v20 >= v19 >> 1)
        {
          sub_24E295874(v19 > 1, v20 + 1, 1);
          uint64_t v16 = v23;
        }
        *(void *)(v16 + 16) = v20 + 1;
        sub_24E2AF030((uint64_t)v8, v16 + v22 + v20 * v14, (uint64_t (*)(void))type metadata accessor for Item);
      }
      v15 += v14;
      --v13;
    }
    while (v13);
    return v23;
  }
  return result;
}

uint64_t sub_24E2ADD94()
{
  return sub_24E2AF238(&qword_2698CAC80, (void (*)(uint64_t))type metadata accessor for ItemEntityQuery);
}

uint64_t sub_24E2ADDDC()
{
  return sub_24E2AF238(&qword_2698CAD30, (void (*)(uint64_t))type metadata accessor for ItemEntityQuery);
}

uint64_t sub_24E2ADE24()
{
  return sub_24E2AF238(qword_2698CAD38, (void (*)(uint64_t))type metadata accessor for ItemEntityQuery);
}

uint64_t sub_24E2ADE6C()
{
  return sub_24E2AF238(&qword_2698CACE0, (void (*)(uint64_t))type metadata accessor for ItemEntity);
}

uint64_t sub_24E2ADEB4()
{
  return sub_24E2AF238(&qword_2698CAD50, (void (*)(uint64_t))type metadata accessor for ItemEntityQuery);
}

uint64_t sub_24E2ADEFC()
{
  return sub_24E2AF238(&qword_2698CACA0, (void (*)(uint64_t))type metadata accessor for ItemEntity);
}

uint64_t sub_24E2ADF44()
{
  return sub_24E2AF280(&qword_2698CAD58, qword_2698CAD60);
}

void *initializeBufferWithCopyOfBuffer for ItemEntityQuery(void *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *a1 = v5;
    a1 = (void *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = v5;
    a1[1] = v6;
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_24E2F0D70();
    char v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_retain();
    v11(v8, v9, v10);
  }
  return a1;
}

uint64_t destroy for ItemEntityQuery(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_24E2F0D70();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

void *initializeWithCopy for ItemEntityQuery(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_24E2F0D70();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_retain();
  v9(v6, v7, v8);
  return a1;
}

void *assignWithCopy for ItemEntityQuery(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_24E2F0D70();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

_OWORD *initializeWithTake for ItemEntityQuery(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_24E2F0D70();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_OWORD *assignWithTake for ItemEntityQuery(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24E2F0D70();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for ItemEntityQuery(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24E2AE328);
}

uint64_t sub_24E2AE328(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_24E2F0D70();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    char v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ItemEntityQuery(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24E2AE3EC);
}

void *sub_24E2AE3EC(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_24E2F0D70();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_24E2AE494()
{
  uint64_t result = sub_24E2F0D70();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t objectdestroyTm_1()
{
  uint64_t v1 = sub_24E2F0D70();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_24E2AE5C4(uint64_t a1)
{
  return sub_24E2AE5EC(a1, (void (*)(void))sub_24E2AF1BC, (uint64_t)&type metadata for Person.Section, &qword_2698CAE38);
}

uint64_t sub_24E2AE5EC(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = *(void *)(a1 + 16);
  a2();
  uint64_t result = sub_24E2F1120();
  uint64_t v11 = result;
  if (v6)
  {
    uint64_t v8 = (unsigned __int8 *)(a1 + 32);
    do
    {
      unsigned int v9 = *v8++;
      sub_24E2A9244(&v10, v9, a4);
      --v6;
    }
    while (v6);
    return v11;
  }
  return result;
}

uint64_t sub_24E2AE678(uint64_t a1)
{
  return sub_24E2AE6A0(a1, (void (*)(void))sub_24E2AE8AC, (uint64_t)&type metadata for Person.UniqueIdentifier, &qword_2698CADC0);
}

uint64_t sub_24E2AE6A0(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = *(void *)(a1 + 16);
  a2();
  uint64_t result = sub_24E2F1120();
  uint64_t v12 = result;
  if (v6)
  {
    uint64_t v8 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v9 = *(v8 - 1);
      uint64_t v10 = *v8;
      swift_bridgeObjectRetain();
      sub_24E2A937C(&v11, v9, v10, a4);
      swift_bridgeObjectRelease();
      v8 += 2;
      --v6;
    }
    while (v6);
    return v12;
  }
  return result;
}

uint64_t sub_24E2AE750(uint64_t a1)
{
  return sub_24E2AE778(a1, (void (*)(void))sub_24E2AE804, (uint64_t)&type metadata for Device.Section.Category, &qword_2698CADA0);
}

uint64_t sub_24E2AE778(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = *(void *)(a1 + 16);
  a2();
  uint64_t result = sub_24E2F1120();
  uint64_t v11 = result;
  if (v6)
  {
    uint64_t v8 = (unsigned __int8 *)(a1 + 32);
    do
    {
      unsigned int v9 = *v8++;
      sub_24E2A9558(&v10, v9, a4);
      --v6;
    }
    while (v6);
    return v11;
  }
  return result;
}

unint64_t sub_24E2AE804()
{
  unint64_t result = qword_2698CAD98;
  if (!qword_2698CAD98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CAD98);
  }
  return result;
}

unint64_t sub_24E2AE858()
{
  unint64_t result = qword_2698CADA8;
  if (!qword_2698CADA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CADA8);
  }
  return result;
}

unint64_t sub_24E2AE8AC()
{
  unint64_t result = qword_2698CADB8;
  if (!qword_2698CADB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CADB8);
  }
  return result;
}

uint64_t sub_24E2AE900(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Person.Relationship.Follower(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = type metadata accessor for Person();
  uint64_t v7 = MEMORY[0x270FA5388](v55);
  uint64_t v54 = (uint64_t)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v45 - v10;
  uint64_t v12 = (void *)MEMORY[0x263F8EE80];
  BOOL v57 = (void *)MEMORY[0x263F8EE80];
  uint64_t v13 = *(void *)(a1 + 16);
  if (!v13) {
    return (uint64_t)v12;
  }
  uint64_t v14 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v15 = (v14 + 32) & ~v14;
  uint64_t v16 = a1 + v15;
  uint64_t v17 = *(void *)(v9 + 72);
  uint64_t v51 = v11 + 8;
  uint64_t v52 = v17;
  uint64_t v53 = v15;
  uint64_t v48 = v17 + v15;
  uint64_t v47 = v14 | 7;
  long long v46 = xmmword_24E2F1C10;
  uint64_t v49 = v6;
  uint64_t v50 = a2;
  uint64_t v56 = (char *)&v45 - v10;
  while (1)
  {
    sub_24E2AF154(v16, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for Person);
    uint64_t v19 = *(void *)(a2 + 24);
    unint64_t v20 = &v11[*(int *)(v55 + 32)];
    uint64_t v21 = type metadata accessor for Person.Relationship(0);
    sub_24E2AF154((uint64_t)&v20[*(int *)(v21 + 20)], (uint64_t)v6, type metadata accessor for Person.Relationship.Follower);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if ((EnumCaseMultiPayload - 1) >= 2)
    {
      if (EnumCaseMultiPayload)
      {
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v24 = (uint64_t)&v6[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48)];
        swift_bridgeObjectRetain();
        sub_24E296710(v24, &qword_2698CAE18);
        sub_24E296710((uint64_t)v6, &qword_2698CAE18);
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_24E296710((uint64_t)v6, &qword_2698CAE18);
      if (sub_24E2D9470(0, v19))
      {
        swift_bridgeObjectRelease();
        unsigned __int8 v23 = 0;
        goto LABEL_15;
      }
    }
    if (v51[*(int *)(v55 + 36)])
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      unsigned __int8 v23 = 1;
      char v25 = sub_24E2D9470(1, v19);
      swift_bridgeObjectRelease();
      if (v25) {
        goto LABEL_15;
      }
    }
    unsigned __int8 v23 = 2;
LABEL_15:
    unint64_t v27 = sub_24E2C9A34(v23);
    uint64_t v28 = v12[2];
    BOOL v29 = (v26 & 1) == 0;
    uint64_t v30 = v28 + v29;
    if (__OFADD__(v28, v29)) {
      break;
    }
    char v31 = v26;
    if (v12[3] < v30)
    {
      sub_24E2A8C4C(v30, 1);
      uint64_t v12 = v57;
      unint64_t v32 = sub_24E2C9A34(v23);
      if ((v31 & 1) != (v33 & 1)) {
        goto LABEL_29;
      }
      unint64_t v27 = v32;
    }
    if (v31)
    {
      uint64_t v34 = v4;
      uint64_t v35 = v12[7];
      sub_24E2AF030((uint64_t)v56, v54, (uint64_t (*)(void))type metadata accessor for Person);
      unint64_t v36 = *(void *)(v35 + 8 * v27);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v35 + 8 * v27) = v36;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v36 = sub_24E2E4954(0, *(void *)(v36 + 16) + 1, 1, v36);
        *(void *)(v35 + 8 * v27) = v36;
      }
      unint64_t v39 = *(void *)(v36 + 16);
      unint64_t v38 = *(void *)(v36 + 24);
      if (v39 >= v38 >> 1)
      {
        unint64_t v36 = sub_24E2E4954(v38 > 1, v39 + 1, 1, v36);
        *(void *)(v35 + 8 * v27) = v36;
      }
      uint64_t v4 = v34;
      *(void *)(v36 + 16) = v39 + 1;
      uint64_t v18 = v52;
      sub_24E2AF030(v54, v36 + v53 + v39 * v52, (uint64_t (*)(void))type metadata accessor for Person);
      uint64_t v6 = v49;
      a2 = v50;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2698CA5C0);
      uint64_t v40 = swift_allocObject();
      *(_OWORD *)(v40 + 16) = v46;
      sub_24E2AF030((uint64_t)v56, v40 + v53, (uint64_t (*)(void))type metadata accessor for Person);
      v12[(v27 >> 6) + 8] |= 1 << v27;
      *(unsigned char *)(v12[6] + v27) = v23;
      *(void *)(v12[7] + 8 * v27) = v40;
      uint64_t v41 = v12[2];
      BOOL v42 = __OFADD__(v41, 1);
      uint64_t v43 = v41 + 1;
      if (v42) {
        goto LABEL_28;
      }
      v12[2] = v43;
      uint64_t v18 = v52;
    }
    v16 += v18;
    --v13;
    uint64_t v11 = v56;
    if (!v13) {
      return (uint64_t)v12;
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  uint64_t result = sub_24E2F1450();
  __break(1u);
  return result;
}

uint64_t sub_24E2AEDB4(uint64_t a1, uint64_t a2)
{
  uint64_t v23 = type metadata accessor for Person();
  uint64_t v5 = MEMORY[0x270FA5388](v23);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v21 - v9;
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v25 = MEMORY[0x263F8EE78];
  uint64_t v12 = *(void *)(a1 + 16);
  if (v12)
  {
    uint64_t v21 = v2;
    unint64_t v22 = v10 + 8;
    uint64_t v13 = *(void *)(v8 + 72);
    unint64_t v24 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v14 = a1 + v24;
    uint64_t v15 = MEMORY[0x263F8EE78];
    do
    {
      sub_24E2AF154(v14, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for Person);
      unint64_t v16 = *(void *)(a2 + 48);
      uint64_t v17 = *(void *)(a2 + 40) & 0xFFFFFFFFFFFFLL;
      if ((v16 & 0x2000000000000000) != 0) {
        uint64_t v17 = HIBYTE(v16) & 0xF;
      }
      if (v17) {
        BOOL v18 = 1;
      }
      else {
        BOOL v18 = *(unsigned char *)(a2 + 32) == 0;
      }
      if (!v18 && (v22[*(int *)(v23 + 36)] & 1) != 0)
      {
        sub_24E2AF098((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for Person);
      }
      else
      {
        sub_24E2AF030((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for Person);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_24E29594C(0, *(void *)(v15 + 16) + 1, 1);
        }
        uint64_t v15 = v25;
        unint64_t v20 = *(void *)(v25 + 16);
        unint64_t v19 = *(void *)(v25 + 24);
        if (v20 >= v19 >> 1)
        {
          sub_24E29594C(v19 > 1, v20 + 1, 1);
          uint64_t v15 = v25;
        }
        *(void *)(v15 + 16) = v20 + 1;
        sub_24E2AF030((uint64_t)v7, v15 + v24 + v20 * v13, (uint64_t (*)(void))type metadata accessor for Person);
      }
      v14 += v13;
      --v12;
    }
    while (v12);
    return v25;
  }
  return result;
}

uint64_t sub_24E2AF010()
{
  return 40;
}

__n128 sub_24E2AF01C(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_24E2AF030(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_24E2AF098(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_24E2AF0F8()
{
  unint64_t result = qword_2698CAE08;
  if (!qword_2698CAE08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CAE08);
  }
  return result;
}

uint64_t sub_24E2AF14C()
{
  return swift_release();
}

uint64_t sub_24E2AF154(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_24E2AF1BC()
{
  unint64_t result = qword_2698CAE30;
  if (!qword_2698CAE30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CAE30);
  }
  return result;
}

uint64_t sub_24E2AF210(uint64_t a1, unint64_t a2)
{
  if (a2 >= 3) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_24E2AF224(uint64_t a1, unint64_t a2)
{
  if (a2 >= 3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24E2AF238(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24E2AF280(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24E2AF2C4()
{
  unint64_t result = qword_2698CAE98;
  if (!qword_2698CAE98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CAE98);
  }
  return result;
}

uint64_t ItemEntityQuery.Dependencies.fetchItemsWithOptions.getter()
{
  uint64_t v1 = *v0;
  swift_retain();
  return v1;
}

uint64_t ItemEntityQuery.Dependencies.init(fetchItemsWithOptions:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

void *_s12DependenciesVwCP(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t _s12DependenciesVwxx()
{
  return swift_release();
}

void *_s12DependenciesVwca(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

_OWORD *_s12DependenciesVwta(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t _s12DependenciesVwet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s12DependenciesVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ItemEntityQuery.Dependencies()
{
  return &type metadata for ItemEntityQuery.Dependencies;
}

void *_s12DependenciesV19ItemsFetcherOptionsOwCP(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s12DependenciesV19ItemsFetcherOptionsOwxx()
{
  return swift_bridgeObjectRelease();
}

void *_s12DependenciesV19ItemsFetcherOptionsOwca(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy8_8(void *result, void *a2)
{
  *__n128 result = *a2;
  return result;
}

void *_s12DependenciesV19ItemsFetcherOptionsOwta(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s12DependenciesV19ItemsFetcherOptionsOwet(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t _s12DependenciesV19ItemsFetcherOptionsOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)__n128 result = 0;
    *(_DWORD *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

uint64_t sub_24E2AF5F0(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_24E2AF608(void *result, int a2)
{
  if (a2 < 0)
  {
    unsigned int v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2) {
      return result;
    }
    unsigned int v2 = a2 - 1;
  }
  *__n128 result = v2;
  return result;
}

ValueMetadata *type metadata accessor for ItemEntityQuery.Dependencies.ItemsFetcherOptions()
{
  return &type metadata for ItemEntityQuery.Dependencies.ItemsFetcherOptions;
}

uint64_t static ItemEntityQuery.Dependencies.live()@<X0>(void *a1@<X8>)
{
  uint64_t v2 = sub_24E2F0D70();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  uint64_t v5 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v13 - v7;
  sub_24E2F0D60();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
  v9(v6, v8, v2);
  unint64_t v10 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v11 = swift_allocObject();
  uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v9)(v11 + v10, v6, v2);
  *a1 = &unk_2698CACE8;
  a1[1] = v11;
  return result;
}

uint64_t sub_24E2AF7C4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  *(void *)(v2 + 56) = a2;
  *(void *)(v2 + 64) = v3;
  return MEMORY[0x270FA2498](sub_24E2AF7E8, 0, 0);
}

uint64_t sub_24E2AF7E8()
{
  uint64_t v1 = v0[8];
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F66168]), sel_init);
  v0[9] = v2;
  if (v1)
  {
    uint64_t v3 = v0[8];
    uint64_t v4 = self;
    sub_24E2AFFBC(v3);
    sub_24E2F0990();
    uint64_t v5 = (void *)sub_24E2F1020();
    swift_bridgeObjectRelease();
    id v6 = objc_msgSend(v4, sel_fmipItemContextForBeaconUUIDs_, v5);
  }
  else
  {
    id v6 = objc_msgSend(self, sel_fmipItemContext);
  }
  v0[10] = v6;
  uint64_t v7 = swift_allocObject();
  v0[11] = v7;
  *(void *)(v7 + 16) = v2;
  *(void *)(v7 + 24) = v6;
  id v8 = v2;
  id v9 = v6;
  unint64_t v10 = (void *)swift_task_alloc();
  v0[12] = v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAEC8);
  void *v10 = v0;
  v10[1] = sub_24E2AF9B4;
  return MEMORY[0x270F28C80](v0 + 2, 0xD02AB486CEDC0000, 0, &unk_2698CAEC0, v7, v11);
}

uint64_t sub_24E2AF9B4()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    id v2 = sub_24E2AFAD0;
  }
  else
  {
    swift_release();
    id v2 = sub_24E2AFB40;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24E2AFAD0()
{
  uint64_t v1 = (void *)v0[10];
  id v2 = (void *)v0[9];
  swift_release();

  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_24E2AFB40()
{
  uint64_t v26 = v0;
  unint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain_n();
  id v2 = sub_24E2F0D50();
  os_log_type_t v3 = sub_24E2F11E0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    v25[0] = v5;
    *(_DWORD *)uint64_t v4 = 136315394;
    *(void *)(v0 + 40) = sub_24E29CA04(0x29286576696CLL, 0xE600000000000000, v25);
    sub_24E2F1220();
    *(_WORD *)(v4 + 12) = 2050;
    if (v1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v6 = sub_24E2F1360();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v6 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    *(void *)(v0 + 48) = v6;
    sub_24E2F1220();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24E292000, v2, v3, "%s - appBeacons.count: %{public}ld", (uint8_t *)v4, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x253338AC0](v5, -1, -1);
    MEMORY[0x253338AC0](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v7 = *(void *)(v0 + 56);
  uint64_t v8 = swift_task_alloc();
  *(void *)(v8 + 16) = v7;
  unint64_t v9 = sub_24E2B0724((void (*)(id *))sub_24E2B1C78, v8, v1);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_bridgeObjectRetain_n();
  unint64_t v10 = sub_24E2F0D50();
  os_log_type_t v11 = sub_24E2F11E0();
  BOOL v12 = os_log_type_enabled(v10, v11);
  uint64_t v13 = *(void **)(v0 + 72);
  if (v12)
  {
    unint64_t v24 = *(void **)(v0 + 80);
    uint64_t v14 = swift_slowAlloc();
    uint64_t v23 = v13;
    uint64_t v15 = swift_slowAlloc();
    v25[0] = v15;
    *(_DWORD *)uint64_t v14 = 136315394;
    *(void *)(v0 + 24) = sub_24E29CA04(0x29286576696CLL, 0xE600000000000000, v25);
    sub_24E2F1220();
    *(_WORD *)(v14 + 12) = 2080;
    uint64_t v16 = type metadata accessor for Item();
    uint64_t v17 = swift_bridgeObjectRetain();
    uint64_t v18 = MEMORY[0x253337FA0](v17, v16);
    unint64_t v20 = v19;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 32) = sub_24E29CA04(v18, v20, v25);
    sub_24E2F1220();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24E292000, v10, v11, "%s - result: %s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x253338AC0](v15, -1, -1);
    MEMORY[0x253338AC0](v14, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v21 = *(uint64_t (**)(unint64_t))(v0 + 8);
  return v21(v9);
}

uint64_t sub_24E2AFF2C()
{
  uint64_t v1 = sub_24E2F0D70();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_24E2AFFBC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Beacon.BAIdentifier();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v65 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = &qword_2698CAED0;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAED0);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v61 = (uint64_t)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  unint64_t v10 = (char *)&v55 - v9;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAED8);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)&v55 - v16;
  MEMORY[0x270FA5388](v15);
  unint64_t v19 = (char *)&v55 - v18;
  uint64_t v73 = sub_24E2F0990();
  uint64_t v20 = MEMORY[0x270FA5388](v73 - 8);
  uint64_t v58 = (char *)&v55 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v63 = (char *)&v55 - v23;
  MEMORY[0x270FA5388](v22);
  BOOL v57 = (char *)&v55 - v25;
  uint64_t v26 = *(void *)(a1 + 56);
  uint64_t v67 = a1 + 56;
  uint64_t v27 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v28 = -1;
  if (v27 < 64) {
    uint64_t v28 = ~(-1 << v27);
  }
  unint64_t v29 = v28 & v26;
  unint64_t v78 = (unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
  unint64_t v68 = (void (**)(char *, char *, uint64_t))(v24 + 32);
  int64_t v69 = (unint64_t)(v27 + 63) >> 6;
  uint64_t v72 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
  uint64_t v62 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  uint64_t v60 = (void (**)(char *, uint64_t, uint64_t))(v24 + 16);
  uint64_t v56 = v24;
  BOOL v71 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v31 = 0;
  unint64_t v59 = MEMORY[0x263F8EE78];
  uint64_t v66 = v19;
  uint64_t v70 = v14;
  uint64_t v64 = v17;
  while (1)
  {
    if (v29)
    {
      uint64_t v74 = (v29 - 1) & v29;
      int64_t v75 = v31;
      unint64_t v32 = __clz(__rbit64(v29)) | (v31 << 6);
      goto LABEL_27;
    }
    int64_t v33 = v31 + 1;
    if (__OFADD__(v31, 1))
    {
      __break(1u);
      goto LABEL_37;
    }
    if (v33 >= v69) {
      goto LABEL_35;
    }
    unint64_t v34 = *(void *)(v67 + 8 * v33);
    int64_t v35 = v31 + 1;
    if (!v34)
    {
      int64_t v35 = v31 + 2;
      if (v31 + 2 >= v69) {
        goto LABEL_35;
      }
      unint64_t v34 = *(void *)(v67 + 8 * v35);
      if (!v34)
      {
        int64_t v35 = v31 + 3;
        if (v31 + 3 >= v69) {
          goto LABEL_35;
        }
        unint64_t v34 = *(void *)(v67 + 8 * v35);
        if (!v34)
        {
          int64_t v35 = v31 + 4;
          if (v31 + 4 >= v69) {
            goto LABEL_35;
          }
          unint64_t v34 = *(void *)(v67 + 8 * v35);
          if (!v34) {
            break;
          }
        }
      }
    }
LABEL_26:
    uint64_t v74 = (v34 - 1) & v34;
    int64_t v75 = v35;
    unint64_t v32 = __clz(__rbit64(v34)) + (v35 << 6);
LABEL_27:
    unint64_t v37 = *(void (**)(char *, char *, uint64_t))(*(void *)(a1 + 48) + 16 * v32 + 8);
    swift_bridgeObjectRetain();
    uint64_t v77 = v37;
    sub_24E2F0940();
    uint64_t v38 = v73;
    uint64_t v76 = *v78;
    if (v76(v14, 1, v73) == 1)
    {
      sub_24E296710((uint64_t)v14, &qword_2698CAED8);
      (*v72)(v10, 1, 1, v2);
LABEL_5:
      (*v71)(v17, 1, 1, v38);
      goto LABEL_6;
    }
    uint64_t v39 = (uint64_t)v10;
    uint64_t v40 = v2;
    uint64_t v41 = a1;
    BOOL v42 = *v68;
    uint64_t v43 = v63;
    (*v68)(v63, v14, v38);
    BOOL v44 = v5;
    uint64_t v45 = v65;
    v42(v65, v43, v38);
    a1 = v41;
    uint64_t v2 = v40;
    unint64_t v10 = (char *)v39;
    uint64_t v17 = v64;
    unint64_t v19 = v66;
    uint64_t v46 = (uint64_t)v45;
    uint64_t v5 = v44;
    uint64_t v14 = v70;
    sub_24E2B1DBC(v46, v39, (uint64_t (*)(void))type metadata accessor for Beacon.BAIdentifier);
    (*v72)((char *)v39, 0, 1, v2);
    if ((*v62)(v39, 1, v2) == 1) {
      goto LABEL_5;
    }
    uint64_t v47 = v61;
    sub_24E2B1EE8(v39, v61, v5);
    (*v60)(v17, v47, v38);
    (*v71)(v17, 0, 1, v38);
    uint64_t v48 = v47;
    uint64_t v14 = v70;
    sub_24E2B1CFC(v48);
LABEL_6:
    sub_24E296710((uint64_t)v10, v5);
    sub_24E2B1C94((uint64_t)v17, (uint64_t)v19);
    swift_bridgeObjectRelease();
    if (v76(v19, 1, v38) == 1)
    {
      uint64_t result = sub_24E296710((uint64_t)v19, &qword_2698CAED8);
    }
    else
    {
      uint64_t v49 = v19;
      uint64_t v50 = *v68;
      (*v68)(v57, v49, v38);
      uint64_t v77 = v50;
      v50(v58, v57, v38);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v59 = sub_24E2E46A0(0, *(void *)(v59 + 16) + 1, 1, v59);
      }
      unint64_t v52 = *(void *)(v59 + 16);
      unint64_t v51 = *(void *)(v59 + 24);
      if (v52 >= v51 >> 1) {
        unint64_t v59 = sub_24E2E46A0(v51 > 1, v52 + 1, 1, v59);
      }
      uint64_t v53 = v58;
      unint64_t v54 = v59;
      *(void *)(v59 + 16) = v52 + 1;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v77)(v54+ ((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80))+ *(void *)(v56 + 72) * v52, v53, v73);
      unint64_t v19 = v66;
    }
    unint64_t v29 = v74;
    int64_t v31 = v75;
  }
  uint64_t v36 = v31 + 5;
  if (v31 + 5 >= v69)
  {
LABEL_35:
    swift_release();
    return v59;
  }
  unint64_t v34 = *(void *)(v67 + 8 * v36);
  if (v34)
  {
    int64_t v35 = v31 + 5;
    goto LABEL_26;
  }
  while (1)
  {
    int64_t v35 = v36 + 1;
    if (__OFADD__(v36, 1)) {
      break;
    }
    if (v35 >= v69) {
      goto LABEL_35;
    }
    unint64_t v34 = *(void *)(v67 + 8 * v35);
    ++v36;
    if (v34) {
      goto LABEL_26;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

unint64_t sub_24E2B0724(void (*a1)(id *), uint64_t a2, unint64_t a3)
{
  uint64_t v28 = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CACF8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for Item();
  uint64_t v23 = *(void *)(v27 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v27);
  uint64_t v26 = (uint64_t)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v22 = (uint64_t)&v21 - v10;
  if (a3 >> 62) {
    goto LABEL_20;
  }
  uint64_t v11 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v11; uint64_t v11 = sub_24E2F1360())
  {
    uint64_t v24 = (unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
    unint64_t v25 = a3 & 0xC000000000000001;
    unint64_t v12 = MEMORY[0x263F8EE78];
    uint64_t v13 = 4;
    unint64_t v21 = a3;
    while (1)
    {
      id v14 = v25 ? (id)MEMORY[0x253338230](v13 - 4, a3) : *(id *)(a3 + 8 * v13);
      uint64_t v15 = v14;
      uint64_t v16 = v13 - 3;
      if (__OFADD__(v13 - 4, 1)) {
        break;
      }
      id v29 = v14;
      v28(&v29);
      if (v3)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return v12;
      }

      if ((*v24)(v7, 1, v27) == 1)
      {
        sub_24E296710((uint64_t)v7, &qword_2698CACF8);
      }
      else
      {
        uint64_t v17 = v22;
        sub_24E2B1DBC((uint64_t)v7, v22, (uint64_t (*)(void))type metadata accessor for Item);
        sub_24E2B1DBC(v17, v26, (uint64_t (*)(void))type metadata accessor for Item);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v12 = sub_24E2E4448(0, *(void *)(v12 + 16) + 1, 1, v12);
        }
        unint64_t v19 = *(void *)(v12 + 16);
        unint64_t v18 = *(void *)(v12 + 24);
        if (v19 >= v18 >> 1) {
          unint64_t v12 = sub_24E2E4448(v18 > 1, v19 + 1, 1, v12);
        }
        *(void *)(v12 + 16) = v19 + 1;
        sub_24E2B1DBC(v26, v12+ ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ *(void *)(v23 + 72) * v19, (uint64_t (*)(void))type metadata accessor for Item);
        a3 = v21;
      }
      ++v13;
      if (v16 == v11)
      {
        swift_bridgeObjectRelease();
        return v12;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x263F8EE78];
}

uint64_t sub_24E2B0A78@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v65 = type metadata accessor for Beacon();
  MEMORY[0x270FA5388](v65);
  uint64_t v5 = (uint64_t *)((char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = type metadata accessor for Beacon.BAIdentifier();
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v66 = (uint64_t)&v59 - v10;
  uint64_t v11 = sub_24E2F0990();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  id v14 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = *a1;
  uint64_t v16 = sub_24E2F0D50();
  os_log_type_t v17 = sub_24E2F11C0();
  int v18 = v17;
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v19 = swift_slowAlloc();
    LODWORD(v63) = v18;
    uint64_t v20 = v19;
    uint64_t v64 = swift_slowAlloc();
    uint64_t v69 = v64;
    *(_DWORD *)uint64_t v20 = 136315394;
    os_log_t v62 = v16;
    uint64_t v67 = sub_24E29CA04(0x29286576696CLL, 0xE600000000000000, &v69);
    uint64_t v61 = &v68;
    sub_24E2F1220();
    *(_WORD *)(v20 + 12) = 2080;
    uint64_t v60 = v20 + 14;
    id v21 = objc_msgSend(v15, sel_identifier);
    sub_24E2F0970();

    sub_24E2B1E24();
    uint64_t v22 = sub_24E2F1410();
    uint64_t v23 = v12;
    uint64_t v24 = v5;
    uint64_t v25 = a2;
    unint64_t v27 = v26;
    (*(void (**)(char *, uint64_t))(v23 + 8))(v14, v11);
    uint64_t v67 = sub_24E29CA04(v22, v27, &v69);
    sub_24E2F1220();

    a2 = v25;
    uint64_t v5 = v24;
    swift_bridgeObjectRelease();
    os_log_t v28 = v62;
    _os_log_impl(&dword_24E292000, v62, (os_log_type_t)v63, "%s - compactMap %s", (uint8_t *)v20, 0x16u);
    uint64_t v29 = v64;
    swift_arrayDestroy();
    MEMORY[0x253338AC0](v29, -1, -1);
    MEMORY[0x253338AC0](v20, -1, -1);
  }
  else
  {
  }
  if (qword_2698CA498 != -1) {
    swift_once();
  }
  uint64_t v30 = qword_2698D1E40;
  swift_bridgeObjectRetain();
  id v31 = objc_msgSend(v15, sel_type);
  char v32 = sub_24E2B1154((uint64_t)v31, v30);
  swift_bridgeObjectRelease();

  unsigned __int8 v33 = objc_msgSend(v15, sel_isAppleAudioAccessory);
  if ((v32 & 1) != 0
    && (v33 & 1) == 0
    && (id v34 = objc_msgSend(v15, sel_role)) != 0)
  {
    int64_t v35 = v34;
    id v36 = objc_msgSend(v15, sel_identifier);
    uint64_t v37 = v66;
    sub_24E2F0970();

    sub_24E2B1D58(v37, (uint64_t)v9);
    uint64_t v38 = sub_24E2F0950();
    uint64_t v63 = v39;
    uint64_t v64 = v38;
    sub_24E2B1CFC((uint64_t)v9);
    uint64_t v40 = v15;
    uint64_t v41 = (int *)v65;
    sub_24E2B1D58(v37, (uint64_t)v5 + *(int *)(v65 + 20));
    id v42 = objc_msgSend(v40, sel_name);
    uint64_t v43 = sub_24E2F0EC0();
    uint64_t v61 = v44;
    os_log_t v62 = v43;

    id v45 = objc_msgSend(v35, sel_roleEmoji);
    uint64_t v60 = sub_24E2F0EC0();
    uint64_t v47 = v46;

    id v48 = objc_msgSend(v40, sel_owner);
    sub_24E2B1EAC(0, (unint64_t *)&qword_2698CAEE0);
    id v49 = objc_msgSend(self, sel_SPOwner);
    LOBYTE(v45) = sub_24E2F11F0();

    unsigned __int8 v50 = objc_msgSend(v40, sel_connected);
    uint64_t v51 = v63;
    *uint64_t v5 = v64;
    v5[1] = v51;
    unint64_t v52 = (uint64_t *)((char *)v5 + v41[6]);
    uint64_t v53 = v61;
    *unint64_t v52 = v62;
    v52[1] = v53;
    unint64_t v54 = (char *)v5 + v41[7];
    *(void *)unint64_t v54 = v60;
    *((void *)v54 + 1) = v47;
    *((_OWORD *)v54 + 1) = 0u;
    *((_OWORD *)v54 + 2) = 0u;
    v54[48] = 0x80;
    *((unsigned char *)v5 + v41[8]) = v45 & 1;
    *((unsigned char *)v5 + v41[9]) = v50;
    uint64_t v55 = (char *)objc_msgSend(v40, sel_batteryLevel);

    sub_24E2B1CFC(v66);
    sub_24E2B1DBC((uint64_t)v5, a2, (uint64_t (*)(void))type metadata accessor for Beacon);
    uint64_t v56 = type metadata accessor for Item();
    *(unsigned char *)(a2 + *(int *)(v56 + 20)) = (unint64_t)(v55 - 5) < 2;
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(a2, 0, 1, v56);
  }
  else
  {
    uint64_t v58 = type metadata accessor for Item();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(a2, 1, 1, v58);
  }
}

id sub_24E2B10D4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAEB0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_24E2F28C0;
  uint64_t v1 = (void *)*MEMORY[0x263F661F8];
  id v5 = (id)*MEMORY[0x263F66200];
  uint64_t v2 = *MEMORY[0x263F66200];
  *(void *)(v0 + 32) = *MEMORY[0x263F661F8];
  *(void *)(v0 + 40) = v2;
  qword_2698D1E40 = v0;
  id v3 = v1;
  return v5;
}

uint64_t sub_24E2B1154(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = sub_24E2F0EC0();
  uint64_t v5 = v4;
  if (v3 == sub_24E2F0EC0() && v5 == v6)
  {
LABEL_20:
    swift_bridgeObjectRelease_n();
    return 1;
  }
  char v8 = sub_24E2F1430();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v8)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    return 1;
  }
  if (v2 == 1)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v10 = 5;
  while (1)
  {
    uint64_t v11 = v10 - 3;
    if (__OFADD__(v10 - 4, 1)) {
      break;
    }
    uint64_t v12 = sub_24E2F0EC0();
    uint64_t v14 = v13;
    if (v12 == sub_24E2F0EC0() && v14 == v15)
    {
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
    char v17 = sub_24E2F1430();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v17) {
      goto LABEL_7;
    }
    ++v10;
    if (v11 == v2) {
      goto LABEL_17;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_24E2B12AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  return MEMORY[0x270FA2498](sub_24E2B12D0, 0, 0);
}

uint64_t sub_24E2B12D0()
{
  uint64_t v1 = swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 32);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAEC8);
  *uint64_t v2 = v0;
  v2[1] = sub_24E2B13CC;
  return MEMORY[0x270F28DC8](v0 + 16, 0xD000000000000023, 0x800000024E2F6BA0, sub_24E2B1E7C, v1, v3);
}

uint64_t sub_24E2B13CC()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_24E2B1508;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_24E2B14E8;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24E2B14E8()
{
  **(void **)(v0 + 24) = *(void *)(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24E2B1508()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_24E2B156C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v12 = sub_24E2B1E84;
  uint64_t v13 = a1;
  uint64_t v8 = MEMORY[0x263EF8330];
  uint64_t v9 = 1107296256;
  uint64_t v10 = sub_24E2B18D0;
  uint64_t v11 = &block_descriptor;
  uint64_t v6 = _Block_copy(&v8);
  swift_retain();
  swift_release();
  uint64_t v12 = sub_24E2B1EA4;
  uint64_t v13 = a1;
  uint64_t v8 = MEMORY[0x263EF8330];
  uint64_t v9 = 1107296256;
  uint64_t v10 = sub_24E2B1B0C;
  uint64_t v11 = &block_descriptor_12;
  uint64_t v7 = _Block_copy(&v8);
  swift_retain();
  swift_release();
  objc_msgSend(a2, sel_startUpdatingApplicationBeaconsWithContext_collectionDifference_completion_, a3, v6, v7);
  _Block_release(v7);
  _Block_release(v6);
}

void sub_24E2B16C8(uint64_t a1, void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAEF8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAEF0);
  MEMORY[0x270FA5388](v8 - 8);
  unint64_t v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v11 = (char *)&v14 - v10;
  if (a2)
  {
    uint64_t v15 = a2;
    id v12 = a2;
    sub_24E2F0680();
  }
  else
  {
    sub_24E2B1EE8(a1, (uint64_t)&v14 - v10, &qword_2698CAEF0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v11, 1, v4) == 1
      || ((*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v11, v4),
          uint64_t v14 = MEMORY[0x263F8EE78],
          __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAEC8),
          sub_24E2B1F4C(),
          sub_24E2F11A0(),
          (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4),
          (uint64_t v13 = v15) == 0))
    {
      uint64_t v13 = (void *)MEMORY[0x263F8EE78];
    }
    uint64_t v15 = v13;
    sub_24E2F0690();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_24E2B18D0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAEF0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void (**)(char *, void *))(a1 + 32);
  if (a2)
  {
    sub_24E2B1EAC(0, &qword_2698CAF00);
    sub_24E2F13A0();
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAEF8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 0, 1, v10);
  }
  else
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAEF8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v8, 1, 1, v11);
  }
  swift_retain();
  id v12 = a3;
  v9(v8, a3);
  swift_release();

  return sub_24E296710((uint64_t)v8, &qword_2698CAEF0);
}

void sub_24E2B1A3C(char a1, id a2)
{
  if (a2)
  {
    id v3 = a2;
    sub_24E2F0680();
  }
  else if ((a1 & 1) == 0)
  {
    id v4 = objc_allocWithZone(MEMORY[0x263F087E8]);
    uint64_t v5 = (void *)sub_24E2F0E90();
    id v6 = objc_msgSend(v4, sel_initWithDomain_code_userInfo_, v5, 367237, 0);

    id v7 = v6;
    sub_24E2F0680();
  }
}

void sub_24E2B1B0C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_24E2B1B84()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_24E2B1BC4(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v1 + 16);
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_24E29D9A0;
  *(_OWORD *)(v4 + 32) = v5;
  *(void *)(v4 + 24) = a1;
  return MEMORY[0x270FA2498](sub_24E2B12D0, 0, 0);
}

uint64_t sub_24E2B1C78@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24E2B0A78(a1, a2);
}

uint64_t sub_24E2B1C94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAED8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24E2B1CFC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Beacon.BAIdentifier();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24E2B1D58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Beacon.BAIdentifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24E2B1DBC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_24E2B1E24()
{
  unint64_t result = qword_2698CAEE8;
  if (!qword_2698CAEE8)
  {
    sub_24E2F0990();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CAEE8);
  }
  return result;
}

void sub_24E2B1E7C(uint64_t a1)
{
  sub_24E2B156C(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

void sub_24E2B1E84(uint64_t a1, void *a2)
{
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

void sub_24E2B1EA4(char a1, id a2)
{
}

uint64_t sub_24E2B1EAC(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_24E2B1EE8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_24E2B1F4C()
{
  unint64_t result = qword_2698CAF08;
  if (!qword_2698CAF08)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2698CAEC8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CAF08);
  }
  return result;
}

uint64_t sub_24E2B1FB0()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAC60);
  MEMORY[0x270FA5388](v0 - 8);
  char v17 = (char *)v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_24E2F09B0();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v16 = sub_24E2F07B0();
  uint64_t v3 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24E2F0E70();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t MyLocalizationTableDescription = type metadata accessor for FindMyLocalizationTableDescription();
  MEMORY[0x270FA5388](MyLocalizationTableDescription);
  uint64_t v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_24E2F07D0();
  uint64_t v10 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v11 = sub_24E2F0600();
  __swift_allocate_value_buffer(v11, qword_2698CAF10);
  v14[1] = __swift_project_value_buffer(v11, (uint64_t)qword_2698CAF10);
  if (qword_2698CA4B0 != -1) {
    swift_once();
  }
  uint64_t v12 = __swift_project_value_buffer(MyLocalizationTableDescription, (uint64_t)qword_2698D1E48);
  sub_24E2B60E4(v12, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FindMyLocalizationTableDescription);
  sub_24E2F0E80();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, &v9[*(int *)(MyLocalizationTableDescription + 20)], v16);
  swift_bridgeObjectRetain();
  sub_24E2F09A0();
  sub_24E2F07E0();
  sub_24E2B614C((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for FindMyLocalizationTableDescription);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v17, 1, 1, v15);
  return sub_24E2F05F0();
}

uint64_t static PersonEntity.typeDisplayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2698CA4A0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_24E2F0600();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_2698CAF10);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t sub_24E2B2400()
{
  uint64_t v0 = sub_24E2F0D70();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t v3 = MEMORY[0x270FA5388](v0);
  uint64_t v4 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v13 - v5;
  uint64_t v7 = type metadata accessor for PersonEntityQuery();
  __swift_allocate_value_buffer(v7, qword_2698CAF28);
  uint64_t v8 = (void *)__swift_project_value_buffer(v7, (uint64_t)qword_2698CAF28);
  sub_24E2F0D60();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(v1 + 32);
  v9(v4, v6, v0);
  unint64_t v10 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v11 = swift_allocObject();
  v9((char *)(v11 + v10), v4, v0);
  uint64_t result = sub_24E2F0D60();
  *uint64_t v8 = &unk_2698CAFC0;
  v8[1] = v11;
  return result;
}

uint64_t static PersonEntity.defaultQuery.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2698CA4A8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for PersonEntityQuery();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_2698CAF28);
  return sub_24E2B60E4(v3, a1, (uint64_t (*)(void))type metadata accessor for PersonEntityQuery);
}

unint64_t static PersonEntity.attributionBundleIdentifier.getter()
{
  return 0xD000000000000010;
}

uint64_t PersonEntity.id.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t PersonEntity.person.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24E2B60E4(v1, a1, (uint64_t (*)(void))type metadata accessor for Person);
}

uint64_t PersonEntity.init(person:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_24E2B60E4(a1, a2, (uint64_t (*)(void))type metadata accessor for Person);
  type metadata accessor for AnyDisplayRepresentationImageCache();
  uint64_t v4 = swift_allocObject();
  swift_defaultActor_initialize();
  uint64_t v5 = v4 + OBJC_IVAR____TtC10FindMyCore34AnyDisplayRepresentationImageCache_cachedDisplayRepresentationImage;
  uint64_t v6 = sub_24E2F0590();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  uint64_t v7 = (void *)(v4 + OBJC_IVAR____TtC10FindMyCore34AnyDisplayRepresentationImageCache_imageBuilder);
  *uint64_t v7 = &unk_2698CAF40;
  v7[1] = 0;
  sub_24E2B614C(a1, (uint64_t (*)(void))type metadata accessor for Person);
  uint64_t result = type metadata accessor for PersonEntity();
  *(void *)(a2 + *(int *)(result + 20)) = v4;
  return result;
}

uint64_t type metadata accessor for PersonEntity()
{
  uint64_t result = qword_2698CAFA8;
  if (!qword_2698CAFA8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t PersonEntity.displayRepresentation.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAC58);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAC60);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24E2F07D0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = sub_24E2F0E60();
  MEMORY[0x270FA5388](v8 - 8);
  sub_24E2F0E50();
  sub_24E2F0E40();
  swift_bridgeObjectRetain();
  sub_24E2F0E30();
  swift_bridgeObjectRelease();
  sub_24E2F0E40();
  sub_24E2F07C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
  uint64_t v9 = sub_24E2F0590();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v2, 1, 1, v9);
  return sub_24E2F05A0();
}

uint64_t sub_24E2B2A58@<X0>(uint64_t a1@<X8>)
{
  if (qword_2698CA4A8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for PersonEntityQuery();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_2698CAF28);
  return sub_24E2B60E4(v3, a1, (uint64_t (*)(void))type metadata accessor for PersonEntityQuery);
}

uint64_t sub_24E2B2AD8@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_24E2B2AE4@<X0>(uint64_t a1@<X8>)
{
  if (qword_2698CA4A0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_24E2F0600();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_2698CAF10);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t sub_24E2B2B8C(uint64_t a1)
{
  uint64_t v2 = sub_24E2B5F38(&qword_2698CAFB8, (void (*)(uint64_t))type metadata accessor for PersonEntity);
  return MEMORY[0x270EE0C68](a1, v2);
}

uint64_t sub_24E2B2C0C(uint64_t a1)
{
  uint64_t v2 = sub_24E2B5F38(&qword_2698CAF88, (void (*)(uint64_t))type metadata accessor for PersonEntity);
  return MEMORY[0x270EE1D98](a1, v2);
}

uint64_t Person.UniqueIdentifier.entityIdentifierString.getter()
{
  return 0x3A3156444953;
}

uint64_t static Person.UniqueIdentifier.entityIdentifier(for:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  swift_bridgeObjectRetain();
  uint64_t result = sub_24E2F0FC0();
  if (result)
  {
    unint64_t v7 = sub_24E2F0F30();
    unint64_t v8 = sub_24E2A2D20(v7, a1, a2);
    uint64_t v10 = v9;
    uint64_t v12 = v11;
    uint64_t v14 = v13;
    swift_bridgeObjectRelease();
    a1 = MEMORY[0x253337E60](v8, v10, v12, v14);
    a2 = v15;
    uint64_t result = swift_bridgeObjectRelease();
  }
  *a3 = a1;
  a3[1] = a2;
  return result;
}

uint64_t sub_24E2B2D90()
{
  return 0x3A3156444953;
}

uint64_t sub_24E2B2DD8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  swift_bridgeObjectRetain();
  uint64_t result = sub_24E2F0FC0();
  if (result)
  {
    unint64_t v7 = sub_24E2F0F30();
    unint64_t v8 = sub_24E2A2D20(v7, a1, a2);
    uint64_t v10 = v9;
    uint64_t v12 = v11;
    uint64_t v14 = v13;
    swift_bridgeObjectRelease();
    a1 = MEMORY[0x253337E60](v8, v10, v12, v14);
    a2 = v15;
    uint64_t result = swift_bridgeObjectRelease();
  }
  *a3 = a1;
  a3[1] = a2;
  return result;
}

uint64_t sub_24E2B2E98()
{
  return sub_24E2B5F38(&qword_2698CAF48, (void (*)(uint64_t))type metadata accessor for PersonEntity);
}

uint64_t sub_24E2B2EE0()
{
  return sub_24E2B5F38(&qword_2698CAF50, (void (*)(uint64_t))type metadata accessor for PersonEntity);
}

uint64_t sub_24E2B2F28()
{
  return sub_24E2B5F38(&qword_2698CAF58, (void (*)(uint64_t))type metadata accessor for PersonEntity);
}

uint64_t sub_24E2B2F70()
{
  return sub_24E2B5F38(&qword_2698CAF60, (void (*)(uint64_t))type metadata accessor for PersonEntityQuery);
}

unint64_t sub_24E2B2FBC()
{
  unint64_t result = qword_2698CAF68;
  if (!qword_2698CAF68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CAF68);
  }
  return result;
}

uint64_t sub_24E2B3010()
{
  return sub_24E2B5F38(&qword_2698CAF70, (void (*)(uint64_t))type metadata accessor for PersonEntity);
}

uint64_t sub_24E2B3058()
{
  return sub_24E2B5F38(&qword_2698CAF78, (void (*)(uint64_t))type metadata accessor for PersonEntity);
}

uint64_t sub_24E2B30A0()
{
  return sub_24E2B5F38(&qword_2698CAF80, (void (*)(uint64_t))type metadata accessor for PersonEntity);
}

uint64_t sub_24E2B30E8()
{
  return sub_24E2B5F38(&qword_2698CAF88, (void (*)(uint64_t))type metadata accessor for PersonEntity);
}

unint64_t sub_24E2B3138()
{
  unint64_t result = qword_2698CAF90;
  if (!qword_2698CAF90)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2698CAF98);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CAF90);
  }
  return result;
}

uint64_t sub_24E2B3194()
{
  return sub_24E2B5F38(&qword_2698CAFA0, (void (*)(uint64_t))type metadata accessor for PersonEntity);
}

void *initializeBufferWithCopyOfBuffer for PersonEntity(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    uint64_t v6 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v6;
    uint64_t v7 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v7;
    uint64_t v8 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v8;
    *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
    uint64_t v9 = a2[8];
    *(void *)(a1 + 56) = a2[7];
    *(void *)(a1 + 64) = v9;
    *(void *)(a1 + 72) = a2[9];
    uint64_t v48 = type metadata accessor for Person();
    uint64_t v10 = *(int *)(v48 + 32);
    uint64_t v11 = (char *)v4 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = type metadata accessor for Person.Relationship.Following(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v20 = sub_24E2F0930();
      uint64_t v21 = *(void *)(v20 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v12, 1, v20))
      {
        uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(v11, v12, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v11, v12, v20);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v11, 0, 1, v20);
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
        goto LABEL_16;
      }
      uint64_t v15 = sub_24E2F0930();
      uint64_t v16 = *(void *)(v15 - 8);
      char v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
      uint64_t v47 = v16;
      if (v17(v12, 1, v15))
      {
        uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v11, v12, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v11, 0, 1, v15);
      }
      uint64_t v23 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
      uint64_t v24 = &v11[v23];
      uint64_t v25 = &v12[v23];
      if (v17(&v12[v23], 1, v15))
      {
        uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v24, v25, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v24, 0, 1, v15);
      }
    }
    swift_storeEnumTagMultiPayload();
LABEL_16:
    uint64_t v27 = *(int *)(type metadata accessor for Person.Relationship(0) + 20);
    os_log_t v28 = &v11[v27];
    uint64_t v29 = &v12[v27];
    uint64_t v30 = type metadata accessor for Person.Relationship.Follower(0);
    int v31 = swift_getEnumCaseMultiPayload();
    if (v31 == 2)
    {
      uint64_t v36 = sub_24E2F0930();
      uint64_t v37 = *(void *)(v36 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v29, 1, v36)) {
        goto LABEL_22;
      }
    }
    else
    {
      if (v31 != 1)
      {
        if (v31)
        {
          memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
LABEL_33:
          uint64_t v43 = *(int *)(v48 + 36);
          BOOL v44 = (char *)v4 + v43;
          uint64_t v45 = (uint64_t)a2 + v43;
          *(void *)BOOL v44 = *(void *)v45;
          v44[8] = *(unsigned char *)(v45 + 8);
          *(void *)((char *)v4 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
          goto LABEL_34;
        }
        uint64_t v32 = sub_24E2F0930();
        uint64_t v33 = *(void *)(v32 - 8);
        id v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48);
        if (v34(v29, 1, v32))
        {
          uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
          memcpy(v28, v29, *(void *)(*(void *)(v35 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v28, v29, v32);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v28, 0, 1, v32);
        }
        uint64_t v39 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
        uint64_t v40 = &v28[v39];
        uint64_t v41 = &v29[v39];
        if (v34(v41, 1, v32))
        {
          uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
          memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v40, v41, v32);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v40, 0, 1, v32);
        }
LABEL_32:
        swift_storeEnumTagMultiPayload();
        goto LABEL_33;
      }
      uint64_t v36 = sub_24E2F0930();
      uint64_t v37 = *(void *)(v36 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v29, 1, v36))
      {
LABEL_22:
        uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(v28, v29, *(void *)(*(void *)(v38 - 8) + 64));
        goto LABEL_32;
      }
    }
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v28, v29, v36);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v28, 0, 1, v36);
    goto LABEL_32;
  }
  uint64_t v19 = *a2;
  *uint64_t v4 = *a2;
  uint64_t v4 = (void *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
LABEL_34:
  swift_retain();
  return v4;
}

uint64_t destroy for PersonEntity(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = a1 + *(int *)(type metadata accessor for Person() + 32);
  type metadata accessor for Person.Relationship.Following(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v8 = sub_24E2F0930();
    uint64_t v9 = *(void *)(v8 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v2, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v2, v8);
    }
  }
  else if (!EnumCaseMultiPayload)
  {
    uint64_t v4 = sub_24E2F0930();
    uint64_t v5 = *(void *)(v4 - 8);
    uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (!v6(v2, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
    }
    uint64_t v7 = v2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
    if (!v6(v7, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v7, v4);
    }
  }
  uint64_t v10 = v2 + *(int *)(type metadata accessor for Person.Relationship(0) + 20);
  type metadata accessor for Person.Relationship.Follower(0);
  int v11 = swift_getEnumCaseMultiPayload();
  if (v11 == 2 || v11 == 1)
  {
    uint64_t v12 = sub_24E2F0930();
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12)) {
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  if (!v11)
  {
    uint64_t v12 = sub_24E2F0930();
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t v14 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
    if (!v14(v10, 1, v12)) {
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v10, v12);
    }
    v10 += *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
    if (!v14(v10, 1, v12)) {
LABEL_17:
    }
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v10, v12);
  }
LABEL_18:
  return swift_release();
}

uint64_t initializeWithCopy for PersonEntity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v8 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v8;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  uint64_t v46 = type metadata accessor for Person();
  uint64_t v9 = *(int *)(v46 + 32);
  uint64_t v10 = (char *)(a1 + v9);
  int v11 = (char *)(a2 + v9);
  uint64_t v12 = type metadata accessor for Person.Relationship.Following(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v18 = sub_24E2F0930();
    uint64_t v19 = *(void *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v11, 1, v18))
    {
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
      memcpy(v10, v11, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v10, v11, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v10, 0, 1, v18);
    }
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
      goto LABEL_14;
    }
    uint64_t v14 = sub_24E2F0930();
    uint64_t v15 = *(void *)(v14 - 8);
    uint64_t v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    uint64_t v45 = v15;
    if (v16(v11, 1, v14))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
      memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v10, v11, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v10, 0, 1, v14);
    }
    uint64_t v21 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
    uint64_t v22 = &v10[v21];
    uint64_t v23 = &v11[v21];
    if (v16(&v11[v21], 1, v14))
    {
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
      memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v22, v23, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v22, 0, 1, v14);
    }
  }
  swift_storeEnumTagMultiPayload();
LABEL_14:
  uint64_t v25 = *(int *)(type metadata accessor for Person.Relationship(0) + 20);
  uint64_t v26 = &v10[v25];
  uint64_t v27 = &v11[v25];
  uint64_t v28 = type metadata accessor for Person.Relationship.Follower(0);
  int v29 = swift_getEnumCaseMultiPayload();
  switch(v29)
  {
    case 2:
      uint64_t v34 = sub_24E2F0930();
      uint64_t v35 = *(void *)(v34 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v27, 1, v34))
      {
LABEL_20:
        uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(v26, v27, *(void *)(*(void *)(v36 - 8) + 64));
LABEL_30:
        swift_storeEnumTagMultiPayload();
        goto LABEL_31;
      }
LABEL_27:
      (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v26, v27, v34);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v26, 0, 1, v34);
      goto LABEL_30;
    case 1:
      uint64_t v34 = sub_24E2F0930();
      uint64_t v35 = *(void *)(v34 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v27, 1, v34)) {
        goto LABEL_20;
      }
      goto LABEL_27;
    case 0:
      uint64_t v30 = sub_24E2F0930();
      uint64_t v31 = *(void *)(v30 - 8);
      uint64_t v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
      if (v32(v27, 1, v30))
      {
        uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(v26, v27, *(void *)(*(void *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v26, v27, v30);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v26, 0, 1, v30);
      }
      uint64_t v37 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
      uint64_t v38 = &v26[v37];
      uint64_t v39 = &v27[v37];
      if (v32(v39, 1, v30))
      {
        uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v38, v39, v30);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v38, 0, 1, v30);
      }
      goto LABEL_30;
  }
  memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
LABEL_31:
  uint64_t v41 = *(int *)(v46 + 36);
  uint64_t v42 = a1 + v41;
  uint64_t v43 = a2 + v41;
  *(void *)uint64_t v42 = *(void *)v43;
  *(unsigned char *)(v42 + 8) = *(unsigned char *)(v43 + 8);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for PersonEntity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = type metadata accessor for Person();
  uint64_t v7 = v6;
  if (a1 == a2)
  {
    type metadata accessor for Person.Relationship(0);
    goto LABEL_35;
  }
  uint64_t v8 = *(int *)(v6 + 32);
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (char *)(a2 + v8);
  sub_24E2B614C(a1 + v8, type metadata accessor for Person.Relationship.Following);
  uint64_t v11 = type metadata accessor for Person.Relationship.Following(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v17 = sub_24E2F0930();
    uint64_t v18 = *(void *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v10, 1, v17))
    {
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
      memcpy(v9, v10, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v9, v10, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v9, 0, 1, v17);
    }
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
      goto LABEL_17;
    }
    uint64_t v13 = a3;
    uint64_t v14 = sub_24E2F0930();
    uint64_t v15 = *(void *)(v14 - 8);
    uint64_t v46 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    uint64_t v47 = v7;
    uint64_t v45 = v15;
    if (v46(v10, 1, v14))
    {
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
      memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v9, v10, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v9, 0, 1, v14);
    }
    uint64_t v20 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
    uint64_t v21 = &v9[v20];
    uint64_t v22 = &v10[v20];
    if (v46(&v10[v20], 1, v14))
    {
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v21, v22, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v21, 0, 1, v14);
    }
    uint64_t v7 = v47;
    a3 = v13;
  }
  swift_storeEnumTagMultiPayload();
LABEL_17:
  uint64_t v24 = *(int *)(type metadata accessor for Person.Relationship(0) + 20);
  uint64_t v25 = &v9[v24];
  uint64_t v26 = &v10[v24];
  sub_24E2B614C((uint64_t)v25, type metadata accessor for Person.Relationship.Follower);
  uint64_t v27 = type metadata accessor for Person.Relationship.Follower(0);
  int v28 = swift_getEnumCaseMultiPayload();
  switch(v28)
  {
    case 2:
      uint64_t v33 = sub_24E2F0930();
      uint64_t v34 = *(void *)(v33 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v26, 1, v33))
      {
LABEL_23:
        uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(v25, v26, *(void *)(*(void *)(v35 - 8) + 64));
LABEL_34:
        swift_storeEnumTagMultiPayload();
        goto LABEL_35;
      }
LABEL_27:
      (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v25, v26, v33);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v25, 0, 1, v33);
      goto LABEL_34;
    case 1:
      uint64_t v33 = sub_24E2F0930();
      uint64_t v34 = *(void *)(v33 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v26, 1, v33)) {
        goto LABEL_23;
      }
      goto LABEL_27;
    case 0:
      uint64_t v29 = sub_24E2F0930();
      uint64_t v30 = *(void *)(v29 - 8);
      uint64_t v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
      uint64_t v48 = a3;
      if (v31(v26, 1, v29))
      {
        uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(v25, v26, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v25, v26, v29);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v25, 0, 1, v29);
      }
      uint64_t v36 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
      uint64_t v37 = &v25[v36];
      uint64_t v38 = &v26[v36];
      if (v31(v38, 1, v29))
      {
        uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v37, v38, v29);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v37, 0, 1, v29);
      }
      a3 = v48;
      goto LABEL_34;
  }
  memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
LABEL_35:
  uint64_t v40 = *(int *)(v7 + 36);
  uint64_t v41 = a1 + v40;
  uint64_t v42 = (uint64_t *)(a2 + v40);
  uint64_t v43 = *v42;
  *(unsigned char *)(v41 + 8) = *((unsigned char *)v42 + 8);
  *(void *)uint64_t v41 = v43;
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *initializeWithTake for PersonEntity(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  long long v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  a1[4] = a2[4];
  uint64_t v8 = type metadata accessor for Person();
  uint64_t v9 = *(int *)(v8 + 32);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for Person.Relationship.Following(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v18 = sub_24E2F0930();
    uint64_t v19 = *(void *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v11, 1, v18))
    {
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
      memcpy(v10, v11, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v10, v11, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v10, 0, 1, v18);
    }
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
      goto LABEL_15;
    }
    uint64_t v14 = a3;
    uint64_t v15 = sub_24E2F0930();
    uint64_t v16 = *(void *)(v15 - 8);
    uint64_t v46 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
    uint64_t v47 = v8;
    uint64_t v45 = v16;
    if (v46(v11, 1, v15))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
      memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v10, v11, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v10, 0, 1, v15);
    }
    uint64_t v21 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
    uint64_t v22 = &v10[v21];
    uint64_t v23 = &v11[v21];
    if (v46(&v11[v21], 1, v15))
    {
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
      memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v22, v23, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v22, 0, 1, v15);
    }
    uint64_t v8 = v47;
    a3 = v14;
  }
  swift_storeEnumTagMultiPayload();
LABEL_15:
  uint64_t v25 = *(int *)(type metadata accessor for Person.Relationship(0) + 20);
  uint64_t v26 = &v10[v25];
  uint64_t v27 = &v11[v25];
  uint64_t v28 = type metadata accessor for Person.Relationship.Follower(0);
  int v29 = swift_getEnumCaseMultiPayload();
  if (v29 == 2)
  {
    uint64_t v34 = sub_24E2F0930();
    uint64_t v35 = *(void *)(v34 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v27, 1, v34))
    {
LABEL_21:
      uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
      memcpy(v26, v27, *(void *)(*(void *)(v36 - 8) + 64));
LABEL_29:
      swift_storeEnumTagMultiPayload();
      goto LABEL_33;
    }
LABEL_28:
    (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v26, v27, v34);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v26, 0, 1, v34);
    goto LABEL_29;
  }
  if (v29 == 1)
  {
    uint64_t v34 = sub_24E2F0930();
    uint64_t v35 = *(void *)(v34 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v27, 1, v34)) {
      goto LABEL_21;
    }
    goto LABEL_28;
  }
  if (v29)
  {
    memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    uint64_t v30 = sub_24E2F0930();
    uint64_t v31 = *(void *)(v30 - 8);
    uint64_t v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
    uint64_t v48 = a3;
    if (v32(v27, 1, v30))
    {
      uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
      memcpy(v26, v27, *(void *)(*(void *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v26, v27, v30);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v26, 0, 1, v30);
    }
    uint64_t v37 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
    uint64_t v38 = &v26[v37];
    uint64_t v39 = &v27[v37];
    if (v32(v39, 1, v30))
    {
      uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
      memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v38, v39, v30);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v38, 0, 1, v30);
    }
    swift_storeEnumTagMultiPayload();
    a3 = v48;
  }
LABEL_33:
  uint64_t v41 = *(int *)(v8 + 36);
  uint64_t v42 = (char *)a1 + v41;
  uint64_t v43 = (char *)a2 + v41;
  *(void *)uint64_t v42 = *(void *)v43;
  v42[8] = v43[8];
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for PersonEntity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = type metadata accessor for Person();
  uint64_t v11 = v10;
  if (a1 == a2)
  {
    type metadata accessor for Person.Relationship(0);
    goto LABEL_35;
  }
  uint64_t v12 = *(int *)(v10 + 32);
  uint64_t v13 = (char *)(a1 + v12);
  uint64_t v14 = (char *)(a2 + v12);
  sub_24E2B614C(a1 + v12, type metadata accessor for Person.Relationship.Following);
  uint64_t v15 = type metadata accessor for Person.Relationship.Following(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v21 = sub_24E2F0930();
    uint64_t v22 = *(void *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v14, 1, v21))
    {
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
      memcpy(v13, v14, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v13, v14, v21);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v13, 0, 1, v21);
    }
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
      goto LABEL_17;
    }
    uint64_t v17 = a3;
    uint64_t v18 = sub_24E2F0930();
    uint64_t v19 = *(void *)(v18 - 8);
    id v49 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
    uint64_t v50 = v11;
    uint64_t v48 = v19;
    if (v49(v14, 1, v18))
    {
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
      memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v13, v14, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v13, 0, 1, v18);
    }
    uint64_t v24 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
    uint64_t v25 = &v13[v24];
    uint64_t v26 = &v14[v24];
    if (v49(&v14[v24], 1, v18))
    {
      uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
      memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v25, v26, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v25, 0, 1, v18);
    }
    uint64_t v11 = v50;
    a3 = v17;
  }
  swift_storeEnumTagMultiPayload();
LABEL_17:
  uint64_t v28 = *(int *)(type metadata accessor for Person.Relationship(0) + 20);
  int v29 = &v13[v28];
  uint64_t v30 = &v14[v28];
  sub_24E2B614C((uint64_t)v29, type metadata accessor for Person.Relationship.Follower);
  uint64_t v31 = type metadata accessor for Person.Relationship.Follower(0);
  int v32 = swift_getEnumCaseMultiPayload();
  switch(v32)
  {
    case 2:
      uint64_t v37 = sub_24E2F0930();
      uint64_t v38 = *(void *)(v37 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v30, 1, v37))
      {
LABEL_23:
        uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(v29, v30, *(void *)(*(void *)(v39 - 8) + 64));
LABEL_34:
        swift_storeEnumTagMultiPayload();
        goto LABEL_35;
      }
LABEL_27:
      (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v29, v30, v37);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v29, 0, 1, v37);
      goto LABEL_34;
    case 1:
      uint64_t v37 = sub_24E2F0930();
      uint64_t v38 = *(void *)(v37 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v30, 1, v37)) {
        goto LABEL_23;
      }
      goto LABEL_27;
    case 0:
      uint64_t v33 = sub_24E2F0930();
      uint64_t v34 = *(void *)(v33 - 8);
      uint64_t v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48);
      uint64_t v51 = a3;
      if (v35(v30, 1, v33))
      {
        uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(v29, v30, *(void *)(*(void *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v29, v30, v33);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v29, 0, 1, v33);
      }
      uint64_t v40 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
      uint64_t v41 = &v29[v40];
      uint64_t v42 = &v30[v40];
      if (v35(v42, 1, v33))
      {
        uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v41, v42, v33);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v41, 0, 1, v33);
      }
      a3 = v51;
      goto LABEL_34;
  }
  memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
LABEL_35:
  uint64_t v44 = *(int *)(v11 + 36);
  uint64_t v45 = a1 + v44;
  uint64_t v46 = a2 + v44;
  *(void *)uint64_t v45 = *(void *)v46;
  *(unsigned char *)(v45 + 8) = *(unsigned char *)(v46 + 8);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for PersonEntity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24E2B5D10);
}

uint64_t sub_24E2B5D10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Person();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for PersonEntity(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24E2B5DE4);
}

uint64_t sub_24E2B5DE4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Person();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_24E2B5EA0()
{
  uint64_t result = type metadata accessor for Person();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_24E2B5F38(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24E2B5F80()
{
  uint64_t v1 = sub_24E2F0D70();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_24E2B6010(uint64_t *a1)
{
  uint64_t v4 = *(void *)(sub_24E2F0D70() - 8);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_24E2A3E70;
  return sub_24E2B9AEC(a1, v5);
}

uint64_t sub_24E2B60E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24E2B614C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

__n128 PersonEntityQuery.init(dependencies:)@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  type metadata accessor for PersonEntityQuery();
  sub_24E2F0D60();
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t type metadata accessor for PersonEntityQuery()
{
  uint64_t result = qword_2698CB048;
  if (!qword_2698CB048) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t PersonEntityQuery.init()@<X0>(void *a1@<X8>)
{
  uint64_t v2 = sub_24E2F0D70();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  uint64_t v5 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v13 - v7;
  sub_24E2F0D60();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
  v9(v6, v8, v2);
  unint64_t v10 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v11 = swift_allocObject();
  v9((char *)(v11 + v10), v6, v2);
  type metadata accessor for PersonEntityQuery();
  uint64_t result = sub_24E2F0D60();
  *a1 = &unk_2698CAFC0;
  a1[1] = v11;
  return result;
}

uint64_t PersonEntityQuery.defaultResult()(uint64_t a1)
{
  v2[6] = a1;
  v2[7] = v1;
  uint64_t v3 = type metadata accessor for PersonEntity();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for Person();
  v2[11] = v4;
  v2[12] = *(void *)(v4 - 8);
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAFD0);
  v2[15] = swift_task_alloc();
  v2[16] = swift_task_alloc();
  uint64_t v5 = sub_24E2F0D70();
  v2[17] = v5;
  v2[18] = *(void *)(v5 - 8);
  v2[19] = swift_task_alloc();
  v2[20] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E2B65E8, 0, 0);
}

uint64_t sub_24E2B65E8()
{
  uint64_t v22 = v0;
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 136);
  uint64_t v3 = *(void *)(v0 + 144);
  uint64_t v4 = *(void *)(v0 + 56);
  uint64_t v5 = *(int *)(type metadata accessor for PersonEntityQuery() + 20);
  *(_DWORD *)(v0 + 216) = v5;
  uint64_t v6 = v4 + v5;
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(void *)(v0 + 168) = v7;
  *(void *)(v0 + 176) = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v7(v1, v6, v2);
  uint64_t v8 = sub_24E2F0D50();
  os_log_type_t v9 = sub_24E2F11E0();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = *(void *)(v0 + 160);
    uint64_t v11 = *(void *)(v0 + 136);
    uint64_t v12 = *(void *)(v0 + 144);
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v21 = v14;
    *(_DWORD *)uint64_t v13 = 136315138;
    *(void *)(v0 + 40) = sub_24E29CA04(0x52746C7561666564, 0xEF2928746C757365, &v21);
    sub_24E2F1220();
    _os_log_impl(&dword_24E292000, v8, v9, "%s", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x253338AC0](v14, -1, -1);
    MEMORY[0x253338AC0](v13, -1, -1);

    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v15(v10, v11);
  }
  else
  {
    uint64_t v16 = *(void *)(v0 + 160);
    uint64_t v17 = *(void *)(v0 + 136);
    uint64_t v18 = *(void *)(v0 + 144);

    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
    v15(v16, v17);
  }
  *(void *)(v0 + 184) = v15;
  *(void *)(v0 + 16) = 0;
  uint64_t v19 = (void *)swift_task_alloc();
  *(void *)(v0 + 192) = v19;
  void *v19 = v0;
  v19[1] = sub_24E2B6834;
  return sub_24E2B6C64((uint64_t *)(v0 + 16));
}

uint64_t sub_24E2B6834(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 200) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_24E2A4B78;
  }
  else
  {
    *(void *)(v4 + 208) = a1;
    uint64_t v5 = sub_24E2B695C;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_24E2B695C()
{
  sub_24E2AE5C4((uint64_t)&unk_27003AC88);
  uint64_t v20 = MEMORY[0x263F8EE78];
  sub_24E2A8180();
  swift_bridgeObjectRelease();
  if (*(void *)(v20 + 16))
  {
    uint64_t v1 = *(unsigned __int8 *)(v0[12] + 80);
    sub_24E2B934C(v20 + ((v1 + 32) & ~v1), v0[16]);
    uint64_t v2 = 0;
  }
  else
  {
    uint64_t v2 = 1;
  }
  uint64_t v4 = v0[15];
  uint64_t v3 = v0[16];
  uint64_t v6 = v0[11];
  uint64_t v5 = v0[12];
  uint64_t v7 = 1;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, v2, 1, v6);
  sub_24E2B93B0(v3, v4);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v4, 1, v6) != 1)
  {
    uint64_t v8 = v0[14];
    uint64_t v9 = v0[13];
    uint64_t v10 = v0[10];
    uint64_t v11 = v0[8];
    uint64_t v19 = v0[6];
    sub_24E2B94D4(v0[15], v8, (uint64_t (*)(void))type metadata accessor for Person);
    sub_24E2B934C(v8, v9);
    sub_24E2B934C(v9, v10);
    type metadata accessor for AnyDisplayRepresentationImageCache();
    uint64_t v12 = swift_allocObject();
    swift_defaultActor_initialize();
    uint64_t v13 = v12 + OBJC_IVAR____TtC10FindMyCore34AnyDisplayRepresentationImageCache_cachedDisplayRepresentationImage;
    uint64_t v14 = sub_24E2F0590();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
    uint64_t v15 = (void *)(v12 + OBJC_IVAR____TtC10FindMyCore34AnyDisplayRepresentationImageCache_imageBuilder);
    *uint64_t v15 = &unk_2698CAF40;
    v15[1] = 0;
    sub_24E2B9478(v9);
    *(void *)(v10 + *(int *)(v11 + 20)) = v12;
    sub_24E2B94D4(v10, v19, (uint64_t (*)(void))type metadata accessor for PersonEntity);
    sub_24E2B9478(v8);
    uint64_t v7 = 0;
  }
  uint64_t v16 = v0[16];
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[9] + 56))(v0[6], v7, 1, v0[8]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24E2B9418(v16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_24E2B6C64(uint64_t *a1)
{
  v2[8] = v1;
  uint64_t v4 = sub_24E2F0D70();
  v2[9] = v4;
  v2[10] = *(void *)(v4 - 8);
  v2[11] = swift_task_alloc();
  uint64_t v5 = swift_task_alloc();
  uint64_t v6 = *a1;
  v2[12] = v5;
  v2[13] = v6;
  return MEMORY[0x270FA2498](sub_24E2B6D3C, 0, 0);
}

uint64_t sub_24E2B6D3C()
{
  uint64_t v27 = v0;
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v4 = *(void *)(v0 + 80);
  uint64_t v5 = *(int *)(type metadata accessor for PersonEntityQuery() + 20);
  *(_DWORD *)(v0 + 160) = v5;
  uint64_t v6 = v1 + v5;
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  *(void *)(v0 + 112) = v7;
  *(void *)(v0 + 120) = (v4 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v7(v2, v6, v3);
  swift_bridgeObjectRetain_n();
  uint64_t v8 = sub_24E2F0D50();
  os_log_type_t v9 = sub_24E2F11E0();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = *(void *)(v0 + 104);
    uint64_t v22 = *(void *)(v0 + 80);
    uint64_t v23 = *(void *)(v0 + 72);
    uint64_t v24 = *(void *)(v0 + 96);
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v26 = v12;
    *(_DWORD *)uint64_t v11 = 136315394;
    *(void *)(v0 + 40) = sub_24E29CA04(0xD000000000000015, 0x800000024E2F6C90, &v26);
    sub_24E2F1220();
    *(_WORD *)(v11 + 12) = 2080;
    *(void *)(v0 + 48) = v10;
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_24E2F0EE0();
    *(void *)(v0 + 56) = sub_24E29CA04(v13, v14, &v26);
    sub_24E2F1220();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24E292000, v8, v9, "%s - will call fetchPeopleWithOptions: %s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x253338AC0](v12, -1, -1);
    MEMORY[0x253338AC0](v11, -1, -1);

    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
    v15(v24, v23);
  }
  else
  {
    uint64_t v16 = *(void *)(v0 + 96);
    uint64_t v17 = *(void *)(v0 + 72);
    uint64_t v18 = *(void *)(v0 + 80);
    swift_bridgeObjectRelease_n();

    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
    v15(v16, v17);
  }
  *(void *)(v0 + 128) = v15;
  uint64_t v19 = **(int ***)(v0 + 64);
  *(void *)(v0 + 16) = *(void *)(v0 + 104);
  uint64_t v25 = (uint64_t (*)(uint64_t))((char *)v19 + *v19);
  uint64_t v20 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v20;
  *uint64_t v20 = v0;
  v20[1] = sub_24E2B7048;
  return v25(v0 + 16);
}

uint64_t sub_24E2B7048(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 144) = a1;
  *(void *)(v3 + 152) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_24E2A5620;
  }
  else {
    uint64_t v4 = sub_24E2B715C;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_24E2B715C()
{
  uint64_t v20 = v0;
  (*(void (**)(void, void, void))(v0 + 112))(*(void *)(v0 + 88), *(void *)(v0 + 64) + *(int *)(v0 + 160), *(void *)(v0 + 72));
  swift_bridgeObjectRetain_n();
  uint64_t v1 = sub_24E2F0D50();
  os_log_type_t v2 = sub_24E2F11E0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v17 = *(void *)(v0 + 88);
    uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v0 + 128);
    uint64_t v16 = *(void *)(v0 + 72);
    uint64_t v3 = swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    uint64_t v19 = v15;
    *(_DWORD *)uint64_t v3 = 136315394;
    *(void *)(v0 + 24) = sub_24E29CA04(0xD000000000000015, 0x800000024E2F6C90, &v19);
    sub_24E2F1220();
    *(_WORD *)(v3 + 12) = 2080;
    uint64_t v4 = type metadata accessor for Person();
    uint64_t v5 = swift_bridgeObjectRetain();
    uint64_t v6 = MEMORY[0x253337FA0](v5, v4);
    unint64_t v8 = v7;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 32) = sub_24E29CA04(v6, v8, &v19);
    sub_24E2F1220();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24E292000, v1, v2, "%s - did receive fetchPeopleWithOptions: %s", (uint8_t *)v3, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x253338AC0](v15, -1, -1);
    MEMORY[0x253338AC0](v3, -1, -1);

    v18(v17, v16);
  }
  else
  {
    os_log_type_t v9 = *(void (**)(uint64_t, uint64_t))(v0 + 128);
    uint64_t v10 = *(void *)(v0 + 88);
    uint64_t v11 = *(void *)(v0 + 72);
    swift_bridgeObjectRelease_n();

    v9(v10, v11);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v13 = *(void *)(v0 + 144);
  return v12(v13);
}

uint64_t PersonEntityQuery.entities(for:)(uint64_t a1)
{
  v2[5] = a1;
  v2[6] = v1;
  v2[7] = *(void *)(type metadata accessor for Person() - 8);
  v2[8] = swift_task_alloc();
  v2[9] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for PersonEntity();
  v2[10] = v3;
  v2[11] = *(void *)(v3 - 8);
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  uint64_t v4 = sub_24E2F0D70();
  v2[14] = v4;
  v2[15] = *(void *)(v4 - 8);
  v2[16] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E2B7584, 0, 0);
}

uint64_t sub_24E2B7584()
{
  uint64_t v25 = v0;
  uint64_t v2 = v0[15];
  uint64_t v1 = v0[16];
  uint64_t v3 = v0[14];
  uint64_t v4 = v0[6];
  uint64_t v5 = type metadata accessor for PersonEntityQuery();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4 + *(int *)(v5 + 20), v3);
  swift_bridgeObjectRetain_n();
  uint64_t v6 = sub_24E2F0D50();
  os_log_type_t v7 = sub_24E2F11E0();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v21 = v0[15];
    uint64_t v22 = v0[14];
    uint64_t v23 = v0[16];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    uint64_t v24 = v20;
    *(_DWORD *)uint64_t v8 = 136315394;
    v0[3] = sub_24E29CA04(0x7365697469746E65, 0xEE00293A726F6628, &v24);
    sub_24E2F1220();
    *(_WORD *)(v8 + 12) = 2082;
    uint64_t v9 = swift_bridgeObjectRetain();
    uint64_t v10 = MEMORY[0x253337FA0](v9, &type metadata for Person.UniqueIdentifier);
    unint64_t v12 = v11;
    swift_bridgeObjectRelease();
    v0[4] = sub_24E29CA04(v10, v12, &v24);
    sub_24E2F1220();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24E292000, v6, v7, "%s - ids: %{public}s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x253338AC0](v20, -1, -1);
    MEMORY[0x253338AC0](v8, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v23, v22);
  }
  else
  {
    uint64_t v14 = v0[15];
    uint64_t v13 = v0[16];
    uint64_t v15 = v0[14];
    swift_bridgeObjectRelease_n();

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  }
  uint64_t v16 = swift_bridgeObjectRetain();
  uint64_t v17 = sub_24E2AE678(v16);
  v0[17] = v17;
  swift_bridgeObjectRelease();
  v0[2] = v17;
  uint64_t v18 = (void *)swift_task_alloc();
  v0[18] = (uint64_t)v18;
  void *v18 = v0;
  v18[1] = sub_24E2B787C;
  return sub_24E2B6C64(v0 + 2);
}

uint64_t sub_24E2B787C(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 152) = a1;
  *(void *)(v3 + 160) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1) {
    uint64_t v4 = sub_24E2A5F68;
  }
  else {
    uint64_t v4 = sub_24E2B79B0;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_24E2B79B0()
{
  uint64_t v1 = v0[19];
  int64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v20 = v0[10];
    uint64_t v21 = v0[11];
    uint64_t v3 = v0[7];
    uint64_t v22 = MEMORY[0x263F8EE78];
    sub_24E2959B8(0, v2, 0);
    uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v19 = *(void *)(v3 + 72);
    uint64_t v5 = v22;
    do
    {
      uint64_t v7 = v0[12];
      uint64_t v6 = v0[13];
      uint64_t v9 = v0[8];
      uint64_t v8 = v0[9];
      sub_24E2B934C(v4, v8);
      sub_24E2B934C(v8, v9);
      sub_24E2B934C(v9, v7);
      type metadata accessor for AnyDisplayRepresentationImageCache();
      uint64_t v10 = swift_allocObject();
      swift_defaultActor_initialize();
      uint64_t v11 = v10 + OBJC_IVAR____TtC10FindMyCore34AnyDisplayRepresentationImageCache_cachedDisplayRepresentationImage;
      uint64_t v12 = sub_24E2F0590();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
      uint64_t v13 = (void *)(v10 + OBJC_IVAR____TtC10FindMyCore34AnyDisplayRepresentationImageCache_imageBuilder);
      *uint64_t v13 = &unk_2698CAF40;
      v13[1] = 0;
      sub_24E2B9478(v9);
      *(void *)(v7 + *(int *)(v20 + 20)) = v10;
      sub_24E2B94D4(v7, v6, (uint64_t (*)(void))type metadata accessor for PersonEntity);
      sub_24E2B9478(v8);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24E2959B8(0, *(void *)(v5 + 16) + 1, 1);
        uint64_t v5 = v22;
      }
      unint64_t v15 = *(void *)(v5 + 16);
      unint64_t v14 = *(void *)(v5 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_24E2959B8(v14 > 1, v15 + 1, 1);
        uint64_t v5 = v22;
      }
      uint64_t v16 = v0[13];
      *(void *)(v5 + 16) = v15 + 1;
      sub_24E2B94D4(v16, v5+ ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80))+ *(void *)(v21 + 72) * v15, (uint64_t (*)(void))type metadata accessor for PersonEntity);
      v4 += v19;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = MEMORY[0x263F8EE78];
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(uint64_t))v0[1];
  return v17(v5);
}

uint64_t PersonEntityQuery.entities(matching:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[7] = a3;
  v4[8] = v3;
  v4[5] = a1;
  v4[6] = a2;
  uint64_t v5 = sub_24E2F0D70();
  v4[9] = v5;
  v4[10] = *(void *)(v5 - 8);
  v4[11] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E2B7D30, 0, 0);
}

uint64_t sub_24E2B7D30()
{
  uint64_t v21 = v0;
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  uint64_t v4 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v5 = type metadata accessor for PersonEntityQuery();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4 + *(int *)(v5 + 20), v3);
  swift_bridgeObjectRetain_n();
  uint64_t v6 = sub_24E2F0D50();
  os_log_type_t v7 = sub_24E2F11E0();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = v0[10];
    uint64_t v18 = v0[9];
    uint64_t v19 = v0[11];
    unint64_t v9 = v0[7];
    uint64_t v17 = v0[6];
    uint64_t v10 = swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v20 = v11;
    *(_DWORD *)uint64_t v10 = 136315394;
    v0[3] = sub_24E29CA04(0xD000000000000013, 0x800000024E2F6AD0, &v20);
    sub_24E2F1220();
    *(_WORD *)(v10 + 12) = 2082;
    swift_bridgeObjectRetain();
    v0[4] = sub_24E29CA04(v17, v9, &v20);
    sub_24E2F1220();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24E292000, v6, v7, "%s - string: %{public}s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x253338AC0](v11, -1, -1);
    MEMORY[0x253338AC0](v10, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v19, v18);
  }
  else
  {
    uint64_t v13 = v0[10];
    uint64_t v12 = v0[11];
    uint64_t v14 = v0[9];
    swift_bridgeObjectRelease_n();

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  v0[2] = 0;
  unint64_t v15 = (void *)swift_task_alloc();
  v0[12] = (uint64_t)v15;
  *unint64_t v15 = v0;
  v15[1] = sub_24E2B7FC0;
  return sub_24E2B6C64(v0 + 2);
}

uint64_t sub_24E2B7FC0(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 104) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_24E2A6584;
  }
  else
  {
    *(void *)(v4 + 112) = a1;
    uint64_t v5 = sub_24E2B80E8;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_24E2B80E8()
{
  uint64_t v11 = v0;
  uint64_t v2 = v0[6];
  uint64_t v1 = v0[7];
  uint64_t v3 = v0[5];
  uint64_t v4 = sub_24E2AE5C4((uint64_t)&unk_27003ACD8);
  v7[0] = MEMORY[0x263F8EE78];
  v7[1] = MEMORY[0x263F8EE78];
  v7[2] = MEMORY[0x263F8EE78];
  v7[3] = v4;
  char v8 = 0;
  uint64_t v9 = v2;
  uint64_t v10 = v1;
  swift_bridgeObjectRetain();
  sub_24E2A8180();
  swift_bridgeObjectRelease();
  sub_24E2B81D0(v7, v3);
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_24E2B81D0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v55 = a2;
  uint64_t v3 = type metadata accessor for Person();
  uint64_t v57 = *(void *)(v3 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  char v8 = (char *)v51 - v7;
  uint64_t v9 = type metadata accessor for PersonEntity();
  uint64_t v68 = *(void *)(v9 - 8);
  uint64_t v69 = v9;
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v51 - v13;
  uint64_t v15 = sub_24E2F07D0();
  uint64_t v53 = *(void *)(v15 - 8);
  uint64_t v54 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CA5B0);
  uint64_t v18 = *(void *)(v62 - 8);
  MEMORY[0x270FA5388](v62);
  uint64_t v67 = (char *)v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAC60);
  MEMORY[0x270FA5388](v20 - 8);
  unint64_t v52 = (char *)v51 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = *a1;
  uint64_t v22 = a1[1];
  uint64_t v24 = a1[3];
  uint64_t v63 = a1[2];
  int64_t v25 = *(void *)(v22 + 16);
  if (v25)
  {
    v51[0] = a1[6];
    v51[1] = v24;
    uint64_t v71 = MEMORY[0x263F8EE78];
    int64_t v26 = v25;
    swift_bridgeObjectRetain();
    int64_t v60 = v26;
    sub_24E2959F4(0, v26, 0);
    uint64_t v27 = 0;
    v51[2] = v22;
    uint64_t v58 = v18 + 32;
    uint64_t v59 = v22 + 32;
    uint64_t v65 = v17;
    uint64_t v56 = v23;
    uint64_t v61 = v18;
    do
    {
      uint64_t v66 = v27;
      uint64_t v28 = v59 + 16 * v27;
      uint64_t v29 = *(void *)(v28 + 8);
      LOBYTE(v70) = *(unsigned char *)v28;
      swift_bridgeObjectRetain();
      Person.Section.title.getter();
      sub_24E2F07A0();
      int64_t v30 = *(void *)(v29 + 16);
      if (v30)
      {
        uint64_t v70 = MEMORY[0x263F8EE78];
        swift_bridgeObjectRetain();
        sub_24E2959B8(0, v30, 0);
        uint64_t v31 = *(unsigned __int8 *)(v57 + 80);
        uint64_t v64 = v29;
        uint64_t v32 = v29 + ((v31 + 32) & ~v31);
        uint64_t v33 = *(void *)(v57 + 72);
        do
        {
          sub_24E2B934C(v32, (uint64_t)v8);
          sub_24E2B934C((uint64_t)v8, (uint64_t)v6);
          sub_24E2B934C((uint64_t)v6, (uint64_t)v12);
          type metadata accessor for AnyDisplayRepresentationImageCache();
          uint64_t v34 = swift_allocObject();
          swift_defaultActor_initialize();
          uint64_t v35 = v34 + OBJC_IVAR____TtC10FindMyCore34AnyDisplayRepresentationImageCache_cachedDisplayRepresentationImage;
          uint64_t v36 = sub_24E2F0590();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v35, 1, 1, v36);
          uint64_t v37 = (void *)(v34 + OBJC_IVAR____TtC10FindMyCore34AnyDisplayRepresentationImageCache_imageBuilder);
          *uint64_t v37 = &unk_2698CAF40;
          v37[1] = 0;
          sub_24E2B9478((uint64_t)v6);
          *(void *)&v12[*(int *)(v69 + 20)] = v34;
          sub_24E2B94D4((uint64_t)v12, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for PersonEntity);
          sub_24E2B9478((uint64_t)v8);
          uint64_t v38 = v70;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_24E2959B8(0, *(void *)(v38 + 16) + 1, 1);
            uint64_t v38 = v70;
          }
          unint64_t v40 = *(void *)(v38 + 16);
          unint64_t v39 = *(void *)(v38 + 24);
          if (v40 >= v39 >> 1)
          {
            sub_24E2959B8(v39 > 1, v40 + 1, 1);
            uint64_t v38 = v70;
          }
          *(void *)(v38 + 16) = v40 + 1;
          sub_24E2B94D4((uint64_t)v14, v38+ ((*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80))+ *(void *)(v68 + 72) * v40, (uint64_t (*)(void))type metadata accessor for PersonEntity);
          v32 += v33;
          --v30;
        }
        while (v30);
        swift_bridgeObjectRelease();
        uint64_t v23 = v56;
      }
      sub_24E2B98CC(&qword_2698CAF80, (void (*)(uint64_t))type metadata accessor for PersonEntity);
      sub_24E2F0570();
      swift_bridgeObjectRelease();
      uint64_t v41 = v71;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v43 = v61;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_24E2959F4(0, *(void *)(v41 + 16) + 1, 1);
        uint64_t v41 = v71;
      }
      uint64_t v44 = v23;
      unint64_t v46 = *(void *)(v41 + 16);
      unint64_t v45 = *(void *)(v41 + 24);
      if (v46 >= v45 >> 1)
      {
        sub_24E2959F4(v45 > 1, v46 + 1, 1);
        uint64_t v41 = v71;
      }
      uint64_t v47 = v67;
      uint64_t v48 = v66 + 1;
      *(void *)(v41 + 16) = v46 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v43 + 32))(v41+ ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80))+ *(void *)(v43 + 72) * v46, v47, v62);
      BOOL v49 = v48 == v60;
      uint64_t v27 = v48;
      uint64_t v23 = v44;
    }
    while (!v49);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v53 + 56))(v52, 1, 1, v54);
  sub_24E2B98CC(&qword_2698CAF80, (void (*)(uint64_t))type metadata accessor for PersonEntity);
  return sub_24E2F0580();
}

uint64_t PersonEntityQuery.allEntities()(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  uint64_t v3 = sub_24E2F0D70();
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E2B89CC, 0, 0);
}

uint64_t sub_24E2B89CC()
{
  uint64_t v19 = v0;
  uint64_t v2 = v0[7];
  uint64_t v1 = v0[8];
  uint64_t v4 = v0[5];
  uint64_t v3 = v0[6];
  uint64_t v5 = type metadata accessor for PersonEntityQuery();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4 + *(int *)(v5 + 20), v3);
  uint64_t v6 = sub_24E2F0D50();
  os_log_type_t v7 = sub_24E2F11E0();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v9 = v0[7];
    uint64_t v8 = v0[8];
    uint64_t v10 = v0[6];
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v18 = v12;
    *(_DWORD *)uint64_t v11 = 136315138;
    v0[3] = sub_24E29CA04(0x7469746E456C6C61, 0xED00002928736569, &v18);
    sub_24E2F1220();
    _os_log_impl(&dword_24E292000, v6, v7, "%s", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x253338AC0](v12, -1, -1);
    MEMORY[0x253338AC0](v11, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  else
  {
    uint64_t v14 = v0[7];
    uint64_t v13 = v0[8];
    uint64_t v15 = v0[6];

    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  }
  v0[2] = 0;
  uint64_t v16 = (void *)swift_task_alloc();
  v0[9] = (uint64_t)v16;
  *uint64_t v16 = v0;
  v16[1] = sub_24E2B8C00;
  return sub_24E2B6C64(v0 + 2);
}

uint64_t sub_24E2B8C00(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 80) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_24E2A72A8;
  }
  else
  {
    *(void *)(v4 + 88) = a1;
    uint64_t v5 = sub_24E2B8D28;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_24E2B8D28()
{
  uint64_t v9 = v0;
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = sub_24E2AE5C4((uint64_t)&unk_27003AD00);
  v5[0] = MEMORY[0x263F8EE78];
  v5[1] = MEMORY[0x263F8EE78];
  v5[2] = MEMORY[0x263F8EE78];
  v5[3] = v2;
  char v6 = 0;
  uint64_t v7 = 0;
  unint64_t v8 = 0xE000000000000000;
  sub_24E2A8180();
  swift_bridgeObjectRelease();
  sub_24E2B81D0(v5, v1);
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_24E2B8E08(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_24E29D9A0;
  return PersonEntityQuery.allEntities()(a1);
}

uint64_t sub_24E2B8EA0@<X0>(void *a1@<X8>)
{
  uint64_t v2 = sub_24E2F0D70();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  uint64_t v5 = MEMORY[0x270FA5388](v2);
  char v6 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  unint64_t v8 = (char *)&v13 - v7;
  sub_24E2F0D60();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
  v9(v6, v8, v2);
  unint64_t v10 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v11 = swift_allocObject();
  v9((char *)(v11 + v10), v6, v2);
  uint64_t result = sub_24E2F0D60();
  *a1 = &unk_2698CB060;
  a1[1] = v11;
  return result;
}

uint64_t sub_24E2B9054(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_24E2A7600;
  return PersonEntityQuery.entities(for:)(a1);
}

uint64_t sub_24E2B90E8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  uint64_t v6 = sub_24E2B98CC(&qword_2698CB058, (void (*)(uint64_t))type metadata accessor for PersonEntityQuery);
  *uint64_t v5 = v2;
  v5[1] = sub_24E29DC58;
  return MEMORY[0x270EE1978](a1, a2, v6);
}

uint64_t sub_24E2B91CC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  uint64_t v6 = sub_24E2B98CC(&qword_2698CAF60, (void (*)(uint64_t))type metadata accessor for PersonEntityQuery);
  *uint64_t v5 = v2;
  v5[1] = sub_24E29DC58;
  return MEMORY[0x270EE0E40](a1, a2, v6);
}

uint64_t sub_24E2B92B0(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_24E29D9A0;
  return PersonEntityQuery.defaultResult()(a1);
}

uint64_t sub_24E2B934C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Person();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24E2B93B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAFD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24E2B9418(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAFD0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24E2B9478(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Person();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24E2B94D4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_24E2B953C()
{
  return sub_24E2B98CC(&qword_2698CAF60, (void (*)(uint64_t))type metadata accessor for PersonEntityQuery);
}

uint64_t sub_24E2B9584()
{
  return sub_24E2B98CC(&qword_2698CB000, (void (*)(uint64_t))type metadata accessor for PersonEntityQuery);
}

uint64_t sub_24E2B95CC()
{
  return sub_24E2B98CC(qword_2698CB008, (void (*)(uint64_t))type metadata accessor for PersonEntityQuery);
}

uint64_t sub_24E2B9614()
{
  return sub_24E2B98CC(&qword_2698CAFB8, (void (*)(uint64_t))type metadata accessor for PersonEntity);
}

uint64_t sub_24E2B965C()
{
  return sub_24E2B98CC(&qword_2698CB020, (void (*)(uint64_t))type metadata accessor for PersonEntityQuery);
}

uint64_t sub_24E2B96A4()
{
  return sub_24E2B98CC(&qword_2698CAF80, (void (*)(uint64_t))type metadata accessor for PersonEntity);
}

unint64_t sub_24E2B96F0()
{
  unint64_t result = qword_2698CB028;
  if (!qword_2698CB028)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_2698CB030);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB028);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PersonEntityQuery(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24E2B9760);
}

uint64_t sub_24E2B9760(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_24E2F0D70();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PersonEntityQuery(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24E2B9824);
}

void *sub_24E2B9824(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_24E2F0D70();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_24E2B98CC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t PersonEntityQuery.Dependencies.fetchPeopleWithOptions.getter()
{
  uint64_t v1 = *v0;
  swift_retain();
  return v1;
}

uint64_t PersonEntityQuery.Dependencies.init(fetchPeopleWithOptions:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

ValueMetadata *type metadata accessor for PersonEntityQuery.Dependencies()
{
  return &type metadata for PersonEntityQuery.Dependencies;
}

ValueMetadata *type metadata accessor for PersonEntityQuery.Dependencies.PeopleFetcherOptions()
{
  return &type metadata for PersonEntityQuery.Dependencies.PeopleFetcherOptions;
}

uint64_t static PersonEntityQuery.Dependencies.live()@<X0>(void *a1@<X8>)
{
  uint64_t v2 = sub_24E2F0D70();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  uint64_t v5 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v13 - v7;
  sub_24E2F0D60();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
  v9(v6, v8, v2);
  unint64_t v10 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v11 = swift_allocObject();
  uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v9)(v11 + v10, v6, v2);
  *a1 = &unk_2698CAFC0;
  a1[1] = v11;
  return result;
}

uint64_t sub_24E2B9AEC(uint64_t *a1, uint64_t a2)
{
  v2[5] = a2;
  uint64_t v4 = sub_24E2F0D70();
  v2[6] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v2[7] = v5;
  v2[8] = *(void *)(v5 + 64);
  v2[9] = swift_task_alloc();
  uint64_t v6 = sub_24E2F0A00();
  v2[10] = v6;
  v2[11] = *(void *)(v6 - 8);
  v2[12] = swift_task_alloc();
  sub_24E2F0A20();
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = *a1;
  v2[13] = v7;
  v2[14] = v8;
  return MEMORY[0x270FA2498](sub_24E2B9C44, 0, 0);
}

uint64_t sub_24E2B9C44()
{
  (*(void (**)(void, void, void))(v0[11] + 104))(v0[12], *MEMORY[0x263F3CCF8], v0[10]);
  sub_24E2F0A30();
  sub_24E2F0BE0();
  swift_allocObject();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[15] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_24E2B9D28;
  uint64_t v2 = v0[13];
  return MEMORY[0x270F29770](v2);
}

uint64_t sub_24E2B9D28(uint64_t a1)
{
  *(void *)(*(void *)v1 + 128) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E2B9E28, 0, 0);
}

uint64_t sub_24E2B9E28()
{
  uint64_t v1 = v0[16];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[7];
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 16))(v2, v0[5], v3);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = swift_allocObject();
  v0[17] = v6;
  *(void *)(v6 + 16) = v1;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v6 + v5, v2, v3);
  swift_retain();
  uint64_t v7 = (void *)swift_task_alloc();
  v0[18] = v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CADE0);
  *uint64_t v7 = v0;
  v7[1] = sub_24E2B9F94;
  return MEMORY[0x270F28C80](v0 + 2, 0xD02AB486CEDC0000, 0, &unk_2698CB078, v6, v8);
}

uint64_t sub_24E2B9F94()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_24E2BA32C;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_24E2BA0B0;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24E2BA0B0()
{
  uint64_t v16 = v0;
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[2];
  if (v1)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_24E2BF25C(v2, v1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = v3;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v4 = sub_24E2F0D50();
  os_log_type_t v5 = sub_24E2F11C0();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    v15[0] = v14;
    *(_DWORD *)uint64_t v6 = 136315394;
    v0[3] = sub_24E29CA04(0x29286576696CLL, 0xE600000000000000, v15);
    sub_24E2F1220();
    *(_WORD *)(v6 + 12) = 2080;
    uint64_t v7 = type metadata accessor for Person();
    uint64_t v8 = swift_bridgeObjectRetain();
    uint64_t v9 = MEMORY[0x253337FA0](v8, v7);
    unint64_t v11 = v10;
    swift_bridgeObjectRelease();
    v0[4] = sub_24E29CA04(v9, v11, v15);
    sub_24E2F1220();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24E292000, v4, v5, "%s - result %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x253338AC0](v14, -1, -1);
    MEMORY[0x253338AC0](v6, -1, -1);
    swift_release();
  }
  else
  {
    swift_release();

    swift_bridgeObjectRelease_n();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(uint64_t))v0[1];
  return v12(v2);
}

uint64_t sub_24E2BA32C()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24E2BA3C0()
{
  uint64_t v1 = sub_24E2F0D70();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_24E2BA450(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v5;
  *uint64_t v5 = v3;
  v5[1] = sub_24E2BA4F0;
  return sub_24E2BA814(a3);
}

uint64_t sub_24E2BA4F0(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 32) = a1;
    return MEMORY[0x270FA2498](sub_24E2BA63C, 0, 0);
  }
}

uint64_t sub_24E2BA63C()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24E2BA660()
{
  uint64_t v1 = sub_24E2F0D70();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_24E2BA72C(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_24E2F0D70() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_24E29D9A0;
  return sub_24E2BA450(a1, v5, v6);
}

uint64_t sub_24E2BA814(uint64_t a1)
{
  v2[16] = a1;
  v2[17] = v1;
  uint64_t v3 = type metadata accessor for Person();
  v2[18] = v3;
  v2[19] = *(void *)(v3 - 8);
  v2[20] = swift_task_alloc();
  v2[21] = swift_task_alloc();
  v2[22] = type metadata accessor for Person.Relationship.Follower(0);
  v2[23] = swift_task_alloc();
  v2[24] = swift_task_alloc();
  v2[25] = type metadata accessor for Person.Relationship.Following(0);
  v2[26] = swift_task_alloc();
  v2[27] = swift_task_alloc();
  uint64_t v4 = sub_24E2F09F0();
  v2[28] = v4;
  v2[29] = *(void *)(v4 - 8);
  v2[30] = swift_task_alloc();
  v2[31] = swift_task_alloc();
  uint64_t v5 = sub_24E2F0B70();
  v2[32] = v5;
  v2[33] = *(void *)(v5 - 8);
  v2[34] = swift_task_alloc();
  v2[35] = swift_task_alloc();
  v2[36] = swift_task_alloc();
  uint64_t v6 = sub_24E2F0B00();
  v2[37] = v6;
  v2[38] = *(void *)(v6 - 8);
  v2[39] = swift_task_alloc();
  v2[40] = swift_task_alloc();
  v2[41] = swift_task_alloc();
  v2[42] = swift_task_alloc();
  v2[43] = swift_task_alloc();
  v2[44] = swift_task_alloc();
  v2[45] = swift_task_alloc();
  v2[46] = swift_task_alloc();
  uint64_t v7 = (void *)swift_task_alloc();
  v2[47] = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_24E2BAB2C;
  return MEMORY[0x270F29628]();
}

uint64_t sub_24E2BAB2C(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[48] = a1;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v3[1];
    return v4();
  }
  else
  {
    uint64_t v6 = (void *)swift_task_alloc();
    v3[49] = v6;
    *uint64_t v6 = v3;
    v6[1] = sub_24E2BADA8;
    return MEMORY[0x270F29718]();
  }
}

uint64_t sub_24E2BADA8(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[50] = a1;
  v3[51] = v1;
  swift_task_dealloc();
  if (v1)
  {
    return MEMORY[0x270FA2498](sub_24E2BE270, 0, 0);
  }
  else
  {
    uint64_t v4 = (void *)swift_task_alloc();
    v3[52] = v4;
    *uint64_t v4 = v3;
    v4[1] = sub_24E2BAF18;
    return MEMORY[0x270F29630]();
  }
}

uint64_t sub_24E2BAF18(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[53] = a1;
  v3[54] = v1;
  swift_task_dealloc();
  if (v1)
  {
    return MEMORY[0x270FA2498](sub_24E2BE3DC, 0, 0);
  }
  else
  {
    uint64_t v4 = (void *)swift_task_alloc();
    v3[55] = v4;
    *uint64_t v4 = v3;
    v4[1] = sub_24E2BB088;
    return MEMORY[0x270F29738]();
  }
}

uint64_t sub_24E2BB088(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 448) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_24E2BE554;
  }
  else
  {
    *(void *)(v4 + 456) = a1;
    uint64_t v5 = sub_24E2BB1B0;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

void sub_24E2BB1B0()
{
  uint64_t v56 = v0;
  uint64_t v1 = MEMORY[0x263F8EE78];
  *(void *)(v0 + 80) = MEMORY[0x263F8EE78];
  uint64_t v2 = *(void *)(v0 + 456);
  uint64_t v3 = *(void *)(v0 + 424);
  uint64_t v4 = *(void *)(v0 + 400);
  sub_24E2E3BF4(*(void *)(v0 + 384));
  sub_24E2E3BF4(v4);
  sub_24E2E3BF4(v3);
  sub_24E2E3BF4(v2);
  uint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v6 = sub_24E2BF594(v5);
  *(void *)(v0 + 464) = v6;
  swift_bridgeObjectRelease();
  *(void *)(v0 + 472) = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFEA58]), sel_init);
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFEA20]), sel_init);
  *(void *)(v0 + 480) = v7;
  objc_msgSend(v7, sel_setStyle_, 1001);
  int64_t v8 = 0;
  char v9 = *(unsigned char *)(v6 + 32);
  *(unsigned char *)(v0 + 644) = v9;
  uint64_t v10 = 1 << v9;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & *(void *)(v6 + 64);
  *(_DWORD *)(v0 + 624) = *MEMORY[0x263F3CCE0];
  *(_DWORD *)(v0 + 628) = *MEMORY[0x263F3CCD8];
  uint64_t v13 = (_DWORD *)MEMORY[0x263F3CCC8];
  *(_DWORD *)(v0 + 632) = *MEMORY[0x263F3CCD0];
  *(_DWORD *)(v0 + 636) = *v13;
  *(void *)(v0 + 488) = v1;
  while (v12)
  {
    unint64_t v15 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    unint64_t v16 = v15 | (v8 << 6);
    uint64_t v17 = *(void *)(v0 + 464);
LABEL_22:
    *(void *)(v0 + 496) = v8;
    *(void *)(v0 + 504) = v12;
    uint64_t v23 = (void *)(*(void *)(v17 + 48) + 16 * v16);
    uint64_t v24 = v23[1];
    *(void *)(v0 + 512) = v24;
    uint64_t v25 = *(void *)(*(void *)(v17 + 56) + 8 * v16);
    *(void *)(v0 + 520) = v25;
    if (v24)
    {
      *(void *)(v0 + 528) = *v23;
      uint64_t v14 = *(void *)(v25 + 16);
      *(void *)(v0 + 536) = v14;
      if (v14)
      {
        uint64_t v39 = *(void *)(v0 + 368);
        uint64_t v40 = *(void *)(v0 + 296);
        uint64_t v41 = *(void *)(v0 + 304);
        uint64_t v42 = *(void *)(v0 + 288);
        uint64_t v43 = *(void *)(v0 + 256);
        uint64_t v44 = *(void *)(v0 + 264);
        unint64_t v45 = *(void (**)(uint64_t, unint64_t, uint64_t))(v41 + 16);
        v41 += 16;
        int v46 = *(_DWORD *)(v41 + 64);
        *(_DWORD *)(v0 + 640) = v46;
        *(void *)(v0 + 544) = v45;
        *(void *)(v0 + 552) = v41 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
        v45(v39, v25 + ((v46 + 32) & ~(unint64_t)v46), v40);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_24E2F0AF0();
        Handle.fmuiPersonAssociatedHandles.getter(v0 + 48);
        uint64_t v47 = *(void (**)(uint64_t, uint64_t))(v44 + 8);
        *(void *)(v0 + 560) = v47;
        *(void *)(v0 + 568) = (v44 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
        v47(v42, v43);
        uint64_t v48 = *(void *)(v0 + 48);
        uint64_t v49 = *(void *)(v0 + 56);
        *(void *)(v0 + 576) = v48;
        *(void *)(v0 + 584) = v49;
        char v50 = *(unsigned char *)(v0 + 64);
        *(unsigned char *)(v0 + 645) = v50;
        uint64_t v51 = *(void *)(v0 + 72);
        *(void *)(v0 + 592) = v51;
        *(void *)(v0 + 16) = v48;
        *(void *)(v0 + 24) = v49;
        *(unsigned char *)(v0 + 32) = v50;
        *(void *)(v0 + 40) = v51;
        uint64_t v54 = (void (*)(uint64_t, uint64_t))((char *)&dword_2698CB738 + dword_2698CB738);
        unint64_t v52 = (void *)swift_task_alloc();
        *(void *)(v0 + 600) = v52;
        *unint64_t v52 = v0;
        v52[1] = sub_24E2BB820;
        uint64_t v53 = *(void *)(v0 + 472);
        v54(v0 + 16, v53);
        return;
      }
    }
    else
    {
      swift_bridgeObjectRetain_n();
      int64_t v26 = sub_24E2F0D50();
      os_log_type_t v27 = sub_24E2F11D0();
      if (os_log_type_enabled(v26, v27))
      {
        uint64_t v28 = *(void *)(v0 + 296);
        uint64_t v29 = swift_slowAlloc();
        uint64_t v30 = swift_slowAlloc();
        v55[0] = v30;
        *(_DWORD *)uint64_t v29 = 136315394;
        *(void *)(v29 + 4) = sub_24E29CA04(0xD00000000000001BLL, 0x800000024E2F6CB0, v55);
        *(_WORD *)(v29 + 12) = 2080;
        uint64_t v31 = swift_bridgeObjectRetain();
        uint64_t v32 = MEMORY[0x253337FA0](v31, v28);
        unint64_t v34 = v33;
        swift_bridgeObjectRelease();
        *(void *)(v29 + 14) = sub_24E29CA04(v32, v34, v55);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_24E292000, v26, v27, "%s - compactMap: Found NIL key with values: %s", (uint8_t *)v29, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x253338AC0](v30, -1, -1);
        MEMORY[0x253338AC0](v29, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
    }
  }
  int64_t v18 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
LABEL_33:
    __break(1u);
    return;
  }
  int64_t v19 = (unint64_t)((1 << *(unsigned char *)(v0 + 644)) + 63) >> 6;
  uint64_t v17 = *(void *)(v0 + 464);
  if (v18 >= v19) {
    goto LABEL_26;
  }
  uint64_t v20 = v17 + 64;
  unint64_t v21 = *(void *)(v17 + 64 + 8 * v18);
  ++v8;
  if (v21) {
    goto LABEL_21;
  }
  int64_t v8 = v18 + 1;
  if (v18 + 1 >= v19) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v20 + 8 * v8);
  if (v21) {
    goto LABEL_21;
  }
  int64_t v8 = v18 + 2;
  if (v18 + 2 >= v19) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v20 + 8 * v8);
  if (v21)
  {
LABEL_21:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v16 = __clz(__rbit64(v21)) + (v8 << 6);
    goto LABEL_22;
  }
  int64_t v22 = v18 + 3;
  if (v22 < v19)
  {
    unint64_t v21 = *(void *)(v20 + 8 * v22);
    if (!v21)
    {
      while (1)
      {
        int64_t v8 = v22 + 1;
        if (__OFADD__(v22, 1)) {
          goto LABEL_33;
        }
        if (v8 >= v19) {
          goto LABEL_26;
        }
        unint64_t v21 = *(void *)(v20 + 8 * v8);
        ++v22;
        if (v21) {
          goto LABEL_21;
        }
      }
    }
    int64_t v8 = v22;
    goto LABEL_21;
  }
LABEL_26:
  uint64_t v36 = *(void **)(v0 + 472);
  uint64_t v35 = *(void **)(v0 + 480);
  swift_release();

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v37 = *(void (**)(uint64_t))(v0 + 8);
  uint64_t v38 = MEMORY[0x263F8EE78];
  v37(v38);
}

uint64_t sub_24E2BB820(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 608) = a1;
  *(void *)(v3 + 616) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_24E2BCD70;
  }
  else {
    uint64_t v4 = sub_24E2BB938;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_24E2BB938()
{
  v218 = v0;
  uint64_t v1 = (void *)v0[76];
  if (v1)
  {
    uint64_t v2 = (void *)v0[60];
    id v3 = v1;
    id v4 = objc_msgSend(v2, sel_stringFromContact_, v3);
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v191 = sub_24E2F0EC0();
      uint64_t v7 = v6;
    }
    else
    {

      uint64_t v191 = 0;
      uint64_t v7 = 0;
    }
    uint64_t v212 = v7;
    v187 = (void *)v0[76];
  }
  else
  {
    uint64_t v191 = 0;
    uint64_t v212 = 0;
    v187 = 0;
  }
  int64_t v8 = (void (*)(uint64_t, uint64_t))v0[70];
  char v9 = (void (*)(uint64_t, uint64_t, uint64_t))v0[68];
  uint64_t v11 = v0[45];
  uint64_t v10 = v0[46];
  uint64_t v12 = v0[37];
  uint64_t v13 = v0[35];
  uint64_t v14 = v0[32];
  sub_24E2F0AF0();
  uint64_t v210 = sub_24E2F0B20();
  uint64_t v16 = v15;
  v8(v13, v14);
  v9(v11, v10, v12);
  uint64_t v190 = v16;
  if (v16)
  {
    uint64_t v17 = v0[45];
    uint64_t v19 = v0[37];
    uint64_t v18 = v0[38];
    swift_bridgeObjectRelease();
    uint64_t v215 = *(void *)(v18 + 8);
    ((void (*)(uint64_t, uint64_t))v215)(v17, v19);
    uint64_t v191 = v210;
    uint64_t v20 = v0;
  }
  else
  {
    ((void (*)(void, void, void))v0[68])(v0[44], v0[45], v0[37]);
    uint64_t v20 = v0;
    if (v212)
    {
      uint64_t v21 = v0[45];
      uint64_t v22 = v0[37];
      uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v0[38] + 8);
      v23(v0[44], v22);
      uint64_t v215 = (uint64_t)v23;
      v23(v21, v22);
      uint64_t v190 = v212;
    }
    else
    {
      uint64_t v24 = (void (*)(uint64_t, uint64_t))v0[70];
      uint64_t v26 = v0[44];
      uint64_t v25 = v0[45];
      uint64_t v27 = v0[37];
      uint64_t v28 = v0[38];
      uint64_t v29 = v0[36];
      uint64_t v30 = v0[32];
      sub_24E2F0AF0();
      uint64_t v31 = sub_24E2F0B10();
      uint64_t v190 = v32;
      uint64_t v191 = v31;
      v24(v29, v30);
      unint64_t v33 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
      v33(v26, v27);
      uint64_t v215 = (uint64_t)v33;
      v33(v25, v27);
    }
  }
  uint64_t v213 = *(void *)(v20[38] + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v34 = 0;
  uint64_t v35 = 0;
  uint64_t v36 = (void *)MEMORY[0x263F8EE78];
  do
  {
    uint64_t v37 = (void (*)(uint64_t, uint64_t))v20[70];
    uint64_t v38 = v20[34];
    uint64_t v39 = v20[32];
    ((void (*)(void, unint64_t, void))v20[68])(v20[43], v20[65] + v34 + ((*((unsigned __int8 *)v20 + 640) + 32) & ~(unint64_t)*((unsigned __int8 *)v20 + 640)), v20[37]);
    sub_24E2F0AF0();
    uint64_t v40 = sub_24E2F0B30();
    unint64_t v42 = v41;
    v37(v38, v39);
    uint64_t v43 = v20[43];
    uint64_t v44 = v20[37];
    if (v42)
    {
      uint64_t v45 = sub_24E2BE6D8(v40, v42);
      char v47 = v46;
      ((void (*)(uint64_t, uint64_t))v215)(v43, v44);
      if ((v47 & 1) == 0)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v36 = sub_24E2E4BBC(0, v36[2] + 1, 1, v36);
        }
        unint64_t v49 = v36[2];
        unint64_t v48 = v36[3];
        if (v49 >= v48 >> 1) {
          uint64_t v36 = sub_24E2E4BBC((void *)(v48 > 1), v49 + 1, 1, v36);
        }
        v36[2] = v49 + 1;
        v36[v49 + 4] = v45;
      }
    }
    else
    {
      ((void (*)(void, void))v215)(v20[43], v20[37]);
    }
    ++v35;
    v34 += v213;
  }
  while (v35 != v20[67]);
  swift_bridgeObjectRelease();
  unint64_t v50 = v36[2];
  if (v50)
  {
    int64_t v51 = v36[4];
    unint64_t v52 = v50 - 1;
    if (v50 != 1)
    {
      if (v50 < 5)
      {
        unint64_t v53 = 1;
        goto LABEL_30;
      }
      unint64_t v53 = v52 & 0xFFFFFFFFFFFFFFFCLL | 1;
      int64x2_t v54 = vdupq_n_s64(v51);
      uint64_t v55 = (int64x2_t *)(v36 + 7);
      unint64_t v56 = v52 & 0xFFFFFFFFFFFFFFFCLL;
      int64x2_t v57 = v54;
      do
      {
        int64x2_t v54 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v54, v55[-1]), (int8x16_t)v55[-1], (int8x16_t)v54);
        int64x2_t v57 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v57, *v55), *(int8x16_t *)v55, (int8x16_t)v57);
        v55 += 2;
        v56 -= 4;
      }
      while (v56);
      int8x16_t v58 = vbslq_s8((int8x16_t)vcgtq_s64(v57, v54), (int8x16_t)v54, (int8x16_t)v57);
      uint64_t v59 = vextq_s8(v58, v58, 8uLL).u64[0];
      int64_t v51 = (int64_t)vbsl_s8((int8x8_t)vcgtd_s64(v59, v58.i64[0]), *(int8x8_t *)v58.i8, (int8x8_t)v59);
      if (v52 != (v52 & 0xFFFFFFFFFFFFFFFCLL))
      {
LABEL_30:
        unint64_t v60 = v50 - v53;
        uint64_t v61 = &v36[v53 + 4];
        do
        {
          int64_t v63 = *v61++;
          int64_t v62 = v63;
          if (v63 < v51) {
            int64_t v51 = v62;
          }
          --v60;
        }
        while (v60);
      }
    }
  }
  else
  {
    int64_t v51 = 0;
  }
  int64_t v188 = v51;
  uint64_t v189 = v36[2];
  v211 = v20;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v65 = 0;
  uint64_t v66 = 0;
  while (!__OFADD__(v65, 1))
  {
    uint64_t v196 = v65 + 1;
    uint64_t v194 = v211[67];
    uint64_t v67 = *((unsigned int *)v211 + 156);
    uint64_t v68 = v211[42];
    uint64_t v209 = v211[37];
    uint64_t v70 = v211[30];
    uint64_t v69 = v211[31];
    uint64_t v71 = v211[28];
    uint64_t v72 = v211[29];
    ((void (*)(uint64_t, unint64_t))v211[68])(v68, (unint64_t)v66+ v211[65]+ ((*((unsigned __int8 *)v211 + 640) + 32) & ~(unint64_t)*((unsigned __int8 *)v211 + 640)));
    sub_24E2F0AE0();
    v205 = *(void (**)(uint64_t, uint64_t, uint64_t))(v72 + 104);
    v205(v70, v67, v71);
    LOBYTE(v67) = sub_24E2F09E0();
    uint64_t v73 = *(void (**)(uint64_t, uint64_t))(v72 + 8);
    v73(v70, v71);
    v202 = v73;
    v73(v69, v71);
    ((void (*)(uint64_t, uint64_t))v215)(v68, v209);
    char v193 = v67;
    if ((v67 & 1) == 0)
    {
      uint64_t v66 = (void *)((char *)v66 + v213);
      ++v65;
      if (v196 != v194) {
        continue;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v74 = 0;
    uint64_t v66 = 0;
    do
    {
      uint64_t v75 = v74 + 1;
      if (__OFADD__(v74, 1)) {
        goto LABEL_94;
      }
      uint64_t v76 = v211[67];
      uint64_t v77 = *((unsigned int *)v211 + 157);
      uint64_t v78 = v211[41];
      uint64_t v197 = v211[37];
      uint64_t v80 = v211[30];
      uint64_t v79 = v211[31];
      uint64_t v81 = v211[28];
      ((void (*)(uint64_t, unint64_t))v211[68])(v78, (unint64_t)v66+ v211[65]+ ((*((unsigned __int8 *)v211 + 640) + 32) & ~(unint64_t)*((unsigned __int8 *)v211 + 640)));
      sub_24E2F0AE0();
      v205(v80, v77, v81);
      LOBYTE(v77) = sub_24E2F09E0();
      v202(v80, v81);
      v202(v79, v81);
      ((void (*)(uint64_t, uint64_t))v215)(v78, v197);
      char v195 = v77;
      if (v77) {
        break;
      }
      uint64_t v66 = (void *)((char *)v66 + v213);
      ++v74;
    }
    while (v75 != v76);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v82 = 0;
    uint64_t v83 = 0;
    do
    {
      uint64_t v84 = v82 + 1;
      if (__OFADD__(v82, 1)) {
        goto LABEL_95;
      }
      uint64_t v85 = v211[67];
      uint64_t v86 = *((unsigned int *)v211 + 158);
      uint64_t v87 = v211[40];
      uint64_t v198 = v211[37];
      uint64_t v89 = v211[30];
      uint64_t v88 = v211[31];
      uint64_t v66 = (void *)v211[28];
      ((void (*)(uint64_t, unint64_t))v211[68])(v87, v211[65]+ v83+ ((*((unsigned __int8 *)v211 + 640) + 32) & ~(unint64_t)*((unsigned __int8 *)v211 + 640)));
      sub_24E2F0AE0();
      v205(v89, v86, (uint64_t)v66);
      LOBYTE(v86) = sub_24E2F09E0();
      v202(v89, (uint64_t)v66);
      v202(v88, (uint64_t)v66);
      ((void (*)(uint64_t, uint64_t))v215)(v87, v198);
      char v192 = v86;
      if (v86) {
        break;
      }
      v83 += v213;
      ++v82;
    }
    while (v84 != v85);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v66 = 0;
    uint64_t v90 = 0;
    do
    {
      uint64_t v91 = (uint64_t)v66 + 1;
      if (__OFADD__(v66, 1)) {
        goto LABEL_96;
      }
      uint64_t v92 = v211[67];
      uint64_t v93 = *((unsigned int *)v211 + 159);
      uint64_t v94 = v211[39];
      uint64_t v199 = v211[37];
      uint64_t v96 = v211[30];
      uint64_t v95 = v211[31];
      uint64_t v97 = v211[28];
      ((void (*)(uint64_t, unint64_t))v211[68])(v94, v211[65]+ v90+ ((*((unsigned __int8 *)v211 + 640) + 32) & ~(unint64_t)*((unsigned __int8 *)v211 + 640)));
      sub_24E2F0AE0();
      v205(v96, v93, v97);
      LOBYTE(v93) = sub_24E2F09E0();
      v202(v96, v97);
      v202(v95, v97);
      ((void (*)(uint64_t, uint64_t))v215)(v94, v199);
      char v98 = v93;
      if (v93) {
        break;
      }
      v90 += v213;
      uint64_t v66 = (void *)((char *)v66 + 1);
    }
    while (v91 != v92);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v99 = sub_24E2F0D50();
    os_log_type_t v100 = sub_24E2F11C0();
    if (os_log_type_enabled(v99, v100))
    {
      uint64_t v200 = v211[66];
      os_log_type_t v214 = v100;
      unint64_t v101 = v211[64];
      uint64_t v203 = v211[37];
      uint64_t v102 = swift_slowAlloc();
      uint64_t v207 = swift_slowAlloc();
      uint64_t v217 = v207;
      *(_DWORD *)uint64_t v102 = 136315650;
      v211[11] = sub_24E29CA04(0xD00000000000001BLL, 0x800000024E2F6CB0, &v217);
      sub_24E2F1220();
      *(_WORD *)(v102 + 12) = 2080;
      swift_bridgeObjectRetain();
      v211[12] = sub_24E29CA04(v200, v101, &v217);
      sub_24E2F1220();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v102 + 22) = 2080;
      uint64_t v103 = swift_bridgeObjectRetain();
      uint64_t v104 = MEMORY[0x253337FA0](v103, v203);
      unint64_t v106 = v105;
      swift_bridgeObjectRelease();
      v211[13] = sub_24E29CA04(v104, v106, &v217);
      sub_24E2F1220();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_24E292000, v99, v214, "%s - compactMap %s - %s", (uint8_t *)v102, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x253338AC0](v207, -1, -1);
      MEMORY[0x253338AC0](v102, -1, -1);

      if ((v193 & 1) == 0)
      {
LABEL_52:
        if (v192)
        {
          uint64_t v107 = v211[26];
          uint64_t v108 = sub_24E2F0930();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v108 - 8) + 56))(v107, 1, 1, v108);
        }
LABEL_56:
        uint64_t v113 = v211[26];
        uint64_t v114 = v211[27];
        swift_storeEnumTagMultiPayload();
        sub_24E2BF99C(v113, v114, type metadata accessor for Person.Relationship.Following);
        if (v195)
        {
          uint64_t v115 = v211[23];
          uint64_t v116 = v115 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
          uint64_t v117 = sub_24E2F0930();
          v118 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v117 - 8) + 56);
          v118(v115, 1, 1, v117);
          v118(v116, 1, 1, v117);
        }
        else if (v98)
        {
          uint64_t v119 = v211[23];
          uint64_t v120 = sub_24E2F0930();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v120 - 8) + 56))(v119, 1, 1, v120);
        }
        uint64_t v206 = v211[74];
        char v201 = *((unsigned char *)v211 + 645);
        uint64_t v121 = v211[73];
        uint64_t v122 = v211[72];
        uint64_t v123 = v211[66];
        uint64_t v124 = v211[64];
        uint64_t v125 = v211[27];
        uint64_t v127 = v211[23];
        uint64_t v126 = v211[24];
        uint64_t v128 = v211[21];
        uint64_t v204 = v211[20];
        uint64_t v129 = v211[18];
        swift_storeEnumTagMultiPayload();
        sub_24E2BF99C(v127, v126, type metadata accessor for Person.Relationship.Follower);
        uint64_t v130 = v128 + *(int *)(v129 + 32);
        sub_24E2BFA04(v125, v130, type metadata accessor for Person.Relationship.Following);
        uint64_t v131 = type metadata accessor for Person.Relationship(0);
        sub_24E2BFA04(v126, v130 + *(int *)(v131 + 20), type metadata accessor for Person.Relationship.Follower);
        *(void *)uint64_t v128 = v123;
        *(void *)(v128 + 8) = v124;
        *(void *)(v128 + 16) = v123;
        *(void *)(v128 + 24) = v124;
        *(void *)(v128 + 32) = v122;
        *(void *)(v128 + 40) = v121;
        *(unsigned char *)(v128 + 48) = v201;
        *(void *)(v128 + 56) = v206;
        *(void *)(v128 + 64) = v191;
        *(void *)(v128 + 72) = v190;
        uint64_t v132 = *(int *)(v129 + 36);
        uint64_t v66 = v211;
        uint64_t v133 = v128 + v132;
        *(void *)uint64_t v133 = v188;
        *(unsigned char *)(v133 + 8) = v189 == 0;
        sub_24E2BFA04(v128, v204, (uint64_t (*)(void))type metadata accessor for Person);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v64 = v211[61];
        if (isUniquelyReferenced_nonNull_native) {
          goto LABEL_61;
        }
        goto LABEL_99;
      }
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      if ((v193 & 1) == 0) {
        goto LABEL_52;
      }
    }
    uint64_t v109 = v211[26];
    uint64_t v110 = v109 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
    uint64_t v111 = sub_24E2F0930();
    v112 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v111 - 8) + 56);
    v112(v109, 1, 1, v111);
    v112(v110, 1, 1, v111);
    goto LABEL_56;
  }
  __break(1u);
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
LABEL_96:
  __break(1u);
LABEL_97:
  __break(1u);
  while (1)
  {
    __break(1u);
LABEL_99:
    unint64_t v64 = sub_24E2E4954(0, *(void *)(v64 + 16) + 1, 1, v64);
LABEL_61:
    unint64_t v136 = *(void *)(v64 + 16);
    unint64_t v135 = *(void *)(v64 + 24);
    uint64_t v208 = v136 >= v135 >> 1 ? sub_24E2E4954(v135 > 1, v136 + 1, 1, v64) : v64;
    uint64_t v137 = v66[46];
    uint64_t v138 = v66[37];
    uint64_t v139 = v66[27];
    uint64_t v140 = v66[24];
    uint64_t v141 = v66[20];
    uint64_t v142 = v66[21];
    uint64_t v143 = v66[19];
    *(void *)(v208 + 16) = v136 + 1;
    sub_24E2BF99C(v141, v208+ ((*(unsigned __int8 *)(v143 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v143 + 80))+ *(void *)(v143 + 72) * v136, (uint64_t (*)(void))type metadata accessor for Person);

    sub_24E2BFA6C(v142, (uint64_t (*)(void))type metadata accessor for Person);
    sub_24E2BFA6C(v140, type metadata accessor for Person.Relationship.Follower);
    sub_24E2BFA6C(v139, type metadata accessor for Person.Relationship.Following);
    ((void (*)(uint64_t, uint64_t))v215)(v137, v138);
    int64_t v145 = v66[62];
    unint64_t v144 = v66[63];
    v66[61] = v208;
    uint64_t v215 = 136315394;
    if (v144) {
      break;
    }
LABEL_70:
    int64_t v150 = v145 + 1;
    if (__OFADD__(v145, 1)) {
      goto LABEL_97;
    }
    int64_t v151 = (unint64_t)((1 << *((unsigned char *)v66 + 644)) + 63) >> 6;
    uint64_t v149 = v66[58];
    if (v150 >= v151) {
      goto LABEL_87;
    }
    uint64_t v152 = v149 + 64;
    unint64_t v153 = *(void *)(v149 + 64 + 8 * v150);
    ++v145;
    if (v153) {
      goto LABEL_83;
    }
    int64_t v145 = v150 + 1;
    if (v150 + 1 >= v151) {
      goto LABEL_87;
    }
    unint64_t v153 = *(void *)(v152 + 8 * v145);
    if (v153) {
      goto LABEL_83;
    }
    int64_t v145 = v150 + 2;
    if (v150 + 2 >= v151) {
      goto LABEL_87;
    }
    unint64_t v153 = *(void *)(v152 + 8 * v145);
    if (v153) {
      goto LABEL_83;
    }
    int64_t v154 = v150 + 3;
    if (v154 >= v151)
    {
LABEL_87:
      v169 = (void *)v66[59];
      v168 = (void *)v66[60];
      swift_release();

      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      v170 = (uint64_t (*)(uint64_t))v66[1];
      return v170(v208);
    }
    unint64_t v153 = *(void *)(v152 + 8 * v154);
    if (v153)
    {
      int64_t v145 = v154;
LABEL_83:
      unint64_t v144 = (v153 - 1) & v153;
      unint64_t v148 = __clz(__rbit64(v153)) + (v145 << 6);
      goto LABEL_84;
    }
    while (1)
    {
      int64_t v145 = v154 + 1;
      if (__OFADD__(v154, 1)) {
        break;
      }
      if (v145 >= v151) {
        goto LABEL_87;
      }
      unint64_t v153 = *(void *)(v152 + 8 * v145);
      ++v154;
      if (v153) {
        goto LABEL_83;
      }
    }
  }
  while (1)
  {
    while (1)
    {
      unint64_t v147 = __clz(__rbit64(v144));
      v144 &= v144 - 1;
      unint64_t v148 = v147 | (v145 << 6);
      uint64_t v149 = v66[58];
LABEL_84:
      v66[62] = v145;
      v66[63] = v144;
      v155 = (void *)(*(void *)(v149 + 48) + 16 * v148);
      uint64_t v156 = v155[1];
      v66[64] = v156;
      uint64_t v157 = *(void *)(*(void *)(v149 + 56) + 8 * v148);
      v66[65] = v157;
      if (v156) {
        break;
      }
      swift_bridgeObjectRetain_n();
      v158 = sub_24E2F0D50();
      v159 = v66;
      os_log_type_t v160 = sub_24E2F11D0();
      if (os_log_type_enabled(v158, v160))
      {
        uint64_t v161 = v159[37];
        uint64_t v162 = swift_slowAlloc();
        uint64_t v163 = swift_slowAlloc();
        uint64_t v217 = v163;
        *(_DWORD *)uint64_t v162 = 136315394;
        *(void *)(v162 + 4) = sub_24E29CA04(0xD00000000000001BLL, 0x800000024E2F6CB0, &v217);
        *(_WORD *)(v162 + 12) = 2080;
        uint64_t v164 = swift_bridgeObjectRetain();
        uint64_t v165 = MEMORY[0x253337FA0](v164, v161);
        unint64_t v167 = v166;
        swift_bridgeObjectRelease();
        *(void *)(v162 + 14) = sub_24E29CA04(v165, v167, &v217);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_24E292000, v158, v160, "%s - compactMap: Found NIL key with values: %s", (uint8_t *)v162, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x253338AC0](v163, -1, -1);
        MEMORY[0x253338AC0](v162, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      uint64_t v66 = v159;
      if (!v144) {
        goto LABEL_70;
      }
    }
    v66[66] = *v155;
    uint64_t v146 = *(void *)(v157 + 16);
    v66[67] = v146;
    if (v146) {
      break;
    }
    if (!v144) {
      goto LABEL_70;
    }
  }
  uint64_t v172 = v66[46];
  uint64_t v173 = v66[37];
  uint64_t v174 = v66[38];
  uint64_t v175 = v66[36];
  uint64_t v177 = v66[32];
  uint64_t v176 = v66[33];
  v178 = *(void (**)(uint64_t, unint64_t, uint64_t))(v174 + 16);
  v174 += 16;
  int v179 = *(_DWORD *)(v174 + 64);
  *((_DWORD *)v66 + 160) = v179;
  v66[68] = v178;
  v66[69] = v174 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v178(v172, v157 + ((v179 + 32) & ~(unint64_t)v179), v173);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24E2F0AF0();
  Handle.fmuiPersonAssociatedHandles.getter((uint64_t)(v66 + 6));
  v180 = *(void (**)(uint64_t, uint64_t))(v176 + 8);
  v66[70] = v180;
  v66[71] = (v176 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v180(v175, v177);
  uint64_t v181 = v66[6];
  uint64_t v182 = v66[7];
  v66[72] = v181;
  v66[73] = v182;
  char v183 = *((unsigned char *)v66 + 64);
  *((unsigned char *)v66 + 645) = v183;
  uint64_t v184 = v66[9];
  v66[74] = v184;
  v66[2] = v181;
  v66[3] = v182;
  *((unsigned char *)v66 + 32) = v183;
  v66[5] = v184;
  v216 = (char *)&dword_2698CB738 + dword_2698CB738;
  v185 = (void *)swift_task_alloc();
  v66[75] = v185;
  void *v185 = v66;
  v185[1] = sub_24E2BB820;
  uint64_t v186 = v66[59];
  return ((uint64_t (*)(void *, uint64_t))v216)(v66 + 2, v186);
}

uint64_t sub_24E2BCD70()
{
  uint64_t v212 = v0;
  uint64_t v1 = v0 + 128;
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_24E2F0D50();
  os_log_type_t v3 = sub_24E2F11D0();
  uint64_t v204 = v0;
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v208 = *(void **)(v0 + 616);
    uint64_t v4 = *(void *)(v0 + 528);
    unint64_t v5 = *(void *)(v0 + 512);
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    v211[0] = v7;
    *(_DWORD *)uint64_t v6 = 136315394;
    *(void *)(v0 + 112) = sub_24E29CA04(0xD00000000000001BLL, 0x800000024E2F6CB0, v211);
    sub_24E2F1220();
    *(_WORD *)(v6 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v8 = v4;
    uint64_t v1 = v0 + 128;
    *(void *)(v0 + 120) = sub_24E29CA04(v8, v5, v211);
    sub_24E2F1220();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24E292000, v2, v3, "%s - Couldn't fetch contact for %{public}s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x253338AC0](v7, -1, -1);
    MEMORY[0x253338AC0](v6, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v182 = v1 - 112;
  char v9 = *(void (**)(uint64_t, uint64_t))(v0 + 560);
  v205 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 544);
  uint64_t v11 = *(void *)(v0 + 360);
  uint64_t v10 = *(void *)(v0 + 368);
  uint64_t v12 = *(void *)(v0 + 296);
  uint64_t v13 = *(void *)(v0 + 280);
  uint64_t v14 = *(void *)(v0 + 256);
  sub_24E2F0AF0();
  uint64_t v15 = sub_24E2F0B20();
  uint64_t v17 = v16;
  v9(v13, v14);
  v205(v11, v10, v12);
  uint64_t v186 = v17;
  if (v17)
  {
    uint64_t v183 = v15;
    uint64_t v18 = *(void *)(v0 + 360);
    uint64_t v19 = *(void *)(v0 + 296);
    uint64_t v20 = *(void *)(v0 + 304);
    swift_bridgeObjectRelease();
    uint64_t v209 = *(void *)(v20 + 8);
    ((void (*)(uint64_t, uint64_t))v209)(v18, v19);
  }
  else
  {
    (*(void (**)(void, void, void))(v0 + 544))(*(void *)(v0 + 352), *(void *)(v0 + 360), *(void *)(v0 + 296));
    uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v0 + 560);
    uint64_t v23 = *(void *)(v0 + 352);
    uint64_t v22 = *(void *)(v0 + 360);
    uint64_t v24 = *(void *)(v0 + 296);
    uint64_t v25 = *(void *)(v0 + 304);
    uint64_t v26 = *(void *)(v0 + 288);
    uint64_t v27 = *(void *)(v0 + 256);
    sub_24E2F0AF0();
    uint64_t v183 = sub_24E2F0B10();
    uint64_t v186 = v28;
    v21(v26, v27);
    uint64_t v29 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
    v29(v23, v24);
    uint64_t v209 = (uint64_t)v29;
    v29(v22, v24);
  }
  uint64_t v30 = v0;
  uint64_t v206 = *(void *)(*(void *)(v0 + 304) + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v31 = 0;
  uint64_t v32 = 0;
  unint64_t v33 = (void *)MEMORY[0x263F8EE78];
  do
  {
    uint64_t v34 = *(void (**)(uint64_t, uint64_t))(v30 + 560);
    uint64_t v35 = *(void *)(v30 + 272);
    uint64_t v36 = *(void *)(v30 + 256);
    (*(void (**)(void, unint64_t, void))(v30 + 544))(*(void *)(v30 + 344), *(void *)(v30 + 520)+ v31+ ((*(unsigned __int8 *)(v30 + 640) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 640)), *(void *)(v30 + 296));
    sub_24E2F0AF0();
    uint64_t v37 = sub_24E2F0B30();
    unint64_t v39 = v38;
    v34(v35, v36);
    uint64_t v40 = *(void *)(v30 + 344);
    uint64_t v41 = *(void *)(v30 + 296);
    if (v39)
    {
      uint64_t v42 = sub_24E2BE6D8(v37, v39);
      char v44 = v43;
      ((void (*)(uint64_t, uint64_t))v209)(v40, v41);
      if ((v44 & 1) == 0)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v33 = sub_24E2E4BBC(0, v33[2] + 1, 1, v33);
        }
        unint64_t v46 = v33[2];
        unint64_t v45 = v33[3];
        if (v46 >= v45 >> 1) {
          unint64_t v33 = sub_24E2E4BBC((void *)(v45 > 1), v46 + 1, 1, v33);
        }
        v33[2] = v46 + 1;
        v33[v46 + 4] = v42;
      }
    }
    else
    {
      ((void (*)(void, void))v209)(*(void *)(v30 + 344), *(void *)(v30 + 296));
    }
    ++v32;
    v31 += v206;
  }
  while (v32 != *(void *)(v30 + 536));
  swift_bridgeObjectRelease();
  unint64_t v47 = v33[2];
  if (!v47)
  {
    int64_t v48 = 0;
    goto LABEL_29;
  }
  int64_t v48 = v33[4];
  unint64_t v49 = v47 - 1;
  if (v47 == 1) {
    goto LABEL_29;
  }
  if (v47 >= 5)
  {
    unint64_t v50 = v49 & 0xFFFFFFFFFFFFFFFCLL | 1;
    int64x2_t v51 = vdupq_n_s64(v48);
    unint64_t v52 = (int64x2_t *)(v33 + 7);
    unint64_t v53 = v49 & 0xFFFFFFFFFFFFFFFCLL;
    int64x2_t v54 = v51;
    do
    {
      int64x2_t v51 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v51, v52[-1]), (int8x16_t)v52[-1], (int8x16_t)v51);
      int64x2_t v54 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v54, *v52), *(int8x16_t *)v52, (int8x16_t)v54);
      v52 += 2;
      v53 -= 4;
    }
    while (v53);
    int8x16_t v55 = vbslq_s8((int8x16_t)vcgtq_s64(v54, v51), (int8x16_t)v51, (int8x16_t)v54);
    uint64_t v56 = vextq_s8(v55, v55, 8uLL).u64[0];
    int64_t v48 = (int64_t)vbsl_s8((int8x8_t)vcgtd_s64(v56, v55.i64[0]), *(int8x8_t *)v55.i8, (int8x8_t)v56);
    if (v49 == (v49 & 0xFFFFFFFFFFFFFFFCLL)) {
      goto LABEL_29;
    }
  }
  else
  {
    unint64_t v50 = 1;
  }
  unint64_t v57 = v47 - v50;
  int8x16_t v58 = &v33[v50 + 4];
  do
  {
    int64_t v60 = *v58++;
    int64_t v59 = v60;
    if (v60 < v48) {
      int64_t v48 = v59;
    }
    --v57;
  }
  while (v57);
LABEL_29:
  int64_t v184 = v48;
  uint64_t v185 = v33[2];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v61 = 0;
  unint64_t v62 = 0;
  while (!__OFADD__(v61, 1))
  {
    uint64_t v191 = v61 + 1;
    uint64_t v189 = *(void *)(v204 + 536);
    uint64_t v63 = *(unsigned int *)(v204 + 624);
    uint64_t v64 = *(void *)(v204 + 336);
    uint64_t v203 = *(void *)(v204 + 296);
    uint64_t v66 = *(void *)(v204 + 240);
    uint64_t v65 = *(void *)(v204 + 248);
    uint64_t v67 = *(void *)(v204 + 224);
    uint64_t v68 = *(void *)(v204 + 232);
    (*(void (**)(uint64_t, unint64_t))(v204 + 544))(v64, *(void *)(v204 + 520)+ v62+ ((*(unsigned __int8 *)(v204 + 640) + 32) & ~(unint64_t)*(unsigned __int8 *)(v204 + 640)));
    sub_24E2F0AE0();
    uint64_t v199 = *(void (**)(uint64_t, uint64_t, uint64_t))(v68 + 104);
    v199(v66, v63, v67);
    LOBYTE(v63) = sub_24E2F09E0();
    uint64_t v69 = *(void (**)(uint64_t, uint64_t))(v68 + 8);
    uint64_t v30 = v68 + 8;
    v69(v66, v67);
    uint64_t v196 = v69;
    v69(v65, v67);
    ((void (*)(uint64_t, uint64_t))v209)(v64, v203);
    char v188 = v63;
    if ((v63 & 1) == 0)
    {
      v62 += v206;
      ++v61;
      if (v191 != v189) {
        continue;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v70 = 0;
    unint64_t v62 = 0;
    do
    {
      uint64_t v71 = v70 + 1;
      if (__OFADD__(v70, 1)) {
        goto LABEL_87;
      }
      uint64_t v72 = *(void *)(v204 + 536);
      uint64_t v73 = *(unsigned int *)(v204 + 628);
      uint64_t v74 = *(void *)(v204 + 328);
      uint64_t v192 = *(void *)(v204 + 296);
      uint64_t v76 = *(void *)(v204 + 240);
      uint64_t v75 = *(void *)(v204 + 248);
      uint64_t v77 = *(void *)(v204 + 224);
      (*(void (**)(uint64_t, unint64_t))(v204 + 544))(v74, *(void *)(v204 + 520)+ v62+ ((*(unsigned __int8 *)(v204 + 640) + 32) & ~(unint64_t)*(unsigned __int8 *)(v204 + 640)));
      sub_24E2F0AE0();
      v199(v76, v73, v77);
      LOBYTE(v73) = sub_24E2F09E0();
      v196(v76, v77);
      v196(v75, v77);
      ((void (*)(uint64_t, uint64_t))v209)(v74, v192);
      char v190 = v73;
      if (v73) {
        break;
      }
      v62 += v206;
      ++v70;
    }
    while (v71 != v72);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v78 = 0;
    uint64_t v79 = 0;
    do
    {
      uint64_t v80 = v78 + 1;
      if (__OFADD__(v78, 1)) {
        goto LABEL_88;
      }
      uint64_t v81 = *(void *)(v204 + 536);
      uint64_t v82 = *(unsigned int *)(v204 + 632);
      uint64_t v83 = *(void *)(v204 + 320);
      uint64_t v193 = *(void *)(v204 + 296);
      uint64_t v85 = *(void *)(v204 + 240);
      uint64_t v84 = *(void *)(v204 + 248);
      unint64_t v62 = *(void *)(v204 + 224);
      (*(void (**)(uint64_t, unint64_t))(v204 + 544))(v83, *(void *)(v204 + 520)+ v79+ ((*(unsigned __int8 *)(v204 + 640) + 32) & ~(unint64_t)*(unsigned __int8 *)(v204 + 640)));
      sub_24E2F0AE0();
      v199(v85, v82, v62);
      LOBYTE(v82) = sub_24E2F09E0();
      v196(v85, v62);
      v196(v84, v62);
      ((void (*)(uint64_t, uint64_t))v209)(v83, v193);
      char v187 = v82;
      if (v82) {
        break;
      }
      v79 += v206;
      ++v78;
    }
    while (v80 != v81);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    unint64_t v62 = 0;
    uint64_t v86 = 0;
    do
    {
      unint64_t v87 = v62 + 1;
      if (__OFADD__(v62, 1)) {
        goto LABEL_89;
      }
      uint64_t v88 = *(void *)(v204 + 536);
      uint64_t v89 = *(unsigned int *)(v204 + 636);
      uint64_t v90 = *(void *)(v204 + 312);
      uint64_t v194 = *(void *)(v204 + 296);
      uint64_t v92 = *(void *)(v204 + 240);
      uint64_t v91 = *(void *)(v204 + 248);
      uint64_t v93 = *(void *)(v204 + 224);
      (*(void (**)(uint64_t, unint64_t))(v204 + 544))(v90, *(void *)(v204 + 520)+ v86+ ((*(unsigned __int8 *)(v204 + 640) + 32) & ~(unint64_t)*(unsigned __int8 *)(v204 + 640)));
      sub_24E2F0AE0();
      v199(v92, v89, v93);
      LOBYTE(v89) = sub_24E2F09E0();
      v196(v92, v93);
      v196(v91, v93);
      ((void (*)(uint64_t, uint64_t))v209)(v90, v194);
      char v94 = v89;
      if (v89) {
        break;
      }
      v86 += v206;
      ++v62;
    }
    while (v87 != v88);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v95 = sub_24E2F0D50();
    os_log_type_t v96 = sub_24E2F11C0();
    if (os_log_type_enabled(v95, v96))
    {
      unint64_t v97 = *(void *)(v204 + 512);
      uint64_t v197 = *(void *)(v204 + 528);
      uint64_t v200 = *(void *)(v204 + 296);
      uint64_t v98 = swift_slowAlloc();
      uint64_t v207 = swift_slowAlloc();
      v211[0] = v207;
      *(_DWORD *)uint64_t v98 = 136315650;
      *(void *)(v204 + 88) = sub_24E29CA04(0xD00000000000001BLL, 0x800000024E2F6CB0, v211);
      sub_24E2F1220();
      *(_WORD *)(v98 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(void *)(v204 + 96) = sub_24E29CA04(v197, v97, v211);
      sub_24E2F1220();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v98 + 22) = 2080;
      uint64_t v99 = swift_bridgeObjectRetain();
      uint64_t v100 = MEMORY[0x253337FA0](v99, v200);
      unint64_t v102 = v101;
      swift_bridgeObjectRelease();
      *(void *)(v204 + 104) = sub_24E29CA04(v100, v102, v211);
      sub_24E2F1220();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_24E292000, v95, v96, "%s - compactMap %s - %s", (uint8_t *)v98, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x253338AC0](v207, -1, -1);
      MEMORY[0x253338AC0](v98, -1, -1);

      if ((v188 & 1) == 0)
      {
LABEL_47:
        if (v187)
        {
          uint64_t v103 = *(void *)(v204 + 208);
          uint64_t v104 = sub_24E2F0930();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v104 - 8) + 56))(v103, 1, 1, v104);
        }
LABEL_51:
        uint64_t v109 = *(void *)(v204 + 208);
        uint64_t v110 = *(void *)(v204 + 216);
        swift_storeEnumTagMultiPayload();
        sub_24E2BF99C(v109, v110, type metadata accessor for Person.Relationship.Following);
        if (v190)
        {
          uint64_t v111 = *(void *)(v204 + 184);
          uint64_t v112 = v111 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
          uint64_t v113 = sub_24E2F0930();
          uint64_t v114 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v113 - 8) + 56);
          v114(v111, 1, 1, v113);
          v114(v112, 1, 1, v113);
        }
        else if (v94)
        {
          uint64_t v115 = *(void *)(v204 + 184);
          uint64_t v116 = sub_24E2F0930();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v116 - 8) + 56))(v115, 1, 1, v116);
        }
        uint64_t v201 = *(void *)(v204 + 592);
        char v195 = *(unsigned char *)(v204 + 645);
        uint64_t v117 = *(void *)(v204 + 584);
        uint64_t v118 = *(void *)(v204 + 576);
        uint64_t v119 = *(void *)(v204 + 528);
        uint64_t v120 = *(void *)(v204 + 512);
        uint64_t v121 = *(void *)(v204 + 216);
        uint64_t v123 = *(void *)(v204 + 184);
        uint64_t v122 = *(void *)(v204 + 192);
        uint64_t v124 = *(void *)(v204 + 168);
        uint64_t v198 = *(void *)(v204 + 160);
        uint64_t v125 = *(void *)(v204 + 144);
        swift_storeEnumTagMultiPayload();
        sub_24E2BF99C(v123, v122, type metadata accessor for Person.Relationship.Follower);
        uint64_t v126 = v124 + *(int *)(v125 + 32);
        sub_24E2BFA04(v121, v126, type metadata accessor for Person.Relationship.Following);
        uint64_t v127 = type metadata accessor for Person.Relationship(0);
        sub_24E2BFA04(v122, v126 + *(int *)(v127 + 20), type metadata accessor for Person.Relationship.Follower);
        *(void *)uint64_t v124 = v119;
        *(void *)(v124 + 8) = v120;
        *(void *)(v124 + 16) = v119;
        *(void *)(v124 + 24) = v120;
        *(void *)(v124 + 32) = v118;
        *(void *)(v124 + 40) = v117;
        *(unsigned char *)(v124 + 48) = v195;
        *(void *)(v124 + 56) = v201;
        *(void *)(v124 + 64) = v183;
        *(void *)(v124 + 72) = v186;
        uint64_t v128 = *(int *)(v125 + 36);
        uint64_t v30 = v204;
        uint64_t v129 = v124 + v128;
        *(void *)uint64_t v129 = v184;
        *(unsigned char *)(v129 + 8) = v185 == 0;
        sub_24E2BFA04(v124, v198, (uint64_t (*)(void))type metadata accessor for Person);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v62 = *(void *)(v204 + 488);
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          goto LABEL_92;
        }
        goto LABEL_56;
      }
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      if ((v188 & 1) == 0) {
        goto LABEL_47;
      }
    }
    uint64_t v105 = *(void *)(v204 + 208);
    uint64_t v106 = v105 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
    uint64_t v107 = sub_24E2F0930();
    uint64_t v108 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v107 - 8) + 56);
    v108(v105, 1, 1, v107);
    v108(v106, 1, 1, v107);
    goto LABEL_51;
  }
  __break(1u);
LABEL_87:
  __break(1u);
LABEL_88:
  __break(1u);
LABEL_89:
  __break(1u);
LABEL_90:
  __break(1u);
LABEL_91:
  __break(1u);
LABEL_92:
  unint64_t v62 = sub_24E2E4954(0, *(void *)(v62 + 16) + 1, 1, v62);
LABEL_56:
  unint64_t v132 = *(void *)(v62 + 16);
  unint64_t v131 = *(void *)(v62 + 24);
  if (v132 >= v131 >> 1) {
    unint64_t v62 = sub_24E2E4954(v131 > 1, v132 + 1, 1, v62);
  }
  uint64_t v133 = *(void *)(v30 + 368);
  uint64_t v134 = *(void *)(v30 + 296);
  uint64_t v135 = *(void *)(v30 + 216);
  uint64_t v136 = *(void *)(v30 + 192);
  uint64_t v137 = *(void *)(v30 + 160);
  uint64_t v138 = *(void *)(v30 + 168);
  uint64_t v139 = *(void *)(v30 + 152);
  *(void *)(v62 + 16) = v132 + 1;
  sub_24E2BF99C(v137, v62+ ((*(unsigned __int8 *)(v139 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v139 + 80))+ *(void *)(v139 + 72) * v132, (uint64_t (*)(void))type metadata accessor for Person);
  sub_24E2BFA6C(v138, (uint64_t (*)(void))type metadata accessor for Person);
  sub_24E2BFA6C(v136, type metadata accessor for Person.Relationship.Follower);
  sub_24E2BFA6C(v135, type metadata accessor for Person.Relationship.Following);
  ((void (*)(uint64_t, uint64_t))v209)(v133, v134);
  int64_t v141 = *(void *)(v30 + 496);
  unint64_t v140 = *(void *)(v30 + 504);
  unint64_t v202 = v62;
  *(void *)(v30 + 488) = v62;
  uint64_t v209 = 136315394;
  while (1)
  {
    if (v140)
    {
      unint64_t v143 = __clz(__rbit64(v140));
      v140 &= v140 - 1;
      unint64_t v144 = v143 | (v141 << 6);
      uint64_t v145 = *(void *)(v30 + 464);
      goto LABEL_76;
    }
    int64_t v146 = v141 + 1;
    if (__OFADD__(v141, 1)) {
      goto LABEL_90;
    }
    int64_t v147 = (unint64_t)((1 << *(unsigned char *)(v30 + 644)) + 63) >> 6;
    uint64_t v145 = *(void *)(v30 + 464);
    if (v146 >= v147) {
      break;
    }
    uint64_t v148 = v145 + 64;
    unint64_t v149 = *(void *)(v145 + 64 + 8 * v146);
    ++v141;
    if (!v149)
    {
      int64_t v141 = v146 + 1;
      if (v146 + 1 >= v147) {
        break;
      }
      unint64_t v149 = *(void *)(v148 + 8 * v141);
      if (!v149)
      {
        int64_t v141 = v146 + 2;
        if (v146 + 2 >= v147) {
          break;
        }
        unint64_t v149 = *(void *)(v148 + 8 * v141);
        if (!v149)
        {
          int64_t v150 = v146 + 3;
          if (v150 >= v147) {
            break;
          }
          unint64_t v149 = *(void *)(v148 + 8 * v150);
          if (!v149)
          {
            while (1)
            {
              int64_t v141 = v150 + 1;
              if (__OFADD__(v150, 1)) {
                goto LABEL_91;
              }
              if (v141 >= v147) {
                goto LABEL_80;
              }
              unint64_t v149 = *(void *)(v148 + 8 * v141);
              ++v150;
              if (v149) {
                goto LABEL_75;
              }
            }
          }
          int64_t v141 = v150;
        }
      }
    }
LABEL_75:
    unint64_t v140 = (v149 - 1) & v149;
    unint64_t v144 = __clz(__rbit64(v149)) + (v141 << 6);
LABEL_76:
    *(void *)(v30 + 496) = v141;
    *(void *)(v30 + 504) = v140;
    int64_t v151 = (void *)(*(void *)(v145 + 48) + 16 * v144);
    uint64_t v152 = v151[1];
    *(void *)(v30 + 512) = v152;
    unint64_t v62 = *(void *)(*(void *)(v145 + 56) + 8 * v144);
    *(void *)(v30 + 520) = v62;
    if (v152)
    {
      *(void *)(v30 + 528) = *v151;
      uint64_t v142 = *(void *)(v62 + 16);
      *(void *)(v30 + 536) = v142;
      if (v142)
      {
        uint64_t v167 = *(void *)(v30 + 368);
        uint64_t v168 = *(void *)(v30 + 296);
        uint64_t v169 = *(void *)(v30 + 304);
        uint64_t v170 = *(void *)(v30 + 288);
        uint64_t v172 = *(void *)(v30 + 256);
        uint64_t v171 = *(void *)(v30 + 264);
        uint64_t v173 = *(void (**)(uint64_t, unint64_t, uint64_t))(v169 + 16);
        v169 += 16;
        int v174 = *(_DWORD *)(v169 + 64);
        *(_DWORD *)(v30 + 640) = v174;
        *(void *)(v30 + 544) = v173;
        *(void *)(v30 + 552) = v169 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
        v173(v167, v62 + ((v174 + 32) & ~(unint64_t)v174), v168);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_24E2F0AF0();
        Handle.fmuiPersonAssociatedHandles.getter(v30 + 48);
        uint64_t v175 = *(void (**)(uint64_t, uint64_t))(v171 + 8);
        *(void *)(v30 + 560) = v175;
        *(void *)(v30 + 568) = (v171 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
        v175(v170, v172);
        uint64_t v176 = *(void *)(v30 + 48);
        uint64_t v177 = *(void *)(v30 + 56);
        *(void *)(v30 + 576) = v176;
        *(void *)(v30 + 584) = v177;
        char v178 = *(unsigned char *)(v30 + 64);
        *(unsigned char *)(v30 + 645) = v178;
        uint64_t v179 = *(void *)(v30 + 72);
        *(void *)(v30 + 592) = v179;
        *(void *)(v30 + 16) = v176;
        *(void *)(v30 + 24) = v177;
        *(unsigned char *)(v30 + 32) = v178;
        *(void *)(v30 + 40) = v179;
        uint64_t v210 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_2698CB738 + dword_2698CB738);
        v180 = (void *)swift_task_alloc();
        *(void *)(v30 + 600) = v180;
        void *v180 = v30;
        v180[1] = sub_24E2BB820;
        uint64_t v181 = *(void *)(v30 + 472);
        return v210(v182, v181);
      }
    }
    else
    {
      swift_bridgeObjectRetain_n();
      unint64_t v153 = sub_24E2F0D50();
      os_log_type_t v154 = sub_24E2F11D0();
      if (os_log_type_enabled(v153, v154))
      {
        uint64_t v155 = *(void *)(v204 + 296);
        uint64_t v156 = swift_slowAlloc();
        uint64_t v157 = swift_slowAlloc();
        v211[0] = v157;
        *(_DWORD *)uint64_t v156 = 136315394;
        *(void *)(v156 + 4) = sub_24E29CA04(0xD00000000000001BLL, 0x800000024E2F6CB0, v211);
        *(_WORD *)(v156 + 12) = 2080;
        uint64_t v158 = swift_bridgeObjectRetain();
        uint64_t v159 = MEMORY[0x253337FA0](v158, v155);
        unint64_t v161 = v160;
        swift_bridgeObjectRelease();
        *(void *)(v156 + 14) = sub_24E29CA04(v159, v161, v211);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        os_log_type_t v162 = v154;
        uint64_t v30 = v204;
        _os_log_impl(&dword_24E292000, v153, v162, "%s - compactMap: Found NIL key with values: %s", (uint8_t *)v156, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x253338AC0](v157, -1, -1);
        MEMORY[0x253338AC0](v156, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        uint64_t v30 = v204;
      }
    }
  }
LABEL_80:
  uint64_t v164 = *(void **)(v30 + 472);
  uint64_t v163 = *(void **)(v30 + 480);
  swift_release();

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v165 = *(uint64_t (**)(unint64_t))(v30 + 8);
  return v165(v202);
}

uint64_t sub_24E2BE270()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24E2BE3DC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24E2BE554()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24E2BE6D8(uint64_t result, unint64_t a2)
{
  uint64_t v3 = HIBYTE(a2) & 0xF;
  uint64_t v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v5)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0) {
        uint64_t v6 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        uint64_t v6 = (unsigned __int8 *)sub_24E2F12E0();
      }
      uint64_t v7 = (uint64_t)sub_24E2BEAF4(v6, v4, 10);
      char v9 = v8 & 1;
      goto LABEL_37;
    }
    v23[0] = result;
    v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (!v3) {
        goto LABEL_50;
      }
      if (v3 == 1 || (BYTE1(result) - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v7 = (BYTE1(result) - 48);
      uint64_t v14 = v3 - 2;
      if (v14)
      {
        uint64_t v15 = (unsigned __int8 *)v23 + 2;
        while (1)
        {
          unsigned int v16 = *v15 - 48;
          if (v16 > 9) {
            goto LABEL_34;
          }
          uint64_t v17 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
            goto LABEL_34;
          }
          uint64_t v7 = v17 + v16;
          if (__OFADD__(v17, v16)) {
            goto LABEL_34;
          }
          char v9 = 0;
          ++v15;
          if (!--v14) {
            goto LABEL_37;
          }
        }
      }
    }
    else
    {
      if (result == 45)
      {
        if (v3)
        {
          if (v3 != 1 && (BYTE1(result) - 48) <= 9u)
          {
            uint64_t v7 = -(uint64_t)(BYTE1(result) - 48);
            uint64_t v10 = v3 - 2;
            if (v10)
            {
              uint64_t v11 = (unsigned __int8 *)v23 + 2;
              while (1)
              {
                unsigned int v12 = *v11 - 48;
                if (v12 > 9) {
                  goto LABEL_34;
                }
                uint64_t v13 = 10 * v7;
                if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
                  goto LABEL_34;
                }
                uint64_t v7 = v13 - v12;
                if (__OFSUB__(v13, v12)) {
                  goto LABEL_34;
                }
                char v9 = 0;
                ++v11;
                if (!--v10) {
                  goto LABEL_37;
                }
              }
            }
            goto LABEL_36;
          }
LABEL_34:
          uint64_t v7 = 0;
          char v9 = 1;
          goto LABEL_37;
        }
        __break(1u);
LABEL_50:
        __break(1u);
        return result;
      }
      if (!v3 || (result - 48) > 9u) {
        goto LABEL_34;
      }
      uint64_t v7 = (result - 48);
      uint64_t v18 = v3 - 1;
      if (v18)
      {
        uint64_t v19 = (unsigned __int8 *)v23 + 1;
        while (1)
        {
          unsigned int v20 = *v19 - 48;
          if (v20 > 9) {
            goto LABEL_34;
          }
          uint64_t v21 = 10 * v7;
          if ((unsigned __int128)(v7 * (__int128)10) >> 64 != (10 * v7) >> 63) {
            goto LABEL_34;
          }
          uint64_t v7 = v21 + v20;
          if (__OFADD__(v21, v20)) {
            goto LABEL_34;
          }
          char v9 = 0;
          ++v19;
          if (!--v18) {
            goto LABEL_37;
          }
        }
      }
    }
LABEL_36:
    char v9 = 0;
    goto LABEL_37;
  }
  uint64_t v7 = (uint64_t)sub_24E2BEA0C(result, a2, 10);
  char v9 = v22;
LABEL_37:
  swift_bridgeObjectRelease();
  if (v9) {
    return 0;
  }
  else {
    return v7;
  }
}

void *sub_24E2BE928(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAA38);
  uint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_24E2BE990(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_24E2F0FB0();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = MEMORY[0x253337EE0](15, a1 >> 16);
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

unsigned __int8 *sub_24E2BEA0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_24E2F0FD0();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    unint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_24E2BED70();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    unint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    unint64_t v7 = (unsigned __int8 *)sub_24E2F12E0();
  }
LABEL_7:
  uint64_t v11 = sub_24E2BEAF4(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_24E2BEAF4(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (unint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      unsigned __int8 v22 = a3 + 48;
      unsigned __int8 v23 = a3 + 55;
      unsigned __int8 v24 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v22 = 58;
      }
      else
      {
        unsigned __int8 v24 = 97;
        unsigned __int8 v23 = 65;
      }
      if (result)
      {
        uint64_t v25 = 0;
        do
        {
          unsigned int v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24) {
                return 0;
              }
              char v27 = -87;
            }
            else
            {
              char v27 = -55;
            }
          }
          else
          {
            char v27 = -48;
          }
          uint64_t v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63) {
            return 0;
          }
          uint64_t v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  uint64_t v14 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v15 = a3 + 48;
  unsigned __int8 v16 = a3 + 55;
  unsigned __int8 v17 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v15 = 58;
  }
  else
  {
    unsigned __int8 v17 = 97;
    unsigned __int8 v16 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  uint64_t v18 = result + 1;
  do
  {
    unsigned int v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17) {
          return 0;
        }
        char v20 = -87;
      }
      else
      {
        char v20 = -55;
      }
    }
    else
    {
      char v20 = -48;
    }
    uint64_t v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20))) {
      return 0;
    }
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_24E2BED70()
{
  unint64_t v0 = sub_24E2F0FE0();
  uint64_t v4 = sub_24E2BEDF0(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_24E2BEDF0(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_24E2BEF48(a1, a2, a3, a4);
    if (v9)
    {
      uint64_t v10 = v9;
      unsigned int v11 = sub_24E2BE928(v9, 0);
      unint64_t v12 = sub_24E2BF048((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
LABEL_11:
        sub_24E2F12E0();
LABEL_4:
        JUMPOUT(0x253337E70);
      }
    }
    else
    {
      unsigned int v11 = (void *)MEMORY[0x263F8EE78];
    }
    uint64_t v13 = MEMORY[0x253337E70](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x253337E70]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

uint64_t sub_24E2BEF48(unint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    a1 = sub_24E2BE990(a1, a3, a4);
    unint64_t v7 = a1;
  }
  if ((v6 & 0xC) == v9)
  {
    a1 = sub_24E2BE990(v6, v5, v4);
    unint64_t v6 = a1;
    if ((v4 & 0x1000000000000000) == 0) {
      return (v6 >> 16) - (v7 >> 16);
    }
  }
  else if ((v4 & 0x1000000000000000) == 0)
  {
    return (v6 >> 16) - (v7 >> 16);
  }
  unint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v11 >= v6 >> 16)
  {
    a1 = v7;
    a2 = v6;
    a3 = v5;
    a4 = v4;
    return MEMORY[0x270F9D808](a1, a2, a3, a4);
  }
  __break(1u);
  return MEMORY[0x270F9D808](a1, a2, a3, a4);
}

unint64_t sub_24E2BF048(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    void v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    uint64_t result = v12;
    if (v17 == v15) {
      uint64_t result = sub_24E2BE990(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      uint64_t result = sub_24E2F0FA0();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          uint64_t result = sub_24E2F12E0();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    uint64_t result = sub_24E2BE990(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = sub_24E2F0F70();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_24E2BF25C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for Person() - 8;
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v32 = (uint64_t)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  unint64_t v10 = (uint64_t *)((char *)&v29 - v9);
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v36 = MEMORY[0x263F8EE78];
  uint64_t v34 = *(void *)(a1 + 16);
  if (v34)
  {
    uint64_t v29 = v2;
    uint64_t v12 = 0;
    uint64_t v13 = *(void *)(v8 + 72);
    unint64_t v30 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v33 = a1 + v30;
    uint64_t v35 = a2 + 56;
    uint64_t v14 = MEMORY[0x263F8EE78];
    uint64_t v31 = v13;
    while (1)
    {
      sub_24E2BFA04(v33 + v13 * v12, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for Person);
      if (*(void *)(a2 + 16))
      {
        uint64_t v16 = *v10;
        uint64_t v15 = v10[1];
        sub_24E2F14A0();
        swift_bridgeObjectRetain();
        sub_24E2F0F20();
        sub_24E2F14B0();
        uint64_t v17 = sub_24E2F14D0();
        uint64_t v18 = -1 << *(unsigned char *)(a2 + 32);
        unint64_t v19 = v17 & ~v18;
        if ((*(void *)(v35 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19))
        {
          uint64_t v20 = *(void *)(a2 + 48);
          uint64_t v21 = (void *)(v20 + 16 * v19);
          BOOL v22 = *v21 == v16 && v21[1] == v15;
          if (v22 || (sub_24E2F1430() & 1) != 0)
          {
LABEL_13:
            swift_bridgeObjectRelease();
            sub_24E2BF99C((uint64_t)v10, v32, (uint64_t (*)(void))type metadata accessor for Person);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              sub_24E29594C(0, *(void *)(v14 + 16) + 1, 1);
            }
            uint64_t v14 = v36;
            unint64_t v24 = *(void *)(v36 + 16);
            unint64_t v23 = *(void *)(v36 + 24);
            if (v24 >= v23 >> 1)
            {
              sub_24E29594C(v23 > 1, v24 + 1, 1);
              uint64_t v14 = v36;
            }
            *(void *)(v14 + 16) = v24 + 1;
            uint64_t v25 = v14 + v30 + v24 * v31;
            uint64_t v13 = v31;
            sub_24E2BF99C(v32, v25, (uint64_t (*)(void))type metadata accessor for Person);
            goto LABEL_5;
          }
          uint64_t v26 = ~v18;
          while (1)
          {
            unint64_t v19 = (v19 + 1) & v26;
            if (((*(void *)(v35 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
              break;
            }
            unint64_t v27 = (void *)(v20 + 16 * v19);
            BOOL v28 = *v27 == v16 && v27[1] == v15;
            if (v28 || (sub_24E2F1430() & 1) != 0) {
              goto LABEL_13;
            }
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v13 = v31;
      }
      sub_24E2BFA6C((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for Person);
LABEL_5:
      if (++v12 == v34) {
        return v36;
      }
    }
  }
  return result;
}

uint64_t sub_24E2BF594(uint64_t a1)
{
  uint64_t v2 = sub_24E2F0B70();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_24E2F0B00();
  uint64_t v6 = MEMORY[0x270FA5388](v58);
  int8x16_t v55 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  unint64_t v57 = (char *)&v44 - v9;
  unint64_t v10 = (void *)MEMORY[0x263F8EE80];
  int64_t v59 = (void *)MEMORY[0x263F8EE80];
  uint64_t v11 = *(void *)(a1 + 16);
  if (!v11) {
    return (uint64_t)v10;
  }
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v12 = v8 + 16;
  uint64_t v14 = *(unsigned __int8 *)(v12 + 64);
  uint64_t v15 = (v14 + 32) & ~v14;
  uint64_t v16 = a1 + v15;
  uint64_t v17 = *(void *)(v12 + 56);
  unint64_t v53 = (void (**)(char *, uint64_t))(v3 + 8);
  int64x2_t v54 = v13;
  uint64_t v52 = v15;
  uint64_t v46 = v14 | 7;
  uint64_t v47 = v17 + v15;
  uint64_t v56 = (void (**)(char *, char *, uint64_t))(v12 + 16);
  long long v45 = xmmword_24E2F1C10;
  int64_t v48 = v5;
  uint64_t v49 = v2;
  uint64_t v50 = v17;
  uint64_t v51 = v12;
  v13(v57, v16, v58);
  while (1)
  {
    sub_24E2F0AF0();
    uint64_t v20 = sub_24E2F0B60();
    uint64_t v22 = v21;
    uint64_t v23 = v21 ? v20 : 0;
    (*v53)(v5, v2);
    unint64_t v25 = sub_24E2C9AA0(v23, v22);
    uint64_t v26 = v10[2];
    BOOL v27 = (v24 & 1) == 0;
    uint64_t v28 = v26 + v27;
    if (__OFADD__(v26, v27)) {
      break;
    }
    char v29 = v24;
    if (v10[3] < v28)
    {
      sub_24E2A8F20(v28, 1);
      unint64_t v10 = v59;
      unint64_t v30 = sub_24E2C9AA0(v23, v22);
      if ((v29 & 1) != (v31 & 1)) {
        goto LABEL_23;
      }
      unint64_t v25 = v30;
    }
    if (v29)
    {
      swift_bridgeObjectRelease();
      uint64_t v32 = v10[7];
      uint64_t v33 = *v56;
      (*v56)(v55, v57, v58);
      unint64_t v34 = *(void *)(v32 + 8 * v25);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v32 + 8 * v25) = v34;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v34 = sub_24E2E4CCC(0, *(void *)(v34 + 16) + 1, 1, v34);
        *(void *)(v32 + 8 * v25) = v34;
      }
      unint64_t v37 = *(void *)(v34 + 16);
      unint64_t v36 = *(void *)(v34 + 24);
      if (v37 >= v36 >> 1)
      {
        unint64_t v34 = sub_24E2E4CCC(v36 > 1, v37 + 1, 1, v34);
        *(void *)(v32 + 8 * v25) = v34;
      }
      *(void *)(v34 + 16) = v37 + 1;
      unint64_t v18 = v34 + v52;
      uint64_t v2 = v49;
      uint64_t v19 = v50;
      v33((char *)(v18 + v37 * v50), v55, v58);
      uint64_t v5 = v48;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2698CB088);
      uint64_t v38 = swift_allocObject();
      *(_OWORD *)(v38 + 16) = v45;
      (*v56)((char *)(v38 + v52), v57, v58);
      v10[(v25 >> 6) + 8] |= 1 << v25;
      unint64_t v39 = (uint64_t *)(v10[6] + 16 * v25);
      *unint64_t v39 = v23;
      v39[1] = v22;
      *(void *)(v10[7] + 8 * v25) = v38;
      uint64_t v40 = v10[2];
      BOOL v41 = __OFADD__(v40, 1);
      uint64_t v42 = v40 + 1;
      if (v41) {
        goto LABEL_22;
      }
      v10[2] = v42;
      uint64_t v19 = v50;
    }
    v16 += v19;
    if (!--v11) {
      return (uint64_t)v10;
    }
    v54(v57, v16, v58);
  }
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698CB090);
  uint64_t result = sub_24E2F1450();
  __break(1u);
  return result;
}

uint64_t sub_24E2BF99C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_24E2BFA04(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24E2BFA6C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24E2BFACC()
{
  sub_24E2BFC80(v0 + OBJC_IVAR____TtC10FindMyCore34AnyDisplayRepresentationImageCache_cachedDisplayRepresentationImage);
  swift_release();
  swift_defaultActor_destroy();
  return MEMORY[0x270FA2418](v0);
}

uint64_t sub_24E2BFB20()
{
  return type metadata accessor for AnyDisplayRepresentationImageCache();
}

uint64_t type metadata accessor for AnyDisplayRepresentationImageCache()
{
  uint64_t result = qword_2698CB0A8;
  if (!qword_2698CB0A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_24E2BFB74()
{
  sub_24E2BFC1C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_24E2BFC1C()
{
  if (!qword_2698CB0B8)
  {
    sub_24E2F0590();
    unint64_t v0 = sub_24E2F1210();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2698CB0B8);
    }
  }
}

uint64_t sub_24E2BFC74()
{
  return v0;
}

uint64_t sub_24E2BFC80(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAC58);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

__n128 GetItemCachedLocationIntent.init(dependencies:)@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  uint64_t v4 = (char *)a2 + *(int *)(type metadata accessor for GetItemCachedLocationIntent() + 20);
  uint64_t v5 = type metadata accessor for ItemEntity();
  __n128 v7 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  __n128 result = v7;
  *a2 = v7;
  return result;
}

uint64_t type metadata accessor for GetItemCachedLocationIntent()
{
  uint64_t result = qword_2698CB0E0;
  if (!qword_2698CB0E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t GetItemCachedLocationIntent.item.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GetItemCachedLocationIntent() + 20);
  return sub_24E2BFE04(v3, a1);
}

uint64_t sub_24E2BFE04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CB0C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t GetItemCachedLocationIntent.item.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GetItemCachedLocationIntent() + 20);
  return sub_24E2BFEB0(a1, v3);
}

uint64_t sub_24E2BFEB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CB0C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*GetItemCachedLocationIntent.item.modify())()
{
  return nullsub_1;
}

uint64_t _s10FindMyCore27GetItemCachedLocationIntentV7performAC6ResultVyYaAC05FetchG5ErrorOYKF(uint64_t a1, uint64_t a2)
{
  v3[19] = v2;
  v3[20] = a2;
  v3[18] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698CB0C0);
  v3[21] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for ItemEntity();
  v3[22] = v4;
  v3[23] = *(void *)(v4 - 8);
  v3[24] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E2C0054, 0, 0);
}

uint64_t sub_24E2C0054()
{
  uint64_t v1 = *(void *)(v0 + 176);
  uint64_t v2 = *(void *)(v0 + 184);
  uint64_t v3 = *(void *)(v0 + 168);
  uint64_t v4 = *(void *)(v0 + 152);
  uint64_t ItemCachedLocationIntent = type metadata accessor for GetItemCachedLocationIntent();
  sub_24E2BFE04(v4 + *(int *)(ItemCachedLocationIntent + 20), v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    uint64_t v6 = *(unsigned char **)(v0 + 160);
    sub_24E2C045C(*(void *)(v0 + 168));
    *uint64_t v6 = 1;
    *(unsigned char *)(v0 + 208) = 1;
    sub_24E2C04BC();
    swift_willThrowTypedImpl();
    swift_task_dealloc();
    swift_task_dealloc();
    __n128 v7 = *(uint64_t (**)(void))(v0 + 8);
    return v7();
  }
  else
  {
    uint64_t v9 = *(void **)(v0 + 152);
    sub_24E2C0510(*(void *)(v0 + 168), *(void *)(v0 + 192));
    uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*v9 + *(int *)*v9);
    unint64_t v10 = (void *)swift_task_alloc();
    *(void *)(v0 + 200) = v10;
    void *v10 = v0;
    v10[1] = sub_24E2C0218;
    uint64_t v11 = *(void *)(v0 + 192);
    return v12(v0 + 16, v11, v0 + 209);
  }
}

uint64_t sub_24E2C0218()
{
  swift_task_dealloc();
  if (v0) {
    uint64_t v1 = sub_24E2C03D8;
  }
  else {
    uint64_t v1 = sub_24E2C0328;
  }
  return MEMORY[0x270FA2498](v1, 0, 0);
}

uint64_t sub_24E2C0328()
{
  uint64_t v1 = *(void *)(v0 + 144);
  sub_24E2C0574(*(void *)(v0 + 192));
  long long v2 = *(_OWORD *)(v0 + 16);
  long long v3 = *(_OWORD *)(v0 + 32);
  long long v4 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v1 + 32) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v1 + 48) = v4;
  *(_OWORD *)uint64_t v1 = v2;
  *(_OWORD *)(v1 + 16) = v3;
  long long v5 = *(_OWORD *)(v0 + 80);
  long long v6 = *(_OWORD *)(v0 + 96);
  long long v7 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v1 + 112) = v7;
  *(_OWORD *)(v1 + 64) = v5;
  *(_OWORD *)(v1 + 80) = v6;
  *(unsigned char *)(v1 + 128) = 1;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_24E2C03D8()
{
  uint64_t v1 = *(unsigned char **)(v0 + 160);
  sub_24E2C0574(*(void *)(v0 + 192));
  *uint64_t v1 = *(unsigned char *)(v0 + 209);
  swift_task_dealloc();
  swift_task_dealloc();
  long long v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_24E2C045C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CB0C0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_24E2C04BC()
{
  unint64_t result = qword_2698CB0D0;
  if (!qword_2698CB0D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB0D0);
  }
  return result;
}

uint64_t sub_24E2C0510(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ItemEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24E2C0574(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ItemEntity();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL static GetItemCachedLocationIntent.FetchLocationError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t GetItemCachedLocationIntent.FetchLocationError.hash(into:)()
{
  return sub_24E2F14B0();
}

uint64_t GetItemCachedLocationIntent.FetchLocationError.hashValue.getter()
{
  return sub_24E2F14D0();
}

void **GetItemCachedLocationIntent.Result.location.getter@<X0>(_OWORD *a1@<X8>)
{
  long long v3 = v1[5];
  long long v13 = v1[4];
  long long v2 = v13;
  long long v14 = v3;
  long long v5 = v1[7];
  long long v15 = v1[6];
  long long v4 = v15;
  long long v16 = v5;
  long long v6 = v1[1];
  v10[0] = *v1;
  v10[1] = v6;
  long long v8 = v1[3];
  long long v11 = v1[2];
  long long v7 = v11;
  long long v12 = v8;
  *a1 = v10[0];
  a1[1] = v6;
  a1[2] = v7;
  a1[3] = v8;
  a1[4] = v2;
  a1[5] = v3;
  a1[6] = v4;
  a1[7] = v5;
  return sub_24E2C06B0((void **)v10);
}

void **sub_24E2C06B0(void **a1)
{
  long long v2 = *a1;
  swift_bridgeObjectRetain();
  id v3 = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t GetItemCachedLocationIntent.Result.value.getter()
{
  return *(unsigned __int8 *)(v0 + 128);
}

uint64_t GetItemCachedLocationIntent.Result.value.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 128) = result & 1;
  return result;
}

uint64_t (*GetItemCachedLocationIntent.Result.value.modify())()
{
  return nullsub_1;
}

unint64_t sub_24E2C077C()
{
  unint64_t result = qword_2698CB0D8;
  if (!qword_2698CB0D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB0D8);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for GetItemCachedLocationIntent(void *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *a1 = v5;
    a1 = (void *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = v5;
    a1[1] = v6;
    uint64_t v7 = *(int *)(a3 + 20);
    long long v8 = (void *)((char *)a1 + v7);
    uint64_t v9 = (uint64_t *)((char *)a2 + v7);
    uint64_t v10 = type metadata accessor for ItemEntity();
    uint64_t v11 = *(void *)(v10 - 8);
    long long v12 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48);
    swift_retain();
    if (v12(v9, 1, v10))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CB0C0);
      memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      uint64_t v14 = v9[1];
      *long long v8 = *v9;
      v8[1] = v14;
      long long v15 = (int *)type metadata accessor for Beacon();
      uint64_t v16 = v15[5];
      uint64_t v40 = (char *)v8 + v16;
      uint64_t v42 = v11;
      uint64_t v17 = (char *)v9 + v16;
      uint64_t v18 = sub_24E2F0990();
      uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
      swift_bridgeObjectRetain();
      v19(v40, v17, v18);
      uint64_t v20 = v15[6];
      uint64_t v21 = (void *)((char *)v8 + v20);
      uint64_t v22 = (void *)((char *)v9 + v20);
      uint64_t v23 = v22[1];
      *uint64_t v21 = *v22;
      v21[1] = v23;
      uint64_t v24 = v15[7];
      unint64_t v25 = (char *)v8 + v24;
      uint64_t v26 = (char *)v9 + v24;
      uint64_t v27 = *(void *)v26;
      uint64_t v37 = *(void *)v26;
      uint64_t v38 = *((void *)v26 + 1);
      unint64_t v39 = v15;
      uint64_t v28 = *((void *)v26 + 2);
      uint64_t v29 = *((void *)v26 + 3);
      uint64_t v41 = v10;
      uint64_t v30 = *((void *)v26 + 4);
      uint64_t v31 = *((void *)v26 + 5);
      uint64_t v32 = v8;
      char v33 = v26[48];
      swift_bridgeObjectRetain();
      sub_24E2A3364(v27, v38, v28, v29, v30, v31, v33);
      *(void *)unint64_t v25 = v37;
      *((void *)v25 + 1) = v38;
      *((void *)v25 + 2) = v28;
      *((void *)v25 + 3) = v29;
      *((void *)v25 + 4) = v30;
      *((void *)v25 + 5) = v31;
      v25[48] = v33;
      *((unsigned char *)v32 + v39[8]) = *((unsigned char *)v9 + v39[8]);
      *((unsigned char *)v32 + v39[9]) = *((unsigned char *)v9 + v39[9]);
      uint64_t v34 = type metadata accessor for Item();
      *((unsigned char *)v32 + *(int *)(v34 + 20)) = *((unsigned char *)v9 + *(int *)(v34 + 20));
      *(void *)((char *)v32 + *(int *)(v41 + 20)) = *(void *)((char *)v9 + *(int *)(v41 + 20));
      uint64_t v35 = *(void (**)(void *, void, uint64_t, uint64_t))(v42 + 56);
      swift_retain();
      v35(v32, 0, 1, v41);
    }
  }
  return a1;
}

uint64_t destroy for GetItemCachedLocationIntent(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for ItemEntity();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5);
  if (!result)
  {
    swift_bridgeObjectRelease();
    uint64_t v7 = type metadata accessor for Beacon();
    uint64_t v8 = v4 + *(int *)(v7 + 20);
    uint64_t v9 = sub_24E2F0990();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
    swift_bridgeObjectRelease();
    uint64_t v10 = v4 + *(int *)(v7 + 28);
    sub_24E2A3478(*(void *)v10, *(void *)(v10 + 8), *(void *)(v10 + 16), *(void *)(v10 + 24), *(void *)(v10 + 32), *(void *)(v10 + 40), *(unsigned char *)(v10 + 48));
    return swift_release();
  }
  return result;
}

void *initializeWithCopy for GetItemCachedLocationIntent(void *a1, void *a2, uint64_t a3)
{
  id v3 = a1;
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (void *)((char *)a1 + v5);
  uint64_t v7 = (void *)((char *)a2 + v5);
  uint64_t v8 = type metadata accessor for ItemEntity();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v9 + 48);
  swift_retain();
  if (v10(v7, 1, v8))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CB0C0);
    memcpy(v6, v7, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    uint64_t v12 = v7[1];
    *uint64_t v6 = *v7;
    v6[1] = v12;
    uint64_t v13 = (int *)type metadata accessor for Beacon();
    uint64_t v14 = v13[5];
    uint64_t v37 = (char *)v6 + v14;
    uint64_t v39 = v9;
    long long v15 = (char *)v7 + v14;
    uint64_t v16 = sub_24E2F0990();
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
    swift_bridgeObjectRetain();
    v17(v37, v15, v16);
    unint64_t v36 = v13;
    uint64_t v38 = v8;
    uint64_t v18 = v13[6];
    uint64_t v19 = (void *)((char *)v6 + v18);
    uint64_t v20 = (void *)((char *)v7 + v18);
    uint64_t v21 = v20[1];
    void *v19 = *v20;
    v19[1] = v21;
    uint64_t v22 = v13[7];
    uint64_t v23 = (char *)v6 + v22;
    uint64_t v24 = (char *)v7 + v22;
    uint64_t v25 = *(void *)v24;
    uint64_t v26 = *((void *)v24 + 1);
    uint64_t v27 = *((void *)v24 + 2);
    uint64_t v28 = *((void *)v24 + 3);
    uint64_t v29 = *((void *)v24 + 4);
    uint64_t v30 = *((void *)v24 + 5);
    uint64_t v35 = v3;
    char v31 = v24[48];
    swift_bridgeObjectRetain();
    sub_24E2A3364(v25, v26, v27, v28, v29, v30, v31);
    *(void *)uint64_t v23 = v25;
    *((void *)v23 + 1) = v26;
    *((void *)v23 + 2) = v27;
    *((void *)v23 + 3) = v28;
    *((void *)v23 + 4) = v29;
    *((void *)v23 + 5) = v30;
    v23[48] = v31;
    id v3 = v35;
    *((unsigned char *)v6 + v36[8]) = *((unsigned char *)v7 + v36[8]);
    *((unsigned char *)v6 + v36[9]) = *((unsigned char *)v7 + v36[9]);
    uint64_t v32 = type metadata accessor for Item();
    *((unsigned char *)v6 + *(int *)(v32 + 20)) = *((unsigned char *)v7 + *(int *)(v32 + 20));
    *(void *)((char *)v6 + *(int *)(v38 + 20)) = *(void *)((char *)v7 + *(int *)(v38 + 20));
    char v33 = *(void (**)(void *, void, uint64_t, uint64_t))(v39 + 56);
    swift_retain();
    v33(v6, 0, 1, v38);
  }
  return v3;
}

void *assignWithCopy for GetItemCachedLocationIntent(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  uint64_t v10 = type metadata accessor for ItemEntity();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      *uint64_t v8 = *v9;
      v8[1] = v9[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v36 = type metadata accessor for Beacon();
      uint64_t v37 = *(int *)(v36 + 20);
      uint64_t v38 = v36;
      uint64_t v69 = v36;
      uint64_t v39 = (char *)v8 + v37;
      uint64_t v40 = (char *)v9 + v37;
      uint64_t v41 = sub_24E2F0990();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 24))(v39, v40, v41);
      uint64_t v42 = *(int *)(v38 + 24);
      char v43 = (void *)((char *)v8 + v42);
      uint64_t v44 = (void *)((char *)v9 + v42);
      *char v43 = *v44;
      v43[1] = v44[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v45 = *(int *)(v38 + 28);
      uint64_t v46 = (char *)v8 + v45;
      uint64_t v47 = (char *)v9 + v45;
      uint64_t v48 = *(void *)v47;
      uint64_t v49 = *((void *)v47 + 1);
      uint64_t v50 = *((void *)v47 + 2);
      uint64_t v51 = *((void *)v47 + 3);
      uint64_t v52 = *((void *)v47 + 4);
      uint64_t v64 = *((void *)v47 + 5);
      char v67 = v47[48];
      sub_24E2A3364(*(void *)v47, v49, v50, v51, v52, v64, v67);
      uint64_t v53 = *(void *)v46;
      uint64_t v54 = *((void *)v46 + 1);
      uint64_t v55 = *((void *)v46 + 2);
      uint64_t v56 = *((void *)v46 + 3);
      uint64_t v57 = *((void *)v46 + 4);
      uint64_t v58 = *((void *)v46 + 5);
      *(void *)uint64_t v46 = v48;
      *((void *)v46 + 1) = v49;
      *((void *)v46 + 2) = v50;
      *((void *)v46 + 3) = v51;
      *((void *)v46 + 4) = v52;
      *((void *)v46 + 5) = v64;
      char v59 = v46[48];
      v46[48] = v67;
      sub_24E2A3478(v53, v54, v55, v56, v57, v58, v59);
      *((unsigned char *)v8 + *(int *)(v69 + 32)) = *((unsigned char *)v9 + *(int *)(v69 + 32));
      *((unsigned char *)v8 + *(int *)(v69 + 36)) = *((unsigned char *)v9 + *(int *)(v69 + 36));
      uint64_t v60 = type metadata accessor for Item();
      *((unsigned char *)v8 + *(int *)(v60 + 20)) = *((unsigned char *)v9 + *(int *)(v60 + 20));
      *(void *)((char *)v8 + *(int *)(v10 + 20)) = *(void *)((char *)v9 + *(int *)(v10 + 20));
      swift_retain();
      swift_release();
      return a1;
    }
    sub_24E2C0574((uint64_t)v8);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CB0C0);
    memcpy(v8, v9, *(void *)(*(void *)(v34 - 8) + 64));
    return a1;
  }
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  long long v15 = (int *)type metadata accessor for Beacon();
  uint64_t v16 = v15[5];
  unint64_t v62 = (char *)v9 + v16;
  uint64_t v65 = (char *)v8 + v16;
  uint64_t v17 = sub_24E2F0990();
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
  swift_bridgeObjectRetain();
  v18(v65, v62, v17);
  uint64_t v66 = v10;
  uint64_t v68 = v15;
  uint64_t v19 = v15[6];
  uint64_t v20 = (void *)((char *)v8 + v19);
  uint64_t v21 = (void *)((char *)v9 + v19);
  *uint64_t v20 = *v21;
  v20[1] = v21[1];
  uint64_t v22 = v15[7];
  uint64_t v23 = (char *)v8 + v22;
  uint64_t v24 = (char *)v9 + v22;
  uint64_t v25 = *(void *)v24;
  uint64_t v26 = *((void *)v24 + 1);
  uint64_t v28 = *((void *)v24 + 2);
  uint64_t v27 = *((void *)v24 + 3);
  uint64_t v61 = v11;
  uint64_t v63 = a1;
  uint64_t v30 = *((void *)v24 + 4);
  uint64_t v29 = *((void *)v24 + 5);
  char v31 = v24[48];
  swift_bridgeObjectRetain();
  sub_24E2A3364(v25, v26, v28, v27, v30, v29, v31);
  *(void *)uint64_t v23 = v25;
  *((void *)v23 + 1) = v26;
  *((void *)v23 + 2) = v28;
  *((void *)v23 + 3) = v27;
  *((void *)v23 + 4) = v30;
  *((void *)v23 + 5) = v29;
  a1 = v63;
  v23[48] = v31;
  *((unsigned char *)v8 + v68[8]) = *((unsigned char *)v9 + v68[8]);
  *((unsigned char *)v8 + v68[9]) = *((unsigned char *)v9 + v68[9]);
  uint64_t v32 = type metadata accessor for Item();
  *((unsigned char *)v8 + *(int *)(v32 + 20)) = *((unsigned char *)v9 + *(int *)(v32 + 20));
  *(void *)((char *)v8 + *(int *)(v66 + 20)) = *(void *)((char *)v9 + *(int *)(v66 + 20));
  char v33 = *(void (**)(void *, void, uint64_t, uint64_t))(v61 + 56);
  swift_retain();
  v33(v8, 0, 1, v66);
  return a1;
}

_OWORD *initializeWithTake for GetItemCachedLocationIntent(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (_OWORD *)((char *)a1 + v4);
  uint64_t v6 = (_OWORD *)((char *)a2 + v4);
  uint64_t v7 = type metadata accessor for ItemEntity();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CB0C0);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    *uint64_t v5 = *v6;
    uint64_t v10 = (int *)type metadata accessor for Beacon();
    uint64_t v11 = v10[5];
    uint64_t v12 = (char *)v5 + v11;
    int v13 = (char *)v6 + v11;
    uint64_t v14 = sub_24E2F0990();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    *(_OWORD *)((char *)v5 + v10[6]) = *(_OWORD *)((char *)v6 + v10[6]);
    uint64_t v15 = v10[7];
    uint64_t v16 = (char *)v5 + v15;
    uint64_t v17 = (char *)v6 + v15;
    long long v18 = *((_OWORD *)v17 + 1);
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
    *((_OWORD *)v16 + 1) = v18;
    *((_OWORD *)v16 + 2) = *((_OWORD *)v17 + 2);
    v16[48] = v17[48];
    *((unsigned char *)v5 + v10[8]) = *((unsigned char *)v6 + v10[8]);
    *((unsigned char *)v5 + v10[9]) = *((unsigned char *)v6 + v10[9]);
    uint64_t v19 = type metadata accessor for Item();
    *((unsigned char *)v5 + *(int *)(v19 + 20)) = *((unsigned char *)v6 + *(int *)(v19 + 20));
    *(void *)((char *)v5 + *(int *)(v7 + 20)) = *(void *)((char *)v6 + *(int *)(v7 + 20));
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

_OWORD *assignWithTake for GetItemCachedLocationIntent(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  uint64_t v9 = type metadata accessor for ItemEntity();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      uint64_t v26 = v8[1];
      *uint64_t v7 = *v8;
      v7[1] = v26;
      swift_bridgeObjectRelease();
      uint64_t v27 = (int *)type metadata accessor for Beacon();
      uint64_t v28 = v27[5];
      uint64_t v29 = (char *)v7 + v28;
      uint64_t v30 = (char *)v8 + v28;
      uint64_t v31 = sub_24E2F0990();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 40))(v29, v30, v31);
      uint64_t v32 = v27[6];
      char v33 = (void *)((char *)v7 + v32);
      uint64_t v34 = (void *)((char *)v8 + v32);
      uint64_t v36 = *v34;
      uint64_t v35 = v34[1];
      *char v33 = v36;
      v33[1] = v35;
      swift_bridgeObjectRelease();
      uint64_t v37 = v27[7];
      uint64_t v38 = (char *)v7 + v37;
      uint64_t v39 = (char *)v8 + v37;
      char v40 = v39[48];
      uint64_t v41 = *(void *)v38;
      uint64_t v42 = *((void *)v38 + 1);
      uint64_t v43 = *((void *)v38 + 2);
      uint64_t v44 = *((void *)v38 + 3);
      uint64_t v45 = *((void *)v38 + 4);
      uint64_t v46 = *((void *)v38 + 5);
      long long v47 = *((_OWORD *)v39 + 1);
      *(_OWORD *)uint64_t v38 = *(_OWORD *)v39;
      *((_OWORD *)v38 + 1) = v47;
      *((_OWORD *)v38 + 2) = *((_OWORD *)v39 + 2);
      char v48 = v38[48];
      v38[48] = v40;
      sub_24E2A3478(v41, v42, v43, v44, v45, v46, v48);
      *((unsigned char *)v7 + v27[8]) = *((unsigned char *)v8 + v27[8]);
      *((unsigned char *)v7 + v27[9]) = *((unsigned char *)v8 + v27[9]);
      uint64_t v49 = type metadata accessor for Item();
      *((unsigned char *)v7 + *(int *)(v49 + 20)) = *((unsigned char *)v8 + *(int *)(v49 + 20));
      *(void *)((char *)v7 + *(int *)(v9 + 20)) = *(void *)((char *)v8 + *(int *)(v9 + 20));
      swift_release();
      return a1;
    }
    sub_24E2C0574((uint64_t)v7);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CB0C0);
    memcpy(v7, v8, *(void *)(*(void *)(v24 - 8) + 64));
    return a1;
  }
  *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
  uint64_t v14 = (int *)type metadata accessor for Beacon();
  uint64_t v15 = v14[5];
  uint64_t v16 = (char *)v7 + v15;
  uint64_t v17 = (char *)v8 + v15;
  uint64_t v18 = sub_24E2F0990();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  *(_OWORD *)((char *)v7 + v14[6]) = *(_OWORD *)((char *)v8 + v14[6]);
  uint64_t v19 = v14[7];
  uint64_t v20 = (char *)v7 + v19;
  uint64_t v21 = (char *)v8 + v19;
  long long v22 = *((_OWORD *)v21 + 1);
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  *((_OWORD *)v20 + 1) = v22;
  *((_OWORD *)v20 + 2) = *((_OWORD *)v21 + 2);
  v20[48] = v21[48];
  *((unsigned char *)v7 + v14[8]) = *((unsigned char *)v8 + v14[8]);
  *((unsigned char *)v7 + v14[9]) = *((unsigned char *)v8 + v14[9]);
  uint64_t v23 = type metadata accessor for Item();
  *((unsigned char *)v7 + *(int *)(v23 + 20)) = *((unsigned char *)v8 + *(int *)(v23 + 20));
  *(void *)((char *)v7 + *(int *)(v9 + 20)) = *(void *)((char *)v8 + *(int *)(v9 + 20));
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for GetItemCachedLocationIntent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24E2C1660);
}

uint64_t sub_24E2C1660(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CB0C0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for GetItemCachedLocationIntent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24E2C1728);
}

void *sub_24E2C1728(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CB0C0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_24E2C17D4()
{
  sub_24E2C1870();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_24E2C1870()
{
  if (!qword_2698CB0F0)
  {
    type metadata accessor for ItemEntity();
    unint64_t v0 = sub_24E2F1210();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2698CB0F0);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for GetItemCachedLocationIntent.FetchLocationError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E2C1994);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GetItemCachedLocationIntent.FetchLocationError()
{
  return &type metadata for GetItemCachedLocationIntent.FetchLocationError;
}

uint64_t destroy for PublishedLocation(id *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for GetItemCachedLocationIntent.Result(uint64_t a1, uint64_t a2)
{
  int v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  uint64_t v9 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v9;
  uint64_t v10 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v10;
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  id v11 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for GetItemCachedLocationIntent.Result(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  return a1;
}

__n128 __swift_memcpy129_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t assignWithTake for GetItemCachedLocationIntent.Result(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v11;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  return a1;
}

uint64_t getEnumTagSinglePayload for GetItemCachedLocationIntent.Result(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 129)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GetItemCachedLocationIntent.Result(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 128) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 129) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 129) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GetItemCachedLocationIntent.Result()
{
  return &type metadata for GetItemCachedLocationIntent.Result;
}

uint64_t _s10FindMyCore27GetItemCachedLocationIntentV12DependenciesV05fetchG0yAA09PublishedG0VAA0E6EntityVYaYbAC05FetchG5ErrorOYKcvg()
{
  uint64_t v1 = *v0;
  swift_retain();
  return v1;
}

uint64_t _s10FindMyCore27GetItemCachedLocationIntentV12DependenciesV05fetchG0AeA09PublishedG0VAA0E6EntityVYaYbAC05FetchG5ErrorOYKc_tcfC@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

ValueMetadata *type metadata accessor for GetItemCachedLocationIntent.Dependencies()
{
  return &type metadata for GetItemCachedLocationIntent.Dependencies;
}

void static GetItemCachedLocationIntent.Dependencies.live()(void *a1@<X8>)
{
  *a1 = &unk_2698CB0F8;
  a1[1] = 0;
}

uint64_t sub_24E2C1E44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[21] = a2;
  v3[22] = a3;
  v3[20] = a1;
  uint64_t v4 = sub_24E2F0B70();
  v3[23] = v4;
  v3[24] = *(void *)(v4 - 8);
  v3[25] = swift_task_alloc();
  uint64_t v5 = sub_24E2F0B80();
  v3[26] = v5;
  v3[27] = *(void *)(v5 - 8);
  v3[28] = swift_task_alloc();
  v3[29] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698CB100);
  v3[30] = swift_task_alloc();
  uint64_t v6 = sub_24E2F0AB0();
  v3[31] = v6;
  v3[32] = *(void *)(v6 - 8);
  v3[33] = swift_task_alloc();
  uint64_t v7 = sub_24E2F0A10();
  v3[34] = v7;
  v3[35] = *(void *)(v7 - 8);
  v3[36] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698CA618);
  v3[37] = swift_task_alloc();
  sub_24E2F0930();
  v3[38] = swift_task_alloc();
  uint64_t v8 = sub_24E2F0CC0();
  v3[39] = v8;
  v3[40] = *(void *)(v8 - 8);
  v3[41] = swift_task_alloc();
  v3[42] = swift_task_alloc();
  v3[43] = swift_task_alloc();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CB108);
  v3[44] = v9;
  v3[45] = *(void *)(v9 - 8);
  v3[46] = swift_task_alloc();
  type metadata accessor for Beacon.BAIdentifier();
  v3[47] = swift_task_alloc();
  type metadata accessor for Item();
  v3[48] = swift_task_alloc();
  uint64_t v10 = sub_24E2F0990();
  v3[49] = v10;
  v3[50] = *(void *)(v10 - 8);
  v3[51] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E2C2244, 0, 0);
}

uint64_t sub_24E2C2244()
{
  uint64_t v2 = v0[50];
  uint64_t v1 = v0[51];
  uint64_t v4 = v0[48];
  uint64_t v3 = v0[49];
  uint64_t v5 = v0[47];
  uint64_t v6 = v0[21];
  id v51 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F66168]), sel_init);
  v0[52] = v51;
  sub_24E2C3C60(v6, v4, (uint64_t (*)(void))type metadata accessor for Item);
  uint64_t v7 = type metadata accessor for Beacon();
  sub_24E2C3C60(v4 + *(int *)(v7 + 20), v5, (uint64_t (*)(void))type metadata accessor for Beacon.BAIdentifier);
  sub_24E2C3CC8(v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v1, v5, v3);
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F66150]), sel_init);
  v0[53] = v8;
  objc_msgSend(v8, sel_setSubscribe_, 0);
  objc_msgSend(v8, sel_setCachePolicy_, *MEMORY[0x263F66210]);
  if (qword_2698CA498 != -1) {
    swift_once();
  }
  uint64_t v9 = v0[50];
  uint64_t v10 = v0[51];
  uint64_t v11 = v0[49];
  uint64_t v50 = v0[45];
  uint64_t v48 = v0[44];
  uint64_t v49 = v0[46];
  type metadata accessor for SPBeaconType(0);
  uint64_t v12 = (void *)sub_24E2F1020();
  objc_msgSend(v8, sel_setSearchTypes_, v12);

  __swift_instantiateConcreteTypeFromMangledName(&qword_2698CB110);
  unint64_t v13 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_24E2F1C10;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v9 + 16))(v14 + v13, v10, v11);
  uint64_t v15 = (void *)sub_24E2F1020();
  swift_bridgeObjectRelease();
  objc_msgSend(v8, sel_setSearchIdentifiers_, v15);

  __swift_instantiateConcreteTypeFromMangledName(&qword_2698CB118);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_24E2F2E50;
  uint64_t v17 = (void *)*MEMORY[0x263F66198];
  uint64_t v18 = (void *)*MEMORY[0x263F661A0];
  *(void *)(v16 + 32) = *MEMORY[0x263F66198];
  *(void *)(v16 + 40) = v18;
  uint64_t v19 = (void *)*MEMORY[0x263F661A8];
  uint64_t v20 = (void *)*MEMORY[0x263F661B0];
  *(void *)(v16 + 48) = *MEMORY[0x263F661A8];
  *(void *)(v16 + 56) = v20;
  id v47 = v8;
  uint64_t v21 = (void *)*MEMORY[0x263F661B8];
  long long v22 = (void *)*MEMORY[0x263F661C0];
  *(void *)(v16 + 64) = *MEMORY[0x263F661B8];
  *(void *)(v16 + 72) = v22;
  uint64_t v23 = (void *)*MEMORY[0x263F661C8];
  uint64_t v43 = (void *)*MEMORY[0x263F661D0];
  uint64_t v24 = *MEMORY[0x263F661D0];
  *(void *)(v16 + 80) = *MEMORY[0x263F661C8];
  *(void *)(v16 + 88) = v24;
  uint64_t v25 = (void *)*MEMORY[0x263F661D8];
  uint64_t v45 = (void *)*MEMORY[0x263F661E8];
  uint64_t v26 = *MEMORY[0x263F661E8];
  *(void *)(v16 + 96) = *MEMORY[0x263F661D8];
  *(void *)(v16 + 104) = v26;
  uint64_t v44 = (void *)*MEMORY[0x263F661F0];
  uint64_t v46 = (void *)*MEMORY[0x263F661E0];
  uint64_t v27 = *MEMORY[0x263F661E0];
  *(void *)(v16 + 112) = *MEMORY[0x263F661F0];
  *(void *)(v16 + 120) = v27;
  type metadata accessor for SPBeaconLocationSource(0);
  id v28 = v17;
  id v29 = v18;
  id v30 = v19;
  id v31 = v20;
  id v32 = v21;
  id v33 = v22;
  id v34 = v23;
  id v35 = v43;
  id v36 = v25;
  id v37 = v45;
  id v38 = v44;
  id v39 = v46;
  char v40 = (void *)sub_24E2F1020();
  swift_bridgeObjectRelease();
  objc_msgSend(v47, sel_setSearchLocationSources_, v40);

  v0[2] = v0;
  v0[7] = v0 + 18;
  v0[3] = sub_24E2C274C;
  swift_continuation_init();
  v0[17] = v48;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v0 + 14);
  sub_24E2B1EAC(0, &qword_2698CB120);
  v0[54] = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CB128);
  sub_24E2F10F0();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v50 + 32))(boxed_opaque_existential_1, v49, v48);
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 1107296256;
  v0[12] = sub_24E2C3D24;
  v0[13] = &block_descriptor_0;
  objc_msgSend(v51, sel_locationForContext_completion_, v47);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_24E2C274C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 440) = v1;
  if (v1) {
    uint64_t v2 = sub_24E2C3590;
  }
  else {
    uint64_t v2 = sub_24E2C285C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24E2C285C()
{
  uint64_t v1 = *(void **)(v0 + 144);
  *(void *)(v0 + 448) = v1;
  id v2 = objc_msgSend(v1, sel_locationsByBeaconIdentifier);
  sub_24E2B1EAC(0, &qword_2698CB130);
  sub_24E2C3DE0();
  uint64_t v3 = sub_24E2F0D80();

  if (*(void *)(v3 + 16) && (unint64_t v4 = sub_24E2C9B44(*(void *)(v0 + 408)), (v5 & 1) != 0))
  {
    uint64_t v6 = *(void *)(v0 + 320);
    uint64_t v35 = *(void *)(v0 + 344);
    uint64_t v36 = *(void *)(v0 + 328);
    uint64_t v38 = *(void *)(v0 + 312);
    uint64_t v8 = *(void *)(v0 + 288);
    uint64_t v7 = *(void *)(v0 + 296);
    uint64_t v9 = *(void *)(v0 + 280);
    uint64_t v10 = *(void *)(v0 + 256);
    uint64_t v11 = *(void *)(v0 + 264);
    uint64_t v12 = *(void **)(*(void *)(v3 + 56) + 8 * v4);
    *(void *)(v0 + 456) = v12;
    id v13 = v12;
    swift_bridgeObjectRelease();
    objc_msgSend(v13, sel_latitude);
    objc_msgSend(v13, sel_longitude);
    objc_msgSend(v13, sel_horizontalAccuracy);
    id v14 = objc_msgSend(v13, sel_timestamp);
    sub_24E2F0920();

    uint64_t v15 = sub_24E2F0D40();
    *(void *)(v0 + 464) = v15;
    uint64_t v16 = *(void *)(v15 - 8);
    uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56);
    *(void *)(v0 + 472) = v17;
    *(void *)(v0 + 480) = (v16 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    v17(v7, 1, 1, v15);
    *(_DWORD *)(v0 + 576) = *MEMORY[0x263F3CD28];
    uint64_t v18 = *(void (**)(uint64_t))(v9 + 104);
    *(void *)(v0 + 488) = v18;
    *(void *)(v0 + 496) = (v9 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
    v18(v8);
    *(_DWORD *)(v0 + 580) = *MEMORY[0x263F3CDB0];
    uint64_t v19 = *(void (**)(uint64_t))(v10 + 104);
    *(void *)(v0 + 504) = v19;
    *(void *)(v0 + 512) = (v10 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
    v19(v11);
    sub_24E2F0C80();
    sub_24E2F0A50();
    swift_allocObject();
    *(void *)(v0 + 520) = sub_24E2F0A40();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v36, v35, v38);
    sub_24E2F0AD0();
    swift_allocObject();
    uint64_t v20 = sub_24E2F0AC0();
    *(void *)(v0 + 528) = v20;
    id v39 = (uint64_t (*)(uint64_t, uint64_t))((int)*MEMORY[0x263F3CD50] + MEMORY[0x263F3CD50]);
    uint64_t v21 = (void *)swift_task_alloc();
    *(void *)(v0 + 536) = v21;
    *uint64_t v21 = v0;
    v21[1] = sub_24E2C2DD0;
    uint64_t v22 = *(void *)(v0 + 336);
    return v39(v22, v20);
  }
  else
  {
    uint64_t v24 = *(void **)(v0 + 416);
    uint64_t v25 = *(void **)(v0 + 424);
    uint64_t v26 = *(void *)(v0 + 400);
    uint64_t v37 = *(void *)(v0 + 408);
    uint64_t v27 = *(void *)(v0 + 392);
    swift_bridgeObjectRelease();
    sub_24E2C04BC();
    id v28 = (void *)swift_allocError();
    *id v29 = 0;
    swift_willThrow();

    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v37, v27);
    *(void *)(v0 + 152) = v28;
    id v30 = v28;
    if ((swift_dynamicCast() & 1) != 0 && (*(unsigned char *)(v0 + 584) & 1) == 0)
    {
      id v33 = *(unsigned char **)(v0 + 176);

      *id v33 = 0;
      *(unsigned char *)(v0 + 586) = 0;
      swift_willThrowTypedImpl();
      id v32 = *(void **)(v0 + 152);
    }
    else
    {
      id v31 = *(unsigned char **)(v0 + 176);

      *id v31 = 1;
      *(unsigned char *)(v0 + 585) = 1;
      swift_willThrowTypedImpl();
      id v32 = v28;
    }

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v34 = *(uint64_t (**)(void))(v0 + 8);
    return v34();
  }
}

uint64_t sub_24E2C2DD0()
{
  *(void *)(*(void *)v1 + 544) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0) {
    id v2 = sub_24E2C37A8;
  }
  else {
    id v2 = sub_24E2C2F04;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24E2C2F04()
{
  uint64_t v1 = v0[30];
  sub_24E2F0A70();
  uint64_t v2 = sub_24E2F09B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v0[69] = sub_24E2F0A60();
  sub_24E2F0950();
  sub_24E295410(MEMORY[0x263F8EE78]);
  sub_24E2F0B50();
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void))((int)*MEMORY[0x263F3CD68] + MEMORY[0x263F3CD68]);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[70] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_24E2C307C;
  uint64_t v4 = v0[42];
  uint64_t v5 = v0[29];
  uint64_t v6 = v0[25];
  return v8(v5, v6, v4, 0);
}

uint64_t sub_24E2C307C()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 568) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[24] + 8))(v2[25], v2[23]);
  if (v0) {
    uint64_t v3 = sub_24E2C39F4;
  }
  else {
    uint64_t v3 = sub_24E2C31E4;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_24E2C31E4()
{
  unsigned int v22 = *(_DWORD *)(v0 + 580);
  uint64_t v23 = *(void (**)(uint64_t, void, uint64_t))(v0 + 504);
  unsigned int v19 = *(_DWORD *)(v0 + 576);
  uint64_t v20 = *(void (**)(uint64_t, void, uint64_t))(v0 + 488);
  uint64_t v17 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 472);
  uint64_t v1 = *(void **)(v0 + 456);
  uint64_t v16 = *(void *)(v0 + 464);
  uint64_t v24 = *(void **)(v0 + 448);
  uint64_t v25 = *(void **)(v0 + 424);
  uint64_t v26 = *(void **)(v0 + 416);
  uint64_t v30 = *(void *)(v0 + 392);
  uint64_t v31 = *(void *)(v0 + 408);
  uint64_t v2 = *(void *)(v0 + 336);
  uint64_t v28 = *(void *)(v0 + 344);
  uint64_t v29 = *(void *)(v0 + 400);
  uint64_t v3 = *(void *)(v0 + 320);
  uint64_t v21 = *(void *)(v0 + 328);
  uint64_t v27 = *(void *)(v0 + 312);
  uint64_t v12 = *(void *)(v0 + 296);
  uint64_t v32 = *(void *)(v0 + 288);
  uint64_t v13 = *(void *)(v0 + 272);
  uint64_t v14 = *(void *)(v0 + 264);
  uint64_t v15 = *(void *)(v0 + 248);
  uint64_t v4 = *(void *)(v0 + 232);
  uint64_t v5 = *(void *)(v0 + 216);
  uint64_t v6 = *(void *)(v0 + 224);
  uint64_t v7 = *(void *)(v0 + 208);
  uint64_t v18 = *(void *)(v0 + 160);
  sub_24E2F0C90();
  sub_24E2F0CA0();
  sub_24E2F0C20();
  id v8 = objc_msgSend(v1, sel_timestamp);
  sub_24E2F0920();

  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v6, v4, v7);
  sub_24E2F0D30();
  v17(v12, 0, 1, v16);
  v20(v32, v19, v13);
  v23(v14, v22, v15);
  sub_24E2F0C80();
  Location.fmuiPublishedLocation.getter(v18);

  swift_release();
  swift_release();

  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v9(v21, v27);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v7);
  v9(v2, v27);
  v9(v28, v27);
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v31, v30);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_24E2C3590()
{
  uint64_t v2 = *(void **)(v0 + 416);
  uint64_t v1 = *(void **)(v0 + 424);
  uint64_t v4 = *(void *)(v0 + 400);
  uint64_t v3 = *(void *)(v0 + 408);
  uint64_t v5 = *(void *)(v0 + 392);
  swift_willThrow();

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void **)(v0 + 440);
  *(void *)(v0 + 152) = v6;
  id v7 = v6;
  if (swift_dynamicCast() && (*(unsigned char *)(v0 + 584) & 1) == 0)
  {
    uint64_t v10 = *(unsigned char **)(v0 + 176);

    unsigned char *v10 = 0;
    *(unsigned char *)(v0 + 586) = 0;
    sub_24E2C04BC();
    swift_willThrowTypedImpl();
    uint64_t v9 = *(void **)(v0 + 152);
  }
  else
  {
    id v8 = *(unsigned char **)(v0 + 176);

    *id v8 = 1;
    *(unsigned char *)(v0 + 585) = 1;
    sub_24E2C04BC();
    swift_willThrowTypedImpl();
    uint64_t v9 = v6;
  }

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_24E2C37A8()
{
  uint64_t v1 = *(void **)(v0 + 456);
  uint64_t v3 = *(void **)(v0 + 416);
  uint64_t v2 = *(void **)(v0 + 424);
  uint64_t v4 = *(void *)(v0 + 400);
  uint64_t v16 = *(void *)(v0 + 408);
  uint64_t v5 = *(void *)(v0 + 392);
  uint64_t v6 = *(void *)(v0 + 344);
  uint64_t v8 = *(void *)(v0 + 312);
  uint64_t v7 = *(void *)(v0 + 320);

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v16, v5);
  uint64_t v9 = *(void **)(v0 + 544);
  *(void *)(v0 + 152) = v9;
  id v10 = v9;
  if (swift_dynamicCast() && (*(unsigned char *)(v0 + 584) & 1) == 0)
  {
    uint64_t v13 = *(unsigned char **)(v0 + 176);

    *uint64_t v13 = 0;
    *(unsigned char *)(v0 + 586) = 0;
    sub_24E2C04BC();
    swift_willThrowTypedImpl();
    uint64_t v12 = *(void **)(v0 + 152);
  }
  else
  {
    uint64_t v11 = *(unsigned char **)(v0 + 176);

    *uint64_t v11 = 1;
    *(unsigned char *)(v0 + 585) = 1;
    sub_24E2C04BC();
    swift_willThrowTypedImpl();
    uint64_t v12 = v9;
  }

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

uint64_t sub_24E2C39F4()
{
  uint64_t v1 = *(void **)(v0 + 456);
  uint64_t v2 = *(void **)(v0 + 416);
  uint64_t v3 = *(void **)(v0 + 424);
  uint64_t v4 = *(void *)(v0 + 400);
  uint64_t v17 = *(void *)(v0 + 392);
  uint64_t v18 = *(void *)(v0 + 408);
  uint64_t v5 = *(void *)(v0 + 336);
  uint64_t v16 = *(void *)(v0 + 344);
  uint64_t v7 = *(void *)(v0 + 312);
  uint64_t v6 = *(void *)(v0 + 320);

  swift_release();
  swift_release();

  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v8(v5, v7);
  v8(v16, v7);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v18, v17);
  uint64_t v9 = *(void **)(v0 + 568);
  *(void *)(v0 + 152) = v9;
  id v10 = v9;
  if (swift_dynamicCast() && (*(unsigned char *)(v0 + 584) & 1) == 0)
  {
    uint64_t v13 = *(unsigned char **)(v0 + 176);

    *uint64_t v13 = 0;
    *(unsigned char *)(v0 + 586) = 0;
    sub_24E2C04BC();
    swift_willThrowTypedImpl();
    uint64_t v12 = *(void **)(v0 + 152);
  }
  else
  {
    uint64_t v11 = *(unsigned char **)(v0 + 176);

    *uint64_t v11 = 1;
    *(unsigned char *)(v0 + 585) = 1;
    sub_24E2C04BC();
    swift_willThrowTypedImpl();
    uint64_t v12 = v9;
  }

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

uint64_t sub_24E2C3C60(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24E2C3CC8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Beacon();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_24E2C3D24(uint64_t a1, void *a2, void *a3)
{
  __swift_project_boxed_opaque_existential_0((void *)(a1 + 32), *(void *)(a1 + 56));
  if (a3)
  {
    id v5 = a3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698CB108);
    sub_24E2F1100();
  }
  else if (a2)
  {
    id v6 = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698CB108);
    sub_24E2F1110();
  }
  else
  {
    __break(1u);
  }
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  return sub_24E29DBFC(a2 + 32, a1 + 32);
}

uint64_t block_destroy_helper_0(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1 + 32);
}

unint64_t sub_24E2C3DE0()
{
  unint64_t result = qword_2698CB138;
  if (!qword_2698CB138)
  {
    sub_24E2F0990();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB138);
  }
  return result;
}

void *__swift_project_boxed_opaque_existential_0(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

__n128 GetPersonCachedLocationIntent.init(dependencies:)@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  uint64_t v4 = (char *)a2 + *(int *)(type metadata accessor for GetPersonCachedLocationIntent() + 20);
  uint64_t v5 = type metadata accessor for PersonEntity();
  __n128 v7 = *a1;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  __n128 result = v7;
  *a2 = v7;
  return result;
}

uint64_t type metadata accessor for GetPersonCachedLocationIntent()
{
  uint64_t result = qword_2698CB160;
  if (!qword_2698CB160) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t GetPersonCachedLocationIntent.person.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GetPersonCachedLocationIntent() + 20);
  return sub_24E2C3FA0(v3, a1);
}

uint64_t sub_24E2C3FA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CB140);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t GetPersonCachedLocationIntent.person.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for GetPersonCachedLocationIntent() + 20);
  return sub_24E2C404C(a1, v3);
}

uint64_t sub_24E2C404C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CB140);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*GetPersonCachedLocationIntent.person.modify())()
{
  return nullsub_1;
}

uint64_t _s10FindMyCore29GetPersonCachedLocationIntentV7performAC6ResultVyYaAC05FetchG5ErrorOYKF(uint64_t a1, uint64_t a2)
{
  v3[19] = v2;
  v3[20] = a2;
  v3[18] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698CB140);
  v3[21] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for PersonEntity();
  v3[22] = v4;
  v3[23] = *(void *)(v4 - 8);
  v3[24] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E2C41F0, 0, 0);
}

uint64_t sub_24E2C41F0()
{
  uint64_t v1 = *(void *)(v0 + 176);
  uint64_t v2 = *(void *)(v0 + 184);
  uint64_t v3 = *(void *)(v0 + 168);
  uint64_t v4 = *(void *)(v0 + 152);
  uint64_t PersonCachedLocationIntent = type metadata accessor for GetPersonCachedLocationIntent();
  sub_24E2C3FA0(v4 + *(int *)(PersonCachedLocationIntent + 20), v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    uint64_t v6 = *(unsigned char **)(v0 + 160);
    sub_24E2C4620(*(void *)(v0 + 168));
    *uint64_t v6 = 1;
    *(unsigned char *)(v0 + 208) = 1;
    sub_24E2C4680();
    swift_willThrowTypedImpl();
    swift_task_dealloc();
    swift_task_dealloc();
    __n128 v7 = *(uint64_t (**)(void))(v0 + 8);
    return v7();
  }
  else
  {
    uint64_t v9 = *(void **)(v0 + 152);
    sub_24E2C46D4(*(void *)(v0 + 168), *(void *)(v0 + 192));
    uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*v9 + *(int *)*v9);
    id v10 = (void *)swift_task_alloc();
    *(void *)(v0 + 200) = v10;
    void *v10 = v0;
    v10[1] = sub_24E2C43B4;
    uint64_t v11 = *(void *)(v0 + 192);
    return v12(v0 + 16, v11, v0 + 209);
  }
}

uint64_t sub_24E2C43B4()
{
  swift_task_dealloc();
  if (v0) {
    uint64_t v1 = sub_24E2C4588;
  }
  else {
    uint64_t v1 = sub_24E2C44C4;
  }
  return MEMORY[0x270FA2498](v1, 0, 0);
}

uint64_t sub_24E2C44C4()
{
  uint64_t v1 = *(void *)(v0 + 144);
  sub_24E2C6F9C(*(void *)(v0 + 192), (uint64_t (*)(void))type metadata accessor for PersonEntity);
  long long v2 = *(_OWORD *)(v0 + 16);
  long long v3 = *(_OWORD *)(v0 + 32);
  long long v4 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v1 + 32) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v1 + 48) = v4;
  *(_OWORD *)uint64_t v1 = v2;
  *(_OWORD *)(v1 + 16) = v3;
  long long v5 = *(_OWORD *)(v0 + 80);
  long long v6 = *(_OWORD *)(v0 + 96);
  long long v7 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v1 + 112) = v7;
  *(_OWORD *)(v1 + 64) = v5;
  *(_OWORD *)(v1 + 80) = v6;
  *(unsigned char *)(v1 + 128) = 1;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_24E2C4588()
{
  uint64_t v1 = *(unsigned char **)(v0 + 160);
  sub_24E2C6F9C(*(void *)(v0 + 192), (uint64_t (*)(void))type metadata accessor for PersonEntity);
  *uint64_t v1 = *(unsigned char *)(v0 + 209);
  swift_task_dealloc();
  swift_task_dealloc();
  long long v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_24E2C4620(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CB140);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_24E2C4680()
{
  unint64_t result = qword_2698CB150;
  if (!qword_2698CB150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB150);
  }
  return result;
}

uint64_t sub_24E2C46D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PersonEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

BOOL static GetPersonCachedLocationIntent.FetchLocationError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t GetPersonCachedLocationIntent.FetchLocationError.hash(into:)()
{
  return sub_24E2F14B0();
}

uint64_t GetPersonCachedLocationIntent.FetchLocationError.hashValue.getter()
{
  return sub_24E2F14D0();
}

void **GetPersonCachedLocationIntent.Result.location.getter@<X0>(_OWORD *a1@<X8>)
{
  long long v3 = v1[5];
  long long v13 = v1[4];
  long long v2 = v13;
  long long v14 = v3;
  long long v5 = v1[7];
  long long v15 = v1[6];
  long long v4 = v15;
  long long v16 = v5;
  long long v6 = v1[1];
  v10[0] = *v1;
  v10[1] = v6;
  long long v8 = v1[3];
  long long v11 = v1[2];
  long long v7 = v11;
  long long v12 = v8;
  *a1 = v10[0];
  a1[1] = v6;
  a1[2] = v7;
  a1[3] = v8;
  a1[4] = v2;
  a1[5] = v3;
  a1[6] = v4;
  a1[7] = v5;
  return sub_24E2C06B0((void **)v10);
}

uint64_t GetPersonCachedLocationIntent.Result.value.getter()
{
  return *(unsigned __int8 *)(v0 + 128);
}

uint64_t GetPersonCachedLocationIntent.Result.value.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 128) = result & 1;
  return result;
}

uint64_t (*GetPersonCachedLocationIntent.Result.value.modify())()
{
  return nullsub_1;
}

unint64_t sub_24E2C4850()
{
  unint64_t result = qword_2698CB158;
  if (!qword_2698CB158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB158);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for GetPersonCachedLocationIntent(void *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *a1 = v5;
    a1 = (void *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
    return a1;
  }
  uint64_t v6 = a2[1];
  *a1 = v5;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 20);
  long long v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for PersonEntity();
  uint64_t v11 = *(void *)(v10 - 8);
  long long v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_retain();
  if (!v12(v9, 1, v10))
  {
    uint64_t v57 = v10;
    uint64_t v59 = v11;
    uint64_t v14 = *((void *)v9 + 1);
    *(void *)long long v8 = *(void *)v9;
    *((void *)v8 + 1) = v14;
    uint64_t v15 = *((void *)v9 + 3);
    *((void *)v8 + 2) = *((void *)v9 + 2);
    *((void *)v8 + 3) = v15;
    uint64_t v16 = *((void *)v9 + 5);
    *((void *)v8 + 4) = *((void *)v9 + 4);
    *((void *)v8 + 5) = v16;
    v8[48] = v9[48];
    uint64_t v17 = *((void *)v9 + 8);
    *((void *)v8 + 7) = *((void *)v9 + 7);
    *((void *)v8 + 8) = v17;
    *((void *)v8 + 9) = *((void *)v9 + 9);
    uint64_t v58 = type metadata accessor for Person();
    uint64_t v18 = *(int *)(v58 + 32);
    __dst = &v8[v18];
    uint64_t v19 = &v9[v18];
    uint64_t v20 = type metadata accessor for Person.Relationship.Following(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v26 = sub_24E2F0930();
      uint64_t v27 = *(void *)(v26 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v19, 1, v26))
      {
        uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        uint64_t v29 = __dst;
        memcpy(__dst, v19, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        uint64_t v29 = __dst;
        (*(void (**)(char *, char *, uint64_t))(v27 + 16))(__dst, v19, v26);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(__dst, 0, 1, v26);
      }
      uint64_t v30 = v57;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        uint64_t v29 = __dst;
        memcpy(__dst, v19, *(void *)(*(void *)(v20 - 8) + 64));
        uint64_t v30 = v57;
        goto LABEL_20;
      }
      uint64_t v22 = sub_24E2F0930();
      uint64_t v23 = *(void *)(v22 - 8);
      uint64_t v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
      if (v24(v19, 1, v22))
      {
        uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(__dst, v19, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v23 + 16))(__dst, v19, v22);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(__dst, 0, 1, v22);
      }
      uint64_t v31 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
      uint64_t v32 = &__dst[v31];
      uint64_t v33 = &v19[v31];
      if (v24(&v19[v31], 1, v22))
      {
        uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v32, v33, v22);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v32, 0, 1, v22);
      }
      uint64_t v29 = __dst;
      uint64_t v30 = v57;
    }
    swift_storeEnumTagMultiPayload();
LABEL_20:
    uint64_t v35 = *(int *)(type metadata accessor for Person.Relationship(0) + 20);
    uint64_t v36 = &v29[v35];
    uint64_t v37 = &v19[v35];
    uint64_t v38 = type metadata accessor for Person.Relationship.Follower(0);
    int v39 = swift_getEnumCaseMultiPayload();
    switch(v39)
    {
      case 2:
        uint64_t v43 = sub_24E2F0930();
        uint64_t v44 = *(void *)(v43 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v37, 1, v43))
        {
LABEL_28:
          uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
          memcpy(v36, v37, *(void *)(*(void *)(v45 - 8) + 64));
LABEL_34:
          swift_storeEnumTagMultiPayload();
          goto LABEL_35;
        }
        break;
      case 1:
        uint64_t v43 = sub_24E2F0930();
        uint64_t v44 = *(void *)(v43 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v37, 1, v43)) {
          goto LABEL_28;
        }
        break;
      case 0:
        uint64_t v40 = sub_24E2F0930();
        uint64_t v41 = *(void *)(v40 - 8);
        __dsta = *(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48);
        uint64_t v56 = v41;
        if (__dsta(v37, 1, v40))
        {
          uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
          memcpy(v36, v37, *(void *)(*(void *)(v42 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v36, v37, v40);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(v36, 0, 1, v40);
        }
        uint64_t v46 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
        id v47 = &v36[v46];
        uint64_t v48 = &v37[v46];
        if (__dsta(&v37[v46], 1, v40))
        {
          uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
          memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v47, v48, v40);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v56 + 56))(v47, 0, 1, v40);
        }
        uint64_t v50 = v59;
        swift_storeEnumTagMultiPayload();
        goto LABEL_38;
      default:
        memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
LABEL_35:
        uint64_t v50 = v59;
LABEL_38:
        uint64_t v51 = *(int *)(v58 + 36);
        uint64_t v52 = &v8[v51];
        uint64_t v53 = &v9[v51];
        *(void *)uint64_t v52 = *(void *)v53;
        v52[8] = v53[8];
        *(void *)&v8[*(int *)(v30 + 20)] = *(void *)&v9[*(int *)(v30 + 20)];
        uint64_t v54 = *(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56);
        swift_retain();
        v54(v8, 0, 1, v30);
        return a1;
    }
    (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v36, v37, v43);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v44 + 56))(v36, 0, 1, v43);
    goto LABEL_34;
  }
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CB140);
  memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  return a1;
}

uint64_t destroy for GetPersonCachedLocationIntent(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for PersonEntity();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5);
  if (result) {
    return result;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = v4 + *(int *)(type metadata accessor for Person() + 32);
  type metadata accessor for Person.Relationship.Following(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v13 = sub_24E2F0930();
    uint64_t v14 = *(void *)(v13 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v7, 1, v13)) {
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v7, v13);
    }
  }
  else if (!EnumCaseMultiPayload)
  {
    uint64_t v9 = sub_24E2F0930();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    if (!v11(v7, 1, v9)) {
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v7, v9);
    }
    uint64_t v12 = v7 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
    if (!v11(v12, 1, v9)) {
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v12, v9);
    }
  }
  uint64_t v15 = v7 + *(int *)(type metadata accessor for Person.Relationship(0) + 20);
  type metadata accessor for Person.Relationship.Follower(0);
  int v16 = swift_getEnumCaseMultiPayload();
  if (v16 != 2 && v16 != 1)
  {
    if (v16) {
      goto LABEL_19;
    }
    uint64_t v17 = sub_24E2F0930();
    uint64_t v18 = *(void *)(v17 - 8);
    uint64_t v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48);
    if (!v19(v15, 1, v17)) {
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v15, v17);
    }
    v15 += *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
    if (v19(v15, 1, v17)) {
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  uint64_t v17 = sub_24E2F0930();
  uint64_t v18 = *(void *)(v17 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v15, 1, v17)) {
LABEL_18:
  }
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v15, v17);
LABEL_19:
  return swift_release();
}

void *initializeWithCopy for GetPersonCachedLocationIntent(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for PersonEntity();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  swift_retain();
  if (!v10(v7, 1, v8))
  {
    uint64_t v55 = v8;
    uint64_t v57 = v9;
    uint64_t v12 = *((void *)v7 + 1);
    *(void *)uint64_t v6 = *(void *)v7;
    *((void *)v6 + 1) = v12;
    uint64_t v13 = *((void *)v7 + 3);
    *((void *)v6 + 2) = *((void *)v7 + 2);
    *((void *)v6 + 3) = v13;
    uint64_t v14 = *((void *)v7 + 5);
    *((void *)v6 + 4) = *((void *)v7 + 4);
    *((void *)v6 + 5) = v14;
    v6[48] = v7[48];
    uint64_t v15 = *((void *)v7 + 8);
    *((void *)v6 + 7) = *((void *)v7 + 7);
    *((void *)v6 + 8) = v15;
    *((void *)v6 + 9) = *((void *)v7 + 9);
    uint64_t v56 = type metadata accessor for Person();
    uint64_t v16 = *(int *)(v56 + 32);
    __dst = &v6[v16];
    uint64_t v17 = &v7[v16];
    uint64_t v18 = type metadata accessor for Person.Relationship.Following(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v24 = sub_24E2F0930();
      uint64_t v25 = *(void *)(v24 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v17, 1, v24))
      {
        uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        uint64_t v27 = __dst;
        memcpy(__dst, v17, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        uint64_t v27 = __dst;
        (*(void (**)(char *, char *, uint64_t))(v25 + 16))(__dst, v17, v24);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(__dst, 0, 1, v24);
      }
      uint64_t v28 = v55;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        uint64_t v27 = __dst;
        memcpy(__dst, v17, *(void *)(*(void *)(v18 - 8) + 64));
        uint64_t v28 = v55;
        goto LABEL_18;
      }
      uint64_t v20 = sub_24E2F0930();
      uint64_t v21 = *(void *)(v20 - 8);
      uint64_t v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
      if (v22(v17, 1, v20))
      {
        uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(__dst, v17, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 16))(__dst, v17, v20);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(__dst, 0, 1, v20);
      }
      uint64_t v29 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
      uint64_t v30 = &__dst[v29];
      uint64_t v31 = &v17[v29];
      if (v22(&v17[v29], 1, v20))
      {
        uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v30, v31, v20);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v30, 0, 1, v20);
      }
      uint64_t v27 = __dst;
      uint64_t v28 = v55;
    }
    swift_storeEnumTagMultiPayload();
LABEL_18:
    uint64_t v33 = *(int *)(type metadata accessor for Person.Relationship(0) + 20);
    uint64_t v34 = &v27[v33];
    uint64_t v35 = &v17[v33];
    uint64_t v36 = type metadata accessor for Person.Relationship.Follower(0);
    int v37 = swift_getEnumCaseMultiPayload();
    switch(v37)
    {
      case 2:
        uint64_t v41 = sub_24E2F0930();
        uint64_t v42 = *(void *)(v41 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v35, 1, v41))
        {
LABEL_26:
          uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
          memcpy(v34, v35, *(void *)(*(void *)(v43 - 8) + 64));
LABEL_32:
          swift_storeEnumTagMultiPayload();
          goto LABEL_33;
        }
        break;
      case 1:
        uint64_t v41 = sub_24E2F0930();
        uint64_t v42 = *(void *)(v41 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v35, 1, v41)) {
          goto LABEL_26;
        }
        break;
      case 0:
        uint64_t v38 = sub_24E2F0930();
        uint64_t v39 = *(void *)(v38 - 8);
        __dsta = *(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48);
        uint64_t v54 = v39;
        if (__dsta(v35, 1, v38))
        {
          uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
          memcpy(v34, v35, *(void *)(*(void *)(v40 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v34, v35, v38);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v34, 0, 1, v38);
        }
        uint64_t v44 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
        uint64_t v45 = &v34[v44];
        uint64_t v46 = &v35[v44];
        if (__dsta(&v35[v44], 1, v38))
        {
          uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
          memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v45, v46, v38);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v54 + 56))(v45, 0, 1, v38);
        }
        uint64_t v48 = v57;
        swift_storeEnumTagMultiPayload();
        goto LABEL_36;
      default:
        memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
LABEL_33:
        uint64_t v48 = v57;
LABEL_36:
        uint64_t v49 = *(int *)(v56 + 36);
        uint64_t v50 = &v6[v49];
        uint64_t v51 = &v7[v49];
        *(void *)uint64_t v50 = *(void *)v51;
        v50[8] = v51[8];
        *(void *)&v6[*(int *)(v28 + 20)] = *(void *)&v7[*(int *)(v28 + 20)];
        uint64_t v52 = *(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56);
        swift_retain();
        v52(v6, 0, 1, v28);
        return a1;
    }
    (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v34, v35, v41);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v34, 0, 1, v41);
    goto LABEL_32;
  }
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CB140);
  memcpy(v6, v7, *(void *)(*(void *)(v11 - 8) + 64));
  return a1;
}

void *assignWithCopy for GetPersonCachedLocationIntent(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for PersonEntity();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (v14)
    {
      sub_24E2C6F9C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for PersonEntity);
      goto LABEL_9;
    }
    *(void *)uint64_t v8 = *(void *)v9;
    *((void *)v8 + 1) = *((void *)v9 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((void *)v8 + 2) = *((void *)v9 + 2);
    *((void *)v8 + 3) = *((void *)v9 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((void *)v8 + 4) = *((void *)v9 + 4);
    *((void *)v8 + 5) = *((void *)v9 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v8[48] = v9[48];
    *((void *)v8 + 7) = *((void *)v9 + 7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((void *)v8 + 8) = *((void *)v9 + 8);
    *((void *)v8 + 9) = *((void *)v9 + 9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v26 = type metadata accessor for Person();
    uint64_t v27 = (int *)v26;
    if (a1 == a2)
    {
      type metadata accessor for Person.Relationship(0);
LABEL_74:
      uint64_t v86 = v27[9];
      unint64_t v87 = &v8[v86];
      uint64_t v88 = &v9[v86];
      uint64_t v89 = *(void *)v88;
      v87[8] = v88[8];
      *(void *)unint64_t v87 = v89;
      *(void *)&v8[*(int *)(v10 + 20)] = *(void *)&v9[*(int *)(v10 + 20)];
      swift_retain();
      swift_release();
      return a1;
    }
    uint64_t v28 = *(int *)(v26 + 32);
    uint64_t v29 = &v8[v28];
    uint64_t v30 = &v9[v28];
    sub_24E2C6F9C((uint64_t)&v8[v28], type metadata accessor for Person.Relationship.Following);
    uint64_t v31 = type metadata accessor for Person.Relationship.Following(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v44 = sub_24E2F0930();
      uint64_t v45 = *(void *)(v44 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v30, 1, v44))
      {
        uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(v29, v30, *(void *)(*(void *)(v46 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v29, v30, v44);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v29, 0, 1, v44);
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
        goto LABEL_56;
      }
      uint64_t v33 = sub_24E2F0930();
      uint64_t v34 = *(void *)(v33 - 8);
      uint64_t v93 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48);
      __dsta = v27;
      uint64_t v101 = v10;
      if (v93(v30, 1, v33))
      {
        uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(v29, v30, *(void *)(*(void *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v29, v30, v33);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v29, 0, 1, v33);
      }
      uint64_t v67 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
      uint64_t v68 = &v29[v67];
      uint64_t v69 = &v30[v67];
      if (v93(&v30[v67], 1, v33))
      {
        uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(v68, v69, *(void *)(*(void *)(v70 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v68, v69, v33);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v68, 0, 1, v33);
      }
      uint64_t v27 = __dsta;
      uint64_t v10 = v101;
    }
    swift_storeEnumTagMultiPayload();
LABEL_56:
    uint64_t v71 = *(int *)(type metadata accessor for Person.Relationship(0) + 20);
    uint64_t v72 = &v29[v71];
    uint64_t v73 = &v30[v71];
    sub_24E2C6F9C((uint64_t)v72, type metadata accessor for Person.Relationship.Follower);
    uint64_t v74 = type metadata accessor for Person.Relationship.Follower(0);
    int v75 = swift_getEnumCaseMultiPayload();
    if (v75 == 2)
    {
      uint64_t v79 = sub_24E2F0930();
      uint64_t v80 = *(void *)(v79 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48))(v73, 1, v79))
      {
LABEL_62:
        uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(v72, v73, *(void *)(*(void *)(v81 - 8) + 64));
LABEL_70:
        swift_storeEnumTagMultiPayload();
        goto LABEL_74;
      }
    }
    else
    {
      if (v75 != 1)
      {
        if (v75)
        {
          memcpy(v72, v73, *(void *)(*(void *)(v74 - 8) + 64));
        }
        else
        {
          uint64_t v76 = sub_24E2F0930();
          uint64_t v77 = *(void *)(v76 - 8);
          uint64_t v95 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v77 + 48);
          __dstc = v27;
          uint64_t v102 = v10;
          if (v95(v73, 1, v76))
          {
            uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
            memcpy(v72, v73, *(void *)(*(void *)(v78 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v72, v73, v76);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v77 + 56))(v72, 0, 1, v76);
          }
          uint64_t v82 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
          uint64_t v83 = &v72[v82];
          uint64_t v84 = &v73[v82];
          if (v95(&v73[v82], 1, v76))
          {
            uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
            memcpy(v83, v84, *(void *)(*(void *)(v85 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v83, v84, v76);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v77 + 56))(v83, 0, 1, v76);
          }
          swift_storeEnumTagMultiPayload();
          uint64_t v27 = __dstc;
          uint64_t v10 = v102;
        }
        goto LABEL_74;
      }
      uint64_t v79 = sub_24E2F0930();
      uint64_t v80 = *(void *)(v79 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48))(v73, 1, v79)) {
        goto LABEL_62;
      }
    }
    (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v72, v73, v79);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v80 + 56))(v72, 0, 1, v79);
    goto LABEL_70;
  }
  if (!v14)
  {
    uint64_t v94 = v11;
    uint64_t v100 = v10;
    *(void *)uint64_t v8 = *(void *)v9;
    *((void *)v8 + 1) = *((void *)v9 + 1);
    *((void *)v8 + 2) = *((void *)v9 + 2);
    *((void *)v8 + 3) = *((void *)v9 + 3);
    *((void *)v8 + 4) = *((void *)v9 + 4);
    *((void *)v8 + 5) = *((void *)v9 + 5);
    v8[48] = v9[48];
    *((void *)v8 + 7) = *((void *)v9 + 7);
    *((void *)v8 + 8) = *((void *)v9 + 8);
    *((void *)v8 + 9) = *((void *)v9 + 9);
    uint64_t v92 = type metadata accessor for Person();
    uint64_t v15 = *(int *)(v92 + 32);
    __dst = &v8[v15];
    uint64_t v16 = &v9[v15];
    uint64_t v17 = type metadata accessor for Person.Relationship.Following(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    int v18 = swift_getEnumCaseMultiPayload();
    if (v18 == 1)
    {
      uint64_t v36 = sub_24E2F0930();
      uint64_t v37 = *(void *)(v36 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v16, 1, v36))
      {
        uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        uint64_t v39 = __dst;
        memcpy(__dst, v16, *(void *)(*(void *)(v38 - 8) + 64));
      }
      else
      {
        uint64_t v39 = __dst;
        (*(void (**)(char *, char *, uint64_t))(v37 + 16))(__dst, v16, v36);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(__dst, 0, 1, v36);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      if (v18)
      {
        uint64_t v39 = __dst;
        memcpy(__dst, v16, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        uint64_t v19 = sub_24E2F0930();
        uint64_t v20 = *(void *)(v19 - 8);
        uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
        if (v21(v16, 1, v19))
        {
          uint64_t v22 = v20;
          uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
          uint64_t v24 = __dst;
          memcpy(__dst, v16, *(void *)(*(void *)(v23 - 8) + 64));
        }
        else
        {
          uint64_t v24 = __dst;
          (*(void (**)(char *, char *, uint64_t))(v20 + 16))(__dst, v16, v19);
          uint64_t v22 = v20;
          (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
        }
        uint64_t v40 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
        uint64_t v41 = &v24[v40];
        uint64_t v42 = &v16[v40];
        if (v21(&v16[v40], 1, v19))
        {
          uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
          memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v41, v42, v19);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v41, 0, 1, v19);
        }
        uint64_t v39 = __dst;
        swift_storeEnumTagMultiPayload();
      }
      uint64_t v10 = v100;
      uint64_t v11 = v94;
    }
    uint64_t v47 = *(int *)(type metadata accessor for Person.Relationship(0) + 20);
    uint64_t v48 = &v39[v47];
    uint64_t v49 = &v16[v47];
    uint64_t v50 = type metadata accessor for Person.Relationship.Follower(0);
    int v51 = swift_getEnumCaseMultiPayload();
    if (v51 == 2)
    {
      uint64_t v55 = sub_24E2F0930();
      uint64_t v56 = *(void *)(v55 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v49, 1, v55))
      {
LABEL_36:
        uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(v48, v49, *(void *)(*(void *)(v57 - 8) + 64));
LABEL_44:
        swift_storeEnumTagMultiPayload();
LABEL_48:
        uint64_t v62 = *(int *)(v92 + 36);
        uint64_t v63 = &v8[v62];
        uint64_t v64 = &v9[v62];
        uint64_t v65 = *(void *)v64;
        v63[8] = v64[8];
        *(void *)uint64_t v63 = v65;
        *(void *)&v8[*(int *)(v10 + 20)] = *(void *)&v9[*(int *)(v10 + 20)];
        uint64_t v66 = *(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56);
        swift_retain();
        v66(v8, 0, 1, v10);
        return a1;
      }
    }
    else
    {
      if (v51 != 1)
      {
        if (v51)
        {
          memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
        }
        else
        {
          uint64_t v52 = sub_24E2F0930();
          uint64_t v53 = *(void *)(v52 - 8);
          __dstb = *(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48);
          uint64_t v91 = v53;
          if (__dstb(v49, 1, v52))
          {
            uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
            memcpy(v48, v49, *(void *)(*(void *)(v54 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v48, v49, v52);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v53 + 56))(v48, 0, 1, v52);
          }
          uint64_t v58 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
          uint64_t v59 = &v48[v58];
          uint64_t v60 = &v49[v58];
          if (__dstb(&v49[v58], 1, v52))
          {
            uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
            memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v59, v60, v52);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v91 + 56))(v59, 0, 1, v52);
          }
          swift_storeEnumTagMultiPayload();
          uint64_t v10 = v100;
        }
        goto LABEL_48;
      }
      uint64_t v55 = sub_24E2F0930();
      uint64_t v56 = *(void *)(v55 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v49, 1, v55)) {
        goto LABEL_36;
      }
    }
    (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v48, v49, v55);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v56 + 56))(v48, 0, 1, v55);
    goto LABEL_44;
  }
LABEL_9:
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CB140);
  memcpy(v8, v9, *(void *)(*(void *)(v25 - 8) + 64));
  return a1;
}

uint64_t sub_24E2C6F9C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_OWORD *initializeWithTake for GetPersonCachedLocationIntent(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (_OWORD *)((char *)a1 + v4);
  uint64_t v6 = (_OWORD *)((char *)a2 + v4);
  uint64_t v7 = type metadata accessor for PersonEntity();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    long long v10 = v6[1];
    *uint64_t v5 = *v6;
    v5[1] = v10;
    long long v11 = v6[3];
    v5[2] = v6[2];
    v5[3] = v11;
    uint64_t v5[4] = v6[4];
    uint64_t v51 = type metadata accessor for Person();
    uint64_t v12 = *(int *)(v51 + 32);
    int v13 = (char *)v5 + v12;
    int v14 = (char *)v6 + v12;
    uint64_t v15 = type metadata accessor for Person.Relationship.Following(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v21 = sub_24E2F0930();
      uint64_t v22 = *(void *)(v21 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v14, 1, v21))
      {
        uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(v13, v14, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v13, v14, v21);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v13, 0, 1, v21);
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
        goto LABEL_17;
      }
      uint64_t v17 = sub_24E2F0930();
      uint64_t v18 = *(void *)(v17 - 8);
      uint64_t v47 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
      uint64_t v46 = v8;
      if (v47(v14, 1, v17))
      {
        uint64_t v19 = v18;
        uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(v13, v14, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v13, v14, v17);
        uint64_t v19 = v18;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v13, 0, 1, v17);
      }
      uint64_t v24 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
      __dst = &v13[v24];
      uint64_t v25 = &v14[v24];
      if (v47(&v14[v24], 1, v17))
      {
        uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(__dst, v25, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 32))(__dst, v25, v17);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v17);
      }
      uint64_t v8 = v46;
    }
    swift_storeEnumTagMultiPayload();
LABEL_17:
    uint64_t v27 = *(int *)(type metadata accessor for Person.Relationship(0) + 20);
    uint64_t v28 = &v13[v27];
    uint64_t v29 = &v14[v27];
    uint64_t v30 = type metadata accessor for Person.Relationship.Follower(0);
    int v31 = swift_getEnumCaseMultiPayload();
    if (v31 == 2)
    {
      uint64_t v35 = sub_24E2F0930();
      uint64_t v36 = *(void *)(v35 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v29, 1, v35)) {
        goto LABEL_23;
      }
    }
    else
    {
      if (v31 != 1)
      {
        if (v31)
        {
          memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
LABEL_34:
          uint64_t v41 = *(int *)(v51 + 36);
          uint64_t v42 = (char *)v5 + v41;
          uint64_t v43 = (char *)v6 + v41;
          *(void *)uint64_t v42 = *(void *)v43;
          v42[8] = v43[8];
          *(void *)((char *)v5 + *(int *)(v7 + 20)) = *(void *)((char *)v6 + *(int *)(v7 + 20));
          (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
          return a1;
        }
        uint64_t v32 = sub_24E2F0930();
        uint64_t v33 = *(void *)(v32 - 8);
        uint64_t v48 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48);
        uint64_t v45 = v33;
        if (v48(v29, 1, v32))
        {
          uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
          memcpy(v28, v29, *(void *)(*(void *)(v34 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v28, v29, v32);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v28, 0, 1, v32);
        }
        uint64_t v38 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
        __dsta = &v28[v38];
        uint64_t v39 = &v29[v38];
        if (v48(&v29[v38], 1, v32))
        {
          uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
          memcpy(__dsta, v39, *(void *)(*(void *)(v40 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v45 + 32))(__dsta, v39, v32);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(__dsta, 0, 1, v32);
        }
LABEL_33:
        swift_storeEnumTagMultiPayload();
        goto LABEL_34;
      }
      uint64_t v35 = sub_24E2F0930();
      uint64_t v36 = *(void *)(v35 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v29, 1, v35))
      {
LABEL_23:
        uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(v28, v29, *(void *)(*(void *)(v37 - 8) + 64));
        goto LABEL_33;
      }
    }
    (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v28, v29, v35);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v28, 0, 1, v35);
    goto LABEL_33;
  }
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CB140);
  memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  return a1;
}

_OWORD *assignWithTake for GetPersonCachedLocationIntent(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for PersonEntity();
  uint64_t v10 = *(void *)(v9 - 8);
  long long v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (v13)
    {
      sub_24E2C6F9C((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for PersonEntity);
      goto LABEL_9;
    }
    uint64_t v25 = *((void *)v8 + 1);
    *(void *)uint64_t v7 = *(void *)v8;
    *((void *)v7 + 1) = v25;
    swift_bridgeObjectRelease();
    uint64_t v26 = *((void *)v8 + 3);
    *((void *)v7 + 2) = *((void *)v8 + 2);
    *((void *)v7 + 3) = v26;
    swift_bridgeObjectRelease();
    uint64_t v27 = *((void *)v8 + 5);
    *((void *)v7 + 4) = *((void *)v8 + 4);
    *((void *)v7 + 5) = v27;
    swift_bridgeObjectRelease();
    v7[48] = v8[48];
    *((void *)v7 + 7) = *((void *)v8 + 7);
    swift_bridgeObjectRelease();
    uint64_t v28 = *((void *)v8 + 9);
    *((void *)v7 + 8) = *((void *)v8 + 8);
    *((void *)v7 + 9) = v28;
    swift_bridgeObjectRelease();
    uint64_t v29 = type metadata accessor for Person();
    uint64_t v30 = v29;
    if (a1 == a2)
    {
      type metadata accessor for Person.Relationship(0);
LABEL_71:
      uint64_t v84 = *(int *)(v30 + 36);
      uint64_t v85 = &v7[v84];
      uint64_t v86 = &v8[v84];
      *(void *)uint64_t v85 = *(void *)v86;
      v85[8] = v86[8];
      *(void *)&v7[*(int *)(v9 + 20)] = *(void *)&v8[*(int *)(v9 + 20)];
      swift_release();
      return a1;
    }
    uint64_t v31 = *(int *)(v29 + 32);
    uint64_t v32 = &v7[v31];
    uint64_t v33 = &v8[v31];
    sub_24E2C6F9C((uint64_t)&v7[v31], type metadata accessor for Person.Relationship.Following);
    uint64_t v34 = type metadata accessor for Person.Relationship.Following(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v45 = sub_24E2F0930();
      uint64_t v46 = *(void *)(v45 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v33, 1, v45))
      {
        uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(v32, v33, *(void *)(*(void *)(v47 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v32, v33, v45);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v32, 0, 1, v45);
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
        goto LABEL_53;
      }
      uint64_t v36 = sub_24E2F0930();
      uint64_t v37 = *(void *)(v36 - 8);
      __dst = *(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48);
      uint64_t v100 = v30;
      uint64_t v90 = v37;
      if (__dst(v33, 1, v36))
      {
        uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(v32, v33, *(void *)(*(void *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v32, v33, v36);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v32, 0, 1, v36);
      }
      uint64_t v65 = __dst;
      uint64_t v66 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
      __dstc = &v32[v66];
      uint64_t v67 = &v33[v66];
      if (v65(&v33[v66], 1, v36))
      {
        uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(__dstc, v67, *(void *)(*(void *)(v68 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v90 + 32))(__dstc, v67, v36);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v90 + 56))(__dstc, 0, 1, v36);
      }
      uint64_t v30 = v100;
    }
    swift_storeEnumTagMultiPayload();
LABEL_53:
    uint64_t v69 = *(int *)(type metadata accessor for Person.Relationship(0) + 20);
    uint64_t v70 = &v32[v69];
    uint64_t v71 = &v33[v69];
    sub_24E2C6F9C((uint64_t)v70, type metadata accessor for Person.Relationship.Follower);
    uint64_t v72 = type metadata accessor for Person.Relationship.Follower(0);
    int v73 = swift_getEnumCaseMultiPayload();
    if (v73 == 2)
    {
      uint64_t v77 = sub_24E2F0930();
      uint64_t v78 = *(void *)(v77 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v78 + 48))(v71, 1, v77))
      {
LABEL_59:
        uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(v70, v71, *(void *)(*(void *)(v79 - 8) + 64));
LABEL_67:
        swift_storeEnumTagMultiPayload();
        goto LABEL_71;
      }
    }
    else
    {
      if (v73 != 1)
      {
        if (v73)
        {
          memcpy(v70, v71, *(void *)(*(void *)(v72 - 8) + 64));
        }
        else
        {
          uint64_t v74 = sub_24E2F0930();
          uint64_t v75 = *(void *)(v74 - 8);
          __dstd = *(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48);
          uint64_t v101 = v30;
          uint64_t v91 = v75;
          if (__dstd(v71, 1, v74))
          {
            uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
            memcpy(v70, v71, *(void *)(*(void *)(v76 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v75 + 32))(v70, v71, v74);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v75 + 56))(v70, 0, 1, v74);
          }
          uint64_t v80 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
          uint64_t v81 = &v70[v80];
          uint64_t v82 = &v71[v80];
          if (__dstd(&v71[v80], 1, v74))
          {
            uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
            memcpy(v81, v82, *(void *)(*(void *)(v83 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v91 + 32))(v81, v82, v74);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v91 + 56))(v81, 0, 1, v74);
          }
          swift_storeEnumTagMultiPayload();
          uint64_t v30 = v101;
        }
        goto LABEL_71;
      }
      uint64_t v77 = sub_24E2F0930();
      uint64_t v78 = *(void *)(v77 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v78 + 48))(v71, 1, v77)) {
        goto LABEL_59;
      }
    }
    (*(void (**)(char *, char *, uint64_t))(v78 + 32))(v70, v71, v77);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(v70, 0, 1, v77);
    goto LABEL_67;
  }
  if (!v13)
  {
    long long v14 = *((_OWORD *)v8 + 1);
    *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
    *((_OWORD *)v7 + 1) = v14;
    long long v15 = *((_OWORD *)v8 + 3);
    *((_OWORD *)v7 + 2) = *((_OWORD *)v8 + 2);
    *((_OWORD *)v7 + 3) = v15;
    *((_OWORD *)v7 + 4) = *((_OWORD *)v8 + 4);
    uint64_t v99 = type metadata accessor for Person();
    uint64_t v16 = *(int *)(v99 + 32);
    uint64_t v17 = &v7[v16];
    uint64_t v18 = &v8[v16];
    uint64_t v19 = type metadata accessor for Person.Relationship.Following(0);
    int v20 = swift_getEnumCaseMultiPayload();
    if (v20 == 1)
    {
      uint64_t v39 = sub_24E2F0930();
      uint64_t v40 = *(void *)(v39 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v18, 1, v39))
      {
        uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(v17, v18, *(void *)(*(void *)(v41 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v17, v18, v39);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v17, 0, 1, v39);
      }
    }
    else
    {
      if (v20)
      {
        memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
        goto LABEL_28;
      }
      uint64_t v21 = sub_24E2F0930();
      uint64_t v22 = *(void *)(v21 - 8);
      uint64_t v92 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
      uint64_t v88 = v22;
      if (v92(v18, 1, v21))
      {
        uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(v17, v18, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v17, v18, v21);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v17, 0, 1, v21);
      }
      uint64_t v42 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
      __dsta = &v17[v42];
      uint64_t v43 = &v18[v42];
      if (v92(&v18[v42], 1, v21))
      {
        uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(__dsta, v43, *(void *)(*(void *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v88 + 32))(__dsta, v43, v21);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v88 + 56))(__dsta, 0, 1, v21);
      }
    }
    swift_storeEnumTagMultiPayload();
LABEL_28:
    uint64_t v48 = *(int *)(type metadata accessor for Person.Relationship(0) + 20);
    uint64_t v49 = &v17[v48];
    uint64_t v50 = &v18[v48];
    uint64_t v51 = type metadata accessor for Person.Relationship.Follower(0);
    int v52 = swift_getEnumCaseMultiPayload();
    if (v52 == 2)
    {
      uint64_t v56 = sub_24E2F0930();
      uint64_t v57 = *(void *)(v56 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v50, 1, v56)) {
        goto LABEL_34;
      }
    }
    else
    {
      if (v52 != 1)
      {
        if (v52)
        {
          memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
LABEL_45:
          uint64_t v62 = *(int *)(v99 + 36);
          uint64_t v63 = &v7[v62];
          uint64_t v64 = &v8[v62];
          *(void *)uint64_t v63 = *(void *)v64;
          v63[8] = v64[8];
          *(void *)&v7[*(int *)(v9 + 20)] = *(void *)&v8[*(int *)(v9 + 20)];
          (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
          return a1;
        }
        uint64_t v53 = sub_24E2F0930();
        uint64_t v54 = *(void *)(v53 - 8);
        uint64_t v93 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48);
        uint64_t v89 = v54;
        if (v93(v50, 1, v53))
        {
          uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
          memcpy(v49, v50, *(void *)(*(void *)(v55 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v49, v50, v53);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v54 + 56))(v49, 0, 1, v53);
        }
        uint64_t v59 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
        __dstb = &v49[v59];
        uint64_t v60 = &v50[v59];
        if (v93(&v50[v59], 1, v53))
        {
          uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
          memcpy(__dstb, v60, *(void *)(*(void *)(v61 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v89 + 32))(__dstb, v60, v53);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v89 + 56))(__dstb, 0, 1, v53);
        }
LABEL_44:
        swift_storeEnumTagMultiPayload();
        goto LABEL_45;
      }
      uint64_t v56 = sub_24E2F0930();
      uint64_t v57 = *(void *)(v56 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v50, 1, v56))
      {
LABEL_34:
        uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(v49, v50, *(void *)(*(void *)(v58 - 8) + 64));
        goto LABEL_44;
      }
    }
    (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v49, v50, v56);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v57 + 56))(v49, 0, 1, v56);
    goto LABEL_44;
  }
LABEL_9:
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CB140);
  memcpy(v7, v8, *(void *)(*(void *)(v24 - 8) + 64));
  return a1;
}

uint64_t getEnumTagSinglePayload for GetPersonCachedLocationIntent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24E2C88BC);
}

uint64_t sub_24E2C88BC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CB140);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    long long v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for GetPersonCachedLocationIntent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24E2C8984);
}

void *sub_24E2C8984(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CB140);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_24E2C8A30()
{
  sub_24E2C8ACC();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_24E2C8ACC()
{
  if (!qword_2698CB170)
  {
    type metadata accessor for PersonEntity();
    unint64_t v0 = sub_24E2F1210();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2698CB170);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for GetPersonCachedLocationIntent.FetchLocationError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E2C8BF0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GetPersonCachedLocationIntent.FetchLocationError()
{
  return &type metadata for GetPersonCachedLocationIntent.FetchLocationError;
}

ValueMetadata *type metadata accessor for GetPersonCachedLocationIntent.Result()
{
  return &type metadata for GetPersonCachedLocationIntent.Result;
}

uint64_t _s10FindMyCore29GetPersonCachedLocationIntentV12DependenciesV05fetchG0yAA09PublishedG0VAA0E6EntityVYaYbAC05FetchG5ErrorOYKcvg()
{
  uint64_t v1 = *v0;
  swift_retain();
  return v1;
}

uint64_t _s10FindMyCore29GetPersonCachedLocationIntentV12DependenciesV05fetchG0AeA09PublishedG0VAA0E6EntityVYaYbAC05FetchG5ErrorOYKc_tcfC@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

ValueMetadata *type metadata accessor for GetPersonCachedLocationIntent.Dependencies()
{
  return &type metadata for GetPersonCachedLocationIntent.Dependencies;
}

void static GetPersonCachedLocationIntent.Dependencies.live()(void *a1@<X8>)
{
  *a1 = &unk_2698CB178;
  a1[1] = 0;
}

uint64_t sub_24E2C8C98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  uint64_t v4 = sub_24E2F0B70();
  v3[5] = v4;
  v3[6] = *(void *)(v4 - 8);
  v3[7] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698CB180);
  v3[8] = swift_task_alloc();
  v3[9] = swift_task_alloc();
  uint64_t v5 = sub_24E2F0A00();
  v3[10] = v5;
  v3[11] = *(void *)(v5 - 8);
  v3[12] = swift_task_alloc();
  sub_24E2F0A20();
  v3[13] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24E2C8E24, 0, 0);
}

uint64_t sub_24E2C8E24()
{
  (*(void (**)(void, void, void))(v0[11] + 104))(v0[12], *MEMORY[0x263F3CCF8], v0[10]);
  sub_24E2F0A30();
  sub_24E2F0BE0();
  swift_allocObject();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[14] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_24E2C8F08;
  uint64_t v2 = v0[13];
  return MEMORY[0x270F29770](v2);
}

uint64_t sub_24E2C8F08(uint64_t a1)
{
  *(void *)(*(void *)v1 + 120) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_24E2C9008, 0, 0);
}

uint64_t sub_24E2C9008()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698CB188);
  uint64_t v1 = swift_allocObject();
  *(void *)(v0 + 128) = v1;
  *(_OWORD *)(v1 + 16) = xmmword_24E2F1C10;
  swift_bridgeObjectRetain_n();
  sub_24E295410(MEMORY[0x263F8EE78]);
  sub_24E2F0B50();
  swift_bridgeObjectRelease();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_24E2C9148;
  return MEMORY[0x270F29758](v1, 1);
}

uint64_t sub_24E2C9148(uint64_t a1)
{
  uint64_t v4 = *v2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {

    uint64_t v5 = sub_24E2C9660;
  }
  else
  {
    *(void *)(v4 + 144) = a1;
    uint64_t v5 = sub_24E2C9298;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_24E2C9298()
{
  uint64_t v31 = v0;
  uint64_t v1 = *(void *)(v0 + 144);
  if (v1)
  {
    swift_bridgeObjectRetain_n();
    sub_24E295410(MEMORY[0x263F8EE78]);
    sub_24E2F0B50();
    swift_bridgeObjectRelease();
    if (*(void *)(v1 + 16) && (unint64_t v2 = sub_24E2C9C18(*(void *)(v0 + 56)), (v3 & 1) != 0))
    {
      unint64_t v4 = v2;
      uint64_t v5 = *(void *)(v0 + 72);
      uint64_t v6 = *(void *)(*(void *)(v0 + 144) + 56);
      uint64_t v7 = sub_24E2F0CC0();
      uint64_t v8 = *(void *)(v7 - 8);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v8 + 16))(v5, v6 + *(void *)(v8 + 72) * v4, v7);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
    }
    else
    {
      uint64_t v9 = *(void *)(v0 + 72);
      uint64_t v10 = sub_24E2F0CC0();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
    }
    uint64_t v12 = *(void *)(v0 + 48);
    uint64_t v11 = *(void *)(v0 + 56);
    uint64_t v13 = *(void *)(v0 + 40);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  }
  else
  {
    uint64_t v14 = *(void *)(v0 + 72);
    uint64_t v15 = sub_24E2F0CC0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  }
  uint64_t v16 = *(void *)(v0 + 64);
  sub_24E2C9898(*(void *)(v0 + 72), v16);
  uint64_t v17 = sub_24E2F0CC0();
  uint64_t v18 = *(void *)(v17 - 8);
  int v19 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17);
  uint64_t v20 = *(void *)(v0 + 64);
  uint64_t v21 = *(void *)(v0 + 72);
  if (v19 == 1)
  {
    uint64_t v22 = *(unsigned char **)(v0 + 32);
    sub_24E2C9900(*(void *)(v0 + 64));
    swift_release();
    sub_24E2C9900(v21);
    *uint64_t v22 = 0;
    *(unsigned char *)(v0 + 152) = 0;
    sub_24E2C4680();
    swift_willThrowTypedImpl();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  else
  {
    uint64_t v24 = *(_OWORD **)(v0 + 16);
    Location.fmuiPublishedLocation.getter((uint64_t)v30);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v20, v17);
    sub_24E2C9900(v21);
    long long v25 = v30[5];
    v24[4] = v30[4];
    v24[5] = v25;
    long long v26 = v30[7];
    v24[6] = v30[6];
    v24[7] = v26;
    long long v27 = v30[1];
    *uint64_t v24 = v30[0];
    v24[1] = v27;
    long long v28 = v30[3];
    v24[2] = v30[2];
    v24[3] = v28;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  uint64_t v23 = *(uint64_t (**)(void))(v0 + 8);
  return v23();
}

uint64_t sub_24E2C9660()
{
  uint64_t v17 = v0;
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = sub_24E2F0CC0();
  uint64_t v3 = *(void *)(v2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(v1, 1, 1, v2);
  uint64_t v4 = *(void *)(v0 + 64);
  sub_24E2C9898(*(void *)(v0 + 72), v4);
  int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v4, 1, v2);
  uint64_t v6 = *(void *)(v0 + 64);
  uint64_t v7 = *(void *)(v0 + 72);
  if (v5 == 1)
  {
    uint64_t v8 = *(unsigned char **)(v0 + 32);
    sub_24E2C9900(*(void *)(v0 + 64));
    swift_release();
    sub_24E2C9900(v7);
    *uint64_t v8 = 0;
    *(unsigned char *)(v0 + 152) = 0;
    sub_24E2C4680();
    swift_willThrowTypedImpl();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  else
  {
    uint64_t v10 = *(_OWORD **)(v0 + 16);
    Location.fmuiPublishedLocation.getter((uint64_t)v16);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v6, v2);
    sub_24E2C9900(v7);
    long long v11 = v16[5];
    v10[4] = v16[4];
    v10[5] = v11;
    long long v12 = v16[7];
    v10[6] = v16[6];
    v10[7] = v12;
    long long v13 = v16[1];
    _OWORD *v10 = v16[0];
    v10[1] = v13;
    long long v14 = v16[3];
    _OWORD v10[2] = v16[2];
    v10[3] = v14;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
  }
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_24E2C9898(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CB180);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24E2C9900(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CB180);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_24E2C9960(uint64_t a1, unint64_t a2)
{
  sub_24E2F14A0();
  sub_24E2F14B0();
  sub_24E2F14B0();
  if (a2 > 2)
  {
    swift_bridgeObjectRetain();
    sub_24E2F0F20();
    sub_24E2AF224(a1, a2);
  }
  uint64_t v4 = sub_24E2F14D0();
  return sub_24E2C9CEC(a1, a2, v4);
}

unint64_t sub_24E2C9A34(unsigned __int8 a1)
{
  sub_24E2F14A0();
  sub_24E2F14B0();
  uint64_t v2 = sub_24E2F14D0();
  return sub_24E2C9F0C(a1, v2);
}

unint64_t sub_24E2C9AA0(uint64_t a1, uint64_t a2)
{
  sub_24E2F14A0();
  sub_24E2F14C0();
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_24E2F0F20();
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = sub_24E2F14D0();
  return sub_24E2C9FAC(a1, a2, v4);
}

unint64_t sub_24E2C9B44(uint64_t a1)
{
  sub_24E2F0990();
  uint64_t v2 = (void (*)(uint64_t))MEMORY[0x263F07508];
  sub_24E2CA248((unint64_t *)&qword_2698CB138, MEMORY[0x263F07508]);
  uint64_t v3 = sub_24E2F0DF0();
  return sub_24E2CA0A8(a1, v3, MEMORY[0x263F07508], &qword_2698CB1A0, v2, MEMORY[0x263F07528]);
}

unint64_t sub_24E2C9C18(uint64_t a1)
{
  sub_24E2F0B70();
  uint64_t v2 = (void (*)(uint64_t))MEMORY[0x263F3CF58];
  sub_24E2CA248(&qword_2698CB190, MEMORY[0x263F3CF58]);
  uint64_t v3 = sub_24E2F0DF0();
  return sub_24E2CA0A8(a1, v3, MEMORY[0x263F3CF58], &qword_2698CB198, v2, MEMORY[0x263F3CF68]);
}

unint64_t sub_24E2C9CEC(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v5 = a3 & ~v4;
  if (((*(void *)(v3 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) == 0) {
    return v5;
  }
  uint64_t v8 = ~v4;
  while (1)
  {
    uint64_t v9 = *(void *)(v3 + 48) + 16 * v5;
    uint64_t v10 = *(void *)v9;
    unint64_t v11 = *(void *)(v9 + 8);
    switch(v11)
    {
      case 0uLL:
        if (!a2)
        {
          sub_24E2AF224(*(void *)v9, 0);
          sub_24E2AF224(a1, 0);
          uint64_t v14 = v10;
          unint64_t v15 = 0;
          goto LABEL_24;
        }
        goto LABEL_13;
      case 1uLL:
        if (a2 == 1)
        {
          sub_24E2AF224(*(void *)v9, 1uLL);
          sub_24E2AF224(a1, 1uLL);
          sub_24E2AF224(v10, 1uLL);
          return v5;
        }
LABEL_13:
        sub_24E2AF210(*(void *)v9, *(void *)(v9 + 8));
        sub_24E2AF210(a1, a2);
        sub_24E2AF224(v10, v11);
        sub_24E2AF224(a1, a2);
        goto LABEL_14;
      case 2uLL:
        if (a2 == 2)
        {
          sub_24E2AF224(*(void *)v9, 2uLL);
          sub_24E2AF224(a1, 2uLL);
          uint64_t v14 = v10;
          unint64_t v15 = 2;
          goto LABEL_24;
        }
        goto LABEL_13;
    }
    if (a2 < 3) {
      goto LABEL_13;
    }
    if (v10 == a1 && v11 == a2) {
      break;
    }
    char v13 = sub_24E2F1430();
    sub_24E2AF210(v10, v11);
    sub_24E2AF210(a1, a2);
    sub_24E2AF224(v10, v11);
    sub_24E2AF224(a1, a2);
    if (v13) {
      return v5;
    }
LABEL_14:
    unint64_t v5 = (v5 + 1) & v8;
    if (((*(void *)(v3 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) == 0) {
      return v5;
    }
  }
  sub_24E2AF210(a1, a2);
  sub_24E2AF210(a1, a2);
  sub_24E2AF224(a1, a2);
  uint64_t v14 = a1;
  unint64_t v15 = a2;
LABEL_24:
  sub_24E2AF224(v14, v15);
  return v5;
}

unint64_t sub_24E2C9F0C(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_24E2C9FAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v5 = a3 & ~v4;
  if ((*(void *)(v3 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v8 = ~v4;
    while (1)
    {
      uint64_t v9 = (void *)(*(void *)(v3 + 48) + 16 * v5);
      uint64_t v10 = v9[1];
      if (!v10) {
        break;
      }
      if (!a2)
      {
        swift_bridgeObjectRetain_n();
LABEL_4:
        swift_bridgeObjectRelease_n();
        goto LABEL_5;
      }
      BOOL v11 = *v9 == a1 && v10 == a2;
      if (v11 || (sub_24E2F1430() & 1) != 0) {
        return v5;
      }
LABEL_5:
      unint64_t v5 = (v5 + 1) & v8;
      if (((*(void *)(v3 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) == 0) {
        return v5;
      }
    }
    if (!a2) {
      return v5;
    }
    goto LABEL_4;
  }
  return v5;
}

unint64_t sub_24E2CA0A8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), unint64_t *a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v24 = a5;
  uint64_t v25 = a6;
  uint64_t v23 = a4;
  v21[1] = a1;
  uint64_t v8 = a3(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  BOOL v11 = (char *)v21 - v10;
  uint64_t v22 = v6;
  uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v13 = a2 & ~v12;
  v21[0] = v6 + 64;
  if ((*(void *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v14 = ~v12;
    uint64_t v17 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    uint64_t v16 = v9 + 16;
    unint64_t v15 = v17;
    uint64_t v18 = *(void *)(v16 + 56);
    do
    {
      v15(v11, *(void *)(v22 + 48) + v18 * v13, v8);
      sub_24E2CA248(v23, v24);
      char v19 = sub_24E2F0E20();
      (*(void (**)(char *, uint64_t))(v16 - 8))(v11, v8);
      if (v19) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v14;
    }
    while (((*(void *)(v21[0] + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
  }
  return v13;
}

uint64_t sub_24E2CA248(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24E2CA290()
{
  return MEMORY[0x270FA0228](v0, 16, 7);
}

uint64_t type metadata accessor for IntelligenceModule()
{
  return self;
}

uint64_t sub_24E2CA2C4()
{
  uint64_t MyLocalizationTableDescription = type metadata accessor for FindMyLocalizationTableDescription();
  __swift_allocate_value_buffer(MyLocalizationTableDescription, qword_2698D1E48);
  uint64_t v1 = __swift_project_value_buffer(MyLocalizationTableDescription, (uint64_t)qword_2698D1E48);
  uint64_t v2 = (uint64_t *)(v1 + *(int *)(MyLocalizationTableDescription + 20));
  *uint64_t v2 = type metadata accessor for IntelligenceModule();
  uint64_t v3 = *MEMORY[0x263F06D30];
  uint64_t v4 = sub_24E2F07B0();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 104))(v2, v3, v4);
  strcpy((char *)v1, "Intelligence");
  *(unsigned char *)(v1 + 13) = 0;
  *(_WORD *)(v1 + 14) = -5120;
  return result;
}

ValueMetadata *type metadata accessor for FindMyCoreIntentsPackage()
{
  return &type metadata for FindMyCoreIntentsPackage;
}

uint64_t Badge.title.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Badge.title.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*Badge.title.modify())()
{
  return nullsub_1;
}

uint64_t Badge.systemSymbol.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Badge.systemSymbol.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*Badge.systemSymbol.modify())()
{
  return nullsub_1;
}

void Badge.backgroundColor.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 32);
}

unsigned char *Badge.backgroundColor.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 32) = *result;
  return result;
}

uint64_t (*Badge.backgroundColor.modify())()
{
  return nullsub_1;
}

void __swiftcall Badge.init(title:systemSymbol:backgroundColor:)(FindMyCore::Badge *__return_ptr retstr, Swift::String title, Swift::String systemSymbol, FindMyCore::Badge::Color backgroundColor)
{
  FindMyCore::Badge::Color v4 = *(unsigned char *)backgroundColor;
  retstr->title = title;
  retstr->systemSymbol = systemSymbol;
  retstr->backgroundColor = v4;
}

BOOL static Badge.Color.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t Badge.Color.hash(into:)()
{
  return sub_24E2F14B0();
}

uint64_t Badge.Color.hashValue.getter()
{
  return sub_24E2F14D0();
}

BOOL sub_24E2CA588(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t Badge.hash(into:)()
{
  return sub_24E2F14B0();
}

uint64_t Badge.hashValue.getter()
{
  return sub_24E2F14D0();
}

uint64_t sub_24E2CA6C8()
{
  return sub_24E2F14D0();
}

uint64_t sub_24E2CA768()
{
  return sub_24E2F14B0();
}

uint64_t sub_24E2CA7F0()
{
  return sub_24E2F14D0();
}

void sub_24E2CA890()
{
  if (qword_2698CA500 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_2698D1E70;
  if (qword_2698D1E70)
  {
    swift_bridgeObjectRetain();
    id v1 = v0;
    id v2 = v1;
  }
  else
  {
    uint64_t v3 = self;
    swift_bridgeObjectRetain();
    id v2 = objc_msgSend(v3, sel_mainBundle);
    id v1 = 0;
  }
  id v4 = v1;
  unint64_t v5 = (void *)sub_24E2F0E90();
  uint64_t v6 = (void *)sub_24E2F0E90();
  id v7 = objc_msgSend(v2, sel_localizedStringForKey_value_table_, v5, 0, v6);

  uint64_t v8 = sub_24E2F0EC0();
  uint64_t v10 = v9;

  swift_bridgeObjectRelease();
  qword_2698CB1A8 = v8;
  unk_2698CB1B0 = v10;
  qword_2698CB1B8 = 1918989427;
  unk_2698CB1C0 = 0xE400000000000000;
  byte_2698CB1C8 = 2;
}

uint64_t static Badge.favorite.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2698CA4B8 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_2698CB1B0;
  uint64_t v3 = qword_2698CB1B8;
  uint64_t v4 = unk_2698CB1C0;
  char v5 = byte_2698CB1C8;
  *(void *)a1 = qword_2698CB1A8;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void sub_24E2CAA84()
{
  if (qword_2698CA500 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_2698D1E70;
  if (qword_2698D1E70)
  {
    swift_bridgeObjectRetain();
    id v1 = v0;
    id v2 = v1;
  }
  else
  {
    uint64_t v3 = self;
    swift_bridgeObjectRetain();
    id v2 = objc_msgSend(v3, sel_mainBundle);
    id v1 = 0;
  }
  id v4 = v1;
  char v5 = (void *)sub_24E2F0E90();
  uint64_t v6 = (void *)sub_24E2F0E90();
  id v7 = objc_msgSend(v2, sel_localizedStringForKey_value_table_, v5, 0, v6);

  uint64_t v8 = sub_24E2F0EC0();
  uint64_t v10 = v9;

  swift_bridgeObjectRelease();
  qword_2698CB1D0 = v8;
  *(void *)algn_2698CB1D8 = v10;
  qword_2698CB1E0 = 0x72656D6974;
  unk_2698CB1E8 = 0xE500000000000000;
  byte_2698CB1F0 = 3;
}

uint64_t static Badge.temporary.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2698CA4C0 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_2698CB1D8;
  uint64_t v3 = qword_2698CB1E0;
  uint64_t v4 = unk_2698CB1E8;
  char v5 = byte_2698CB1F0;
  *(void *)a1 = qword_2698CB1D0;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void sub_24E2CAC7C()
{
  if (qword_2698CA500 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_2698D1E70;
  if (qword_2698D1E70)
  {
    swift_bridgeObjectRetain();
    id v1 = v0;
    id v2 = v1;
  }
  else
  {
    uint64_t v3 = self;
    swift_bridgeObjectRetain();
    id v2 = objc_msgSend(v3, sel_mainBundle);
    id v1 = 0;
  }
  id v4 = v1;
  char v5 = (void *)sub_24E2F0E90();
  uint64_t v6 = (void *)sub_24E2F0E90();
  id v7 = objc_msgSend(v2, sel_localizedStringForKey_value_table_, v5, 0, v6);

  uint64_t v8 = sub_24E2F0EC0();
  uint64_t v10 = v9;

  swift_bridgeObjectRelease();
  qword_2698CB1F8 = v8;
  unk_2698CB200 = v10;
  qword_2698CB208 = 0x616C732E6C6C6562;
  unk_2698CB210 = 0xEA00000000006873;
  byte_2698CB218 = 0;
}

uint64_t static Badge.mute.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2698CA4C8 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_2698CB200;
  uint64_t v3 = qword_2698CB208;
  uint64_t v4 = unk_2698CB210;
  char v5 = byte_2698CB218;
  *(void *)a1 = qword_2698CB1F8;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void sub_24E2CAE78()
{
  if (qword_2698CA500 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_2698D1E70;
  if (qword_2698D1E70)
  {
    swift_bridgeObjectRetain();
    id v1 = v0;
    id v2 = v1;
  }
  else
  {
    uint64_t v3 = self;
    swift_bridgeObjectRetain();
    id v2 = objc_msgSend(v3, sel_mainBundle);
    id v1 = 0;
  }
  id v4 = v1;
  char v5 = (void *)sub_24E2F0E90();
  uint64_t v6 = (void *)sub_24E2F0E90();
  id v7 = objc_msgSend(v2, sel_localizedStringForKey_value_table_, v5, 0, v6);

  uint64_t v8 = sub_24E2F0EC0();
  uint64_t v10 = v9;

  swift_bridgeObjectRelease();
  qword_2698CB220 = v8;
  *(void *)algn_2698CB228 = v10;
  qword_2698CB230 = 0xD000000000000010;
  unk_2698CB238 = 0x800000024E2F6E70;
  byte_2698CB240 = 1;
}

uint64_t static Badge.satellite.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2698CA4D0 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_2698CB228;
  uint64_t v3 = qword_2698CB230;
  uint64_t v4 = unk_2698CB238;
  char v5 = byte_2698CB240;
  *(void *)a1 = qword_2698CB220;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void sub_24E2CB080()
{
  if (qword_2698CA500 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_2698D1E70;
  if (qword_2698D1E70)
  {
    swift_bridgeObjectRetain();
    id v1 = v0;
    id v2 = v1;
  }
  else
  {
    uint64_t v3 = self;
    swift_bridgeObjectRetain();
    id v2 = objc_msgSend(v3, sel_mainBundle);
    id v1 = 0;
  }
  id v4 = v1;
  char v5 = (void *)sub_24E2F0E90();
  uint64_t v6 = (void *)sub_24E2F0E90();
  id v7 = objc_msgSend(v2, sel_localizedStringForKey_value_table_, v5, 0, v6);

  uint64_t v8 = sub_24E2F0EC0();
  uint64_t v10 = v9;

  swift_bridgeObjectRelease();
  qword_2698CB248 = v8;
  unk_2698CB250 = v10;
  qword_2698CB258 = 0x722E657275676966;
  unk_2698CB260 = 0xEA00000000006E75;
  byte_2698CB268 = 0;
}

uint64_t static Badge.running.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2698CA4D8 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_2698CB250;
  uint64_t v3 = qword_2698CB258;
  uint64_t v4 = unk_2698CB260;
  char v5 = byte_2698CB268;
  *(void *)a1 = qword_2698CB248;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void sub_24E2CB27C()
{
  if (qword_2698CA500 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_2698D1E70;
  if (qword_2698D1E70)
  {
    swift_bridgeObjectRetain();
    id v1 = v0;
    id v2 = v1;
  }
  else
  {
    uint64_t v3 = self;
    swift_bridgeObjectRetain();
    id v2 = objc_msgSend(v3, sel_mainBundle);
    id v1 = 0;
  }
  id v4 = v1;
  char v5 = (void *)sub_24E2F0E90();
  uint64_t v6 = (void *)sub_24E2F0E90();
  id v7 = objc_msgSend(v2, sel_localizedStringForKey_value_table_, v5, 0, v6);

  uint64_t v8 = sub_24E2F0EC0();
  uint64_t v10 = v9;

  swift_bridgeObjectRelease();
  qword_2698CB270 = v8;
  *(void *)algn_2698CB278 = v10;
  qword_2698CB280 = 0x656C6379636962;
  unk_2698CB288 = 0xE700000000000000;
  byte_2698CB290 = 0;
}

uint64_t static Badge.cycling.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2698CA4E0 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_2698CB278;
  uint64_t v3 = qword_2698CB280;
  uint64_t v4 = unk_2698CB288;
  char v5 = byte_2698CB290;
  *(void *)a1 = qword_2698CB270;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void sub_24E2CB474()
{
  if (qword_2698CA500 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_2698D1E70;
  if (qword_2698D1E70)
  {
    swift_bridgeObjectRetain();
    id v1 = v0;
    id v2 = v1;
  }
  else
  {
    uint64_t v3 = self;
    swift_bridgeObjectRetain();
    id v2 = objc_msgSend(v3, sel_mainBundle);
    id v1 = 0;
  }
  id v4 = v1;
  char v5 = (void *)sub_24E2F0E90();
  uint64_t v6 = (void *)sub_24E2F0E90();
  id v7 = objc_msgSend(v2, sel_localizedStringForKey_value_table_, v5, 0, v6);

  uint64_t v8 = sub_24E2F0EC0();
  uint64_t v10 = v9;

  swift_bridgeObjectRelease();
  qword_2698CB298 = v8;
  unk_2698CB2A0 = v10;
  qword_2698CB2A8 = 7496035;
  unk_2698CB2B0 = 0xE300000000000000;
  byte_2698CB2B8 = 0;
}

uint64_t static Badge.automotive.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2698CA4E8 != -1) {
    swift_once();
  }
  uint64_t v2 = unk_2698CB2A0;
  uint64_t v3 = qword_2698CB2A8;
  uint64_t v4 = unk_2698CB2B0;
  char v5 = byte_2698CB2B8;
  *(void *)a1 = qword_2698CB298;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

BOOL _s10FindMyCore5BadgeV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  int v4 = *(unsigned __int8 *)(a1 + 32);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  int v7 = *(unsigned __int8 *)(a2 + 32);
  BOOL v8 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v8 || (char v9 = sub_24E2F1430(), result = 0, (v9 & 1) != 0))
  {
    if (v2 == v5 && v3 == v6) {
      return v4 == v7;
    }
    char v12 = sub_24E2F1430();
    BOOL result = 0;
    if (v12) {
      return v4 == v7;
    }
  }
  return result;
}

unint64_t sub_24E2CB710()
{
  unint64_t result = qword_2698CB2C0;
  if (!qword_2698CB2C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB2C0);
  }
  return result;
}

unint64_t sub_24E2CB768()
{
  unint64_t result = qword_2698CB2C8;
  if (!qword_2698CB2C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB2C8);
  }
  return result;
}

uint64_t _s17AssociatedHandlesVwxx()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Badge(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Badge(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for Badge(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for Badge(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 33)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Badge(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Badge()
{
  return &type metadata for Badge;
}

uint64_t getEnumTagSinglePayload for Badge.Color(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Badge.Color(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E2CBB14);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

unsigned char *sub_24E2CBB3C(unsigned char *result, char a2)
{
  *__n128 result = a2;
  return result;
}

ValueMetadata *type metadata accessor for Badge.Color()
{
  return &type metadata for Badge.Color;
}

uint64_t FindMyRelativeDate.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_24E2F0930();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t FindMyRelativeDate.date.setter(uint64_t a1)
{
  uint64_t v3 = sub_24E2F0930();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);
  return v4(v1, a1, v3);
}

uint64_t (*FindMyRelativeDate.date.modify())()
{
  return nullsub_1;
}

uint64_t FindMyRelativeDate.recencyKey.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FindMyRelativeDate() + 20);
  uint64_t v5 = *(void *)(v3 + 16);
  uint64_t v4 = *(void *)(v3 + 24);
  uint64_t v6 = *(void *)(v3 + 32);
  uint64_t v7 = *(void *)(v3 + 40);
  uint64_t v8 = *(void *)(v3 + 48);
  uint64_t v9 = *(void *)(v3 + 56);
  uint64_t v10 = *(void *)(v3 + 64);
  uint64_t v11 = *(void *)(v3 + 72);
  uint64_t v12 = *(void *)(v3 + 80);
  uint64_t v13 = *(void *)(v3 + 88);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = v10;
  *(void *)(a1 + 72) = v11;
  *(void *)(a1 + 80) = v12;
  *(void *)(a1 + 88) = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for FindMyRelativeDate()
{
  uint64_t result = qword_26B1B53C0;
  if (!qword_26B1B53C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

__n128 FindMyRelativeDate.recencyKey.setter(long long *a1)
{
  long long v9 = a1[1];
  long long v10 = *a1;
  long long v7 = a1[3];
  long long v8 = a1[2];
  __n128 v6 = (__n128)a1[4];
  uint64_t v2 = *((void *)a1 + 10);
  uint64_t v3 = *((void *)a1 + 11);
  uint64_t v4 = v1 + *(int *)(type metadata accessor for FindMyRelativeDate() + 20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)uint64_t v4 = v10;
  *(_OWORD *)(v4 + 16) = v9;
  *(_OWORD *)(v4 + 32) = v8;
  *(_OWORD *)(v4 + 48) = v7;
  __n128 result = v6;
  *(__n128 *)(v4 + 64) = v6;
  *(void *)(v4 + 80) = v2;
  *(void *)(v4 + 88) = v3;
  return result;
}

uint64_t (*FindMyRelativeDate.recencyKey.modify())()
{
  return nullsub_1;
}

__n128 FindMyRelativeDate.init(date:recencyKey:)@<Q0>(uint64_t a1@<X0>, long long *a2@<X1>, uint64_t a3@<X8>)
{
  long long v14 = *a2;
  long long v12 = a2[2];
  long long v13 = a2[1];
  __n128 v10 = (__n128)a2[4];
  long long v11 = a2[3];
  uint64_t v5 = *((void *)a2 + 10);
  uint64_t v6 = *((void *)a2 + 11);
  uint64_t v7 = sub_24E2F0930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(a3, a1, v7);
  uint64_t v8 = a3 + *(int *)(type metadata accessor for FindMyRelativeDate() + 20);
  *(_OWORD *)uint64_t v8 = v14;
  *(_OWORD *)(v8 + 16) = v13;
  *(_OWORD *)(v8 + 32) = v12;
  *(_OWORD *)(v8 + 48) = v11;
  __n128 result = v10;
  *(__n128 *)(v8 + 64) = v10;
  *(void *)(v8 + 80) = v5;
  *(void *)(v8 + 88) = v6;
  return result;
}

__n128 FindMyRelativeDate.forceNowRecencyKey()@<Q0>(uint64_t a1@<X8>)
{
  sub_24E2CBFF4(v1, a1);
  uint64_t v3 = a1 + *(int *)(type metadata accessor for FindMyRelativeDate() + 20);
  static FindMyRelativeDate.RecencyKey.now(recencyDuration:)(*(void *)v3, *(void *)(v3 + 8), v12);
  long long v10 = v12[1];
  long long v11 = v12[0];
  long long v8 = v12[3];
  long long v9 = v12[2];
  __n128 v7 = (__n128)v12[4];
  uint64_t v4 = v13;
  uint64_t v5 = v14;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)uint64_t v3 = v11;
  *(_OWORD *)(v3 + 16) = v10;
  *(_OWORD *)(v3 + 32) = v9;
  *(_OWORD *)(v3 + 48) = v8;
  __n128 result = v7;
  *(__n128 *)(v3 + 64) = v7;
  *(void *)(v3 + 80) = v4;
  *(void *)(v3 + 88) = v5;
  return result;
}

uint64_t sub_24E2CBFF4(uint64_t a1, uint64_t a2)
{
  uint64_t MyRelativeDate = type metadata accessor for FindMyRelativeDate();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(MyRelativeDate - 8) + 16))(a2, a1, MyRelativeDate);
  return a2;
}

void FindMyRelativeDate.RecencyKey.forceNowLabels()(void *a1@<X8>)
{
  static FindMyRelativeDate.RecencyKey.now(recencyDuration:)(*v1, v1[1], a1);
}

uint64_t FindMyRelativeDate.forcePastDatesOnly(now:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_24E2F0930();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  long long v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24E2CBFF4(v2, a2);
  if (sub_24E2F08F0()) {
    uint64_t v9 = a2;
  }
  else {
    uint64_t v9 = a1;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 40))(a2, v8, v5);
}

uint64_t FindMyRelativeDate.RecencyKey.showRecentKey(for:)(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270F9FFA8](a1, a2, *v2, v2[1]);
}

uint64_t FindMyRelativeDate.RecencyKey.localizedString(for:)(uint64_t a1)
{
  uint64_t v3 = sub_24E2F0840();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v22 - v8;
  uint64_t v10 = v1[2];
  uint64_t v12 = v1[4];
  uint64_t v11 = v1[5];
  uint64_t v27 = v1[6];
  uint64_t v28 = v11;
  uint64_t v13 = v1[7];
  uint64_t v14 = v1[8];
  v22[1] = v1[9];
  uint64_t v23 = v14;
  uint64_t v24 = v1[10];
  uint64_t v25 = v1[11];
  uint64_t v26 = v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)v22 - v8, a1, v3);
  sub_24E2F0820();
  sub_24E2CE3A8(&qword_2698CB2D0, MEMORY[0x263F06E00]);
  char v15 = sub_24E2F0E20();
  uint64_t v16 = *(void (**)(char *, uint64_t))(v4 + 8);
  v16(v7, v3);
  if (v15)
  {
    v16(v9, v3);
  }
  else
  {
    sub_24E2F07F0();
    char v17 = sub_24E2F0E20();
    v16(v7, v3);
    if (v17)
    {
      v16(v9, v3);
      uint64_t v10 = v12;
    }
    else
    {
      sub_24E2F0830();
      char v18 = sub_24E2F0E20();
      v16(v7, v3);
      if (v18)
      {
        v16(v9, v3);
        uint64_t v10 = v27;
      }
      else
      {
        sub_24E2F0810();
        char v19 = sub_24E2F0E20();
        v16(v7, v3);
        if (v19)
        {
          v16(v9, v3);
          uint64_t v10 = v23;
        }
        else
        {
          sub_24E2F0800();
          char v20 = sub_24E2F0E20();
          v16(v7, v3);
          v16(v9, v3);
          if (v20) {
            uint64_t v10 = v24;
          }
        }
      }
    }
  }
  swift_bridgeObjectRetain();
  return v10;
}

void static FindMyRelativeDate.RecencyKey.now(recencyDuration:)(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (qword_2698CA500 != -1) {
    swift_once();
  }
  uint64_t v4 = (void *)qword_2698D1E70;
  if (qword_2698D1E70)
  {
    swift_bridgeObjectRetain();
    id v5 = v4;
    id v6 = v5;
  }
  else
  {
    uint64_t v7 = self;
    swift_bridgeObjectRetain();
    id v6 = objc_msgSend(v7, sel_mainBundle);
    id v5 = 0;
  }
  id v8 = v5;
  uint64_t v9 = (void *)sub_24E2F0E90();
  uint64_t v10 = (void *)sub_24E2F0E90();
  id v11 = objc_msgSend(v6, sel_localizedStringForKey_value_table_, v9, 0, v10);

  uint64_t v12 = sub_24E2F0EC0();
  uint64_t v60 = v13;
  uint64_t v61 = v12;

  swift_bridgeObjectRelease();
  uint64_t v14 = (void *)qword_2698D1E70;
  if (qword_2698D1E70)
  {
    swift_bridgeObjectRetain();
    id v15 = v14;
    id v16 = v15;
  }
  else
  {
    char v17 = self;
    swift_bridgeObjectRetain();
    id v16 = objc_msgSend(v17, sel_mainBundle);
    id v15 = 0;
  }
  id v18 = v15;
  char v19 = (void *)sub_24E2F0E90();
  char v20 = (void *)sub_24E2F0E90();
  id v21 = objc_msgSend(v16, sel_localizedStringForKey_value_table_, v19, 0, v20);

  uint64_t v22 = sub_24E2F0EC0();
  uint64_t v58 = v23;
  uint64_t v59 = v22;

  swift_bridgeObjectRelease();
  uint64_t v24 = (void *)qword_2698D1E70;
  if (qword_2698D1E70)
  {
    swift_bridgeObjectRetain();
    id v25 = v24;
    id v26 = v25;
  }
  else
  {
    uint64_t v27 = self;
    swift_bridgeObjectRetain();
    id v26 = objc_msgSend(v27, sel_mainBundle);
    id v25 = 0;
  }
  id v28 = v25;
  uint64_t v29 = (void *)sub_24E2F0E90();
  uint64_t v30 = (void *)sub_24E2F0E90();
  id v31 = objc_msgSend(v26, sel_localizedStringForKey_value_table_, v29, 0, v30);

  uint64_t v32 = sub_24E2F0EC0();
  uint64_t v56 = v33;
  uint64_t v57 = v32;

  swift_bridgeObjectRelease();
  uint64_t v34 = (void *)qword_2698D1E70;
  if (qword_2698D1E70)
  {
    swift_bridgeObjectRetain();
    id v35 = v34;
    id v36 = v35;
  }
  else
  {
    uint64_t v37 = self;
    swift_bridgeObjectRetain();
    id v36 = objc_msgSend(v37, sel_mainBundle);
    id v35 = 0;
  }
  id v38 = v35;
  uint64_t v39 = (void *)sub_24E2F0E90();
  uint64_t v40 = (void *)sub_24E2F0E90();
  id v41 = objc_msgSend(v36, sel_localizedStringForKey_value_table_, v39, 0, v40);

  uint64_t v42 = sub_24E2F0EC0();
  uint64_t v44 = v43;

  swift_bridgeObjectRelease();
  uint64_t v45 = (void *)qword_2698D1E70;
  if (qword_2698D1E70)
  {
    swift_bridgeObjectRetain();
    id v46 = v45;
    id v47 = v46;
  }
  else
  {
    uint64_t v48 = self;
    swift_bridgeObjectRetain();
    id v47 = objc_msgSend(v48, sel_mainBundle);
    id v46 = 0;
  }
  id v49 = v46;
  uint64_t v50 = (void *)sub_24E2F0E90();
  uint64_t v51 = (void *)sub_24E2F0E90();
  id v52 = objc_msgSend(v47, sel_localizedStringForKey_value_table_, v50, 0, v51);

  uint64_t v53 = sub_24E2F0EC0();
  uint64_t v55 = v54;

  swift_bridgeObjectRelease();
  *a3 = a1;
  a3[1] = a2;
  a3[2] = v61;
  a3[3] = v60;
  a3[4] = v59;
  a3[5] = v58;
  a3[6] = v57;
  a3[7] = v56;
  a3[8] = v42;
  a3[9] = v44;
  a3[10] = v53;
  a3[11] = v55;
}

uint64_t FindMyRelativeDate.RecencyKey.hash(into:)()
{
  sub_24E2F1530();
  swift_bridgeObjectRetain();
  sub_24E2F0F20();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24E2F0F20();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24E2F0F20();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24E2F0F20();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24E2F0F20();
  return swift_bridgeObjectRelease();
}

unint64_t sub_24E2CCAD8(char a1)
{
  unint64_t result = 0x4479636E65636572;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x4C6E776F6E6B6E75;
      break;
    case 2:
      unint64_t result = 0x6F6C61646E617473;
      break;
    case 3:
      unint64_t result = 0x6D6574497473696CLL;
      break;
    case 4:
      unint64_t result = 0xD000000000000018;
      break;
    case 5:
      unint64_t result = 0xD000000000000015;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_24E2CCBDC()
{
  return sub_24E2CCAD8(*v0);
}

uint64_t sub_24E2CCBE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24E2CF100(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24E2CCC0C()
{
  return 0;
}

void sub_24E2CCC18(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_24E2CCC24(uint64_t a1)
{
  unint64_t v2 = sub_24E2CE2B4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24E2CCC60(uint64_t a1)
{
  unint64_t v2 = sub_24E2CE2B4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t FindMyRelativeDate.RecencyKey.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CB2D8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  id v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v7 = v1[1];
  uint64_t v9 = v1[2];
  v16[9] = v1[3];
  v16[10] = v9;
  uint64_t v10 = v1[4];
  v16[7] = v1[5];
  _OWORD v16[8] = v10;
  uint64_t v11 = v1[6];
  v16[5] = v1[7];
  v16[6] = v11;
  uint64_t v12 = v1[9];
  v16[3] = v1[8];
  v16[4] = v12;
  uint64_t v13 = v1[10];
  v16[1] = v1[11];
  v16[2] = v13;
  __swift_project_boxed_opaque_existential_0(a1, a1[3]);
  sub_24E2CE2B4();
  sub_24E2F14F0();
  uint64_t v17 = v8;
  uint64_t v18 = v7;
  char v19 = 0;
  uint64_t v14 = v16[11];
  sub_24E2F13F0();
  if (!v14)
  {
    LOBYTE(v17) = 1;
    sub_24E2F13E0();
    LOBYTE(v17) = 2;
    sub_24E2F13E0();
    LOBYTE(v17) = 3;
    sub_24E2F13E0();
    LOBYTE(v17) = 4;
    sub_24E2F13E0();
    LOBYTE(v17) = 5;
    sub_24E2F13E0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t FindMyRelativeDate.RecencyKey.hashValue.getter()
{
  return sub_24E2F14D0();
}

uint64_t FindMyRelativeDate.RecencyKey.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CB2E8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_0(a1, a1[3]);
  sub_24E2CE2B4();
  sub_24E2F14E0();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return (uint64_t)a2;
  }
  else
  {
    char v43 = 0;
    sub_24E2F13D0();
    uint64_t v9 = v41;
    uint64_t v10 = v42;
    LOBYTE(v41) = 1;
    uint64_t v11 = sub_24E2F13C0();
    uint64_t v38 = v10;
    uint64_t v39 = v9;
    uint64_t v37 = v11;
    LOBYTE(v41) = 2;
    uint64_t v14 = v13;
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_24E2F13C0();
    uint64_t v40 = v14;
    uint64_t v16 = v15;
    LOBYTE(v41) = 3;
    uint64_t v18 = v17;
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_24E2F13C0();
    uint64_t v36 = v16;
    uint64_t v19 = v18;
    LOBYTE(v41) = 4;
    uint64_t v21 = v20;
    swift_bridgeObjectRetain();
    uint64_t v32 = sub_24E2F13C0();
    uint64_t v33 = v22;
    uint64_t v34 = v21;
    LOBYTE(v41) = 5;
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_24E2F13C0();
    uint64_t v25 = v24;
    id v26 = *(void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v31 = v23;
    v26(v8, v5);
    uint64_t v27 = v40;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v28 = v34;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v29 = v38;
    *a2 = v39;
    a2[1] = v29;
    a2[2] = v37;
    a2[3] = v27;
    a2[4] = v36;
    a2[5] = v19;
    a2[6] = v35;
    a2[7] = v28;
    uint64_t v30 = v33;
    a2[8] = v32;
    a2[9] = v30;
    a2[10] = v31;
    a2[11] = v25;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_24E2CD49C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return FindMyRelativeDate.RecencyKey.init(from:)(a1, a2);
}

uint64_t sub_24E2CD4B4(void *a1)
{
  return FindMyRelativeDate.RecencyKey.encode(to:)(a1);
}

uint64_t sub_24E2CD4D4()
{
  return sub_24E2F14D0();
}

uint64_t FindMyRelativeDate.hash(into:)()
{
  sub_24E2F0930();
  sub_24E2CE3A8(&qword_2698CB2F0, MEMORY[0x263F07490]);
  sub_24E2F0E00();
  type metadata accessor for FindMyRelativeDate();
  sub_24E2F1530();
  swift_bridgeObjectRetain();
  sub_24E2F0F20();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24E2F0F20();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24E2F0F20();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24E2F0F20();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24E2F0F20();
  return swift_bridgeObjectRelease();
}

uint64_t static FindMyRelativeDate.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (sub_24E2F0910())
  {
    uint64_t MyRelativeDate = type metadata accessor for FindMyRelativeDate();
    uint64_t v5 = a1 + *(int *)(MyRelativeDate + 20);
    long long v6 = *(_OWORD *)(v5 + 32);
    long long v7 = *(_OWORD *)(v5 + 48);
    long long v8 = *(_OWORD *)(v5 + 64);
    uint64_t v9 = *(void *)(v5 + 80);
    uint64_t v10 = *(void *)(v5 + 88);
    long long v11 = *(_OWORD *)(v5 + 16);
    v24[0] = *(_OWORD *)v5;
    v24[1] = v11;
    v24[2] = v6;
    v24[3] = v7;
    v24[4] = v8;
    uint64_t v25 = v9;
    uint64_t v26 = v10;
    uint64_t v12 = a2 + *(int *)(MyRelativeDate + 20);
    long long v13 = *(_OWORD *)(v12 + 32);
    long long v14 = *(_OWORD *)(v12 + 48);
    long long v15 = *(_OWORD *)(v12 + 64);
    uint64_t v16 = *(void *)(v12 + 80);
    uint64_t v17 = *(void *)(v12 + 88);
    long long v18 = *(_OWORD *)(v12 + 16);
    v21[0] = *(_OWORD *)v12;
    v21[1] = v18;
    void v21[2] = v13;
    v21[3] = v14;
    v21[4] = v15;
    uint64_t v22 = v16;
    uint64_t v23 = v17;
    char MyCore0aB12RelativeDateV10RecencyKeyV2eeoiySbAE_AEtFZ_0 = _s10FindMyCore0aB12RelativeDateV10RecencyKeyV2eeoiySbAE_AEtFZ_0(v24, v21);
  }
  else
  {
    char MyCore0aB12RelativeDateV10RecencyKeyV2eeoiySbAE_AEtFZ_0 = 0;
  }
  return MyCore0aB12RelativeDateV10RecencyKeyV2eeoiySbAE_AEtFZ_0 & 1;
}

uint64_t FindMyRelativeDate.hashValue.getter()
{
  return sub_24E2F14D0();
}

uint64_t sub_24E2CD998()
{
  return sub_24E2F14D0();
}

uint64_t sub_24E2CDB08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (sub_24E2F0910())
  {
    uint64_t v6 = *(int *)(a3 + 20);
    long long v7 = *(_OWORD *)(a1 + v6 + 32);
    long long v8 = *(_OWORD *)(a1 + v6 + 48);
    long long v9 = *(_OWORD *)(a1 + v6 + 64);
    uint64_t v10 = *(void *)(a1 + v6 + 80);
    uint64_t v11 = *(void *)(a1 + v6 + 88);
    long long v12 = *(_OWORD *)(a1 + v6 + 16);
    v25[0] = *(_OWORD *)(a1 + v6);
    v25[1] = v12;
    uint64_t v25[2] = v7;
    v25[3] = v8;
    v25[4] = v9;
    uint64_t v26 = v10;
    uint64_t v27 = v11;
    uint64_t v13 = a2 + v6;
    long long v14 = *(_OWORD *)(v13 + 32);
    long long v15 = *(_OWORD *)(v13 + 48);
    long long v16 = *(_OWORD *)(v13 + 64);
    uint64_t v17 = *(void *)(v13 + 80);
    uint64_t v18 = *(void *)(v13 + 88);
    long long v19 = *(_OWORD *)(v13 + 16);
    v22[0] = *(_OWORD *)v13;
    v22[1] = v19;
    void v22[2] = v14;
    v22[3] = v15;
    v22[4] = v16;
    uint64_t v23 = v17;
    uint64_t v24 = v18;
    char MyCore0aB12RelativeDateV10RecencyKeyV2eeoiySbAE_AEtFZ_0 = _s10FindMyCore0aB12RelativeDateV10RecencyKeyV2eeoiySbAE_AEtFZ_0(v25, v22);
  }
  else
  {
    char MyCore0aB12RelativeDateV10RecencyKeyV2eeoiySbAE_AEtFZ_0 = 0;
  }
  return MyCore0aB12RelativeDateV10RecencyKeyV2eeoiySbAE_AEtFZ_0 & 1;
}

void static FindMyRelativeDate.RecencyKey.live(recencyDuration:)(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (qword_2698CA500 != -1) {
    swift_once();
  }
  uint64_t v4 = (void *)qword_2698D1E70;
  if (qword_2698D1E70)
  {
    swift_bridgeObjectRetain();
    id v5 = v4;
    id v6 = v5;
  }
  else
  {
    long long v7 = self;
    swift_bridgeObjectRetain();
    id v6 = objc_msgSend(v7, sel_mainBundle);
    id v5 = 0;
  }
  id v8 = v5;
  long long v9 = (void *)sub_24E2F0E90();
  uint64_t v10 = (void *)sub_24E2F0E90();
  id v11 = objc_msgSend(v6, sel_localizedStringForKey_value_table_, v9, 0, v10);

  uint64_t v12 = sub_24E2F0EC0();
  uint64_t v60 = v13;
  uint64_t v61 = v12;

  swift_bridgeObjectRelease();
  long long v14 = (void *)qword_2698D1E70;
  if (qword_2698D1E70)
  {
    swift_bridgeObjectRetain();
    id v15 = v14;
    id v16 = v15;
  }
  else
  {
    uint64_t v17 = self;
    swift_bridgeObjectRetain();
    id v16 = objc_msgSend(v17, sel_mainBundle);
    id v15 = 0;
  }
  id v18 = v15;
  long long v19 = (void *)sub_24E2F0E90();
  uint64_t v20 = (void *)sub_24E2F0E90();
  id v21 = objc_msgSend(v16, sel_localizedStringForKey_value_table_, v19, 0, v20);

  uint64_t v22 = sub_24E2F0EC0();
  uint64_t v58 = v23;
  uint64_t v59 = v22;

  swift_bridgeObjectRelease();
  uint64_t v24 = (void *)qword_2698D1E70;
  if (qword_2698D1E70)
  {
    swift_bridgeObjectRetain();
    id v25 = v24;
    id v26 = v25;
  }
  else
  {
    uint64_t v27 = self;
    swift_bridgeObjectRetain();
    id v26 = objc_msgSend(v27, sel_mainBundle);
    id v25 = 0;
  }
  id v28 = v25;
  uint64_t v29 = (void *)sub_24E2F0E90();
  uint64_t v30 = (void *)sub_24E2F0E90();
  id v31 = objc_msgSend(v26, sel_localizedStringForKey_value_table_, v29, 0, v30);

  uint64_t v32 = sub_24E2F0EC0();
  uint64_t v56 = v33;
  uint64_t v57 = v32;

  swift_bridgeObjectRelease();
  uint64_t v34 = (void *)qword_2698D1E70;
  if (qword_2698D1E70)
  {
    swift_bridgeObjectRetain();
    id v35 = v34;
    id v36 = v35;
  }
  else
  {
    uint64_t v37 = self;
    swift_bridgeObjectRetain();
    id v36 = objc_msgSend(v37, sel_mainBundle);
    id v35 = 0;
  }
  id v38 = v35;
  uint64_t v39 = (void *)sub_24E2F0E90();
  uint64_t v40 = (void *)sub_24E2F0E90();
  id v41 = objc_msgSend(v36, sel_localizedStringForKey_value_table_, v39, 0, v40);

  uint64_t v42 = sub_24E2F0EC0();
  uint64_t v44 = v43;

  swift_bridgeObjectRelease();
  uint64_t v45 = (void *)qword_2698D1E70;
  if (qword_2698D1E70)
  {
    swift_bridgeObjectRetain();
    id v46 = v45;
    id v47 = v46;
  }
  else
  {
    uint64_t v48 = self;
    swift_bridgeObjectRetain();
    id v47 = objc_msgSend(v48, sel_mainBundle);
    id v46 = 0;
  }
  id v49 = v46;
  uint64_t v50 = (void *)sub_24E2F0E90();
  uint64_t v51 = (void *)sub_24E2F0E90();
  id v52 = objc_msgSend(v47, sel_localizedStringForKey_value_table_, v50, 0, v51);

  uint64_t v53 = sub_24E2F0EC0();
  uint64_t v55 = v54;

  swift_bridgeObjectRelease();
  *a3 = a1;
  a3[1] = a2;
  a3[2] = v61;
  a3[3] = v60;
  a3[4] = v59;
  a3[5] = v58;
  a3[6] = v57;
  a3[7] = v56;
  a3[8] = v42;
  a3[9] = v44;
  a3[10] = v53;
  a3[11] = v55;
}

uint64_t _s10FindMyCore0aB12RelativeDateV10RecencyKeyV2eeoiySbAE_AEtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v25 = a1[4];
  uint64_t v26 = a1[3];
  uint64_t v23 = a1[6];
  uint64_t v24 = a1[5];
  uint64_t v19 = a1[8];
  uint64_t v18 = a1[9];
  uint64_t v3 = a1[11];
  uint64_t v17 = a1[10];
  uint64_t v4 = a2[2];
  uint64_t v21 = a2[3];
  uint64_t v22 = a1[7];
  uint64_t v5 = a2[5];
  uint64_t v20 = a2[4];
  uint64_t v6 = a2[6];
  uint64_t v7 = a2[7];
  uint64_t v8 = a2[8];
  uint64_t v9 = a2[9];
  uint64_t v10 = a2[10];
  uint64_t v11 = a2[11];
  if ((sub_24E2F1520() & 1) == 0) {
    return 0;
  }
  if (v2 == v4 && v26 == v21 || (char v12 = sub_24E2F1430(), result = 0, (v12 & 1) != 0))
  {
    if (v25 == v20 && v24 == v5 || (char v14 = sub_24E2F1430(), result = 0, (v14 & 1) != 0))
    {
      if (v23 == v6 && v22 == v7 || (char v15 = sub_24E2F1430(), result = 0, (v15 & 1) != 0))
      {
        if (v19 == v8 && v18 == v9 || (char v16 = sub_24E2F1430(), result = 0, (v16 & 1) != 0))
        {
          if (v17 == v10 && v3 == v11)
          {
            return 1;
          }
          else
          {
            return sub_24E2F1430();
          }
        }
      }
    }
  }
  return result;
}

unint64_t sub_24E2CE2B4()
{
  unint64_t result = qword_2698CB2E0;
  if (!qword_2698CB2E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB2E0);
  }
  return result;
}

unint64_t sub_24E2CE30C()
{
  unint64_t result = qword_2698CB2F8;
  if (!qword_2698CB2F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB2F8);
  }
  return result;
}

uint64_t sub_24E2CE360()
{
  return sub_24E2CE3A8(&qword_2698CB300, (void (*)(uint64_t))type metadata accessor for FindMyRelativeDate);
}

uint64_t sub_24E2CE3A8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for FindMyRelativeDate(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24E2F0930();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    uint64_t v11 = *((void *)v10 + 3);
    *((void *)v9 + 2) = *((void *)v10 + 2);
    *((void *)v9 + 3) = v11;
    uint64_t v12 = *((void *)v10 + 5);
    *((void *)v9 + 4) = *((void *)v10 + 4);
    *((void *)v9 + 5) = v12;
    uint64_t v13 = *((void *)v10 + 7);
    *((void *)v9 + 6) = *((void *)v10 + 6);
    *((void *)v9 + 7) = v13;
    uint64_t v14 = *((void *)v10 + 9);
    *((void *)v9 + 8) = *((void *)v10 + 8);
    *((void *)v9 + 9) = v14;
    uint64_t v15 = *((void *)v10 + 11);
    *((void *)v9 + 10) = *((void *)v10 + 10);
    *((void *)v9 + 11) = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for FindMyRelativeDate(uint64_t a1)
{
  uint64_t v2 = sub_24E2F0930();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FindMyRelativeDate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24E2F0930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  uint64_t v10 = *(void *)(v9 + 24);
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  *(void *)(v8 + 24) = v10;
  uint64_t v11 = *(void *)(v9 + 40);
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  *(void *)(v8 + 40) = v11;
  uint64_t v12 = *(void *)(v9 + 56);
  *(void *)(v8 + 48) = *(void *)(v9 + 48);
  *(void *)(v8 + 56) = v12;
  uint64_t v13 = *(void *)(v9 + 72);
  *(void *)(v8 + 64) = *(void *)(v9 + 64);
  *(void *)(v8 + 72) = v13;
  uint64_t v14 = *(void *)(v9 + 88);
  *(void *)(v8 + 80) = *(void *)(v9 + 80);
  *(void *)(v8 + 88) = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FindMyRelativeDate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24E2F0930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  v8[2] = v9[2];
  v8[3] = v9[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[4] = v9[4];
  v8[5] = v9[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[6] = v9[6];
  v8[7] = v9[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[8] = v9[8];
  v8[9] = v9[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[10] = v9[10];
  v8[11] = v9[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for FindMyRelativeDate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24E2F0930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  long long v10 = v9[3];
  v8[2] = v9[2];
  v8[3] = v10;
  long long v11 = v9[5];
  v8[4] = v9[4];
  v8[5] = v11;
  long long v12 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v12;
  return a1;
}

uint64_t assignWithTake for FindMyRelativeDate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24E2F0930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  uint64_t v10 = *(void *)(v9 + 24);
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  *(void *)(v8 + 24) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(v9 + 40);
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  *(void *)(v8 + 40) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(v9 + 56);
  *(void *)(v8 + 48) = *(void *)(v9 + 48);
  *(void *)(v8 + 56) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(v9 + 72);
  *(void *)(v8 + 64) = *(void *)(v9 + 64);
  *(void *)(v8 + 72) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(v9 + 88);
  *(void *)(v8 + 80) = *(void *)(v9 + 80);
  *(void *)(v8 + 88) = v14;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FindMyRelativeDate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24E2CE930);
}

uint64_t sub_24E2CE930(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24E2F0930();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 24);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for FindMyRelativeDate(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24E2CEA08);
}

uint64_t sub_24E2CEA08(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_24E2F0930();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  }
  return result;
}

uint64_t sub_24E2CEAC8()
{
  uint64_t result = sub_24E2F0930();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for FindMyRelativeDate.RecencyKey()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FindMyRelativeDate.RecencyKey(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for FindMyRelativeDate.RecencyKey(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy96_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t assignWithTake for FindMyRelativeDate.RecencyKey(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FindMyRelativeDate.RecencyKey(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FindMyRelativeDate.RecencyKey(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FindMyRelativeDate.RecencyKey()
{
  return &type metadata for FindMyRelativeDate.RecencyKey;
}

uint64_t getEnumTagSinglePayload for FindMyRelativeDate.RecencyKey.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FindMyRelativeDate.RecencyKey.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *__n128 result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E2CEFC0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FindMyRelativeDate.RecencyKey.CodingKeys()
{
  return &type metadata for FindMyRelativeDate.RecencyKey.CodingKeys;
}

unint64_t sub_24E2CEFFC()
{
  unint64_t result = qword_2698CB308;
  if (!qword_2698CB308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB308);
  }
  return result;
}

unint64_t sub_24E2CF054()
{
  unint64_t result = qword_2698CB310;
  if (!qword_2698CB310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB310);
  }
  return result;
}

unint64_t sub_24E2CF0AC()
{
  unint64_t result = qword_2698CB318;
  if (!qword_2698CB318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB318);
  }
  return result;
}

uint64_t sub_24E2CF100(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4479636E65636572 && a2 == 0xEF6E6F6974617275;
  if (v2 || (sub_24E2F1430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4C6E776F6E6B6E75 && a2 == 0xEC0000006C656261 || (sub_24E2F1430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F6C61646E617473 && a2 == 0xEF6C6562614C656ELL || (sub_24E2F1430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6D6574497473696CLL && a2 == 0xED00006C6562614CLL || (sub_24E2F1430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000024E2F7100 || (sub_24E2F1430() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000024E2F7120)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_24E2F1430();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

FindMyCore::Location __swiftcall Location.init(clLocation:)(FindMyCore::Location clLocation)
{
  *unint64_t v1 = clLocation.clLocation.super.isa;
  return clLocation;
}

id Location.clLocation.getter()
{
  return *v0;
}

id Location.coordinate.getter()
{
  return objc_msgSend(*v0, sel_coordinate);
}

id Location.horizontalAccuracy.getter()
{
  return objc_msgSend(*v0, sel_horizontalAccuracy);
}

void Location.timestamp.getter()
{
  id v1 = objc_msgSend(*v0, sel_timestamp);
  sub_24E2F0920();
}

uint64_t Location.distance(from:)(void *a1)
{
  objc_msgSend(*v1, sel_distanceFromLocation_, *a1);
  unint64_t v3 = v2;
  id v4 = objc_msgSend(self, sel_meters);
  uint64_t v5 = sub_24E2B1EAC(0, &qword_2698CB320);
  v6.n128_u64[0] = v3;
  return MEMORY[0x270EEDFA8](v4, v5, v6);
}

BOOL Location.isInaccurate.getter()
{
  objc_msgSend(*v0, sel_horizontalAccuracy);
  return v1 > 200.0;
}

uint64_t static Location.== infix(_:_:)()
{
  return sub_24E2F11F0() & 1;
}

void Location.hash(into:)()
{
  id v1 = *v0;
  sub_24E2F1200();
}

uint64_t Location.hashValue.getter()
{
  id v1 = *v0;
  sub_24E2F14A0();
  id v2 = v1;
  sub_24E2F1200();

  return sub_24E2F14D0();
}

uint64_t sub_24E2CF664()
{
  return sub_24E2F11F0() & 1;
}

uint64_t sub_24E2CF6B8()
{
  id v1 = *v0;
  sub_24E2F14A0();
  id v2 = v1;
  sub_24E2F1200();

  return sub_24E2F14D0();
}

void sub_24E2CF708()
{
  id v1 = *v0;
  sub_24E2F1200();
}

uint64_t sub_24E2CF760()
{
  id v1 = *v0;
  sub_24E2F14A0();
  id v2 = v1;
  sub_24E2F1200();

  return sub_24E2F14D0();
}

unint64_t sub_24E2CF7B0()
{
  unint64_t result = qword_2698CB328[0];
  if (!qword_2698CB328[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_2698CB328);
  }
  return result;
}

ValueMetadata *type metadata accessor for Location()
{
  return &type metadata for Location;
}

uint64_t sub_24E2CF814(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v29 = a5;
  uint64_t v30 = a8;
  uint64_t v10 = v9;
  id v38 = a1;
  uint64_t v39 = a2;
  uint64_t v28 = *(void *)(a5 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v40 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  id v36 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  uint64_t v13 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v15 = (char *)&v26 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v33 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v31 = *(void *)(v17 - 8);
  uint64_t v32 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v26 - v18;
  uint64_t v34 = v8;
  uint64_t v20 = sub_24E2F1160();
  if (!v20) {
    return sub_24E2F1070();
  }
  uint64_t v21 = v20;
  uint64_t v27 = v15;
  uint64_t v43 = sub_24E2F1330();
  uint64_t v35 = sub_24E2F1340();
  sub_24E2F1310();
  id v41 = v19;
  uint64_t result = sub_24E2F1150();
  if (v21 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v23 = (void (**)(char *))(v36 + 2);
    ++v36;
    uint64_t v37 = v23;
    uint64_t v24 = v27;
    while (1)
    {
      uint64_t v25 = (void (*)(char *, void))sub_24E2F1190();
      (*v37)(v24);
      v25(v42, 0);
      v38(v24, v40);
      if (v10) {
        break;
      }
      uint64_t v10 = 0;
      (*v36)(v24, AssociatedTypeWitness);
      sub_24E2F1320();
      sub_24E2F1170();
      if (!--v21)
      {
        (*(void (**)(char *, uint64_t))(v31 + 8))(v41, v32);
        return v43;
      }
    }
    (*v36)(v24, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v41, v32);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v28 + 32))(v30, v40, v29);
  }
  return result;
}

uint64_t OrganizedList.init(values:enabledSections:tag:search:)@<X0>(Swift::OpaquePointer a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  type metadata accessor for OrganizedList.SectionedValues();
  *a6 = sub_24E2F1070();
  a6[1] = sub_24E2F1070();
  a6[2] = sub_24E2F1070();
  a6[3] = a2;
  uint64_t v10 = type metadata accessor for OrganizedList();
  uint64_t v11 = (char *)a6 + *(int *)(v10 + 72);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v13 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v11, a3, AssociatedTypeWitness);
  uint64_t v14 = (uint64_t *)((char *)a6 + *(int *)(v10 + 76));
  *uint64_t v14 = a4;
  v14[1] = a5;
  OrganizedList.reloadData(with:)(a1);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(a3, AssociatedTypeWitness);
}

uint64_t OrganizedListSortableSort.sortDescriptor.getter(uint64_t a1, uint64_t a2)
{
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a2 + 32);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5(KeyPath, AssociatedTypeWitness, a1, a2);
  return swift_release();
}

uint64_t OrganizedList.sortedValues.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t OrganizedList.filteredValues.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t OrganizedList.filteredValuesElements.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_24E2CFE5C()
{
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  type metadata accessor for OrganizedList.SectionedValues();
  sub_24E2F10D0();
  sub_24E2F10D0();
  swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v0 = sub_24E2F1010();
  swift_release();
  swift_bridgeObjectRelease();
  OrganizedList.reloadData(with:)((Swift::OpaquePointer)v0);
  return swift_bridgeObjectRelease();
}

uint64_t OrganizedList.tag.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = (uint64_t *)(v2 + *(int *)(a1 + 76));
  uint64_t v6 = *v4;
  unint64_t v5 = v4[1];
  uint64_t v7 = v6 & 0xFFFFFFFFFFFFLL;
  if ((v5 & 0x2000000000000000) != 0) {
    uint64_t v8 = HIBYTE(v5) & 0xF;
  }
  else {
    uint64_t v8 = v7;
  }
  if (v8)
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    return (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 24))(AssociatedTypeWitness, AssociatedConformanceWitness);
  }
  else
  {
    uint64_t v12 = v2 + *(int *)(a1 + 72);
    uint64_t v13 = swift_getAssociatedTypeWitness();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
    return v14(a2, v12, v13);
  }
}

uint64_t sub_24E2D00E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for OrganizedList();
  return OrganizedList.tag.getter(v2, a1);
}

uint64_t sub_24E2D0138(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for OrganizedList();
  return sub_24E2D1F44(a1, v2);
}

uint64_t OrganizedList.tag.setter(uint64_t a1, uint64_t a2)
{
  sub_24E2D1F44(a1, a2);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  id v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8);
  return v4(a1, AssociatedTypeWitness);
}

void (*OrganizedList.tag.modify(void *a1, uint64_t a2))(uint64_t **a1, char a2)
{
  unint64_t v5 = malloc(0x30uLL);
  *a1 = v5;
  *unint64_t v5 = a2;
  v5[1] = v2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5[2] = AssociatedTypeWitness;
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  v5[3] = v7;
  size_t v8 = *(void *)(v7 + 64);
  uint64_t v5[4] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v5[5] = v9;
  OrganizedList.tag.getter(a2, (uint64_t)v9);
  return sub_24E2D0308;
}

void sub_24E2D0308(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = (void *)(*a1)[4];
  id v4 = (void *)(*a1)[5];
  uint64_t v5 = (*a1)[2];
  uint64_t v6 = (*a1)[3];
  uint64_t v7 = **a1;
  if (a2)
  {
    (*(void (**)(uint64_t, void *, uint64_t))(v6 + 16))((*a1)[4], v4, v5);
    sub_24E2D1EA8((uint64_t)v3, v7);
    size_t v8 = *(void (**)(void *, uint64_t))(v6 + 8);
    v8(v3, v5);
    v8(v4, v5);
  }
  else
  {
    sub_24E2D1EA8((*a1)[5], v7);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  free(v4);
  free(v3);
  free(v2);
}

uint64_t OrganizedList.search.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 76));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_24E2D042C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  unint64_t v3 = (void *)(a1 + *(int *)(type metadata accessor for OrganizedList() + 76));
  uint64_t v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_24E2D0490(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  swift_bridgeObjectRetain();
  uint64_t v3 = type metadata accessor for OrganizedList();
  return OrganizedList.search.setter(v1, v2, v3);
}

uint64_t OrganizedList.search.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)(v3 + *(int *)(a3 + 76));
  swift_bridgeObjectRelease();
  *uint64_t v6 = a1;
  v6[1] = a2;
  return sub_24E2CFE5C();
}

uint64_t (*OrganizedList.search.modify(void *a1, uint64_t a2))(uint64_t a1, char a2)
{
  *a1 = a2;
  a1[1] = v2;
  return sub_24E2D0590;
}

uint64_t sub_24E2D0590(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return sub_24E2CFE5C();
  }
  return result;
}

uint64_t sub_24E2D05BC()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  swift_checkMetadataState();
  sub_24E2F1290();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  return sub_24E2F1140();
}

Swift::Void __swiftcall OrganizedList.reloadData(with:)(Swift::OpaquePointer with)
{
  uint64_t v4 = v1[2];
  uint64_t v98 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v97 = v1[6];
  uint64_t rawValue = v4;
  uint64_t v117 = v98;
  uint64_t v7 = v98;
  uint64_t v118 = v6;
  uint64_t v119 = v5;
  uint64_t v120 = v97;
  uint64_t v8 = type metadata accessor for OrganizedList.SectionedValues();
  MEMORY[0x270FA5388](v8);
  uint64_t v77 = (uint64_t)&v67 - v9;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v82 = *(void *)(swift_getAssociatedConformanceWitness() + 8);
  uint64_t v94 = (char **)AssociatedTypeWitness;
  uint64_t v81 = swift_getAssociatedTypeWitness();
  uint64_t v93 = *(char **)(v81 - 8);
  MEMORY[0x270FA5388](v81);
  uint64_t v80 = (char *)&v67 - v11;
  uint64_t v86 = v6;
  uint64_t v12 = swift_getAssociatedTypeWitness();
  uint64_t v83 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v76 = (char *)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v95 = (char *)&v67 - v16;
  uint64_t v68 = v17;
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v67 - v18;
  uint64_t rawValue = (uint64_t)with._rawValue;
  uint64_t v106 = v4;
  uint64_t v107 = v7;
  uint64_t v108 = v6;
  uint64_t v109 = v5;
  uint64_t v20 = v97;
  uint64_t v110 = v97;
  uint64_t v111 = v2;
  uint64_t v85 = v2;
  uint64_t v21 = sub_24E2F10D0();
  uint64_t v22 = *(void *)(swift_getAssociatedConformanceWitness() + 8);
  swift_bridgeObjectRetain();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v23 = 0;
  uint64_t v24 = sub_24E2F0DB0();
  uint64_t rawValue = sub_24E2F1070();
  uint64_t v78 = v8;
  uint64_t v115 = sub_24E2F1070();
  uint64_t v25 = sub_24E2F1070();
  uint64_t v113 = v24;
  uint64_t v114 = v25;
  uint64_t v99 = v4;
  uint64_t v101 = v4;
  uint64_t v26 = v12;
  uint64_t v102 = v98;
  uint64_t v27 = v86;
  uint64_t v103 = v86;
  uint64_t v96 = v5;
  uint64_t v104 = v5;
  uint64_t v105 = v20;
  uint64_t v100 = v21;
  uint64_t v79 = v22;
  sub_24E2F0DA0();
  uint64_t v84 = v24;
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  uint64_t v28 = v27;
  uint64_t v29 = sub_24E2F1000();
  swift_bridgeObjectRelease();
  if (!MEMORY[0x253338020](v29, v26))
  {
LABEL_18:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v63 = rawValue;
    uint64_t v64 = v85;
    swift_bridgeObjectRelease();
    *uint64_t v64 = v63;
    uint64_t v65 = v115;
    swift_bridgeObjectRelease();
    v64[1] = v65;
    uint64_t v66 = v114;
    swift_bridgeObjectRelease();
    v64[2] = v66;
    return;
  }
  uint64_t v75 = swift_checkMetadataState();
  uint64_t v30 = 0;
  uint64_t v94 = (char **)(v83 + 16);
  uint64_t v74 = (void (**)(char *, char *, uint64_t))(v83 + 32);
  int v73 = (void (**)(char *, uint64_t))(v93 + 8);
  uint64_t v69 = (void (**)(char *, uint64_t))(v83 + 8);
  uint64_t v72 = v26;
  uint64_t v71 = v19;
  uint64_t v70 = v29;
  while (1)
  {
    char v32 = sub_24E2F1090();
    sub_24E2F1060();
    if (v32)
    {
      unint64_t v33 = v29
          + ((*(unsigned __int8 *)(v83 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80))
          + *(void *)(v83 + 72) * v30;
      uint64_t v93 = *(char **)(v83 + 16);
      ((void (*)(char *, unint64_t, uint64_t))v93)(v19, v33, v26);
      uint64_t v34 = v30 + 1;
      if (__OFADD__(v30, 1)) {
        goto LABEL_17;
      }
      goto LABEL_7;
    }
    uint64_t v62 = sub_24E2F12C0();
    if (v68 != 8) {
      break;
    }
    uint64_t v113 = v62;
    uint64_t v93 = *v94;
    ((void (*)(char *, uint64_t *, uint64_t))v93)(v19, &v113, v26);
    swift_unknownObjectRelease();
    uint64_t v34 = v30 + 1;
    if (__OFADD__(v30, 1))
    {
LABEL_17:
      __break(1u);
      goto LABEL_18;
    }
LABEL_7:
    uint64_t v35 = v95;
    (*v74)(v95, v19, v26);
    MEMORY[0x253337D30](&v113, v35, v84, v26, v100, v79);
    uint64_t v36 = v113;
    uint64_t v92 = v30;
    uint64_t v91 = v34;
    if (!v113) {
      uint64_t v36 = sub_24E2F1070();
    }
    uint64_t v90 = (uint64_t *)v36;
    uint64_t v113 = v36;
    uint64_t v37 = v80;
    uint64_t v38 = sub_24E2F1290();
    MEMORY[0x270FA5388](v38);
    uint64_t v39 = v99;
    uint64_t v40 = v98;
    *(&v67 - 6) = v99;
    *(&v67 - 5) = v40;
    uint64_t v41 = v28;
    *(&v67 - 4) = v28;
    uint64_t v42 = v96;
    uint64_t v43 = v97;
    *(&v67 - 3) = v96;
    *(&v67 - 2) = v43;
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v88 = &v67;
    uint64_t v45 = MEMORY[0x270FA5388](KeyPath);
    *(&v67 - 6) = v40;
    *(&v67 - 5) = v41;
    *(&v67 - 4) = v42;
    *(&v67 - 3) = v43;
    *(&v67 - 2) = v45;
    uint64_t v46 = sub_24E2F0770();
    uint64_t v47 = v81;
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v50 = sub_24E2CF814((void (*)(char *, char *))sub_24E2D201C, (uint64_t)(&v67 - 8), v47, v46, MEMORY[0x263F8E628], AssociatedConformanceWitness, MEMORY[0x263F8E658], v49);
    uint64_t v89 = v23;
    uint64_t v51 = v43;
    (*v73)(v37, v47);
    swift_release();
    uint64_t v112 = v50;
    sub_24E2F10D0();
    swift_getWitnessTable();
    swift_getWitnessTable();
    uint64_t v52 = sub_24E2F0FF0();
    swift_bridgeObjectRelease();
    uint64_t v53 = swift_bridgeObjectRelease();
    uint64_t v90 = &v67;
    uint64_t v113 = v52;
    MEMORY[0x270FA5388](v53);
    uint64_t v54 = v98;
    *(&v67 - 6) = v39;
    *(&v67 - 5) = v54;
    uint64_t v55 = v86;
    uint64_t v56 = v96;
    *(&v67 - 4) = v86;
    *(&v67 - 3) = v56;
    uint64_t v57 = v85;
    *(&v67 - 2) = v51;
    *(&v67 - 1) = (uint64_t)v57;
    swift_bridgeObjectRetain();
    swift_getWitnessTable();
    uint64_t v23 = v89;
    uint64_t v113 = sub_24E2F1300();
    MEMORY[0x270FA5388](v113);
    *(&v67 - 6) = v99;
    *(&v67 - 5) = v54;
    *(&v67 - 4) = v55;
    *(&v67 - 3) = v56;
    *(&v67 - 2) = v97;
    *(&v67 - 1) = (uint64_t)v57;
    uint64_t v58 = sub_24E2F1300();
    uint64_t v113 = v52;
    swift_getWitnessTable();
    if (sub_24E2F1180())
    {
      swift_bridgeObjectRelease();
      uint64_t v28 = v55;
      uint64_t v26 = v72;
    }
    else
    {
      uint64_t v59 = (uint64_t)v76;
      uint64_t v26 = v72;
      ((void (*)(char *, char *, uint64_t))v93)(v76, v95, v72);
      sub_24E2D1420(v59, v52, v77);
      sub_24E2F10D0();
      sub_24E2F10B0();
      uint64_t v28 = v55;
    }
    uint64_t v113 = v58;
    if (sub_24E2F1180())
    {
      (*v69)(v95, v26);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v60 = (uint64_t)v76;
      uint64_t v61 = v95;
      ((void (*)(char *, char *, uint64_t))v93)(v76, v95, v26);
      sub_24E2D1420(v60, v58, v77);
      sub_24E2F10D0();
      swift_bridgeObjectRetain();
      sub_24E2F10B0();
      uint64_t v113 = v58;
      sub_24E2F10A0();
      (*v69)(v61, v26);
    }
    uint64_t v19 = v71;
    uint64_t v29 = v70;
    uint64_t v31 = v91;
    uint64_t v30 = v92 + 1;
    if (v31 == MEMORY[0x253338020](v70, v26)) {
      goto LABEL_18;
    }
  }
  __break(1u);
}

uint64_t OrganizedList.SectionedValues.section.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16);
  return v4(a1, v1, AssociatedTypeWitness);
}

uint64_t OrganizedList.SectionedValues.values.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_24E2D1420@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(a3, a1, AssociatedTypeWitness);
  uint64_t result = type metadata accessor for OrganizedList.SectionedValues();
  *(void *)(a3 + *(int *)(result + 60)) = a2;
  return result;
}

uint64_t sub_24E2D14EC()
{
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v1 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 48);
  uint64_t v2 = swift_checkMetadataState();
  uint64_t v3 = v1(v2, AssociatedConformanceWitness);
  uint64_t v5 = v4;
  if (v3 == v1(v2, AssociatedConformanceWitness) && v5 == v6) {
    char v8 = 0;
  }
  else {
    char v8 = sub_24E2F1430();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_24E2D161C()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  return OrganizedListSortableSort.sortDescriptor.getter(AssociatedTypeWitness, AssociatedConformanceWitness);
}

uint64_t sub_24E2D16B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23[1] = v11;
  v23[2] = v12;
  void v23[3] = v13;
  v23[4] = v14;
  v23[5] = v15;
  uint64_t v16 = (uint64_t *)(a2 + *(int *)(type metadata accessor for OrganizedList() + 76));
  uint64_t v18 = *v16;
  unint64_t v17 = v16[1];
  if ((v17 & 0x2000000000000000) != 0) {
    uint64_t v19 = HIBYTE(v17) & 0xF;
  }
  else {
    uint64_t v19 = v18 & 0xFFFFFFFFFFFFLL;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, a3);
  if (v19)
  {
    uint64_t v20 = *(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t))(a4 + 8);
    swift_bridgeObjectRetain();
    char v21 = v20(v18, v17, a3, a4);
    swift_bridgeObjectRelease();
  }
  else
  {
    char v21 = 1;
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, a3);
  return v21 & 1;
}

uint64_t sub_24E2D182C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v18[0] = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v13 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v15 = (char *)v18 - v14;
  v18[1] = a3;
  void v18[2] = a4;
  v18[3] = a5;
  v18[4] = a6;
  v18[5] = a7;
  uint64_t v16 = type metadata accessor for OrganizedList();
  OrganizedList.tag.getter(v16, (uint64_t)v15);
  LOBYTE(a6) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(a7 + 24))(v15, a3, a7);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, AssociatedTypeWitness);
  return a6 & 1;
}

uint64_t static OrganizedList.SectionedValues<>.== infix(_:_:)()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  if (sub_24E2F0E20())
  {
    type metadata accessor for OrganizedList.SectionedValues();
    char v0 = sub_24E2F10E0();
  }
  else
  {
    char v0 = 0;
  }
  return v0 & 1;
}

uint64_t sub_24E2D1A7C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_24E2D1D0C(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void))static OrganizedList.SectionedValues<>.== infix(_:_:));
}

uint64_t static OrganizedList<>.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  type metadata accessor for OrganizedList.SectionedValues();
  swift_getWitnessTable();
  if ((sub_24E2F10E0() & 1) != 0
    && (sub_24E2F10E0() & 1) != 0
    && (sub_24E2F10E0() & 1) != 0
    && (swift_getAssociatedTypeWitness(),
        swift_getAssociatedConformanceWitness(),
        swift_getAssociatedTypeWitness(),
        swift_getAssociatedConformanceWitness(),
        (sub_24E2F1130() & 1) != 0)
    && (swift_getAssociatedTypeWitness(),
        uint64_t v4 = type metadata accessor for OrganizedList(),
        swift_getAssociatedConformanceWitness(),
        (sub_24E2F0E20() & 1) != 0))
  {
    uint64_t v5 = *(int *)(v4 + 76);
    uint64_t v6 = *(void *)(a1 + v5);
    uint64_t v7 = *(void *)(a1 + v5 + 8);
    uint64_t v8 = (void *)(a2 + v5);
    if (v6 == *v8 && v7 == v8[1]) {
      char v9 = 1;
    }
    else {
      char v9 = sub_24E2F1430();
    }
  }
  else
  {
    char v9 = 0;
  }
  return v9 & 1;
}

uint64_t sub_24E2D1CF4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_24E2D1D0C(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void))static OrganizedList<>.== infix(_:_:));
}

uint64_t sub_24E2D1D0C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, void, void, void, void, void, void))
{
  return a5(a1, a2, a3[2], a3[3], a3[4], a3[5], a3[6], *(void *)(a4 - 8));
}

uint64_t static OrganizedList.empty.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v4 = (char *)&v9 - v3;
  uint64_t v5 = sub_24E2F1070();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 24))(AssociatedTypeWitness, AssociatedConformanceWitness);
  uint64_t v7 = sub_24E2D05BC();
  return OrganizedList.init(values:enabledSections:tag:search:)((Swift::OpaquePointer)v5, v7, (uint64_t)v4, 0, 0xE000000000000000, a1);
}

uint64_t type metadata accessor for OrganizedList.SectionedValues()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for OrganizedList()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24E2D1EA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 72);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 24))(v4, a1, AssociatedTypeWitness);
  return sub_24E2CFE5C();
}

uint64_t sub_24E2D1F48()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 24);
  uint64_t v4 = swift_bridgeObjectRetain();
  v3(v4, v1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24E2D1FD0()
{
  return sub_24E2D14EC() & 1;
}

uint64_t sub_24E2D1FFC()
{
  return 40;
}

__n128 sub_24E2D2008(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_24E2D201C()
{
  return swift_getAtKeyPath();
}

uint64_t sub_24E2D2048(uint64_t a1)
{
  return sub_24E2D20A8(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_24E2D16B0) & 1;
}

uint64_t sub_24E2D2078(uint64_t a1)
{
  return sub_24E2D20A8(a1, sub_24E2D182C) & 1;
}

uint64_t sub_24E2D20A8(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void))
{
  return a2(a1, v2[7], v2[2], v2[3], v2[4], v2[5], v2[6]) & 1;
}

uint64_t sub_24E2D20E0()
{
  return 40;
}

__n128 sub_24E2D20EC(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_24E2D2108()
{
  return 40;
}

__n128 sub_24E2D2114(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t dispatch thunk of OrganizedListSortableSort.sortDescriptor<A>(rootKeyPath:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of OrganizedListSectionable.listSection(enabledSections:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of OrganizedListSectionableSection.category.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of OrganizedListSectionableSection.sortOrder.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of OrganizedListTaggable.contains(tag:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of static OrganizedListTaggableTag.default.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of OrganizedListSearchable.contains(search:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t sub_24E2D21B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 64);
}

uint64_t sub_24E2D21BC()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_24E2D227C(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64) + 7;
  int v8 = *(_DWORD *)(v5 + 80) & 0x100000;
  uint64_t v9 = *a2;
  *a1 = *a2;
  if (v6 > 7 || v8 != 0 || ((v7 + ((v6 + 32) & ~v6)) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v12 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v13 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v12 = *v13;
    uint64_t v14 = (void *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v15 = (void *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v14 = *v15;
    uint64_t v16 = (void *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v17 = (void *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v16 = *v17;
    uint64_t v18 = ((unint64_t)v16 + v6 + 8) & ~v6;
    uint64_t v19 = ((unint64_t)v17 + v6 + 8) & ~v6;
    uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v20(v18, v19, AssociatedTypeWitness);
    char v21 = (void *)((v7 + v18) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v22 = (void *)((v7 + v19) & 0xFFFFFFFFFFFFFFF8);
    *char v21 = *v22;
    v21[1] = v22[1];
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_24E2D2434(uint64_t a1)
{
  uint64_t v1 = a1 + 15;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(((((((v1 & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ *(unsigned __int8 *)(*(void *)(AssociatedTypeWitness - 8) + 80)+ 8) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(AssociatedTypeWitness - 8) + 80), AssociatedTypeWitness);
  return swift_bridgeObjectRelease();
}

void *sub_24E2D2510(void *a1, void *a2)
{
  *a1 = *a2;
  long long v3 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v4 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *long long v3 = *v4;
  uint64_t v5 = (void *)(((unint64_t)v3 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v6 = (void *)(((unint64_t)v4 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v5 = *v6;
  uint64_t v7 = (void *)(((unint64_t)v5 + 15) & 0xFFFFFFFFFFFFFFF8);
  int v8 = (void *)(((unint64_t)v6 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v7 = *v8;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
  uint64_t v12 = v10 + 16;
  uint64_t v13 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v14 = ((unint64_t)v7 + v13 + 8) & ~v13;
  uint64_t v15 = ((unint64_t)v8 + v13 + 8) & ~v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v14, v15, AssociatedTypeWitness);
  uint64_t v16 = *(void *)(v12 + 48) + 7;
  unint64_t v17 = (void *)((v16 + v14) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v18 = (void *)((v16 + v15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_24E2D264C(void *a1, void *a2)
{
  unint64_t v3 = (unint64_t)a2 + 15;
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v4 = *(void *)(v3 & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = (void *)(((unint64_t)v4 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v6 = (void *)(((v3 & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v5 = *v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = (void *)(((unint64_t)v5 + 15) & 0xFFFFFFFFFFFFFFF8);
  int v8 = (void *)(((unint64_t)v6 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v7 = *v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = v10 + 24;
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = ((unint64_t)v7 + v12 + 8) & ~v12;
  uint64_t v14 = ((unint64_t)v8 + v12 + 8) & ~v12;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 24))(v13, v14, AssociatedTypeWitness);
  uint64_t v15 = *(void *)(v11 + 40) + 7;
  uint64_t v16 = (void *)((v15 + v13) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v17 = (void *)((v15 + v14) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_24E2D27A8(void *a1, void *a2)
{
  *a1 = *a2;
  unint64_t v3 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v4 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v3 = *v4;
  uint64_t v5 = (void *)(((unint64_t)v3 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v6 = (void *)(((unint64_t)v4 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v5 = *v6;
  uint64_t v7 = (void *)(((unint64_t)v5 + 15) & 0xFFFFFFFFFFFFFFF8);
  int v8 = (void *)(((unint64_t)v6 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v7 = *v8;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = v10 + 32;
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = ((unint64_t)v7 + v12 + 8) & ~v12;
  uint64_t v14 = ((unint64_t)v8 + v12 + 8) & ~v12;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v13, v14, AssociatedTypeWitness);
  *(_OWORD *)((*(void *)(v11 + 32) + 7 + v13) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(void *)(v11 + 32)
                                                                                       + 7
                                                                                       + v14) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

void *sub_24E2D289C(void *a1, void *a2)
{
  unint64_t v3 = (unint64_t)a2 + 15;
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v3 &= 0xFFFFFFFFFFFFFFF8;
  *uint64_t v4 = *(void *)v3;
  swift_bridgeObjectRelease();
  uint64_t v5 = (void *)(((unint64_t)v4 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v6 = (void *)((v3 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v5 = *v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = (void *)(((unint64_t)v5 + 15) & 0xFFFFFFFFFFFFFFF8);
  int v8 = (void *)(((unint64_t)v6 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v7 = *v8;
  swift_bridgeObjectRelease();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = v10 + 40;
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = ((unint64_t)v7 + v12 + 8) & ~v12;
  uint64_t v14 = ((unint64_t)v8 + v12 + 8) & ~v12;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 40))(v13, v14, AssociatedTypeWitness);
  uint64_t v15 = *(void *)(v11 + 24) + 7;
  uint64_t v16 = (void *)((v15 + v13) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v17 = (void *)((v15 + v14) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24E2D29D0(_DWORD *a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = v5;
  unsigned int v7 = *(_DWORD *)(v5 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v5 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v5 + 80);
  if (!a2) {
    return 0;
  }
  if (v8 < a2)
  {
    unint64_t v10 = ((*(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) + ((v9 + 32) & ~v9) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 16;
    uint64_t v11 = v10 & 0xFFFFFFF8;
    if ((v10 & 0xFFFFFFF8) != 0) {
      unsigned int v12 = 2;
    }
    else {
      unsigned int v12 = a2 - v8 + 1;
    }
    if (v12 >= 0x10000) {
      unsigned int v13 = 4;
    }
    else {
      unsigned int v13 = 2;
    }
    if (v12 < 0x100) {
      unsigned int v13 = 1;
    }
    if (v12 >= 2) {
      uint64_t v14 = v13;
    }
    else {
      uint64_t v14 = 0;
    }
    switch(v14)
    {
      case 1:
        int v15 = *((unsigned __int8 *)a1 + v10);
        if (!v15) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v15 = *(unsigned __int16 *)((char *)a1 + v10);
        if (v15) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x24E2D2B94);
      case 4:
        int v15 = *(_DWORD *)((char *)a1 + v10);
        if (!v15) {
          break;
        }
LABEL_22:
        int v17 = v15 - 1;
        if (v11)
        {
          int v17 = 0;
          LODWORD(v11) = *a1;
        }
        return v8 + (v11 | v17) + 1;
      default:
        break;
    }
  }
  if ((v7 & 0x80000000) != 0)
  {
    uint64_t v19 = *(uint64_t (**)(unint64_t))(v6 + 48);
    return v19(((((((((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
              + v9
              + 8) & ~v9);
  }
  else
  {
    uint64_t v18 = *(void *)a1;
    if (*(void *)a1 >= 0xFFFFFFFFuLL) {
      LODWORD(v18) = -1;
    }
    return (v18 + 1);
  }
}

void sub_24E2D2BA8(void *a1, uint64_t a2, unsigned int a3)
{
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v9 = 0x7FFFFFFF;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v6 + 84);
  }
  size_t v10 = ((*(void *)(v6 + 64) + ((v8 + 32) & ~v8) + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v9 >= a3)
  {
    int v13 = 0;
    int v14 = a2 - v9;
    if (a2 <= v9)
    {
LABEL_17:
      switch(v13)
      {
        case 1:
          *((unsigned char *)a1 + v10) = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)((char *)a1 + v10) = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_43;
        case 4:
          *(_DWORD *)((char *)a1 + v10) = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            if ((v7 & 0x80000000) != 0)
            {
              uint64_t v18 = *(void (**)(unint64_t, uint64_t))(v6 + 56);
              v18(((((((((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ v8+ 8) & ~v8, a2);
            }
            else
            {
              if ((a2 & 0x80000000) != 0) {
                uint64_t v17 = a2 ^ 0x80000000;
              }
              else {
                uint64_t v17 = (a2 - 1);
              }
              *a1 = v17;
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    if (((*(_DWORD *)(v6 + 64) + ((v8 + 32) & ~v8) + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      unsigned int v11 = a3 - v9 + 1;
    }
    else {
      unsigned int v11 = 2;
    }
    if (v11 >= 0x10000) {
      int v12 = 4;
    }
    else {
      int v12 = 2;
    }
    if (v11 < 0x100) {
      int v12 = 1;
    }
    if (v11 >= 2) {
      int v13 = v12;
    }
    else {
      int v13 = 0;
    }
    int v14 = a2 - v9;
    if (a2 <= v9) {
      goto LABEL_17;
    }
  }
  if (((*(_DWORD *)(v6 + 64) + ((v8 + 32) & ~v8) + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    int v15 = v14;
  }
  else {
    int v15 = 1;
  }
  if (((*(_DWORD *)(v6 + 64) + ((v8 + 32) & ~v8) + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    int v16 = ~v9 + a2;
    bzero(a1, v10);
    *(_DWORD *)a1 = v16;
  }
  switch(v13)
  {
    case 1:
      *((unsigned char *)a1 + v10) = v15;
      break;
    case 2:
      *(_WORD *)((char *)a1 + v10) = v15;
      break;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x24E2D2DD8);
    case 4:
      *(_DWORD *)((char *)a1 + v10) = v15;
      break;
    default:
      return;
  }
}

uint64_t sub_24E2D2E00()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_24E2D2EB0(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_24E2D2FCC(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24E2D3064(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  *(void *)((*(void *)(v5 + 48) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 48) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_24E2D310C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  *(void *)((*(void *)(v5 + 40) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 40) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24E2D31C0(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  *(void *)((*(void *)(v5 + 32) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 32) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_24E2D3264(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  *(void *)((*(void *)(v5 + 24) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 24) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24E2D3310(_DWORD *a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  unsigned int v6 = *(_DWORD *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v5 + 84);
  }
  uint64_t v8 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v9 = ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    uint64_t v10 = v9 & 0xFFFFFFF8;
    if ((v9 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = a2 - v7 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v9);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v9);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x24E2D34B4);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v9);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v6 < 0x7FFFFFFF)
  {
    unint64_t v18 = *(void *)(((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
    if (v18 >= 0xFFFFFFFF) {
      LODWORD(v18) = -1;
    }
    return (v18 + 1);
  }
  else
  {
    uint64_t v17 = *(uint64_t (**)(_DWORD *))(v5 + 48);
    return v17(a1);
  }
}

void sub_24E2D34C8(_DWORD *a1, uint64_t a2, unsigned int a3)
{
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(v6 + 64);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v9 = 0x7FFFFFFF;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v6 + 84);
  }
  size_t v10 = ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (((v8 + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
    unsigned int v11 = a3 - v9 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v9 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v9)
  {
    if (((v8 + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      int v15 = a2 - v9;
    }
    else {
      int v15 = 1;
    }
    if (((v8 + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      int v16 = ~v9 + a2;
      bzero(a1, v10);
      *a1 = v16;
    }
    switch(v14)
    {
      case 1:
        *((unsigned char *)a1 + v10) = v15;
        return;
      case 2:
        *(_WORD *)((char *)a1 + v10) = v15;
        return;
      case 3:
        goto LABEL_44;
      case 4:
        *(_DWORD *)((char *)a1 + v10) = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      *((unsigned char *)a1 + v10) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)((char *)a1 + v10) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_44:
      __break(1u);
      JUMPOUT(0x24E2D36CCLL);
    case 4:
      *(_DWORD *)((char *)a1 + v10) = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFF)
        {
          unint64_t v18 = (void *)(((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0) {
            uint64_t v19 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v19 = (a2 - 1);
          }
          void *v18 = v19;
        }
        else
        {
          uint64_t v17 = *(void (**)(_DWORD *, uint64_t))(v6 + 56);
          v17(a1, a2);
        }
      }
      return;
  }
}

uint64_t sub_24E2D36F4()
{
  return swift_getAtKeyPath();
}

__n128 PublishedLocation.init(value:priority:motionActivity:label:)@<Q0>(void *a1@<X0>, char *a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v5 = *a2;
  char v6 = *a3;
  *(void *)a5 = *a1;
  *(unsigned char *)(a5 + 8) = v5;
  *(unsigned char *)(a5 + 9) = v6;
  long long v7 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)(a5 + 16) = *(_OWORD *)a4;
  *(_OWORD *)(a5 + 32) = v7;
  long long v8 = *(_OWORD *)(a4 + 48);
  *(_OWORD *)(a5 + 48) = *(_OWORD *)(a4 + 32);
  *(_OWORD *)(a5 + 64) = v8;
  long long v9 = *(_OWORD *)(a4 + 80);
  *(_OWORD *)(a5 + 80) = *(_OWORD *)(a4 + 64);
  *(_OWORD *)(a5 + 96) = v9;
  __n128 result = *(__n128 *)(a4 + 96);
  *(__n128 *)(a5 + 112) = result;
  return result;
}

void __swiftcall PublishedLocation.Label.init(customLabel:coarseLabel:streetLabel:smallLabel:mediumLabel:largeLabel:poiLabel:)(FindMyCore::PublishedLocation::Label *__return_ptr retstr, Swift::String_optional customLabel, Swift::String_optional coarseLabel, Swift::String_optional streetLabel, Swift::String_optional smallLabel, Swift::String_optional mediumLabel, Swift::String_optional largeLabel, Swift::String_optional poiLabel)
{
  retstr->customLabel = customLabel;
  retstr->coarseLabel = coarseLabel;
  retstr->streetLabel = streetLabel;
  retstr->smallLabel = smallLabel;
  retstr->mediumLabel = mediumLabel;
  retstr->largeLabel = largeLabel;
  retstr->poiLabel = poiLabel;
}

void static FindMyUserDefaults.Key<>.showLocationTypeDebugDescription.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD000000000000019;
  *(void *)(a1 + 8) = 0x800000024E2F7140;
  *(unsigned char *)(a1 + 16) = 1;
}

id PublishedLocation.value.getter@<X0>(void **a1@<X8>)
{
  uint64_t v2 = *v1;
  *a1 = *v1;
  return v2;
}

void PublishedLocation.value.setter(void **a1)
{
  uint64_t v2 = *a1;

  *unint64_t v1 = v2;
}

uint64_t (*PublishedLocation.value.modify())()
{
  return nullsub_1;
}

void PublishedLocation.priority.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 8);
}

unsigned char *PublishedLocation.priority.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 8) = *result;
  return result;
}

uint64_t (*PublishedLocation.priority.modify())()
{
  return nullsub_1;
}

void PublishedLocation.motionActivity.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 9);
}

unsigned char *PublishedLocation.motionActivity.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 9) = *result;
  return result;
}

uint64_t (*PublishedLocation.motionActivity.modify())()
{
  return nullsub_1;
}

uint64_t PublishedLocation.label.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 120);
  *(void *)a1 = *(void *)(v1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 24);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(v1 + 56);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(v1 + 72);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(v1 + 88);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(v1 + 104);
  *(void *)(a1 + 104) = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 PublishedLocation.label.setter(long long *a1)
{
  long long v9 = a1[1];
  long long v10 = *a1;
  long long v7 = a1[3];
  long long v8 = a1[2];
  __n128 v5 = (__n128)a1[5];
  long long v6 = a1[4];
  uint64_t v2 = *((void *)a1 + 12);
  uint64_t v3 = *((void *)a1 + 13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(v1 + 16) = v10;
  *(_OWORD *)(v1 + 32) = v9;
  *(_OWORD *)(v1 + 48) = v8;
  *(_OWORD *)(v1 + 64) = v7;
  __n128 result = v5;
  *(_OWORD *)(v1 + 80) = v6;
  *(__n128 *)(v1 + 96) = v5;
  *(void *)(v1 + 112) = v2;
  *(void *)(v1 + 120) = v3;
  return result;
}

uint64_t (*PublishedLocation.label.modify())()
{
  return nullsub_1;
}

double PublishedLocation.timestamp.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_24E2F0930();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  long long v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  long long v9 = (char *)&v22 - v8;
  int v10 = *(unsigned __int8 *)(v1 + 8);
  id v11 = *(id *)v1;
  id v12 = objc_msgSend(v11, sel_timestamp);
  sub_24E2F0920();

  uint64_t v13 = sub_24E2F1540();
  uint64_t v15 = v14;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
  if (v10 == 2) {
    static FindMyRelativeDate.RecencyKey.live(recencyDuration:)(v13, v15, v27);
  }
  else {
    static FindMyRelativeDate.RecencyKey.now(recencyDuration:)(v13, v15, v27);
  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  long long v25 = v27[1];
  long long v26 = v27[0];
  long long v23 = v27[3];
  long long v24 = v27[2];
  long long v22 = v27[4];
  uint64_t v16 = v28;
  uint64_t v17 = v29;
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(a1, v7, v3);
  uint64_t v18 = a1 + *(int *)(type metadata accessor for FindMyRelativeDate() + 20);
  long long v19 = v25;
  *(_OWORD *)uint64_t v18 = v26;
  *(_OWORD *)(v18 + 16) = v19;
  long long v20 = v23;
  *(_OWORD *)(v18 + 32) = v24;
  *(_OWORD *)(v18 + 48) = v20;
  double result = *(double *)&v22;
  *(_OWORD *)(v18 + 64) = v22;
  *(void *)(v18 + 80) = v16;
  *(void *)(v18 + 88) = v17;
  return result;
}

BOOL PublishedLocation.showPulseAnimation.getter()
{
  return *(unsigned char *)(v0 + 8) == 2;
}

uint64_t PublishedLocation.showPulseAnimationEndDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_24E2F0930();
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v1 + 8) == 2)
  {
    long long v7 = *(void **)v1;
    uint64_t v13 = v4;
    id v8 = v7;
    id v9 = objc_msgSend(v8, sel_timestamp);
    sub_24E2F0920();

    sub_24E2F08D0();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v6, v3);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(a1, 0, 1, v3);
  }
  else
  {
    id v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
    return v11(a1, 1, 1, v3);
  }
}

uint64_t PublishedLocation.extraInfo.getter()
{
  if (qword_2698CA480 != -1) {
    swift_once();
  }
  if (byte_2698CA8C0 != 1) {
    return 0;
  }
  uint64_t v0 = (void *)qword_2698CA8B8;
  swift_bridgeObjectRetain();
  id v1 = v0;
  uint64_t v2 = (void *)sub_24E2F0E90();
  unsigned int v3 = objc_msgSend(v1, sel_BOOLForKey_, v2);

  swift_bridgeObjectRelease();
  if (!v3) {
    return 0;
  }
  sub_24E2F0EE0();
  sub_24E2F0F50();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24E2F0F50();
  swift_bridgeObjectRelease();
  return 0x203A677562656428;
}

double PublishedLocation.badge.getter@<D0>(uint64_t a1@<X8>)
{
  if (*(unsigned char *)(v1 + 8) == 3)
  {
    if (qword_2698CA4D0 != -1) {
      swift_once();
    }
    uint64_t v3 = *(void *)algn_2698CB228;
    uint64_t v4 = qword_2698CB230;
    uint64_t v5 = unk_2698CB238;
    char v6 = byte_2698CB240;
    *(void *)a1 = qword_2698CB220;
    *(void *)(a1 + 8) = v3;
    *(void *)(a1 + 16) = v4;
    *(void *)(a1 + 24) = v5;
    *(unsigned char *)(a1 + 32) = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(unsigned char *)(a1 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

double PublishedLocation.Priority.badge.getter@<D0>(uint64_t a1@<X8>)
{
  if (*v1 == 3)
  {
    if (qword_2698CA4D0 != -1) {
      swift_once();
    }
    uint64_t v3 = *(void *)algn_2698CB228;
    uint64_t v4 = qword_2698CB230;
    uint64_t v5 = unk_2698CB238;
    char v6 = byte_2698CB240;
    *(void *)a1 = qword_2698CB220;
    *(void *)(a1 + 8) = v3;
    *(void *)(a1 + 16) = v4;
    *(void *)(a1 + 24) = v5;
    *(unsigned char *)(a1 + 32) = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(unsigned char *)(a1 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

uint64_t PublishedLocation.MotionActivity.badge.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *v1;
  char v4 = 0;
  uint64_t v5 = 0;
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  uint64_t v8 = 0;
  switch(v2)
  {
    case 3:
      if (qword_2698CA4D8 != -1) {
        swift_once();
      }
      id v9 = &qword_2698CB248;
      goto LABEL_11;
    case 4:
      if (qword_2698CA4E0 != -1) {
        swift_once();
      }
      id v9 = &qword_2698CB270;
      goto LABEL_11;
    case 5:
      if (qword_2698CA4E8 != -1) {
        swift_once();
      }
      id v9 = &qword_2698CB298;
LABEL_11:
      uint64_t v5 = *v9;
      uint64_t v6 = v9[1];
      uint64_t v7 = v9[2];
      uint64_t v8 = v9[3];
      char v4 = *((unsigned char *)v9 + 32);
      swift_bridgeObjectRetain();
      uint64_t result = swift_bridgeObjectRetain();
      break;
    default:
      break;
  }
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  *(unsigned char *)(a1 + 32) = v4;
  return result;
}

BOOL static PublishedLocation.MotionActivity.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t PublishedLocation.MotionActivity.hash(into:)()
{
  return sub_24E2F14B0();
}

void sub_24E2D4228()
{
  if (qword_2698CA500 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_2698D1E70;
  if (qword_2698D1E70)
  {
    swift_bridgeObjectRetain();
    id v1 = v0;
    id v2 = v1;
  }
  else
  {
    uint64_t v3 = self;
    swift_bridgeObjectRetain();
    id v2 = objc_msgSend(v3, sel_mainBundle);
    id v1 = 0;
  }
  id v4 = v1;
  uint64_t v5 = (void *)sub_24E2F0E90();
  uint64_t v6 = (void *)sub_24E2F0E90();
  id v7 = objc_msgSend(v2, sel_localizedStringForKey_value_table_, v5, 0, v6);

  uint64_t v8 = sub_24E2F0EC0();
  uint64_t v10 = v9;

  swift_bridgeObjectRelease();
  qword_2698CB430 = v8;
  *(void *)algn_2698CB438 = v10;
}

uint64_t static PublishedLocation.Label.noLocationAddressLabel.getter()
{
  return sub_24E2D4520(&qword_2698CA4F0, &qword_2698CB430);
}

void sub_24E2D43A4()
{
  if (qword_2698CA500 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_2698D1E70;
  if (qword_2698D1E70)
  {
    swift_bridgeObjectRetain();
    id v1 = v0;
    id v2 = v1;
  }
  else
  {
    uint64_t v3 = self;
    swift_bridgeObjectRetain();
    id v2 = objc_msgSend(v3, sel_mainBundle);
    id v1 = 0;
  }
  id v4 = v1;
  uint64_t v5 = (void *)sub_24E2F0E90();
  uint64_t v6 = (void *)sub_24E2F0E90();
  id v7 = objc_msgSend(v2, sel_localizedStringForKey_value_table_, v5, 0, v6);

  uint64_t v8 = sub_24E2F0EC0();
  uint64_t v10 = v9;

  swift_bridgeObjectRelease();
  qword_2698CB440 = v8;
  *(void *)algn_2698CB448 = v10;
}

uint64_t static PublishedLocation.Label.noLocationLabel.getter()
{
  return sub_24E2D4520(&qword_2698CA4F8, &qword_2698CB440);
}

uint64_t sub_24E2D4520(void *a1, uint64_t *a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = *a2;
  swift_bridgeObjectRetain();
  return v3;
}

Swift::String __swiftcall PublishedLocation.Label.localized(maxLength:)(FindMyCore::PublishedLocation::Label::Length maxLength)
{
  char v2 = *(unsigned char *)maxLength;
  long long v3 = v1[1];
  long long v13 = *v1;
  long long v14 = v3;
  long long v4 = v1[3];
  long long v15 = v1[2];
  long long v16 = v4;
  long long v5 = v1[5];
  long long v17 = v1[4];
  long long v18 = v5;
  long long v19 = v1[6];
  char v12 = v2;
  Swift::String_optional v6 = PublishedLocation.Label.combinedNoFallbackLabel(maxLength:)((FindMyCore::PublishedLocation::Label::Length)&v12);
  if (v6.value._object)
  {
    uint64_t countAndFlagsBits = v6.value._countAndFlagsBits;
    object = v6.value._object;
  }
  else
  {
    if (qword_2698CA4F0 != -1) {
      swift_once();
    }
    uint64_t countAndFlagsBits = qword_2698CB430;
    object = *(void **)algn_2698CB438;
    swift_bridgeObjectRetain();
  }
  uint64_t v9 = countAndFlagsBits;
  uint64_t v10 = object;
  result._object = v10;
  result._uint64_t countAndFlagsBits = v9;
  return result;
}

Swift::String __swiftcall PublishedLocation.Label.combined(maxLength:)(FindMyCore::PublishedLocation::Label::Length maxLength)
{
  char v2 = *(unsigned char *)maxLength;
  long long v3 = v1[1];
  long long v13 = *v1;
  long long v14 = v3;
  long long v4 = v1[3];
  long long v15 = v1[2];
  long long v16 = v4;
  long long v5 = v1[5];
  long long v17 = v1[4];
  long long v18 = v5;
  long long v19 = v1[6];
  char v12 = v2;
  Swift::String_optional v6 = PublishedLocation.Label.combinedNoFallbackLabel(maxLength:)((FindMyCore::PublishedLocation::Label::Length)&v12);
  if (v6.value._object)
  {
    uint64_t countAndFlagsBits = v6.value._countAndFlagsBits;
    object = v6.value._object;
  }
  else
  {
    if (qword_2698CA4F0 != -1) {
      swift_once();
    }
    uint64_t countAndFlagsBits = qword_2698CB430;
    object = *(void **)algn_2698CB438;
    swift_bridgeObjectRetain();
  }
  uint64_t v9 = countAndFlagsBits;
  uint64_t v10 = object;
  result._object = v10;
  result._uint64_t countAndFlagsBits = v9;
  return result;
}

Swift::tuple_primary_String_secondary_String_optional __swiftcall PublishedLocation.Label.primaryAndSecondary(detailLevel:)(FindMyCore::PublishedLocation::Label::DetailLevel detailLevel)
{
  char v2 = *(unsigned char *)detailLevel;
  long long v3 = v1[1];
  long long v15 = *v1;
  long long v16 = v3;
  long long v4 = v1[3];
  long long v17 = v1[2];
  long long v18 = v4;
  long long v5 = v1[5];
  long long v19 = v1[4];
  long long v20 = v5;
  long long v21 = v1[6];
  char v14 = v2;
  Swift::tuple_primary_String_optional_secondary_String_optional v22 = PublishedLocation.Label.primaryAndSecondaryNoFallbackLabel(detailLevel:)((FindMyCore::PublishedLocation::Label::DetailLevel)&v14);
  uint64_t countAndFlagsBits = v22.secondary.value._countAndFlagsBits;
  object = v22.secondary.value._object;
  if (v22.primary.value._object)
  {
    uint64_t v8 = v22.primary.value._countAndFlagsBits;
    uint64_t v9 = v22.primary.value._object;
  }
  else
  {
    if (qword_2698CA4F0 != -1) {
      swift_once();
    }
    uint64_t v8 = qword_2698CB430;
    uint64_t v9 = *(void **)algn_2698CB438;
    swift_bridgeObjectRetain();
  }
  uint64_t v10 = v8;
  id v11 = v9;
  uint64_t v12 = countAndFlagsBits;
  long long v13 = object;
  result.secondary.value._object = v13;
  result.secondary.value._uint64_t countAndFlagsBits = v12;
  result.primary._object = v11;
  result.primary._uint64_t countAndFlagsBits = v10;
  return result;
}

Swift::tuple_primary_String_optional_secondary_String_optional __swiftcall PublishedLocation.Label.primaryAndSecondaryNoFallbackLabel(detailLevel:)(FindMyCore::PublishedLocation::Label::DetailLevel detailLevel)
{
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  uint64_t v4 = v1[2];
  long long v5 = (void *)v1[3];
  uint64_t v7 = v1[12];
  unint64_t v6 = v1[13];
  if ((*(unsigned char *)detailLevel & 1) == 0)
  {
    unint64_t v12 = v1[1];
    if (!v3)
    {
      if (!v6)
      {
        unint64_t v6 = v1[5];
        if (!v6) {
          goto LABEL_26;
        }
        uint64_t v7 = v1[4];
      }
      swift_bridgeObjectRetain();
      uint64_t v2 = v7;
      unint64_t v12 = v6;
    }
    uint64_t v13 = HIBYTE(v12) & 0xF;
    if ((v12 & 0x2000000000000000) == 0) {
      uint64_t v13 = v2 & 0xFFFFFFFFFFFFLL;
    }
    if (v13)
    {
      swift_bridgeObjectRetain();
      uint64_t v10 = v4;
      char v14 = v5;
      uint64_t v4 = v2;
      long long v5 = (void *)v12;
      goto LABEL_35;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
LABEL_26:
    uint64_t v10 = 0;
    char v14 = 0;
    goto LABEL_35;
  }
  uint64_t v8 = v1[8];
  uint64_t v23 = v1[6];
  long long v24 = (void *)v1[7];
  uint64_t v9 = (void *)v1[9];
  uint64_t v10 = v1[10];
  id v11 = (void *)v1[11];
  if (v3)
  {
    unint64_t v6 = v1[1];
  }
  else
  {
    if (!v6) {
      goto LABEL_28;
    }
    long long v15 = (void *)v1[9];
    swift_bridgeObjectRetain();
    uint64_t v9 = v15;
    uint64_t v2 = v7;
  }
  uint64_t v16 = HIBYTE(v6) & 0xF;
  if ((v6 & 0x2000000000000000) == 0) {
    uint64_t v16 = v2 & 0xFFFFFFFFFFFFLL;
  }
  if (v16)
  {
    char v14 = v11;
    if (!v11)
    {
      char v14 = v9;
      uint64_t v10 = v8;
      if (!v9)
      {
        uint64_t v10 = v23;
        char v14 = v24;
        if (!v24)
        {
          swift_bridgeObjectRetain();
          uint64_t v10 = v4;
          char v14 = v5;
        }
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRetain();
    uint64_t v4 = v2;
    long long v5 = (void *)v6;
    goto LABEL_35;
  }
  long long v17 = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = v17;
LABEL_28:
  long long v18 = v11;
  if (!v11)
  {
    long long v18 = v9;
    uint64_t v10 = v8;
    if (!v9)
    {
      uint64_t v10 = v23;
      long long v18 = v24;
      if (!v24)
      {
        swift_bridgeObjectRetain();
        uint64_t v10 = v4;
        long long v18 = v5;
      }
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRetain();
  }
  char v14 = 0;
  uint64_t v4 = v10;
  long long v5 = v18;
  uint64_t v10 = 0;
LABEL_35:
  swift_bridgeObjectRetain();
  uint64_t v19 = v4;
  long long v20 = v5;
  uint64_t v21 = v10;
  Swift::tuple_primary_String_optional_secondary_String_optional v22 = v14;
  result.secondary.value._object = v22;
  result.secondary.value._uint64_t countAndFlagsBits = v21;
  result.primary.value._object = v20;
  result.primary.value._uint64_t countAndFlagsBits = v19;
  return result;
}

Swift::String_optional __swiftcall PublishedLocation.Label.combinedNoFallbackLabel(maxLength:)(FindMyCore::PublishedLocation::Label::Length maxLength)
{
  uint64_t v2 = *(unsigned __int8 *)maxLength;
  uint64_t v3 = v1[1];
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[6];
  uint64_t v6 = v1[7];
  uint64_t v9 = v1[8];
  uint64_t v8 = v1[9];
  uint64_t v11 = v1[10];
  uint64_t v10 = v1[11];
  switch(v2)
  {
    case 1:
      if (v3) {
        goto LABEL_14;
      }
      uint64_t v12 = v1[7];
      if (!v6)
      {
        swift_bridgeObjectRetain();
        uint64_t v7 = v4;
        uint64_t v12 = v5;
      }
      swift_bridgeObjectRetain();
      uint64_t v4 = v7;
      uint64_t v5 = v12;
      break;
    case 2:
      if (v3) {
        goto LABEL_14;
      }
      uint64_t v13 = v1[9];
      if (!v8)
      {
        uint64_t v13 = v6;
        if (!v6)
        {
          swift_bridgeObjectRetain();
          uint64_t v7 = v4;
          uint64_t v13 = v5;
        }
        swift_bridgeObjectRetain();
        uint64_t v9 = v7;
      }
      swift_bridgeObjectRetain();
      uint64_t v4 = v9;
      uint64_t v5 = v13;
      break;
    case 3:
      if (v3)
      {
LABEL_14:
        uint64_t v4 = *v1;
        uint64_t v5 = swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v16 = v1[11];
        if (!v10)
        {
          uint64_t v16 = v8;
          if (!v8)
          {
            uint64_t v16 = v6;
            if (!v6)
            {
              swift_bridgeObjectRetain();
              uint64_t v7 = v4;
              uint64_t v16 = v5;
            }
            swift_bridgeObjectRetain();
            uint64_t v9 = v7;
          }
          swift_bridgeObjectRetain();
          uint64_t v11 = v9;
        }
        swift_bridgeObjectRetain();
        uint64_t v4 = v11;
        uint64_t v5 = v16;
      }
      break;
    default:
      swift_bridgeObjectRetain();
      break;
  }
  uint64_t v14 = v4;
  long long v15 = (void *)v5;
  result.value._object = v15;
  result.value._uint64_t countAndFlagsBits = v14;
  return result;
}

BOOL static PublishedLocation.Label.DetailLevel.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t PublishedLocation.Label.DetailLevel.hash(into:)()
{
  return sub_24E2F14B0();
}

uint64_t PublishedLocation.Label.DetailLevel.hashValue.getter()
{
  return sub_24E2F14D0();
}

uint64_t PublishedLocation.Label.hash(into:)()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[7];
  uint64_t v4 = v0[9];
  uint64_t v5 = v0[11];
  uint64_t v6 = v0[13];
  if (v0[1])
  {
    sub_24E2F14C0();
    swift_bridgeObjectRetain();
    sub_24E2F0F20();
    swift_bridgeObjectRelease();
    if (v1) {
      goto LABEL_3;
    }
  }
  else
  {
    sub_24E2F14C0();
    if (v1)
    {
LABEL_3:
      sub_24E2F14C0();
      swift_bridgeObjectRetain();
      sub_24E2F0F20();
      swift_bridgeObjectRelease();
      if (v2) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  sub_24E2F14C0();
  if (v2)
  {
LABEL_4:
    sub_24E2F14C0();
    swift_bridgeObjectRetain();
    sub_24E2F0F20();
    swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  sub_24E2F14C0();
  if (v3)
  {
LABEL_5:
    sub_24E2F14C0();
    swift_bridgeObjectRetain();
    sub_24E2F0F20();
    swift_bridgeObjectRelease();
    if (v4) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  sub_24E2F14C0();
  if (v4)
  {
LABEL_6:
    sub_24E2F14C0();
    swift_bridgeObjectRetain();
    sub_24E2F0F20();
    swift_bridgeObjectRelease();
    if (v5) {
      goto LABEL_7;
    }
LABEL_16:
    sub_24E2F14C0();
    if (v6) {
      goto LABEL_8;
    }
    return sub_24E2F14C0();
  }
LABEL_15:
  sub_24E2F14C0();
  if (!v5) {
    goto LABEL_16;
  }
LABEL_7:
  sub_24E2F14C0();
  swift_bridgeObjectRetain();
  sub_24E2F0F20();
  swift_bridgeObjectRelease();
  if (!v6) {
    return sub_24E2F14C0();
  }
LABEL_8:
  sub_24E2F14C0();
  swift_bridgeObjectRetain();
  sub_24E2F0F20();
  return swift_bridgeObjectRelease();
}

uint64_t PublishedLocation.Label.hashValue.getter()
{
  return sub_24E2F14D0();
}

uint64_t sub_24E2D4E3C()
{
  return sub_24E2F14D0();
}

uint64_t sub_24E2D4EA8()
{
  return sub_24E2F14D0();
}

double static PublishedLocation.Constants.liveLocationRecencyDuration.getter()
{
  return 60.0;
}

double static PublishedLocation.Constants.regularLocationRecencyDuration.getter()
{
  return 60.0;
}

double static PublishedLocation.Constants.generalTimestampRecencyDuration.getter()
{
  return 60.0;
}

uint64_t PublishedLocation.hash(into:)()
{
  id v1 = *v0;
  sub_24E2F1200();

  sub_24E2F14B0();
  sub_24E2F14B0();
  return PublishedLocation.Label.hash(into:)();
}

uint64_t PublishedLocation.hashValue.getter()
{
  id v1 = *v0;
  sub_24E2F14A0();
  id v2 = v1;
  sub_24E2F1200();

  sub_24E2F14B0();
  sub_24E2F14B0();
  PublishedLocation.Label.hash(into:)();
  return sub_24E2F14D0();
}

uint64_t sub_24E2D50F8()
{
  id v1 = *v0;
  sub_24E2F1200();

  sub_24E2F14B0();
  sub_24E2F14B0();
  return PublishedLocation.Label.hash(into:)();
}

uint64_t sub_24E2D51C8()
{
  id v1 = *v0;
  sub_24E2F14A0();
  id v2 = v1;
  sub_24E2F1200();

  sub_24E2F14B0();
  sub_24E2F14B0();
  PublishedLocation.Label.hash(into:)();
  return sub_24E2F14D0();
}

uint64_t _s10FindMyCore17PublishedLocationV5LabelV2eeoiySbAE_AEtFZ_0(void *a1, void *a2)
{
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v6 = a1[3];
  uint64_t v5 = a1[4];
  uint64_t v7 = a1[5];
  uint64_t v8 = a1[6];
  uint64_t v10 = a1[7];
  uint64_t v9 = a1[8];
  uint64_t v11 = a1[9];
  uint64_t v76 = a1[10];
  uint64_t v79 = a1[11];
  uint64_t v12 = a1[12];
  uint64_t v13 = a2[1];
  uint64_t v14 = a2[2];
  uint64_t v16 = a2[3];
  uint64_t v15 = a2[4];
  uint64_t v18 = a2[5];
  uint64_t v17 = a2[6];
  uint64_t v20 = a2[7];
  uint64_t v19 = a2[8];
  uint64_t v22 = a2[9];
  uint64_t v21 = a2[10];
  uint64_t v23 = a2[11];
  uint64_t v75 = a2[12];
  uint64_t v77 = a2[13];
  uint64_t v78 = a1[13];
  if (!v3)
  {
    if (v13) {
      return 0;
    }
    goto LABEL_8;
  }
  if (!v13) {
    return 0;
  }
  if (*a1 == *a2 && v3 == v13) {
    goto LABEL_8;
  }
  uint64_t v70 = a1[4];
  uint64_t v72 = a2[6];
  uint64_t v63 = a2[11];
  uint64_t v64 = a2[10];
  uint64_t v60 = a2[2];
  uint64_t v61 = a1[2];
  uint64_t v24 = a1[12];
  uint64_t v25 = a1[8];
  uint64_t v26 = a1[9];
  uint64_t v62 = a2[8];
  uint64_t v66 = a2[4];
  uint64_t v68 = a2[5];
  uint64_t v27 = a2[7];
  uint64_t v28 = a1[5];
  char v29 = sub_24E2F1430();
  uint64_t v18 = v68;
  uint64_t v5 = v70;
  uint64_t v7 = v28;
  uint64_t v4 = v61;
  uint64_t v19 = v62;
  uint64_t v17 = v72;
  uint64_t v20 = v27;
  uint64_t v11 = v26;
  uint64_t v9 = v25;
  uint64_t v12 = v24;
  uint64_t v14 = v60;
  uint64_t v23 = v63;
  uint64_t v21 = v64;
  uint64_t v15 = v66;
  char v30 = v29;
  uint64_t result = 0;
  if (v30)
  {
LABEL_8:
    if (v6)
    {
      if (!v16) {
        return 0;
      }
      if (v4 != v14 || v6 != v16)
      {
        uint64_t v71 = v5;
        uint64_t v73 = v17;
        uint64_t v65 = v12;
        uint64_t v67 = v15;
        uint64_t v32 = v9;
        uint64_t v33 = v11;
        uint64_t v34 = v22;
        uint64_t v35 = v19;
        uint64_t v36 = v20;
        uint64_t v37 = v7;
        uint64_t v69 = v18;
        char v38 = sub_24E2F1430();
        uint64_t v18 = v69;
        uint64_t v5 = v71;
        uint64_t v7 = v37;
        uint64_t v17 = v73;
        uint64_t v20 = v36;
        uint64_t v19 = v35;
        uint64_t v22 = v34;
        uint64_t v11 = v33;
        uint64_t v9 = v32;
        uint64_t v12 = v65;
        uint64_t v15 = v67;
        char v39 = v38;
        uint64_t result = 0;
        if ((v39 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v16)
    {
      return 0;
    }
    if (v7)
    {
      if (!v18) {
        return 0;
      }
      if (v5 != v15 || v7 != v18)
      {
        uint64_t v74 = v17;
        uint64_t v40 = v12;
        uint64_t v41 = v9;
        uint64_t v42 = v11;
        uint64_t v43 = v22;
        uint64_t v44 = v19;
        uint64_t v45 = v20;
        char v46 = sub_24E2F1430();
        uint64_t v17 = v74;
        uint64_t v20 = v45;
        uint64_t v19 = v44;
        uint64_t v22 = v43;
        uint64_t v11 = v42;
        uint64_t v9 = v41;
        uint64_t v12 = v40;
        char v47 = v46;
        uint64_t result = 0;
        if ((v47 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v18)
    {
      return 0;
    }
    if (v10)
    {
      if (!v20) {
        return 0;
      }
      if (v8 != v17 || v10 != v20)
      {
        uint64_t v48 = v12;
        uint64_t v49 = v9;
        uint64_t v50 = v11;
        uint64_t v51 = v19;
        char v52 = sub_24E2F1430();
        uint64_t v19 = v51;
        uint64_t v11 = v50;
        uint64_t v9 = v49;
        uint64_t v12 = v48;
        char v53 = v52;
        uint64_t result = 0;
        if ((v53 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v20)
    {
      return 0;
    }
    if (v11)
    {
      if (!v22) {
        return 0;
      }
      if (v9 != v19 || v11 != v22)
      {
        uint64_t v54 = v12;
        char v55 = sub_24E2F1430();
        uint64_t v12 = v54;
        char v56 = v55;
        uint64_t result = 0;
        if ((v56 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v22)
    {
      return 0;
    }
    if (v79)
    {
      if (!v23) {
        return 0;
      }
      if (v76 != v21 || v79 != v23)
      {
        uint64_t v57 = v12;
        char v58 = sub_24E2F1430();
        uint64_t v12 = v57;
        char v59 = v58;
        uint64_t result = 0;
        if ((v59 & 1) == 0) {
          return result;
        }
      }
    }
    else if (v23)
    {
      return 0;
    }
    if (v78)
    {
      if (v77 && (v12 == v75 && v78 == v77 || (sub_24E2F1430() & 1) != 0)) {
        return 1;
      }
    }
    else if (!v77)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t _s10FindMyCore17PublishedLocationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  id v2 = *(void **)a1;
  int v3 = *(unsigned __int8 *)(a1 + 8);
  int v4 = *(unsigned __int8 *)(a1 + 9);
  uint64_t v39 = *(void *)(a1 + 24);
  uint64_t v40 = *(void *)(a1 + 16);
  uint64_t v37 = *(void *)(a1 + 40);
  uint64_t v38 = *(void *)(a1 + 32);
  uint64_t v35 = *(void *)(a1 + 56);
  uint64_t v36 = *(void *)(a1 + 48);
  uint64_t v33 = *(void *)(a1 + 72);
  uint64_t v34 = *(void *)(a1 + 64);
  uint64_t v31 = *(void *)(a1 + 88);
  uint64_t v32 = *(void *)(a1 + 80);
  uint64_t v29 = *(void *)(a1 + 104);
  uint64_t v30 = *(void *)(a1 + 96);
  uint64_t v27 = *(void *)(a1 + 120);
  uint64_t v28 = *(void *)(a1 + 112);
  uint64_t v5 = *(void **)a2;
  int v6 = *(unsigned __int8 *)(a2 + 8);
  int v7 = *(unsigned __int8 *)(a2 + 9);
  uint64_t v25 = *(void *)(a2 + 24);
  uint64_t v26 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 48);
  uint64_t v23 = *(void *)(a2 + 40);
  uint64_t v24 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 56);
  uint64_t v10 = *(void *)(a2 + 64);
  uint64_t v21 = *(void *)(a2 + 80);
  uint64_t v22 = *(void *)(a2 + 72);
  uint64_t v19 = *(void *)(a2 + 96);
  uint64_t v20 = *(void *)(a2 + 88);
  uint64_t v17 = *(void *)(a2 + 112);
  uint64_t v18 = *(void *)(a2 + 104);
  uint64_t v16 = *(void *)(a2 + 120);
  sub_24E2D652C();
  id v11 = v2;
  id v12 = v5;
  char v13 = sub_24E2F11F0();

  char MyCore17PublishedLocationV5LabelV2eeoiySbAE_AEtFZ_0 = 0;
  if ((v13 & 1) != 0 && v3 == v6 && v4 == v7)
  {
    v42[0] = v40;
    v42[1] = v39;
    v42[2] = v38;
    v42[3] = v37;
    double v42[4] = v36;
    v42[5] = v35;
    v42[6] = v34;
    v42[7] = v33;
    v42[8] = v32;
    v42[9] = v31;
    v42[10] = v30;
    v42[11] = v29;
    v42[12] = v28;
    v42[13] = v27;
    v41[0] = v26;
    v41[1] = v25;
    v41[2] = v24;
    v41[3] = v23;
    v41[4] = v8;
    v41[5] = v9;
    _OWORD v41[6] = v10;
    v41[7] = v22;
    v41[8] = v21;
    v41[9] = v20;
    v41[10] = v19;
    v41[11] = v18;
    v41[12] = v17;
    v41[13] = v16;
    char MyCore17PublishedLocationV5LabelV2eeoiySbAE_AEtFZ_0 = _s10FindMyCore17PublishedLocationV5LabelV2eeoiySbAE_AEtFZ_0(v42, v41);
  }
  return MyCore17PublishedLocationV5LabelV2eeoiySbAE_AEtFZ_0 & 1;
}

unint64_t sub_24E2D5828()
{
  unint64_t result = qword_2698CB450;
  if (!qword_2698CB450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB450);
  }
  return result;
}

unint64_t sub_24E2D5880()
{
  unint64_t result = qword_2698CB458;
  if (!qword_2698CB458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB458);
  }
  return result;
}

unint64_t sub_24E2D58D8()
{
  unint64_t result = qword_2698CB460;
  if (!qword_2698CB460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB460);
  }
  return result;
}

unint64_t sub_24E2D5930()
{
  unint64_t result = qword_2698CB468;
  if (!qword_2698CB468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB468);
  }
  return result;
}

unint64_t sub_24E2D5988()
{
  unint64_t result = qword_2698CB470;
  if (!qword_2698CB470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB470);
  }
  return result;
}

unint64_t sub_24E2D59E0()
{
  unint64_t result = qword_2698CB478;
  if (!qword_2698CB478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB478);
  }
  return result;
}

uint64_t initializeWithCopy for PublishedLocation(uint64_t a1, uint64_t a2)
{
  int v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  uint64_t v9 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v9;
  uint64_t v10 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v10;
  id v11 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PublishedLocation(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy128_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v6;
  return result;
}

uint64_t assignWithTake for PublishedLocation(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v11;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PublishedLocation(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 128)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PublishedLocation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 128) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 128) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PublishedLocation()
{
  return &type metadata for PublishedLocation;
}

ValueMetadata *type metadata accessor for PublishedLocation.Priority()
{
  return &type metadata for PublishedLocation.Priority;
}

unsigned char *_s10FindMyCore17PublishedLocationV8PriorityOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *__n128 result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E2D5E98);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PublishedLocation.MotionActivity()
{
  return &type metadata for PublishedLocation.MotionActivity;
}

uint64_t destroy for PublishedLocation.Label()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for PublishedLocation.Label(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  uint64_t v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  uint64_t v9 = a2[13];
  a1[12] = a2[12];
  a1[13] = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for PublishedLocation.Label(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy112_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

void *assignWithTake for PublishedLocation.Label(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PublishedLocation.Label(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 112)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PublishedLocation.Label(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 112) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PublishedLocation.Label()
{
  return &type metadata for PublishedLocation.Label;
}

unsigned char *storeEnumTagSinglePayload for PublishedLocation.Label.DetailLevel(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E2D6350);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PublishedLocation.Label.DetailLevel()
{
  return &type metadata for PublishedLocation.Label.DetailLevel;
}

uint64_t getEnumTagSinglePayload for PublishedLocation.Label.Length(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for PublishedLocation.Label.Length(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E2D64E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PublishedLocation.Label.Length()
{
  return &type metadata for PublishedLocation.Label.Length;
}

ValueMetadata *type metadata accessor for PublishedLocation.Constants()
{
  return &type metadata for PublishedLocation.Constants;
}

unint64_t sub_24E2D652C()
{
  unint64_t result = qword_2698CAEE0;
  if (!qword_2698CAEE0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2698CAEE0);
  }
  return result;
}

__n128 Beacon.init(uniqueID:baIdentifier:displayName:imageDefinition:owner:isConnected:)@<Q0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, __n128 *a4@<X3>, char *a5@<X4>, char a6@<W5>, void *a7@<X8>)
{
  uint64_t v10 = a1[1];
  uint64_t v11 = *a3;
  uint64_t v12 = a3[1];
  __n128 v21 = a4[1];
  __n128 v22 = *a4;
  unint64_t v13 = a4[2].n128_u64[0];
  unint64_t v14 = a4[2].n128_u64[1];
  char v15 = a4[3].n128_i8[0];
  char v16 = *a5;
  *a7 = *a1;
  a7[1] = v10;
  uint64_t v17 = (int *)type metadata accessor for Beacon();
  sub_24E2D66A4(a2, (uint64_t)a7 + v17[5]);
  uint64_t v18 = (void *)((char *)a7 + v17[6]);
  void *v18 = v11;
  v18[1] = v12;
  uint64_t v19 = (__n128 *)((char *)a7 + v17[7]);
  __n128 result = v21;
  __n128 *v19 = v22;
  v19[1] = v21;
  v19[2].n128_u64[0] = v13;
  v19[2].n128_u64[1] = v14;
  v19[3].n128_u8[0] = v15;
  *((unsigned char *)a7 + v17[8]) = v16;
  *((unsigned char *)a7 + v17[9]) = a6;
  return result;
}

uint64_t type metadata accessor for Beacon()
{
  uint64_t result = qword_2698CB480;
  if (!qword_2698CB480) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24E2D66A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Beacon.BAIdentifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t Beacon.uniqueID.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t Beacon.baIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Beacon() + 20);
  return sub_24E2B1D58(v3, a1);
}

uint64_t Beacon.displayName.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for Beacon() + 24));
  uint64_t v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t Beacon.displayName.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = (void *)(v1 + *(int *)(type metadata accessor for Beacon() + 24));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v4 = v2;
  v4[1] = v3;
  return result;
}

uint64_t (*Beacon.displayName.modify())()
{
  return nullsub_1;
}

uint64_t Beacon.imageDefinition.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Beacon() + 28);
  uint64_t v4 = *(void *)v3;
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v6 = *(void *)(v3 + 16);
  uint64_t v7 = *(void *)(v3 + 24);
  uint64_t v8 = *(void *)(v3 + 32);
  uint64_t v9 = *(void *)(v3 + 40);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  char v10 = *(unsigned char *)(v3 + 48);
  *(unsigned char *)(a1 + 48) = v10;
  return sub_24E2A3364(v4, v5, v6, v7, v8, v9, v10);
}

__n128 Beacon.imageDefinition.setter(long long *a1)
{
  __n128 v7 = (__n128)a1[1];
  long long v8 = *a1;
  uint64_t v2 = *((void *)a1 + 4);
  uint64_t v3 = *((void *)a1 + 5);
  char v4 = *((unsigned char *)a1 + 48);
  uint64_t v5 = v1 + *(int *)(type metadata accessor for Beacon() + 28);
  sub_24E2A3478(*(void *)v5, *(void *)(v5 + 8), *(void *)(v5 + 16), *(void *)(v5 + 24), *(void *)(v5 + 32), *(void *)(v5 + 40), *(unsigned char *)(v5 + 48));
  __n128 result = v7;
  *(_OWORD *)uint64_t v5 = v8;
  *(__n128 *)(v5 + 16) = v7;
  *(void *)(v5 + 32) = v2;
  *(void *)(v5 + 40) = v3;
  *(unsigned char *)(v5 + 48) = v4;
  return result;
}

uint64_t (*Beacon.imageDefinition.modify())()
{
  return nullsub_1;
}

uint64_t Beacon.owner.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for Beacon();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t Beacon.owner.setter(char *a1)
{
  char v2 = *a1;
  uint64_t result = type metadata accessor for Beacon();
  *(unsigned char *)(v1 + *(int *)(result + 32)) = v2;
  return result;
}

uint64_t (*Beacon.owner.modify())()
{
  return nullsub_1;
}

uint64_t Beacon.isConnected.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Beacon() + 36));
}

uint64_t Beacon.isConnected.setter(char a1)
{
  uint64_t result = type metadata accessor for Beacon();
  *(unsigned char *)(v1 + *(int *)(result + 36)) = a1;
  return result;
}

uint64_t (*Beacon.isConnected.modify())()
{
  return nullsub_1;
}

void *initializeBufferWithCopyOfBuffer for Beacon(void *a1, void *a2, int *a3)
{
  char v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v25 = *a2;
    *char v4 = *a2;
    char v4 = (void *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    char v10 = (char *)a2 + v8;
    uint64_t v11 = sub_24E2F0990();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = a3[7];
    char v15 = (void *)((char *)v4 + v13);
    char v16 = (void *)((char *)a2 + v13);
    uint64_t v17 = v16[1];
    *char v15 = *v16;
    v15[1] = v17;
    uint64_t v18 = (char *)v4 + v14;
    uint64_t v20 = *(void *)((char *)a2 + v14);
    uint64_t v19 = *(void *)((char *)a2 + v14 + 8);
    uint64_t v21 = *(void *)((char *)a2 + v14 + 16);
    uint64_t v27 = *(void *)((char *)a2 + v14 + 24);
    uint64_t v22 = *(void *)((char *)a2 + v14 + 32);
    uint64_t v23 = *(void *)((char *)a2 + v14 + 40);
    LOBYTE(v9) = *((unsigned char *)a2 + v14 + 48);
    swift_bridgeObjectRetain();
    sub_24E2A3364(v20, v19, v21, v27, v22, v23, (char)v9);
    *(void *)uint64_t v18 = v20;
    *((void *)v18 + 1) = v19;
    *((void *)v18 + 2) = v21;
    *((void *)v18 + 3) = v27;
    *((void *)v18 + 4) = v22;
    *((void *)v18 + 5) = v23;
    v18[48] = (char)v9;
    uint64_t v24 = a3[9];
    *((unsigned char *)v4 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    *((unsigned char *)v4 + v24) = *((unsigned char *)a2 + v24);
  }
  return v4;
}

uint64_t destroy for Beacon(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_24E2F0990();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(a2 + 28);
  uint64_t v7 = *(void *)v6;
  uint64_t v8 = *(void *)(v6 + 8);
  uint64_t v9 = *(void *)(v6 + 16);
  uint64_t v10 = *(void *)(v6 + 24);
  uint64_t v11 = *(void *)(v6 + 32);
  uint64_t v12 = *(void *)(v6 + 40);
  char v13 = *(unsigned char *)(v6 + 48);
  return sub_24E2A3478(v7, v8, v9, v10, v11, v12, v13);
}

void *initializeWithCopy for Beacon(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_24E2F0990();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v27 = a3;
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)((char *)a1 + v12);
  char v15 = (void *)((char *)a2 + v12);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  uint64_t v17 = (char *)a1 + v13;
  uint64_t v18 = *(void *)((char *)a2 + v13);
  uint64_t v19 = *(void *)((char *)a2 + v13 + 8);
  uint64_t v20 = *(void *)((char *)a2 + v13 + 16);
  uint64_t v21 = *(void *)((char *)a2 + v13 + 24);
  uint64_t v22 = *(void *)((char *)a2 + v13 + 32);
  uint64_t v23 = *(void *)((char *)a2 + v13 + 40);
  char v24 = *((unsigned char *)a2 + v13 + 48);
  swift_bridgeObjectRetain();
  sub_24E2A3364(v18, v19, v20, v21, v22, v23, v24);
  *(void *)uint64_t v17 = v18;
  *((void *)v17 + 1) = v19;
  *((void *)v17 + 2) = v20;
  *((void *)v17 + 3) = v21;
  *((void *)v17 + 4) = v22;
  *((void *)v17 + 5) = v23;
  v17[48] = v24;
  uint64_t v25 = v27[9];
  *((unsigned char *)a1 + v27[8]) = *((unsigned char *)a2 + v27[8]);
  *((unsigned char *)a1 + v25) = *((unsigned char *)a2 + v25);
  return a1;
}

void *assignWithCopy for Beacon(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v31 = a3;
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24E2F0990();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = (char *)a1 + v13;
  char v15 = (char *)a2 + v13;
  uint64_t v16 = *(void *)v15;
  uint64_t v17 = *((void *)v15 + 1);
  uint64_t v18 = *((void *)v15 + 2);
  uint64_t v19 = *((void *)v15 + 3);
  uint64_t v20 = *((void *)v15 + 4);
  uint64_t v21 = *((void *)v15 + 5);
  char v22 = v15[48];
  sub_24E2A3364(*(void *)v15, v17, v18, v19, v20, v21, v22);
  uint64_t v23 = *(void *)v14;
  uint64_t v24 = *((void *)v14 + 1);
  uint64_t v25 = *((void *)v14 + 2);
  uint64_t v26 = *((void *)v14 + 3);
  uint64_t v27 = *((void *)v14 + 4);
  uint64_t v28 = *((void *)v14 + 5);
  *(void *)uint64_t v14 = v16;
  *((void *)v14 + 1) = v17;
  *((void *)v14 + 2) = v18;
  *((void *)v14 + 3) = v19;
  *((void *)v14 + 4) = v20;
  *((void *)v14 + 5) = v21;
  char v29 = v14[48];
  v14[48] = v22;
  sub_24E2A3478(v23, v24, v25, v26, v27, v28, v29);
  *((unsigned char *)a1 + v31[8]) = *((unsigned char *)a2 + v31[8]);
  *((unsigned char *)a1 + v31[9]) = *((unsigned char *)a2 + v31[9]);
  return a1;
}

_OWORD *initializeWithTake for Beacon(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24E2F0990();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  v11[48] = v12[48];
  long long v13 = *((_OWORD *)v12 + 2);
  long long v14 = *(_OWORD *)v12;
  *((_OWORD *)v11 + 1) = *((_OWORD *)v12 + 1);
  *((_OWORD *)v11 + 2) = v13;
  *(_OWORD *)uint64_t v11 = v14;
  uint64_t v15 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *((unsigned char *)a1 + v15) = *((unsigned char *)a2 + v15);
  return a1;
}

void *assignWithTake for Beacon(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_24E2F0990();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)((char *)a1 + v11);
  long long v13 = (void *)((char *)a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[7];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  char v19 = v18[48];
  uint64_t v20 = *(void *)v17;
  uint64_t v21 = *((void *)v17 + 1);
  uint64_t v22 = *((void *)v17 + 2);
  uint64_t v23 = *((void *)v17 + 3);
  uint64_t v24 = *((void *)v17 + 4);
  uint64_t v25 = *((void *)v17 + 5);
  long long v26 = *((_OWORD *)v18 + 1);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *((_OWORD *)v17 + 1) = v26;
  *((_OWORD *)v17 + 2) = *((_OWORD *)v18 + 2);
  char v27 = v17[48];
  v17[48] = v19;
  sub_24E2A3478(v20, v21, v22, v23, v24, v25, v27);
  uint64_t v28 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *((unsigned char *)a1 + v28) = *((unsigned char *)a2 + v28);
  return a1;
}

uint64_t getEnumTagSinglePayload for Beacon(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24E2D7134);
}

uint64_t sub_24E2D7134(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for Beacon.BAIdentifier();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for Beacon(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24E2D71F8);
}

uint64_t sub_24E2D71F8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for Beacon.BAIdentifier();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_24E2D72A0()
{
  uint64_t result = sub_24E2F0990();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t Beacon.BAIdentifier.init(rawValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_24E2F0990();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

uint64_t Beacon.BAIdentifier.rawValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_24E2F0990();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t Beacon.BAIdentifier.init(rawValue:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAED8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24E2F0990();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Beacon.BAIdentifier();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24E2F0940();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_24E2D76A4((uint64_t)v4);
    uint64_t v13 = 1;
  }
  else
  {
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v14(v8, v4, v5);
    v14(v12, v8, v5);
    sub_24E2D66A4((uint64_t)v12, a1);
    uint64_t v13 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(a1, v13, 1, v9);
}

uint64_t type metadata accessor for Beacon.BAIdentifier()
{
  uint64_t result = qword_2698CB498;
  if (!qword_2698CB498) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24E2D76A4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAED8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t Beacon.BAIdentifier.hash(into:)()
{
  sub_24E2F0990();
  sub_24E2D79F0((unint64_t *)&qword_2698CB138, MEMORY[0x263F07508]);
  return sub_24E2F0E00();
}

uint64_t Beacon.BAIdentifier.hashValue.getter()
{
  return sub_24E2F14D0();
}

uint64_t sub_24E2D7818()
{
  return sub_24E2F14D0();
}

uint64_t sub_24E2D78A0()
{
  sub_24E2F0990();
  sub_24E2D79F0((unint64_t *)&qword_2698CB138, MEMORY[0x263F07508]);
  return sub_24E2F0E00();
}

uint64_t sub_24E2D7924()
{
  return sub_24E2F14D0();
}

uint64_t sub_24E2D79A8()
{
  return sub_24E2D79F0(&qword_2698CB490, (void (*)(uint64_t))type metadata accessor for Beacon.BAIdentifier);
}

uint64_t sub_24E2D79F0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s12BAIdentifierVwCP(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24E2F0990();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t _s12BAIdentifierVwxx(uint64_t a1)
{
  uint64_t v2 = sub_24E2F0990();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t _s12BAIdentifierVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24E2F0990();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t _s12BAIdentifierVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24E2F0990();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t _s12BAIdentifierVwtk(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24E2F0990();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t _s12BAIdentifierVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24E2F0990();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t _s12BAIdentifierVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24E2D7CAC);
}

uint64_t sub_24E2D7CAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24E2F0990();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t _s12BAIdentifierVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24E2D7D2C);
}

uint64_t sub_24E2D7D2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24E2F0990();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_24E2D7D9C()
{
  uint64_t result = sub_24E2F0990();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t Beacon.DisplayName.value.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Beacon.DisplayName.init(name:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t static Beacon.DisplayName.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_24E2F1430();
  }
}

uint64_t sub_24E2D7E90(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_24E2F1430();
  }
}

uint64_t static Beacon.DisplayName.< infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 0;
  }
  else {
    return sub_24E2F1430();
  }
}

uint64_t sub_24E2D7EF0(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 0;
  }
  else {
    return sub_24E2F1430();
  }
}

uint64_t sub_24E2D7F20(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  if (v4 == v2 && v5 == v3) {
    char v7 = 1;
  }
  else {
    char v7 = sub_24E2F1430() ^ 1;
  }
  return v7 & 1;
}

uint64_t sub_24E2D7F60(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    char v3 = 1;
  }
  else {
    char v3 = sub_24E2F1430() ^ 1;
  }
  return v3 & 1;
}

uint64_t sub_24E2D7FAC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  if (v4 == v2 && v5 == v3) {
    return 0;
  }
  else {
    return sub_24E2F1430();
  }
}

Swift::Bool __swiftcall Beacon.DisplayName.contains(search:)(Swift::String search)
{
  uint64_t v1 = HIBYTE(search._object) & 0xF;
  if (((uint64_t)search._object & 0x2000000000000000) == 0) {
    uint64_t v1 = search._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  }
  if (!v1) {
    return 1;
  }
  sub_24E2AF0F8();
  return sub_24E2F1250() & 1;
}

unint64_t sub_24E2D8050()
{
  unint64_t result = qword_2698CB4A8;
  if (!qword_2698CB4A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB4A8);
  }
  return result;
}

void *_s16UniqueIdentifierVwCP(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

void *_s16UniqueIdentifierVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *_s16UniqueIdentifierVwta(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s16UniqueIdentifierVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s16UniqueIdentifierVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Beacon.DisplayName()
{
  return &type metadata for Beacon.DisplayName;
}

uint64_t Beacon.ImageDefinition.Emoji.init(symbol:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t Beacon.ImageDefinition.serverImage.getter@<X0>(uint64_t a1@<X8>)
{
  int v3 = *((char *)v1 + 48);
  if (v3 < 0)
  {
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    uint64_t v7 = 0;
    uint64_t v6 = 0;
    uint64_t v5 = 0;
    uint64_t v4 = 0;
    LOBYTE(v3) = 0;
  }
  else
  {
    uint64_t v5 = v1[4];
    uint64_t v4 = v1[5];
    uint64_t v7 = v1[2];
    uint64_t v6 = v1[3];
    uint64_t v10 = v1;
    uint64_t v8 = *v1;
    uint64_t v9 = v10[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
  }
  *(void *)a1 = v8;
  *(void *)(a1 + 8) = v9;
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v4;
  *(unsigned char *)(a1 + 48) = v3;
  return result;
}

uint64_t Beacon.ImageDefinition.emoji.getter@<X0>(void *a1@<X8>)
{
  if ((char)v1[6] < 0)
  {
    uint64_t v3 = *v1;
    uint64_t result = swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v3 = 0;
    uint64_t result = 0;
  }
  *a1 = v3;
  a1[1] = result;
  return result;
}

uint64_t Beacon.ImageDefinition.ServerImage.category.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Beacon.ImageDefinition.ServerImage.model.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Beacon.ImageDefinition.ServerImage.color.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

void Beacon.ImageDefinition.ServerImage.variant.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 48);
}

BOOL static Beacon.ImageDefinition.ServerImage.Variant.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t Beacon.ImageDefinition.ServerImage.Variant.hash(into:)()
{
  return sub_24E2F14B0();
}

uint64_t Beacon.ImageDefinition.ServerImage.Variant.hashValue.getter()
{
  return sub_24E2F14D0();
}

uint64_t Beacon.ImageDefinition.ServerImage.init(category:model:color:variant:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X6>, uint64_t a8@<X8>)
{
  char v8 = *a7;
  *(void *)a8 = result;
  *(void *)(a8 + 8) = a2;
  *(void *)(a8 + 16) = a3;
  *(void *)(a8 + 24) = a4;
  *(void *)(a8 + 32) = a5;
  *(void *)(a8 + 40) = a6;
  *(unsigned char *)(a8 + 48) = v8;
  return result;
}

uint64_t Beacon.ImageDefinition.ServerImage.hash(into:)()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  sub_24E2F0F20();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24E2F0F20();
  swift_bridgeObjectRelease();
  sub_24E2F14C0();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_24E2F0F20();
    swift_bridgeObjectRelease();
  }
  return sub_24E2F14B0();
}

uint64_t Beacon.ImageDefinition.ServerImage.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  sub_24E2F14A0();
  swift_bridgeObjectRetain();
  sub_24E2F0F20();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24E2F0F20();
  swift_bridgeObjectRelease();
  sub_24E2F14C0();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_24E2F0F20();
    swift_bridgeObjectRelease();
  }
  sub_24E2F14B0();
  return sub_24E2F14D0();
}

uint64_t sub_24E2D85D0()
{
  uint64_t v1 = *(void *)(v0 + 40);
  sub_24E2F14A0();
  swift_bridgeObjectRetain();
  sub_24E2F0F20();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24E2F0F20();
  swift_bridgeObjectRelease();
  sub_24E2F14C0();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_24E2F0F20();
    swift_bridgeObjectRelease();
  }
  sub_24E2F14B0();
  return sub_24E2F14D0();
}

uint64_t Beacon.ImageDefinition.Emoji.symbol.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static Beacon.ImageDefinition.Emoji.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_24E2F1430();
  }
}

uint64_t Beacon.ImageDefinition.Emoji.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_24E2F0F20();
  return swift_bridgeObjectRelease();
}

uint64_t Beacon.ImageDefinition.Emoji.hashValue.getter()
{
  return sub_24E2F14D0();
}

uint64_t sub_24E2D87C8()
{
  return sub_24E2F14D0();
}

uint64_t sub_24E2D8824()
{
  swift_bridgeObjectRetain();
  sub_24E2F0F20();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24E2D887C()
{
  return sub_24E2F14D0();
}

BOOL _s10FindMyCore6BeaconV15ImageDefinitionO06ServerE0V2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  int v6 = *(unsigned __int8 *)(a1 + 48);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v10 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  int v11 = *(unsigned __int8 *)(a2 + 48);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (char v12 = sub_24E2F1430(), result = 0, (v12 & 1) != 0))
  {
    if (v2 == v7 && v4 == v8 || (char v14 = sub_24E2F1430(), result = 0, (v14 & 1) != 0))
    {
      if (v5)
      {
        if (v9)
        {
          if (v3 != v10 || v5 != v9)
          {
            char v15 = sub_24E2F1430();
            BOOL result = 0;
            if ((v15 & 1) == 0) {
              return result;
            }
          }
          return v6 == v11;
        }
      }
      else if (!v9)
      {
        return v6 == v11;
      }
      return 0;
    }
  }
  return result;
}

BOOL _s10FindMyCore6BeaconV15ImageDefinitionO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v7 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v9 = *(void *)a2;
  uint64_t v8 = *(void *)(a2 + 8);
  uint64_t v11 = *(void *)(a2 + 16);
  uint64_t v10 = *(void *)(a2 + 24);
  uint64_t v13 = *(void *)(a2 + 32);
  uint64_t v12 = *(void *)(a2 + 40);
  int v14 = *(char *)(a2 + 48);
  int v15 = *(char *)(a1 + 48);
  uint64_t v54 = v12;
  if (v15 < 0)
  {
    if (v14 < 0)
    {
      uint64_t v41 = *(void *)(a1 + 16);
      uint64_t v42 = *(void *)(a1 + 24);
      uint64_t v46 = *(void *)(a1 + 32);
      uint64_t v49 = *(void *)(a2 + 16);
      if (v3 == v9 && v2 == v8)
      {
        BOOL MyCore6BeaconV15ImageDefinitionO06ServerE0V2eeoiySbAG_AGtFZ_0 = 1;
        uint64_t v33 = *(void *)(a1 + 8);
        uint64_t v34 = *(void *)a1;
      }
      else
      {
        uint64_t v51 = *(void *)a2;
        uint64_t v35 = *(void *)(a2 + 8);
        uint64_t v33 = *(void *)(a1 + 8);
        uint64_t v34 = *(void *)a1;
        char v36 = sub_24E2F1430();
        uint64_t v8 = v35;
        uint64_t v11 = v49;
        uint64_t v9 = v51;
        BOOL MyCore6BeaconV15ImageDefinitionO06ServerE0V2eeoiySbAG_AGtFZ_0 = v36;
      }
      uint64_t v37 = v11;
      uint64_t v38 = v9;
      uint64_t v39 = v8;
      sub_24E2A3364(v9, v8, v37, v10, v13, v12, v14);
      sub_24E2A3364(v34, v33, v41, v42, v46, v6, v15);
      sub_24E2A3478(v34, v33, v41, v42, v46, v6, v15);
      uint64_t v22 = v38;
      uint64_t v23 = v39;
      uint64_t v24 = v49;
      uint64_t v25 = v10;
      uint64_t v26 = v13;
      uint64_t v27 = v12;
      char v28 = v14;
      goto LABEL_11;
    }
  }
  else if ((v14 & 0x80000000) == 0)
  {
    v57[0] = *(void *)a1;
    v57[1] = v2;
    v57[2] = v5;
    v57[3] = v4;
    v57[4] = v7;
    v57[5] = v6;
    char v43 = v15;
    char v58 = v15;
    v55[0] = v9;
    v55[1] = v8;
    uint64_t v55[2] = v11;
    v55[3] = v10;
    v55[4] = v13;
    v55[5] = v12;
    char v52 = v14;
    char v56 = v14;
    uint64_t v47 = v6;
    uint64_t v16 = v8;
    uint64_t v17 = v9;
    uint64_t v45 = v7;
    uint64_t v18 = v4;
    uint64_t v19 = v5;
    uint64_t v20 = v2;
    uint64_t v21 = v3;
    BOOL MyCore6BeaconV15ImageDefinitionO06ServerE0V2eeoiySbAG_AGtFZ_0 = _s10FindMyCore6BeaconV15ImageDefinitionO06ServerE0V2eeoiySbAG_AGtFZ_0((uint64_t)v57, (uint64_t)v55);
    sub_24E2A3364(v17, v16, v11, v10, v13, v12, v52);
    sub_24E2A3364(v21, v20, v19, v18, v45, v47, v43);
    sub_24E2A3478(v21, v20, v19, v18, v45, v47, v43);
    uint64_t v22 = v17;
    uint64_t v23 = v16;
    uint64_t v24 = v11;
    uint64_t v25 = v10;
    uint64_t v26 = v13;
    uint64_t v27 = v12;
    char v28 = v52;
LABEL_11:
    sub_24E2A3478(v22, v23, v24, v25, v26, v27, v28);
    return MyCore6BeaconV15ImageDefinitionO06ServerE0V2eeoiySbAG_AGtFZ_0;
  }
  uint64_t v50 = *(void *)a2;
  uint64_t v48 = *(void *)(a2 + 8);
  char v53 = *(unsigned char *)(a2 + 48);
  uint64_t v29 = *(void *)(a1 + 8);
  char v30 = *(unsigned char *)(a1 + 48);
  uint64_t v31 = *(void *)a1;
  sub_24E2A3364(v9, v8, v11, v10, v13, *(void *)(a2 + 40), v53);
  sub_24E2A3364(v31, v29, v5, v4, v7, v6, v30);
  sub_24E2A3478(v31, v29, v5, v4, v7, v6, v30);
  sub_24E2A3478(v50, v48, v11, v10, v13, v54, v53);
  return 0;
}

unint64_t sub_24E2D8CEC()
{
  unint64_t result = qword_2698CB4B0;
  if (!qword_2698CB4B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB4B0);
  }
  return result;
}

unint64_t sub_24E2D8D44()
{
  unint64_t result = qword_2698CB4B8;
  if (!qword_2698CB4B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB4B8);
  }
  return result;
}

unint64_t sub_24E2D8D9C()
{
  unint64_t result = qword_2698CB4C0;
  if (!qword_2698CB4C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB4C0);
  }
  return result;
}

uint64_t _s15ImageDefinitionOwxx(uint64_t a1)
{
  return sub_24E2A3478(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(unsigned char *)(a1 + 48));
}

uint64_t _s15ImageDefinitionOwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  char v9 = *(unsigned char *)(a2 + 48);
  sub_24E2A3364(*(void *)a2, v4, v5, v6, v7, v8, v9);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(unsigned char *)(a1 + 48) = v9;
  return a1;
}

uint64_t _s15ImageDefinitionOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  char v9 = *(unsigned char *)(a2 + 48);
  sub_24E2A3364(*(void *)a2, v4, v5, v6, v7, v8, v9);
  uint64_t v10 = *(void *)a1;
  uint64_t v11 = *(void *)(a1 + 8);
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 32);
  uint64_t v15 = *(void *)(a1 + 40);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  char v16 = *(unsigned char *)(a1 + 48);
  *(unsigned char *)(a1 + 48) = v9;
  sub_24E2A3478(v10, v11, v12, v13, v14, v15, v16);
  return a1;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s15ImageDefinitionOwta(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 48);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  long long v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  char v11 = *(unsigned char *)(a1 + 48);
  *(unsigned char *)(a1 + 48) = v3;
  sub_24E2A3478(v4, v6, v5, v7, v8, v9, v11);
  return a1;
}

uint64_t _s15ImageDefinitionOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF && *(unsigned char *)(a1 + 49)) {
    return (*(_DWORD *)a1 + 15);
  }
  unsigned int v3 = ((*(unsigned __int8 *)(a1 + 48) >> 3) & 0xE | (*(unsigned __int8 *)(a1 + 48) >> 7)) ^ 0xF;
  if (v3 >= 0xE) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t _s15ImageDefinitionOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)__n128 result = a2 - 15;
    if (a3 >= 0xF) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF) {
      *(unsigned char *)(result + 49) = 0;
    }
    if (a2)
    {
      *(_OWORD *)(result + 16) = 0u;
      *(_OWORD *)(result + 32) = 0u;
      *(_OWORD *)__n128 result = 0u;
      *(unsigned char *)(result + 48) = 16 * (((-a2 >> 1) & 7) - 8 * a2);
    }
  }
  return result;
}

uint64_t sub_24E2D9048(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 48) >> 7;
}

uint64_t sub_24E2D9054(uint64_t result)
{
  *(unsigned char *)(result + 48) &= ~0x80u;
  return result;
}

uint64_t sub_24E2D9064(uint64_t result, char a2)
{
  *(unsigned char *)(result + 48) = *(unsigned char *)(result + 48) & 0xF | (a2 << 7);
  return result;
}

ValueMetadata *type metadata accessor for Beacon.ImageDefinition()
{
  return &type metadata for Beacon.ImageDefinition;
}

uint64_t _s15ImageDefinitionO11ServerImageVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s15ImageDefinitionO11ServerImageVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s15ImageDefinitionO11ServerImageVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t _s15ImageDefinitionO11ServerImageVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t _s15ImageDefinitionO11ServerImageVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 49)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s15ImageDefinitionO11ServerImageVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 49) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Beacon.ImageDefinition.ServerImage()
{
  return &type metadata for Beacon.ImageDefinition.ServerImage;
}

uint64_t _s15ImageDefinitionO11ServerImageV7VariantOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s15ImageDefinitionO11ServerImageV7VariantOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *__n128 result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E2D9428);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Beacon.ImageDefinition.ServerImage.Variant()
{
  return &type metadata for Beacon.ImageDefinition.ServerImage.Variant;
}

ValueMetadata *type metadata accessor for Beacon.ImageDefinition.Emoji()
{
  return &type metadata for Beacon.ImageDefinition.Emoji;
}

BOOL sub_24E2D9474(unsigned __int8 a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  int v3 = a1;
  sub_24E2F14A0();
  sub_24E2F14B0();
  uint64_t v4 = sub_24E2F14D0();
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = v4 & ~v5;
  uint64_t v7 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(a2 + 48);
  if (*(unsigned __int8 *)(v8 + v6) == v3) {
    return 1;
  }
  uint64_t v10 = ~v5;
  unint64_t v11 = (v6 + 1) & v10;
  if (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    return 0;
  }
  do
  {
    int v12 = *(unsigned __int8 *)(v8 + v11);
    BOOL result = v12 == v3;
    if (v12 == v3) {
      break;
    }
    unint64_t v11 = (v11 + 1) & v10;
  }
  while (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

Swift::Bool __swiftcall Beacon.contains(search:)(Swift::String search)
{
  uint64_t v1 = HIBYTE(search._object) & 0xF;
  if (((uint64_t)search._object & 0x2000000000000000) == 0) {
    uint64_t v1 = search._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  }
  if (v1)
  {
    type metadata accessor for Beacon();
    sub_24E2AF0F8();
    char v2 = sub_24E2F1250();
  }
  else
  {
    char v2 = 1;
  }
  return v2 & 1;
}

uint64_t Beacon.Section.sortOrder.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  switch(v1)
  {
    case 0:
      return 48;
    case 1:
      return 49;
    case 2:
      return 51;
  }
  sub_24E2F0F50();
  return 50;
}

void Beacon.Section.category.getter(unsigned char *a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + 8);
  BOOL v3 = v2 >= 3;
  unsigned int v4 = 0x30100u >> (8 * v2);
  if (v3) {
    LOBYTE(v4) = 2;
  }
  *a1 = v4;
}

void *static Beacon.Section.Category.allCases.getter()
{
  return &unk_27003AD28;
}

void sub_24E2D96B0(void *a1@<X8>)
{
  *a1 = &unk_27003AAF8;
}

uint64_t Beacon.Section.hash(into:)()
{
  unint64_t v1 = v0[1];
  if (v1 <= 2) {
    return sub_24E2F14B0();
  }
  uint64_t v3 = *v0;
  sub_24E2F14B0();
  swift_bridgeObjectRetain();
  sub_24E2F0F20();
  return sub_24E2AF224(v3, v1);
}

uint64_t Beacon.Section.hashValue.getter()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  sub_24E2F14A0();
  sub_24E2F14B0();
  if (v2 > 2)
  {
    swift_bridgeObjectRetain();
    sub_24E2F0F20();
    sub_24E2AF224(v1, v2);
  }
  return sub_24E2F14D0();
}

void sub_24E2D9814(unsigned char *a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + 8);
  BOOL v3 = v2 >= 3;
  unsigned int v4 = 0x30100u >> (8 * v2);
  if (v3) {
    LOBYTE(v4) = 2;
  }
  *a1 = v4;
}

uint64_t sub_24E2D983C()
{
  uint64_t v1 = *(void *)(v0 + 8);
  switch(v1)
  {
    case 0:
      return 48;
    case 1:
      return 49;
    case 2:
      return 51;
  }
  sub_24E2F0F50();
  return 50;
}

uint64_t sub_24E2D98B8()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  sub_24E2F14A0();
  sub_24E2F14B0();
  if (v2 > 2)
  {
    swift_bridgeObjectRetain();
    sub_24E2F0F20();
    sub_24E2AF224(v1, v2);
  }
  return sub_24E2F14D0();
}

uint64_t sub_24E2D995C()
{
  unint64_t v1 = v0[1];
  if (v1 <= 2) {
    return sub_24E2F14B0();
  }
  uint64_t v3 = *v0;
  sub_24E2F14B0();
  swift_bridgeObjectRetain();
  sub_24E2F0F20();
  return sub_24E2AF224(v3, v1);
}

uint64_t sub_24E2D9A08()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  sub_24E2F14A0();
  sub_24E2F14B0();
  if (v2 > 2)
  {
    swift_bridgeObjectRetain();
    sub_24E2F0F20();
    sub_24E2AF224(v1, v2);
  }
  return sub_24E2F14D0();
}

BOOL Beacon.listSection(enabledSections:)@<W0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  if (*(unsigned char *)(v2 + *(int *)(type metadata accessor for Beacon() + 32)) == 1)
  {
    BOOL result = sub_24E2D9474(1u, a1);
    *a2 = 0;
    if (result) {
      a2[1] = 1;
    }
    else {
      a2[1] = 2;
    }
  }
  else
  {
    BOOL result = sub_24E2D9474(2u, a1);
    if (result) {
      long long v6 = xmmword_24E2F3D00;
    }
    else {
      long long v6 = xmmword_24E2F3CF0;
    }
    *(_OWORD *)a2 = v6;
  }
  return result;
}

uint64_t static Beacon.Tag.== infix(_:_:)()
{
  return 1;
}

uint64_t Beacon.Tag.hash(into:)()
{
  return sub_24E2F14B0();
}

void *static Beacon.Tag.allCases.getter()
{
  return &unk_27003AD50;
}

uint64_t Beacon.Tag.hashValue.getter()
{
  return sub_24E2F14D0();
}

void sub_24E2D9BCC(void *a1@<X8>)
{
  *a1 = &unk_27003AAD0;
}

uint64_t Beacon.contains(tag:)()
{
  return 1;
}

uint64_t Beacon.Sort.sortDescriptor<A>(rootKeyPath:)()
{
  switch(*v0)
  {
    case 4:
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v2 = sub_24E2E7214(KeyPath);
      swift_release();
      unint64_t v3 = MEMORY[0x263F8D560];
      break;
    case 5:
      uint64_t v5 = swift_getKeyPath();
      uint64_t v2 = sub_24E2E7214(v5);
      swift_release();
      unint64_t v6 = sub_24E2D9FC8();
      goto LABEL_6;
    case 6:
      uint64_t v7 = swift_getKeyPath();
      uint64_t v2 = sub_24E2E7214(v7);
      swift_release();
      unint64_t v6 = sub_24E2D9F28();
LABEL_6:
      unint64_t v3 = v6;
      break;
    default:
      uint64_t v1 = swift_getKeyPath();
      uint64_t v2 = sub_24E2E7214(v1);
      swift_release();
      unint64_t v3 = MEMORY[0x263F8D6E0];
      break;
  }
  return MEMORY[0x270EEE9C0](v2, 0, v3);
}

unsigned char *sub_24E2D9D48@<X0>(unsigned char *result@<X0>, void *a2@<X8>)
{
  *a2 = (*result & 1) == 0;
  return result;
}

uint64_t sub_24E2D9D5C(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x270EEE9C0](a1, a2 & 1, a5);
}

uint64_t sub_24E2D9D68()
{
  return 0;
}

double sub_24E2D9D70()
{
  return 0.0;
}

uint64_t sub_24E2D9D78@<X0>(void *a1@<X8>)
{
  unint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for Beacon() + 24));
  uint64_t v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

BOOL static Beacon.Sort.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t Beacon.Sort.hash(into:)()
{
  return sub_24E2F14B0();
}

void *static Beacon.Sort.allCases.getter()
{
  return &unk_27003AA08;
}

void sub_24E2D9E14(void *a1@<X8>)
{
  *a1 = &unk_27003AA08;
}

uint64_t _s10FindMyCore6BeaconV7SectionO2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  if (!v3)
  {
    if (!v5)
    {
      unint64_t v3 = 0;
      char v6 = 1;
      goto LABEL_13;
    }
    goto LABEL_11;
  }
  if (v3 == 1)
  {
    if (v5 == 1)
    {
      unint64_t v3 = 1;
      char v6 = 1;
      goto LABEL_13;
    }
    goto LABEL_11;
  }
  if (v3 != 2)
  {
    if (v5 >= 3)
    {
      if (v2 == v4 && v3 == v5) {
        char v6 = 1;
      }
      else {
        char v6 = sub_24E2F1430();
      }
      goto LABEL_12;
    }
LABEL_11:
    char v6 = 0;
LABEL_12:
    sub_24E2AF210(v4, v5);
    sub_24E2AF210(v2, v3);
    goto LABEL_13;
  }
  if (v5 != 2) {
    goto LABEL_11;
  }
  char v6 = 1;
  unint64_t v3 = 2;
LABEL_13:
  sub_24E2AF224(v2, v3);
  sub_24E2AF224(v4, v5);
  return v6 & 1;
}

uint64_t sub_24E2D9F1C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

unint64_t sub_24E2D9F28()
{
  unint64_t result = qword_2698CB4C8;
  if (!qword_2698CB4C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB4C8);
  }
  return result;
}

uint64_t sub_24E2D9F7C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(a1 + *(int *)(type metadata accessor for Beacon() + 24));
  uint64_t v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

unint64_t sub_24E2D9FC8()
{
  unint64_t result = qword_2698CB4D0;
  if (!qword_2698CB4D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB4D0);
  }
  return result;
}

void sub_24E2DA01C(void *a1@<X8>)
{
  *a1 = 0;
}

void sub_24E2DA024(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

unsigned char *sub_24E2DA02C@<X0>(unsigned char *result@<X0>, void *a2@<X8>)
{
  *a2 = (*result & 1) == 0;
  return result;
}

void sub_24E2DA040(void *a1@<X8>)
{
  *a1 = 0;
}

void sub_24E2DA048(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

void sub_24E2DA050(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

unint64_t sub_24E2DA05C()
{
  unint64_t result = qword_2698CB4D8;
  if (!qword_2698CB4D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB4D8);
  }
  return result;
}

uint64_t sub_24E2DA0B0()
{
  return sub_24E2DA59C(&qword_2698CB4E0, &qword_2698CB4E8);
}

unint64_t sub_24E2DA0DC()
{
  unint64_t result = qword_2698CB4F0;
  if (!qword_2698CB4F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB4F0);
  }
  return result;
}

unint64_t sub_24E2DA134(uint64_t a1)
{
  unint64_t result = sub_24E2DA15C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_24E2DA15C()
{
  unint64_t result = qword_2698CB4F8;
  if (!qword_2698CB4F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB4F8);
  }
  return result;
}

unint64_t sub_24E2DA1B4()
{
  unint64_t result = qword_2698CB500;
  if (!qword_2698CB500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB500);
  }
  return result;
}

unint64_t sub_24E2DA20C()
{
  unint64_t result = qword_2698CB508;
  if (!qword_2698CB508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB508);
  }
  return result;
}

unint64_t sub_24E2DA264()
{
  unint64_t result = qword_2698CB510;
  if (!qword_2698CB510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB510);
  }
  return result;
}

uint64_t sub_24E2DA2B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24E2DA490(a1, a2, a3, (uint64_t (*)(void))sub_24E2DA2E4, (uint64_t (*)(void))sub_24E2DA338);
}

unint64_t sub_24E2DA2E4()
{
  unint64_t result = qword_2698CB518;
  if (!qword_2698CB518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB518);
  }
  return result;
}

unint64_t sub_24E2DA338()
{
  unint64_t result = qword_2698CB520;
  if (!qword_2698CB520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB520);
  }
  return result;
}

uint64_t sub_24E2DA38C()
{
  return sub_24E2DA59C(&qword_2698CB528, &qword_2698CB530);
}

unint64_t sub_24E2DA3B8()
{
  unint64_t result = qword_2698CB538;
  if (!qword_2698CB538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB538);
  }
  return result;
}

unint64_t sub_24E2DA410()
{
  unint64_t result = qword_2698CB540;
  if (!qword_2698CB540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB540);
  }
  return result;
}

uint64_t sub_24E2DA464(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24E2DA490(a1, a2, a3, (uint64_t (*)(void))sub_24E2DA4CC, (uint64_t (*)(void))sub_24E2DA520);
}

uint64_t sub_24E2DA490(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  *(void *)(a1 + 8) = a4();
  uint64_t result = a5();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_24E2DA4CC()
{
  unint64_t result = qword_2698CB548;
  if (!qword_2698CB548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB548);
  }
  return result;
}

unint64_t sub_24E2DA520()
{
  unint64_t result = qword_2698CB550;
  if (!qword_2698CB550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB550);
  }
  return result;
}

uint64_t sub_24E2DA574()
{
  return sub_24E2DA59C(&qword_2698CB558, &qword_2698CB560);
}

uint64_t sub_24E2DA59C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24E2DA5F0()
{
  unint64_t result = qword_2698CB568;
  if (!qword_2698CB568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB568);
  }
  return result;
}

unint64_t _s7SectionOwxx(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s7SectionOwCP_1(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *_s7SectionOwca(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s7SectionOwta(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s7SectionOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFD && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 2;
  if (v4 >= 4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t _s7SectionOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 2;
    }
  }
  return result;
}

uint64_t sub_24E2DA860(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_24E2DA878(void *result, int a2)
{
  if (a2 < 0)
  {
    *unint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for Beacon.Section()
{
  return &type metadata for Beacon.Section;
}

unsigned char *_s7SectionO8CategoryOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E2DA974);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Beacon.Section.Category()
{
  return &type metadata for Beacon.Section.Category;
}

unsigned char *_s3TagOwst(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24E2DAA48);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for Beacon.Tag()
{
  return &type metadata for Beacon.Tag;
}

uint64_t _s4SortOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s4SortOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E2DABDCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Beacon.Sort()
{
  return &type metadata for Beacon.Sort;
}

uint64_t Beacon.Owner.init(isMyself:)@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t Beacon.Owner.isMyself.getter()
{
  return *v0;
}

uint64_t _s5OwnerVwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s5OwnerVwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E2DAD98);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Beacon.Owner()
{
  return &type metadata for Beacon.Owner;
}

uint64_t Beacon.UniqueIdentifier.value.getter()
{
  return 0x3A315644494142;
}

uint64_t Beacon.UniqueIdentifier.init(rawValue:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_24E2F0FC0();
  if (result)
  {
    unint64_t v7 = sub_24E2F0F30();
    unint64_t v8 = sub_24E2A2D20(v7, a1, a2);
    uint64_t v10 = v9;
    uint64_t v12 = v11;
    uint64_t v14 = v13;
    swift_bridgeObjectRelease();
    a1 = MEMORY[0x253337E60](v8, v10, v12, v14);
    a2 = v15;
    uint64_t result = swift_bridgeObjectRelease();
  }
  *a3 = a1;
  a3[1] = a2;
  return result;
}

uint64_t Beacon.UniqueIdentifier.baIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  swift_bridgeObjectRetain();
  return Beacon.BAIdentifier.init(rawValue:)(a1);
}

uint64_t Beacon.UniqueIdentifier.init(baIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_24E2F0950();
  uint64_t v6 = v5;
  uint64_t result = sub_24E2B1CFC(a1);
  *a2 = v4;
  a2[1] = v6;
  return result;
}

uint64_t Beacon.UniqueIdentifier.valueWithoutPrefix.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Beacon.UniqueIdentifier.hash(into:)()
{
  return sub_24E2F14B0();
}

uint64_t static Beacon.UniqueIdentifier.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_24E2F1430();
  }
}

uint64_t Beacon.UniqueIdentifier.hashValue.getter()
{
  return sub_24E2F14D0();
}

uint64_t sub_24E2DB090()
{
  return sub_24E2F14D0();
}

uint64_t sub_24E2DB0F8()
{
  return sub_24E2F14B0();
}

uint64_t sub_24E2DB150()
{
  return sub_24E2F14D0();
}

uint64_t static Beacon.UniqueIdentifier.< infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 0;
  }
  else {
    return sub_24E2F1430();
  }
}

unint64_t sub_24E2DB1E8()
{
  unint64_t result = qword_2698CB570;
  if (!qword_2698CB570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB570);
  }
  return result;
}

ValueMetadata *type metadata accessor for Beacon.UniqueIdentifier()
{
  return &type metadata for Beacon.UniqueIdentifier;
}

unsigned char *_s16UniqueIdentifierV14IdentifierTypeOwst(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24E2DB2E8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s16UniqueIdentifierV14IdentifierTypeOMa()
{
  return &_s16UniqueIdentifierV14IdentifierTypeON;
}

unint64_t sub_24E2DB324()
{
  unint64_t result = qword_2698CB578;
  if (!qword_2698CB578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB578);
  }
  return result;
}

uint64_t Device.beacon.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24E2DB384(v1, a1);
}

uint64_t sub_24E2DB384(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Beacon();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t Device.isThisDevice.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Device(0) + 20));
}

uint64_t type metadata accessor for Device(uint64_t a1)
{
  return sub_24E2DBA7C(a1, (uint64_t *)&unk_2698CB588);
}

uint64_t Device.isThisDevice.setter(char a1)
{
  uint64_t result = type metadata accessor for Device(0);
  *(unsigned char *)(v1 + *(int *)(result + 20)) = a1;
  return result;
}

uint64_t (*Device.isThisDevice.modify())()
{
  return nullsub_1;
}

uint64_t Device.init(beacon:isThisDevice:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  sub_24E2DB4E0(a1, a3);
  uint64_t result = type metadata accessor for Device(0);
  *(unsigned char *)(a3 + *(int *)(result + 20)) = a2;
  return result;
}

uint64_t sub_24E2DB4E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Beacon();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t Device.BAIdentifier.rawValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_24E2F0990();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t Device.BAIdentifier.init(rawValue:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAED8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24E2F0940();
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_24E2F0990();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(a1, v4, v5);
  }
  __break(1u);
  return result;
}

uint64_t Device.BAIdentifier.init(rawValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_24E2F0990();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);
  return v5(a2, a1, v4);
}

uint64_t Device.BAIdentifier.hash(into:)()
{
  sub_24E2F0990();
  sub_24E2DBA14((unint64_t *)&qword_2698CB138, MEMORY[0x263F07508]);
  return sub_24E2F0E00();
}

uint64_t Device.BAIdentifier.hashValue.getter()
{
  return sub_24E2F14D0();
}

uint64_t sub_24E2DB83C()
{
  return sub_24E2F14D0();
}

uint64_t sub_24E2DB8C4()
{
  sub_24E2F0990();
  sub_24E2DBA14((unint64_t *)&qword_2698CB138, MEMORY[0x263F07508]);
  return sub_24E2F0E00();
}

uint64_t sub_24E2DB948()
{
  return sub_24E2F14D0();
}

uint64_t sub_24E2DB9CC()
{
  return sub_24E2DBA14(&qword_2698CB580, (void (*)(uint64_t))type metadata accessor for Device.BAIdentifier);
}

uint64_t sub_24E2DBA14(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for Device.BAIdentifier(uint64_t a1)
{
  return sub_24E2DBA7C(a1, (uint64_t *)&unk_2698CB598);
}

uint64_t sub_24E2DBA7C(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for Item(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v26 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    unint64_t v7 = (int *)type metadata accessor for Beacon();
    uint64_t v8 = v7[5];
    uint64_t v9 = (char *)v4 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_24E2F0990();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    char v28 = v7;
    uint64_t v13 = v7[6];
    uint64_t v14 = (void *)((char *)v4 + v13);
    unint64_t v15 = (void *)((char *)a2 + v13);
    uint64_t v16 = v15[1];
    *uint64_t v14 = *v15;
    v14[1] = v16;
    uint64_t v17 = v7[7];
    uint64_t v18 = (char *)v4 + v17;
    uint64_t v19 = (char *)a2 + v17;
    uint64_t v20 = *(void *)v19;
    uint64_t v21 = *((void *)v19 + 1);
    uint64_t v22 = *((void *)v19 + 2);
    uint64_t v23 = *((void *)v19 + 3);
    uint64_t v25 = *((void *)v19 + 4);
    uint64_t v24 = *((void *)v19 + 5);
    LOBYTE(v6) = v19[48];
    swift_bridgeObjectRetain();
    sub_24E2A3364(v20, v21, v22, v23, v25, v24, v6);
    *(void *)uint64_t v18 = v20;
    *((void *)v18 + 1) = v21;
    *((void *)v18 + 2) = v22;
    *((void *)v18 + 3) = v23;
    *((void *)v18 + 4) = v25;
    *((void *)v18 + 5) = v24;
    v18[48] = v6;
    *((unsigned char *)v4 + v28[8]) = *((unsigned char *)a2 + v28[8]);
    *((unsigned char *)v4 + v28[9]) = *((unsigned char *)a2 + v28[9]);
    *((unsigned char *)v4 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  }
  return v4;
}

uint64_t destroy for Item(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = type metadata accessor for Beacon();
  uint64_t v3 = a1 + *(int *)(v2 + 20);
  uint64_t v4 = sub_24E2F0990();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(v2 + 28);
  uint64_t v6 = *(void *)v5;
  uint64_t v7 = *(void *)(v5 + 8);
  uint64_t v8 = *(void *)(v5 + 16);
  uint64_t v9 = *(void *)(v5 + 24);
  uint64_t v10 = *(void *)(v5 + 32);
  uint64_t v11 = *(void *)(v5 + 40);
  char v12 = *(unsigned char *)(v5 + 48);
  return sub_24E2A3478(v6, v7, v8, v9, v10, v11, v12);
}

void *initializeWithCopy for Item(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = (int *)type metadata accessor for Beacon();
  uint64_t v7 = v6[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_24E2F0990();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v26 = v6;
  uint64_t v12 = v6[6];
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  uint64_t v16 = v6[7];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = *(void *)v18;
  uint64_t v20 = *((void *)v18 + 1);
  uint64_t v21 = *((void *)v18 + 2);
  uint64_t v22 = *((void *)v18 + 3);
  uint64_t v24 = *((void *)v18 + 4);
  uint64_t v23 = *((void *)v18 + 5);
  LOBYTE(v5) = v18[48];
  swift_bridgeObjectRetain();
  sub_24E2A3364(v19, v20, v21, v22, v24, v23, v5);
  *(void *)uint64_t v17 = v19;
  *((void *)v17 + 1) = v20;
  *((void *)v17 + 2) = v21;
  *((void *)v17 + 3) = v22;
  *((void *)v17 + 4) = v24;
  *((void *)v17 + 5) = v23;
  v17[48] = v5;
  *((unsigned char *)a1 + v26[8]) = *((unsigned char *)a2 + v26[8]);
  *((unsigned char *)a1 + v26[9]) = *((unsigned char *)a2 + v26[9]);
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *assignWithCopy for Item(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = type metadata accessor for Beacon();
  uint64_t v6 = *(int *)(v5 + 20);
  uint64_t v7 = v5;
  uint64_t v31 = v5;
  uint64_t v8 = (char *)a1 + v6;
  uint64_t v9 = (char *)a2 + v6;
  uint64_t v10 = sub_24E2F0990();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(v7 + 24);
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = *(int *)(v7 + 28);
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = *(void *)v16;
  uint64_t v18 = *((void *)v16 + 1);
  uint64_t v19 = *((void *)v16 + 2);
  uint64_t v20 = *((void *)v16 + 3);
  uint64_t v21 = *((void *)v16 + 4);
  uint64_t v22 = *((void *)v16 + 5);
  LOBYTE(v7) = v16[48];
  sub_24E2A3364(*(void *)v16, v18, v19, v20, v21, v22, v7);
  uint64_t v23 = *(void *)v15;
  uint64_t v24 = *((void *)v15 + 1);
  uint64_t v25 = *((void *)v15 + 2);
  uint64_t v26 = *((void *)v15 + 3);
  uint64_t v27 = *((void *)v15 + 4);
  uint64_t v28 = *((void *)v15 + 5);
  *(void *)uint64_t v15 = v17;
  *((void *)v15 + 1) = v18;
  *((void *)v15 + 2) = v19;
  *((void *)v15 + 3) = v20;
  *((void *)v15 + 4) = v21;
  *((void *)v15 + 5) = v22;
  char v29 = v15[48];
  v15[48] = v7;
  sub_24E2A3478(v23, v24, v25, v26, v27, v28, v29);
  *((unsigned char *)a1 + *(int *)(v31 + 32)) = *((unsigned char *)a2 + *(int *)(v31 + 32));
  *((unsigned char *)a1 + *(int *)(v31 + 36)) = *((unsigned char *)a2 + *(int *)(v31 + 36));
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

_OWORD *initializeWithTake for Item(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = (int *)type metadata accessor for Beacon();
  uint64_t v7 = v6[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_24E2F0990();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  *(_OWORD *)((char *)a1 + v6[6]) = *(_OWORD *)((char *)a2 + v6[6]);
  uint64_t v11 = v6[7];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  long long v14 = *((_OWORD *)v13 + 1);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *((_OWORD *)v12 + 1) = v14;
  *((_OWORD *)v12 + 2) = *((_OWORD *)v13 + 2);
  v12[48] = v13[48];
  *((unsigned char *)a1 + v6[8]) = *((unsigned char *)a2 + v6[8]);
  *((unsigned char *)a1 + v6[9]) = *((unsigned char *)a2 + v6[9]);
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *assignWithTake for Item(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = (int *)type metadata accessor for Beacon();
  uint64_t v8 = v7[5];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_24E2F0990();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = v7[6];
  uint64_t v13 = (void *)((char *)a1 + v12);
  long long v14 = (void *)((char *)a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = v7[7];
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  char v20 = v19[48];
  uint64_t v21 = *(void *)v18;
  uint64_t v22 = *((void *)v18 + 1);
  uint64_t v23 = *((void *)v18 + 2);
  uint64_t v24 = *((void *)v18 + 3);
  uint64_t v25 = *((void *)v18 + 4);
  uint64_t v26 = *((void *)v18 + 5);
  long long v27 = *((_OWORD *)v19 + 1);
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  *((_OWORD *)v18 + 1) = v27;
  *((_OWORD *)v18 + 2) = *((_OWORD *)v19 + 2);
  char v28 = v18[48];
  v18[48] = v20;
  sub_24E2A3478(v21, v22, v23, v24, v25, v26, v28);
  *((unsigned char *)a1 + v7[8]) = *((unsigned char *)a2 + v7[8]);
  *((unsigned char *)a1 + v7[9]) = *((unsigned char *)a2 + v7[9]);
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for Device(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24E2DC1F4);
}

uint64_t sub_24E2DC1F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Beacon();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 2) {
      return ((v10 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for Device(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24E2DC2D8);
}

uint64_t sub_24E2DC2D8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Beacon();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  }
  return result;
}

uint64_t sub_24E2DC394()
{
  uint64_t result = type metadata accessor for Beacon();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for Device.BAIdentifier(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24E2DC43C);
}

uint64_t sub_24E2DC43C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24E2F0990();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for Device.BAIdentifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24E2DC4BC);
}

uint64_t sub_24E2DC4BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24E2F0990();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_24E2DC52C(uint64_t a1)
{
  uint64_t v2 = a1 + 56;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 56);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  uint64_t v9 = MEMORY[0x263F8EE78];
  if (!v5) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  for (unint64_t i = v10 | (v8 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v8 << 6))
  {
    char v15 = *(unsigned char *)(*(void *)(a1 + 48) + i);
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_24E2E45A4(0, *(void *)(v9 + 16) + 1, 1, (char *)v9);
      uint64_t v9 = result;
    }
    unint64_t v17 = *(void *)(v9 + 16);
    unint64_t v16 = *(void *)(v9 + 24);
    if (v17 >= v16 >> 1)
    {
      uint64_t result = (uint64_t)sub_24E2E45A4((char *)(v16 > 1), v17 + 1, 1, (char *)v9);
      uint64_t v9 = result;
    }
    *(void *)(v9 + 16) = v17 + 1;
    *(unsigned char *)(v9 + v17 + 32) = v15;
    if (v5) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v12 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v12 >= v6) {
      goto LABEL_27;
    }
    unint64_t v13 = *(void *)(v2 + 8 * v12);
    ++v8;
    if (!v13)
    {
      int64_t v8 = v12 + 1;
      if (v12 + 1 >= v6) {
        goto LABEL_27;
      }
      unint64_t v13 = *(void *)(v2 + 8 * v8);
      if (!v13)
      {
        int64_t v8 = v12 + 2;
        if (v12 + 2 >= v6) {
          goto LABEL_27;
        }
        unint64_t v13 = *(void *)(v2 + 8 * v8);
        if (!v13)
        {
          int64_t v8 = v12 + 3;
          if (v12 + 3 >= v6) {
            goto LABEL_27;
          }
          unint64_t v13 = *(void *)(v2 + 8 * v8);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_20:
    unint64_t v5 = (v13 - 1) & v13;
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v6)
  {
LABEL_27:
    swift_release();
    return v9;
  }
  unint64_t v13 = *(void *)(v2 + 8 * v14);
  if (v13)
  {
    int64_t v8 = v14;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v8 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v8 >= v6) {
      goto LABEL_27;
    }
    unint64_t v13 = *(void *)(v2 + 8 * v8);
    ++v14;
    if (v13) {
      goto LABEL_20;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

Swift::Bool __swiftcall Device.contains(search:)(Swift::String search)
{
  uint64_t v1 = HIBYTE(search._object) & 0xF;
  if (((uint64_t)search._object & 0x2000000000000000) == 0) {
    uint64_t v1 = search._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  }
  if (v1)
  {
    type metadata accessor for Beacon();
    sub_24E2AF0F8();
    char v2 = sub_24E2F1250();
  }
  else
  {
    char v2 = 1;
  }
  return v2 & 1;
}

uint64_t Device.Section.sortOrder.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  switch(v1)
  {
    case 0:
      return 48;
    case 1:
      return 49;
    case 2:
      return 51;
  }
  sub_24E2F0F50();
  return 50;
}

void Device.Section.category.getter(unsigned char *a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + 8);
  BOOL v3 = v2 >= 3;
  unsigned int v4 = 0x30100u >> (8 * v2);
  if (v3) {
    LOBYTE(v4) = 2;
  }
  *a1 = v4;
}

uint64_t Device.Section.Category.hash(into:)()
{
  return sub_24E2F14B0();
}

BOOL static Device.Section.Category.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t Device.Section.Category.hashValue.getter()
{
  return sub_24E2F14D0();
}

uint64_t _s10FindMyCore4ItemV7SectionO8CategoryO9hashValueSivg_0()
{
  return sub_24E2F14D0();
}

uint64_t _s10FindMyCore4ItemV7SectionO8CategoryO4hash4intoys6HasherVz_tF_0()
{
  return sub_24E2F14B0();
}

uint64_t sub_24E2DC97C()
{
  return sub_24E2F14D0();
}

uint64_t sub_24E2DC9CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = _s10FindMyCore6DeviceV7SectionO8CategoryO8allCasesSayAGGvgZ_0();
  *a1 = result;
  return result;
}

uint64_t Device.Section.hash(into:)()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  sub_24E2F14B0();
  if (v2 <= 2) {
    return sub_24E2F14B0();
  }
  sub_24E2F14B0();
  swift_bridgeObjectRetain();
  sub_24E2F0F20();
  return sub_24E2AF224(v1, v2);
}

uint64_t Device.Section.hashValue.getter()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  sub_24E2F14A0();
  sub_24E2F14B0();
  sub_24E2F14B0();
  if (v2 > 2)
  {
    swift_bridgeObjectRetain();
    sub_24E2F0F20();
    sub_24E2AF224(v1, v2);
  }
  return sub_24E2F14D0();
}

uint64_t sub_24E2DCB58()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  sub_24E2F14B0();
  if (v2 <= 2) {
    return sub_24E2F14B0();
  }
  sub_24E2F14B0();
  swift_bridgeObjectRetain();
  sub_24E2F0F20();
  return sub_24E2AF224(v1, v2);
}

uint64_t sub_24E2DCC04()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  sub_24E2F14A0();
  sub_24E2F14B0();
  sub_24E2F14B0();
  if (v2 > 2)
  {
    swift_bridgeObjectRetain();
    sub_24E2F0F20();
    sub_24E2AF224(v1, v2);
  }
  return sub_24E2F14D0();
}

uint64_t Device.listSection(enabledSections:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_24E2DC52C(a1);
  uint64_t v5 = sub_24E2AD3F8(v4);
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(v2 + *(int *)(type metadata accessor for Beacon() + 32)) == 1)
  {
    char v6 = sub_24E2D9470(1, v5);
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v8 = 0;
    if (v6) {
      unint64_t v9 = 1;
    }
    else {
      unint64_t v9 = 2;
    }
  }
  else
  {
    char v10 = sub_24E2D9470(2, v5);
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v8 = 0x4E574F4E4B4E55;
    if ((v10 & 1) == 0) {
      uint64_t v8 = 0;
    }
    unint64_t v9 = 0xE700000000000000;
    if ((v10 & 1) == 0) {
      unint64_t v9 = 2;
    }
  }
  *a2 = v8;
  a2[1] = v9;
  return result;
}

uint64_t static Set<>.forSelection.getter()
{
  return sub_24E2AE750((uint64_t)&unk_27003AD78);
}

{
  return sub_24E2AD368((uint64_t)&unk_27003AA58);
}

{
  return sub_24E2AE5C4((uint64_t)&unk_27003ACB0);
}

void static Device.Tag.default.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t Device.Tag.title.getter()
{
  if (!*v0)
  {
    if (qword_2698CA500 != -1) {
      swift_once();
    }
    uint64_t v1 = (void *)qword_2698D1E70;
    if (qword_2698D1E70) {
      goto LABEL_14;
    }
    goto LABEL_15;
  }
  if (*v0 != 1)
  {
    if (qword_2698CA500 != -1) {
      swift_once();
    }
    uint64_t v1 = (void *)qword_2698D1E70;
    if (qword_2698D1E70) {
      goto LABEL_14;
    }
LABEL_15:
    uint64_t v4 = self;
    swift_bridgeObjectRetain();
    id v3 = objc_msgSend(v4, sel_mainBundle);
    id v2 = 0;
    goto LABEL_16;
  }
  if (qword_2698CA500 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)qword_2698D1E70;
  if (!qword_2698D1E70) {
    goto LABEL_15;
  }
LABEL_14:
  swift_bridgeObjectRetain();
  id v2 = v1;
  id v3 = v2;
LABEL_16:
  id v5 = v2;
  char v6 = (void *)sub_24E2F0E90();
  uint64_t v7 = (void *)sub_24E2F0E90();
  id v8 = objc_msgSend(v3, sel_localizedStringForKey_value_table_, v6, 0, v7);

  uint64_t v9 = sub_24E2F0EC0();
  swift_bridgeObjectRelease();

  return v9;
}

void *static Device.Tag.allCases.getter()
{
  return &unk_27003ADA0;
}

uint64_t Device.Tag.hash(into:)()
{
  if (!*v0) {
    sub_24E2F14B0();
  }
  return sub_24E2F14B0();
}

uint64_t static Device.Tag.== infix(_:_:)(unsigned char *a1, unsigned char *a2)
{
  unsigned int v2 = *a2;
  if (*a1)
  {
    if (*a1 == 1)
    {
      if (v2 == 1) {
        return 1;
      }
    }
    else if (v2 > 1)
    {
      return 1;
    }
  }
  else if (!*a2)
  {
    return 1;
  }
  return 0;
}

uint64_t Device.Tag.hashValue.getter()
{
  int v1 = *v0;
  sub_24E2F14A0();
  if (!v1) {
    sub_24E2F14B0();
  }
  sub_24E2F14B0();
  return sub_24E2F14D0();
}

uint64_t sub_24E2DD168()
{
  int v1 = *v0;
  sub_24E2F14A0();
  if (!v1) {
    sub_24E2F14B0();
  }
  sub_24E2F14B0();
  return sub_24E2F14D0();
}

uint64_t sub_24E2DD1D0()
{
  if (!*v0) {
    sub_24E2F14B0();
  }
  return sub_24E2F14B0();
}

uint64_t sub_24E2DD21C()
{
  int v1 = *v0;
  sub_24E2F14A0();
  if (!v1) {
    sub_24E2F14B0();
  }
  sub_24E2F14B0();
  return sub_24E2F14D0();
}

void sub_24E2DD280(void *a1@<X8>)
{
  *a1 = &unk_27003AB20;
}

BOOL sub_24E2DD290(unsigned char *a1, unsigned char *a2)
{
  unsigned int v2 = *a2;
  if (*a1)
  {
    if (*a1 == 1) {
      return v2 == 1;
    }
    if (v2 < 2) {
      return 0;
    }
  }
  else if (*a2)
  {
    return 0;
  }
  return 1;
}

BOOL Device.contains(tag:)(unsigned __int8 *a1)
{
  return *a1 < 2u;
}

BOOL sub_24E2DD2DC(unsigned __int8 *a1)
{
  return *a1 < 2u;
}

uint64_t Device.Sort.sortDescriptor<A>(rootKeyPath:)(uint64_t a1, uint64_t a2)
{
  if (*v2 == 7)
  {
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v5 = sub_24E2E7214(KeyPath);
    swift_release();
    uint64_t v6 = MEMORY[0x263F8D6C8];
    uint64_t v7 = MEMORY[0x263F8D6E0];
    return sub_24E2D9D5C(v5, 0, a2, v6, v7);
  }
  else
  {
    uint64_t v9 = swift_getKeyPath();
    sub_24E2E7214(v9);
    swift_release();
    Beacon.Sort.sortDescriptor<A>(rootKeyPath:)();
    return swift_release();
  }
}

uint64_t sub_24E2DD3F4()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Device(0) + 20));
}

uint64_t Device.Sort.hash(into:)()
{
  if (*v0 != 7) {
    sub_24E2F14B0();
  }
  return sub_24E2F14B0();
}

BOOL static Device.Sort.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  if (v2 == 7) {
    return v3 == 7;
  }
  if (v3 == 7) {
    return 0;
  }
  return v2 == v3;
}

uint64_t Device.Sort.hashValue.getter()
{
  uint64_t v1 = *v0;
  sub_24E2F14A0();
  if (v1 != 7) {
    sub_24E2F14B0();
  }
  sub_24E2F14B0();
  return sub_24E2F14D0();
}

uint64_t sub_24E2DD504()
{
  uint64_t v1 = *v0;
  sub_24E2F14A0();
  if (v1 != 7) {
    sub_24E2F14B0();
  }
  sub_24E2F14B0();
  return sub_24E2F14D0();
}

uint64_t sub_24E2DD564()
{
  if (*v0 != 7) {
    sub_24E2F14B0();
  }
  return sub_24E2F14B0();
}

uint64_t sub_24E2DD5AC()
{
  uint64_t v1 = *v0;
  sub_24E2F14A0();
  if (v1 != 7) {
    sub_24E2F14B0();
  }
  sub_24E2F14B0();
  return sub_24E2F14D0();
}

void *sub_24E2DD60C@<X0>(void *a1@<X8>)
{
  uint64_t result = _s10FindMyCore6DeviceV4SortO8allCasesSayAEGvgZ_0();
  *a1 = result;
  return result;
}

BOOL sub_24E2DD634(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  if (v2 == 7) {
    return v3 == 7;
  }
  if (v3 == 7) {
    return 0;
  }
  return v2 == v3;
}

BOOL _s10FindMyCore6DeviceV7SectionO2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  if (!v3)
  {
    if (!v5)
    {
      sub_24E2AF224(*a1, 0);
      uint64_t v6 = v4;
      unint64_t v7 = 0;
      goto LABEL_16;
    }
    goto LABEL_11;
  }
  if (v3 != 1)
  {
    if (v3 == 2)
    {
      if (v5 == 2)
      {
        sub_24E2AF224(*a1, 2uLL);
        uint64_t v6 = v4;
        unint64_t v7 = 2;
LABEL_16:
        sub_24E2AF224(v6, v7);
        return 1;
      }
    }
    else if (v5 >= 3)
    {
      if (v2 == v4 && v3 == v5)
      {
        sub_24E2AF210(*a1, v3);
        sub_24E2AF210(v2, v3);
        sub_24E2AF224(v2, v3);
        uint64_t v6 = v2;
        unint64_t v7 = v3;
        goto LABEL_16;
      }
      char v10 = sub_24E2F1430();
      sub_24E2AF210(v2, v3);
      sub_24E2AF210(v4, v5);
      sub_24E2AF224(v2, v3);
      sub_24E2AF224(v4, v5);
      return (v10 & 1) != 0;
    }
LABEL_11:
    sub_24E2AF210(*a1, v3);
    sub_24E2AF210(v4, v5);
    sub_24E2AF224(v2, v3);
    sub_24E2AF224(v4, v5);
    return 0;
  }
  if (v5 != 1) {
    goto LABEL_11;
  }
  uint64_t v8 = 1;
  sub_24E2AF224(*a1, 1uLL);
  sub_24E2AF224(v4, 1uLL);
  return v8;
}

void *_s10FindMyCore6DeviceV4SortO8allCasesSayAEGvgZ_0()
{
  uint64_t v0 = qword_27003AA18;
  uint64_t v1 = MEMORY[0x263F8EE78];
  if (qword_27003AA18)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    sub_24E29582C(0, qword_27003AA18, 0);
    uint64_t v1 = v8;
    unint64_t v2 = *(void *)(v8 + 16);
    unint64_t v3 = &byte_27003AA28;
    do
    {
      char v5 = *v3++;
      char v4 = v5;
      uint64_t v9 = v1;
      unint64_t v6 = *(void *)(v1 + 24);
      if (v2 >= v6 >> 1)
      {
        sub_24E29582C(v6 > 1, v2 + 1, 1);
        uint64_t v1 = v9;
      }
      *(void *)(v1 + 16) = v2 + 1;
      *(unsigned char *)(v1 + v2++ + 32) = v4;
      --v0;
    }
    while (v0);
  }
  sub_24E2E36E4(v1);
  return &unk_27003AB48;
}

uint64_t _s10FindMyCore6DeviceV7SectionO8CategoryO8allCasesSayAGGvgZ_0()
{
  uint64_t v13 = MEMORY[0x263F8EE78];
  sub_24E29584C(0, 4, 0);
  uint64_t v0 = v13;
  char v1 = byte_27003AB90;
  unint64_t v3 = *(void *)(v13 + 16);
  unint64_t v2 = *(void *)(v13 + 24);
  int64_t v4 = v2 >> 1;
  unint64_t v5 = v3 + 1;
  if (v2 >> 1 <= v3)
  {
    sub_24E29584C(v2 > 1, v3 + 1, 1);
    uint64_t v0 = v13;
    unint64_t v2 = *(void *)(v13 + 24);
    int64_t v4 = v2 >> 1;
  }
  *(void *)(v0 + 16) = v5;
  *(unsigned char *)(v0 + v3 + 32) = v1;
  char v6 = byte_27003AB91;
  unint64_t v7 = v3 + 2;
  if (v4 < (uint64_t)(v3 + 2))
  {
    sub_24E29584C(v2 > 1, v3 + 2, 1);
    uint64_t v0 = v13;
    unint64_t v2 = *(void *)(v13 + 24);
    int64_t v4 = v2 >> 1;
  }
  *(void *)(v0 + 16) = v7;
  *(unsigned char *)(v0 + v5 + 32) = v6;
  char v8 = byte_27003AB92;
  unint64_t v9 = v3 + 3;
  if (v4 < (uint64_t)(v3 + 3)) {
    sub_24E29584C(v2 > 1, v3 + 3, 1);
  }
  uint64_t result = v13;
  *(void *)(v13 + 16) = v9;
  *(unsigned char *)(v13 + v7 + 32) = v8;
  char v11 = byte_27003AB93;
  unint64_t v12 = *(void *)(v13 + 24);
  if ((uint64_t)(v3 + 4) > (uint64_t)(v12 >> 1))
  {
    sub_24E29584C(v12 > 1, v3 + 4, 1);
    uint64_t result = v13;
  }
  *(void *)(result + 16) = v3 + 4;
  *(unsigned char *)(result + v9 + 32) = v11;
  return result;
}

uint64_t sub_24E2DDA48@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = type metadata accessor for Device(0);
  *a2 = *(unsigned char *)(a1 + *(int *)(result + 20));
  return result;
}

unint64_t sub_24E2DDA88()
{
  unint64_t result = qword_2698CB5A8;
  if (!qword_2698CB5A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB5A8);
  }
  return result;
}

uint64_t sub_24E2DDADC()
{
  return sub_24E2DA59C(&qword_2698CB5B0, &qword_2698CB5B8);
}

unint64_t sub_24E2DDB08()
{
  unint64_t result = qword_2698CB5C0;
  if (!qword_2698CB5C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB5C0);
  }
  return result;
}

unint64_t sub_24E2DDB60(uint64_t a1)
{
  unint64_t result = sub_24E2DDB88();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_24E2DDB88()
{
  unint64_t result = qword_2698CB5C8;
  if (!qword_2698CB5C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB5C8);
  }
  return result;
}

unint64_t sub_24E2DDBE0()
{
  unint64_t result = qword_2698CB5D0;
  if (!qword_2698CB5D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB5D0);
  }
  return result;
}

unint64_t sub_24E2DDC38()
{
  unint64_t result = qword_2698CB5D8;
  if (!qword_2698CB5D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB5D8);
  }
  return result;
}

uint64_t sub_24E2DDC8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24E2DDE64(a1, a2, a3, (uint64_t (*)(void))sub_24E2DDCB8, (uint64_t (*)(void))sub_24E2DDD0C);
}

unint64_t sub_24E2DDCB8()
{
  unint64_t result = qword_2698CB5E0;
  if (!qword_2698CB5E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB5E0);
  }
  return result;
}

unint64_t sub_24E2DDD0C()
{
  unint64_t result = qword_2698CB5E8;
  if (!qword_2698CB5E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB5E8);
  }
  return result;
}

unint64_t sub_24E2DDD64()
{
  unint64_t result = qword_2698CB5F0;
  if (!qword_2698CB5F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB5F0);
  }
  return result;
}

uint64_t sub_24E2DDDB8()
{
  return sub_24E2DA59C(&qword_2698CB5F8, &qword_2698CB600);
}

unint64_t sub_24E2DDDE4()
{
  unint64_t result = qword_2698CB608;
  if (!qword_2698CB608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB608);
  }
  return result;
}

uint64_t sub_24E2DDE38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24E2DDE64(a1, a2, a3, (uint64_t (*)(void))sub_24E2DDEA0, (uint64_t (*)(void))sub_24E2DDEF4);
}

uint64_t sub_24E2DDE64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  *(void *)(a1 + 8) = a4();
  uint64_t result = a5();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_24E2DDEA0()
{
  unint64_t result = qword_2698CB610;
  if (!qword_2698CB610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB610);
  }
  return result;
}

unint64_t sub_24E2DDEF4()
{
  unint64_t result = qword_2698CB618;
  if (!qword_2698CB618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB618);
  }
  return result;
}

unint64_t sub_24E2DDF4C()
{
  unint64_t result = qword_2698CB620;
  if (!qword_2698CB620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB620);
  }
  return result;
}

uint64_t sub_24E2DDFA0()
{
  return sub_24E2DA59C(&qword_2698CB628, &qword_2698CB630);
}

unint64_t sub_24E2DDFCC()
{
  unint64_t result = qword_2698CB638;
  if (!qword_2698CB638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB638);
  }
  return result;
}

unint64_t _s7SectionOwxx_0(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *_s7SectionOwCP_0_0(void *a1, void *a2)
{
  unint64_t v3 = a2[1];
  if (v3 >= 3)
  {
    *a1 = *a2;
    a1[1] = v3;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  return a1;
}

void *_s7SectionOwca_0(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] >= 3uLL)
  {
    if (v4 >= 3)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_24E2DE118((uint64_t)a1);
    goto LABEL_6;
  }
  if (v4 < 3)
  {
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_24E2DE118(uint64_t a1)
{
  return a1;
}

void *_s7SectionOwta_0(void *a1, void *a2)
{
  if (a1[1] >= 3uLL)
  {
    unint64_t v4 = a2[1];
    if (v4 >= 3)
    {
      *a1 = *a2;
      a1[1] = v4;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_24E2DE118((uint64_t)a1);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  return a1;
}

uint64_t _s7SectionOwet_0(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFD && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 3;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s7SectionOwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFC)
  {
    *(void *)unint64_t result = a2 - 2147483645;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Device.Section()
{
  return &type metadata for Device.Section;
}

unsigned char *_s7SectionO8CategoryOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E2DE360);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Device.Section.Category()
{
  return &type metadata for Device.Section.Category;
}

uint64_t _s3TagOwet(unsigned __int8 *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  unsigned int v2 = a2 + 255;
  if ((a2 + 255) >= 0xFFFF00) {
    unsigned int v3 = 4;
  }
  else {
    unsigned int v3 = 2;
  }
  if (v2 >> 8 < 0xFF) {
    unsigned int v3 = 1;
  }
  if (v2 >= 0x100) {
    uint64_t v4 = v3;
  }
  else {
    uint64_t v4 = 0;
  }
  switch(v4)
  {
    case 1:
      uint64_t v4 = a1[1];
      if (!a1[1]) {
        return v4;
      }
      goto LABEL_17;
    case 2:
      uint64_t v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        return v4;
      }
      goto LABEL_17;
    case 3:
      __break(1u);
      JUMPOUT(0x24E2DE430);
    case 4:
      uint64_t v4 = *(unsigned int *)(a1 + 1);
      if (v4) {
LABEL_17:
      }
        uint64_t v4 = (*a1 | (v4 << 8)) - 255;
      break;
    default:
      return v4;
  }
  return v4;
}

unsigned char *_s3TagOwst_0(unsigned char *result, int a2, int a3)
{
  unsigned int v3 = a3 + 255;
  if ((a3 + 255) >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2)
  {
    unsigned int v7 = ((a2 - 1) >> 8) + 1;
    *unint64_t result = a2 - 1;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        return result;
      case 2:
        *(_WORD *)(result + 1) = v7;
        return result;
      case 3:
        goto LABEL_21;
      case 4:
        *(_DWORD *)(result + 1) = v7;
        return result;
      default:
        return result;
    }
  }
  switch(v6)
  {
    case 1:
      result[1] = 0;
      break;
    case 2:
      *(_WORD *)(result + 1) = 0;
      break;
    case 3:
LABEL_21:
      __break(1u);
      JUMPOUT(0x24E2DE500);
    case 4:
      *(_DWORD *)(result + 1) = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for Device.Tag()
{
  return &type metadata for Device.Tag;
}

uint64_t _s4SortOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF9)
  {
    unsigned int v2 = a2 + 7;
    if (a2 + 7 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 7;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 7;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x24E2DE5E4);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 7;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  BOOL v8 = v7 >= 7;
  unsigned int v9 = v7 - 7;
  if (!v8) {
    unsigned int v9 = -1;
  }
  if (v9 + 1 >= 2) {
    return v9;
  }
  else {
    return 0;
  }
}

unsigned char *_s4SortOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 7;
  if (a3 + 7 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xF9) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v7 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x24E2DE6CCLL);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

uint64_t sub_24E2DE6F4(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 >= 7) {
    return v1 - 6;
  }
  else {
    return 0;
  }
}

unsigned char *sub_24E2DE708(unsigned char *result, int a2)
{
  if (a2) {
    *unint64_t result = a2 + 6;
  }
  return result;
}

ValueMetadata *type metadata accessor for Device.Sort()
{
  return &type metadata for Device.Sort;
}

uint64_t Item.init(beacon:battery:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v4 = *a2;
  sub_24E2DB4E0(a1, a3);
  uint64_t result = type metadata accessor for Item();
  *(unsigned char *)(a3 + *(int *)(result + 20)) = v4;
  return result;
}

uint64_t type metadata accessor for Item()
{
  uint64_t result = qword_2698CB640;
  if (!qword_2698CB640) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t Item.beacon.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24E2DB384(v1, a1);
}

uint64_t Item.battery.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for Item();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t getEnumTagSinglePayload for Item(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24E2DE804);
}

uint64_t sub_24E2DE804(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Beacon();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    BOOL v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 2) {
      return ((v10 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for Item(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24E2DE8E8);
}

uint64_t sub_24E2DE8E8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Beacon();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  }
  return result;
}

uint64_t sub_24E2DE9A4()
{
  uint64_t result = type metadata accessor for Beacon();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t Item.Battery.init(isLow:)@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t Item.Battery.isLow.getter()
{
  return *v0;
}

unsigned char *_s7BatteryVwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E2DEB14);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Item.Battery()
{
  return &type metadata for Item.Battery;
}

uint64_t sub_24E2DEB58()
{
  uint64_t v1 = *(void *)(v0 + 8);
  if (!v1)
  {
    if (qword_2698CA500 != -1) {
      swift_once();
    }
    unsigned int v2 = (void *)qword_2698D1E70;
    if (qword_2698D1E70) {
      goto LABEL_19;
    }
    goto LABEL_20;
  }
  if (v1 == 1)
  {
    if (qword_2698CA500 != -1) {
      swift_once();
    }
    unsigned int v2 = (void *)qword_2698D1E70;
    if (qword_2698D1E70) {
      goto LABEL_19;
    }
    goto LABEL_20;
  }
  if (v1 != 2)
  {
    if (qword_2698CA500 != -1) {
      swift_once();
    }
    unsigned int v2 = (void *)qword_2698D1E70;
    if (qword_2698D1E70) {
      goto LABEL_19;
    }
LABEL_20:
    uint64_t v5 = self;
    swift_bridgeObjectRetain();
    id v4 = objc_msgSend(v5, sel_mainBundle);
    id v3 = 0;
    goto LABEL_21;
  }
  if (qword_2698CA500 != -1) {
    swift_once();
  }
  unsigned int v2 = (void *)qword_2698D1E70;
  if (!qword_2698D1E70) {
    goto LABEL_20;
  }
LABEL_19:
  swift_bridgeObjectRetain();
  id v3 = v2;
  id v4 = v3;
LABEL_21:
  id v6 = v3;
  uint64_t v7 = (void *)sub_24E2F0E90();
  BOOL v8 = (void *)sub_24E2F0E90();
  id v9 = objc_msgSend(v4, sel_localizedStringForKey_value_table_, v7, 0, v8);

  uint64_t v10 = sub_24E2F0EC0();
  swift_bridgeObjectRelease();

  return v10;
}

Swift::Bool __swiftcall Item.contains(search:)(Swift::String search)
{
  uint64_t v1 = HIBYTE(search._object) & 0xF;
  if (((uint64_t)search._object & 0x2000000000000000) == 0) {
    uint64_t v1 = search._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  }
  if (v1)
  {
    type metadata accessor for Beacon();
    sub_24E2AF0F8();
    char v2 = sub_24E2F1250();
  }
  else
  {
    char v2 = 1;
  }
  return v2 & 1;
}

uint64_t sub_24E2DEF58(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2) {
    return 1;
  }
  type metadata accessor for Beacon();
  sub_24E2AF0F8();
  return sub_24E2F1250() & 1;
}

uint64_t Item.Section.sortOrder.getter()
{
  unint64_t v1 = *(void *)(v0 + 8);
  if (v1 > 2) {
    return 50;
  }
  else {
    return *(void *)&a0[8 * v1];
  }
}

void Item.Section.category.getter(unsigned char *a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + 8);
  BOOL v3 = v2 >= 3;
  unsigned int v4 = 0x30100u >> (8 * v2);
  if (v3) {
    LOBYTE(v4) = 2;
  }
  *a1 = v4;
}

uint64_t sub_24E2DF060@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = _s10FindMyCore4ItemV7SectionO8CategoryO8allCasesSayAGGvgZ_0();
  *a1 = result;
  return result;
}

uint64_t Item.Section.hash(into:)()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  sub_24E2F14B0();
  if (v2 <= 2) {
    return sub_24E2F14B0();
  }
  sub_24E2F14B0();
  swift_bridgeObjectRetain();
  sub_24E2F0F20();
  return sub_24E2AF224(v1, v2);
}

uint64_t Item.Section.hashValue.getter()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  sub_24E2F14A0();
  sub_24E2F14B0();
  sub_24E2F14B0();
  if (v2 > 2)
  {
    swift_bridgeObjectRetain();
    sub_24E2F0F20();
    sub_24E2AF224(v1, v2);
  }
  return sub_24E2F14D0();
}

uint64_t sub_24E2DF1E8()
{
  unint64_t v1 = *(void *)(v0 + 8);
  if (v1 > 2) {
    return 50;
  }
  else {
    return *(void *)&a0[8 * v1];
  }
}

uint64_t Item.listSection(enabledSections:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_24E2DC52C(a1);
  uint64_t v5 = sub_24E2AD3F8(v4);
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(v2 + *(int *)(type metadata accessor for Beacon() + 32)) == 1)
  {
    char v6 = sub_24E2D9470(1, v5);
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v8 = 0;
    if (v6) {
      unint64_t v9 = 1;
    }
    else {
      unint64_t v9 = 2;
    }
  }
  else
  {
    char v10 = sub_24E2D9470(2, v5);
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v8 = 0x4E574F4E4B4E55;
    if ((v10 & 1) == 0) {
      uint64_t v8 = 0;
    }
    unint64_t v9 = 0xE700000000000000;
    if ((v10 & 1) == 0) {
      unint64_t v9 = 2;
    }
  }
  *a2 = v8;
  a2[1] = v9;
  return result;
}

double sub_24E2DF2E8@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = sub_24E2DC52C(a1);
  uint64_t v4 = sub_24E2AD3F8(v3);
  swift_bridgeObjectRelease();
  Beacon.listSection(enabledSections:)(v4, v6);
  swift_bridgeObjectRelease();
  double result = v6[0];
  *a2 = *(_OWORD *)v6;
  return result;
}

void static Item.Tag.default.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t Item.Tag.title.getter()
{
  if (*v0 != 1)
  {
    if (qword_2698CA500 != -1) {
      swift_once();
    }
    unint64_t v1 = (void *)qword_2698D1E70;
    if (qword_2698D1E70) {
      goto LABEL_9;
    }
LABEL_10:
    uint64_t v4 = self;
    swift_bridgeObjectRetain();
    id v3 = objc_msgSend(v4, sel_mainBundle);
    id v2 = 0;
    goto LABEL_11;
  }
  if (qword_2698CA500 != -1) {
    swift_once();
  }
  unint64_t v1 = (void *)qword_2698D1E70;
  if (!qword_2698D1E70) {
    goto LABEL_10;
  }
LABEL_9:
  swift_bridgeObjectRetain();
  id v2 = v1;
  id v3 = v2;
LABEL_11:
  id v5 = v2;
  char v6 = (void *)sub_24E2F0E90();
  uint64_t v7 = (void *)sub_24E2F0E90();
  id v8 = objc_msgSend(v3, sel_localizedStringForKey_value_table_, v6, 0, v7);

  uint64_t v9 = sub_24E2F0EC0();
  swift_bridgeObjectRelease();

  return v9;
}

void *static Item.Tag.allCases.getter()
{
  return &unk_27003ADC8;
}

uint64_t Item.Tag.hash(into:)()
{
  if ((*v0 & 1) == 0) {
    sub_24E2F14B0();
  }
  return sub_24E2F14B0();
}

uint64_t static Item.Tag.== infix(_:_:)(unsigned char *a1, unsigned char *a2)
{
  if (*a1 == 1)
  {
    if (*a2) {
      return 1;
    }
  }
  else if (!*a2)
  {
    return 1;
  }
  return 0;
}

uint64_t Item.Tag.hashValue.getter()
{
  char v1 = *v0;
  sub_24E2F14A0();
  if ((v1 & 1) == 0) {
    sub_24E2F14B0();
  }
  sub_24E2F14B0();
  return sub_24E2F14D0();
}

uint64_t sub_24E2DF628()
{
  char v1 = *v0;
  sub_24E2F14A0();
  if ((v1 & 1) == 0) {
    sub_24E2F14B0();
  }
  sub_24E2F14B0();
  return sub_24E2F14D0();
}

uint64_t sub_24E2DF680()
{
  if ((*v0 & 1) == 0) {
    sub_24E2F14B0();
  }
  return sub_24E2F14B0();
}

uint64_t sub_24E2DF6BC()
{
  char v1 = *v0;
  sub_24E2F14A0();
  if ((v1 & 1) == 0) {
    sub_24E2F14B0();
  }
  sub_24E2F14B0();
  return sub_24E2F14D0();
}

void sub_24E2DF710(void *a1@<X8>)
{
  *a1 = &unk_27003AA80;
}

uint64_t sub_24E2DF720(unsigned char *a1, unsigned char *a2)
{
  if (*a1 == 1)
  {
    if ((*a2 & 1) == 0) {
      return 0;
    }
  }
  else if (*a2)
  {
    return 0;
  }
  return 1;
}

BOOL Item.contains(tag:)(unsigned char *a1)
{
  return (*a1 & 1) == 0;
}

BOOL sub_24E2DF758(unsigned char *a1)
{
  return (*a1 & 1) == 0;
}

uint64_t Item.Sort.sortDescriptor<A>(rootKeyPath:)()
{
  uint64_t KeyPath = swift_getKeyPath();
  sub_24E2E7214(KeyPath);
  swift_release();
  Beacon.Sort.sortDescriptor<A>(rootKeyPath:)();
  return swift_release();
}

BOOL static Item.Sort.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_24E2DF820@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = _s10FindMyCore4ItemV4SortO8allCasesSayAEGvgZ_0();
  *a1 = result;
  return result;
}

uint64_t _s10FindMyCore4ItemV4SortO8allCasesSayAEGvgZ_0()
{
  uint64_t v0 = qword_27003AA18;
  uint64_t result = MEMORY[0x263F8EE78];
  if (qword_27003AA18)
  {
    uint64_t v7 = MEMORY[0x263F8EE78];
    sub_24E2957DC(0, qword_27003AA18, 0);
    uint64_t result = v7;
    unint64_t v2 = *(void *)(v7 + 16);
    id v3 = &byte_27003AA28;
    do
    {
      char v5 = *v3++;
      char v4 = v5;
      uint64_t v8 = result;
      unint64_t v6 = *(void *)(result + 24);
      if (v2 >= v6 >> 1)
      {
        sub_24E2957DC(v6 > 1, v2 + 1, 1);
        uint64_t result = v8;
      }
      *(void *)(result + 16) = v2 + 1;
      *(unsigned char *)(result + v2++ + 32) = v4;
      --v0;
    }
    while (v0);
  }
  return result;
}

uint64_t _s10FindMyCore4ItemV7SectionO8CategoryO8allCasesSayAGGvgZ_0()
{
  uint64_t v13 = MEMORY[0x263F8EE78];
  sub_24E295804(0, 4, 0);
  uint64_t v0 = v13;
  char v1 = byte_27003AAC8;
  unint64_t v3 = *(void *)(v13 + 16);
  unint64_t v2 = *(void *)(v13 + 24);
  int64_t v4 = v2 >> 1;
  unint64_t v5 = v3 + 1;
  if (v2 >> 1 <= v3)
  {
    sub_24E295804(v2 > 1, v3 + 1, 1);
    uint64_t v0 = v13;
    unint64_t v2 = *(void *)(v13 + 24);
    int64_t v4 = v2 >> 1;
  }
  *(void *)(v0 + 16) = v5;
  *(unsigned char *)(v0 + v3 + 32) = v1;
  char v6 = byte_27003AAC9;
  unint64_t v7 = v3 + 2;
  if (v4 < (uint64_t)(v3 + 2))
  {
    sub_24E295804(v2 > 1, v3 + 2, 1);
    uint64_t v0 = v13;
    unint64_t v2 = *(void *)(v13 + 24);
    int64_t v4 = v2 >> 1;
  }
  *(void *)(v0 + 16) = v7;
  *(unsigned char *)(v0 + v5 + 32) = v6;
  char v8 = byte_27003AACA;
  unint64_t v9 = v3 + 3;
  if (v4 < (uint64_t)(v3 + 3)) {
    sub_24E295804(v2 > 1, v3 + 3, 1);
  }
  uint64_t result = v13;
  *(void *)(v13 + 16) = v9;
  *(unsigned char *)(v13 + v7 + 32) = v8;
  char v11 = byte_27003AACB;
  unint64_t v12 = *(void *)(v13 + 24);
  if ((uint64_t)(v3 + 4) > (uint64_t)(v12 >> 1))
  {
    sub_24E295804(v12 > 1, v3 + 4, 1);
    uint64_t result = v13;
  }
  *(void *)(result + 16) = v3 + 4;
  *(unsigned char *)(result + v9 + 32) = v11;
  return result;
}

unint64_t sub_24E2DFA84()
{
  unint64_t result = qword_2698CB650;
  if (!qword_2698CB650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB650);
  }
  return result;
}

uint64_t sub_24E2DFAD8()
{
  return sub_24E2DA59C(&qword_2698CB658, &qword_2698CB660);
}

unint64_t sub_24E2DFB04()
{
  unint64_t result = qword_2698CB668;
  if (!qword_2698CB668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB668);
  }
  return result;
}

unint64_t sub_24E2DFB5C(uint64_t a1)
{
  unint64_t result = sub_24E2DFB84();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_24E2DFB84()
{
  unint64_t result = qword_2698CB670;
  if (!qword_2698CB670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB670);
  }
  return result;
}

unint64_t sub_24E2DFBDC()
{
  unint64_t result = qword_2698CB678;
  if (!qword_2698CB678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB678);
  }
  return result;
}

unint64_t sub_24E2DFC34()
{
  unint64_t result = qword_2698CB680;
  if (!qword_2698CB680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB680);
  }
  return result;
}

uint64_t sub_24E2DFC88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24E2DFE60(a1, a2, a3, (uint64_t (*)(void))sub_24E2DFCB4, (uint64_t (*)(void))sub_24E2DFD08);
}

unint64_t sub_24E2DFCB4()
{
  unint64_t result = qword_2698CB688;
  if (!qword_2698CB688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB688);
  }
  return result;
}

unint64_t sub_24E2DFD08()
{
  unint64_t result = qword_2698CB690;
  if (!qword_2698CB690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB690);
  }
  return result;
}

unint64_t sub_24E2DFD60()
{
  unint64_t result = qword_2698CB698;
  if (!qword_2698CB698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB698);
  }
  return result;
}

uint64_t sub_24E2DFDB4()
{
  return sub_24E2DA59C(&qword_2698CB6A0, &qword_2698CB6A8);
}

unint64_t sub_24E2DFDE0()
{
  unint64_t result = qword_2698CB6B0;
  if (!qword_2698CB6B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB6B0);
  }
  return result;
}

uint64_t sub_24E2DFE34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24E2DFE60(a1, a2, a3, (uint64_t (*)(void))sub_24E2DFE9C, (uint64_t (*)(void))sub_24E2DFEF0);
}

uint64_t sub_24E2DFE60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  *(void *)(a1 + 8) = a4();
  uint64_t result = a5();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_24E2DFE9C()
{
  unint64_t result = qword_2698CB6B8;
  if (!qword_2698CB6B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB6B8);
  }
  return result;
}

unint64_t sub_24E2DFEF0()
{
  unint64_t result = qword_2698CB6C0;
  if (!qword_2698CB6C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB6C0);
  }
  return result;
}

unint64_t sub_24E2DFF48()
{
  unint64_t result = qword_2698CB6C8;
  if (!qword_2698CB6C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB6C8);
  }
  return result;
}

uint64_t sub_24E2DFF9C()
{
  return sub_24E2DA59C(&qword_2698CB6D0, &qword_2698CB6D8);
}

unint64_t sub_24E2DFFC8()
{
  unint64_t result = qword_2698CB6E0;
  if (!qword_2698CB6E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB6E0);
  }
  return result;
}

ValueMetadata *type metadata accessor for Item.Section()
{
  return &type metadata for Item.Section;
}

unsigned char *_s7SectionO8CategoryOwst_1(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E2E00F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Item.Section.Category()
{
  return &type metadata for Item.Section.Category;
}

uint64_t _s3TagOwet_0(unsigned __int8 *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  unsigned int v2 = a2 + 255;
  if ((a2 + 255) >= 0xFFFF00) {
    unsigned int v3 = 4;
  }
  else {
    unsigned int v3 = 2;
  }
  if (v2 >> 8 < 0xFF) {
    unsigned int v3 = 1;
  }
  if (v2 >= 0x100) {
    uint64_t v4 = v3;
  }
  else {
    uint64_t v4 = 0;
  }
  switch(v4)
  {
    case 1:
      uint64_t v4 = a1[1];
      if (!a1[1]) {
        return v4;
      }
      goto LABEL_17;
    case 2:
      uint64_t v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        return v4;
      }
      goto LABEL_17;
    case 3:
      __break(1u);
      JUMPOUT(0x24E2E01C8);
    case 4:
      uint64_t v4 = *(unsigned int *)(a1 + 1);
      if (v4) {
LABEL_17:
      }
        uint64_t v4 = (*a1 | (v4 << 8)) - 255;
      break;
    default:
      return v4;
  }
  return v4;
}

unsigned char *_s3TagOwst_1(unsigned char *result, int a2, int a3)
{
  unsigned int v3 = a3 + 255;
  if ((a3 + 255) >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2)
  {
    unsigned int v7 = ((a2 - 1) >> 8) + 1;
    *unint64_t result = a2 - 1;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        return result;
      case 2:
        *(_WORD *)(result + 1) = v7;
        return result;
      case 3:
        goto LABEL_21;
      case 4:
        *(_DWORD *)(result + 1) = v7;
        return result;
      default:
        return result;
    }
  }
  switch(v6)
  {
    case 1:
      result[1] = 0;
      break;
    case 2:
      *(_WORD *)(result + 1) = 0;
      break;
    case 3:
LABEL_21:
      __break(1u);
      JUMPOUT(0x24E2E0298);
    case 4:
      *(_DWORD *)(result + 1) = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for Item.Tag()
{
  return &type metadata for Item.Tag;
}

unsigned char *_s4SortOwst_1(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E2E039CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Item.Sort()
{
  return &type metadata for Item.Sort;
}

uint64_t Person.init(uniqueID:serverID:handles:displayName:relationship:favorite:)@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v9 = a1[1];
  uint64_t v10 = *a2;
  uint64_t v11 = a2[1];
  uint64_t v12 = *a3;
  uint64_t v13 = a3[1];
  char v14 = *((unsigned char *)a3 + 16);
  uint64_t v15 = a3[3];
  uint64_t v16 = *a4;
  uint64_t v17 = a4[1];
  uint64_t v18 = *a6;
  char v19 = *((unsigned char *)a6 + 8);
  *(void *)a7 = *a1;
  *(void *)(a7 + 8) = v9;
  *(void *)(a7 + 16) = v10;
  *(void *)(a7 + 24) = v11;
  *(void *)(a7 + 32) = v12;
  *(void *)(a7 + 40) = v13;
  *(unsigned char *)(a7 + 48) = v14;
  *(void *)(a7 + 56) = v15;
  *(void *)(a7 + 64) = v16;
  *(void *)(a7 + 72) = v17;
  uint64_t v20 = type metadata accessor for Person();
  uint64_t result = sub_24E2E04BC(a5, a7 + *(int *)(v20 + 32));
  uint64_t v22 = a7 + *(int *)(v20 + 36);
  *(void *)uint64_t v22 = v18;
  *(unsigned char *)(v22 + 8) = v19;
  return result;
}

uint64_t type metadata accessor for Person()
{
  uint64_t result = qword_2698CB6E8;
  if (!qword_2698CB6E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24E2E04BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Person.Relationship(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t Person.uniqueID.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t Person.serverID.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  *a1 = *(void *)(v1 + 16);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t Person.handles.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 40);
  char v3 = *(unsigned char *)(v1 + 48);
  uint64_t v4 = *(void *)(v1 + 56);
  *(void *)a1 = *(void *)(v1 + 32);
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t Person.displayName.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 72);
  *a1 = *(void *)(v1 + 64);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t Person.displayName.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 64) = v2;
  *(void *)(v1 + 72) = v3;
  return result;
}

uint64_t (*Person.displayName.modify())()
{
  return nullsub_1;
}

uint64_t Person.relationship.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Person() + 32);
  return sub_24E2E0628(v3, a1);
}

uint64_t sub_24E2E0628(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Person.Relationship(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t Person.relationship.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Person() + 32);
  return sub_24E2E06D0(a1, v3);
}

uint64_t sub_24E2E06D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Person.Relationship(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*Person.relationship.modify())()
{
  return nullsub_1;
}

uint64_t Person.favorite.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = type metadata accessor for Person();
  uint64_t v4 = (uint64_t *)(v1 + *(int *)(result + 36));
  uint64_t v5 = *v4;
  LOBYTE(v4) = *((unsigned char *)v4 + 8);
  *(void *)a1 = v5;
  *(unsigned char *)(a1 + 8) = (_BYTE)v4;
  return result;
}

uint64_t Person.favorite.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char v3 = *((unsigned char *)a1 + 8);
  uint64_t result = type metadata accessor for Person();
  uint64_t v5 = v1 + *(int *)(result + 36);
  *(void *)uint64_t v5 = v2;
  *(unsigned char *)(v5 + 8) = v3;
  return result;
}

uint64_t (*Person.favorite.modify())()
{
  return nullsub_1;
}

BOOL _s10FindMyCore6PersonV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v4 || (char v5 = sub_24E2F1430(), result = 0, (v5 & 1) != 0))
  {
    BOOL v7 = *(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24);
    if (v7 || (char v8 = sub_24E2F1430(), result = 0, (v8 & 1) != 0))
    {
      int v9 = *(unsigned __int8 *)(a1 + 48);
      uint64_t v10 = *(void *)(a1 + 56);
      int v11 = *(unsigned __int8 *)(a2 + 48);
      uint64_t v12 = *(void *)(a2 + 56);
      if (*(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40))
      {
        if (v9 != v11) {
          return 0;
        }
      }
      else
      {
        char v13 = sub_24E2F1430();
        BOOL result = 0;
        if ((v13 & 1) == 0 || v9 != v11) {
          return result;
        }
      }
      if ((sub_24E2E3DC8(v10, v12) & 1) == 0) {
        return 0;
      }
      if (*(void *)(a1 + 64) == *(void *)(a2 + 64) && *(void *)(a1 + 72) == *(void *)(a2 + 72)
        || (char v14 = sub_24E2F1430(), result = 0, (v14 & 1) != 0))
      {
        uint64_t v15 = type metadata accessor for Person();
        uint64_t v16 = *(int *)(v15 + 32);
        uint64_t v17 = a1 + v16;
        uint64_t v18 = a2 + v16;
        if ((static Person.Relationship.Following.== infix(_:_:)(a1 + v16, a2 + v16) & 1) == 0) {
          return 0;
        }
        uint64_t v19 = type metadata accessor for Person.Relationship(0);
        if ((static Person.Relationship.Follower.== infix(_:_:)(v17 + *(int *)(v19 + 20), v18 + *(int *)(v19 + 20)) & 1) == 0) {
          return 0;
        }
        uint64_t v20 = *(int *)(v15 + 36);
        uint64_t v21 = (void *)(a1 + v20);
        char v22 = *(unsigned char *)(a1 + v20 + 8);
        uint64_t v23 = (void *)(a2 + v20);
        char v24 = *(unsigned char *)(a2 + v20 + 8);
        if ((v22 & 1) == 0)
        {
          if (*v21 != *v23) {
            char v24 = 1;
          }
          return (v24 & 1) == 0;
        }
        return (v24 & 1) != 0;
      }
    }
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for Person(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  BOOL v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    uint64_t v6 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v6;
    uint64_t v7 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v7;
    uint64_t v8 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v8;
    *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
    uint64_t v9 = a2[8];
    *(void *)(a1 + 56) = a2[7];
    *(void *)(a1 + 64) = v9;
    uint64_t v10 = *(int *)(a3 + 32);
    int v11 = (char *)(a1 + v10);
    uint64_t v12 = (char *)a2 + v10;
    *(void *)(a1 + 72) = a2[9];
    uint64_t v13 = type metadata accessor for Person.Relationship.Following(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v20 = sub_24E2F0930();
      uint64_t v21 = *(void *)(v20 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v12, 1, v20))
      {
        uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(v11, v12, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v11, v12, v20);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v11, 0, 1, v20);
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
        goto LABEL_16;
      }
      uint64_t v15 = sub_24E2F0930();
      uint64_t v16 = *(void *)(v15 - 8);
      uint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
      uint64_t v47 = v16;
      if (v17(v12, 1, v15))
      {
        uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v11, v12, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v11, 0, 1, v15);
      }
      uint64_t v23 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
      char v24 = &v11[v23];
      uint64_t v25 = &v12[v23];
      if (v17(&v12[v23], 1, v15))
      {
        uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v24, v25, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v24, 0, 1, v15);
      }
    }
    swift_storeEnumTagMultiPayload();
LABEL_16:
    uint64_t v27 = *(int *)(type metadata accessor for Person.Relationship(0) + 20);
    char v28 = &v11[v27];
    char v29 = &v12[v27];
    uint64_t v30 = type metadata accessor for Person.Relationship.Follower(0);
    int v31 = swift_getEnumCaseMultiPayload();
    if (v31 == 2)
    {
      uint64_t v36 = sub_24E2F0930();
      uint64_t v37 = *(void *)(v36 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v29, 1, v36)) {
        goto LABEL_22;
      }
    }
    else
    {
      if (v31 != 1)
      {
        if (v31)
        {
          memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
LABEL_33:
          uint64_t v43 = *(int *)(a3 + 36);
          uint64_t v44 = (char *)v4 + v43;
          uint64_t v45 = (uint64_t)a2 + v43;
          *(void *)uint64_t v44 = *(void *)v45;
          v44[8] = *(unsigned char *)(v45 + 8);
          return v4;
        }
        uint64_t v32 = sub_24E2F0930();
        uint64_t v33 = *(void *)(v32 - 8);
        uint64_t v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48);
        if (v34(v29, 1, v32))
        {
          uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
          memcpy(v28, v29, *(void *)(*(void *)(v35 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v28, v29, v32);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v28, 0, 1, v32);
        }
        uint64_t v39 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
        uint64_t v40 = &v28[v39];
        uint64_t v41 = &v29[v39];
        if (v34(v41, 1, v32))
        {
          uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
          memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v40, v41, v32);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v40, 0, 1, v32);
        }
LABEL_32:
        swift_storeEnumTagMultiPayload();
        goto LABEL_33;
      }
      uint64_t v36 = sub_24E2F0930();
      uint64_t v37 = *(void *)(v36 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v29, 1, v36))
      {
LABEL_22:
        uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(v28, v29, *(void *)(*(void *)(v38 - 8) + 64));
        goto LABEL_32;
      }
    }
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v28, v29, v36);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v28, 0, 1, v36);
    goto LABEL_32;
  }
  uint64_t v19 = *a2;
  *BOOL v4 = *a2;
  BOOL v4 = (void *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return v4;
}

uint64_t destroy for Person(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  type metadata accessor for Person.Relationship.Following(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v10 = sub_24E2F0930();
    uint64_t v11 = *(void *)(v10 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v4, 1, v10)) {
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v4, v10);
    }
  }
  else if (!EnumCaseMultiPayload)
  {
    uint64_t v6 = sub_24E2F0930();
    uint64_t v7 = *(void *)(v6 - 8);
    uint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    if (!v8(v4, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v4, v6);
    }
    uint64_t v9 = v4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
    if (!v8(v9, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v9, v6);
    }
  }
  uint64_t v12 = v4 + *(int *)(type metadata accessor for Person.Relationship(0) + 20);
  type metadata accessor for Person.Relationship.Follower(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2 || result == 1)
  {
    uint64_t v14 = sub_24E2F0930();
    uint64_t v17 = *(void *)(v14 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v12, 1, v14);
    if (result) {
      return result;
    }
    goto LABEL_15;
  }
  if (!result)
  {
    uint64_t v14 = sub_24E2F0930();
    uint64_t v17 = *(void *)(v14 - 8);
    uint64_t v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
    if (!v15(v12, 1, v14)) {
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v12, v14);
    }
    v12 += *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
    uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v15)(v12, 1, v14);
    if (!result)
    {
LABEL_15:
      uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(v17 + 8);
      return v16(v12, v14);
    }
  }
  return result;
}

uint64_t initializeWithCopy for Person(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v8 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v8;
  uint64_t v9 = *(int *)(a3 + 32);
  uint64_t v10 = (char *)(a1 + v9);
  uint64_t v11 = (char *)(a2 + v9);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  uint64_t v12 = type metadata accessor for Person.Relationship.Following(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v18 = sub_24E2F0930();
    uint64_t v19 = *(void *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v11, 1, v18))
    {
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
      memcpy(v10, v11, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v10, v11, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v10, 0, 1, v18);
    }
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
      goto LABEL_14;
    }
    uint64_t v14 = sub_24E2F0930();
    uint64_t v15 = *(void *)(v14 - 8);
    uint64_t v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    uint64_t v45 = v15;
    if (v16(v11, 1, v14))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
      memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v10, v11, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v10, 0, 1, v14);
    }
    uint64_t v21 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
    uint64_t v22 = &v10[v21];
    uint64_t v23 = &v11[v21];
    if (v16(&v11[v21], 1, v14))
    {
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
      memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v22, v23, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v22, 0, 1, v14);
    }
  }
  swift_storeEnumTagMultiPayload();
LABEL_14:
  uint64_t v25 = *(int *)(type metadata accessor for Person.Relationship(0) + 20);
  uint64_t v26 = &v10[v25];
  uint64_t v27 = &v11[v25];
  uint64_t v28 = type metadata accessor for Person.Relationship.Follower(0);
  int v29 = swift_getEnumCaseMultiPayload();
  switch(v29)
  {
    case 2:
      uint64_t v34 = sub_24E2F0930();
      uint64_t v35 = *(void *)(v34 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v27, 1, v34))
      {
LABEL_20:
        uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(v26, v27, *(void *)(*(void *)(v36 - 8) + 64));
LABEL_30:
        swift_storeEnumTagMultiPayload();
        goto LABEL_31;
      }
LABEL_27:
      (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v26, v27, v34);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v26, 0, 1, v34);
      goto LABEL_30;
    case 1:
      uint64_t v34 = sub_24E2F0930();
      uint64_t v35 = *(void *)(v34 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v27, 1, v34)) {
        goto LABEL_20;
      }
      goto LABEL_27;
    case 0:
      uint64_t v30 = sub_24E2F0930();
      uint64_t v31 = *(void *)(v30 - 8);
      uint64_t v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
      if (v32(v27, 1, v30))
      {
        uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(v26, v27, *(void *)(*(void *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v26, v27, v30);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v26, 0, 1, v30);
      }
      uint64_t v37 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
      uint64_t v38 = &v26[v37];
      uint64_t v39 = &v27[v37];
      if (v32(v39, 1, v30))
      {
        uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v38, v39, v30);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v38, 0, 1, v30);
      }
      goto LABEL_30;
  }
  memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
LABEL_31:
  uint64_t v41 = *(int *)(a3 + 36);
  uint64_t v42 = a1 + v41;
  uint64_t v43 = a2 + v41;
  *(void *)uint64_t v42 = *(void *)v43;
  *(unsigned char *)(v42 + 8) = *(unsigned char *)(v43 + 8);
  return a1;
}

uint64_t assignWithCopy for Person(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 == a2)
  {
    type metadata accessor for Person.Relationship(0);
    goto LABEL_35;
  }
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = (char *)(a1 + v6);
  uint64_t v8 = (char *)(a2 + v6);
  sub_24E2E2504(a1 + v6, type metadata accessor for Person.Relationship.Following);
  uint64_t v9 = type metadata accessor for Person.Relationship.Following(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v15 = sub_24E2F0930();
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v8, 1, v15))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
      memcpy(v7, v8, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v7, v8, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v7, 0, 1, v15);
    }
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
      goto LABEL_17;
    }
    uint64_t v11 = sub_24E2F0930();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    uint64_t v43 = v12;
    uint64_t v44 = a3;
    if (v13(v8, 1, v11))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
      memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v7, v8, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v7, 0, 1, v11);
    }
    uint64_t v18 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
    uint64_t v19 = &v7[v18];
    uint64_t v20 = &v8[v18];
    if (v13(&v8[v18], 1, v11))
    {
      uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v19, v20, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v43 + 56))(v19, 0, 1, v11);
    }
    a3 = v44;
  }
  swift_storeEnumTagMultiPayload();
LABEL_17:
  uint64_t v22 = *(int *)(type metadata accessor for Person.Relationship(0) + 20);
  uint64_t v23 = &v7[v22];
  uint64_t v24 = &v8[v22];
  sub_24E2E2504((uint64_t)v23, type metadata accessor for Person.Relationship.Follower);
  uint64_t v25 = type metadata accessor for Person.Relationship.Follower(0);
  int v26 = swift_getEnumCaseMultiPayload();
  switch(v26)
  {
    case 2:
      uint64_t v31 = sub_24E2F0930();
      uint64_t v32 = *(void *)(v31 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v24, 1, v31))
      {
LABEL_23:
        uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(v23, v24, *(void *)(*(void *)(v33 - 8) + 64));
LABEL_34:
        swift_storeEnumTagMultiPayload();
        goto LABEL_35;
      }
LABEL_27:
      (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v23, v24, v31);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v23, 0, 1, v31);
      goto LABEL_34;
    case 1:
      uint64_t v31 = sub_24E2F0930();
      uint64_t v32 = *(void *)(v31 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v24, 1, v31)) {
        goto LABEL_23;
      }
      goto LABEL_27;
    case 0:
      uint64_t v27 = sub_24E2F0930();
      uint64_t v28 = *(void *)(v27 - 8);
      int v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
      uint64_t v45 = a3;
      if (v29(v24, 1, v27))
      {
        uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(v23, v24, *(void *)(*(void *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v23, v24, v27);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v23, 0, 1, v27);
      }
      uint64_t v34 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
      uint64_t v35 = &v23[v34];
      uint64_t v36 = &v24[v34];
      if (v29(v36, 1, v27))
      {
        uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v35, v36, v27);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v35, 0, 1, v27);
      }
      a3 = v45;
      goto LABEL_34;
  }
  memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
LABEL_35:
  uint64_t v38 = *(int *)(a3 + 36);
  uint64_t v39 = a1 + v38;
  uint64_t v40 = (uint64_t *)(a2 + v38);
  uint64_t v41 = *v40;
  *(unsigned char *)(v39 + 8) = *((unsigned char *)v40 + 8);
  *(void *)uint64_t v39 = v41;
  return a1;
}

uint64_t sub_24E2E2504(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_OWORD *initializeWithTake for Person(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v3 = a3;
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  long long v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  a1[4] = a2[4];
  uint64_t v8 = *(int *)(a3 + 32);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for Person.Relationship.Following(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v17 = sub_24E2F0930();
    uint64_t v18 = *(void *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v10, 1, v17))
    {
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
      memcpy(v9, v10, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v9, v10, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v9, 0, 1, v17);
    }
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
      goto LABEL_15;
    }
    uint64_t v13 = sub_24E2F0930();
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    uint64_t v44 = v14;
    uint64_t v45 = v3;
    if (v15(v10, 1, v13))
    {
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
      memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v9, v10, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v9, 0, 1, v13);
    }
    uint64_t v20 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
    uint64_t v21 = &v9[v20];
    uint64_t v22 = &v10[v20];
    if (v15(&v10[v20], 1, v13))
    {
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v21, v22, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v44 + 56))(v21, 0, 1, v13);
    }
    uint64_t v3 = v45;
  }
  swift_storeEnumTagMultiPayload();
LABEL_15:
  uint64_t v24 = *(int *)(type metadata accessor for Person.Relationship(0) + 20);
  uint64_t v25 = &v9[v24];
  int v26 = &v10[v24];
  uint64_t v27 = type metadata accessor for Person.Relationship.Follower(0);
  int v28 = swift_getEnumCaseMultiPayload();
  if (v28 == 2)
  {
    uint64_t v33 = sub_24E2F0930();
    uint64_t v34 = *(void *)(v33 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v26, 1, v33))
    {
LABEL_21:
      uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
      memcpy(v25, v26, *(void *)(*(void *)(v35 - 8) + 64));
LABEL_29:
      swift_storeEnumTagMultiPayload();
      goto LABEL_33;
    }
LABEL_28:
    (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v25, v26, v33);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v25, 0, 1, v33);
    goto LABEL_29;
  }
  if (v28 == 1)
  {
    uint64_t v33 = sub_24E2F0930();
    uint64_t v34 = *(void *)(v33 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v26, 1, v33)) {
      goto LABEL_21;
    }
    goto LABEL_28;
  }
  if (v28)
  {
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    uint64_t v29 = sub_24E2F0930();
    uint64_t v30 = *(void *)(v29 - 8);
    uint64_t v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
    uint64_t v46 = v3;
    if (v31(v26, 1, v29))
    {
      uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
      memcpy(v25, v26, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v25, v26, v29);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v25, 0, 1, v29);
    }
    uint64_t v36 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
    uint64_t v37 = &v25[v36];
    uint64_t v38 = &v26[v36];
    if (v31(v38, 1, v29))
    {
      uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
      memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v37, v38, v29);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v37, 0, 1, v29);
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v3 = v46;
  }
LABEL_33:
  uint64_t v40 = *(int *)(v3 + 36);
  uint64_t v41 = (char *)a1 + v40;
  uint64_t v42 = (char *)a2 + v40;
  *(void *)uint64_t v41 = *(void *)v42;
  v41[8] = v42[8];
  return a1;
}

uint64_t assignWithTake for Person(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v9;
  swift_bridgeObjectRelease();
  if (a1 == a2)
  {
    type metadata accessor for Person.Relationship(0);
    goto LABEL_35;
  }
  uint64_t v10 = *(int *)(a3 + 32);
  uint64_t v11 = (char *)(a1 + v10);
  uint64_t v12 = (char *)(a2 + v10);
  sub_24E2E2504(a1 + v10, type metadata accessor for Person.Relationship.Following);
  uint64_t v13 = type metadata accessor for Person.Relationship.Following(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v19 = sub_24E2F0930();
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v12, 1, v19))
    {
      uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
      memcpy(v11, v12, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v11, v12, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v11, 0, 1, v19);
    }
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
      goto LABEL_17;
    }
    uint64_t v15 = sub_24E2F0930();
    uint64_t v16 = *(void *)(v15 - 8);
    uint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
    uint64_t v46 = v16;
    uint64_t v47 = a3;
    if (v17(v12, 1, v15))
    {
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
      memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v11, v12, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v11, 0, 1, v15);
    }
    uint64_t v22 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
    uint64_t v23 = &v11[v22];
    uint64_t v24 = &v12[v22];
    if (v17(&v12[v22], 1, v15))
    {
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
      memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v23, v24, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v23, 0, 1, v15);
    }
    a3 = v47;
  }
  swift_storeEnumTagMultiPayload();
LABEL_17:
  uint64_t v26 = *(int *)(type metadata accessor for Person.Relationship(0) + 20);
  uint64_t v27 = &v11[v26];
  int v28 = &v12[v26];
  sub_24E2E2504((uint64_t)v27, type metadata accessor for Person.Relationship.Follower);
  uint64_t v29 = type metadata accessor for Person.Relationship.Follower(0);
  int v30 = swift_getEnumCaseMultiPayload();
  switch(v30)
  {
    case 2:
      uint64_t v35 = sub_24E2F0930();
      uint64_t v36 = *(void *)(v35 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v28, 1, v35))
      {
LABEL_23:
        uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(v27, v28, *(void *)(*(void *)(v37 - 8) + 64));
LABEL_34:
        swift_storeEnumTagMultiPayload();
        goto LABEL_35;
      }
LABEL_27:
      (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v27, v28, v35);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v27, 0, 1, v35);
      goto LABEL_34;
    case 1:
      uint64_t v35 = sub_24E2F0930();
      uint64_t v36 = *(void *)(v35 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v28, 1, v35)) {
        goto LABEL_23;
      }
      goto LABEL_27;
    case 0:
      uint64_t v31 = sub_24E2F0930();
      uint64_t v32 = *(void *)(v31 - 8);
      uint64_t v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48);
      uint64_t v48 = a3;
      if (v33(v28, 1, v31))
      {
        uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(v27, v28, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v27, v28, v31);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v27, 0, 1, v31);
      }
      uint64_t v38 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
      uint64_t v39 = &v27[v38];
      uint64_t v40 = &v28[v38];
      if (v33(v40, 1, v31))
      {
        uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v39, v40, v31);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v39, 0, 1, v31);
      }
      a3 = v48;
      goto LABEL_34;
  }
  memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
LABEL_35:
  uint64_t v42 = *(int *)(a3 + 36);
  uint64_t v43 = a1 + v42;
  uint64_t v44 = a2 + v42;
  *(void *)uint64_t v43 = *(void *)v44;
  *(unsigned char *)(v43 + 8) = *(unsigned char *)(v44 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for Person(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24E2E34B4);
}

uint64_t sub_24E2E34B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for Person.Relationship(0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for Person(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24E2E3578);
}

uint64_t sub_24E2E3578(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for Person.Relationship(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_24E2E3620()
{
  uint64_t result = type metadata accessor for Person.Relationship(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t Person.AssociatedHandles.init(mainHandle:otherHandles:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3 = *(void *)(result + 8);
  char v4 = *(unsigned char *)(result + 16);
  *(void *)a3 = *(void *)result;
  *(void *)(a3 + 8) = v3;
  *(unsigned char *)(a3 + 16) = v4;
  *(void *)(a3 + 24) = a2;
  return result;
}

uint64_t sub_24E2E36E4(uint64_t a1)
{
  size_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *((void *)*v1 + 2);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *((void *)v3 + 3) >> 1)
  {
    size_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  uint64_t v3 = sub_24E2E434C(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  size_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = *((void *)v3 + 2);
  if ((*((void *)v3 + 3) >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v10 = &v3[v9 + 32];
  if (a1 + 32 < (unint64_t)&v10[v8] && (unint64_t)v10 < a1 + 32 + v8) {
    goto LABEL_24;
  }
  memcpy(v10, (const void *)(a1 + 32), v8);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = *((void *)v3 + 2);
  BOOL v13 = __OFADD__(v12, v8);
  size_t v14 = v12 + v8;
  if (!v13)
  {
    *((void *)v3 + 2) = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *unint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_24E2F1390();
  __break(1u);
  return result;
}

uint64_t sub_24E2E3830(uint64_t a1)
{
  return sub_24E2E38C0(a1, &qword_2698CA5F8, (uint64_t (*)(void))type metadata accessor for Item, (uint64_t (*)(void))type metadata accessor for Item, (uint64_t (*)(void))type metadata accessor for Item);
}

uint64_t sub_24E2E3878(uint64_t a1)
{
  return sub_24E2E38C0(a1, &qword_2698CA5C0, (uint64_t (*)(void))type metadata accessor for Person, (uint64_t (*)(void))type metadata accessor for Person, (uint64_t (*)(void))type metadata accessor for Person);
}

uint64_t sub_24E2E38C0(uint64_t a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  unint64_t v6 = *(void *)(a1 + 16);
  unint64_t v7 = *v5;
  int64_t v8 = *(void *)(*v5 + 16);
  int64_t v9 = v8 + v6;
  if (__OFADD__(v8, v6))
  {
    __break(1u);
    goto LABEL_21;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v9 <= *(void *)(v7 + 24) >> 1)
  {
    unint64_t v16 = *(void *)(a1 + 16);
    if (v16) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v6) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v8 <= v9) {
    int64_t v31 = v8 + v6;
  }
  else {
    int64_t v31 = v8;
  }
  unint64_t v7 = sub_24E2E46D4(isUniquelyReferenced_nonNull_native, v31, 1, v7, a2, a3, a4);
  unint64_t v16 = *(void *)(a1 + 16);
  if (!v16) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v17 = *(void *)(v7 + 16);
  uint64_t v18 = (*(void *)(v7 + 24) >> 1) - v17;
  uint64_t v19 = *(void *)(a5(0) - 8);
  uint64_t v20 = *(void *)(v19 + 72);
  if (v18 < (uint64_t)v16)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v21 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v22 = v7 + v21 + v20 * v17;
  unint64_t v23 = a1 + v21;
  uint64_t v24 = v20 * v16;
  unint64_t v25 = v22 + v24;
  unint64_t v26 = v23 + v24;
  if (v23 < v25 && v22 < v26) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (v16 < v6)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v28 = *(void *)(v7 + 16);
  BOOL v29 = __OFADD__(v28, v16);
  uint64_t v30 = v28 + v16;
  if (!v29)
  {
    *(void *)(v7 + 16) = v30;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *int64_t v5 = v7;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_24E2F1390();
  __break(1u);
  return result;
}

uint64_t sub_24E2E3A98(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_24E2E4A98(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[3 * v8 + 4];
  if (a1 + 32 < v9 + 24 * v2 && v9 < a1 + 32 + 24 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_24E2F1390();
  __break(1u);
  return result;
}

uint64_t sub_24E2E3BF4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v22 = v4 + v2;
  }
  else {
    int64_t v22 = v4;
  }
  unint64_t v3 = sub_24E2E46D4(isUniquelyReferenced_nonNull_native, v22, 1, v3, &qword_2698CB088, MEMORY[0x263F3CF40], MEMORY[0x263F3CF40]);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v9 = (*(void *)(v3 + 24) >> 1) - v8;
  uint64_t v10 = *(void *)(sub_24E2F0B00() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = v3 + v12 + v11 * v8;
  unint64_t v14 = a1 + v12;
  uint64_t v15 = v11 * v2;
  unint64_t v16 = v13 + v15;
  unint64_t v17 = v14 + v15;
  if (v14 < v16 && v13 < v17) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v19 = *(void *)(v3 + 16);
  BOOL v20 = __OFADD__(v19, v2);
  uint64_t v21 = v19 + v2;
  if (!v20)
  {
    *(void *)(v3 + 16) = v21;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_24E2F1390();
  __break(1u);
  return result;
}

uint64_t sub_24E2E3DC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    unint64_t v3 = (unsigned __int8 *)(a2 + 48);
    int64_t v4 = (unsigned __int8 *)(a1 + 48);
    do
    {
      int v5 = *v4;
      int v6 = *v3;
      if (*((void *)v4 - 2) == *((void *)v3 - 2) && *((void *)v4 - 1) == *((void *)v3 - 1))
      {
        if (v5 != v6) {
          return 0;
        }
      }
      else
      {
        char v8 = sub_24E2F1430();
        uint64_t result = 0;
        if ((v8 & 1) == 0 || v5 != v6) {
          return result;
        }
      }
      v3 += 24;
      v4 += 24;
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t Person.AssociatedHandles.mainHandle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  char v3 = *(unsigned char *)(v1 + 16);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 16) = v3;
  return swift_bridgeObjectRetain();
}

uint64_t Person.AssociatedHandles.otherHandles.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Person.AssociatedHandles.allHandles.getter()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  char v3 = *((unsigned char *)v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698CB740);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_24E2F1C10;
  *(void *)(v4 + 32) = v2;
  *(void *)(v4 + 40) = v1;
  *(unsigned char *)(v4 + 48) = v3;
  uint64_t v7 = v4;
  swift_bridgeObjectRetain();
  uint64_t v5 = swift_bridgeObjectRetain();
  sub_24E2E3A98(v5);
  return v7;
}

uint64_t Person.AssociatedHandles.hash(into:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 24);
  swift_bridgeObjectRetain();
  sub_24E2F0F20();
  sub_24E2F14B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24E2E4D00(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t Person.AssociatedHandles.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_24E2F14A0();
  swift_bridgeObjectRetain();
  sub_24E2F0F20();
  sub_24E2F14B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24E2E4D00((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  return sub_24E2F14D0();
}

uint64_t sub_24E2E4054()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_24E2F14A0();
  swift_bridgeObjectRetain();
  sub_24E2F0F20();
  sub_24E2F14B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24E2E4D00((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  return sub_24E2F14D0();
}

uint64_t sub_24E2E40F0(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 24);
  swift_bridgeObjectRetain();
  sub_24E2F0F20();
  sub_24E2F14B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24E2E4D00(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24E2E4180()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_24E2F14A0();
  swift_bridgeObjectRetain();
  sub_24E2F0F20();
  sub_24E2F14B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24E2E4D00((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  return sub_24E2F14D0();
}

Swift::Bool __swiftcall Person.AssociatedHandles.contains(search:)(Swift::String search)
{
  uint64_t v2 = HIBYTE(search._object) & 0xF;
  if (((uint64_t)search._object & 0x2000000000000000) == 0) {
    uint64_t v2 = search._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    char v3 = *((unsigned char *)v1 + 16);
    int v6 = v1;
    uint64_t v4 = *v1;
    uint64_t v5 = v6[1];
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698CB740);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24E2F1C10;
    *(void *)(inited + 32) = v4;
    *(void *)(inited + 40) = v5;
    *(unsigned char *)(inited + 48) = v3;
    uint64_t v14 = inited;
    swift_bridgeObjectRetain();
    uint64_t v8 = swift_bridgeObjectRetain();
    sub_24E2E3A98(v8);
    uint64_t v9 = *(void *)(v14 + 16);
    if (v9)
    {
      sub_24E2AF0F8();
      swift_bridgeObjectRetain();
      uint64_t v10 = v9 - 1;
      uint64_t v11 = v14 + 40;
      do
      {
        uint64_t v12 = v10;
        LOBYTE(v9) = sub_24E2F1250();
        if (v9) {
          break;
        }
        uint64_t v10 = v12 - 1;
        v11 += 24;
      }
      while (v12);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    LOBYTE(v9) = 1;
  }
  return v9 & 1;
}

char *sub_24E2E434C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  int64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v7 = a2;
    }
LABEL_8:
    int64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      int64_t v9 = *((void *)a4 + 2);
    }
    else {
      int64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2698CA538);
      uint64_t v10 = (char *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * v11 - 64;
      uint64_t v12 = v10 + 32;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32]) {
          memmove(v12, a4 + 32, v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (char *)MEMORY[0x263F8EE78];
      uint64_t v12 = (char *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_24E2E5018(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_24E2E4448(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_24E2E46D4(a1, a2, a3, a4, &qword_2698CA5F8, (uint64_t (*)(void))type metadata accessor for Item, (uint64_t (*)(void))type metadata accessor for Item);
}

void *sub_24E2E447C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2698CB720);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      _OWORD v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_24E2E5100(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_24E2E45A4(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  int64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v7 = a2;
    }
LABEL_8:
    int64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      int64_t v9 = *((void *)a4 + 2);
    }
    else {
      int64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2698CB700);
      uint64_t v10 = (char *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * v11 - 64;
      uint64_t v12 = v10 + 32;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32]) {
          memmove(v12, a4 + 32, v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (char *)MEMORY[0x263F8EE78];
      uint64_t v12 = (char *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_24E2E5018(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_24E2E46A0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_24E2E46D4(a1, a2, a3, a4, &qword_2698CB110, MEMORY[0x263F07508], MEMORY[0x263F07508]);
}

uint64_t sub_24E2E46D4(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    uint64_t v18 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = (void *)swift_allocObject();
  size_t v19 = _swift_stdlib_malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_24E2F1350();
    __break(1u);
    return result;
  }
  void v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_24E2E5414(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

uint64_t sub_24E2E4954(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_24E2E46D4(a1, a2, a3, a4, &qword_2698CA5C0, (uint64_t (*)(void))type metadata accessor for Person, (uint64_t (*)(void))type metadata accessor for Person);
}

void *sub_24E2E4988(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2698CB708);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      _OWORD v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24E2E5308(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_24E2E4A98(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2698CB740);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      _OWORD v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_24E2E5210(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_24E2E4BBC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2698CB718);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      _OWORD v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24E2E5570(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_24E2E4CCC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_24E2E46D4(a1, a2, a3, a4, &qword_2698CB088, MEMORY[0x263F3CF40], MEMORY[0x263F3CF40]);
}

uint64_t sub_24E2E4D00(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = sub_24E2F14B0();
  if (v3)
  {
    uint64_t v5 = a2 + 48;
    do
    {
      v5 += 24;
      swift_bridgeObjectRetain();
      sub_24E2F0F20();
      sub_24E2F14B0();
      uint64_t result = swift_bridgeObjectRelease();
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t _s10FindMyCore6PersonV17AssociatedHandlesV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  int v4 = *(unsigned __int8 *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  BOOL v6 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (!v6 && (sub_24E2F1430() & 1) == 0 || v2 != v4) {
    return 0;
  }
  return sub_24E2E3DC8(v3, v5);
}

unint64_t sub_24E2E4E18()
{
  unint64_t result = qword_2698CB6F8;
  if (!qword_2698CB6F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB6F8);
  }
  return result;
}

uint64_t _s17AssociatedHandlesVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s17AssociatedHandlesVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t _s17AssociatedHandlesVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s17AssociatedHandlesVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s17AssociatedHandlesVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Person.AssociatedHandles()
{
  return &type metadata for Person.AssociatedHandles;
}

char *sub_24E2E5018(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + a1 + 32);
    BOOL v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  __n128 result = (char *)sub_24E2F1390();
  __break(1u);
  return result;
}

uint64_t sub_24E2E5100(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2698CB728);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_24E2F1390();
  __break(1u);
  return result;
}

uint64_t sub_24E2E5210(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_24E2F1390();
  __break(1u);
  return result;
}

uint64_t sub_24E2E5308(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2698CB710);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_24E2F1390();
  __break(1u);
  return result;
}

uint64_t sub_24E2E5414(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_24E2F1390();
  __break(1u);
  return result;
}

char *sub_24E2E5570(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_24E2F1390();
  __break(1u);
  return result;
}

uint64_t sub_24E2E565C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
    sub_24E295A24(0, v1, 0);
    uint64_t v2 = v11;
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v6 = *(v4 - 1);
      uint64_t v5 = *v4;
      unint64_t v8 = *(void *)(v11 + 16);
      unint64_t v7 = *(void *)(v11 + 24);
      swift_bridgeObjectRetain();
      if (v8 >= v7 >> 1) {
        sub_24E295A24(v7 > 1, v8 + 1, 1);
      }
      v4 += 3;
      *(void *)(v11 + 16) = v8 + 1;
      uint64_t v9 = v11 + 16 * v8;
      *(void *)(v9 + 32) = v6;
      *(void *)(v9 + 40) = v5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t static Person.fetchCNContact(for:using:)(uint64_t a1, uint64_t a2)
{
  unint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_2698CB738 + dword_2698CB738);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_24E2A7600;
  return v7(a1, a2);
}

CNContact __swiftcall Person.lightContact()()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v1 = *(void *)(v0 + 40);
  char v3 = *(unsigned char *)(v0 + 48);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698CB740);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24E2F1C10;
  *(void *)(inited + 32) = v2;
  *(void *)(inited + 40) = v1;
  *(unsigned char *)(inited + 48) = v3;
  uint64_t v10 = inited;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v5 = swift_bridgeObjectRetain();
  sub_24E2E3A98(v5);
  sub_24E2E565C(v10);
  swift_bridgeObjectRelease();
  uint64_t v6 = (void *)sub_24E2F0E90();
  swift_bridgeObjectRelease();
  unint64_t v7 = (void *)sub_24E2F1020();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(self, sel_contactWithDisplayName_handleStrings_, v6, v7);

  return (CNContact)v8;
}

uint64_t sub_24E2E590C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 88) = a2;
  *(_OWORD *)(v2 + 96) = *(_OWORD *)a1;
  *(unsigned char *)(v2 + 120) = *(unsigned char *)(a1 + 16);
  *(void *)(v2 + 112) = *(void *)(a1 + 24);
  return MEMORY[0x270FA2498](sub_24E2E59B4, 0, 0);
}

uint64_t sub_24E2E59B4()
{
  if (objc_msgSend(self, sel_authorizationStatusForEntityType_, 0) == (id)3)
  {
    char v1 = *(unsigned char *)(v0 + 120);
    uint64_t v3 = *(void *)(v0 + 104);
    uint64_t v2 = *(void *)(v0 + 112);
    uint64_t v4 = *(void **)(v0 + 88);
    uint64_t v5 = *(void *)(v0 + 96);
    uint64_t v6 = self;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698CB740);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24E2F1C10;
    *(void *)(inited + 32) = v5;
    *(void *)(inited + 40) = v3;
    *(unsigned char *)(inited + 48) = v1;
    uint64_t v29 = inited;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_24E2E3A98(v2);
    sub_24E2E565C(v29);
    swift_bridgeObjectRelease();
    id v8 = (void *)sub_24E2F1020();
    swift_bridgeObjectRelease();
    id v9 = objc_msgSend(v6, sel_predicateForContactsMatchingHandleStrings_, v8);

    __swift_instantiateConcreteTypeFromMangledName(&qword_2698CB750);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_24E2F4C60;
    uint64_t v11 = (void *)*MEMORY[0x263EFDFE0];
    unint64_t v12 = (void *)*MEMORY[0x263EFDF80];
    *(void *)(v10 + 32) = *MEMORY[0x263EFDFE0];
    *(void *)(v10 + 40) = v12;
    unint64_t v13 = (void *)*MEMORY[0x263EFE070];
    *(void *)(v10 + 48) = *MEMORY[0x263EFE070];
    uint64_t v14 = self;
    id v15 = v11;
    id v16 = v12;
    id v17 = v13;
    *(void *)(v10 + 56) = objc_msgSend(v14, sel_descriptorForRequiredKeysForStyle_, 1001);
    sub_24E2F1050();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698CB758);
    uint64_t v18 = (void *)sub_24E2F1020();
    swift_bridgeObjectRelease();
    *(void *)(v0 + 80) = 0;
    id v19 = objc_msgSend(v4, sel_unifiedContactsMatchingPredicate_keysToFetch_error_, v9, v18, v0 + 80);

    BOOL v20 = *(void **)(v0 + 80);
    if (v19)
    {
      sub_24E2E5DF0();
      unint64_t v21 = sub_24E2F1030();
      id v22 = v20;

      if (v21 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v23 = sub_24E2F1360();
        swift_bridgeObjectRelease();
        if (v23) {
          goto LABEL_5;
        }
      }
      else
      {
        uint64_t v23 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v23)
        {
LABEL_5:
          if ((v21 & 0xC000000000000001) != 0)
          {
            id v24 = (id)MEMORY[0x253338230](0, v21);
          }
          else
          {
            if (!*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              __break(1u);
            }
            id v24 = *(id *)(v21 + 32);
          }
          uint64_t v23 = (uint64_t)v24;
        }
      }

      swift_bridgeObjectRelease();
      unint64_t v25 = *(uint64_t (**)(uint64_t))(v0 + 8);
      return v25(v23);
    }
    id v27 = v20;
    sub_24E2F0790();

    swift_willThrow();
  }
  else
  {
    sub_24E2E5D9C();
    swift_allocError();
    swift_willThrow();
  }
  uint64_t v28 = *(uint64_t (**)(void))(v0 + 8);
  return v28();
}

unint64_t sub_24E2E5D9C()
{
  unint64_t result = qword_2698CB748;
  if (!qword_2698CB748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB748);
  }
  return result;
}

unint64_t sub_24E2E5DF0()
{
  unint64_t result = qword_2698CB760;
  if (!qword_2698CB760)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2698CB760);
  }
  return result;
}

unsigned char *_s17ContactFetchErrorOwst(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24E2E5ECCLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s17ContactFetchErrorOMa()
{
  return &_s17ContactFetchErrorON;
}

unint64_t sub_24E2E5F08()
{
  unint64_t result = qword_2698CB768;
  if (!qword_2698CB768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB768);
  }
  return result;
}

uint64_t Person.DisplayName.value.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Person.DisplayName.init(name:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t static Person.DisplayName.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_24E2F1430();
  }
}

uint64_t Person.DisplayName.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_24E2F0F20();
  return swift_bridgeObjectRelease();
}

uint64_t Person.DisplayName.hashValue.getter()
{
  return sub_24E2F14D0();
}

uint64_t static Person.DisplayName.< infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 0;
  }
  else {
    return sub_24E2F1430();
  }
}

Swift::Bool __swiftcall Person.DisplayName.contains(search:)(Swift::String search)
{
  uint64_t v1 = HIBYTE(search._object) & 0xF;
  if (((uint64_t)search._object & 0x2000000000000000) == 0) {
    uint64_t v1 = search._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  }
  if (!v1) {
    return 1;
  }
  sub_24E2AF0F8();
  return sub_24E2F1250() & 1;
}

unint64_t sub_24E2E6128()
{
  unint64_t result = qword_2698CB770;
  if (!qword_2698CB770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB770);
  }
  return result;
}

ValueMetadata *type metadata accessor for Person.DisplayName()
{
  return &type metadata for Person.DisplayName;
}

uint64_t Person.Favorite.init(order:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  *(void *)a3 = result;
  *(unsigned char *)(a3 + 8) = a2 & 1;
  return result;
}

uint64_t static Person.Favorite.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  char v2 = *(unsigned char *)(a2 + 8);
  if (*(unsigned char *)(a1 + 8))
  {
    if ((*(unsigned char *)(a2 + 8) & 1) == 0) {
      return 0;
    }
  }
  else
  {
    if (*(void *)a1 != *(void *)a2) {
      char v2 = 1;
    }
    if (v2) {
      return 0;
    }
  }
  return 1;
}

BOOL Person.Favorite.isFavorite.getter()
{
  return (*(unsigned char *)(v0 + 8) & 1) == 0;
}

uint64_t Person.Favorite.sortOrder.getter()
{
  if (v0[8]) {
    return 0x7FFFFFFFFFFFFFFFLL;
  }
  else {
    return *(void *)v0;
  }
}

uint64_t sub_24E2E61F8(uint64_t a1, uint64_t a2)
{
  char v2 = *(unsigned char *)(a2 + 8);
  if (*(unsigned char *)(a1 + 8))
  {
    if (*(unsigned char *)(a2 + 8)) {
      return 1;
    }
  }
  else
  {
    if (*(void *)a1 != *(void *)a2) {
      char v2 = 1;
    }
    if ((v2 & 1) == 0) {
      return 1;
    }
  }
  return 0;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)unint64_t result = v2;
  return result;
}

uint64_t _s8FavoriteVwet(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t _s8FavoriteVwst(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

ValueMetadata *type metadata accessor for Person.Favorite()
{
  return &type metadata for Person.Favorite;
}

uint64_t Person.Handle.init(rawValue:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_24E2F0EF0();
  uint64_t v8 = v7;
  uint64_t v9 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v9 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v9)
  {
    sub_24E295704();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2698CA510);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_24E2F1C10;
    *(void *)(v10 + 56) = MEMORY[0x263F8D310];
    *(void *)(v10 + 64) = sub_24E295788();
    *(void *)(v10 + 32) = 0xD000000000000029;
    *(void *)(v10 + 40) = 0x800000024E2F6730;
    uint64_t v11 = (void *)sub_24E2F11B0();
    unint64_t v12 = (void *)sub_24E2F0E90();
    unsigned int v13 = objc_msgSend(v11, sel_evaluateWithObject_, v12);

    if (v13)
    {
      uint64_t result = swift_bridgeObjectRelease();
      char v15 = 1;
    }
    else
    {
      BOOL v16 = sub_24E2E64A8(a1, a2);
      uint64_t result = swift_bridgeObjectRelease();
      if (v16) {
        char v15 = 0;
      }
      else {
        char v15 = 2;
      }
    }
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v15 = 2;
  }
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v8;
  *(unsigned char *)(a3 + 16) = v15;
  return result;
}

BOOL static Person.Handle.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 16);
  int v3 = *(unsigned __int8 *)(a2 + 16);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)) {
    return v2 == v3;
  }
  char v5 = sub_24E2F1430();
  BOOL result = 0;
  if (v5) {
    return v2 == v3;
  }
  return result;
}

void Person.Handle.kind.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

uint64_t Person.Handle.label.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

BOOL sub_24E2E64A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24E2F0760();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)v21 - v9;
  sub_24E2F0720();
  sub_24E2F0740();
  uint64_t v11 = self;
  id v12 = objc_msgSend(v11, sel_controlCharacterSet);
  sub_24E2F0730();

  sub_24E2F0750();
  unsigned int v13 = *(void (**)(char *, uint64_t))(v5 + 8);
  v13(v8, v4);
  id v14 = objc_msgSend(v11, sel_whitespaceAndNewlineCharacterSet);
  sub_24E2F0730();

  sub_24E2F0750();
  v13(v8, v4);
  v21[0] = a1;
  v21[1] = a2;
  sub_24E2AF0F8();
  v21[0] = sub_24E2F1240();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2698CB788);
  sub_24E2E6EF0();
  uint64_t v15 = sub_24E2F0E10();
  unint64_t v17 = v16;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v18 = HIBYTE(v17) & 0xF;
  if ((v17 & 0x2000000000000000) == 0) {
    uint64_t v18 = v15 & 0xFFFFFFFFFFFFLL;
  }
  BOOL v19 = v18 == 0;
  v13(v10, v4);
  return v19;
}

BOOL static Person.Handle.Kind.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t Person.Handle.Kind.hash(into:)()
{
  return sub_24E2F14B0();
}

uint64_t Person.Handle.Kind.hashValue.getter()
{
  return sub_24E2F14D0();
}

uint64_t Person.Handle.hash(into:)()
{
  return sub_24E2F14B0();
}

uint64_t Person.Handle.hashValue.getter()
{
  return sub_24E2F14D0();
}

uint64_t sub_24E2E6838()
{
  return sub_24E2F14D0();
}

uint64_t sub_24E2E68AC()
{
  return sub_24E2F14B0();
}

uint64_t sub_24E2E6908()
{
  return sub_24E2F14D0();
}

BOOL sub_24E2E6978(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 16);
  int v3 = *(unsigned __int8 *)(a2 + 16);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)) {
    return v2 == v3;
  }
  char v5 = sub_24E2F1430();
  BOOL result = 0;
  if (v5) {
    return v2 == v3;
  }
  return result;
}

uint64_t static Person.Handle.< infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 0;
  }
  else {
    return sub_24E2F1430();
  }
}

uint64_t Person.Handle.debugDescription.getter()
{
  return 91;
}

uint64_t DefaultStringInterpolation.appendInterpolation(_:)(uint64_t a1)
{
  if (*(void *)(a1 + 8))
  {
    sub_24E2F0EE0();
    sub_24E2F0F50();
    swift_bridgeObjectRelease();
    sub_24E2F0F50();
    swift_bridgeObjectRetain();
    sub_24E2F0F50();
    swift_bridgeObjectRelease();
    sub_24E2F0F50();
    sub_24E2F0F50();
    return swift_bridgeObjectRelease();
  }
  else
  {
    return sub_24E2F0F50();
  }
}

uint64_t DefaultStringInterpolation.appendInterpolation(_:)()
{
  return swift_bridgeObjectRelease();
}

unint64_t sub_24E2E6CA0()
{
  unint64_t result = qword_2698CB778;
  if (!qword_2698CB778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB778);
  }
  return result;
}

unint64_t sub_24E2E6CF8()
{
  unint64_t result = qword_2698CB780;
  if (!qword_2698CB780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB780);
  }
  return result;
}

ValueMetadata *type metadata accessor for Person.Handle()
{
  return &type metadata for Person.Handle;
}

uint64_t _s6HandleV4KindOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s6HandleV4KindOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E2E6EB8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Person.Handle.Kind()
{
  return &type metadata for Person.Handle.Kind;
}

unint64_t sub_24E2E6EF0()
{
  unint64_t result = qword_2698CB790;
  if (!qword_2698CB790)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2698CB788);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB790);
  }
  return result;
}

uint64_t Person.Section.title.getter()
{
  if (!*v0)
  {
    if (qword_2698CA500 != -1) {
      swift_once();
    }
    uint64_t v1 = (void *)qword_2698D1E70;
    if (qword_2698D1E70) {
      goto LABEL_10;
    }
    goto LABEL_14;
  }
  if (*v0 != 1)
  {
    if (qword_2698CA500 != -1) {
      swift_once();
    }
    uint64_t v1 = (void *)qword_2698D1E70;
    if (qword_2698D1E70) {
      goto LABEL_10;
    }
LABEL_14:
    unsigned int v4 = self;
    swift_bridgeObjectRetain();
    id v3 = objc_msgSend(v4, sel_mainBundle);
    id v2 = 0;
    goto LABEL_15;
  }
  if (qword_2698CA500 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)qword_2698D1E70;
  if (!qword_2698D1E70) {
    goto LABEL_14;
  }
LABEL_10:
  swift_bridgeObjectRetain();
  id v2 = v1;
  id v3 = v2;
LABEL_15:
  id v5 = v2;
  unsigned int v6 = (void *)sub_24E2F0E90();
  BOOL v7 = (void *)sub_24E2F0E90();
  id v8 = objc_msgSend(v3, sel_localizedStringForKey_value_table_, v6, 0, v7);

  uint64_t v9 = sub_24E2F0EC0();
  swift_bridgeObjectRelease();

  return v9;
}

uint64_t sub_24E2E7214(uint64_t a1)
{
  uint64_t v2 = sub_24E2F1500();
  return MEMORY[0x270F9EB78](a1, v2);
}

Swift::Bool __swiftcall Person.contains(search:)(Swift::String search)
{
  uint64_t v1 = HIBYTE(search._object) & 0xF;
  if (((uint64_t)search._object & 0x2000000000000000) == 0) {
    uint64_t v1 = search._countAndFlagsBits & 0xFFFFFFFFFFFFLL;
  }
  if (v1)
  {
    object = search._object;
    uint64_t countAndFlagsBits = search._countAndFlagsBits;
    sub_24E2AF0F8();
    char v4 = sub_24E2F1250();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v5._uint64_t countAndFlagsBits = countAndFlagsBits;
    v5._object = object;
    LOBYTE(object) = Person.AssociatedHandles.contains(search:)(v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v6 = v4 | object;
  }
  else
  {
    char v6 = 1;
  }
  return v6 & 1;
}

uint64_t sub_24E2E7370(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2) {
    return 1;
  }
  id v3 = (void *)a2;
  sub_24E2AF0F8();
  unsigned __int8 v5 = sub_24E2F1250();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6._uint64_t countAndFlagsBits = a1;
  v6._object = v3;
  LOBYTE(v3) = Person.AssociatedHandles.contains(search:)(v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (v5 | v3) & 1;
}

uint64_t Person.Section.sortOrder.getter()
{
  return *v0 + 48;
}

void Person.Section.category.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

void *static Person.Section.allCases.getter()
{
  return &unk_27003ADF0;
}

void sub_24E2E7488(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_24E2E7494()
{
  return *v0 + 48;
}

void sub_24E2E74A4(void *a1@<X8>)
{
  *a1 = &unk_27003ABE8;
}

uint64_t Person.listSection(enabledSections:)@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v5 = type metadata accessor for Person.Relationship.Follower(0);
  MEMORY[0x270FA5388](v5);
  BOOL v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Person();
  uint64_t v9 = v2 + *(int *)(v8 + 32);
  uint64_t v10 = type metadata accessor for Person.Relationship(0);
  sub_24E2E89AC(v9 + *(int *)(v10 + 20), (uint64_t)v7, type metadata accessor for Person.Relationship.Follower);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if ((result - 1) >= 2)
  {
    if (!result)
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20);
      sub_24E296710((uint64_t)&v7[*(int *)(v13 + 48)], &qword_2698CAE18);
      uint64_t result = sub_24E296710((uint64_t)v7, &qword_2698CAE18);
    }
  }
  else
  {
    sub_24E296710((uint64_t)v7, &qword_2698CAE18);
    uint64_t result = sub_24E2D9470(0, a1);
    char v12 = 0;
    if (result) {
      goto LABEL_9;
    }
  }
  if ((*(unsigned char *)(v2 + *(int *)(v8 + 36) + 8) & 1) != 0
    || (char v12 = 1, result = sub_24E2D9470(1, a1), (result & 1) == 0))
  {
    char v12 = 2;
  }
LABEL_9:
  *a2 = v12;
  return result;
}

void static Person.Tag.default.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t Person.Tag.title.getter()
{
  if ((*v0 & 1) == 0)
  {
    if (qword_2698CA500 != -1) {
      swift_once();
    }
    uint64_t v1 = (void *)qword_2698D1E70;
    if (qword_2698D1E70) {
      goto LABEL_9;
    }
LABEL_10:
    char v4 = self;
    swift_bridgeObjectRetain();
    id v3 = objc_msgSend(v4, sel_mainBundle);
    id v2 = 0;
    goto LABEL_11;
  }
  if (qword_2698CA500 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)qword_2698D1E70;
  if (!qword_2698D1E70) {
    goto LABEL_10;
  }
LABEL_9:
  swift_bridgeObjectRetain();
  id v2 = v1;
  id v3 = v2;
LABEL_11:
  id v5 = v2;
  uint64_t v6 = (void *)sub_24E2F0E90();
  BOOL v7 = (void *)sub_24E2F0E90();
  id v8 = objc_msgSend(v3, sel_localizedStringForKey_value_table_, v6, 0, v7);

  uint64_t v9 = sub_24E2F0EC0();
  swift_bridgeObjectRelease();

  return v9;
}

BOOL static Person.Tag.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t Person.Tag.hash(into:)()
{
  return sub_24E2F14B0();
}

void *static Person.Tag.allCases.getter()
{
  return &unk_27003AE18;
}

uint64_t Person.Tag.hashValue.getter()
{
  return sub_24E2F14D0();
}

void sub_24E2E78C8(void *a1@<X8>)
{
  *a1 = &unk_27003AB98;
}

uint64_t Person.contains(tag:)(unsigned char *a1)
{
  if (*a1 == 1) {
    char v2 = *(unsigned char *)(v1 + *(int *)(type metadata accessor for Person() + 36) + 8) ^ 1;
  }
  else {
    char v2 = 1;
  }
  return v2 & 1;
}

uint64_t sub_24E2E791C(unsigned char *a1, uint64_t a2)
{
  if (*a1 == 1) {
    return (*(unsigned __int8 *)(v2 + *(int *)(a2 + 36) + 8) ^ 1) & 1;
  }
  else {
    return 1;
  }
}

uint64_t Person.Sort.sortDescriptor<A>(rootKeyPath:)(uint64_t a1, uint64_t a2)
{
  switch(*v2)
  {
    case 3:
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v5 = sub_24E2E7214(KeyPath);
      swift_release();
      unint64_t v7 = sub_24E2E80DC();
      uint64_t v6 = &type metadata for Person.DisplayName;
      break;
    case 4:
      uint64_t v9 = swift_getKeyPath();
      uint64_t v5 = sub_24E2E7214(v9);
      swift_release();
      unint64_t v7 = sub_24E2E807C();
      uint64_t v6 = &type metadata for Person.UniqueIdentifier;
      break;
    default:
      uint64_t v4 = swift_getKeyPath();
      uint64_t v5 = sub_24E2E7214(v4);
      swift_release();
      uint64_t v6 = (ValueMetadata *)MEMORY[0x263F8D6C8];
      unint64_t v7 = MEMORY[0x263F8D6E0];
      break;
  }
  return sub_24E2D9D5C(v5, 0, a2, (uint64_t)v6, v7);
}

uint64_t sub_24E2E7A98()
{
  uint64_t v1 = type metadata accessor for Person.Relationship.Follower(0);
  MEMORY[0x270FA5388](v1);
  id v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = v0 + *(int *)(type metadata accessor for Person() + 32);
  uint64_t v5 = type metadata accessor for Person.Relationship(0);
  sub_24E2E89AC(v4 + *(int *)(v5 + 20), (uint64_t)v3, type metadata accessor for Person.Relationship.Follower);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((EnumCaseMultiPayload - 1) >= 2)
  {
    if (EnumCaseMultiPayload) {
      return 0;
    }
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20);
    sub_24E296710((uint64_t)&v3[*(int *)(v8 + 48)], &qword_2698CAE18);
    uint64_t v7 = 0;
  }
  else
  {
    uint64_t v7 = 1;
  }
  sub_24E296710((uint64_t)v3, &qword_2698CAE18);
  return v7;
}

uint64_t sub_24E2E7BAC@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Person.Relationship.Follower(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1 + *(int *)(type metadata accessor for Person() + 32);
  uint64_t v8 = type metadata accessor for Person.Relationship(0);
  sub_24E2E89AC(v7 + *(int *)(v8 + 20), (uint64_t)v6, type metadata accessor for Person.Relationship.Follower);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if ((result - 1) >= 2)
  {
    if (result)
    {
      char v10 = 0;
      goto LABEL_7;
    }
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20);
    sub_24E296710((uint64_t)&v6[*(int *)(v11 + 48)], &qword_2698CAE18);
    char v10 = 0;
  }
  else
  {
    char v10 = 1;
  }
  uint64_t result = sub_24E296710((uint64_t)v6, &qword_2698CAE18);
LABEL_7:
  *a2 = v10;
  return result;
}

uint64_t sub_24E2E7CC8()
{
  uint64_t v1 = (unsigned char *)(v0 + *(int *)(type metadata accessor for Person() + 36));
  if (v1[8]) {
    return 0x7FFFFFFFFFFFFFFFLL;
  }
  else {
    return *(void *)v1;
  }
}

uint64_t sub_24E2E7D00()
{
  uint64_t v1 = type metadata accessor for Person.Relationship.Following(0);
  uint64_t v2 = MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v18 - v5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CB830);
  uint64_t v8 = v7 - 8;
  MEMORY[0x270FA5388](v7);
  char v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = v0 + *(int *)(type metadata accessor for Person() + 32);
  uint64_t v12 = type metadata accessor for Person.Relationship(0);
  uint64_t v13 = (uint64_t)&v10[*(int *)(v8 + 56)];
  sub_24E2E89AC(v11 + *(int *)(v12 + 20), (uint64_t)v10, type metadata accessor for Person.Relationship.Follower);
  sub_24E2E89AC(v11, v13, type metadata accessor for Person.Relationship.Following);
  type metadata accessor for Person.Relationship.Follower(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    sub_24E296710((uint64_t)v10, &qword_2698CAE18);
    sub_24E2E2504(v13, type metadata accessor for Person.Relationship.Following);
    return 1;
  }
  if (EnumCaseMultiPayload == 2)
  {
    sub_24E296710((uint64_t)v10, &qword_2698CAE18);
    sub_24E2E2504(v13, type metadata accessor for Person.Relationship.Following);
    return 0;
  }
  sub_24E2E89AC(v11, (uint64_t)v6, type metadata accessor for Person.Relationship.Following);
  char MyCore6PersonV12RelationshipV9FollowingO2eeoiySbAG_AGtFZ_0 = _s10FindMyCore6PersonV12RelationshipV9FollowingO2eeoiySbAG_AGtFZ_0((uint64_t)v6, v13);
  sub_24E2E2504((uint64_t)v6, type metadata accessor for Person.Relationship.Following);
  if (MyCore6PersonV12RelationshipV9FollowingO2eeoiySbAG_AGtFZ_0)
  {
    sub_24E2E89AC(v11, (uint64_t)v4, type metadata accessor for Person.Relationship.Following);
    if (!swift_getEnumCaseMultiPayload())
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20);
      sub_24E296710((uint64_t)&v4[*(int *)(v17 + 48)], &qword_2698CAE18);
      sub_24E296710((uint64_t)v4, &qword_2698CAE18);
      sub_24E2E2504(v13, type metadata accessor for Person.Relationship.Following);
      sub_24E2E2504((uint64_t)v10, type metadata accessor for Person.Relationship.Follower);
      return 2;
    }
    sub_24E2E2504((uint64_t)v4, type metadata accessor for Person.Relationship.Following);
  }
  sub_24E296710((uint64_t)v10, &qword_2698CB830);
  return 3;
}

uint64_t sub_24E2E8000@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 72);
  *a1 = *(void *)(v1 + 64);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

BOOL static Person.Sort.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t Person.Sort.hash(into:)()
{
  return sub_24E2F14B0();
}

void *static Person.Sort.allCases.getter()
{
  return &unk_27003AE40;
}

void sub_24E2E8060(void *a1@<X8>)
{
  *a1 = &unk_27003ABC0;
}

uint64_t sub_24E2E8070@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

unint64_t sub_24E2E807C()
{
  unint64_t result = qword_2698CB798;
  if (!qword_2698CB798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB798);
  }
  return result;
}

uint64_t sub_24E2E80D0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 64);
  uint64_t v3 = *(void *)(a1 + 72);
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

unint64_t sub_24E2E80DC()
{
  unint64_t result = qword_2698CB7A0;
  if (!qword_2698CB7A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB7A0);
  }
  return result;
}

uint64_t sub_24E2E8130@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_24E2E7D00();
  *a1 = result;
  return result;
}

uint64_t sub_24E2E815C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = type metadata accessor for Person();
  uint64_t v5 = a1 + *(int *)(result + 36);
  uint64_t v6 = *(void *)v5;
  BOOL v7 = *(unsigned char *)(v5 + 8) == 0;
  uint64_t v8 = 0x7FFFFFFFFFFFFFFFLL;
  if (v7) {
    uint64_t v8 = v6;
  }
  *a2 = v8;
  return result;
}

unint64_t sub_24E2E81B4()
{
  unint64_t result = qword_2698CB7A8;
  if (!qword_2698CB7A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB7A8);
  }
  return result;
}

unint64_t sub_24E2E820C()
{
  unint64_t result = qword_2698CB7B0;
  if (!qword_2698CB7B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB7B0);
  }
  return result;
}

unint64_t sub_24E2E8264(uint64_t a1)
{
  unint64_t result = sub_24E2AF1BC();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_24E2E828C()
{
  return sub_24E2DA59C(&qword_2698CB7B8, &qword_2698CB7C0);
}

unint64_t sub_24E2E82B8()
{
  unint64_t result = qword_2698CB7C8;
  if (!qword_2698CB7C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB7C8);
  }
  return result;
}

unint64_t sub_24E2E8310()
{
  unint64_t result = qword_2698CB7D0;
  if (!qword_2698CB7D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB7D0);
  }
  return result;
}

uint64_t sub_24E2E8364(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24E2E853C(a1, a2, a3, (uint64_t (*)(void))sub_24E2E8390, (uint64_t (*)(void))sub_24E2E83E4);
}

unint64_t sub_24E2E8390()
{
  unint64_t result = qword_2698CB7D8;
  if (!qword_2698CB7D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB7D8);
  }
  return result;
}

unint64_t sub_24E2E83E4()
{
  unint64_t result = qword_2698CB7E0;
  if (!qword_2698CB7E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB7E0);
  }
  return result;
}

uint64_t sub_24E2E8438()
{
  return sub_24E2DA59C(&qword_2698CB7E8, &qword_2698CB7F0);
}

unint64_t sub_24E2E8464()
{
  unint64_t result = qword_2698CB7F8;
  if (!qword_2698CB7F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB7F8);
  }
  return result;
}

unint64_t sub_24E2E84BC()
{
  unint64_t result = qword_2698CB800;
  if (!qword_2698CB800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB800);
  }
  return result;
}

uint64_t sub_24E2E8510(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24E2E853C(a1, a2, a3, (uint64_t (*)(void))sub_24E2E8578, (uint64_t (*)(void))sub_24E2E85CC);
}

uint64_t sub_24E2E853C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  *(void *)(a1 + 8) = a4();
  uint64_t result = a5();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_24E2E8578()
{
  unint64_t result = qword_2698CB808;
  if (!qword_2698CB808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB808);
  }
  return result;
}

unint64_t sub_24E2E85CC()
{
  unint64_t result = qword_2698CB810;
  if (!qword_2698CB810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB810);
  }
  return result;
}

uint64_t sub_24E2E8620()
{
  return sub_24E2DA59C(&qword_2698CB818, &qword_2698CB820);
}

unint64_t sub_24E2E864C()
{
  unint64_t result = qword_2698CB828;
  if (!qword_2698CB828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB828);
  }
  return result;
}

unsigned char *_s7SectionOwst_1(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E2E876CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Person.Section()
{
  return &type metadata for Person.Section;
}

unsigned char *_s3TagOwst_2(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E2E8870);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Person.Tag()
{
  return &type metadata for Person.Tag;
}

unsigned char *_s4SortOwst_2(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24E2E8974);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Person.Sort()
{
  return &type metadata for Person.Sort;
}

uint64_t sub_24E2E89AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t Person.Relationship.init(following:follower:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_24E2E8AC8(a1, a3, type metadata accessor for Person.Relationship.Following);
  uint64_t v5 = type metadata accessor for Person.Relationship(0);
  return sub_24E2E8AC8(a2, a3 + *(int *)(v5 + 20), type metadata accessor for Person.Relationship.Follower);
}

uint64_t type metadata accessor for Person.Relationship.Following(uint64_t a1)
{
  return sub_24E2DBA7C(a1, (uint64_t *)&unk_2698CB860);
}

uint64_t type metadata accessor for Person.Relationship(uint64_t a1)
{
  return sub_24E2DBA7C(a1, (uint64_t *)&unk_2698CB838);
}

uint64_t sub_24E2E8AC8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for Person.Relationship.Follower(uint64_t a1)
{
  return sub_24E2DBA7C(a1, (uint64_t *)&unk_2698CB848);
}

uint64_t static Person.Relationship.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((_s10FindMyCore6PersonV12RelationshipV9FollowingO2eeoiySbAG_AGtFZ_0(a1, a2) & 1) == 0) {
    return 0;
  }
  uint64_t v4 = *(int *)(type metadata accessor for Person.Relationship(0) + 20);
  return _s10FindMyCore6PersonV12RelationshipV8FollowerO2eeoiySbAG_AGtFZ_0(a1 + v4, a2 + v4);
}

uint64_t Person.Relationship.following.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24E2EA958(v1, a1, type metadata accessor for Person.Relationship.Following);
}

uint64_t Person.Relationship.following.setter(uint64_t a1)
{
  return sub_24E2EA9C0(a1, v1, type metadata accessor for Person.Relationship.Following);
}

uint64_t (*Person.Relationship.following.modify())()
{
  return nullsub_1;
}

uint64_t Person.Relationship.follower.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for Person.Relationship(0);
  return sub_24E2EA958(v1 + *(int *)(v3 + 20), a1, type metadata accessor for Person.Relationship.Follower);
}

uint64_t Person.Relationship.follower.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Person.Relationship(0);
  return sub_24E2EA9C0(a1, v1 + *(int *)(v3 + 20), type metadata accessor for Person.Relationship.Follower);
}

uint64_t (*Person.Relationship.follower.modify())()
{
  return nullsub_1;
}

uint64_t Person.Relationship.isMutual.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Person.Relationship.Follower(0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Person.Relationship(0);
  MEMORY[0x270FA5388](v5);
  BOOL v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Person.Relationship.Following(0);
  MEMORY[0x270FA5388](v8);
  char v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24E2EA958(v1, (uint64_t)v10, type metadata accessor for Person.Relationship.Following);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_24E2EAA28((uint64_t)v10, type metadata accessor for Person.Relationship.Following);
    sub_24E2EA958(v1, (uint64_t)v7, type metadata accessor for Person.Relationship);
  }
  else
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20);
    sub_24E296710((uint64_t)&v10[*(int *)(v11 + 48)], &qword_2698CAE18);
    sub_24E296710((uint64_t)v10, &qword_2698CAE18);
    sub_24E2EA958(v1, (uint64_t)v7, type metadata accessor for Person.Relationship);
    sub_24E2EA958((uint64_t)&v7[*(int *)(v5 + 20)], (uint64_t)v4, type metadata accessor for Person.Relationship.Follower);
    if (!swift_getEnumCaseMultiPayload())
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20);
      sub_24E296710((uint64_t)&v4[*(int *)(v14 + 48)], &qword_2698CAE18);
      sub_24E296710((uint64_t)v4, &qword_2698CAE18);
      uint64_t v12 = 1;
      goto LABEL_6;
    }
    sub_24E2EAA28((uint64_t)v4, type metadata accessor for Person.Relationship.Follower);
  }
  uint64_t v12 = 0;
LABEL_6:
  sub_24E2EAA28((uint64_t)v7, type metadata accessor for Person.Relationship);
  return v12;
}

BOOL Person.Relationship.Following.isActive.getter()
{
  return sub_24E2E9020(type metadata accessor for Person.Relationship.Following, type metadata accessor for Person.Relationship.Following, type metadata accessor for Person.Relationship.Following);
}

BOOL Person.Relationship.Follower.isActive.getter()
{
  return sub_24E2E9020(type metadata accessor for Person.Relationship.Follower, type metadata accessor for Person.Relationship.Follower, type metadata accessor for Person.Relationship.Follower);
}

BOOL sub_24E2E9020(uint64_t (*a1)(void), uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  uint64_t v6 = v3;
  uint64_t v7 = a1(0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v13 - v8;
  sub_24E2EA958(v6, (uint64_t)&v13 - v8, a2);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    sub_24E2EAA28((uint64_t)v9, a3);
  }
  else
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20);
    sub_24E296710((uint64_t)&v9[*(int *)(v11 + 48)], &qword_2698CAE18);
    sub_24E296710((uint64_t)v9, &qword_2698CAE18);
  }
  return EnumCaseMultiPayload == 0;
}

uint64_t sub_24E2E9120(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((static Person.Relationship.Following.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  uint64_t v6 = *(int *)(a3 + 20);
  return static Person.Relationship.Follower.== infix(_:_:)(a1 + v6, a2 + v6);
}

BOOL Person.Relationship.Follower.isPendingRequest.getter()
{
  return sub_24E2E920C(type metadata accessor for Person.Relationship.Follower, type metadata accessor for Person.Relationship.Follower, type metadata accessor for Person.Relationship.Follower);
}

BOOL Person.Relationship.Following.isPendingRequest.getter()
{
  return sub_24E2E920C(type metadata accessor for Person.Relationship.Following, type metadata accessor for Person.Relationship.Following, type metadata accessor for Person.Relationship.Following);
}

BOOL sub_24E2E920C(uint64_t (*a1)(void), uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  uint64_t v6 = v3;
  uint64_t v7 = a1(0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v12 - v8;
  sub_24E2EA958(v6, (uint64_t)&v12 - v8, a2);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1) {
    sub_24E296710((uint64_t)v9, &qword_2698CAE18);
  }
  else {
    sub_24E2EAA28((uint64_t)v9, a3);
  }
  return EnumCaseMultiPayload == 1;
}

uint64_t _s10FindMyCore6PersonV12RelationshipV9FollowingO2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v89 = (char *)a1;
  uint64_t v90 = (char *)a2;
  uint64_t v86 = sub_24E2F0930();
  uint64_t v88 = *(void *)(v86 - 8);
  MEMORY[0x270FA5388](v86);
  uint64_t v82 = (char *)&v79 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CB870);
  uint64_t v3 = MEMORY[0x270FA5388](v87);
  uint64_t v84 = (char *)&v79 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v80 = (uint64_t)&v79 - v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v85 = (uint64_t)&v79 - v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v81 = (uint64_t)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v83 = (char *)&v79 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v79 = (uint64_t)&v79 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v79 - v16;
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  BOOL v20 = (char *)&v79 - v19;
  uint64_t v21 = MEMORY[0x270FA5388](v18);
  uint64_t v23 = (char *)&v79 - v22;
  MEMORY[0x270FA5388](v21);
  unint64_t v25 = (char *)&v79 - v24;
  uint64_t v26 = type metadata accessor for Person.Relationship.Following(0);
  uint64_t v27 = MEMORY[0x270FA5388](v26);
  uint64_t v29 = (char *)&v79 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27);
  int64_t v31 = (char *)&v79 - v30;
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CB888);
  uint64_t v33 = MEMORY[0x270FA5388](v32 - 8);
  uint64_t v35 = (char *)&v79 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = (uint64_t)&v35[*(int *)(v33 + 56)];
  sub_24E2EA958((uint64_t)v89, (uint64_t)v35, type metadata accessor for Person.Relationship.Following);
  sub_24E2EA958((uint64_t)v90, v36, type metadata accessor for Person.Relationship.Following);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    uint64_t v84 = v17;
    uint64_t v89 = v20;
    uint64_t v90 = v23;
    sub_24E2EA958((uint64_t)v35, (uint64_t)v31, type metadata accessor for Person.Relationship.Following);
    uint64_t v46 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
    uint64_t v47 = (uint64_t)&v31[v46];
    if (swift_getEnumCaseMultiPayload())
    {
      sub_24E296710((uint64_t)&v31[v46], &qword_2698CAE18);
LABEL_12:
      sub_24E296710((uint64_t)v31, &qword_2698CAE18);
      goto LABEL_13;
    }
    uint64_t v83 = v35;
    uint64_t v50 = v36 + v46;
    uint64_t v51 = v36;
    uint64_t v52 = (uint64_t)v25;
    sub_24E2EFE10(v51, (uint64_t)v25);
    uint64_t v53 = (uint64_t)v90;
    sub_24E2EFE10(v47, (uint64_t)v90);
    uint64_t v54 = v50;
    uint64_t v55 = (uint64_t)v89;
    sub_24E2EFE10(v54, (uint64_t)v89);
    uint64_t v56 = v85;
    uint64_t v57 = v85 + *(int *)(v87 + 48);
    sub_24E2EFE10((uint64_t)v31, v85);
    sub_24E2EFE78((uint64_t)v25, v57);
    char v58 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v88 + 48);
    uint64_t v59 = v86;
    if (v58(v56, 1, v86) == 1)
    {
      if (v58(v57, 1, v59) == 1)
      {
        sub_24E296710(v85, &qword_2698CAE18);
LABEL_28:
        uint64_t v69 = v80;
        uint64_t v70 = v80 + *(int *)(v87 + 48);
        sub_24E2EFE78(v53, v80);
        sub_24E2EFE78(v55, v70);
        if (v58(v69, 1, v59) == 1)
        {
          sub_24E296710(v55, &qword_2698CAE18);
          sub_24E296710(v53, &qword_2698CAE18);
          sub_24E296710(v52, &qword_2698CAE18);
          int v71 = v58(v70, 1, v59);
          uint64_t v38 = (uint64_t)v83;
          if (v71 == 1)
          {
            uint64_t v45 = v69;
            goto LABEL_31;
          }
        }
        else
        {
          uint64_t v72 = v79;
          sub_24E2EFE78(v69, v79);
          int v73 = v58(v70, 1, v59);
          uint64_t v74 = v88;
          if (v73 != 1)
          {
            uint64_t v75 = v55;
            uint64_t v76 = v82;
            (*(void (**)(char *, uint64_t, uint64_t))(v88 + 32))(v82, v70, v59);
            sub_24E2EFEE0();
            char v77 = sub_24E2F0E20();
            uint64_t v78 = *(void (**)(char *, uint64_t))(v74 + 8);
            v78(v76, v59);
            sub_24E296710(v75, &qword_2698CAE18);
            sub_24E296710((uint64_t)v90, &qword_2698CAE18);
            sub_24E296710(v52, &qword_2698CAE18);
            v78((char *)v72, v59);
            sub_24E296710(v69, &qword_2698CAE18);
            uint64_t v38 = (uint64_t)v83;
            if (v77) {
              goto LABEL_32;
            }
            goto LABEL_39;
          }
          sub_24E296710(v55, &qword_2698CAE18);
          sub_24E296710((uint64_t)v90, &qword_2698CAE18);
          sub_24E296710(v52, &qword_2698CAE18);
          (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v72, v59);
          uint64_t v38 = (uint64_t)v83;
        }
        sub_24E296710(v69, &qword_2698CB870);
LABEL_39:
        sub_24E2EAA28(v38, type metadata accessor for Person.Relationship.Following);
        return 0;
      }
    }
    else
    {
      uint64_t v61 = (uint64_t)v84;
      sub_24E2EFE78(v56, (uint64_t)v84);
      if (v58(v57, 1, v59) != 1)
      {
        uint64_t v65 = v88;
        uint64_t v66 = v82;
        (*(void (**)(char *, uint64_t, uint64_t))(v88 + 32))(v82, v57, v59);
        sub_24E2EFEE0();
        char v67 = sub_24E2F0E20();
        uint64_t v68 = *(void (**)(char *, uint64_t))(v65 + 8);
        v68(v66, v59);
        v68((char *)v61, v59);
        uint64_t v55 = (uint64_t)v89;
        uint64_t v53 = (uint64_t)v90;
        uint64_t v52 = (uint64_t)v25;
        sub_24E296710(v56, &qword_2698CAE18);
        if (v67) {
          goto LABEL_28;
        }
LABEL_24:
        sub_24E296710(v55, &qword_2698CAE18);
        sub_24E296710(v53, &qword_2698CAE18);
        sub_24E296710(v52, &qword_2698CAE18);
        sub_24E2EAA28((uint64_t)v83, type metadata accessor for Person.Relationship.Following);
        return 0;
      }
      (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v61, v59);
    }
    sub_24E296710(v85, &qword_2698CB870);
    goto LABEL_24;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_24E2EA958((uint64_t)v35, (uint64_t)v29, type metadata accessor for Person.Relationship.Following);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v38 = (uint64_t)v35;
      uint64_t v39 = (uint64_t)v83;
      sub_24E2EFE10(v36, (uint64_t)v83);
      uint64_t v40 = (uint64_t)v84;
      uint64_t v41 = (uint64_t)&v84[*(int *)(v87 + 48)];
      sub_24E2EFE10((uint64_t)v29, (uint64_t)v84);
      sub_24E2EFE78(v39, v41);
      uint64_t v42 = v88;
      uint64_t v43 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v88 + 48);
      uint64_t v44 = v86;
      if (v43(v40, 1, v86) == 1)
      {
        sub_24E296710(v39, &qword_2698CAE18);
        if (v43(v41, 1, v44) == 1)
        {
          uint64_t v45 = v40;
LABEL_31:
          sub_24E296710(v45, &qword_2698CAE18);
          goto LABEL_32;
        }
      }
      else
      {
        uint64_t v60 = v81;
        sub_24E2EFE78(v40, v81);
        if (v43(v41, 1, v44) != 1)
        {
          uint64_t v62 = v82;
          (*(void (**)(char *, uint64_t, uint64_t))(v42 + 32))(v82, v41, v44);
          sub_24E2EFEE0();
          char v63 = sub_24E2F0E20();
          uint64_t v64 = *(void (**)(char *, uint64_t))(v42 + 8);
          v64(v62, v44);
          sub_24E296710(v39, &qword_2698CAE18);
          v64((char *)v60, v44);
          sub_24E296710(v40, &qword_2698CAE18);
          if (v63)
          {
LABEL_32:
            uint64_t v48 = v38;
            goto LABEL_33;
          }
          goto LABEL_39;
        }
        sub_24E296710(v39, &qword_2698CAE18);
        (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v60, v44);
      }
      sub_24E296710(v40, &qword_2698CB870);
      goto LABEL_39;
    }
    int64_t v31 = v29;
    goto LABEL_12;
  }
  if (swift_getEnumCaseMultiPayload() != 2)
  {
LABEL_13:
    sub_24E296710((uint64_t)v35, &qword_2698CB888);
    return 0;
  }
  uint64_t v48 = (uint64_t)v35;
LABEL_33:
  sub_24E2EAA28(v48, type metadata accessor for Person.Relationship.Following);
  return 1;
}

uint64_t _s10FindMyCore6PersonV12RelationshipV8FollowerO2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v110 = a2;
  uint64_t v3 = sub_24E2F0930();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v108 = v3;
  uint64_t v109 = v4;
  MEMORY[0x270FA5388](v3);
  uint64_t v100 = (char *)&v95 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CB870);
  uint64_t v6 = MEMORY[0x270FA5388](v107);
  uint64_t v102 = (uint64_t)&v95 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v101 = (uint64_t)&v95 - v9;
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v96 = (uint64_t)&v95 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v105 = (uint64_t)&v95 - v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v99 = (uint64_t)&v95 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v95 - v17;
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v98 = (uint64_t)&v95 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v95 - v22;
  uint64_t v24 = MEMORY[0x270FA5388](v21);
  uint64_t v95 = (uint64_t)&v95 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v97 = (uint64_t)&v95 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v106 = (uint64_t)&v95 - v29;
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v103 = (uint64_t)&v95 - v31;
  MEMORY[0x270FA5388](v30);
  uint64_t v104 = (uint64_t)&v95 - v32;
  uint64_t v33 = type metadata accessor for Person.Relationship.Follower(0);
  uint64_t v34 = MEMORY[0x270FA5388](v33);
  uint64_t v36 = (char *)&v95 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = MEMORY[0x270FA5388](v34);
  uint64_t v39 = (char *)&v95 - v38;
  MEMORY[0x270FA5388](v37);
  uint64_t v41 = (char *)&v95 - v40;
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CB878);
  uint64_t v43 = MEMORY[0x270FA5388](v42 - 8);
  uint64_t v45 = (char *)&v95 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = (uint64_t)&v45[*(int *)(v43 + 56)];
  sub_24E2EA958(a1, (uint64_t)v45, type metadata accessor for Person.Relationship.Follower);
  sub_24E2EA958(v110, v46, type metadata accessor for Person.Relationship.Follower);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_24E2EA958((uint64_t)v45, (uint64_t)v39, type metadata accessor for Person.Relationship.Follower);
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        uint64_t v41 = v39;
        goto LABEL_17;
      }
      sub_24E2EFE10(v46, (uint64_t)v23);
      uint64_t v48 = v101;
      uint64_t v49 = v101 + *(int *)(v107 + 48);
      sub_24E2EFE10((uint64_t)v39, v101);
      sub_24E2EFE78((uint64_t)v23, v49);
      uint64_t v50 = v108;
      uint64_t v51 = v109;
      uint64_t v52 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v109 + 48);
      if (v52(v48, 1, v108) == 1)
      {
        sub_24E296710((uint64_t)v23, &qword_2698CAE18);
        if (v52(v49, 1, v50) == 1) {
          goto LABEL_11;
        }
        goto LABEL_26;
      }
      uint64_t v68 = v98;
      sub_24E2EFE78(v48, v98);
      if (v52(v49, 1, v50) == 1)
      {
        sub_24E296710((uint64_t)v23, &qword_2698CAE18);
        (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v68, v50);
        goto LABEL_26;
      }
      int v73 = v100;
      (*(void (**)(char *, uint64_t, uint64_t))(v51 + 32))(v100, v49, v50);
      sub_24E2EFEE0();
      char v74 = sub_24E2F0E20();
      uint64_t v75 = *(void (**)(char *, uint64_t))(v51 + 8);
      v75(v73, v50);
      sub_24E296710((uint64_t)v23, &qword_2698CAE18);
      uint64_t v76 = v68;
      goto LABEL_33;
    case 2u:
      sub_24E2EA958((uint64_t)v45, (uint64_t)v36, type metadata accessor for Person.Relationship.Follower);
      if (swift_getEnumCaseMultiPayload() != 2)
      {
        uint64_t v41 = v36;
        goto LABEL_17;
      }
      sub_24E2EFE10(v46, (uint64_t)v18);
      uint64_t v48 = v102;
      uint64_t v53 = v102 + *(int *)(v107 + 48);
      sub_24E2EFE10((uint64_t)v36, v102);
      sub_24E2EFE78((uint64_t)v18, v53);
      uint64_t v50 = v108;
      uint64_t v54 = v109;
      uint64_t v55 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v109 + 48);
      if (v55(v48, 1, v108) == 1)
      {
        sub_24E296710((uint64_t)v18, &qword_2698CAE18);
        if (v55(v53, 1, v50) == 1)
        {
LABEL_11:
          uint64_t v56 = v48;
          goto LABEL_12;
        }
        goto LABEL_26;
      }
      uint64_t v69 = v99;
      sub_24E2EFE78(v48, v99);
      if (v55(v53, 1, v50) == 1)
      {
        sub_24E296710((uint64_t)v18, &qword_2698CAE18);
        (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v69, v50);
LABEL_26:
        uint64_t v70 = &qword_2698CB870;
        uint64_t v71 = v48;
        goto LABEL_43;
      }
      char v77 = v100;
      (*(void (**)(char *, uint64_t, uint64_t))(v54 + 32))(v100, v53, v50);
      sub_24E2EFEE0();
      char v74 = sub_24E2F0E20();
      uint64_t v75 = *(void (**)(char *, uint64_t))(v54 + 8);
      v75(v77, v50);
      sub_24E296710((uint64_t)v18, &qword_2698CAE18);
      uint64_t v76 = v69;
LABEL_33:
      v75((char *)v76, v50);
      uint64_t v78 = v48;
      goto LABEL_34;
    case 3u:
      if (swift_getEnumCaseMultiPayload() == 3) {
        goto LABEL_35;
      }
      goto LABEL_18;
    default:
      sub_24E2EA958((uint64_t)v45, (uint64_t)v41, type metadata accessor for Person.Relationship.Follower);
      uint64_t v47 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
      if (swift_getEnumCaseMultiPayload())
      {
        sub_24E296710((uint64_t)&v41[v47], &qword_2698CAE18);
LABEL_17:
        sub_24E296710((uint64_t)v41, &qword_2698CAE18);
LABEL_18:
        sub_24E296710((uint64_t)v45, &qword_2698CB878);
        return 0;
      }
      uint64_t v57 = v46 + v47;
      uint64_t v58 = v104;
      sub_24E2EFE10(v46, v104);
      uint64_t v59 = v103;
      sub_24E2EFE10((uint64_t)&v41[v47], v103);
      sub_24E2EFE10(v57, v106);
      uint64_t v60 = v107;
      uint64_t v61 = v105 + *(int *)(v107 + 48);
      uint64_t v62 = (uint64_t)v41;
      uint64_t v63 = v105;
      sub_24E2EFE10(v62, v105);
      sub_24E2EFE78(v58, v61);
      uint64_t v64 = v108;
      uint64_t v65 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v109 + 48);
      if (v65(v63, 1, v108) == 1)
      {
        int v66 = v65(v61, 1, v64);
        uint64_t v67 = v106;
        if (v66 == 1)
        {
          sub_24E296710(v105, &qword_2698CAE18);
          goto LABEL_37;
        }
        goto LABEL_29;
      }
      uint64_t v72 = v97;
      sub_24E2EFE78(v63, v97);
      if (v65(v61, 1, v64) == 1)
      {
        (*(void (**)(uint64_t, uint64_t))(v109 + 8))(v72, v64);
        uint64_t v67 = v106;
LABEL_29:
        sub_24E296710(v105, &qword_2698CB870);
LABEL_30:
        sub_24E296710(v67, &qword_2698CAE18);
        sub_24E296710(v59, &qword_2698CAE18);
        uint64_t v71 = v58;
        uint64_t v70 = &qword_2698CAE18;
LABEL_43:
        sub_24E296710(v71, v70);
        goto LABEL_44;
      }
      uint64_t v80 = v109;
      uint64_t v81 = v100;
      (*(void (**)(char *, uint64_t, uint64_t))(v109 + 32))(v100, v61, v64);
      sub_24E2EFEE0();
      char v82 = sub_24E2F0E20();
      uint64_t v83 = *(void (**)(char *, uint64_t))(v80 + 8);
      uint64_t v84 = v81;
      uint64_t v58 = v104;
      v83(v84, v64);
      v83((char *)v72, v64);
      uint64_t v59 = v103;
      sub_24E296710(v105, &qword_2698CAE18);
      uint64_t v67 = v106;
      if ((v82 & 1) == 0) {
        goto LABEL_30;
      }
LABEL_37:
      uint64_t v85 = *(int *)(v60 + 48);
      uint64_t v86 = v59;
      uint64_t v87 = v96;
      uint64_t v88 = v96 + v85;
      sub_24E2EFE78(v86, v96);
      sub_24E2EFE78(v67, v88);
      if (v65(v87, 1, v64) == 1)
      {
        sub_24E296710(v67, &qword_2698CAE18);
        sub_24E296710(v86, &qword_2698CAE18);
        sub_24E296710(v58, &qword_2698CAE18);
        if (v65(v88, 1, v64) == 1)
        {
          uint64_t v56 = v87;
LABEL_12:
          sub_24E296710(v56, &qword_2698CAE18);
LABEL_35:
          sub_24E2EAA28((uint64_t)v45, type metadata accessor for Person.Relationship.Follower);
          return 1;
        }
        goto LABEL_42;
      }
      uint64_t v89 = v95;
      sub_24E2EFE78(v87, v95);
      int v90 = v65(v88, 1, v64);
      uint64_t v91 = v109;
      if (v90 == 1)
      {
        sub_24E296710(v67, &qword_2698CAE18);
        sub_24E296710(v103, &qword_2698CAE18);
        sub_24E296710(v104, &qword_2698CAE18);
        (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v89, v64);
LABEL_42:
        uint64_t v70 = &qword_2698CB870;
        uint64_t v71 = v87;
        goto LABEL_43;
      }
      uint64_t v92 = v67;
      uint64_t v93 = v100;
      (*(void (**)(char *, uint64_t, uint64_t))(v109 + 32))(v100, v88, v64);
      sub_24E2EFEE0();
      char v74 = sub_24E2F0E20();
      uint64_t v94 = *(void (**)(char *, uint64_t))(v91 + 8);
      v94(v93, v64);
      sub_24E296710(v92, &qword_2698CAE18);
      sub_24E296710(v103, &qword_2698CAE18);
      sub_24E296710(v104, &qword_2698CAE18);
      v94((char *)v89, v64);
      uint64_t v78 = v87;
LABEL_34:
      sub_24E296710(v78, &qword_2698CAE18);
      if (v74) {
        goto LABEL_35;
      }
LABEL_44:
      sub_24E2EAA28((uint64_t)v45, type metadata accessor for Person.Relationship.Follower);
      return 0;
  }
}

uint64_t sub_24E2EA958(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24E2EA9C0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_24E2EAA28(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t *_s12RelationshipVwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  uint64_t v7 = type metadata accessor for Person.Relationship.Following(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v15 = sub_24E2F0930();
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v16 + 48))(a2, 1, v15))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
      memcpy(a1, a2, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v16 + 16))(a1, a2, v15);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
    }
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
      goto LABEL_17;
    }
    uint64_t v9 = sub_24E2F0930();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v10 + 48);
    if (v11(a2, 1, v9))
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
      memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v10 + 16))(a1, a2, v9);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
    }
    uint64_t v18 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
    uint64_t v19 = (char *)a1 + v18;
    uint64_t v20 = (char *)a2 + v18;
    if (v11((uint64_t *)((char *)a2 + v18), 1, v9))
    {
      uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v19, v20, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v19, 0, 1, v9);
    }
  }
  swift_storeEnumTagMultiPayload();
LABEL_17:
  uint64_t v22 = *(int *)(a3 + 20);
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = type metadata accessor for Person.Relationship.Follower(0);
  int v26 = swift_getEnumCaseMultiPayload();
  switch(v26)
  {
    case 2:
      uint64_t v31 = sub_24E2F0930();
      uint64_t v32 = *(void *)(v31 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v24, 1, v31))
      {
LABEL_23:
        uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(v23, v24, *(void *)(*(void *)(v33 - 8) + 64));
LABEL_33:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
LABEL_30:
      (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v23, v24, v31);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v23, 0, 1, v31);
      goto LABEL_33;
    case 1:
      uint64_t v31 = sub_24E2F0930();
      uint64_t v32 = *(void *)(v31 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v24, 1, v31)) {
        goto LABEL_23;
      }
      goto LABEL_30;
    case 0:
      uint64_t v27 = sub_24E2F0930();
      uint64_t v28 = *(void *)(v27 - 8);
      uint64_t v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
      if (v29(v24, 1, v27))
      {
        uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(v23, v24, *(void *)(*(void *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v23, v24, v27);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v23, 0, 1, v27);
      }
      uint64_t v34 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
      uint64_t v35 = &v23[v34];
      uint64_t v36 = &v24[v34];
      if (v29(v36, 1, v27))
      {
        uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v35, v36, v27);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v35, 0, 1, v27);
      }
      goto LABEL_33;
  }
  memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
  return a1;
}

uint64_t _s12RelationshipVwxx(uint64_t a1, uint64_t a2)
{
  type metadata accessor for Person.Relationship.Following(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v9 = sub_24E2F0930();
    uint64_t v10 = *(void *)(v9 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9)) {
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1, v9);
    }
  }
  else if (!EnumCaseMultiPayload)
  {
    uint64_t v5 = sub_24E2F0930();
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
    if (!v7(a1, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    }
    uint64_t v8 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
    if (!v7(v8, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  uint64_t v11 = a1 + *(int *)(a2 + 20);
  type metadata accessor for Person.Relationship.Follower(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2 || result == 1)
  {
    uint64_t v13 = sub_24E2F0930();
    uint64_t v16 = *(void *)(v13 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v11, 1, v13);
    if (result) {
      return result;
    }
    goto LABEL_15;
  }
  if (!result)
  {
    uint64_t v13 = sub_24E2F0930();
    uint64_t v16 = *(void *)(v13 - 8);
    uint64_t v14 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
    if (!v14(v11, 1, v13)) {
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v11, v13);
    }
    v11 += *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
    uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v14)(v11, 1, v13);
    if (!result)
    {
LABEL_15:
      uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(v16 + 8);
      return v15(v11, v13);
    }
  }
  return result;
}

char *_s12RelationshipVwcp(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Person.Relationship.Following(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v12 = sub_24E2F0930();
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(a2, 1, v12))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
      memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(a1, a2, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(a1, 0, 1, v12);
    }
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      goto LABEL_14;
    }
    uint64_t v8 = sub_24E2F0930();
    uint64_t v9 = *(void *)(v8 - 8);
    uint64_t v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
    if (v10(a2, 1, v8))
    {
      uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
      memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(a1, a2, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    uint64_t v15 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
    uint64_t v16 = &a1[v15];
    uint64_t v17 = &a2[v15];
    if (v10(&a2[v15], 1, v8))
    {
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v16, v17, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v16, 0, 1, v8);
    }
  }
  swift_storeEnumTagMultiPayload();
LABEL_14:
  uint64_t v19 = *(int *)(a3 + 20);
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  uint64_t v22 = type metadata accessor for Person.Relationship.Follower(0);
  int v23 = swift_getEnumCaseMultiPayload();
  switch(v23)
  {
    case 2:
      uint64_t v28 = sub_24E2F0930();
      uint64_t v29 = *(void *)(v28 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v21, 1, v28))
      {
LABEL_20:
        uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(v20, v21, *(void *)(*(void *)(v30 - 8) + 64));
LABEL_30:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
LABEL_27:
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v20, v21, v28);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v20, 0, 1, v28);
      goto LABEL_30;
    case 1:
      uint64_t v28 = sub_24E2F0930();
      uint64_t v29 = *(void *)(v28 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v21, 1, v28)) {
        goto LABEL_20;
      }
      goto LABEL_27;
    case 0:
      uint64_t v24 = sub_24E2F0930();
      uint64_t v25 = *(void *)(v24 - 8);
      int v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
      if (v26(v21, 1, v24))
      {
        uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(v20, v21, *(void *)(*(void *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v20, v21, v24);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v20, 0, 1, v24);
      }
      uint64_t v31 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
      uint64_t v32 = &v20[v31];
      uint64_t v33 = &v21[v31];
      if (v26(v33, 1, v24))
      {
        uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v32, v33, v24);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v32, 0, 1, v24);
      }
      goto LABEL_30;
  }
  memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
  return a1;
}

char *_s12RelationshipVwca(char *a1, char *a2, uint64_t a3)
{
  if (a1 == a2) {
    return a1;
  }
  sub_24E2EAA28((uint64_t)a1, type metadata accessor for Person.Relationship.Following);
  uint64_t v6 = type metadata accessor for Person.Relationship.Following(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v12 = sub_24E2F0930();
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(a2, 1, v12))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
      memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(a1, a2, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(a1, 0, 1, v12);
    }
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      goto LABEL_15;
    }
    uint64_t v8 = sub_24E2F0930();
    uint64_t v9 = *(void *)(v8 - 8);
    uint64_t v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
    if (v10(a2, 1, v8))
    {
      uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
      memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(a1, a2, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    uint64_t v15 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
    uint64_t v16 = &a1[v15];
    uint64_t v17 = &a2[v15];
    if (v10(&a2[v15], 1, v8))
    {
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v16, v17, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v16, 0, 1, v8);
    }
  }
  swift_storeEnumTagMultiPayload();
LABEL_15:
  uint64_t v19 = *(int *)(a3 + 20);
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  sub_24E2EAA28((uint64_t)&a1[v19], type metadata accessor for Person.Relationship.Follower);
  uint64_t v22 = type metadata accessor for Person.Relationship.Follower(0);
  int v23 = swift_getEnumCaseMultiPayload();
  switch(v23)
  {
    case 2:
      uint64_t v28 = sub_24E2F0930();
      uint64_t v29 = *(void *)(v28 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v21, 1, v28))
      {
LABEL_21:
        uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(v20, v21, *(void *)(*(void *)(v30 - 8) + 64));
LABEL_31:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
LABEL_25:
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v20, v21, v28);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v20, 0, 1, v28);
      goto LABEL_31;
    case 1:
      uint64_t v28 = sub_24E2F0930();
      uint64_t v29 = *(void *)(v28 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v21, 1, v28)) {
        goto LABEL_21;
      }
      goto LABEL_25;
    case 0:
      uint64_t v24 = sub_24E2F0930();
      uint64_t v25 = *(void *)(v24 - 8);
      int v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
      if (v26(v21, 1, v24))
      {
        uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(v20, v21, *(void *)(*(void *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v20, v21, v24);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v20, 0, 1, v24);
      }
      uint64_t v31 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
      uint64_t v32 = &v20[v31];
      uint64_t v33 = &v21[v31];
      if (v26(v33, 1, v24))
      {
        uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v32, v33, v24);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v32, 0, 1, v24);
      }
      goto LABEL_31;
  }
  memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
  return a1;
}

char *_s12RelationshipVwtk(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Person.Relationship.Following(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v12 = sub_24E2F0930();
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(a2, 1, v12))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
      memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(a1, a2, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(a1, 0, 1, v12);
    }
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      goto LABEL_14;
    }
    uint64_t v8 = sub_24E2F0930();
    uint64_t v9 = *(void *)(v8 - 8);
    uint64_t v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
    if (v10(a2, 1, v8))
    {
      uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
      memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(a1, a2, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    uint64_t v15 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
    uint64_t v16 = &a1[v15];
    uint64_t v17 = &a2[v15];
    if (v10(&a2[v15], 1, v8))
    {
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v16, v17, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v16, 0, 1, v8);
    }
  }
  swift_storeEnumTagMultiPayload();
LABEL_14:
  uint64_t v19 = *(int *)(a3 + 20);
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  uint64_t v22 = type metadata accessor for Person.Relationship.Follower(0);
  int v23 = swift_getEnumCaseMultiPayload();
  switch(v23)
  {
    case 2:
      uint64_t v28 = sub_24E2F0930();
      uint64_t v29 = *(void *)(v28 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v21, 1, v28))
      {
LABEL_20:
        uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(v20, v21, *(void *)(*(void *)(v30 - 8) + 64));
LABEL_30:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
LABEL_27:
      (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v20, v21, v28);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v20, 0, 1, v28);
      goto LABEL_30;
    case 1:
      uint64_t v28 = sub_24E2F0930();
      uint64_t v29 = *(void *)(v28 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v21, 1, v28)) {
        goto LABEL_20;
      }
      goto LABEL_27;
    case 0:
      uint64_t v24 = sub_24E2F0930();
      uint64_t v25 = *(void *)(v24 - 8);
      int v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
      if (v26(v21, 1, v24))
      {
        uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(v20, v21, *(void *)(*(void *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v20, v21, v24);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v20, 0, 1, v24);
      }
      uint64_t v31 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
      uint64_t v32 = &v20[v31];
      uint64_t v33 = &v21[v31];
      if (v26(v33, 1, v24))
      {
        uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v32, v33, v24);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v32, 0, 1, v24);
      }
      goto LABEL_30;
  }
  memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
  return a1;
}

char *_s12RelationshipVwta(char *a1, char *a2, uint64_t a3)
{
  if (a1 == a2) {
    return a1;
  }
  sub_24E2EAA28((uint64_t)a1, type metadata accessor for Person.Relationship.Following);
  uint64_t v6 = type metadata accessor for Person.Relationship.Following(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v12 = sub_24E2F0930();
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(a2, 1, v12))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
      memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(a1, a2, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(a1, 0, 1, v12);
    }
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      goto LABEL_15;
    }
    uint64_t v8 = sub_24E2F0930();
    uint64_t v9 = *(void *)(v8 - 8);
    uint64_t v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
    if (v10(a2, 1, v8))
    {
      uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
      memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(a1, a2, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    uint64_t v15 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
    uint64_t v16 = &a1[v15];
    uint64_t v17 = &a2[v15];
    if (v10(&a2[v15], 1, v8))
    {
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v16, v17, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v16, 0, 1, v8);
    }
  }
  swift_storeEnumTagMultiPayload();
LABEL_15:
  uint64_t v19 = *(int *)(a3 + 20);
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  sub_24E2EAA28((uint64_t)&a1[v19], type metadata accessor for Person.Relationship.Follower);
  uint64_t v22 = type metadata accessor for Person.Relationship.Follower(0);
  int v23 = swift_getEnumCaseMultiPayload();
  switch(v23)
  {
    case 2:
      uint64_t v28 = sub_24E2F0930();
      uint64_t v29 = *(void *)(v28 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v21, 1, v28))
      {
LABEL_21:
        uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(v20, v21, *(void *)(*(void *)(v30 - 8) + 64));
LABEL_31:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
LABEL_25:
      (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v20, v21, v28);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v20, 0, 1, v28);
      goto LABEL_31;
    case 1:
      uint64_t v28 = sub_24E2F0930();
      uint64_t v29 = *(void *)(v28 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v21, 1, v28)) {
        goto LABEL_21;
      }
      goto LABEL_25;
    case 0:
      uint64_t v24 = sub_24E2F0930();
      uint64_t v25 = *(void *)(v24 - 8);
      int v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
      if (v26(v21, 1, v24))
      {
        uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(v20, v21, *(void *)(*(void *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v20, v21, v24);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v20, 0, 1, v24);
      }
      uint64_t v31 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
      uint64_t v32 = &v20[v31];
      uint64_t v33 = &v21[v31];
      if (v26(v33, 1, v24))
      {
        uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v32, v33, v24);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v32, 0, 1, v24);
      }
      goto LABEL_31;
  }
  memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
  return a1;
}

uint64_t _s12RelationshipVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24E2ED188);
}

uint64_t sub_24E2ED188(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Person.Relationship.Following(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = type metadata accessor for Person.Relationship.Follower(0);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t _s12RelationshipVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24E2ED294);
}

uint64_t sub_24E2ED294(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for Person.Relationship.Following(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = type metadata accessor for Person.Relationship.Follower(0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t sub_24E2ED398()
{
  uint64_t result = type metadata accessor for Person.Relationship.Following(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for Person.Relationship.Follower(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *_s12RelationshipV8FollowerOwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  uint64_t v6 = *(void *)(a3 - 8);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v14 = sub_24E2F0930();
      uint64_t v15 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v15 + 48))(a2, 1, v14))
      {
LABEL_10:
        uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(a1, a2, *(void *)(*(void *)(v16 - 8) + 64));
LABEL_20:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
LABEL_17:
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v15 + 16))(a1, a2, v14);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v15 + 56))(a1, 0, 1, v14);
      goto LABEL_20;
    case 1:
      uint64_t v14 = sub_24E2F0930();
      uint64_t v15 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v15 + 48))(a2, 1, v14)) {
        goto LABEL_10;
      }
      goto LABEL_17;
    case 0:
      uint64_t v8 = sub_24E2F0930();
      uint64_t v9 = *(void *)(v8 - 8);
      uint64_t v10 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v9 + 48);
      if (v10(a2, 1, v8))
      {
        uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 16))(a1, a2, v8);
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
      }
      uint64_t v17 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
      uint64_t v18 = (char *)a1 + v17;
      uint64_t v19 = (char *)a2 + v17;
      if (v10((uint64_t *)v19, 1, v8))
      {
        uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v18, v19, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v18, 0, 1, v8);
      }
      goto LABEL_20;
  }
  memcpy(a1, a2, *(void *)(v6 + 64));
  return a1;
}

uint64_t _s12RelationshipV8FollowerOwxx(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2 || result == 1)
  {
    uint64_t v3 = sub_24E2F0930();
    uint64_t v6 = *(void *)(v3 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v3);
    if (result) {
      return result;
    }
    goto LABEL_7;
  }
  if (!result)
  {
    uint64_t v3 = sub_24E2F0930();
    uint64_t v6 = *(void *)(v3 - 8);
    uint64_t v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
    if (!v4(a1, 1, v3)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v3);
    }
    a1 += *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
    uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v4)(a1, 1, v3);
    if (!result)
    {
LABEL_7:
      int v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
      return v5(a1, v3);
    }
  }
  return result;
}

char *_s12RelationshipV8FollowerOwcp(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v11 = sub_24E2F0930();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
      {
LABEL_7:
        uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
LABEL_17:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
LABEL_14:
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(a1, a2, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
      goto LABEL_17;
    case 1:
      uint64_t v11 = sub_24E2F0930();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11)) {
        goto LABEL_7;
      }
      goto LABEL_14;
    case 0:
      uint64_t v7 = sub_24E2F0930();
      uint64_t v8 = *(void *)(v7 - 8);
      uint64_t v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
      if (v9(a2, 1, v7))
      {
        uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 16))(a1, a2, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      uint64_t v14 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
      uint64_t v15 = &a1[v14];
      uint64_t v16 = &a2[v14];
      if (v9(v16, 1, v7))
      {
        uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v15, v16, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v15, 0, 1, v7);
      }
      goto LABEL_17;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

char *_s12RelationshipV8FollowerOwca(char *a1, char *a2, uint64_t a3)
{
  if (a1 == a2) {
    return a1;
  }
  sub_24E2EAA28((uint64_t)a1, type metadata accessor for Person.Relationship.Follower);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v11 = sub_24E2F0930();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
      {
LABEL_8:
        uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
LABEL_18:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
LABEL_12:
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(a1, a2, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
      goto LABEL_18;
    case 1:
      uint64_t v11 = sub_24E2F0930();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11)) {
        goto LABEL_8;
      }
      goto LABEL_12;
    case 0:
      uint64_t v7 = sub_24E2F0930();
      uint64_t v8 = *(void *)(v7 - 8);
      uint64_t v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
      if (v9(a2, 1, v7))
      {
        uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 16))(a1, a2, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      uint64_t v14 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
      uint64_t v15 = &a1[v14];
      uint64_t v16 = &a2[v14];
      if (v9(v16, 1, v7))
      {
        uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v15, v16, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v15, 0, 1, v7);
      }
      goto LABEL_18;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

char *_s12RelationshipV8FollowerOwtk(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v11 = sub_24E2F0930();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
      {
LABEL_7:
        uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
LABEL_17:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
LABEL_14:
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(a1, a2, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
      goto LABEL_17;
    case 1:
      uint64_t v11 = sub_24E2F0930();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11)) {
        goto LABEL_7;
      }
      goto LABEL_14;
    case 0:
      uint64_t v7 = sub_24E2F0930();
      uint64_t v8 = *(void *)(v7 - 8);
      uint64_t v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
      if (v9(a2, 1, v7))
      {
        uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      uint64_t v14 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
      uint64_t v15 = &a1[v14];
      uint64_t v16 = &a2[v14];
      if (v9(v16, 1, v7))
      {
        uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v15, v16, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v15, 0, 1, v7);
      }
      goto LABEL_17;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

char *_s12RelationshipV8FollowerOwta(char *a1, char *a2, uint64_t a3)
{
  if (a1 == a2) {
    return a1;
  }
  sub_24E2EAA28((uint64_t)a1, type metadata accessor for Person.Relationship.Follower);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v11 = sub_24E2F0930();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
      {
LABEL_8:
        uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
LABEL_18:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
LABEL_12:
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(a1, a2, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
      goto LABEL_18;
    case 1:
      uint64_t v11 = sub_24E2F0930();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11)) {
        goto LABEL_8;
      }
      goto LABEL_12;
    case 0:
      uint64_t v7 = sub_24E2F0930();
      uint64_t v8 = *(void *)(v7 - 8);
      uint64_t v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
      if (v9(a2, 1, v7))
      {
        uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      uint64_t v14 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
      uint64_t v15 = &a1[v14];
      uint64_t v16 = &a2[v14];
      if (v9(v16, 1, v7))
      {
        uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v15, v16, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v15, 0, 1, v7);
      }
      goto LABEL_18;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

uint64_t sub_24E2EEAB0()
{
  return swift_storeEnumTagMultiPayload();
}

void sub_24E2EEAC0()
{
  sub_24E2EEB68();
  if (v1 <= 0x3F)
  {
    uint64_t v2 = *(void *)(v0 - 8) + 64;
    swift_getTupleTypeLayout2();
    uint64_t v4 = &v3;
    uint64_t v5 = v2;
    uint64_t v6 = v2;
    swift_initEnumMetadataMultiPayload();
  }
}

void sub_24E2EEB68()
{
  if (!qword_2698CB858)
  {
    sub_24E2F0930();
    unint64_t v0 = sub_24E2F1210();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2698CB858);
    }
  }
}

uint64_t *_s12RelationshipV9FollowingOwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v13 = sub_24E2F0930();
      uint64_t v14 = *(void *)(v13 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v14 + 48))(a2, 1, v13))
      {
        uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v14 + 16))(a1, a2, v13);
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v14 + 56))(a1, 0, 1, v13);
      }
LABEL_16:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v8 = sub_24E2F0930();
      uint64_t v9 = *(void *)(v8 - 8);
      uint64_t v10 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v9 + 48);
      if (v10(a2, 1, v8))
      {
        uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 16))(a1, a2, v8);
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
      }
      uint64_t v16 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
      uint64_t v17 = (char *)a1 + v16;
      uint64_t v18 = (char *)a2 + v16;
      if (v10((uint64_t *)v18, 1, v8))
      {
        uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v17, v18, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v17, 0, 1, v8);
      }
      goto LABEL_16;
    }
    memcpy(a1, a2, *(void *)(v6 + 64));
  }
  return a1;
}

uint64_t _s12RelationshipV9FollowingOwxx(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    uint64_t v3 = sub_24E2F0930();
    uint64_t v6 = *(void *)(v3 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v3);
    if (result) {
      return result;
    }
    goto LABEL_6;
  }
  if (!result)
  {
    uint64_t v3 = sub_24E2F0930();
    uint64_t v6 = *(void *)(v3 - 8);
    uint64_t v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
    if (!v4(a1, 1, v3)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v3);
    }
    a1 += *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
    uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v4)(a1, 1, v3);
    if (!result)
    {
LABEL_6:
      int v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
      return v5(a1, v3);
    }
  }
  return result;
}

char *_s12RelationshipV9FollowingOwcp(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v11 = sub_24E2F0930();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
      memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(a1, a2, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
    }
LABEL_14:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v7 = sub_24E2F0930();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
    if (v9(a2, 1, v7))
    {
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v14 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
    uint64_t v15 = &a1[v14];
    uint64_t v16 = &a2[v14];
    if (v9(v16, 1, v7))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v15, v16, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v15, 0, 1, v7);
    }
    goto LABEL_14;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

char *_s12RelationshipV9FollowingOwca(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24E2EAA28((uint64_t)a1, type metadata accessor for Person.Relationship.Following);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v11 = sub_24E2F0930();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
      {
        uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(a1, a2, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
      }
LABEL_15:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v7 = sub_24E2F0930();
      uint64_t v8 = *(void *)(v7 - 8);
      uint64_t v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
      if (v9(a2, 1, v7))
      {
        uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 16))(a1, a2, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      uint64_t v14 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
      uint64_t v15 = &a1[v14];
      uint64_t v16 = &a2[v14];
      if (v9(v16, 1, v7))
      {
        uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v15, v16, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v15, 0, 1, v7);
      }
      goto LABEL_15;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

char *_s12RelationshipV9FollowingOwtk(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v11 = sub_24E2F0930();
    uint64_t v12 = *(void *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
      memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(a1, a2, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
    }
LABEL_14:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v7 = sub_24E2F0930();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
    if (v9(a2, 1, v7))
    {
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v14 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
    uint64_t v15 = &a1[v14];
    uint64_t v16 = &a2[v14];
    if (v9(v16, 1, v7))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v15, v16, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v15, 0, 1, v7);
    }
    goto LABEL_14;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

char *_s12RelationshipV9FollowingOwta(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24E2EAA28((uint64_t)a1, type metadata accessor for Person.Relationship.Following);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v11 = sub_24E2F0930();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
      {
        uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(a1, a2, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
      }
LABEL_15:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v7 = sub_24E2F0930();
      uint64_t v8 = *(void *)(v7 - 8);
      uint64_t v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
      if (v9(a2, 1, v7))
      {
        uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(a1, a2, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      uint64_t v14 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE20) + 48);
      uint64_t v15 = &a1[v14];
      uint64_t v16 = &a2[v14];
      if (v9(v16, 1, v7))
      {
        uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
        memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v15, v16, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v15, 0, 1, v7);
      }
      goto LABEL_15;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t _s12RelationshipV9FollowingOwet_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t _s12RelationshipV9FollowingOwst_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

void sub_24E2EFD6C()
{
  sub_24E2EEB68();
  if (v1 <= 0x3F)
  {
    uint64_t v2 = *(void *)(v0 - 8) + 64;
    swift_getTupleTypeLayout2();
    v3[4] = v3;
    v3[5] = v2;
    swift_initEnumMetadataMultiPayload();
  }
}

uint64_t sub_24E2EFE10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24E2EFE78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698CAE18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_24E2EFEE0()
{
  unint64_t result = qword_2698CB880;
  if (!qword_2698CB880)
  {
    sub_24E2F0930();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB880);
  }
  return result;
}

uint64_t Person.ServerIdentifier.init(rawValue:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t static Person.ServerIdentifier.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_24E2F1430();
  }
}

uint64_t Person.ServerIdentifier.rawValue.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Person.ServerIdentifier.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_24E2F0F20();
  return swift_bridgeObjectRelease();
}

uint64_t Person.ServerIdentifier.hashValue.getter()
{
  return sub_24E2F14D0();
}

unint64_t sub_24E2F0058()
{
  unint64_t result = qword_2698CB890;
  if (!qword_2698CB890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB890);
  }
  return result;
}

ValueMetadata *type metadata accessor for Person.ServerIdentifier()
{
  return &type metadata for Person.ServerIdentifier;
}

uint64_t Person.UniqueIdentifier.value.getter()
{
  return 0x3A3156444953;
}

uint64_t Person.UniqueIdentifier.init(rawValue:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_24E2F0FC0();
  if (result)
  {
    unint64_t v7 = sub_24E2F0F30();
    unint64_t v8 = sub_24E2A2D20(v7, a1, a2);
    uint64_t v10 = v9;
    uint64_t v12 = v11;
    uint64_t v14 = v13;
    swift_bridgeObjectRelease();
    a1 = MEMORY[0x253337E60](v8, v10, v12, v14);
    a2 = v15;
    uint64_t result = swift_bridgeObjectRelease();
  }
  *a3 = a1;
  a3[1] = a2;
  return result;
}

void *Person.UniqueIdentifier.init(serverIdentifier:)@<X0>(void *result@<X0>, void *a2@<X8>)
{
  uint64_t v2 = result[1];
  *a2 = *result;
  a2[1] = v2;
  return result;
}

uint64_t static Person.UniqueIdentifier.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_24E2F1430();
  }
}

uint64_t Person.UniqueIdentifier.valueWithoutPrefix.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Person.UniqueIdentifier.hash(into:)()
{
  return sub_24E2F14B0();
}

uint64_t Person.UniqueIdentifier.hashValue.getter()
{
  return sub_24E2F14D0();
}

uint64_t static Person.UniqueIdentifier.< infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 0;
  }
  else {
    return sub_24E2F1430();
  }
}

unint64_t sub_24E2F031C()
{
  unint64_t result = qword_2698CB898;
  if (!qword_2698CB898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB898);
  }
  return result;
}

ValueMetadata *type metadata accessor for Person.UniqueIdentifier()
{
  return &type metadata for Person.UniqueIdentifier;
}

unsigned char *_s16UniqueIdentifierV14IdentifierTypeOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24E2F041CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s16UniqueIdentifierV14IdentifierTypeOMa_0()
{
  return &_s16UniqueIdentifierV14IdentifierTypeON_0;
}

unint64_t sub_24E2F0458()
{
  unint64_t result = qword_2698CB8A0;
  if (!qword_2698CB8A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698CB8A0);
  }
  return result;
}

uint64_t type metadata accessor for ModelsModule()
{
  return self;
}

id sub_24E2F04D0()
{
  type metadata accessor for ModelsModule();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id result = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  qword_2698D1E60 = 0x736C65646F4DLL;
  *(void *)algn_2698D1E68 = 0xE600000000000000;
  qword_2698D1E70 = (uint64_t)result;
  return result;
}

uint64_t sub_24E2F0550()
{
  return MEMORY[0x270EE0DA0]();
}

uint64_t sub_24E2F0570()
{
  return MEMORY[0x270EE15C8]();
}

uint64_t sub_24E2F0580()
{
  return MEMORY[0x270EE1750]();
}

uint64_t sub_24E2F0590()
{
  return MEMORY[0x270EE1918]();
}

uint64_t sub_24E2F05A0()
{
  return MEMORY[0x270EE1938]();
}

uint64_t sub_24E2F05C0()
{
  return MEMORY[0x270EE1980]();
}

uint64_t sub_24E2F05D0()
{
  return MEMORY[0x270EE1A20]();
}

uint64_t sub_24E2F05E0()
{
  return MEMORY[0x270EE1C48]();
}

uint64_t sub_24E2F05F0()
{
  return MEMORY[0x270EE1CB0]();
}

uint64_t sub_24E2F0600()
{
  return MEMORY[0x270EE1CC0]();
}

uint64_t sub_24E2F0620()
{
  return MEMORY[0x270F28C38]();
}

uint64_t sub_24E2F0640()
{
  return MEMORY[0x270F28CB0]();
}

uint64_t sub_24E2F0650()
{
  return MEMORY[0x270F28CB8]();
}

uint64_t sub_24E2F0660()
{
  return MEMORY[0x270F28CC8]();
}

uint64_t sub_24E2F0670()
{
  return MEMORY[0x270F28D08]();
}

uint64_t sub_24E2F0680()
{
  return MEMORY[0x270F28D80]();
}

uint64_t sub_24E2F0690()
{
  return MEMORY[0x270F28D88]();
}

uint64_t sub_24E2F06B0()
{
  return MEMORY[0x270EEDDD0]();
}

uint64_t sub_24E2F06C0()
{
  return MEMORY[0x270EEDE10]();
}

uint64_t sub_24E2F06D0()
{
  return MEMORY[0x270EEDE18]();
}

uint64_t sub_24E2F06E0()
{
  return MEMORY[0x270EEDEE8]();
}

uint64_t sub_24E2F06F0()
{
  return MEMORY[0x270EEDF30]();
}

uint64_t sub_24E2F0700()
{
  return MEMORY[0x270EEDF38]();
}

uint64_t sub_24E2F0720()
{
  return MEMORY[0x270EEE0D0]();
}

uint64_t sub_24E2F0730()
{
  return MEMORY[0x270EEE1A0]();
}

uint64_t sub_24E2F0740()
{
  return MEMORY[0x270EEE1C8]();
}

uint64_t sub_24E2F0750()
{
  return MEMORY[0x270EEE238]();
}

uint64_t sub_24E2F0760()
{
  return MEMORY[0x270EEE258]();
}

uint64_t sub_24E2F0770()
{
  return MEMORY[0x270EEE980]();
}

uint64_t sub_24E2F0790()
{
  return MEMORY[0x270EEF840]();
}

uint64_t sub_24E2F07A0()
{
  return MEMORY[0x270EEF868]();
}

uint64_t sub_24E2F07B0()
{
  return MEMORY[0x270EEF870]();
}

uint64_t sub_24E2F07C0()
{
  return MEMORY[0x270EEF888]();
}

uint64_t sub_24E2F07D0()
{
  return MEMORY[0x270EEF8C0]();
}

uint64_t sub_24E2F07E0()
{
  return MEMORY[0x270EEF8D8]();
}

uint64_t sub_24E2F07F0()
{
  return MEMORY[0x270EEFB58]();
}

uint64_t sub_24E2F0800()
{
  return MEMORY[0x270EEFB60]();
}

uint64_t sub_24E2F0810()
{
  return MEMORY[0x270EEFB68]();
}

uint64_t sub_24E2F0820()
{
  return MEMORY[0x270EEFB78]();
}

uint64_t sub_24E2F0830()
{
  return MEMORY[0x270EEFB80]();
}

uint64_t sub_24E2F0840()
{
  return MEMORY[0x270EEFB88]();
}

uint64_t sub_24E2F0850()
{
  return MEMORY[0x270EEFC58]();
}

uint64_t sub_24E2F0860()
{
  return MEMORY[0x270EEFD28]();
}

uint64_t sub_24E2F0870()
{
  return MEMORY[0x270EEFD78]();
}

uint64_t sub_24E2F0880()
{
  return MEMORY[0x270EEFF68]();
}

uint64_t sub_24E2F0890()
{
  return MEMORY[0x270F28E28]();
}

uint64_t sub_24E2F08A0()
{
  return MEMORY[0x270EEFFC8]();
}

uint64_t sub_24E2F08B0()
{
  return MEMORY[0x270EF0120]();
}

uint64_t sub_24E2F08C0()
{
  return MEMORY[0x270EF0178]();
}

uint64_t sub_24E2F08D0()
{
  return MEMORY[0x270EF0898]();
}

uint64_t sub_24E2F08E0()
{
  return MEMORY[0x270EF0998]();
}

uint64_t sub_24E2F08F0()
{
  return MEMORY[0x270EF09B8]();
}

uint64_t sub_24E2F0900()
{
  return MEMORY[0x270EF0AF0]();
}

uint64_t sub_24E2F0910()
{
  return MEMORY[0x270EF0B88]();
}

uint64_t sub_24E2F0920()
{
  return MEMORY[0x270EF0BA8]();
}

uint64_t sub_24E2F0930()
{
  return MEMORY[0x270EF0C40]();
}

uint64_t sub_24E2F0940()
{
  return MEMORY[0x270EF0C58]();
}

uint64_t sub_24E2F0950()
{
  return MEMORY[0x270EF0C68]();
}

uint64_t _s10FindMyCore6BeaconV12BAIdentifierV2eeoiySbAE_AEtFZ_0()
{
  return MEMORY[0x270EF0CB0]();
}

uint64_t sub_24E2F0970()
{
  return MEMORY[0x270EF0CB8]();
}

uint64_t sub_24E2F0980()
{
  return MEMORY[0x270EF0D08]();
}

uint64_t sub_24E2F0990()
{
  return MEMORY[0x270EF0D18]();
}

uint64_t sub_24E2F09A0()
{
  return MEMORY[0x270EF0FA0]();
}

uint64_t sub_24E2F09B0()
{
  return MEMORY[0x270EF10A8]();
}

uint64_t sub_24E2F09C0()
{
  return MEMORY[0x270F28698]();
}

uint64_t sub_24E2F09D0()
{
  return MEMORY[0x270F286A0]();
}

uint64_t sub_24E2F09E0()
{
  return MEMORY[0x270F29210]();
}

uint64_t sub_24E2F09F0()
{
  return MEMORY[0x270F29218]();
}

uint64_t sub_24E2F0A00()
{
  return MEMORY[0x270F29228]();
}

uint64_t sub_24E2F0A10()
{
  return MEMORY[0x270F29238]();
}

uint64_t sub_24E2F0A20()
{
  return MEMORY[0x270F29270]();
}

uint64_t sub_24E2F0A30()
{
  return MEMORY[0x270F29280]();
}

uint64_t sub_24E2F0A40()
{
  return MEMORY[0x270F292A0]();
}

uint64_t sub_24E2F0A50()
{
  return MEMORY[0x270F292A8]();
}

uint64_t sub_24E2F0A60()
{
  return MEMORY[0x270F292C0]();
}

uint64_t sub_24E2F0A70()
{
  return MEMORY[0x270F292C8]();
}

uint64_t sub_24E2F0A80()
{
  return MEMORY[0x270F292E0]();
}

uint64_t sub_24E2F0A90()
{
  return MEMORY[0x270F292E8]();
}

uint64_t sub_24E2F0AA0()
{
  return MEMORY[0x270F292F0]();
}

uint64_t sub_24E2F0AB0()
{
  return MEMORY[0x270F29318]();
}

uint64_t sub_24E2F0AC0()
{
  return MEMORY[0x270F29368]();
}

uint64_t sub_24E2F0AD0()
{
  return MEMORY[0x270F29370]();
}

uint64_t sub_24E2F0AE0()
{
  return MEMORY[0x270F29588]();
}

uint64_t sub_24E2F0AF0()
{
  return MEMORY[0x270F295A0]();
}

uint64_t sub_24E2F0B00()
{
  return MEMORY[0x270F295B0]();
}

uint64_t sub_24E2F0B10()
{
  return MEMORY[0x270F295B8]();
}

uint64_t sub_24E2F0B20()
{
  return MEMORY[0x270F295C0]();
}

uint64_t sub_24E2F0B30()
{
  return MEMORY[0x270F295C8]();
}

uint64_t sub_24E2F0B40()
{
  return MEMORY[0x270F295D8]();
}

uint64_t sub_24E2F0B50()
{
  return MEMORY[0x270F295E8]();
}

uint64_t sub_24E2F0B60()
{
  return MEMORY[0x270F295F0]();
}

uint64_t sub_24E2F0B70()
{
  return MEMORY[0x270F295F8]();
}

uint64_t sub_24E2F0B80()
{
  return MEMORY[0x270F29600]();
}

uint64_t sub_24E2F0BE0()
{
  return MEMORY[0x270F29768]();
}

uint64_t sub_24E2F0C00()
{
  return MEMORY[0x270F29798]();
}

uint64_t sub_24E2F0C10()
{
  return MEMORY[0x270F297A0]();
}

uint64_t sub_24E2F0C20()
{
  return MEMORY[0x270F297B0]();
}

uint64_t sub_24E2F0C30()
{
  return MEMORY[0x270F297B8]();
}

uint64_t sub_24E2F0C40()
{
  return MEMORY[0x270F297C8]();
}

uint64_t sub_24E2F0C50()
{
  return MEMORY[0x270F297D0]();
}

uint64_t sub_24E2F0C60()
{
  return MEMORY[0x270F297D8]();
}

uint64_t sub_24E2F0C70()
{
  return MEMORY[0x270F297E0]();
}

uint64_t sub_24E2F0C80()
{
  return MEMORY[0x270F297E8]();
}

uint64_t sub_24E2F0C90()
{
  return MEMORY[0x270F297F0]();
}

uint64_t sub_24E2F0CA0()
{
  return MEMORY[0x270F297F8]();
}

uint64_t sub_24E2F0CB0()
{
  return MEMORY[0x270F29800]();
}

uint64_t sub_24E2F0CC0()
{
  return MEMORY[0x270F29808]();
}

uint64_t sub_24E2F0CD0()
{
  return MEMORY[0x270F29810]();
}

uint64_t sub_24E2F0CE0()
{
  return MEMORY[0x270F29818]();
}

uint64_t sub_24E2F0CF0()
{
  return MEMORY[0x270F29820]();
}

uint64_t sub_24E2F0D00()
{
  return MEMORY[0x270F29828]();
}

uint64_t sub_24E2F0D10()
{
  return MEMORY[0x270F29830]();
}

uint64_t sub_24E2F0D20()
{
  return MEMORY[0x270F29838]();
}

uint64_t sub_24E2F0D30()
{
  return MEMORY[0x270F29858]();
}

uint64_t sub_24E2F0D40()
{
  return MEMORY[0x270F29888]();
}

uint64_t sub_24E2F0D50()
{
  return MEMORY[0x270FA2E00]();
}

uint64_t sub_24E2F0D60()
{
  return MEMORY[0x270FA2E08]();
}

uint64_t sub_24E2F0D70()
{
  return MEMORY[0x270FA2E20]();
}

uint64_t sub_24E2F0D80()
{
  return MEMORY[0x270EF1840]();
}

uint64_t sub_24E2F0D90()
{
  return MEMORY[0x270F9D0A8]();
}

uint64_t sub_24E2F0DA0()
{
  return MEMORY[0x270F9D0E8]();
}

uint64_t sub_24E2F0DB0()
{
  return MEMORY[0x270F9D1B0]();
}

uint64_t sub_24E2F0DC0()
{
  return MEMORY[0x270F9D1D0]();
}

uint64_t sub_24E2F0DD0()
{
  return MEMORY[0x270F9D208]();
}

uint64_t sub_24E2F0DE0()
{
  return MEMORY[0x270F9D210]();
}

uint64_t sub_24E2F0DF0()
{
  return MEMORY[0x270F9D318]();
}

uint64_t sub_24E2F0E00()
{
  return MEMORY[0x270F9D320]();
}

uint64_t sub_24E2F0E10()
{
  return MEMORY[0x270F9D478]();
}

uint64_t sub_24E2F0E20()
{
  return MEMORY[0x270F9D598]();
}

uint64_t sub_24E2F0E30()
{
  return MEMORY[0x270EF1908]();
}

uint64_t sub_24E2F0E40()
{
  return MEMORY[0x270EF1918]();
}

uint64_t sub_24E2F0E50()
{
  return MEMORY[0x270EF1928]();
}

uint64_t sub_24E2F0E60()
{
  return MEMORY[0x270EF1938]();
}

uint64_t sub_24E2F0E70()
{
  return MEMORY[0x270EF1958]();
}

uint64_t sub_24E2F0E80()
{
  return MEMORY[0x270EF1968]();
}

uint64_t sub_24E2F0E90()
{
  return MEMORY[0x270EF19B0]();
}

uint64_t sub_24E2F0EA0()
{
  return MEMORY[0x270EF19C8]();
}

uint64_t sub_24E2F0EB0()
{
  return MEMORY[0x270EF19E0]();
}

uint64_t sub_24E2F0EC0()
{
  return MEMORY[0x270EF19E8]();
}

uint64_t sub_24E2F0ED0()
{
  return MEMORY[0x270EF1A38]();
}

uint64_t sub_24E2F0EE0()
{
  return MEMORY[0x270F9D5E0]();
}

uint64_t sub_24E2F0EF0()
{
  return MEMORY[0x270F9D5F8]();
}

uint64_t sub_24E2F0F00()
{
  return MEMORY[0x270F9D648]();
}

uint64_t sub_24E2F0F10()
{
  return MEMORY[0x270F9D6B8]();
}

uint64_t sub_24E2F0F20()
{
  return MEMORY[0x270F9D708]();
}

uint64_t sub_24E2F0F30()
{
  return MEMORY[0x270F9D740]();
}

uint64_t sub_24E2F0F40()
{
  return MEMORY[0x270F9D758]();
}

uint64_t sub_24E2F0F50()
{
  return MEMORY[0x270F9D798]();
}

uint64_t sub_24E2F0F60()
{
  return MEMORY[0x270F9D7E0]();
}

uint64_t sub_24E2F0F70()
{
  return MEMORY[0x270F9D7E8]();
}

uint64_t sub_24E2F0F80()
{
  return MEMORY[0x270F9D800]();
}

uint64_t sub_24E2F0FA0()
{
  return MEMORY[0x270F9D810]();
}

uint64_t sub_24E2F0FB0()
{
  return MEMORY[0x270F9D860]();
}

uint64_t sub_24E2F0FC0()
{
  return MEMORY[0x270F9D878]();
}

uint64_t sub_24E2F0FD0()
{
  return MEMORY[0x270F9D8E0]();
}

uint64_t sub_24E2F0FE0()
{
  return MEMORY[0x270F9D8F0]();
}

uint64_t sub_24E2F0FF0()
{
  return MEMORY[0x270EF1B58]();
}

uint64_t sub_24E2F1000()
{
  return MEMORY[0x270F9D9B0]();
}

uint64_t sub_24E2F1010()
{
  return MEMORY[0x270F9D9C0]();
}

uint64_t sub_24E2F1020()
{
  return MEMORY[0x270EF1B88]();
}

uint64_t sub_24E2F1030()
{
  return MEMORY[0x270EF1BB8]();
}

uint64_t sub_24E2F1040()
{
  return MEMORY[0x270F9DBB0]();
}

uint64_t sub_24E2F1050()
{
  return MEMORY[0x270F9DBB8]();
}

uint64_t sub_24E2F1060()
{
  return MEMORY[0x270F9DBD0]();
}

uint64_t sub_24E2F1070()
{
  return MEMORY[0x270F9DC10]();
}

uint64_t sub_24E2F1080()
{
  return MEMORY[0x270F9DC20]();
}

uint64_t sub_24E2F1090()
{
  return MEMORY[0x270F9DC30]();
}

uint64_t sub_24E2F10A0()
{
  return MEMORY[0x270F9DC80]();
}

uint64_t sub_24E2F10B0()
{
  return MEMORY[0x270F9DC88]();
}

uint64_t sub_24E2F10C0()
{
  return MEMORY[0x270F9DCA8]();
}

uint64_t sub_24E2F10D0()
{
  return MEMORY[0x270F9DCD8]();
}

uint64_t sub_24E2F10E0()
{
  return MEMORY[0x270F9DCF8]();
}

uint64_t sub_24E2F10F0()
{
  return MEMORY[0x270FA1E10]();
}

uint64_t sub_24E2F1100()
{
  return MEMORY[0x270FA1E18]();
}

uint64_t sub_24E2F1110()
{
  return MEMORY[0x270FA1E20]();
}

uint64_t sub_24E2F1120()
{
  return MEMORY[0x270F9DEF0]();
}

uint64_t sub_24E2F1130()
{
  return MEMORY[0x270F9DF18]();
}

uint64_t sub_24E2F1140()
{
  return MEMORY[0x270F9DFE8]();
}

uint64_t sub_24E2F1150()
{
  return MEMORY[0x270F9E080]();
}

uint64_t sub_24E2F1160()
{
  return MEMORY[0x270F9E0A0]();
}

uint64_t sub_24E2F1170()
{
  return MEMORY[0x270F9E0E0]();
}

uint64_t sub_24E2F1180()
{
  return MEMORY[0x270F9E178]();
}

uint64_t sub_24E2F1190()
{
  return MEMORY[0x270F9E1E0]();
}

uint64_t sub_24E2F11A0()
{
  return MEMORY[0x270F9E2B8]();
}

uint64_t sub_24E2F11B0()
{
  return MEMORY[0x270EF1DB8]();
}

uint64_t sub_24E2F11C0()
{
  return MEMORY[0x270FA2E58]();
}

uint64_t sub_24E2F11D0()
{
  return MEMORY[0x270FA2E60]();
}

uint64_t sub_24E2F11E0()
{
  return MEMORY[0x270FA2E80]();
}

uint64_t sub_24E2F11F0()
{
  return MEMORY[0x270FA1180]();
}

uint64_t sub_24E2F1200()
{
  return MEMORY[0x270FA1190]();
}

uint64_t sub_24E2F1210()
{
  return MEMORY[0x270F9E3C0]();
}

uint64_t sub_24E2F1220()
{
  return MEMORY[0x270F9E530]();
}

uint64_t sub_24E2F1230()
{
  return MEMORY[0x270F9E560]();
}

uint64_t sub_24E2F1240()
{
  return MEMORY[0x270EF23D8]();
}

uint64_t sub_24E2F1250()
{
  return MEMORY[0x270EF2518]();
}

uint64_t sub_24E2F1260()
{
  return MEMORY[0x270F9E958]();
}

uint64_t sub_24E2F1270()
{
  return MEMORY[0x270F9E960]();
}

uint64_t sub_24E2F1280()
{
  return MEMORY[0x270F9E9B0]();
}

uint64_t sub_24E2F1290()
{
  return MEMORY[0x270F9E9C8]();
}

uint64_t sub_24E2F12A0()
{
  return MEMORY[0x270F9E9D0]();
}

uint64_t sub_24E2F12B0()
{
  return MEMORY[0x270F9E9E8]();
}

uint64_t sub_24E2F12C0()
{
  return MEMORY[0x270F9EA38]();
}

uint64_t sub_24E2F12D0()
{
  return MEMORY[0x270F9EA40]();
}

uint64_t sub_24E2F12E0()
{
  return MEMORY[0x270F9EB28]();
}

uint64_t sub_24E2F1300()
{
  return MEMORY[0x270F9EB80]();
}

uint64_t sub_24E2F1310()
{
  return MEMORY[0x270F9EBD8]();
}

uint64_t sub_24E2F1320()
{
  return MEMORY[0x270F9EC48]();
}

uint64_t sub_24E2F1330()
{
  return MEMORY[0x270F9EC88]();
}

uint64_t sub_24E2F1340()
{
  return MEMORY[0x270F9EC90]();
}

uint64_t sub_24E2F1350()
{
  return MEMORY[0x270F9EFE8]();
}

uint64_t sub_24E2F1360()
{
  return MEMORY[0x270F9F080]();
}

uint64_t sub_24E2F1370()
{
  return MEMORY[0x270F9F0A0]();
}

uint64_t sub_24E2F1380()
{
  return MEMORY[0x270F9F0B0]();
}

uint64_t sub_24E2F1390()
{
  return MEMORY[0x270F9F0C0]();
}

uint64_t sub_24E2F13A0()
{
  return MEMORY[0x270EF2610]();
}

uint64_t sub_24E2F13C0()
{
  return MEMORY[0x270F9F2E8]();
}

uint64_t sub_24E2F13D0()
{
  return MEMORY[0x270F9F318]();
}

uint64_t sub_24E2F13E0()
{
  return MEMORY[0x270F9F428]();
}

uint64_t sub_24E2F13F0()
{
  return MEMORY[0x270F9F458]();
}

uint64_t sub_24E2F1400()
{
  return MEMORY[0x270F9F4C8]();
}

uint64_t sub_24E2F1410()
{
  return MEMORY[0x270F9F4E0]();
}

uint64_t sub_24E2F1420()
{
  return MEMORY[0x270F9F7C0]();
}

uint64_t sub_24E2F1430()
{
  return MEMORY[0x270F9F7D0]();
}

uint64_t sub_24E2F1440()
{
  return MEMORY[0x270F9FB10]();
}

uint64_t sub_24E2F1450()
{
  return MEMORY[0x270F9FB18]();
}

uint64_t sub_24E2F1460()
{
  return MEMORY[0x270F9FB30]();
}

uint64_t sub_24E2F1470()
{
  return MEMORY[0x270F9FB38]();
}

uint64_t sub_24E2F1480()
{
  return MEMORY[0x270F9FB40]();
}

uint64_t sub_24E2F1490()
{
  return MEMORY[0x270F9FB48]();
}

uint64_t sub_24E2F14A0()
{
  return MEMORY[0x270F9FC48]();
}

uint64_t sub_24E2F14B0()
{
  return MEMORY[0x270F9FC60]();
}

uint64_t sub_24E2F14C0()
{
  return MEMORY[0x270F9FC68]();
}

uint64_t sub_24E2F14D0()
{
  return MEMORY[0x270F9FC90]();
}

uint64_t sub_24E2F14E0()
{
  return MEMORY[0x270F9FD70]();
}

uint64_t sub_24E2F14F0()
{
  return MEMORY[0x270F9FD98]();
}

uint64_t sub_24E2F1500()
{
  return MEMORY[0x270F9FDD0]();
}

uint64_t sub_24E2F1520()
{
  return MEMORY[0x270F9FFC8]();
}

uint64_t sub_24E2F1530()
{
  return MEMORY[0x270F9FFD8]();
}

uint64_t sub_24E2F1540()
{
  return MEMORY[0x270F9FFE8]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x270ED7CD8](aBlock);
}

void _Block_release(const void *aBlock)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x270FA0158]();
}

void bzero(void *a1, size_t a2)
{
}

void free(void *a1)
{
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x270EDA328](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x270EDA378](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x270EDA470](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x270EDA488](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x270F9A538](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6D0](a1, a2);
}

uint64_t self
{
  return MEMORY[0x270F9A730]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x270F9A870](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A890](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x270EDA9D0](oslog, type);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x270FA0180]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x270FA0190]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x270FA0198]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x270FA01A0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x270FA01C0]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x270FA01C8]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x270FA01D0]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x270FA01D8]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x270FA01E0]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x270FA01E8]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x270FA01F0]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x270FA01F8]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x270FA0200]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x270FA0208]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x270FA23F8]();
}

uint64_t swift_defaultActor_destroy()
{
  return MEMORY[0x270FA2420]();
}

uint64_t swift_defaultActor_initialize()
{
  return MEMORY[0x270FA2428]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x270FA0260]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x270FA02C0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x270FA02C8]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x270FA02D0]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x270FA02F8]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x270FA0300]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x270FA0310]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x270FA0338]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x270FA0370]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x270FA03B0]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x270FA03B8]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x270FA03D0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x270FA03E0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x270FA03E8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x270FA0400]();
}

uint64_t swift_getTupleTypeLayout2()
{
  return MEMORY[0x270FA0410]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x270FA0428]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x270FA0440]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x270FA0448]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x270FA0450]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x270FA0458]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x270FA0460]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x270FA0478]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x270FA0488]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x270FA04C8]();
}

uint64_t swift_once()
{
  return MEMORY[0x270FA04F0]();
}

uint64_t swift_release()
{
  return MEMORY[0x270FA0520]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x270FA0528]();
}

uint64_t swift_retain()
{
  return MEMORY[0x270FA0530]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x270FA0558]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x270FA0560]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x270FA0578]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x270FA2450]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x270FA2460]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x270FA0590]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x270FA05A0]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x270FA0628]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x270FA0670]();
}