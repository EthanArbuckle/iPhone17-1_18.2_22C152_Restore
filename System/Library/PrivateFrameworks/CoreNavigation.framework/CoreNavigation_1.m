void *CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.RayTracingTileData.RayTracingTilePayload");
}

uint64_t sub_18DF47D1C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_18DF47D24(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_18DF47D2C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

uint64_t sub_18DF47D34(uint64_t a1)
{
  return *(unsigned int *)(a1 + 68);
}

uint64_t sub_18DF47D3C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_18DF47D44(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_18DF47D4C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 208);
}

uint64_t sub_18DF47D54(uint64_t result, int a2)
{
  int v2 = *(_DWORD *)(result + 12);
  if (v2 < a2)
  {
    int v3 = 2 * v2;
    if (v3 <= a2) {
      int v3 = a2;
    }
    if (v3 <= 4) {
      int v3 = 4;
    }
    *(_DWORD *)(result + 12) = v3;
    operator new[]();
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::protobuf_ShutdownFile_CoreNavigationCLPVisionEvent_2eproto(CoreNavigation::CLP::LogEntry::Vision *this)
{
  if (CoreNavigation::CLP::LogEntry::Vision::TimeStamp::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::Vision::TimeStamp::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::Vision::TimeStamp::default_instance_);
  if (CoreNavigation::CLP::LogEntry::Vision::simd_floatM::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::Vision::simd_floatM::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::Vision::simd_floatM::default_instance_);
  if (CoreNavigation::CLP::LogEntry::Vision::simd_doubleM::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::Vision::simd_doubleM::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::Vision::simd_doubleM::default_instance_);
  if (CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::default_instance_);
  if (CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::default_instance_);
  if (CoreNavigation::CLP::LogEntry::Vision::CGSize::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::Vision::CGSize::default_instance_ + 8))(CoreNavigation::CLP::LogEntry::Vision::CGSize::default_instance_);
  }
  if (CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo::default_instance_);
  if (CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo::default_instance_);
  if (CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::default_instance_);
  if (CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate::default_instance_);
  if (CoreNavigation::CLP::LogEntry::Vision::LSLLocation::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::Vision::LSLLocation::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::Vision::LSLLocation::default_instance_);
  if (CoreNavigation::CLP::LogEntry::Vision::LSLHeading::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::Vision::LSLHeading::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::Vision::LSLHeading::default_instance_);
  if (CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment::default_instance_);
  if (CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::default_instance_);
  if (CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation::default_instance_);
  if (CoreNavigation::CLP::LogEntry::Vision::VLLocation::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::Vision::VLLocation::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::Vision::VLLocation::default_instance_);
  if (CoreNavigation::CLP::LogEntry::Vision::VLVectorfM::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::Vision::VLVectorfM::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::Vision::VLVectorfM::default_instance_);
  if (CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN::default_instance_);
  if (CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details::default_instance_);
  if (CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo::default_instance_);
  uint64_t result = CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::default_instance_;
  if (CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::default_instance_)
  {
    int v2 = *(uint64_t (**)(void))(*(void *)CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::default_instance_
                             + 8);
    return v2();
  }
  return result;
}

void CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto_impl(CoreNavigation::CLP::LogEntry::Vision *this, uint64_t a2, uint64_t a3, const char *a4)
{
}

double CoreNavigation::CLP::LogEntry::Vision::TimeStamp::TimeStamp(CoreNavigation::CLP::LogEntry::Vision::TimeStamp *this)
{
  *(void *)this = &unk_1EDD12068;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD12068;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

void *CoreNavigation::CLP::LogEntry::Vision::simd_floatM::simd_floatM(void *this)
{
  *this = &unk_1EDD11870;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

{
  *this = &unk_1EDD11870;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

void *CoreNavigation::CLP::LogEntry::Vision::simd_doubleM::simd_doubleM(void *this)
{
  *this = &unk_1EDD11960;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

{
  *this = &unk_1EDD11960;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::simd_floatMxN(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_1EDD11A50;
  *(_DWORD *)(this + 24) = 0;
  *(void *)(this + 32) = 0;
  return this;
}

{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_1EDD11A50;
  *(_DWORD *)(this + 24) = 0;
  *(void *)(this + 32) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::simd_doubleMxN(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_1EDD11AC8;
  *(_DWORD *)(this + 24) = 0;
  *(void *)(this + 32) = 0;
  return this;
}

{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_1EDD11AC8;
  *(_DWORD *)(this + 24) = 0;
  *(void *)(this + 32) = 0;
  return this;
}

void *CoreNavigation::CLP::LogEntry::Vision::CGSize::CGSize(void *this)
{
  *this = &unk_1EDD11F78;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

{
  *this = &unk_1EDD11F78;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo::VIOInertialStateInfo(CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo *this)
{
  *(void *)this = &unk_1EDD11CA8;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 52) = 0u;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD11CA8;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 52) = 0u;
  return result;
}

double CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo::VIOInertialCovarianceInfo(CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo *this)
{
  *(void *)this = &unk_1EDD11E88;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 52) = 0u;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD11E88;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 52) = 0u;
  return result;
}

double CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::VIOEstimation(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation *this)
{
  *(void *)&double result = 0xFFFFFFFFLL;
  *((void *)this + 10) = 0xFFFFFFFFLL;
  *(void *)this = &unk_1EDD119D8;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  uint64_t v2 = MEMORY[0x1E4FBA920];
  *((void *)this + 4) = MEMORY[0x1E4FBA920];
  *((void *)this + 5) = 0;
  *((_DWORD *)this + 22) = 0;
  *((void *)this + 6) = v2;
  *((void *)this + 7) = 0;
  *((void *)this + 8) = 0;
  *((void *)this + 9) = 0;
  return result;
}

{
  double result;
  uint64_t v2;

  *(void *)&double result = 0xFFFFFFFFLL;
  *((void *)this + 10) = 0xFFFFFFFFLL;
  *(void *)this = &unk_1EDD119D8;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  uint64_t v2 = MEMORY[0x1E4FBA920];
  *((void *)this + 4) = MEMORY[0x1E4FBA920];
  *((void *)this + 5) = 0;
  *((_DWORD *)this + 22) = 0;
  *((void *)this + 6) = v2;
  *((void *)this + 7) = 0;
  *((void *)this + 8) = 0;
  *((void *)this + 9) = 0;
  return result;
}

void *CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate::LSLLocationCoordinate(void *this)
{
  *this = &unk_1EDD11D98;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

{
  *this = &unk_1EDD11D98;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::Vision::LSLLocation::LSLLocation(CoreNavigation::CLP::LogEntry::Vision::LSLLocation *this)
{
  *(void *)this = &unk_1EDD117F8;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD117F8;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

double CoreNavigation::CLP::LogEntry::Vision::LSLHeading::LSLHeading(CoreNavigation::CLP::LogEntry::Vision::LSLHeading *this)
{
  *(void *)this = &unk_1EDD11690;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(void *)&double result = 0xFFFFFFFFLL;
  *((void *)this + 8) = 0xFFFFFFFFLL;
  *((_DWORD *)this + 18) = 0;
  *((void *)this + 6) = 0;
  *((void *)this + 7) = 0;
  *((void *)this + 5) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD11690;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(void *)&double result = 0xFFFFFFFFLL;
  *((void *)this + 8) = 0xFFFFFFFFLL;
  *((_DWORD *)this + 18) = 0;
  *((void *)this + 6) = 0;
  *((void *)this + 7) = 0;
  *((void *)this + 5) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment::LSLMapRoadSegment(uint64_t this)
{
  *(void *)(this + 40) = 0;
  *(void *)this = &unk_1EDD11B40;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

{
  *(void *)(this + 40) = 0;
  *(void *)this = &unk_1EDD11B40;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

void *CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::LSLHeadingSupplInfo(void *this)
{
  this[1] = 0;
  this[2] = 0;
  *this = &unk_1EDD11BB8;
  return this;
}

{
  this[1] = 0;
  this[2] = 0;
  *this = &unk_1EDD11BB8;
  return this;
}

double CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation::LSLHeadingEstimation(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation *this)
{
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)this = &unk_1EDD11C30;
  *((_DWORD *)this + 6) = 0;
  *(void *)&double result = 0x8FFFFFFFFLL;
  *((_OWORD *)this + 2) = xmmword_18E1F2F40;
  return result;
}

{
  double result;

  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)this = &unk_1EDD11C30;
  *((_DWORD *)this + 6) = 0;
  *(void *)&double result = 0x8FFFFFFFFLL;
  *((_OWORD *)this + 2) = xmmword_18E1F2F40;
  return result;
}

void *CoreNavigation::CLP::LogEntry::Vision::VLLocation::VLLocation(void *this)
{
  *this = &unk_1EDD11708;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

{
  *this = &unk_1EDD11708;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

void *CoreNavigation::CLP::LogEntry::Vision::VLVectorfM::VLVectorfM(void *this)
{
  *this = &unk_1EDD11780;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

{
  *this = &unk_1EDD11780;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN::VLMatrixfMxN(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_1EDD118E8;
  *(_DWORD *)(this + 24) = 0;
  *(void *)(this + 32) = 0;
  return this;
}

{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_1EDD118E8;
  *(_DWORD *)(this + 24) = 0;
  *(void *)(this + 32) = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details::VLLocalizationMaps488Details(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details *this)
{
  *(void *)this = &unk_1EDD11F00;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 152) = 0u;
  *((_OWORD *)this + 11) = 0u;
  *((_OWORD *)this + 12) = 0u;
  *((_OWORD *)this + 13) = 0u;
  *((_OWORD *)this + 14) = 0u;
  *((_OWORD *)this + 15) = 0u;
  *((_OWORD *)this + 16) = 0u;
  uint64_t v2 = MEMORY[0x1E4FBA920];
  *((void *)this + 34) = 0;
  *((void *)this + 13) = 0;
  *((void *)this + 14) = v2;
  *((void *)this + 21) = 0;
  return result;
}

{
  double result;
  uint64_t v2;

  *(void *)this = &unk_1EDD11F00;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 152) = 0u;
  *((_OWORD *)this + 11) = 0u;
  *((_OWORD *)this + 12) = 0u;
  *((_OWORD *)this + 13) = 0u;
  *((_OWORD *)this + 14) = 0u;
  *((_OWORD *)this + 15) = 0u;
  *((_OWORD *)this + 16) = 0u;
  uint64_t v2 = MEMORY[0x1E4FBA920];
  *((void *)this + 34) = 0;
  *((void *)this + 13) = 0;
  *((void *)this + 14) = v2;
  *((void *)this + 21) = 0;
  return result;
}

void *CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo::VLLocalizationDebugInfo(void *this)
{
  *this = &unk_1EDD11E10;
  this[1] = 0;
  return this;
}

{
  *this = &unk_1EDD11E10;
  this[1] = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::VLLocalizationResult(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult *this)
{
  *(void *)this = &unk_1EDD11D20;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((_DWORD *)this + 14) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD11D20;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((_DWORD *)this + 14) = 0;
  return result;
}

void *CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::InitAsDefaultInstance(void *this)
{
  uint64_t v1 = CoreNavigation::CLP::LogEntry::Vision::TimeStamp::default_instance_;
  this[1] = CoreNavigation::CLP::LogEntry::Vision::TimeStamp::default_instance_;
  this[2] = v1;
  this[3] = CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo::default_instance_;
  this[5] = CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo::default_instance_;
  uint64_t v2 = CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::default_instance_;
  this[7] = CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::default_instance_;
  this[8] = v2;
  this[9] = CoreNavigation::CLP::LogEntry::Vision::CGSize::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLLocation::InitAsDefaultInstance(uint64_t this)
{
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate::default_instance_;
  *(void *)(this + 24) = CoreNavigation::CLP::LogEntry::Vision::TimeStamp::default_instance_;
  return this;
}

void *CoreNavigation::CLP::LogEntry::Vision::LSLHeading::InitAsDefaultInstance(void *this)
{
  uint64_t v1 = CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::default_instance_;
  this[1] = CoreNavigation::CLP::LogEntry::Vision::TimeStamp::default_instance_;
  this[2] = v1;
  uint64_t v2 = CoreNavigation::CLP::LogEntry::Vision::simd_doubleM::default_instance_;
  this[3] = v1;
  this[4] = v2;
  uint64_t v3 = CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::default_instance_;
  this[6] = CoreNavigation::CLP::LogEntry::Vision::LSLLocation::default_instance_;
  this[7] = v3;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::InitAsDefaultInstance(uint64_t this)
{
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLLocation::InitAsDefaultInstance(uint64_t this)
{
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::Vision::simd_doubleM::default_instance_;
  return this;
}

void *CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::InitAsDefaultInstance(void *this)
{
  uint64_t v1 = CoreNavigation::CLP::LogEntry::Vision::VLLocation::default_instance_;
  this[1] = CoreNavigation::CLP::LogEntry::Vision::TimeStamp::default_instance_;
  this[2] = v1;
  uint64_t v2 = CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN::default_instance_;
  this[3] = CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::default_instance_;
  this[4] = v2;
  this[5] = CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo::default_instance_;
  return this;
}

void CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(CoreNavigation::CLP::LogEntry::Vision *this)
{
  uint64_t v1 = CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto_once_;
  __dmb(0xBu);
  if (v1 != 2)
  {
    v2[0] = MEMORY[0x1E4FBA938] + 16;
    v2[1] = CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto_impl;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
}

void sub_18DF48EE0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

BOOL CoreNavigation::CLP::LogEntry::Vision::ARSessionState_IsValid(CoreNavigation::CLP::LogEntry::Vision *this)
{
  return (this + 1) < 4;
}

BOOL CoreNavigation::CLP::LogEntry::Vision::VIOTrackingState_IsValid(CoreNavigation::CLP::LogEntry::Vision *this)
{
  return (this + 1) < 6;
}

BOOL CoreNavigation::CLP::LogEntry::Vision::LSLStatus_DEPRECATED_IsValid(CoreNavigation::CLP::LogEntry::Vision *this)
{
  return (this + 1) < 6;
}

BOOL CoreNavigation::CLP::LogEntry::Vision::LSLHeadingStatus_IsValid(CoreNavigation::CLP::LogEntry::Vision *this)
{
  return this < 9;
}

BOOL CoreNavigation::CLP::LogEntry::Vision::LSLGlobalReferenceFrame_IsValid(CoreNavigation::CLP::LogEntry::Vision *this)
{
  return (this + 1) < 4;
}

double CoreNavigation::CLP::LogEntry::Vision::TimeStamp::SharedCtor(CoreNavigation::CLP::LogEntry::Vision::TimeStamp *this)
{
  double result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::Vision::TimeStamp *CoreNavigation::CLP::LogEntry::Vision::TimeStamp::TimeStamp(CoreNavigation::CLP::LogEntry::Vision::TimeStamp *this, const CoreNavigation::CLP::LogEntry::Vision::TimeStamp *a2)
{
  *(void *)this = &unk_1EDD12068;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  CoreNavigation::CLP::LogEntry::Vision::TimeStamp::MergeFrom(this, a2);
  return this;
}

void sub_18DF48FCC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::Vision::TimeStamp::MergeFrom(CoreNavigation::CLP::LogEntry::Vision::TimeStamp *this, const CoreNavigation::CLP::LogEntry::Vision::TimeStamp *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 36);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 36))
    {
      double result = *((double *)a2 + 1);
      *((_DWORD *)this + 9) |= 1u;
      *((double *)this + 1) = result;
      int v5 = *((_DWORD *)a2 + 9);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          return result;
        }
        goto LABEL_7;
      }
    }
    else if ((*((unsigned char *)a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    double result = *((double *)a2 + 2);
    *((_DWORD *)this + 9) |= 2u;
    *((double *)this + 2) = result;
    if ((*((_DWORD *)a2 + 9) & 4) == 0) {
      return result;
    }
LABEL_7:
    double result = *((double *)a2 + 3);
    *((_DWORD *)this + 9) |= 4u;
    *((double *)this + 3) = result;
  }
  return result;
}

void sub_18DF490B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::TimeStamp::~TimeStamp(CoreNavigation::CLP::LogEntry::Vision::TimeStamp *this)
{
  *(void *)this = &unk_1EDD12068;
  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::Vision::TimeStamp::~TimeStamp(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::TimeStamp::default_instance(CoreNavigation::CLP::LogEntry::Vision::TimeStamp *this)
{
  return CoreNavigation::CLP::LogEntry::Vision::TimeStamp::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::TimeStamp::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 32) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::Vision::TimeStamp::New(CoreNavigation::CLP::LogEntry::Vision::TimeStamp *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::TimeStamp::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 36))
  {
    *(void *)(this + 8) = 0;
    *(void *)(this + 16) = 0;
    *(void *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 36) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::TimeStamp::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Vision::TimeStamp *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  do
  {
    while (1)
    {
      while (1)
      {
        v4 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v4;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((void *)a2 + 1) = v4 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v6 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_27;
        }
        unint64_t v11 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0) {
          return 0;
        }
        *((void *)this + 1) = v11;
        *((_DWORD *)this + 9) |= 1u;
        v8 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v8 < *((void *)a2 + 2) && *v8 == 17)
        {
          *((void *)a2 + 1) = v8 + 1;
LABEL_17:
          unint64_t v11 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0) {
            return 0;
          }
          *((void *)this + 2) = v11;
          *((_DWORD *)this + 9) |= 2u;
          v9 = (unsigned char *)*((void *)a2 + 1);
          if ((unint64_t)v9 < *((void *)a2 + 2) && *v9 == 25)
          {
            *((void *)a2 + 1) = v9 + 1;
            goto LABEL_21;
          }
        }
      }
      if (v6 == 2)
      {
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_27;
        }
        goto LABEL_17;
      }
      if (v6 != 3)
      {
        int v7 = TagFallback & 7;
        goto LABEL_27;
      }
      int v7 = TagFallback & 7;
      if (v7 == 1) {
        break;
      }
LABEL_27:
      if (v7 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
    }
      }
LABEL_21:
    unint64_t v11 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0) {
      return 0;
    }
    *((void *)this + 3) = v11;
    *((_DWORD *)this + 9) |= 4u;
  }
  while (*((void *)a2 + 1) != *((void *)a2 + 2)
       || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10));
  *((_DWORD *)a2 + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)a2 + 36) = 1;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::TimeStamp::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = this;
  int v5 = *(_DWORD *)(this + 36);
  if ((v5 & 1) == 0)
  {
    if ((v5 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v4 + 16), a3);
    if ((*(_DWORD *)(v4 + 36) & 4) == 0) {
      return this;
    }
    goto LABEL_7;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
  int v5 = *(_DWORD *)(v4 + 36);
  if ((v5 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 4) == 0) {
    return this;
  }
LABEL_7:
  double v6 = *(double *)(v4 + 24);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, v6, a3);
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::TimeStamp::ByteSize(CoreNavigation::CLP::LogEntry::Vision::TimeStamp *this)
{
  uint64_t v1 = *((unsigned __int8 *)this + 36);
  if (*((unsigned char *)this + 36))
  {
    unsigned int v2 = ((int)(v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0) {
      v2 += 9;
    }
    if ((v1 & 4) != 0) {
      uint64_t v1 = v2 + 9;
    }
    else {
      uint64_t v1 = v2;
    }
  }
  *((_DWORD *)this + 8) = v1;
  return v1;
}

double CoreNavigation::CLP::LogEntry::Vision::TimeStamp::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Vision::TimeStamp *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::Vision::TimeStamp::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::Vision::TimeStamp::CopyFrom(CoreNavigation::CLP::LogEntry::Vision::TimeStamp *this, const CoreNavigation::CLP::LogEntry::Vision::TimeStamp *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Vision::TimeStamp *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::Vision::TimeStamp::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::TimeStamp::IsInitialized(CoreNavigation::CLP::LogEntry::Vision::TimeStamp *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::Vision::TimeStamp::Swap(CoreNavigation::CLP::LogEntry::Vision::TimeStamp *this, CoreNavigation::CLP::LogEntry::Vision::TimeStamp *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    uint64_t v3 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    double result = *((double *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    *((double *)a2 + 3) = result;
    int v5 = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v5;
    int v6 = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v6;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::Vision::TimeStamp::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.Vision.TimeStamp");
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_floatM::SharedCtor(uint64_t this)
{
  *(void *)(this + 24) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::Vision::simd_floatM *CoreNavigation::CLP::LogEntry::Vision::simd_floatM::simd_floatM(CoreNavigation::CLP::LogEntry::Vision::simd_floatM *this, const CoreNavigation::CLP::LogEntry::Vision::simd_floatM *a2)
{
  *(void *)this = &unk_1EDD11870;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  CoreNavigation::CLP::LogEntry::Vision::simd_floatM::MergeFrom(this, a2);
  return this;
}

void sub_18DF49688(_Unwind_Exception *a1)
{
  uint64_t v3 = v2;
  if (*v3) {
    MEMORY[0x192FA6220](*v3, 0x1000C8052888210);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::simd_floatM::MergeFrom(CoreNavigation::CLP::LogEntry::Vision::simd_floatM *this, const CoreNavigation::CLP::LogEntry::Vision::simd_floatM *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v5);
  }
  int v4 = *((_DWORD *)a2 + 4);
  if (v4)
  {
    sub_18DF47D54((uint64_t)this + 8, *((_DWORD *)this + 4) + v4);
    memcpy((void *)(*((void *)this + 1) + 4 * *((int *)this + 4)), *((const void **)a2 + 1), 4 * *((int *)a2 + 4));
    *((_DWORD *)this + 4) += *((_DWORD *)a2 + 4);
  }
}

void sub_18DF49770(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::simd_floatM::~simd_floatM(CoreNavigation::CLP::LogEntry::Vision::simd_floatM *this)
{
  *(void *)this = &unk_1EDD11870;
  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
  uint64_t v2 = *((void *)this + 1);
  if (v2) {
    MEMORY[0x192FA6220](v2, 0x1000C8052888210);
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::Vision::simd_floatM::~simd_floatM(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_floatM::default_instance(CoreNavigation::CLP::LogEntry::Vision::simd_floatM *this)
{
  return CoreNavigation::CLP::LogEntry::Vision::simd_floatM::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_floatM::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 24) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::Vision::simd_floatM::New(CoreNavigation::CLP::LogEntry::Vision::simd_floatM *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_floatM::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 28) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_floatM::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Vision::simd_floatM *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (char *)this + 8;
  while (1)
  {
    while (1)
    {
      int v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v5 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      int v7 = TagFallback & 7;
      if ((TagFallback & 0xFFFFFFF8) != 8) {
        break;
      }
      if (v7 != 2)
      {
        if (v7 != 5) {
          break;
        }
        goto LABEL_15;
      }
      uint64_t result = sub_18DF49B3C(a2, (uint64_t)v4);
      if (!result) {
        return result;
      }
      while (1)
      {
        v19 = (unsigned char *)*((void *)a2 + 1);
        v20 = (unsigned char *)*((void *)a2 + 2);
        if (v19 >= v20 || *v19 != 13) {
          break;
        }
        *((void *)a2 + 1) = v19 + 1;
LABEL_15:
        v21[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v21) & 1) == 0) {
          return 0;
        }
        unsigned int v9 = v21[0];
        int v10 = *((_DWORD *)this + 4);
        if (v10 == *((_DWORD *)this + 5))
        {
          sub_18DF47D54((uint64_t)v4, v10 + 1);
          int v10 = *((_DWORD *)this + 4);
        }
        uint64_t v11 = *((void *)this + 1);
        int v12 = v10 + 1;
        *((_DWORD *)this + 4) = v10 + 1;
        *(_DWORD *)(v11 + 4 * v10) = v9;
        uint64_t v13 = *((void *)a2 + 1);
        int v14 = *((_DWORD *)a2 + 4) - v13;
        if (v14 >= 1)
        {
          signed int v15 = v14 / 5u;
          int v16 = v15 >= *((_DWORD *)this + 5) - v12 ? *((_DWORD *)this + 5) - v12 : v15;
          if (v16 >= 1)
          {
            int v17 = 0;
            while (*(unsigned char *)v13 == 13)
            {
              int v18 = *(_DWORD *)(v13 + 1);
              if (v12 >= *((_DWORD *)this + 5))
              {
                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v21);
                int v12 = *((_DWORD *)this + 4);
                uint64_t v11 = *((void *)this + 1);
              }
              *((_DWORD *)this + 4) = v12 + 1;
              *(_DWORD *)(v11 + 4 * v12) = v18;
              ++v17;
              v13 += 5;
              ++v12;
              if (v16 == v17)
              {
                int v17 = v16;
                break;
              }
            }
            if (v17) {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(a2);
            }
          }
        }
      }
      if (v19 == v20 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      }
    }
    if (v7 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

void sub_18DF49B24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_18DF49B3C(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t a2)
{
  unsigned int v9 = 0;
  int v4 = (char *)*((void *)this + 1);
  if ((unint64_t)v4 >= *((void *)this + 2) || *v4 < 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v9);
    if (!result) {
      return result;
    }
  }
  else
  {
    unsigned int v9 = *v4;
    *((void *)this + 1) = v4 + 1;
  }
  wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
  if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) < 1)
  {
LABEL_10:
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
    return 1;
  }
  else
  {
    while (1)
    {
      unsigned int v10 = 0;
      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(this, &v10);
      if (!result) {
        break;
      }
      unsigned int v6 = v10;
      int v7 = *(_DWORD *)(a2 + 8);
      if (v7 == *(_DWORD *)(a2 + 12))
      {
        sub_18DF47D54(a2, v7 + 1);
        int v7 = *(_DWORD *)(a2 + 8);
      }
      uint64_t v8 = *(void *)a2;
      *(_DWORD *)(a2 + 8) = v7 + 1;
      *(_DWORD *)(v8 + 4 * v7) = v6;
      if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) <= 0) {
        goto LABEL_10;
      }
    }
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_floatM::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  if (*(int *)(this + 16) >= 1)
  {
    uint64_t v4 = this;
    uint64_t v5 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(float *)(*(void *)(v4 + 8) + 4 * v5++), a3);
    while (v5 < *(int *)(v4 + 16));
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_floatM::ByteSize(CoreNavigation::CLP::LogEntry::Vision::simd_floatM *this)
{
  uint64_t v1 = (5 * *((_DWORD *)this + 4));
  *((_DWORD *)this + 6) = v1;
  return v1;
}

void CoreNavigation::CLP::LogEntry::Vision::simd_floatM::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Vision::simd_floatM *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::Vision::simd_floatM::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::Vision::simd_floatM::CopyFrom(CoreNavigation::CLP::LogEntry::Vision::simd_floatM *this, const CoreNavigation::CLP::LogEntry::Vision::simd_floatM *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Vision::simd_floatM *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::Vision::simd_floatM::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_floatM::IsInitialized(CoreNavigation::CLP::LogEntry::Vision::simd_floatM *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::Vision::simd_floatM::Swap(CoreNavigation::CLP::LogEntry::Vision::simd_floatM *this, CoreNavigation::CLP::LogEntry::Vision::simd_floatM *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    double result = *((double *)a2 + 2);
    *((void *)a2 + 1) = v2;
    uint64_t v4 = *((void *)this + 2);
    *((double *)this + 2) = result;
    *((void *)a2 + 2) = v4;
    LODWORD(v2) = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LODWORD(v2) = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::Vision::simd_floatM::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.Vision.simd_floatM");
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_doubleM::SharedCtor(uint64_t this)
{
  *(void *)(this + 24) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::Vision::simd_doubleM *CoreNavigation::CLP::LogEntry::Vision::simd_doubleM::simd_doubleM(CoreNavigation::CLP::LogEntry::Vision::simd_doubleM *this, const CoreNavigation::CLP::LogEntry::Vision::simd_doubleM *a2)
{
  *(void *)this = &unk_1EDD11960;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  CoreNavigation::CLP::LogEntry::Vision::simd_doubleM::MergeFrom(this, a2);
  return this;
}

void sub_18DF49E9C(_Unwind_Exception *a1)
{
  uint64_t v3 = v2;
  if (*v3) {
    MEMORY[0x192FA6220](*v3, 0x1000C8000313F17);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::simd_doubleM::MergeFrom(CoreNavigation::CLP::LogEntry::Vision::simd_doubleM *this, const CoreNavigation::CLP::LogEntry::Vision::simd_doubleM *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v5);
  }
  int v4 = *((_DWORD *)a2 + 4);
  if (v4)
  {
    sub_18DF0C278((uint64_t)this + 8, *((_DWORD *)this + 4) + v4);
    memcpy((void *)(*((void *)this + 1) + 8 * *((int *)this + 4)), *((const void **)a2 + 1), 8 * *((int *)a2 + 4));
    *((_DWORD *)this + 4) += *((_DWORD *)a2 + 4);
  }
}

void sub_18DF49F84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::simd_doubleM::~simd_doubleM(CoreNavigation::CLP::LogEntry::Vision::simd_doubleM *this)
{
  *(void *)this = &unk_1EDD11960;
  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
  uint64_t v2 = *((void *)this + 1);
  if (v2) {
    MEMORY[0x192FA6220](v2, 0x1000C8000313F17);
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::Vision::simd_doubleM::~simd_doubleM(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_doubleM::default_instance(CoreNavigation::CLP::LogEntry::Vision::simd_doubleM *this)
{
  return CoreNavigation::CLP::LogEntry::Vision::simd_doubleM::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_doubleM::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 24) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::Vision::simd_doubleM::New(CoreNavigation::CLP::LogEntry::Vision::simd_doubleM *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_doubleM::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 28) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_doubleM::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Vision::simd_doubleM *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (char *)this + 8;
  while (1)
  {
LABEL_2:
    uint64_t v5 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    int v7 = TagFallback & 7;
    if ((TagFallback & 0xFFFFFFF8) == 8)
    {
      if (v7 == 1)
      {
        while (1)
        {
          v21[0] = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, v21) & 1) == 0) {
            return 0;
          }
          unint64_t v9 = v21[0];
          int v10 = *((_DWORD *)this + 4);
          if (v10 == *((_DWORD *)this + 5))
          {
            sub_18DF0C278((uint64_t)v4, v10 + 1);
            int v10 = *((_DWORD *)this + 4);
          }
          uint64_t v11 = *((void *)this + 1);
          int v12 = v10 + 1;
          *((_DWORD *)this + 4) = v10 + 1;
          *(void *)(v11 + 8 * v10) = v9;
          uint64_t v13 = *((void *)a2 + 1);
          int v14 = *((_DWORD *)a2 + 4) - v13;
          if (v14 >= 1)
          {
            signed int v15 = v14 / 9u;
            int v16 = v15 >= *((_DWORD *)this + 5) - v12 ? *((_DWORD *)this + 5) - v12 : v15;
            if (v16 >= 1)
            {
              int v17 = 0;
              while (*(unsigned char *)v13 == 9)
              {
                uint64_t v18 = *(void *)(v13 + 1);
                if (v12 >= *((_DWORD *)this + 5))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v21);
                  int v12 = *((_DWORD *)this + 4);
                  uint64_t v11 = *((void *)this + 1);
                }
                *((_DWORD *)this + 4) = v12 + 1;
                *(void *)(v11 + 8 * v12) = v18;
                ++v17;
                v13 += 9;
                ++v12;
                if (v16 == v17)
                {
                  int v17 = v16;
                  break;
                }
              }
              if (v17) {
                wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(a2);
              }
            }
          }
LABEL_31:
          v19 = (unsigned char *)*((void *)a2 + 1);
          v20 = (unsigned char *)*((void *)a2 + 2);
          if (v19 >= v20 || *v19 != 9)
          {
            if (v19 == v20 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
            {
              *((_DWORD *)a2 + 8) = 0;
              uint64_t result = 1;
              *((unsigned char *)a2 + 36) = 1;
              return result;
            }
            goto LABEL_2;
          }
          *((void *)a2 + 1) = v19 + 1;
        }
      }
      if (v7 == 2) {
        break;
      }
    }
    if (v7 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
  uint64_t result = sub_18DF39FAC(a2, (uint64_t)v4);
  if (result) {
    goto LABEL_31;
  }
  return result;
}

void sub_18DF4A338(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_doubleM::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  if (*(int *)(this + 16) >= 1)
  {
    uint64_t v4 = this;
    uint64_t v5 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(*(void *)(v4 + 8) + 8 * v5++), a3);
    while (v5 < *(int *)(v4 + 16));
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_doubleM::ByteSize(CoreNavigation::CLP::LogEntry::Vision::simd_doubleM *this)
{
  uint64_t v1 = (9 * *((_DWORD *)this + 4));
  *((_DWORD *)this + 6) = v1;
  return v1;
}

void CoreNavigation::CLP::LogEntry::Vision::simd_doubleM::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Vision::simd_doubleM *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::Vision::simd_doubleM::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::Vision::simd_doubleM::CopyFrom(CoreNavigation::CLP::LogEntry::Vision::simd_doubleM *this, const CoreNavigation::CLP::LogEntry::Vision::simd_doubleM *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Vision::simd_doubleM *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::Vision::simd_doubleM::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_doubleM::IsInitialized(CoreNavigation::CLP::LogEntry::Vision::simd_doubleM *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::Vision::simd_doubleM::Swap(CoreNavigation::CLP::LogEntry::Vision::simd_doubleM *this, CoreNavigation::CLP::LogEntry::Vision::simd_doubleM *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    double result = *((double *)a2 + 2);
    *((void *)a2 + 1) = v2;
    uint64_t v4 = *((void *)this + 2);
    *((double *)this + 2) = result;
    *((void *)a2 + 2) = v4;
    LODWORD(v2) = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LODWORD(v2) = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::Vision::simd_doubleM::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.Vision.simd_doubleM");
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::SharedCtor(uint64_t this)
{
  *(void *)(this + 32) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN *CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::simd_floatMxN(CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN *this, const CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN *a2)
{
  *(void *)this = &unk_1EDD11A50;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  *((void *)this + 4) = 0;
  CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::MergeFrom(this, a2);
  return this;
}

void sub_18DF4A5CC(_Unwind_Exception *a1)
{
  sub_18DF0C324(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::MergeFrom(CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN *this, const CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN *)((char *)this + 8));
  if (*((int *)a2 + 4) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(const CoreNavigation::CLP::LogEntry::Vision::simd_floatM **)(*((void *)a2 + 1) + 8 * v4);
      int v6 = *((_DWORD *)this + 5);
      uint64_t v7 = *((int *)this + 4);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 6))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN *)((char *)this + 8));
          int v6 = *((_DWORD *)this + 5);
        }
        *((_DWORD *)this + 5) = v6 + 1;
        operator new();
      }
      uint64_t v8 = *((void *)this + 1);
      *((_DWORD *)this + 4) = v7 + 1;
      CoreNavigation::CLP::LogEntry::Vision::simd_floatM::MergeFrom(*(CoreNavigation::CLP::LogEntry::Vision::simd_floatM **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 4));
  }
}

void sub_18DF4A748(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::~simd_floatMxN(CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN *this)
{
  *(void *)this = &unk_1EDD11A50;
  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
  sub_18DF0C324((uint64_t *)this + 1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::~simd_floatMxN(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::default_instance(CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN *this)
{
  return CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 32) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::New(CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::Clear(CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN *this)
{
  uint64_t result = sub_18DF0C208((uint64_t)this + 8);
  *((_DWORD *)this + 9) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4 = (CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN *)((char *)this + 8);
  while (1)
  {
LABEL_2:
    uint64_t v5 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v5 + 1;
    }
    if (TagFallback == 10)
    {
      while (1)
      {
        int v7 = *((_DWORD *)this + 5);
        uint64_t v8 = *((int *)this + 4);
        if ((int)v8 >= v7)
        {
          if (v7 == *((_DWORD *)this + 6))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
            int v7 = *((_DWORD *)this + 5);
          }
          *((_DWORD *)this + 5) = v7 + 1;
          operator new();
        }
        uint64_t v9 = *((void *)this + 1);
        *((_DWORD *)this + 4) = v8 + 1;
        int v10 = *(CoreNavigation::CLP::LogEntry::Vision::simd_floatM **)(v9 + 8 * v8);
        unsigned int v20 = 0;
        uint64_t v11 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v11 >= *((void *)a2 + 2) || *v11 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v20))return 0; {
        }
          }
        else
        {
          unsigned int v20 = *v11;
          *((void *)a2 + 1) = v11 + 1;
        }
        int v12 = *((_DWORD *)a2 + 14);
        int v13 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v12 + 1;
        if (v12 >= v13) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Vision::simd_floatM::MergePartialFromCodedStream(v10, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v14 = *((_DWORD *)a2 + 14);
        BOOL v15 = __OFSUB__(v14, 1);
        int v16 = v14 - 1;
        if (v16 < 0 == v15) {
          *((_DWORD *)a2 + 14) = v16;
        }
        int v17 = (unsigned char *)*((void *)a2 + 1);
        uint64_t v18 = (unsigned char *)*((void *)a2 + 2);
        if (v17 >= v18 || *v17 != 10)
        {
          if (v17 == v18 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)a2 + 36) = 1;
            return result;
          }
          goto LABEL_2;
        }
        *((void *)a2 + 1) = v17 + 1;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if (*(int *)(this + 16) >= 1)
  {
    uint64_t v5 = this;
    uint64_t v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(*(void *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::ByteSize(CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN *this)
{
  int v2 = *((_DWORD *)this + 4);
  if (v2 < 1)
  {
    uint64_t v4 = *((unsigned int *)this + 4);
  }
  else
  {
    uint64_t v3 = 0;
    LODWORD(v4) = *((_DWORD *)this + 4);
    do
    {
      uint64_t v5 = *(void *)(*((void *)this + 1) + 8 * v3);
      uint64_t v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(5 * *(_DWORD *)(v5 + 16));
      *(_DWORD *)(v5 + 24) = v6;
      if (v6 >= 0x80)
      {
        int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
        int v2 = *((_DWORD *)this + 4);
      }
      else
      {
        int v7 = 1;
      }
      uint64_t v4 = (v6 + v4 + v7);
      ++v3;
    }
    while (v3 < v2);
  }
  *((_DWORD *)this + 8) = v4;
  return v4;
}

void CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::CopyFrom(CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN *this, const CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::IsInitialized(CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN *this)
{
  return 1;
}

CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN *CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::Swap(CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN *this, CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN *a2)
{
  if (a2 != this)
  {
    uint64_t v3 = this;
    this = (CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    int v4 = *((_DWORD *)v3 + 9);
    *((_DWORD *)v3 + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v4;
    int v5 = *((_DWORD *)v3 + 8);
    *((_DWORD *)v3 + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v5;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.Vision.simd_floatMxN");
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::SharedCtor(uint64_t this)
{
  *(void *)(this + 32) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::simd_doubleMxN(CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *this, const CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *a2)
{
  *(void *)this = &unk_1EDD11AC8;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  *((void *)this + 4) = 0;
  CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::MergeFrom(this, a2);
  return this;
}

void sub_18DF4ADE0(_Unwind_Exception *a1)
{
  sub_18DF0C324(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::MergeFrom(CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *this, const CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *)((char *)this + 8));
  if (*((int *)a2 + 4) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      int v5 = *(const CoreNavigation::CLP::LogEntry::Vision::simd_doubleM **)(*((void *)a2 + 1) + 8 * v4);
      int v6 = *((_DWORD *)this + 5);
      uint64_t v7 = *((int *)this + 4);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 6))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *)((char *)this + 8));
          int v6 = *((_DWORD *)this + 5);
        }
        *((_DWORD *)this + 5) = v6 + 1;
        operator new();
      }
      uint64_t v8 = *((void *)this + 1);
      *((_DWORD *)this + 4) = v7 + 1;
      CoreNavigation::CLP::LogEntry::Vision::simd_doubleM::MergeFrom(*(CoreNavigation::CLP::LogEntry::Vision::simd_doubleM **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 4));
  }
}

void sub_18DF4AF5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::~simd_doubleMxN(CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *this)
{
  *(void *)this = &unk_1EDD11AC8;
  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
  sub_18DF0C324((uint64_t *)this + 1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::~simd_doubleMxN(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::default_instance(CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *this)
{
  return CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 32) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::New(CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::Clear(CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *this)
{
  uint64_t result = sub_18DF0C208((uint64_t)this + 8);
  *((_DWORD *)this + 9) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4 = (CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *)((char *)this + 8);
  while (1)
  {
LABEL_2:
    int v5 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v5 + 1;
    }
    if (TagFallback == 10)
    {
      while (1)
      {
        int v7 = *((_DWORD *)this + 5);
        uint64_t v8 = *((int *)this + 4);
        if ((int)v8 >= v7)
        {
          if (v7 == *((_DWORD *)this + 6))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
            int v7 = *((_DWORD *)this + 5);
          }
          *((_DWORD *)this + 5) = v7 + 1;
          operator new();
        }
        uint64_t v9 = *((void *)this + 1);
        *((_DWORD *)this + 4) = v8 + 1;
        int v10 = *(CoreNavigation::CLP::LogEntry::Vision::simd_doubleM **)(v9 + 8 * v8);
        unsigned int v20 = 0;
        uint64_t v11 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v11 >= *((void *)a2 + 2) || *v11 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v20))return 0; {
        }
          }
        else
        {
          unsigned int v20 = *v11;
          *((void *)a2 + 1) = v11 + 1;
        }
        int v12 = *((_DWORD *)a2 + 14);
        int v13 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v12 + 1;
        if (v12 >= v13) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Vision::simd_doubleM::MergePartialFromCodedStream(v10, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v14 = *((_DWORD *)a2 + 14);
        BOOL v15 = __OFSUB__(v14, 1);
        int v16 = v14 - 1;
        if (v16 < 0 == v15) {
          *((_DWORD *)a2 + 14) = v16;
        }
        int v17 = (unsigned char *)*((void *)a2 + 1);
        uint64_t v18 = (unsigned char *)*((void *)a2 + 2);
        if (v17 >= v18 || *v17 != 10)
        {
          if (v17 == v18 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)a2 + 36) = 1;
            return result;
          }
          goto LABEL_2;
        }
        *((void *)a2 + 1) = v17 + 1;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if (*(int *)(this + 16) >= 1)
  {
    uint64_t v5 = this;
    uint64_t v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(*(void *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::ByteSize(CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *this)
{
  int v2 = *((_DWORD *)this + 4);
  if (v2 < 1)
  {
    uint64_t v4 = *((unsigned int *)this + 4);
  }
  else
  {
    uint64_t v3 = 0;
    LODWORD(v4) = *((_DWORD *)this + 4);
    do
    {
      uint64_t v5 = *(void *)(*((void *)this + 1) + 8 * v3);
      uint64_t v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(9 * *(_DWORD *)(v5 + 16));
      *(_DWORD *)(v5 + 24) = v6;
      if (v6 >= 0x80)
      {
        int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
        int v2 = *((_DWORD *)this + 4);
      }
      else
      {
        int v7 = 1;
      }
      uint64_t v4 = (v6 + v4 + v7);
      ++v3;
    }
    while (v3 < v2);
  }
  *((_DWORD *)this + 8) = v4;
  return v4;
}

void CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::CopyFrom(CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *this, const CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::IsInitialized(CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *this)
{
  return 1;
}

CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::Swap(CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *this, CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *a2)
{
  if (a2 != this)
  {
    uint64_t v3 = this;
    this = (CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    int v4 = *((_DWORD *)v3 + 9);
    *((_DWORD *)v3 + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v4;
    int v5 = *((_DWORD *)v3 + 8);
    *((_DWORD *)v3 + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v5;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.Vision.simd_doubleMxN");
}

void *CoreNavigation::CLP::LogEntry::Vision::CGSize::SharedCtor(void *this)
{
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::Vision::CGSize *CoreNavigation::CLP::LogEntry::Vision::CGSize::CGSize(CoreNavigation::CLP::LogEntry::Vision::CGSize *this, const CoreNavigation::CLP::LogEntry::Vision::CGSize *a2)
{
  *(void *)this = &unk_1EDD11F78;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  CoreNavigation::CLP::LogEntry::Vision::CGSize::MergeFrom(this, a2);
  return this;
}

void sub_18DF4B5D8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::Vision::CGSize::MergeFrom(CoreNavigation::CLP::LogEntry::Vision::CGSize *this, const CoreNavigation::CLP::LogEntry::Vision::CGSize *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 28);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 28))
    {
      double result = *((double *)a2 + 1);
      *((_DWORD *)this + 7) |= 1u;
      *((double *)this + 1) = result;
      int v5 = *((_DWORD *)a2 + 7);
    }
    if ((v5 & 2) != 0)
    {
      double result = *((double *)a2 + 2);
      *((_DWORD *)this + 7) |= 2u;
      *((double *)this + 2) = result;
    }
  }
  return result;
}

void sub_18DF4B698(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::CGSize::~CGSize(CoreNavigation::CLP::LogEntry::Vision::CGSize *this)
{
  *(void *)this = &unk_1EDD11F78;
  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::Vision::CGSize::~CGSize(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::CGSize::default_instance(CoreNavigation::CLP::LogEntry::Vision::CGSize *this)
{
  return CoreNavigation::CLP::LogEntry::Vision::CGSize::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::CGSize::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 24) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::Vision::CGSize::New(CoreNavigation::CLP::LogEntry::Vision::CGSize *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::CGSize::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 28))
  {
    *(void *)(this + 8) = 0;
    *(void *)(this + 16) = 0;
  }
  *(_DWORD *)(this + 28) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::CGSize::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Vision::CGSize *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  do
  {
    while (1)
    {
      while (1)
      {
        int v4 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v4;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((void *)a2 + 1) = v4 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_21;
        }
        unint64_t v9 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v9) & 1) == 0) {
          return 0;
        }
        *((void *)this + 1) = v9;
        *((_DWORD *)this + 7) |= 1u;
        int v7 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v7 < *((void *)a2 + 2) && *v7 == 17)
        {
          *((void *)a2 + 1) = v7 + 1;
          goto LABEL_15;
        }
      }
      if (TagFallback >> 3 != 2)
      {
        int v6 = TagFallback & 7;
        goto LABEL_21;
      }
      int v6 = TagFallback & 7;
      if (v6 == 1) {
        break;
      }
LABEL_21:
      if (v6 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
    }
      }
LABEL_15:
    unint64_t v9 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v9) & 1) == 0) {
      return 0;
    }
    *((void *)this + 2) = v9;
    *((_DWORD *)this + 7) |= 2u;
  }
  while (*((void *)a2 + 1) != *((void *)a2 + 2)
       || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10));
  *((_DWORD *)a2 + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)a2 + 36) = 1;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::CGSize::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = this;
  int v5 = *(_DWORD *)(this + 28);
  if (v5)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
    int v5 = *(_DWORD *)(v4 + 28);
  }
  if ((v5 & 2) != 0)
  {
    double v6 = *(double *)(v4 + 16);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, v6, a3);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::CGSize::ByteSize(CoreNavigation::CLP::LogEntry::Vision::CGSize *this)
{
  uint64_t v1 = *((unsigned __int8 *)this + 28);
  if (*((unsigned char *)this + 28))
  {
    unsigned int v2 = ((int)(v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0) {
      uint64_t v1 = v2 + 9;
    }
    else {
      uint64_t v1 = v2;
    }
  }
  *((_DWORD *)this + 6) = v1;
  return v1;
}

double CoreNavigation::CLP::LogEntry::Vision::CGSize::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Vision::CGSize *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::Vision::CGSize::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::Vision::CGSize::CopyFrom(CoreNavigation::CLP::LogEntry::Vision::CGSize *this, const CoreNavigation::CLP::LogEntry::Vision::CGSize *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Vision::CGSize *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::Vision::CGSize::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::CGSize::IsInitialized(CoreNavigation::CLP::LogEntry::Vision::CGSize *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::Vision::CGSize::Swap(CoreNavigation::CLP::LogEntry::Vision::CGSize *this, CoreNavigation::CLP::LogEntry::Vision::CGSize *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    double result = *((double *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((double *)a2 + 2) = result;
    int v4 = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v4;
    int v5 = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v5;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::Vision::CGSize::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.Vision.CGSize");
}

double CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo::SharedCtor(CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo *this)
{
  double result = 0.0;
  *(_OWORD *)((char *)this + 52) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo *CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo::VIOInertialStateInfo(CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo *this, const CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo *a2)
{
  *(void *)this = &unk_1EDD11CA8;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 52) = 0u;
  CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo::MergeFrom(this, a2);
  return this;
}

void sub_18DF4BBEC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo::MergeFrom(CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo *this, const CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v17);
  }
  int v4 = *((_DWORD *)a2 + 16);
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    uint64_t v7 = *((void *)a2 + 1);
    *((_DWORD *)this + 16) |= 1u;
    *((void *)this + 1) = v7;
    int v4 = *((_DWORD *)a2 + 16);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_22;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  int v8 = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 16) |= 2u;
  *((_DWORD *)this + 4) = v8;
  int v4 = *((_DWORD *)a2 + 16);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_23;
  }
LABEL_22:
  int v9 = *((_DWORD *)a2 + 5);
  *((_DWORD *)this + 16) |= 4u;
  *((_DWORD *)this + 5) = v9;
  int v4 = *((_DWORD *)a2 + 16);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_24;
  }
LABEL_23:
  int v10 = *((_DWORD *)a2 + 6);
  *((_DWORD *)this + 16) |= 8u;
  *((_DWORD *)this + 6) = v10;
  int v4 = *((_DWORD *)a2 + 16);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_25:
    int v12 = *((_DWORD *)a2 + 8);
    *((_DWORD *)this + 16) |= 0x20u;
    *((_DWORD *)this + 8) = v12;
    int v4 = *((_DWORD *)a2 + 16);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_26;
  }
LABEL_24:
  int v11 = *((_DWORD *)a2 + 7);
  *((_DWORD *)this + 16) |= 0x10u;
  *((_DWORD *)this + 7) = v11;
  int v4 = *((_DWORD *)a2 + 16);
  if ((v4 & 0x20) != 0) {
    goto LABEL_25;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_26:
  int v13 = *((_DWORD *)a2 + 9);
  *((_DWORD *)this + 16) |= 0x40u;
  *((_DWORD *)this + 9) = v13;
  int v4 = *((_DWORD *)a2 + 16);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    int v5 = *((_DWORD *)a2 + 10);
    *((_DWORD *)this + 16) |= 0x80u;
    *((_DWORD *)this + 10) = v5;
    int v4 = *((_DWORD *)a2 + 16);
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0) {
    return;
  }
  if ((v4 & 0x100) != 0)
  {
    int v14 = *((_DWORD *)a2 + 11);
    *((_DWORD *)this + 16) |= 0x100u;
    *((_DWORD *)this + 11) = v14;
    int v4 = *((_DWORD *)a2 + 16);
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0) {
        goto LABEL_17;
      }
      goto LABEL_30;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  int v15 = *((_DWORD *)a2 + 12);
  *((_DWORD *)this + 16) |= 0x200u;
  *((_DWORD *)this + 12) = v15;
  int v4 = *((_DWORD *)a2 + 16);
  if ((v4 & 0x400) == 0)
  {
LABEL_17:
    if ((v4 & 0x800) == 0) {
      return;
    }
    goto LABEL_18;
  }
LABEL_30:
  int v16 = *((_DWORD *)a2 + 13);
  *((_DWORD *)this + 16) |= 0x400u;
  *((_DWORD *)this + 13) = v16;
  if ((*((_DWORD *)a2 + 16) & 0x800) == 0) {
    return;
  }
LABEL_18:
  int v6 = *((_DWORD *)a2 + 14);
  *((_DWORD *)this + 16) |= 0x800u;
  *((_DWORD *)this + 14) = v6;
}

void sub_18DF4BE00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo::~VIOInertialStateInfo(CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo *this)
{
  *(void *)this = &unk_1EDD11CA8;
  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo::~VIOInertialStateInfo(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo::default_instance(CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo *this)
{
  return CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 60) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo::New(CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 64);
  if ((_BYTE)v1)
  {
    *(_DWORD *)(this + 40) = 0;
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 8) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(void *)(this + 52) = 0;
    *(void *)(this + 44) = 0;
  }
  *(_DWORD *)(this + 64) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  v41 = (unint64_t *)((char *)this + 8);
  v42 = (unsigned int *)((char *)this + 16);
  v43 = (unsigned int *)((char *)this + 20);
  v44 = (unsigned int *)((char *)this + 24);
  int v4 = (unsigned int *)((char *)this + 28);
  int v5 = (unsigned int *)((char *)this + 32);
  int v6 = (unsigned int *)((char *)this + 36);
  uint64_t v7 = (unsigned int *)((char *)this + 40);
  int v8 = (unsigned int *)((char *)this + 44);
  int v9 = (unsigned int *)((char *)this + 48);
  int v10 = (unsigned int *)((char *)this + 52);
  int v11 = (unsigned int *)((char *)this + 56);
  while (2)
  {
    int v12 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v12 >= *((void *)a2 + 2) || *v12 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v12;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v12 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        int v16 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        if ((unint64_t)v16 < v15 && (*v16 & 0x80000000) == 0)
        {
          unint64_t *v41 = *v16;
          int v17 = v16 + 1;
          *((void *)a2 + 1) = v17;
LABEL_40:
          *((_DWORD *)this + 16) |= 1u;
          if ((unint64_t)v17 < v15 && *v17 == 16)
          {
            uint64_t v18 = v17 + 1;
            *((void *)a2 + 1) = v18;
            goto LABEL_43;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v41);
        if (result)
        {
          int v17 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
          goto LABEL_40;
        }
        break;
      case 2u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        uint64_t v18 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
LABEL_43:
        if ((unint64_t)v18 >= v15 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v42);
          if (!result) {
            return result;
          }
          v29 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v42 = *v18;
          v29 = v18 + 1;
          *((void *)a2 + 1) = v29;
        }
        *((_DWORD *)this + 16) |= 2u;
        if ((unint64_t)v29 >= v15 || *v29 != 24) {
          continue;
        }
        v19 = v29 + 1;
        *((void *)a2 + 1) = v19;
LABEL_51:
        if ((unint64_t)v19 >= v15 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v43);
          if (!result) {
            return result;
          }
          v30 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v43 = *v19;
          v30 = v19 + 1;
          *((void *)a2 + 1) = v30;
        }
        *((_DWORD *)this + 16) |= 4u;
        if ((unint64_t)v30 >= v15 || *v30 != 32) {
          continue;
        }
        unsigned int v20 = v30 + 1;
        *((void *)a2 + 1) = v20;
LABEL_59:
        if ((unint64_t)v20 >= v15 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v44);
          if (!result) {
            return result;
          }
          v31 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v44 = *v20;
          v31 = v20 + 1;
          *((void *)a2 + 1) = v31;
        }
        *((_DWORD *)this + 16) |= 8u;
        if ((unint64_t)v31 >= v15 || *v31 != 40) {
          continue;
        }
        v21 = v31 + 1;
        *((void *)a2 + 1) = v21;
LABEL_67:
        if ((unint64_t)v21 >= v15 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!result) {
            return result;
          }
          v32 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v4 = *v21;
          v32 = v21 + 1;
          *((void *)a2 + 1) = v32;
        }
        *((_DWORD *)this + 16) |= 0x10u;
        if ((unint64_t)v32 >= v15 || *v32 != 48) {
          continue;
        }
        v22 = v32 + 1;
        *((void *)a2 + 1) = v22;
LABEL_75:
        if ((unint64_t)v22 >= v15 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!result) {
            return result;
          }
          v33 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          *int v5 = *v22;
          v33 = v22 + 1;
          *((void *)a2 + 1) = v33;
        }
        *((_DWORD *)this + 16) |= 0x20u;
        if ((unint64_t)v33 >= v15 || *v33 != 56) {
          continue;
        }
        v23 = v33 + 1;
        *((void *)a2 + 1) = v23;
LABEL_83:
        if ((unint64_t)v23 >= v15 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
          if (!result) {
            return result;
          }
          v34 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          *int v6 = *v23;
          v34 = v23 + 1;
          *((void *)a2 + 1) = v34;
        }
        *((_DWORD *)this + 16) |= 0x40u;
        if ((unint64_t)v34 >= v15 || *v34 != 64) {
          continue;
        }
        v24 = v34 + 1;
        *((void *)a2 + 1) = v24;
LABEL_91:
        if ((unint64_t)v24 >= v15 || *v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v7);
          if (!result) {
            return result;
          }
          v35 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v7 = *v24;
          v35 = v24 + 1;
          *((void *)a2 + 1) = v35;
        }
        *((_DWORD *)this + 16) |= 0x80u;
        if ((unint64_t)v35 >= v15 || *v35 != 72) {
          continue;
        }
        v25 = v35 + 1;
        *((void *)a2 + 1) = v25;
LABEL_99:
        if ((unint64_t)v25 >= v15 || *v25 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v8);
          if (!result) {
            return result;
          }
          v36 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v8 = *v25;
          v36 = v25 + 1;
          *((void *)a2 + 1) = v36;
        }
        *((_DWORD *)this + 16) |= 0x100u;
        if ((unint64_t)v36 >= v15 || *v36 != 80) {
          continue;
        }
        v26 = v36 + 1;
        *((void *)a2 + 1) = v26;
LABEL_107:
        if ((unint64_t)v26 >= v15 || *v26 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v9);
          if (!result) {
            return result;
          }
          v37 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v9 = *v26;
          v37 = v26 + 1;
          *((void *)a2 + 1) = v37;
        }
        *((_DWORD *)this + 16) |= 0x200u;
        if ((unint64_t)v37 >= v15 || *v37 != 88) {
          continue;
        }
        v27 = v37 + 1;
        *((void *)a2 + 1) = v27;
LABEL_115:
        if ((unint64_t)v27 >= v15 || *v27 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v10);
          if (!result) {
            return result;
          }
          v38 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          *int v10 = *v27;
          v38 = v27 + 1;
          *((void *)a2 + 1) = v38;
        }
        *((_DWORD *)this + 16) |= 0x400u;
        if ((unint64_t)v38 >= v15 || *v38 != 96) {
          continue;
        }
        v28 = v38 + 1;
        *((void *)a2 + 1) = v28;
LABEL_123:
        if ((unint64_t)v28 >= v15 || *v28 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v11);
          if (!result) {
            return result;
          }
          v39 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          *int v11 = *v28;
          v39 = (unsigned __int8 *)(v28 + 1);
          *((void *)a2 + 1) = v39;
        }
        *((_DWORD *)this + 16) |= 0x800u;
        if (v39 != (unsigned __int8 *)v15 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10)) {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      case 3u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        v19 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_51;
      case 4u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        unsigned int v20 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_59;
      case 5u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        v21 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_67;
      case 6u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        v22 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_75;
      case 7u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        v23 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_83;
      case 8u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        v24 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_91;
      case 9u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        v25 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_99;
      case 0xAu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        v26 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_107;
      case 0xBu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        v27 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_115;
      case 0xCu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        v28 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_123;
      default:
        int v14 = TagFallback & 7;
LABEL_34:
        if (v14 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = (unsigned int *)this;
  unsigned int v6 = *(_DWORD *)(this + 64);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
    unsigned int v6 = v5[16];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[4], (uint64_t)a2, a4);
  unsigned int v6 = v5[16];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[5], (uint64_t)a2, a4);
  unsigned int v6 = v5[16];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[6], (uint64_t)a2, a4);
  unsigned int v6 = v5[16];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[7], (uint64_t)a2, a4);
  unsigned int v6 = v5[16];
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[8], (uint64_t)a2, a4);
  unsigned int v6 = v5[16];
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v5[9], (uint64_t)a2, a4);
  unsigned int v6 = v5[16];
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_22;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v5[10], (uint64_t)a2, a4);
  unsigned int v6 = v5[16];
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_23;
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v5[11], (uint64_t)a2, a4);
  unsigned int v6 = v5[16];
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
LABEL_24:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v5[13], (uint64_t)a2, a4);
    if ((v5[16] & 0x800) == 0) {
      return this;
    }
    goto LABEL_25;
  }
LABEL_23:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v5[12], (uint64_t)a2, a4);
  unsigned int v6 = v5[16];
  if ((v6 & 0x400) != 0) {
    goto LABEL_24;
  }
LABEL_12:
  if ((v6 & 0x800) == 0) {
    return this;
  }
LABEL_25:
  uint64_t v7 = v5[14];

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, v7, (uint64_t)a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo::ByteSize(CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo *this)
{
  int v2 = *((_DWORD *)this + 16);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_42;
  }
  if (v2)
  {
    uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
       + 1;
    int v2 = *((_DWORD *)this + 16);
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
  if (v4 >= 0x80)
  {
    int v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
    int v2 = *((_DWORD *)this + 16);
  }
  else
  {
    int v5 = 1;
  }
  uint64_t v3 = (v3 + v5 + 1);
LABEL_11:
  if ((v2 & 4) != 0)
  {
    unsigned int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
    if (v6 >= 0x80)
    {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
      int v2 = *((_DWORD *)this + 16);
    }
    else
    {
      int v7 = 1;
    }
    uint64_t v3 = (v3 + v7 + 1);
    if ((v2 & 8) == 0)
    {
LABEL_13:
      if ((v2 & 0x10) == 0) {
        goto LABEL_14;
      }
      goto LABEL_26;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_13;
  }
  int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  if (v8 >= 0x80)
  {
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
    int v2 = *((_DWORD *)this + 16);
  }
  else
  {
    int v9 = 1;
  }
  uint64_t v3 = (v3 + v9 + 1);
  if ((v2 & 0x10) == 0)
  {
LABEL_14:
    if ((v2 & 0x20) == 0) {
      goto LABEL_15;
    }
    goto LABEL_30;
  }
LABEL_26:
  int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
  if (v10 >= 0x80)
  {
    int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10) + 1;
    int v2 = *((_DWORD *)this + 16);
  }
  else
  {
    int v11 = 2;
  }
  uint64_t v3 = (v11 + v3);
  if ((v2 & 0x20) == 0)
  {
LABEL_15:
    if ((v2 & 0x40) == 0) {
      goto LABEL_16;
    }
    goto LABEL_34;
  }
LABEL_30:
  int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  if (v12 >= 0x80)
  {
    int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12) + 1;
    int v2 = *((_DWORD *)this + 16);
  }
  else
  {
    int v13 = 2;
  }
  uint64_t v3 = (v13 + v3);
  if ((v2 & 0x40) == 0)
  {
LABEL_16:
    if ((v2 & 0x80) == 0) {
      goto LABEL_42;
    }
    goto LABEL_38;
  }
LABEL_34:
  int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
  if (v14 >= 0x80)
  {
    int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14) + 1;
    int v2 = *((_DWORD *)this + 16);
  }
  else
  {
    int v15 = 2;
  }
  uint64_t v3 = (v15 + v3);
  if ((v2 & 0x80) != 0)
  {
LABEL_38:
    int v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    if (v16 >= 0x80)
    {
      int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16) + 1;
      int v2 = *((_DWORD *)this + 16);
    }
    else
    {
      int v17 = 2;
    }
    uint64_t v3 = (v17 + v3);
  }
LABEL_42:
  if ((v2 & 0xFF00) == 0) {
    goto LABEL_64;
  }
  if ((v2 & 0x100) != 0)
  {
    uint64_t v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
    if (v18 >= 0x80)
    {
      int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18) + 1;
      int v2 = *((_DWORD *)this + 16);
    }
    else
    {
      int v19 = 2;
    }
    uint64_t v3 = (v19 + v3);
    if ((v2 & 0x200) == 0)
    {
LABEL_45:
      if ((v2 & 0x400) == 0) {
        goto LABEL_46;
      }
      goto LABEL_56;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_45;
  }
  unsigned int v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
  if (v20 >= 0x80)
  {
    int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20) + 1;
    int v2 = *((_DWORD *)this + 16);
  }
  else
  {
    int v21 = 2;
  }
  uint64_t v3 = (v21 + v3);
  if ((v2 & 0x400) == 0)
  {
LABEL_46:
    if ((v2 & 0x800) == 0) {
      goto LABEL_64;
    }
    goto LABEL_60;
  }
LABEL_56:
  v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
  if (v22 >= 0x80)
  {
    int v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22) + 1;
    int v2 = *((_DWORD *)this + 16);
  }
  else
  {
    int v23 = 2;
  }
  uint64_t v3 = (v23 + v3);
  if ((v2 & 0x800) != 0)
  {
LABEL_60:
    v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
    if (v24 >= 0x80) {
      int v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24) + 1;
    }
    else {
      int v25 = 2;
    }
    uint64_t v3 = (v25 + v3);
  }
LABEL_64:
  *((_DWORD *)this + 15) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo::CopyFrom(CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo *this, const CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo::IsInitialized(CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo *a2)
{
  if (a2 != (CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 44);
    *(_DWORD *)(this + 44) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 48);
    *(_DWORD *)(this + 48) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 52);
    *(_DWORD *)(this + 52) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 56);
    *(_DWORD *)(this + 56) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 64);
    *(_DWORD *)(this + 64) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 60);
    *(_DWORD *)(this + 60) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v2;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.Vision.VIOInertialStateInfo");
}

double CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo::SharedCtor(CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo *this)
{
  double result = 0.0;
  *(_OWORD *)((char *)this + 52) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo *CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo::VIOInertialCovarianceInfo(CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo *this, const CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo *a2)
{
  *(void *)this = &unk_1EDD11E88;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 52) = 0u;
  CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo::MergeFrom(this, a2);
  return this;
}

void sub_18DF4CC9C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo::MergeFrom(CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo *this, const CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v17);
  }
  int v4 = *((_DWORD *)a2 + 16);
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    uint64_t v7 = *((void *)a2 + 1);
    *((_DWORD *)this + 16) |= 1u;
    *((void *)this + 1) = v7;
    int v4 = *((_DWORD *)a2 + 16);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_22;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  int v8 = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 16) |= 2u;
  *((_DWORD *)this + 4) = v8;
  int v4 = *((_DWORD *)a2 + 16);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_23;
  }
LABEL_22:
  int v9 = *((_DWORD *)a2 + 5);
  *((_DWORD *)this + 16) |= 4u;
  *((_DWORD *)this + 5) = v9;
  int v4 = *((_DWORD *)a2 + 16);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_24;
  }
LABEL_23:
  int v10 = *((_DWORD *)a2 + 6);
  *((_DWORD *)this + 16) |= 8u;
  *((_DWORD *)this + 6) = v10;
  int v4 = *((_DWORD *)a2 + 16);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_25:
    int v12 = *((_DWORD *)a2 + 8);
    *((_DWORD *)this + 16) |= 0x20u;
    *((_DWORD *)this + 8) = v12;
    int v4 = *((_DWORD *)a2 + 16);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_26;
  }
LABEL_24:
  int v11 = *((_DWORD *)a2 + 7);
  *((_DWORD *)this + 16) |= 0x10u;
  *((_DWORD *)this + 7) = v11;
  int v4 = *((_DWORD *)a2 + 16);
  if ((v4 & 0x20) != 0) {
    goto LABEL_25;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_26:
  int v13 = *((_DWORD *)a2 + 9);
  *((_DWORD *)this + 16) |= 0x40u;
  *((_DWORD *)this + 9) = v13;
  int v4 = *((_DWORD *)a2 + 16);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    int v5 = *((_DWORD *)a2 + 10);
    *((_DWORD *)this + 16) |= 0x80u;
    *((_DWORD *)this + 10) = v5;
    int v4 = *((_DWORD *)a2 + 16);
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0) {
    return;
  }
  if ((v4 & 0x100) != 0)
  {
    int v14 = *((_DWORD *)a2 + 11);
    *((_DWORD *)this + 16) |= 0x100u;
    *((_DWORD *)this + 11) = v14;
    int v4 = *((_DWORD *)a2 + 16);
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0) {
        goto LABEL_17;
      }
      goto LABEL_30;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  int v15 = *((_DWORD *)a2 + 12);
  *((_DWORD *)this + 16) |= 0x200u;
  *((_DWORD *)this + 12) = v15;
  int v4 = *((_DWORD *)a2 + 16);
  if ((v4 & 0x400) == 0)
  {
LABEL_17:
    if ((v4 & 0x800) == 0) {
      return;
    }
    goto LABEL_18;
  }
LABEL_30:
  int v16 = *((_DWORD *)a2 + 13);
  *((_DWORD *)this + 16) |= 0x400u;
  *((_DWORD *)this + 13) = v16;
  if ((*((_DWORD *)a2 + 16) & 0x800) == 0) {
    return;
  }
LABEL_18:
  int v6 = *((_DWORD *)a2 + 14);
  *((_DWORD *)this + 16) |= 0x800u;
  *((_DWORD *)this + 14) = v6;
}

void sub_18DF4CEB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo::~VIOInertialCovarianceInfo(CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo *this)
{
  *(void *)this = &unk_1EDD11E88;
  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo::~VIOInertialCovarianceInfo(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo::default_instance(CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo *this)
{
  return CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 60) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo::New(CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 64);
  if ((_BYTE)v1)
  {
    *(_DWORD *)(this + 40) = 0;
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 8) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(void *)(this + 52) = 0;
    *(void *)(this + 44) = 0;
  }
  *(_DWORD *)(this + 64) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  v41 = (unint64_t *)((char *)this + 8);
  v42 = (unsigned int *)((char *)this + 16);
  v43 = (unsigned int *)((char *)this + 20);
  v44 = (unsigned int *)((char *)this + 24);
  int v4 = (unsigned int *)((char *)this + 28);
  int v5 = (unsigned int *)((char *)this + 32);
  int v6 = (unsigned int *)((char *)this + 36);
  uint64_t v7 = (unsigned int *)((char *)this + 40);
  int v8 = (unsigned int *)((char *)this + 44);
  int v9 = (unsigned int *)((char *)this + 48);
  int v10 = (unsigned int *)((char *)this + 52);
  int v11 = (unsigned int *)((char *)this + 56);
  while (2)
  {
    int v12 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v12 >= *((void *)a2 + 2) || *v12 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v12;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v12 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        int v16 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        if ((unint64_t)v16 < v15 && (*v16 & 0x80000000) == 0)
        {
          unint64_t *v41 = *v16;
          int v17 = v16 + 1;
          *((void *)a2 + 1) = v17;
LABEL_40:
          *((_DWORD *)this + 16) |= 1u;
          if ((unint64_t)v17 < v15 && *v17 == 16)
          {
            uint64_t v18 = v17 + 1;
            *((void *)a2 + 1) = v18;
            goto LABEL_43;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v41);
        if (result)
        {
          int v17 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
          goto LABEL_40;
        }
        break;
      case 2u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        uint64_t v18 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
LABEL_43:
        if ((unint64_t)v18 >= v15 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v42);
          if (!result) {
            return result;
          }
          v29 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v42 = *v18;
          v29 = v18 + 1;
          *((void *)a2 + 1) = v29;
        }
        *((_DWORD *)this + 16) |= 2u;
        if ((unint64_t)v29 >= v15 || *v29 != 24) {
          continue;
        }
        int v19 = v29 + 1;
        *((void *)a2 + 1) = v19;
LABEL_51:
        if ((unint64_t)v19 >= v15 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v43);
          if (!result) {
            return result;
          }
          v30 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v43 = *v19;
          v30 = v19 + 1;
          *((void *)a2 + 1) = v30;
        }
        *((_DWORD *)this + 16) |= 4u;
        if ((unint64_t)v30 >= v15 || *v30 != 32) {
          continue;
        }
        unsigned int v20 = v30 + 1;
        *((void *)a2 + 1) = v20;
LABEL_59:
        if ((unint64_t)v20 >= v15 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v44);
          if (!result) {
            return result;
          }
          v31 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v44 = *v20;
          v31 = v20 + 1;
          *((void *)a2 + 1) = v31;
        }
        *((_DWORD *)this + 16) |= 8u;
        if ((unint64_t)v31 >= v15 || *v31 != 40) {
          continue;
        }
        int v21 = v31 + 1;
        *((void *)a2 + 1) = v21;
LABEL_67:
        if ((unint64_t)v21 >= v15 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!result) {
            return result;
          }
          v32 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v4 = *v21;
          v32 = v21 + 1;
          *((void *)a2 + 1) = v32;
        }
        *((_DWORD *)this + 16) |= 0x10u;
        if ((unint64_t)v32 >= v15 || *v32 != 48) {
          continue;
        }
        v22 = v32 + 1;
        *((void *)a2 + 1) = v22;
LABEL_75:
        if ((unint64_t)v22 >= v15 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!result) {
            return result;
          }
          v33 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          *int v5 = *v22;
          v33 = v22 + 1;
          *((void *)a2 + 1) = v33;
        }
        *((_DWORD *)this + 16) |= 0x20u;
        if ((unint64_t)v33 >= v15 || *v33 != 56) {
          continue;
        }
        int v23 = v33 + 1;
        *((void *)a2 + 1) = v23;
LABEL_83:
        if ((unint64_t)v23 >= v15 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
          if (!result) {
            return result;
          }
          v34 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          *int v6 = *v23;
          v34 = v23 + 1;
          *((void *)a2 + 1) = v34;
        }
        *((_DWORD *)this + 16) |= 0x40u;
        if ((unint64_t)v34 >= v15 || *v34 != 64) {
          continue;
        }
        v24 = v34 + 1;
        *((void *)a2 + 1) = v24;
LABEL_91:
        if ((unint64_t)v24 >= v15 || *v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v7);
          if (!result) {
            return result;
          }
          v35 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v7 = *v24;
          v35 = v24 + 1;
          *((void *)a2 + 1) = v35;
        }
        *((_DWORD *)this + 16) |= 0x80u;
        if ((unint64_t)v35 >= v15 || *v35 != 72) {
          continue;
        }
        int v25 = v35 + 1;
        *((void *)a2 + 1) = v25;
LABEL_99:
        if ((unint64_t)v25 >= v15 || *v25 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v8);
          if (!result) {
            return result;
          }
          v36 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v8 = *v25;
          v36 = v25 + 1;
          *((void *)a2 + 1) = v36;
        }
        *((_DWORD *)this + 16) |= 0x100u;
        if ((unint64_t)v36 >= v15 || *v36 != 80) {
          continue;
        }
        v26 = v36 + 1;
        *((void *)a2 + 1) = v26;
LABEL_107:
        if ((unint64_t)v26 >= v15 || *v26 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v9);
          if (!result) {
            return result;
          }
          v37 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v9 = *v26;
          v37 = v26 + 1;
          *((void *)a2 + 1) = v37;
        }
        *((_DWORD *)this + 16) |= 0x200u;
        if ((unint64_t)v37 >= v15 || *v37 != 88) {
          continue;
        }
        v27 = v37 + 1;
        *((void *)a2 + 1) = v27;
LABEL_115:
        if ((unint64_t)v27 >= v15 || *v27 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v10);
          if (!result) {
            return result;
          }
          v38 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          *int v10 = *v27;
          v38 = v27 + 1;
          *((void *)a2 + 1) = v38;
        }
        *((_DWORD *)this + 16) |= 0x400u;
        if ((unint64_t)v38 >= v15 || *v38 != 96) {
          continue;
        }
        v28 = v38 + 1;
        *((void *)a2 + 1) = v28;
LABEL_123:
        if ((unint64_t)v28 >= v15 || *v28 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v11);
          if (!result) {
            return result;
          }
          v39 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          *int v11 = *v28;
          v39 = (unsigned __int8 *)(v28 + 1);
          *((void *)a2 + 1) = v39;
        }
        *((_DWORD *)this + 16) |= 0x800u;
        if (v39 != (unsigned __int8 *)v15 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10)) {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      case 3u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        int v19 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_51;
      case 4u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        unsigned int v20 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_59;
      case 5u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        int v21 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_67;
      case 6u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        v22 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_75;
      case 7u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        int v23 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_83;
      case 8u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        v24 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_91;
      case 9u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        int v25 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_99;
      case 0xAu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        v26 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_107;
      case 0xBu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        v27 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_115;
      case 0xCu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        v28 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_123;
      default:
        int v14 = TagFallback & 7;
LABEL_34:
        if (v14 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = (unsigned int *)this;
  unsigned int v6 = *(_DWORD *)(this + 64);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
    unsigned int v6 = v5[16];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[4], (uint64_t)a2, a4);
  unsigned int v6 = v5[16];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[5], (uint64_t)a2, a4);
  unsigned int v6 = v5[16];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[6], (uint64_t)a2, a4);
  unsigned int v6 = v5[16];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[7], (uint64_t)a2, a4);
  unsigned int v6 = v5[16];
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[8], (uint64_t)a2, a4);
  unsigned int v6 = v5[16];
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v5[9], (uint64_t)a2, a4);
  unsigned int v6 = v5[16];
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_22;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v5[10], (uint64_t)a2, a4);
  unsigned int v6 = v5[16];
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_23;
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v5[11], (uint64_t)a2, a4);
  unsigned int v6 = v5[16];
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
LABEL_24:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v5[13], (uint64_t)a2, a4);
    if ((v5[16] & 0x800) == 0) {
      return this;
    }
    goto LABEL_25;
  }
LABEL_23:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v5[12], (uint64_t)a2, a4);
  unsigned int v6 = v5[16];
  if ((v6 & 0x400) != 0) {
    goto LABEL_24;
  }
LABEL_12:
  if ((v6 & 0x800) == 0) {
    return this;
  }
LABEL_25:
  uint64_t v7 = v5[14];

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, v7, (uint64_t)a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo::ByteSize(CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo *this)
{
  int v2 = *((_DWORD *)this + 16);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_42;
  }
  if (v2)
  {
    uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
       + 1;
    int v2 = *((_DWORD *)this + 16);
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_11;
    }
  }
  int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
  if (v4 >= 0x80)
  {
    int v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
    int v2 = *((_DWORD *)this + 16);
  }
  else
  {
    int v5 = 1;
  }
  uint64_t v3 = (v3 + v5 + 1);
LABEL_11:
  if ((v2 & 4) != 0)
  {
    unsigned int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
    if (v6 >= 0x80)
    {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
      int v2 = *((_DWORD *)this + 16);
    }
    else
    {
      int v7 = 1;
    }
    uint64_t v3 = (v3 + v7 + 1);
    if ((v2 & 8) == 0)
    {
LABEL_13:
      if ((v2 & 0x10) == 0) {
        goto LABEL_14;
      }
      goto LABEL_26;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_13;
  }
  int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  if (v8 >= 0x80)
  {
    int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
    int v2 = *((_DWORD *)this + 16);
  }
  else
  {
    int v9 = 1;
  }
  uint64_t v3 = (v3 + v9 + 1);
  if ((v2 & 0x10) == 0)
  {
LABEL_14:
    if ((v2 & 0x20) == 0) {
      goto LABEL_15;
    }
    goto LABEL_30;
  }
LABEL_26:
  int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
  if (v10 >= 0x80)
  {
    int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10) + 1;
    int v2 = *((_DWORD *)this + 16);
  }
  else
  {
    int v11 = 2;
  }
  uint64_t v3 = (v11 + v3);
  if ((v2 & 0x20) == 0)
  {
LABEL_15:
    if ((v2 & 0x40) == 0) {
      goto LABEL_16;
    }
    goto LABEL_34;
  }
LABEL_30:
  int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  if (v12 >= 0x80)
  {
    int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12) + 1;
    int v2 = *((_DWORD *)this + 16);
  }
  else
  {
    int v13 = 2;
  }
  uint64_t v3 = (v13 + v3);
  if ((v2 & 0x40) == 0)
  {
LABEL_16:
    if ((v2 & 0x80) == 0) {
      goto LABEL_42;
    }
    goto LABEL_38;
  }
LABEL_34:
  int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
  if (v14 >= 0x80)
  {
    int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14) + 1;
    int v2 = *((_DWORD *)this + 16);
  }
  else
  {
    int v15 = 2;
  }
  uint64_t v3 = (v15 + v3);
  if ((v2 & 0x80) != 0)
  {
LABEL_38:
    int v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    if (v16 >= 0x80)
    {
      int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16) + 1;
      int v2 = *((_DWORD *)this + 16);
    }
    else
    {
      int v17 = 2;
    }
    uint64_t v3 = (v17 + v3);
  }
LABEL_42:
  if ((v2 & 0xFF00) == 0) {
    goto LABEL_64;
  }
  if ((v2 & 0x100) != 0)
  {
    uint64_t v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
    if (v18 >= 0x80)
    {
      int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18) + 1;
      int v2 = *((_DWORD *)this + 16);
    }
    else
    {
      int v19 = 2;
    }
    uint64_t v3 = (v19 + v3);
    if ((v2 & 0x200) == 0)
    {
LABEL_45:
      if ((v2 & 0x400) == 0) {
        goto LABEL_46;
      }
      goto LABEL_56;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_45;
  }
  unsigned int v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
  if (v20 >= 0x80)
  {
    int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20) + 1;
    int v2 = *((_DWORD *)this + 16);
  }
  else
  {
    int v21 = 2;
  }
  uint64_t v3 = (v21 + v3);
  if ((v2 & 0x400) == 0)
  {
LABEL_46:
    if ((v2 & 0x800) == 0) {
      goto LABEL_64;
    }
    goto LABEL_60;
  }
LABEL_56:
  v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
  if (v22 >= 0x80)
  {
    int v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22) + 1;
    int v2 = *((_DWORD *)this + 16);
  }
  else
  {
    int v23 = 2;
  }
  uint64_t v3 = (v23 + v3);
  if ((v2 & 0x800) != 0)
  {
LABEL_60:
    v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
    if (v24 >= 0x80) {
      int v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24) + 1;
    }
    else {
      int v25 = 2;
    }
    uint64_t v3 = (v25 + v3);
  }
LABEL_64:
  *((_DWORD *)this + 15) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo::CopyFrom(CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo *this, const CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo::IsInitialized(CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo *a2)
{
  if (a2 != (CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 44);
    *(_DWORD *)(this + 44) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 48);
    *(_DWORD *)(this + 48) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 52);
    *(_DWORD *)(this + 52) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 56);
    *(_DWORD *)(this + 56) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 64);
    *(_DWORD *)(this + 64) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 60);
    *(_DWORD *)(this + 60) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v2;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.Vision.VIOInertialCovarianceInfo");
}

double CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::SharedCtor(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation *this)
{
  *(void *)&double result = 0xFFFFFFFFLL;
  *((void *)this + 10) = 0xFFFFFFFFLL;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  uint64_t v2 = MEMORY[0x1E4FBA920];
  *((void *)this + 3) = 0;
  *((void *)this + 4) = v2;
  *((void *)this + 5) = 0;
  *((void *)this + 6) = v2;
  *((_DWORD *)this + 22) = 0;
  *((void *)this + 8) = 0;
  *((void *)this + 9) = 0;
  *((void *)this + 7) = 0;
  return result;
}

CoreNavigation::CLP::LogEntry::Vision::VIOEstimation *CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::VIOEstimation(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation *this, const CoreNavigation::CLP::LogEntry::Vision::VIOEstimation *a2)
{
  *((void *)this + 10) = 0xFFFFFFFFLL;
  *(void *)this = &unk_1EDD119D8;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  uint64_t v3 = MEMORY[0x1E4FBA920];
  *((void *)this + 4) = MEMORY[0x1E4FBA920];
  *((void *)this + 5) = 0;
  *((_DWORD *)this + 22) = 0;
  *((void *)this + 6) = v3;
  *((void *)this + 7) = 0;
  *((void *)this + 8) = 0;
  *((void *)this + 9) = 0;
  CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::MergeFrom(this, a2);
  return this;
}

void sub_18DF4DD80(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::MergeFrom(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation *this, const CoreNavigation::CLP::LogEntry::Vision::VIOEstimation *a2)
{
  uint64_t v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v26);
  }
  int v5 = *((_DWORD *)a2 + 22);
  if (!(_BYTE)v5) {
    goto LABEL_47;
  }
  if (v5)
  {
    int v6 = *((_DWORD *)a2 + 20);
    if ((v6 + 1) >= 6) {
      __assert_rtn("set_tracking_state", "CoreNavigationCLPVisionEvent.pb.h", 3487, "::CoreNavigation::CLP::LogEntry::Vision::VIOTrackingState_IsValid(value)");
    }
    *((_DWORD *)v3 + 22) |= 1u;
    *((_DWORD *)v3 + 20) = v6;
    int v5 = *((_DWORD *)a2 + 22);
  }
  if ((v5 & 2) != 0)
  {
    *((_DWORD *)v3 + 22) |= 2u;
    int v7 = (CoreNavigation::CLP::LogEntry::Vision::TimeStamp *)*((void *)v3 + 1);
    if (!v7) {
      operator new();
    }
    int v8 = (const CoreNavigation::CLP::LogEntry::Vision::TimeStamp *)*((void *)a2 + 1);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
      int v8 = *(const CoreNavigation::CLP::LogEntry::Vision::TimeStamp **)(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::default_instance_
                                                                      + 8);
    }
    double result = CoreNavigation::CLP::LogEntry::Vision::TimeStamp::MergeFrom(v7, v8);
    int v5 = *((_DWORD *)a2 + 22);
    if ((v5 & 4) == 0)
    {
LABEL_9:
      if ((v5 & 8) == 0) {
        goto LABEL_26;
      }
      goto LABEL_21;
    }
  }
  else if ((v5 & 4) == 0)
  {
    goto LABEL_9;
  }
  *((_DWORD *)v3 + 22) |= 4u;
  int v9 = (CoreNavigation::CLP::LogEntry::Vision::TimeStamp *)*((void *)v3 + 2);
  if (!v9) {
    operator new();
  }
  int v10 = (const CoreNavigation::CLP::LogEntry::Vision::TimeStamp *)*((void *)a2 + 2);
  if (!v10)
  {
    CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
    int v10 = *(const CoreNavigation::CLP::LogEntry::Vision::TimeStamp **)(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::default_instance_
                                                                     + 16);
  }
  double result = CoreNavigation::CLP::LogEntry::Vision::TimeStamp::MergeFrom(v9, v10);
  int v5 = *((_DWORD *)a2 + 22);
  if ((v5 & 8) != 0)
  {
LABEL_21:
    *((_DWORD *)v3 + 22) |= 8u;
    int v11 = (CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo *)*((void *)v3 + 3);
    if (!v11) {
      operator new();
    }
    int v12 = (const CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo *)*((void *)a2 + 3);
    if (!v12)
    {
      CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
      int v12 = *(const CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo **)(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::default_instance_
                                                                                  + 24);
    }
    CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo::MergeFrom(v11, v12);
    int v5 = *((_DWORD *)a2 + 22);
  }
LABEL_26:
  int v13 = (std::string *)MEMORY[0x1E4FBA920];
  if ((v5 & 0x10) == 0)
  {
    if ((v5 & 0x20) == 0) {
      goto LABEL_28;
    }
LABEL_34:
    *((_DWORD *)v3 + 22) |= 0x20u;
    int v16 = (CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo *)*((void *)v3 + 5);
    if (!v16) {
      operator new();
    }
    int v17 = (const CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo *)*((void *)a2 + 5);
    if (!v17)
    {
      CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
      int v17 = *(const CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo **)(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::default_instance_
                                                                                       + 40);
    }
    CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo::MergeFrom(v16, v17);
    int v5 = *((_DWORD *)a2 + 22);
    if ((v5 & 0x40) == 0)
    {
LABEL_29:
      if ((v5 & 0x80) == 0) {
        goto LABEL_47;
      }
      goto LABEL_42;
    }
    goto LABEL_39;
  }
  int v14 = (const std::string *)*((void *)a2 + 4);
  *((_DWORD *)v3 + 22) |= 0x10u;
  int v15 = (std::string *)*((void *)v3 + 4);
  if (v15 == v13) {
    operator new();
  }
  this = (CoreNavigation::CLP::LogEntry::Vision::VIOEstimation *)std::string::operator=(v15, v14);
  int v5 = *((_DWORD *)a2 + 22);
  if ((v5 & 0x20) != 0) {
    goto LABEL_34;
  }
LABEL_28:
  if ((v5 & 0x40) == 0) {
    goto LABEL_29;
  }
LABEL_39:
  uint64_t v18 = (const std::string *)*((void *)a2 + 6);
  *((_DWORD *)v3 + 22) |= 0x40u;
  int v19 = (std::string *)*((void *)v3 + 6);
  if (v19 == v13) {
    operator new();
  }
  this = (CoreNavigation::CLP::LogEntry::Vision::VIOEstimation *)std::string::operator=(v19, v18);
  int v5 = *((_DWORD *)a2 + 22);
  if ((v5 & 0x80) != 0)
  {
LABEL_42:
    *((_DWORD *)v3 + 22) |= 0x80u;
    unsigned int v20 = (CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN *)*((void *)v3 + 7);
    if (!v20) {
      operator new();
    }
    int v21 = (const CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN *)*((void *)a2 + 7);
    if (!v21)
    {
      CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
      int v21 = *(const CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN **)(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::default_instance_
                                                                           + 56);
    }
    CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::MergeFrom(v20, v21);
    int v5 = *((_DWORD *)a2 + 22);
  }
LABEL_47:
  if ((v5 & 0xFF00) != 0)
  {
    if ((v5 & 0x100) != 0)
    {
      *((_DWORD *)v3 + 22) |= 0x100u;
      v22 = (CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN *)*((void *)v3 + 8);
      if (!v22) {
        operator new();
      }
      int v23 = (const CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN *)*((void *)a2 + 8);
      if (!v23)
      {
        CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
        int v23 = *(const CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN **)(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::default_instance_
                                                                             + 64);
      }
      CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::MergeFrom(v22, v23);
      int v5 = *((_DWORD *)a2 + 22);
    }
    if ((v5 & 0x200) != 0)
    {
      *((_DWORD *)v3 + 22) |= 0x200u;
      v24 = (CoreNavigation::CLP::LogEntry::Vision::CGSize *)*((void *)v3 + 9);
      if (!v24) {
        operator new();
      }
      int v25 = (const CoreNavigation::CLP::LogEntry::Vision::CGSize *)*((void *)a2 + 9);
      if (!v25)
      {
        CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
        int v25 = *(const CoreNavigation::CLP::LogEntry::Vision::CGSize **)(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::default_instance_
                                                                      + 72);
      }
      return CoreNavigation::CLP::LogEntry::Vision::CGSize::MergeFrom(v24, v25);
    }
  }
  return result;
}

void sub_18DF4E2CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::~VIOEstimation(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation *this)
{
  *(void *)this = &unk_1EDD119D8;
  CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::~VIOEstimation(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::SharedDtor(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation *this)
{
  int v1 = this;
  uint64_t v2 = *((void *)this + 4);
  uint64_t v3 = MEMORY[0x1E4FBA920];
  if (v2 != MEMORY[0x1E4FBA920] && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    this = (CoreNavigation::CLP::LogEntry::Vision::VIOEstimation *)MEMORY[0x192FA6240](v2, 0x1012C40EC159624);
  }
  uint64_t v5 = *((void *)v1 + 6);
  if (v5 != v3 && v5 != 0)
  {
    if (*(char *)(v5 + 23) < 0) {
      operator delete(*(void **)v5);
    }
    this = (CoreNavigation::CLP::LogEntry::Vision::VIOEstimation *)MEMORY[0x192FA6240](v5, 0x1012C40EC159624);
  }
  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::Vision::VIOEstimation *)CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::default_instance_ != v1)
  {
    uint64_t v7 = *((void *)v1 + 1);
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
    uint64_t v8 = *((void *)v1 + 2);
    if (v8) {
      (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
    }
    uint64_t v9 = *((void *)v1 + 3);
    if (v9) {
      (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
    }
    uint64_t v10 = *((void *)v1 + 5);
    if (v10) {
      (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
    }
    uint64_t v11 = *((void *)v1 + 7);
    if (v11) {
      (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
    }
    uint64_t v12 = *((void *)v1 + 8);
    if (v12) {
      (*(void (**)(uint64_t))(*(void *)v12 + 8))(v12);
    }
    uint64_t v13 = *((void *)v1 + 9);
    if (v13)
    {
      int v14 = *(void (**)(void))(*(void *)v13 + 8);
      v14();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::default_instance(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation *this)
{
  return CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 84) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::New(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::Clear(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 88);
  if ((_BYTE)v2)
  {
    *(_DWORD *)(this + 80) = -1;
    if ((v2 & 2) != 0)
    {
      uint64_t v3 = *(void *)(this + 8);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
          *(void *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        int v2 = *(_DWORD *)(this + 88);
      }
    }
    if ((v2 & 4) != 0)
    {
      uint64_t v4 = *(void *)(this + 16);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 36))
        {
          *(void *)(v4 + 8) = 0;
          *(void *)(v4 + 16) = 0;
          *(void *)(v4 + 24) = 0;
        }
        *(_DWORD *)(v4 + 36) = 0;
        int v2 = *(_DWORD *)(this + 88);
      }
    }
    if ((v2 & 8) != 0)
    {
      uint64_t v5 = *(void *)(this + 24);
      if (v5)
      {
        int v6 = *(_DWORD *)(v5 + 64);
        if ((_BYTE)v6)
        {
          *(_DWORD *)(v5 + 40) = 0;
          *(_OWORD *)(v5 + 24) = 0u;
          *(_OWORD *)(v5 + 8) = 0u;
        }
        if ((v6 & 0xFF00) != 0)
        {
          *(void *)(v5 + 52) = 0;
          *(void *)(v5 + 44) = 0;
        }
        *(_DWORD *)(v5 + 64) = 0;
        int v2 = *(_DWORD *)(this + 88);
      }
    }
    uint64_t v7 = MEMORY[0x1E4FBA920];
    if ((v2 & 0x10) != 0)
    {
      uint64_t v8 = *(void *)(this + 32);
      if (v8 != MEMORY[0x1E4FBA920])
      {
        if (*(char *)(v8 + 23) < 0)
        {
          **(unsigned char **)uint64_t v8 = 0;
          *(void *)(v8 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v8 = 0;
          *(unsigned char *)(v8 + 23) = 0;
        }
      }
    }
    int v9 = *(_DWORD *)(this + 88);
    if ((v9 & 0x20) != 0)
    {
      uint64_t v10 = *(void *)(this + 40);
      if (v10)
      {
        int v11 = *(_DWORD *)(v10 + 64);
        if ((_BYTE)v11)
        {
          *(_DWORD *)(v10 + 40) = 0;
          *(_OWORD *)(v10 + 24) = 0u;
          *(_OWORD *)(v10 + 8) = 0u;
        }
        if ((v11 & 0xFF00) != 0)
        {
          *(void *)(v10 + 52) = 0;
          *(void *)(v10 + 44) = 0;
        }
        *(_DWORD *)(v10 + 64) = 0;
        int v9 = *(_DWORD *)(this + 88);
      }
    }
    if ((v9 & 0x40) != 0)
    {
      uint64_t v12 = *(void *)(this + 48);
      if (v12 != v7)
      {
        if (*(char *)(v12 + 23) < 0)
        {
          **(unsigned char **)uint64_t v12 = 0;
          *(void *)(v12 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v12 = 0;
          *(unsigned char *)(v12 + 23) = 0;
        }
      }
    }
    int v2 = *(_DWORD *)(this + 88);
    if ((v2 & 0x80) != 0)
    {
      uint64_t v13 = *(void *)(this + 56);
      if (v13)
      {
        this = sub_18DF0C208(v13 + 8);
        *(_DWORD *)(v13 + 36) = 0;
        int v2 = *(_DWORD *)(v1 + 88);
      }
    }
  }
  if ((v2 & 0xFF00) != 0)
  {
    if ((v2 & 0x100) != 0)
    {
      uint64_t v14 = *(void *)(v1 + 64);
      if (v14)
      {
        this = sub_18DF0C208(v14 + 8);
        *(_DWORD *)(v14 + 36) = 0;
        int v2 = *(_DWORD *)(v1 + 88);
      }
    }
    if ((v2 & 0x200) != 0)
    {
      uint64_t v15 = *(void *)(v1 + 72);
      if (v15)
      {
        if (*(unsigned char *)(v15 + 28))
        {
          *(void *)(v15 + 8) = 0;
          *(void *)(v15 + 16) = 0;
        }
        *(_DWORD *)(v15 + 28) = 0;
      }
    }
  }
  *(_DWORD *)(v1 + 88) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4 = MEMORY[0x1E4FBA920];
  while (1)
  {
    uint64_t v5 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v5 < *((void *)a2 + 2) && (*v5 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_7;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_30;
        }
        unsigned int v63 = 0;
        uint64_t v8 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v63);
          if (!result) {
            return result;
          }
          unsigned int v9 = v63;
        }
        else
        {
          unsigned int v9 = *v8;
          *((void *)a2 + 1) = v8 + 1;
        }
        if (v9 + 1 <= 5)
        {
          *((_DWORD *)this + 22) |= 1u;
          *((_DWORD *)this + 20) = v9;
        }
        int v11 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v11 < *((void *)a2 + 2) && *v11 == 18)
        {
          *((void *)a2 + 1) = v11 + 1;
          goto LABEL_40;
        }
        continue;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_30;
        }
LABEL_40:
        *((_DWORD *)this + 22) |= 2u;
        uint64_t v12 = (CoreNavigation::CLP::LogEntry::Vision::TimeStamp *)*((void *)this + 1);
        if (!v12) {
          operator new();
        }
        unsigned int v63 = 0;
        uint64_t v13 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v13 >= *((void *)a2 + 2) || *v13 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v63))return 0; {
        }
          }
        else
        {
          unsigned int v63 = *v13;
          *((void *)a2 + 1) = v13 + 1;
        }
        int v14 = *((_DWORD *)a2 + 14);
        int v15 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v14 + 1;
        if (v14 >= v15) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Vision::TimeStamp::MergePartialFromCodedStream(v12, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v16 = *((_DWORD *)a2 + 14);
        BOOL v17 = __OFSUB__(v16, 1);
        int v18 = v16 - 1;
        if (v18 < 0 == v17) {
          *((_DWORD *)a2 + 14) = v18;
        }
        int v19 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v19 >= *((void *)a2 + 2) || *v19 != 26) {
          continue;
        }
        *((void *)a2 + 1) = v19 + 1;
LABEL_54:
        *((_DWORD *)this + 22) |= 4u;
        unsigned int v20 = (CoreNavigation::CLP::LogEntry::Vision::TimeStamp *)*((void *)this + 2);
        if (!v20) {
          operator new();
        }
        unsigned int v63 = 0;
        int v21 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v21 >= *((void *)a2 + 2) || *v21 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v63))return 0; {
        }
          }
        else
        {
          unsigned int v63 = *v21;
          *((void *)a2 + 1) = v21 + 1;
        }
        int v22 = *((_DWORD *)a2 + 14);
        int v23 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v22 + 1;
        if (v22 >= v23) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Vision::TimeStamp::MergePartialFromCodedStream(v20, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v24 = *((_DWORD *)a2 + 14);
        BOOL v17 = __OFSUB__(v24, 1);
        int v25 = v24 - 1;
        if (v25 < 0 == v17) {
          *((_DWORD *)a2 + 14) = v25;
        }
        v26 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v26 >= *((void *)a2 + 2) || *v26 != 34) {
          continue;
        }
        *((void *)a2 + 1) = v26 + 1;
LABEL_68:
        *((_DWORD *)this + 22) |= 8u;
        v27 = (CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo *)*((void *)this + 3);
        if (!v27) {
          operator new();
        }
        unsigned int v63 = 0;
        v28 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v28 >= *((void *)a2 + 2) || *v28 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v63))return 0; {
        }
          }
        else
        {
          unsigned int v63 = *v28;
          *((void *)a2 + 1) = v28 + 1;
        }
        int v29 = *((_DWORD *)a2 + 14);
        int v30 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v29 + 1;
        if (v29 >= v30) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo::MergePartialFromCodedStream(v27, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v31 = *((_DWORD *)a2 + 14);
        BOOL v17 = __OFSUB__(v31, 1);
        int v32 = v31 - 1;
        if (v32 < 0 == v17) {
          *((_DWORD *)a2 + 14) = v32;
        }
        v33 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v33 >= *((void *)a2 + 2) || *v33 != 42) {
          continue;
        }
        *((void *)a2 + 1) = v33 + 1;
LABEL_82:
        *((_DWORD *)this + 22) |= 0x10u;
        if (*((void *)this + 4) == v4) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes();
        if (!result) {
          return result;
        }
        v34 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v34 >= *((void *)a2 + 2) || *v34 != 50) {
          continue;
        }
        *((void *)a2 + 1) = v34 + 1;
LABEL_88:
        *((_DWORD *)this + 22) |= 0x20u;
        v35 = (CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo *)*((void *)this + 5);
        if (!v35) {
          operator new();
        }
        unsigned int v63 = 0;
        v36 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v36 >= *((void *)a2 + 2) || *v36 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v63))return 0; {
        }
          }
        else
        {
          unsigned int v63 = *v36;
          *((void *)a2 + 1) = v36 + 1;
        }
        int v37 = *((_DWORD *)a2 + 14);
        int v38 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v37 + 1;
        if (v37 >= v38) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo::MergePartialFromCodedStream(v35, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v39 = *((_DWORD *)a2 + 14);
        BOOL v17 = __OFSUB__(v39, 1);
        int v40 = v39 - 1;
        if (v40 < 0 == v17) {
          *((_DWORD *)a2 + 14) = v40;
        }
        v41 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v41 >= *((void *)a2 + 2) || *v41 != 58) {
          continue;
        }
        *((void *)a2 + 1) = v41 + 1;
LABEL_102:
        *((_DWORD *)this + 22) |= 0x40u;
        if (*((void *)this + 6) == v4) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes();
        if (!result) {
          return result;
        }
        v42 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v42 >= *((void *)a2 + 2) || *v42 != 66) {
          continue;
        }
        *((void *)a2 + 1) = v42 + 1;
LABEL_108:
        *((_DWORD *)this + 22) |= 0x80u;
        v43 = (CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN *)*((void *)this + 7);
        if (!v43) {
          operator new();
        }
        unsigned int v63 = 0;
        v44 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v44 >= *((void *)a2 + 2) || *v44 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v63))return 0; {
        }
          }
        else
        {
          unsigned int v63 = *v44;
          *((void *)a2 + 1) = v44 + 1;
        }
        int v45 = *((_DWORD *)a2 + 14);
        int v46 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v45 + 1;
        if (v45 >= v46) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::MergePartialFromCodedStream(v43, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v47 = *((_DWORD *)a2 + 14);
        BOOL v17 = __OFSUB__(v47, 1);
        int v48 = v47 - 1;
        if (v48 < 0 == v17) {
          *((_DWORD *)a2 + 14) = v48;
        }
        v49 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v49 >= *((void *)a2 + 2) || *v49 != 74) {
          continue;
        }
        *((void *)a2 + 1) = v49 + 1;
LABEL_122:
        *((_DWORD *)this + 22) |= 0x100u;
        v50 = (CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN *)*((void *)this + 8);
        if (!v50) {
          operator new();
        }
        unsigned int v63 = 0;
        v51 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v51 >= *((void *)a2 + 2) || *v51 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v63))return 0; {
        }
          }
        else
        {
          unsigned int v63 = *v51;
          *((void *)a2 + 1) = v51 + 1;
        }
        int v52 = *((_DWORD *)a2 + 14);
        int v53 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v52 + 1;
        if (v52 >= v53) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::MergePartialFromCodedStream(v50, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v54 = *((_DWORD *)a2 + 14);
        BOOL v17 = __OFSUB__(v54, 1);
        int v55 = v54 - 1;
        if (v55 < 0 == v17) {
          *((_DWORD *)a2 + 14) = v55;
        }
        v56 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v56 >= *((void *)a2 + 2) || *v56 != 82) {
          continue;
        }
        *((void *)a2 + 1) = v56 + 1;
LABEL_136:
        *((_DWORD *)this + 22) |= 0x200u;
        v57 = (CoreNavigation::CLP::LogEntry::Vision::CGSize *)*((void *)this + 9);
        if (!v57) {
          operator new();
        }
        unsigned int v63 = 0;
        v58 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v58 >= *((void *)a2 + 2) || *v58 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v63))return 0; {
        }
          }
        else
        {
          unsigned int v63 = *v58;
          *((void *)a2 + 1) = v58 + 1;
        }
        int v59 = *((_DWORD *)a2 + 14);
        int v60 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v59 + 1;
        if (v59 >= v60) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Vision::CGSize::MergePartialFromCodedStream(v57, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v61 = *((_DWORD *)a2 + 14);
        BOOL v17 = __OFSUB__(v61, 1);
        int v62 = v61 - 1;
        if (v62 < 0 == v17) {
          *((_DWORD *)a2 + 14) = v62;
        }
        if (*((void *)a2 + 1) == *((void *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
        break;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_54;
        }
        goto LABEL_30;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_68;
        }
        goto LABEL_30;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_82;
        }
        goto LABEL_30;
      case 6u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_88;
        }
        goto LABEL_30;
      case 7u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_102;
        }
        goto LABEL_30;
      case 8u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_108;
        }
        goto LABEL_30;
      case 9u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_122;
        }
        goto LABEL_30;
      case 0xAu:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_30;
        }
        goto LABEL_136;
      default:
        int v7 = TagFallback & 7;
LABEL_30:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

unsigned int *CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::SerializeWithCachedSizes(unsigned int *this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  unsigned int v6 = this[22];
  if (v6)
  {
    this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, this[20], (uint64_t)a2, a4);
    unsigned int v6 = v5[22];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v7 = *((void *)v5 + 1);
  if (!v7)
  {
    CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto((CoreNavigation::CLP::LogEntry::Vision *)this);
    uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::default_instance_ + 8);
  }
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  unsigned int v6 = v5[22];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
LABEL_16:
  uint64_t v8 = *((void *)v5 + 2);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto((CoreNavigation::CLP::LogEntry::Vision *)this);
    uint64_t v8 = *(void *)(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::default_instance_ + 16);
  }
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
  unsigned int v6 = v5[22];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_22;
  }
LABEL_19:
  uint64_t v9 = *((void *)v5 + 3);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto((CoreNavigation::CLP::LogEntry::Vision *)this);
    uint64_t v9 = *(void *)(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::default_instance_ + 24);
  }
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v9, a2, a4);
  unsigned int v6 = v5[22];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_23;
  }
LABEL_22:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
  unsigned int v6 = v5[22];
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_26;
  }
LABEL_23:
  uint64_t v10 = *((void *)v5 + 5);
  if (!v10)
  {
    CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto((CoreNavigation::CLP::LogEntry::Vision *)this);
    uint64_t v10 = *(void *)(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::default_instance_ + 40);
  }
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v10, a2, a4);
  unsigned int v6 = v5[22];
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_27;
  }
LABEL_26:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
  unsigned int v6 = v5[22];
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_30;
  }
LABEL_27:
  uint64_t v11 = *((void *)v5 + 7);
  if (!v11)
  {
    CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto((CoreNavigation::CLP::LogEntry::Vision *)this);
    uint64_t v11 = *(void *)(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::default_instance_ + 56);
  }
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v11, a2, a4);
  unsigned int v6 = v5[22];
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      return this;
    }
    goto LABEL_33;
  }
LABEL_30:
  uint64_t v12 = *((void *)v5 + 8);
  if (!v12)
  {
    CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto((CoreNavigation::CLP::LogEntry::Vision *)this);
    uint64_t v12 = *(void *)(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::default_instance_ + 64);
  }
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v12, a2, a4);
  if ((v5[22] & 0x200) != 0)
  {
LABEL_33:
    uint64_t v13 = *((void *)v5 + 9);
    if (!v13)
    {
      CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto((CoreNavigation::CLP::LogEntry::Vision *)this);
      uint64_t v13 = *(void *)(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::default_instance_ + 72);
    }
    return (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v13, a2, a4);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::ByteSize(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 88);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_73;
  }
  if (v2)
  {
    uint64_t v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(this + 80);
    if ((v4 & 0x80000000) != 0)
    {
      this = 10;
    }
    else if (v4 >= 0x80)
    {
      this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
      int v2 = *(_DWORD *)(v1 + 88);
    }
    else
    {
      this = 1;
    }
    uint64_t v3 = (this + 1);
    if ((v2 & 2) == 0) {
      goto LABEL_21;
    }
  }
  else
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_21;
    }
  }
  uint64_t v5 = *(void *)(v1 + 8);
  if (!v5)
  {
    CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto((CoreNavigation::CLP::LogEntry::Vision *)this);
    uint64_t v5 = *(void *)(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::default_instance_ + 8);
  }
  int v6 = *(unsigned __int8 *)(v5 + 36);
  if (*(unsigned char *)(v5 + 36))
  {
    int v7 = (v6 << 31 >> 31) & 9;
    if ((v6 & 2) != 0) {
      v7 += 9;
    }
    if ((v6 & 4) != 0) {
      int v6 = v7 + 9;
    }
    else {
      int v6 = v7;
    }
  }
  *(_DWORD *)(v5 + 32) = v6;
  uint64_t v3 = (v3 + v6 + 2);
  int v2 = *(_DWORD *)(v1 + 88);
LABEL_21:
  if ((v2 & 4) != 0)
  {
    uint64_t v8 = *(void *)(v1 + 16);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto((CoreNavigation::CLP::LogEntry::Vision *)this);
      uint64_t v8 = *(void *)(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::default_instance_ + 16);
    }
    int v9 = *(unsigned __int8 *)(v8 + 36);
    if (*(unsigned char *)(v8 + 36))
    {
      int v10 = (v9 << 31 >> 31) & 9;
      if ((v9 & 2) != 0) {
        v10 += 9;
      }
      if ((v9 & 4) != 0) {
        int v9 = v10 + 9;
      }
      else {
        int v9 = v10;
      }
    }
    *(_DWORD *)(v8 + 32) = v9;
    uint64_t v3 = (v3 + v9 + 2);
    int v2 = *(_DWORD *)(v1 + 88);
    if ((v2 & 8) == 0)
    {
LABEL_23:
      if ((v2 & 0x10) == 0) {
        goto LABEL_24;
      }
      goto LABEL_43;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_23;
  }
  uint64_t v11 = *(CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo **)(v1 + 24);
  if (!v11)
  {
    CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(0);
    uint64_t v11 = *(CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo **)(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::default_instance_
                                                                          + 24);
  }
  uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Vision::VIOInertialStateInfo::ByteSize(v11);
  int v13 = (int)v12;
  if (v12 >= 0x80) {
    this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12);
  }
  else {
    this = 1;
  }
  uint64_t v3 = (v3 + v13 + this + 1);
  int v2 = *(_DWORD *)(v1 + 88);
  if ((v2 & 0x10) == 0)
  {
LABEL_24:
    if ((v2 & 0x20) == 0) {
      goto LABEL_25;
    }
    goto LABEL_52;
  }
LABEL_43:
  uint64_t v14 = *(void *)(v1 + 32);
  int v15 = *(unsigned __int8 *)(v14 + 23);
  char v16 = v15;
  uint64_t v17 = *(void *)(v14 + 8);
  if ((v15 & 0x80u) == 0) {
    unint64_t v18 = *(unsigned __int8 *)(v14 + 23);
  }
  else {
    unint64_t v18 = v17;
  }
  if (v18 >= 0x80)
  {
    this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v18);
    int v15 = *(unsigned __int8 *)(v14 + 23);
    uint64_t v17 = *(void *)(v14 + 8);
    int v2 = *(_DWORD *)(v1 + 88);
    char v16 = *(unsigned char *)(v14 + 23);
  }
  else
  {
    this = 1;
  }
  if (v16 < 0) {
    int v15 = v17;
  }
  uint64_t v3 = (v3 + this + v15 + 1);
  if ((v2 & 0x20) == 0)
  {
LABEL_25:
    if ((v2 & 0x40) == 0) {
      goto LABEL_26;
    }
    goto LABEL_58;
  }
LABEL_52:
  int v19 = *(CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo **)(v1 + 40);
  if (!v19)
  {
    CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(0);
    int v19 = *(CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo **)(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::default_instance_
                                                                               + 40);
  }
  unsigned int v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Vision::VIOInertialCovarianceInfo::ByteSize(v19);
  int v21 = (int)v20;
  if (v20 >= 0x80) {
    this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20);
  }
  else {
    this = 1;
  }
  uint64_t v3 = (v3 + v21 + this + 1);
  int v2 = *(_DWORD *)(v1 + 88);
  if ((v2 & 0x40) == 0)
  {
LABEL_26:
    if ((v2 & 0x80) == 0) {
      goto LABEL_73;
    }
    goto LABEL_67;
  }
LABEL_58:
  uint64_t v22 = *(void *)(v1 + 48);
  int v23 = *(unsigned __int8 *)(v22 + 23);
  char v24 = v23;
  uint64_t v25 = *(void *)(v22 + 8);
  if ((v23 & 0x80u) == 0) {
    unint64_t v26 = *(unsigned __int8 *)(v22 + 23);
  }
  else {
    unint64_t v26 = v25;
  }
  if (v26 >= 0x80)
  {
    this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v26);
    int v23 = *(unsigned __int8 *)(v22 + 23);
    uint64_t v25 = *(void *)(v22 + 8);
    int v2 = *(_DWORD *)(v1 + 88);
    char v24 = *(unsigned char *)(v22 + 23);
  }
  else
  {
    this = 1;
  }
  if (v24 < 0) {
    int v23 = v25;
  }
  uint64_t v3 = (v3 + this + v23 + 1);
  if ((v2 & 0x80) != 0)
  {
LABEL_67:
    v27 = *(CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN **)(v1 + 56);
    if (!v27)
    {
      CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(0);
      v27 = *(CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN **)(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::default_instance_
                                                                     + 56);
    }
    v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::ByteSize(v27);
    int v29 = (int)v28;
    if (v28 >= 0x80) {
      this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v28);
    }
    else {
      this = 1;
    }
    uint64_t v3 = (v3 + v29 + this + 1);
    int v2 = *(_DWORD *)(v1 + 88);
  }
LABEL_73:
  if ((v2 & 0xFF00) != 0)
  {
    if ((v2 & 0x100) != 0)
    {
      int v30 = *(CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN **)(v1 + 64);
      if (!v30)
      {
        CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(0);
        int v30 = *(CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN **)(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::default_instance_
                                                                       + 64);
      }
      int v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Vision::simd_floatMxN::ByteSize(v30);
      int v32 = (int)v31;
      if (v31 >= 0x80) {
        this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v31);
      }
      else {
        this = 1;
      }
      uint64_t v3 = (v3 + v32 + this + 1);
      int v2 = *(_DWORD *)(v1 + 88);
    }
    if ((v2 & 0x200) != 0)
    {
      uint64_t v33 = *(void *)(v1 + 72);
      if (!v33)
      {
        CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto((CoreNavigation::CLP::LogEntry::Vision *)this);
        uint64_t v33 = *(void *)(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::default_instance_ + 72);
      }
      int v34 = *(unsigned __int8 *)(v33 + 28);
      int v35 = (v34 << 31 >> 31) & 9;
      if ((v34 & 2) != 0) {
        v35 += 9;
      }
      if (*(unsigned char *)(v33 + 28)) {
        int v36 = v35;
      }
      else {
        int v36 = 0;
      }
      *(_DWORD *)(v33 + 24) = v36;
      uint64_t v3 = (v3 + v36 + 2);
    }
  }
  *(_DWORD *)(v1 + 84) = v3;
  return v3;
}

double CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::CopyFrom(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation *this, const CoreNavigation::CLP::LogEntry::Vision::VIOEstimation *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::IsInitialized(CoreNavigation::CLP::LogEntry::Vision::VIOEstimation *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::Vision::VIOEstimation *a2)
{
  if (a2 != (CoreNavigation::CLP::LogEntry::Vision::VIOEstimation *)this)
  {
    int v2 = *(_DWORD *)(this + 80);
    *(_DWORD *)(this + 80) = *((_DWORD *)a2 + 20);
    *((_DWORD *)a2 + 20) = v2;
    uint64_t v3 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v3;
    uint64_t v4 = *(void *)(this + 16);
    *(void *)(this + 16) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v4;
    uint64_t v5 = *(void *)(this + 24);
    *(void *)(this + 24) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v5;
    uint64_t v6 = *(void *)(this + 32);
    *(void *)(this + 32) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v6;
    uint64_t v7 = *(void *)(this + 40);
    *(void *)(this + 40) = *((void *)a2 + 5);
    *((void *)a2 + 5) = v7;
    uint64_t v8 = *(void *)(this + 48);
    *(void *)(this + 48) = *((void *)a2 + 6);
    *((void *)a2 + 6) = v8;
    uint64_t v9 = *(void *)(this + 56);
    *(void *)(this + 56) = *((void *)a2 + 7);
    *((void *)a2 + 7) = v9;
    uint64_t v10 = *(void *)(this + 64);
    *(void *)(this + 64) = *((void *)a2 + 8);
    *((void *)a2 + 8) = v10;
    uint64_t v11 = *(void *)(this + 72);
    *(void *)(this + 72) = *((void *)a2 + 9);
    *((void *)a2 + 9) = v11;
    LODWORD(v11) = *(_DWORD *)(this + 88);
    *(_DWORD *)(this + 88) = *((_DWORD *)a2 + 22);
    *((_DWORD *)a2 + 22) = v11;
    LODWORD(v11) = *(_DWORD *)(this + 84);
    *(_DWORD *)(this + 84) = *((_DWORD *)a2 + 21);
    *((_DWORD *)a2 + 21) = v11;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.Vision.VIOEstimation");
}

void *CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate::SharedCtor(void *this)
{
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate *CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate::LSLLocationCoordinate(CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate *this, const CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate *a2)
{
  *(void *)this = &unk_1EDD11D98;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate::MergeFrom(this, a2);
  return this;
}

void sub_18DF4FA1C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate::MergeFrom(CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate *this, const CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 28);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 28))
    {
      double result = *((double *)a2 + 1);
      *((_DWORD *)this + 7) |= 1u;
      *((double *)this + 1) = result;
      int v5 = *((_DWORD *)a2 + 7);
    }
    if ((v5 & 2) != 0)
    {
      double result = *((double *)a2 + 2);
      *((_DWORD *)this + 7) |= 2u;
      *((double *)this + 2) = result;
    }
  }
  return result;
}

void sub_18DF4FADC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate::~LSLLocationCoordinate(CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate *this)
{
  *(void *)this = &unk_1EDD11D98;
  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate::~LSLLocationCoordinate(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate::default_instance(CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate *this)
{
  return CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 24) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate::New(CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 28))
  {
    *(void *)(this + 8) = 0;
    *(void *)(this + 16) = 0;
  }
  *(_DWORD *)(this + 28) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v4 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v4;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((void *)a2 + 1) = v4 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_21;
        }
        unint64_t v9 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v9) & 1) == 0) {
          return 0;
        }
        *((void *)this + 1) = v9;
        *((_DWORD *)this + 7) |= 1u;
        uint64_t v7 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v7 < *((void *)a2 + 2) && *v7 == 17)
        {
          *((void *)a2 + 1) = v7 + 1;
          goto LABEL_15;
        }
      }
      if (TagFallback >> 3 != 2)
      {
        int v6 = TagFallback & 7;
        goto LABEL_21;
      }
      int v6 = TagFallback & 7;
      if (v6 == 1) {
        break;
      }
LABEL_21:
      if (v6 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
    }
      }
LABEL_15:
    unint64_t v9 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v9) & 1) == 0) {
      return 0;
    }
    *((void *)this + 2) = v9;
    *((_DWORD *)this + 7) |= 2u;
  }
  while (*((void *)a2 + 1) != *((void *)a2 + 2)
       || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10));
  *((_DWORD *)a2 + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)a2 + 36) = 1;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = this;
  int v5 = *(_DWORD *)(this + 28);
  if (v5)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
    int v5 = *(_DWORD *)(v4 + 28);
  }
  if ((v5 & 2) != 0)
  {
    double v6 = *(double *)(v4 + 16);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, v6, a3);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate::ByteSize(CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate *this)
{
  uint64_t v1 = *((unsigned __int8 *)this + 28);
  if (*((unsigned char *)this + 28))
  {
    unsigned int v2 = ((int)(v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0) {
      uint64_t v1 = v2 + 9;
    }
    else {
      uint64_t v1 = v2;
    }
  }
  *((_DWORD *)this + 6) = v1;
  return v1;
}

double CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate::CopyFrom(CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate *this, const CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate::IsInitialized(CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate::Swap(CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate *this, CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    double result = *((double *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((double *)a2 + 2) = result;
    int v4 = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v4;
    int v5 = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v5;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.Vision.LSLLocationCoordinate");
}

double CoreNavigation::CLP::LogEntry::Vision::LSLLocation::SharedCtor(CoreNavigation::CLP::LogEntry::Vision::LSLLocation *this)
{
  double result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::Vision::LSLLocation *CoreNavigation::CLP::LogEntry::Vision::LSLLocation::LSLLocation(CoreNavigation::CLP::LogEntry::Vision::LSLLocation *this, const CoreNavigation::CLP::LogEntry::Vision::LSLLocation *a2)
{
  *(void *)this = &unk_1EDD117F8;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  CoreNavigation::CLP::LogEntry::Vision::LSLLocation::MergeFrom(this, a2);
  return this;
}

void sub_18DF50018(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::Vision::LSLLocation::MergeFrom(CoreNavigation::CLP::LogEntry::Vision::LSLLocation *this, const CoreNavigation::CLP::LogEntry::Vision::LSLLocation *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 36);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 36))
    {
      *((_DWORD *)this + 9) |= 1u;
      double v6 = (CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate *)*((void *)this + 1);
      if (!v6) {
        operator new();
      }
      uint64_t v7 = (const CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate *)*((void *)a2 + 1);
      if (!v7)
      {
        CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
        uint64_t v7 = *(const CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate **)(CoreNavigation::CLP::LogEntry::Vision::LSLLocation::default_instance_
                                                                                    + 8);
      }
      double result = CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate::MergeFrom(v6, v7);
      int v5 = *((_DWORD *)a2 + 9);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          return result;
        }
        goto LABEL_14;
      }
    }
    else if ((*((unsigned char *)a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    double result = *((double *)a2 + 2);
    *((_DWORD *)this + 9) |= 2u;
    *((double *)this + 2) = result;
    if ((*((_DWORD *)a2 + 9) & 4) == 0) {
      return result;
    }
LABEL_14:
    *((_DWORD *)this + 9) |= 4u;
    uint64_t v8 = (CoreNavigation::CLP::LogEntry::Vision::TimeStamp *)*((void *)this + 3);
    if (!v8) {
      operator new();
    }
    unint64_t v9 = (const CoreNavigation::CLP::LogEntry::Vision::TimeStamp *)*((void *)a2 + 3);
    if (!v9)
    {
      CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
      unint64_t v9 = *(const CoreNavigation::CLP::LogEntry::Vision::TimeStamp **)(CoreNavigation::CLP::LogEntry::Vision::LSLLocation::default_instance_
                                                                      + 24);
    }
    return CoreNavigation::CLP::LogEntry::Vision::TimeStamp::MergeFrom(v8, v9);
  }
  return result;
}

void sub_18DF501D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::LSLLocation::~LSLLocation(CoreNavigation::CLP::LogEntry::Vision::LSLLocation *this)
{
  *(void *)this = &unk_1EDD117F8;
  CoreNavigation::CLP::LogEntry::Vision::LSLLocation::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::Vision::LSLLocation::~LSLLocation(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::Vision::LSLLocation::SharedDtor(CoreNavigation::CLP::LogEntry::Vision::LSLLocation *this)
{
  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::Vision::LSLLocation *)CoreNavigation::CLP::LogEntry::Vision::LSLLocation::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 3);
    if (v3)
    {
      int v4 = *(void (**)(void))(*(void *)v3 + 8);
      v4();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLLocation::default_instance(CoreNavigation::CLP::LogEntry::Vision::LSLLocation *this)
{
  return CoreNavigation::CLP::LogEntry::Vision::LSLLocation::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLLocation::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 32) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::Vision::LSLLocation::New(CoreNavigation::CLP::LogEntry::Vision::LSLLocation *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLLocation::Clear(uint64_t this)
{
  LOBYTE(v1) = *(unsigned char *)(this + 36);
  if ((_BYTE)v1)
  {
    if (*(unsigned char *)(this + 36))
    {
      uint64_t v2 = *(void *)(this + 8);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 28))
        {
          *(void *)(v2 + 8) = 0;
          *(void *)(v2 + 16) = 0;
        }
        *(_DWORD *)(v2 + 28) = 0;
        int v1 = *(_DWORD *)(this + 36);
      }
    }
    *(void *)(this + 16) = 0;
    if ((v1 & 4) != 0)
    {
      uint64_t v3 = *(void *)(this + 24);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
          *(void *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
      }
    }
  }
  *(_DWORD *)(this + 36) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLLocation::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Vision::LSLLocation *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        int v4 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v4;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((void *)a2 + 1) = v4 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v6 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_20;
        }
        *((_DWORD *)this + 9) |= 1u;
        unint64_t v9 = (CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate *)*((void *)this + 1);
        if (!v9) {
          operator new();
        }
        v25[0] = 0;
        uint64_t v10 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v25))return 0; {
        }
          }
        else
        {
          v25[0] = *v10;
          *((void *)a2 + 1) = v10 + 1;
        }
        int v11 = *((_DWORD *)a2 + 14);
        int v12 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v11 + 1;
        if (v11 >= v12) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate::MergePartialFromCodedStream(v9, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v13 = *((_DWORD *)a2 + 14);
        BOOL v14 = __OFSUB__(v13, 1);
        int v15 = v13 - 1;
        if (v15 < 0 == v14) {
          *((_DWORD *)a2 + 14) = v15;
        }
        char v16 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v16 < *((void *)a2 + 2) && *v16 == 17)
        {
          *((void *)a2 + 1) = v16 + 1;
          goto LABEL_32;
        }
      }
      if (v6 != 2) {
        break;
      }
      int v7 = TagFallback & 7;
      if (v7 != 1) {
        goto LABEL_20;
      }
LABEL_32:
      *(void *)uint64_t v25 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v25) & 1) == 0)return 0; {
      *((void *)this + 2) = *(void *)v25;
      }
      int v8 = *((_DWORD *)this + 9) | 2;
      *((_DWORD *)this + 9) = v8;
      uint64_t v17 = (unsigned char *)*((void *)a2 + 1);
      if ((unint64_t)v17 < *((void *)a2 + 2) && *v17 == 26)
      {
        *((void *)a2 + 1) = v17 + 1;
LABEL_36:
        *((_DWORD *)this + 9) = v8 | 4;
        unint64_t v18 = (CoreNavigation::CLP::LogEntry::Vision::TimeStamp *)*((void *)this + 3);
        if (!v18) {
          operator new();
        }
        v25[0] = 0;
        int v19 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v19 >= *((void *)a2 + 2) || *v19 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v25))return 0; {
        }
          }
        else
        {
          v25[0] = *v19;
          *((void *)a2 + 1) = v19 + 1;
        }
        int v20 = *((_DWORD *)a2 + 14);
        int v21 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v20 + 1;
        if (v20 >= v21) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Vision::TimeStamp::MergePartialFromCodedStream(v18, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v22 = *((_DWORD *)a2 + 14);
        BOOL v14 = __OFSUB__(v22, 1);
        int v23 = v22 - 1;
        if (v23 < 0 == v14) {
          *((_DWORD *)a2 + 14) = v23;
        }
        if (*((void *)a2 + 1) == *((void *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (v6 == 3)
    {
      int v7 = TagFallback & 7;
      if (v7 == 2)
      {
        int v8 = *((_DWORD *)this + 9);
        goto LABEL_36;
      }
    }
    else
    {
      int v7 = TagFallback & 7;
    }
LABEL_20:
    if (v7 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLLocation::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 36);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_8:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 16), a3);
    if ((*(_DWORD *)(v5 + 36) & 4) == 0) {
      return this;
    }
    goto LABEL_9;
  }
  uint64_t v7 = *(void *)(this + 8);
  if (!v7)
  {
    CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto((CoreNavigation::CLP::LogEntry::Vision *)this);
    uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::Vision::LSLLocation::default_instance_ + 8);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
  int v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 2) != 0) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return this;
  }
LABEL_9:
  uint64_t v8 = *(void *)(v5 + 24);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto((CoreNavigation::CLP::LogEntry::Vision *)this);
    uint64_t v8 = *(void *)(CoreNavigation::CLP::LogEntry::Vision::LSLLocation::default_instance_ + 24);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLLocation::ByteSize(CoreNavigation::CLP::LogEntry::Vision::LSLLocation *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 36);
  if ((_BYTE)v2)
  {
    if (*((unsigned char *)this + 36))
    {
      uint64_t v5 = *((void *)this + 1);
      if (!v5)
      {
        CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
        uint64_t v5 = *(void *)(CoreNavigation::CLP::LogEntry::Vision::LSLLocation::default_instance_ + 8);
      }
      int v6 = *(unsigned __int8 *)(v5 + 28);
      if (*(unsigned char *)(v5 + 28))
      {
        if ((v6 & 2) != 0) {
          int v6 = ((v6 << 31 >> 31) & 9) + 9;
        }
        else {
          int v6 = (v6 << 31 >> 31) & 9;
        }
      }
      *(_DWORD *)(v5 + 24) = v6;
      unsigned int v3 = v6 + 2;
      int v2 = *((_DWORD *)this + 9);
    }
    else
    {
      unsigned int v3 = 0;
    }
    if ((v2 & 2) != 0) {
      uint64_t v4 = v3 + 9;
    }
    else {
      uint64_t v4 = v3;
    }
    if ((v2 & 4) != 0)
    {
      uint64_t v7 = *((void *)this + 3);
      if (!v7)
      {
        CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
        uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::Vision::LSLLocation::default_instance_ + 24);
      }
      int v8 = *(unsigned __int8 *)(v7 + 36);
      if (*(unsigned char *)(v7 + 36))
      {
        int v9 = (v8 << 31 >> 31) & 9;
        if ((v8 & 2) != 0) {
          v9 += 9;
        }
        if ((v8 & 4) != 0) {
          int v8 = v9 + 9;
        }
        else {
          int v8 = v9;
        }
      }
      *(_DWORD *)(v7 + 32) = v8;
      uint64_t v4 = (v4 + v8 + 2);
    }
  }
  else
  {
    uint64_t v4 = 0;
  }
  *((_DWORD *)this + 8) = v4;
  return v4;
}

double CoreNavigation::CLP::LogEntry::Vision::LSLLocation::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Vision::LSLLocation *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::Vision::LSLLocation::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::Vision::LSLLocation::CopyFrom(CoreNavigation::CLP::LogEntry::Vision::LSLLocation *this, const CoreNavigation::CLP::LogEntry::Vision::LSLLocation *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Vision::LSLLocation *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::Vision::LSLLocation::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLLocation::IsInitialized(CoreNavigation::CLP::LogEntry::Vision::LSLLocation *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::Vision::LSLLocation::Swap(CoreNavigation::CLP::LogEntry::Vision::LSLLocation *this, CoreNavigation::CLP::LogEntry::Vision::LSLLocation *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    double result = *((double *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((double *)a2 + 2) = result;
    uint64_t v4 = *((void *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v4;
    LODWORD(v4) = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v4;
    LODWORD(v4) = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v4;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::Vision::LSLLocation::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.Vision.LSLLocation");
}

double CoreNavigation::CLP::LogEntry::Vision::LSLHeading::SharedCtor(CoreNavigation::CLP::LogEntry::Vision::LSLHeading *this)
{
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(void *)&double result = 0xFFFFFFFFLL;
  *((void *)this + 8) = 0xFFFFFFFFLL;
  *((_DWORD *)this + 18) = 0;
  *((void *)this + 7) = 0;
  return result;
}

CoreNavigation::CLP::LogEntry::Vision::LSLHeading *CoreNavigation::CLP::LogEntry::Vision::LSLHeading::LSLHeading(CoreNavigation::CLP::LogEntry::Vision::LSLHeading *this, const CoreNavigation::CLP::LogEntry::Vision::LSLHeading *a2)
{
  *(void *)this = &unk_1EDD11690;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((void *)this + 8) = 0xFFFFFFFFLL;
  *((_DWORD *)this + 18) = 0;
  *((void *)this + 6) = 0;
  *((void *)this + 7) = 0;
  *((void *)this + 5) = 0;
  CoreNavigation::CLP::LogEntry::Vision::LSLHeading::MergeFrom(this, a2);
  return this;
}

void sub_18DF50B34(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::LSLHeading::MergeFrom(CoreNavigation::CLP::LogEntry::Vision::LSLHeading *this, const CoreNavigation::CLP::LogEntry::Vision::LSLHeading *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v19);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 72);
  if (!(_BYTE)v4) {
    return;
  }
  if (*((unsigned char *)a2 + 72))
  {
    *((_DWORD *)this + 18) |= 1u;
    uint64_t v5 = (CoreNavigation::CLP::LogEntry::Vision::TimeStamp *)*((void *)this + 1);
    if (!v5) {
      operator new();
    }
    int v6 = (const CoreNavigation::CLP::LogEntry::Vision::TimeStamp *)*((void *)a2 + 1);
    if (!v6)
    {
      CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
      int v6 = *(const CoreNavigation::CLP::LogEntry::Vision::TimeStamp **)(CoreNavigation::CLP::LogEntry::Vision::LSLHeading::default_instance_
                                                                      + 8);
    }
    CoreNavigation::CLP::LogEntry::Vision::TimeStamp::MergeFrom(v5, v6);
    int v4 = *((_DWORD *)a2 + 18);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_23;
    }
  }
  else if ((*((unsigned char *)a2 + 72) & 2) == 0)
  {
    goto LABEL_6;
  }
  *((_DWORD *)this + 18) |= 2u;
  uint64_t v7 = (CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *)*((void *)this + 2);
  if (!v7) {
    operator new();
  }
  int v8 = (const CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *)*((void *)a2 + 2);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
    int v8 = *(const CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN **)(CoreNavigation::CLP::LogEntry::Vision::LSLHeading::default_instance_
                                                                         + 16);
  }
  CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::MergeFrom(v7, v8);
  int v4 = *((_DWORD *)a2 + 18);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_28;
  }
LABEL_23:
  *((_DWORD *)this + 18) |= 4u;
  int v9 = (CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *)*((void *)this + 3);
  if (!v9) {
    operator new();
  }
  uint64_t v10 = (const CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *)*((void *)a2 + 3);
  if (!v10)
  {
    CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
    uint64_t v10 = *(const CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN **)(CoreNavigation::CLP::LogEntry::Vision::LSLHeading::default_instance_
                                                                          + 24);
  }
  CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::MergeFrom(v9, v10);
  int v4 = *((_DWORD *)a2 + 18);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_33;
  }
LABEL_28:
  *((_DWORD *)this + 18) |= 8u;
  int v11 = (CoreNavigation::CLP::LogEntry::Vision::simd_doubleM *)*((void *)this + 4);
  if (!v11) {
    operator new();
  }
  int v12 = (const CoreNavigation::CLP::LogEntry::Vision::simd_doubleM *)*((void *)a2 + 4);
  if (!v12)
  {
    CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
    int v12 = *(const CoreNavigation::CLP::LogEntry::Vision::simd_doubleM **)(CoreNavigation::CLP::LogEntry::Vision::LSLHeading::default_instance_
                                                                        + 32);
  }
  CoreNavigation::CLP::LogEntry::Vision::simd_doubleM::MergeFrom(v11, v12);
  int v4 = *((_DWORD *)a2 + 18);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_34:
    int v14 = *((_DWORD *)a2 + 16);
    if ((v14 + 1) >= 4) {
      __assert_rtn("set_global_reference_frame", "CoreNavigationCLPVisionEvent.pb.h", 4296, "::CoreNavigation::CLP::LogEntry::Vision::LSLGlobalReferenceFrame_IsValid(value)");
    }
    *((_DWORD *)this + 18) |= 0x20u;
    *((_DWORD *)this + 16) = v14;
    int v4 = *((_DWORD *)a2 + 18);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        return;
      }
      goto LABEL_41;
    }
    goto LABEL_36;
  }
LABEL_33:
  uint64_t v13 = *((void *)a2 + 5);
  *((_DWORD *)this + 18) |= 0x10u;
  *((void *)this + 5) = v13;
  int v4 = *((_DWORD *)a2 + 18);
  if ((v4 & 0x20) != 0) {
    goto LABEL_34;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_36:
  *((_DWORD *)this + 18) |= 0x40u;
  int v15 = (CoreNavigation::CLP::LogEntry::Vision::LSLLocation *)*((void *)this + 6);
  if (!v15) {
    operator new();
  }
  char v16 = (const CoreNavigation::CLP::LogEntry::Vision::LSLLocation *)*((void *)a2 + 6);
  if (!v16)
  {
    CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
    char v16 = *(const CoreNavigation::CLP::LogEntry::Vision::LSLLocation **)(CoreNavigation::CLP::LogEntry::Vision::LSLHeading::default_instance_
                                                                       + 48);
  }
  CoreNavigation::CLP::LogEntry::Vision::LSLLocation::MergeFrom(v15, v16);
  if ((*((_DWORD *)a2 + 18) & 0x80) != 0)
  {
LABEL_41:
    *((_DWORD *)this + 18) |= 0x80u;
    uint64_t v17 = (CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo *)*((void *)this + 7);
    if (!v17) {
      operator new();
    }
    unint64_t v18 = (const CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo *)*((void *)a2 + 7);
    if (!v18)
    {
      CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
      unint64_t v18 = *(const CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo **)(CoreNavigation::CLP::LogEntry::Vision::LSLHeading::default_instance_
                                                                                 + 56);
    }
    CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::MergeFrom(v17, v18);
  }
}

void sub_18DF50F50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::LSLHeading::~LSLHeading(CoreNavigation::CLP::LogEntry::Vision::LSLHeading *this)
{
  *(void *)this = &unk_1EDD11690;
  CoreNavigation::CLP::LogEntry::Vision::LSLHeading::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::Vision::LSLHeading::~LSLHeading(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::Vision::LSLHeading::SharedDtor(CoreNavigation::CLP::LogEntry::Vision::LSLHeading *this)
{
  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::Vision::LSLHeading *)CoreNavigation::CLP::LogEntry::Vision::LSLHeading::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 2);
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = *((void *)this + 3);
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = *((void *)this + 4);
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
    uint64_t v6 = *((void *)this + 6);
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    uint64_t v7 = *((void *)this + 7);
    if (v7)
    {
      int v8 = *(void (**)(void))(*(void *)v7 + 8);
      v8();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLHeading::default_instance(CoreNavigation::CLP::LogEntry::Vision::LSLHeading *this)
{
  return CoreNavigation::CLP::LogEntry::Vision::LSLHeading::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLHeading::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 68) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::Vision::LSLHeading::New(CoreNavigation::CLP::LogEntry::Vision::LSLHeading *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLHeading::Clear(uint64_t this)
{
  uint64_t v1 = this;
  LOBYTE(v2) = *(unsigned char *)(this + 72);
  if ((_BYTE)v2)
  {
    if (*(unsigned char *)(this + 72))
    {
      uint64_t v3 = *(void *)(this + 8);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
          *(void *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        int v2 = *(_DWORD *)(this + 72);
      }
    }
    if ((v2 & 2) != 0)
    {
      uint64_t v4 = *(void *)(this + 16);
      if (v4)
      {
        this = sub_18DF0C208(v4 + 8);
        *(_DWORD *)(v4 + 36) = 0;
        int v2 = *(_DWORD *)(v1 + 72);
      }
    }
    if ((v2 & 4) != 0)
    {
      uint64_t v5 = *(void *)(v1 + 24);
      if (v5)
      {
        this = sub_18DF0C208(v5 + 8);
        *(_DWORD *)(v5 + 36) = 0;
        int v2 = *(_DWORD *)(v1 + 72);
      }
    }
    if ((v2 & 8) != 0)
    {
      uint64_t v6 = *(void *)(v1 + 32);
      if (v6)
      {
        *(_DWORD *)(v6 + 16) = 0;
        *(_DWORD *)(v6 + 28) = 0;
        int v2 = *(_DWORD *)(v1 + 72);
      }
    }
    *(void *)(v1 + 40) = 0;
    *(_DWORD *)(v1 + 64) = -1;
    if ((v2 & 0x40) != 0)
    {
      this = *(void *)(v1 + 48);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::Vision::LSLLocation::Clear(this);
        int v2 = *(_DWORD *)(v1 + 72);
      }
    }
    if ((v2 & 0x80) != 0)
    {
      this = *(void *)(v1 + 56);
      if (this) {
        this = CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::Clear(this);
      }
    }
  }
  *(_DWORD *)(v1 + 72) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::Clear(uint64_t this)
{
  uint64_t v1 = this;
  if (*(unsigned char *)(this + 20))
  {
    uint64_t v2 = *(void *)(this + 8);
    if (v2)
    {
      if (*(unsigned char *)(v2 + 44)) {
        *(void *)(v2 + 8) = 0;
      }
      this = sub_18DF0C208(v2 + 16);
      *(_DWORD *)(v2 + 44) = 0;
    }
  }
  *(_DWORD *)(v1 + 20) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLHeading::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Vision::LSLHeading *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (1)
  {
    uint64_t v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 < *((void *)a2 + 2) && (*v4 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_6;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_6:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_27;
        }
        *((_DWORD *)this + 18) |= 1u;
        uint64_t v7 = (CoreNavigation::CLP::LogEntry::Vision::TimeStamp *)*((void *)this + 1);
        if (!v7) {
          operator new();
        }
        v55[0] = 0;
        int v8 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v55))return 0; {
        }
          }
        else
        {
          v55[0] = *v8;
          *((void *)a2 + 1) = v8 + 1;
        }
        int v11 = *((_DWORD *)a2 + 14);
        int v12 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v11 + 1;
        if (v11 >= v12) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Vision::TimeStamp::MergePartialFromCodedStream(v7, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v13 = *((_DWORD *)a2 + 14);
        BOOL v14 = __OFSUB__(v13, 1);
        int v15 = v13 - 1;
        if (v15 < 0 == v14) {
          *((_DWORD *)a2 + 14) = v15;
        }
        char v16 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v16 >= *((void *)a2 + 2) || *v16 != 18) {
          continue;
        }
        *((void *)a2 + 1) = v16 + 1;
        goto LABEL_39;
      case 2u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_27;
        }
LABEL_39:
        *((_DWORD *)this + 18) |= 2u;
        uint64_t v17 = (CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *)*((void *)this + 2);
        if (!v17) {
          operator new();
        }
        v55[0] = 0;
        unint64_t v18 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v18 >= *((void *)a2 + 2) || *v18 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v55))return 0; {
        }
          }
        else
        {
          v55[0] = *v18;
          *((void *)a2 + 1) = v18 + 1;
        }
        int v19 = *((_DWORD *)a2 + 14);
        int v20 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v19 + 1;
        if (v19 >= v20) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::MergePartialFromCodedStream(v17, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v21 = *((_DWORD *)a2 + 14);
        BOOL v14 = __OFSUB__(v21, 1);
        int v22 = v21 - 1;
        if (v22 < 0 == v14) {
          *((_DWORD *)a2 + 14) = v22;
        }
        int v23 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v23 >= *((void *)a2 + 2) || *v23 != 26) {
          continue;
        }
        *((void *)a2 + 1) = v23 + 1;
LABEL_53:
        *((_DWORD *)this + 18) |= 4u;
        char v24 = (CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *)*((void *)this + 3);
        if (!v24) {
          operator new();
        }
        v55[0] = 0;
        uint64_t v25 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v25 >= *((void *)a2 + 2) || *v25 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v55))return 0; {
        }
          }
        else
        {
          v55[0] = *v25;
          *((void *)a2 + 1) = v25 + 1;
        }
        int v26 = *((_DWORD *)a2 + 14);
        int v27 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v26 + 1;
        if (v26 >= v27) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::MergePartialFromCodedStream(v24, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v28 = *((_DWORD *)a2 + 14);
        BOOL v14 = __OFSUB__(v28, 1);
        int v29 = v28 - 1;
        if (v29 < 0 == v14) {
          *((_DWORD *)a2 + 14) = v29;
        }
        int v30 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v30 >= *((void *)a2 + 2) || *v30 != 34) {
          continue;
        }
        *((void *)a2 + 1) = v30 + 1;
LABEL_67:
        *((_DWORD *)this + 18) |= 8u;
        int v31 = (CoreNavigation::CLP::LogEntry::Vision::simd_doubleM *)*((void *)this + 4);
        if (!v31) {
          operator new();
        }
        v55[0] = 0;
        int v32 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v32 >= *((void *)a2 + 2) || *v32 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v55))return 0; {
        }
          }
        else
        {
          v55[0] = *v32;
          *((void *)a2 + 1) = v32 + 1;
        }
        int v33 = *((_DWORD *)a2 + 14);
        int v34 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v33 + 1;
        if (v33 >= v34) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Vision::simd_doubleM::MergePartialFromCodedStream(v31, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v35 = *((_DWORD *)a2 + 14);
        BOOL v14 = __OFSUB__(v35, 1);
        int v36 = v35 - 1;
        if (v36 < 0 == v14) {
          *((_DWORD *)a2 + 14) = v36;
        }
        int v37 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v37 >= *((void *)a2 + 2) || *v37 != 41) {
          continue;
        }
        *((void *)a2 + 1) = v37 + 1;
LABEL_81:
        *(void *)int v55 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v55) & 1) == 0)return 0; {
        *((void *)this + 5) = *(void *)v55;
        }
        *((_DWORD *)this + 18) |= 0x10u;
        int v38 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        if ((unint64_t)v38 >= v9 || *v38 != 48) {
          continue;
        }
        uint64_t v10 = v38 + 1;
        *((void *)a2 + 1) = v10;
LABEL_85:
        v55[0] = 0;
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v55);
          if (!result) {
            return result;
          }
          unsigned int v39 = v55[0];
        }
        else
        {
          unsigned int v39 = *v10;
          *((void *)a2 + 1) = v10 + 1;
        }
        if (v39 + 1 <= 3)
        {
          *((_DWORD *)this + 18) |= 0x20u;
          *((_DWORD *)this + 16) = v39;
        }
        v41 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v41 >= *((void *)a2 + 2) || *v41 != 58) {
          continue;
        }
        *((void *)a2 + 1) = v41 + 1;
LABEL_95:
        *((_DWORD *)this + 18) |= 0x40u;
        v42 = (CoreNavigation::CLP::LogEntry::Vision::LSLLocation *)*((void *)this + 6);
        if (!v42) {
          operator new();
        }
        v55[0] = 0;
        v43 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v43 >= *((void *)a2 + 2) || *v43 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v55))return 0; {
        }
          }
        else
        {
          v55[0] = *v43;
          *((void *)a2 + 1) = v43 + 1;
        }
        int v44 = *((_DWORD *)a2 + 14);
        int v45 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v44 + 1;
        if (v44 >= v45) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Vision::LSLLocation::MergePartialFromCodedStream(v42, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v46 = *((_DWORD *)a2 + 14);
        BOOL v14 = __OFSUB__(v46, 1);
        int v47 = v46 - 1;
        if (v47 < 0 == v14) {
          *((_DWORD *)a2 + 14) = v47;
        }
        int v48 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v48 >= *((void *)a2 + 2) || *v48 != 66) {
          continue;
        }
        *((void *)a2 + 1) = v48 + 1;
LABEL_109:
        *((_DWORD *)this + 18) |= 0x80u;
        v49 = (CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo *)*((void *)this + 7);
        if (!v49) {
          operator new();
        }
        v55[0] = 0;
        v50 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v50 >= *((void *)a2 + 2) || *v50 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v55))return 0; {
        }
          }
        else
        {
          v55[0] = *v50;
          *((void *)a2 + 1) = v50 + 1;
        }
        int v51 = *((_DWORD *)a2 + 14);
        int v52 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v51 + 1;
        if (v51 >= v52) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::MergePartialFromCodedStream(v49, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v53 = *((_DWORD *)a2 + 14);
        BOOL v14 = __OFSUB__(v53, 1);
        int v54 = v53 - 1;
        if (v54 < 0 == v14) {
          *((_DWORD *)a2 + 14) = v54;
        }
        if (*((void *)a2 + 1) == *((void *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
        break;
      case 3u:
        int v6 = TagFallback & 7;
        if (v6 == 2) {
          goto LABEL_53;
        }
        goto LABEL_27;
      case 4u:
        int v6 = TagFallback & 7;
        if (v6 == 2) {
          goto LABEL_67;
        }
        goto LABEL_27;
      case 5u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_81;
        }
        goto LABEL_27;
      case 6u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_27;
        }
        uint64_t v10 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        goto LABEL_85;
      case 7u:
        int v6 = TagFallback & 7;
        if (v6 == 2) {
          goto LABEL_95;
        }
        goto LABEL_27;
      case 8u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_27;
        }
        goto LABEL_109;
      default:
        int v6 = TagFallback & 7;
LABEL_27:
        if (v6 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLHeading::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 72);
  if (v6)
  {
    uint64_t v7 = *(void *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto((CoreNavigation::CLP::LogEntry::Vision *)this);
      uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::Vision::LSLHeading::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 72);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto((CoreNavigation::CLP::LogEntry::Vision *)this);
    uint64_t v8 = *(void *)(CoreNavigation::CLP::LogEntry::Vision::LSLHeading::default_instance_ + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
LABEL_16:
  uint64_t v9 = *(void *)(v5 + 24);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto((CoreNavigation::CLP::LogEntry::Vision *)this);
    uint64_t v9 = *(void *)(CoreNavigation::CLP::LogEntry::Vision::LSLHeading::default_instance_ + 24);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v9, a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_22;
  }
LABEL_19:
  uint64_t v10 = *(void *)(v5 + 32);
  if (!v10)
  {
    CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto((CoreNavigation::CLP::LogEntry::Vision *)this);
    uint64_t v10 = *(void *)(CoreNavigation::CLP::LogEntry::Vision::LSLHeading::default_instance_ + 32);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v10, a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_23;
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(v5 + 40), a3);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_24;
  }
LABEL_23:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned int *)(v5 + 64), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      return this;
    }
    goto LABEL_27;
  }
LABEL_24:
  uint64_t v11 = *(void *)(v5 + 48);
  if (!v11)
  {
    CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto((CoreNavigation::CLP::LogEntry::Vision *)this);
    uint64_t v11 = *(void *)(CoreNavigation::CLP::LogEntry::Vision::LSLHeading::default_instance_ + 48);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v11, a2, a4);
  if ((*(_DWORD *)(v5 + 72) & 0x80) != 0)
  {
LABEL_27:
    uint64_t v12 = *(void *)(v5 + 56);
    if (!v12)
    {
      CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto((CoreNavigation::CLP::LogEntry::Vision *)this);
      uint64_t v12 = *(void *)(CoreNavigation::CLP::LogEntry::Vision::LSLHeading::default_instance_ + 56);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v12, a2, a4);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLHeading::ByteSize(uint64_t this)
{
  uint64_t v1 = this;
  LOBYTE(v2) = *(unsigned char *)(this + 72);
  if (!(_BYTE)v2)
  {
    uint64_t v4 = 0;
    goto LABEL_58;
  }
  if ((*(unsigned char *)(this + 72) & 1) == 0)
  {
    unsigned int v3 = 0;
    if ((*(unsigned char *)(this + 72) & 2) == 0) {
      goto LABEL_21;
    }
    goto LABEL_15;
  }
  uint64_t v5 = *(void *)(this + 8);
  if (!v5)
  {
    CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto((CoreNavigation::CLP::LogEntry::Vision *)this);
    uint64_t v5 = *(void *)(CoreNavigation::CLP::LogEntry::Vision::LSLHeading::default_instance_ + 8);
  }
  int v6 = *(unsigned __int8 *)(v5 + 36);
  if (*(unsigned char *)(v5 + 36))
  {
    int v7 = (v6 << 31 >> 31) & 9;
    if ((v6 & 2) != 0) {
      v7 += 9;
    }
    if ((v6 & 4) != 0) {
      int v6 = v7 + 9;
    }
    else {
      int v6 = v7;
    }
  }
  *(_DWORD *)(v5 + 32) = v6;
  unsigned int v3 = v6 + 2;
  int v2 = *(_DWORD *)(v1 + 72);
  if ((v2 & 2) != 0)
  {
LABEL_15:
    uint64_t v8 = *(CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN **)(v1 + 16);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(0);
      uint64_t v8 = *(CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN **)(CoreNavigation::CLP::LogEntry::Vision::LSLHeading::default_instance_
                                                                     + 16);
    }
    uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::ByteSize(v8);
    int v10 = (int)v9;
    if (v9 >= 0x80) {
      this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9);
    }
    else {
      this = 1;
    }
    v3 += v10 + this + 1;
    int v2 = *(_DWORD *)(v1 + 72);
  }
LABEL_21:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_36;
    }
    goto LABEL_30;
  }
  uint64_t v11 = *(CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN **)(v1 + 24);
  if (!v11)
  {
    CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(0);
    uint64_t v11 = *(CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN **)(CoreNavigation::CLP::LogEntry::Vision::LSLHeading::default_instance_
                                                                    + 24);
  }
  uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::ByteSize(v11);
  int v13 = (int)v12;
  if (v12 >= 0x80) {
    this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12);
  }
  else {
    this = 1;
  }
  v3 += v13 + this + 1;
  int v2 = *(_DWORD *)(v1 + 72);
  if ((v2 & 8) != 0)
  {
LABEL_30:
    uint64_t v14 = *(void *)(v1 + 32);
    if (!v14)
    {
      CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto((CoreNavigation::CLP::LogEntry::Vision *)this);
      uint64_t v14 = *(void *)(CoreNavigation::CLP::LogEntry::Vision::LSLHeading::default_instance_ + 32);
    }
    int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(9 * *(_DWORD *)(v14 + 16));
    *(_DWORD *)(v14 + 24) = v15;
    if (v15 >= 0x80) {
      int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15);
    }
    else {
      int v16 = 1;
    }
    v3 += v15 + v16 + 1;
    int v2 = *(_DWORD *)(v1 + 72);
  }
LABEL_36:
  if ((v2 & 0x10) != 0) {
    uint64_t v4 = v3 + 9;
  }
  else {
    uint64_t v4 = v3;
  }
  if ((v2 & 0x20) != 0)
  {
    uint64_t v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 64);
    if ((v17 & 0x80000000) != 0)
    {
      int v18 = 11;
    }
    else if (v17 >= 0x80)
    {
      int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17) + 1;
      int v2 = *(_DWORD *)(v1 + 72);
    }
    else
    {
      int v18 = 2;
    }
    uint64_t v4 = (v18 + v4);
    if ((v2 & 0x40) == 0)
    {
LABEL_41:
      if ((v2 & 0x80) == 0) {
        goto LABEL_58;
      }
      goto LABEL_52;
    }
  }
  else if ((v2 & 0x40) == 0)
  {
    goto LABEL_41;
  }
  int v19 = *(CoreNavigation::CLP::LogEntry::Vision::LSLLocation **)(v1 + 48);
  if (!v19)
  {
    CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(0);
    int v19 = *(CoreNavigation::CLP::LogEntry::Vision::LSLLocation **)(CoreNavigation::CLP::LogEntry::Vision::LSLHeading::default_instance_
                                                                 + 48);
  }
  uint64_t v4 = v4 + CoreNavigation::CLP::LogEntry::Vision::LSLLocation::ByteSize(v19) + 2;
  if ((*(_DWORD *)(v1 + 72) & 0x80) != 0)
  {
LABEL_52:
    int v20 = *(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo **)(v1 + 56);
    if (!v20)
    {
      CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(0);
      int v20 = *(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo **)(CoreNavigation::CLP::LogEntry::Vision::LSLHeading::default_instance_
                                                                           + 56);
    }
    int v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::ByteSize(v20);
    int v22 = (int)v21;
    if (v21 >= 0x80) {
      int v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21);
    }
    else {
      int v23 = 1;
    }
    uint64_t v4 = (v4 + v22 + v23 + 1);
  }
LABEL_58:
  *(_DWORD *)(v1 + 68) = v4;
  return v4;
}

void CoreNavigation::CLP::LogEntry::Vision::LSLHeading::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Vision::LSLHeading *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::Vision::LSLHeading::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::MergeFrom(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo *this, const CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  if (*((unsigned char *)a2 + 20))
  {
    *((_DWORD *)this + 5) |= 1u;
    uint64_t v4 = (CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment *)*((void *)this + 1);
    if (!v4) {
      operator new();
    }
    uint64_t v5 = (const CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment *)*((void *)a2 + 1);
    if (!v5)
    {
      CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
      uint64_t v5 = *(const CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment **)(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::default_instance_
                                                                              + 8);
    }
    CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment::MergeFrom(v4, v5);
  }
}

void sub_18DF52108(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::LSLHeading::CopyFrom(CoreNavigation::CLP::LogEntry::Vision::LSLHeading *this, const CoreNavigation::CLP::LogEntry::Vision::LSLHeading *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Vision::LSLHeading *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::Vision::LSLHeading::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLHeading::IsInitialized(CoreNavigation::CLP::LogEntry::Vision::LSLHeading *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::Vision::LSLHeading::Swap(CoreNavigation::CLP::LogEntry::Vision::LSLHeading *this, CoreNavigation::CLP::LogEntry::Vision::LSLHeading *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    uint64_t v3 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    uint64_t v4 = *((void *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v4;
    uint64_t v5 = *((void *)this + 4);
    *((void *)this + 4) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v5;
    double result = *((double *)this + 5);
    *((void *)this + 5) = *((void *)a2 + 5);
    *((double *)a2 + 5) = result;
    LODWORD(v5) = *((_DWORD *)this + 16);
    *((_DWORD *)this + 16) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v5;
    uint64_t v7 = *((void *)this + 6);
    *((void *)this + 6) = *((void *)a2 + 6);
    *((void *)a2 + 6) = v7;
    uint64_t v8 = *((void *)this + 7);
    *((void *)this + 7) = *((void *)a2 + 7);
    *((void *)a2 + 7) = v8;
    LODWORD(v8) = *((_DWORD *)this + 18);
    *((_DWORD *)this + 18) = *((_DWORD *)a2 + 18);
    *((_DWORD *)a2 + 18) = v8;
    LODWORD(v8) = *((_DWORD *)this + 17);
    *((_DWORD *)this + 17) = *((_DWORD *)a2 + 17);
    *((_DWORD *)a2 + 17) = v8;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::Vision::LSLHeading::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.Vision.LSLHeading");
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 40) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment *CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment::LSLMapRoadSegment(CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment *this, const CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment *a2)
{
  *((void *)this + 5) = 0;
  *(void *)this = &unk_1EDD11B40;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment::MergeFrom(this, a2);
  return this;
}

void sub_18DF522D8(_Unwind_Exception *a1)
{
  sub_18DF0C324(v1 + 2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment::MergeFrom(CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment *this, const CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment *)((char *)this + 16));
  if (*((int *)a2 + 6) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(const CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate **)(*((void *)a2 + 2) + 8 * v4);
      int v6 = *((_DWORD *)this + 7);
      uint64_t v7 = *((int *)this + 6);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 8))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment *)((char *)this + 16));
          int v6 = *((_DWORD *)this + 7);
        }
        *((_DWORD *)this + 7) = v6 + 1;
        operator new();
      }
      uint64_t v8 = *((void *)this + 2);
      *((_DWORD *)this + 6) = v7 + 1;
      CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate::MergeFrom(*(CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 6));
  }
  if (*((unsigned char *)a2 + 44))
  {
    uint64_t v9 = *((void *)a2 + 1);
    *((_DWORD *)this + 11) |= 1u;
    *((void *)this + 1) = v9;
  }
}

void sub_18DF52470(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment::~LSLMapRoadSegment(CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment *this)
{
  *(void *)this = &unk_1EDD11B40;
  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
  sub_18DF0C324((uint64_t *)this + 2);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment::~LSLMapRoadSegment(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment::default_instance(CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment *this)
{
  return CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 40) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment::New(CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment::Clear(CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment *this)
{
  if (*((unsigned char *)this + 44)) {
    *((void *)this + 1) = 0;
  }
  uint64_t result = sub_18DF0C208((uint64_t)this + 16);
  *((_DWORD *)this + 11) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4 = (unint64_t *)((char *)this + 8);
  uint64_t v5 = (CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        int v6 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v6 >= *((void *)a2 + 2) || *v6 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v6;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((void *)a2 + 1) = v6 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_16;
        }
        uint64_t v9 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
        if ((unint64_t)v9 >= v10 || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!result) {
            return result;
          }
          uint64_t v11 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v10 = *((void *)a2 + 2);
        }
        else
        {
          unint64_t *v4 = *v9;
          uint64_t v11 = v9 + 1;
          *((void *)a2 + 1) = v11;
        }
        *((_DWORD *)this + 11) |= 1u;
        if ((unint64_t)v11 < v10 && *v11 == 18) {
          goto LABEL_23;
        }
      }
      if (TagFallback >> 3 != 2) {
        break;
      }
      int v8 = TagFallback & 7;
      if (v8 != 2) {
        goto LABEL_16;
      }
      while (1)
      {
        int v13 = *((_DWORD *)this + 7);
        uint64_t v14 = *((int *)this + 6);
        if ((int)v14 >= v13)
        {
          if (v13 == *((_DWORD *)this + 8))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5);
            int v13 = *((_DWORD *)this + 7);
          }
          *((_DWORD *)this + 7) = v13 + 1;
          operator new();
        }
        uint64_t v15 = *((void *)this + 2);
        *((_DWORD *)this + 6) = v14 + 1;
        int v16 = *(CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate **)(v15 + 8 * v14);
        unsigned int v24 = 0;
        uint64_t v17 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v17 >= *((void *)a2 + 2) || *v17 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v24))return 0; {
        }
          }
        else
        {
          unsigned int v24 = *v17;
          *((void *)a2 + 1) = v17 + 1;
        }
        int v18 = *((_DWORD *)a2 + 14);
        int v19 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v18 + 1;
        if (v18 >= v19) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Vision::LSLLocationCoordinate::MergePartialFromCodedStream(v16, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v20 = *((_DWORD *)a2 + 14);
        BOOL v21 = __OFSUB__(v20, 1);
        int v22 = v20 - 1;
        if (v22 < 0 == v21) {
          *((_DWORD *)a2 + 14) = v22;
        }
        uint64_t v11 = (unsigned char *)*((void *)a2 + 1);
        int v23 = (unsigned char *)*((void *)a2 + 2);
        if (v11 >= v23 || *v11 != 18) {
          break;
        }
LABEL_23:
        *((void *)a2 + 1) = v11 + 1;
      }
      if (v11 == v23 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      }
    }
    int v8 = TagFallback & 7;
LABEL_16:
    if (v8 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(unsigned char *)(this + 44)) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
  }
  if (*(int *)(v5 + 24) >= 1)
  {
    uint64_t v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(*(void *)(v5 + 16) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 24));
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment::ByteSize(wireless_diagnostics::google::protobuf::io::CodedOutputStream **this)
{
  if (*((unsigned char *)this + 44)) {
    int v2 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(this[1]) + 1;
  }
  else {
    int v2 = 0;
  }
  uint64_t v3 = *((unsigned int *)this + 6);
  uint64_t result = (v3 + v2);
  if ((int)v3 >= 1)
  {
    uint64_t v5 = this[2];
    do
    {
      int v6 = *(unsigned __int8 *)(*(void *)v5 + 28);
      if (*(unsigned char *)(*(void *)v5 + 28))
      {
        if ((v6 & 2) != 0) {
          int v6 = ((v6 << 31 >> 31) & 9) + 9;
        }
        else {
          int v6 = (v6 << 31 >> 31) & 9;
        }
      }
      *(_DWORD *)(*(void *)v5 + 24) = v6;
      uint64_t result = (result + v6 + 1);
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((char *)v5 + 8);
      --v3;
    }
    while (v3);
  }
  *((_DWORD *)this + 10) = result;
  return result;
}

void CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment::CopyFrom(CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment *this, const CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment::IsInitialized(CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment *this)
{
  return 1;
}

CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment *CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment::Swap(CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment *this, CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment *a2)
{
  if (a2 != this)
  {
    uint64_t v3 = this;
    uint64_t v4 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v4;
    this = (CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    int v5 = *((_DWORD *)v3 + 11);
    *((_DWORD *)v3 + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v5;
    int v6 = *((_DWORD *)v3 + 10);
    *((_DWORD *)v3 + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v6;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.Vision.LSLMapRoadSegment");
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo *CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::LSLHeadingSupplInfo(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo *this, const CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo *a2)
{
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)this = &unk_1EDD11BB8;
  CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::MergeFrom(this, a2);
  return this;
}

void sub_18DF52BA4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::~LSLHeadingSupplInfo(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo *this)
{
  *(void *)this = &unk_1EDD11BB8;
  CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::~LSLHeadingSupplInfo(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::SharedDtor(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo *this)
{
  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo *)CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2)
    {
      uint64_t v3 = *(void (**)(void))(*(void *)v2 + 8);
      v3();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::default_instance(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo *this)
{
  return CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 16) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::New(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (1)
  {
    while (1)
    {
      uint64_t v4 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
      }
      else
      {
        unint64_t TagFallback = *v4;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v4 + 1;
      }
      if (TagFallback != 10) {
        break;
      }
      *((_DWORD *)this + 5) |= 1u;
      int v6 = (CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment *)*((void *)this + 1);
      if (!v6) {
        operator new();
      }
      unsigned int v14 = 0;
      uint64_t v7 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v7 >= *((void *)a2 + 2) || *v7 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v14)) {
          return 0;
        }
      }
      else
      {
        unsigned int v14 = *v7;
        *((void *)a2 + 1) = v7 + 1;
      }
      int v8 = *((_DWORD *)a2 + 14);
      int v9 = *((_DWORD *)a2 + 15);
      *((_DWORD *)a2 + 14) = v8 + 1;
      if (v8 >= v9) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
      if (!CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment::MergePartialFromCodedStream(v6, a2)
        || !*((unsigned char *)a2 + 36))
      {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
      int v10 = *((_DWORD *)a2 + 14);
      BOOL v11 = __OFSUB__(v10, 1);
      int v12 = v10 - 1;
      if (v12 < 0 == v11) {
        *((_DWORD *)a2 + 14) = v12;
      }
      if (*((void *)a2 + 1) == *((void *)a2 + 2)
        && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      break;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if (*(unsigned char *)(this + 20))
  {
    uint64_t v5 = *(void *)(this + 8);
    if (!v5)
    {
      CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto((CoreNavigation::CLP::LogEntry::Vision *)this);
      uint64_t v5 = *(void *)(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::default_instance_ + 8);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v5, a2, a4);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::ByteSize(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo *this)
{
  if (*((unsigned char *)this + 20))
  {
    uint64_t v3 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream **)*((void *)this + 1);
    if (!v3)
    {
      CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(0);
      uint64_t v3 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream ***)(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::default_instance_
                                                                              + 8);
    }
    uint64_t v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Vision::LSLMapRoadSegment::ByteSize(v3);
    int v5 = (int)v4;
    if (v4 >= 0x80) {
      int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
    }
    else {
      int v6 = 1;
    }
    uint64_t result = (v5 + v6 + 1);
  }
  else
  {
    uint64_t result = 0;
  }
  *((_DWORD *)this + 4) = result;
  return result;
}

void CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::CopyFrom(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo *this, const CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::IsInitialized(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo *a2)
{
  if (a2 != (CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::Vision::LSLHeadingSupplInfo::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.Vision.LSLHeadingSupplInfo");
}

double CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation::SharedCtor(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation *this)
{
  *(void *)&double result = 0x8FFFFFFFFLL;
  *((_OWORD *)this + 2) = xmmword_18E1F2F40;
  return result;
}

CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation *CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation::LSLHeadingEstimation(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation *this, const CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation *a2)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1EDD11C30;
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  *((_OWORD *)this + 2) = xmmword_18E1F2F40;
  CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation::MergeFrom(this, a2);
  return this;
}

void sub_18DF531E8(_Unwind_Exception *a1)
{
  sub_18DF0C324(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation::MergeFrom(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation *this, const CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation *)((char *)this + 8));
  if (*((int *)a2 + 4) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      int v5 = *(const CoreNavigation::CLP::LogEntry::Vision::LSLHeading **)(*((void *)a2 + 1) + 8 * v4);
      int v6 = *((_DWORD *)this + 5);
      uint64_t v7 = *((int *)this + 4);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 6))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation *)((char *)this + 8));
          int v6 = *((_DWORD *)this + 5);
        }
        *((_DWORD *)this + 5) = v6 + 1;
        operator new();
      }
      uint64_t v8 = *((void *)this + 1);
      *((_DWORD *)this + 4) = v7 + 1;
      CoreNavigation::CLP::LogEntry::Vision::LSLHeading::MergeFrom(*(CoreNavigation::CLP::LogEntry::Vision::LSLHeading **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 4));
  }
  LOBYTE(v9) = *((unsigned char *)a2 + 44);
  if ((_BYTE)v9)
  {
    if (*((unsigned char *)a2 + 44))
    {
      int v10 = *((_DWORD *)a2 + 8);
      if ((v10 + 1) >= 6) {
        __assert_rtn("set_status_deprecated", "CoreNavigationCLPVisionEvent.pb.h", 4504, "::CoreNavigation::CLP::LogEntry::Vision::LSLStatus_DEPRECATED_IsValid(value)");
      }
      *((_DWORD *)this + 11) |= 1u;
      *((_DWORD *)this + 8) = v10;
      int v9 = *((_DWORD *)a2 + 11);
    }
    if ((v9 & 4) != 0)
    {
      unsigned int v11 = *((_DWORD *)a2 + 9);
      if (v11 >= 9) {
        __assert_rtn("set_status", "CoreNavigationCLPVisionEvent.pb.h", 4552, "::CoreNavigation::CLP::LogEntry::Vision::LSLHeadingStatus_IsValid(value)");
      }
      *((_DWORD *)this + 11) |= 4u;
      *((_DWORD *)this + 9) = v11;
    }
  }
}

void sub_18DF53418(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation::~LSLHeadingEstimation(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation *this)
{
  *(void *)this = &unk_1EDD11C30;
  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
  sub_18DF0C324((uint64_t *)this + 1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation::~LSLHeadingEstimation(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation::default_instance(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation *this)
{
  return CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 40) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation::New(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation::Clear(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation *this)
{
  if (*((unsigned char *)this + 44)) {
    *((void *)this + 4) = 0x8FFFFFFFFLL;
  }
  uint64_t result = sub_18DF0C208((uint64_t)this + 8);
  *((_DWORD *)this + 11) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4 = (CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation *)((char *)this + 8);
  while (1)
  {
    while (1)
    {
LABEL_2:
      int v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v5 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      unsigned int v7 = TagFallback >> 3;
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_19;
      }
      unsigned int v28 = 0;
      unsigned int v11 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v11 >= *((void *)a2 + 2) || *v11 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v28);
        if (!result) {
          return result;
        }
        unsigned int v12 = v28;
      }
      else
      {
        unsigned int v12 = *v11;
        *((void *)a2 + 1) = v11 + 1;
      }
      if (v12 + 1 <= 5)
      {
        *((_DWORD *)this + 11) |= 1u;
        *((_DWORD *)this + 8) = v12;
      }
      unsigned int v14 = (unsigned char *)*((void *)a2 + 1);
      if ((unint64_t)v14 < *((void *)a2 + 2) && *v14 == 18)
      {
        while (1)
        {
          *((void *)a2 + 1) = v14 + 1;
LABEL_29:
          int v15 = *((_DWORD *)this + 5);
          uint64_t v16 = *((int *)this + 4);
          if ((int)v16 >= v15)
          {
            if (v15 == *((_DWORD *)this + 6))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
              int v15 = *((_DWORD *)this + 5);
            }
            *((_DWORD *)this + 5) = v15 + 1;
            operator new();
          }
          uint64_t v17 = *((void *)this + 1);
          *((_DWORD *)this + 4) = v16 + 1;
          int v18 = *(CoreNavigation::CLP::LogEntry::Vision::LSLHeading **)(v17 + 8 * v16);
          unsigned int v29 = 0;
          int v19 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v19 >= *((void *)a2 + 2) || *v19 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v29))return 0; {
          }
            }
          else
          {
            unsigned int v29 = *v19;
            *((void *)a2 + 1) = v19 + 1;
          }
          int v20 = *((_DWORD *)a2 + 14);
          int v21 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v20 + 1;
          if (v20 >= v21) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!CoreNavigation::CLP::LogEntry::Vision::LSLHeading::MergePartialFromCodedStream(v18, a2)
            || !*((unsigned char *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          int v22 = *((_DWORD *)a2 + 14);
          BOOL v23 = __OFSUB__(v22, 1);
          int v24 = v22 - 1;
          if (v24 < 0 == v23) {
            *((_DWORD *)a2 + 14) = v24;
          }
          unsigned int v14 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v10 = *((void *)a2 + 2);
          if ((unint64_t)v14 >= v10) {
            break;
          }
          int v25 = *v14;
          if (v25 != 18)
          {
            if (v25 == 24)
            {
              int v9 = v14 + 1;
              *((void *)a2 + 1) = v9;
LABEL_47:
              unsigned int v27 = 0;
              if ((unint64_t)v9 >= v10 || *v9 < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v27);
                if (!result) {
                  return result;
                }
                unsigned int v26 = v27;
              }
              else
              {
                unsigned int v26 = *v9;
                *((void *)a2 + 1) = v9 + 1;
              }
              if (v26 <= 8)
              {
                *((_DWORD *)this + 11) |= 4u;
                *((_DWORD *)this + 9) = v26;
              }
              if (*((void *)a2 + 1) == *((void *)a2 + 2)
                && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
              {
                *((_DWORD *)a2 + 8) = 0;
                uint64_t result = 1;
                *((unsigned char *)a2 + 36) = 1;
                return result;
              }
            }
            goto LABEL_2;
          }
        }
      }
    }
    if (v7 == 2)
    {
      int v8 = TagFallback & 7;
      if (v8 != 2) {
        goto LABEL_19;
      }
      goto LABEL_29;
    }
    if (v7 == 3)
    {
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v9 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
        goto LABEL_47;
      }
    }
    else
    {
      int v8 = TagFallback & 7;
    }
LABEL_19:
    if (v8 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(unsigned char *)(this + 44)) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 32), (uint64_t)a2, a4);
  }
  if (*(int *)(v5 + 16) >= 1)
  {
    uint64_t v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(*(void *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  if ((*(unsigned char *)(v5 + 44) & 4) != 0)
  {
    uint64_t v7 = *(unsigned int *)(v5 + 36);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, (uint64_t)a2, a4);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation::ByteSize(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation *this)
{
  char v2 = *((unsigned char *)this + 44);
  if (!v2)
  {
    int v3 = 0;
    goto LABEL_19;
  }
  if (*((unsigned char *)this + 44))
  {
    uint64_t v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    if ((v4 & 0x80000000) != 0)
    {
      int v3 = 11;
      if ((v2 & 4) == 0) {
        goto LABEL_19;
      }
    }
    else if (v4 >= 0x80)
    {
      int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      if ((*((_DWORD *)this + 11) & 4) == 0) {
        goto LABEL_19;
      }
    }
    else
    {
      int v3 = 2;
      if ((v2 & 4) == 0) {
        goto LABEL_19;
      }
    }
  }
  else
  {
    int v3 = 0;
    if ((*((unsigned char *)this + 44) & 4) == 0) {
      goto LABEL_19;
    }
  }
  uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
  if ((v5 & 0x80000000) != 0)
  {
    int v6 = 11;
  }
  else if (v5 >= 0x80)
  {
    int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
  }
  else
  {
    int v6 = 2;
  }
  v3 += v6;
LABEL_19:
  int v7 = *((_DWORD *)this + 4);
  uint64_t v8 = (v7 + v3);
  if (v7 >= 1)
  {
    uint64_t v9 = 0;
    do
    {
      unint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Vision::LSLHeading::ByteSize(*(void *)(*((void *)this + 1) + 8 * v9));
      int v11 = (int)v10;
      if (v10 >= 0x80) {
        int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
      }
      else {
        int v12 = 1;
      }
      uint64_t v8 = (v11 + v8 + v12);
      ++v9;
    }
    while (v9 < *((int *)this + 4));
  }
  *((_DWORD *)this + 10) = v8;
  return v8;
}

void CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation::CopyFrom(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation *this, const CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation::IsInitialized(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation *this)
{
  return 1;
}

CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation *CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation::Swap(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation *this, CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation *a2)
{
  if (a2 != this)
  {
    int v3 = this;
    int v4 = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v4;
    this = (CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    int v5 = *((_DWORD *)v3 + 9);
    *((_DWORD *)v3 + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v5;
    int v6 = *((_DWORD *)v3 + 11);
    *((_DWORD *)v3 + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v6;
    int v7 = *((_DWORD *)v3 + 10);
    *((_DWORD *)v3 + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v7;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.Vision.LSLHeadingEstimation");
}

void *CoreNavigation::CLP::LogEntry::Vision::VLLocation::SharedCtor(void *this)
{
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::Vision::VLLocation *CoreNavigation::CLP::LogEntry::Vision::VLLocation::VLLocation(CoreNavigation::CLP::LogEntry::Vision::VLLocation *this, const CoreNavigation::CLP::LogEntry::Vision::VLLocation *a2)
{
  *(void *)this = &unk_1EDD11708;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  CoreNavigation::CLP::LogEntry::Vision::VLLocation::MergeFrom(this, a2);
  return this;
}

void sub_18DF53CCC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::Vision::VLLocation::MergeFrom(CoreNavigation::CLP::LogEntry::Vision::VLLocation *this, const CoreNavigation::CLP::LogEntry::Vision::VLLocation *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 28);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 28))
    {
      *((_DWORD *)this + 7) |= 1u;
      int v6 = (CoreNavigation::CLP::LogEntry::Vision::simd_doubleM *)*((void *)this + 1);
      if (!v6) {
        operator new();
      }
      int v7 = (const CoreNavigation::CLP::LogEntry::Vision::simd_doubleM *)*((void *)a2 + 1);
      if (!v7)
      {
        CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
        int v7 = *(const CoreNavigation::CLP::LogEntry::Vision::simd_doubleM **)(CoreNavigation::CLP::LogEntry::Vision::VLLocation::default_instance_
                                                                           + 8);
      }
      CoreNavigation::CLP::LogEntry::Vision::simd_doubleM::MergeFrom(v6, v7);
      int v5 = *((_DWORD *)a2 + 7);
    }
    if ((v5 & 2) != 0)
    {
      double result = *((double *)a2 + 2);
      *((_DWORD *)this + 7) |= 2u;
      *((double *)this + 2) = result;
    }
  }
  return result;
}

void sub_18DF53DF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::VLLocation::~VLLocation(CoreNavigation::CLP::LogEntry::Vision::VLLocation *this)
{
  *(void *)this = &unk_1EDD11708;
  CoreNavigation::CLP::LogEntry::Vision::VLLocation::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::Vision::VLLocation::~VLLocation(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::Vision::VLLocation::SharedDtor(CoreNavigation::CLP::LogEntry::Vision::VLLocation *this)
{
  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::Vision::VLLocation *)CoreNavigation::CLP::LogEntry::Vision::VLLocation::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2)
    {
      int v3 = *(void (**)(void))(*(void *)v2 + 8);
      v3();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLLocation::default_instance(CoreNavigation::CLP::LogEntry::Vision::VLLocation *this)
{
  return CoreNavigation::CLP::LogEntry::Vision::VLLocation::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLLocation::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 24) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::Vision::VLLocation::New(CoreNavigation::CLP::LogEntry::Vision::VLLocation *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLLocation::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 28))
  {
    if (*(unsigned char *)(this + 28))
    {
      uint64_t v1 = *(void *)(this + 8);
      if (v1)
      {
        *(_DWORD *)(v1 + 16) = 0;
        *(_DWORD *)(v1 + 28) = 0;
      }
    }
    *(void *)(this + 16) = 0;
  }
  *(_DWORD *)(this + 28) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLLocation::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Vision::VLLocation *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (1)
  {
    while (1)
    {
      int v4 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v4;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v4 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 == 1) {
        break;
      }
      if (TagFallback >> 3 != 2)
      {
        int v6 = TagFallback & 7;
        goto LABEL_17;
      }
      int v6 = TagFallback & 7;
      if (v6 == 1)
      {
LABEL_29:
        unint64_t v16 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v16) & 1) == 0) {
          return 0;
        }
        *((void *)this + 2) = v16;
        *((_DWORD *)this + 7) |= 2u;
        if (*((void *)a2 + 1) == *((void *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
      }
      else
      {
LABEL_17:
        if (v6 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
      }
        }
    }
    int v6 = TagFallback & 7;
    if (v6 != 2) {
      goto LABEL_17;
    }
    *((_DWORD *)this + 7) |= 1u;
    int v7 = (CoreNavigation::CLP::LogEntry::Vision::simd_doubleM *)*((void *)this + 1);
    if (!v7) {
      operator new();
    }
    unsigned int v17 = 0;
    uint64_t v8 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v17)) {
        return 0;
      }
    }
    else
    {
      unsigned int v17 = *v8;
      *((void *)a2 + 1) = v8 + 1;
    }
    int v9 = *((_DWORD *)a2 + 14);
    int v10 = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 14) = v9 + 1;
    if (v9 >= v10) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
    if (!CoreNavigation::CLP::LogEntry::Vision::simd_doubleM::MergePartialFromCodedStream(v7, a2)
      || !*((unsigned char *)a2 + 36))
    {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
    int v11 = *((_DWORD *)a2 + 14);
    BOOL v12 = __OFSUB__(v11, 1);
    int v13 = v11 - 1;
    if (v13 < 0 == v12) {
      *((_DWORD *)a2 + 14) = v13;
    }
    unsigned int v14 = (unsigned char *)*((void *)a2 + 1);
    if ((unint64_t)v14 < *((void *)a2 + 2) && *v14 == 17)
    {
      *((void *)a2 + 1) = v14 + 1;
      goto LABEL_29;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLLocation::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 28);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      return this;
    }
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(this + 8);
  if (!v7)
  {
    CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto((CoreNavigation::CLP::LogEntry::Vision *)this);
    uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::Vision::VLLocation::default_instance_ + 8);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
  if ((*(_DWORD *)(v5 + 28) & 2) != 0)
  {
LABEL_7:
    double v8 = *(double *)(v5 + 16);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, v8, a3);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLLocation::ByteSize(CoreNavigation::CLP::LogEntry::Vision::VLLocation *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 28);
  if ((_BYTE)v2)
  {
    if (*((unsigned char *)this + 28))
    {
      uint64_t v5 = *((void *)this + 1);
      if (!v5)
      {
        CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
        uint64_t v5 = *(void *)(CoreNavigation::CLP::LogEntry::Vision::VLLocation::default_instance_ + 8);
      }
      int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(9 * *(_DWORD *)(v5 + 16));
      *(_DWORD *)(v5 + 24) = v6;
      if (v6 >= 0x80) {
        int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
      }
      else {
        int v7 = 1;
      }
      unsigned int v3 = v6 + v7 + 1;
      int v2 = *((_DWORD *)this + 7);
    }
    else
    {
      unsigned int v3 = 0;
    }
    if ((v2 & 2) != 0) {
      uint64_t result = v3 + 9;
    }
    else {
      uint64_t result = v3;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  *((_DWORD *)this + 6) = result;
  return result;
}

double CoreNavigation::CLP::LogEntry::Vision::VLLocation::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Vision::VLLocation *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::Vision::VLLocation::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::Vision::VLLocation::CopyFrom(CoreNavigation::CLP::LogEntry::Vision::VLLocation *this, const CoreNavigation::CLP::LogEntry::Vision::VLLocation *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Vision::VLLocation *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::Vision::VLLocation::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLLocation::IsInitialized(CoreNavigation::CLP::LogEntry::Vision::VLLocation *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::Vision::VLLocation::Swap(CoreNavigation::CLP::LogEntry::Vision::VLLocation *this, CoreNavigation::CLP::LogEntry::Vision::VLLocation *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    double result = *((double *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((double *)a2 + 2) = result;
    LODWORD(v2) = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LODWORD(v2) = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::Vision::VLLocation::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.Vision.VLLocation");
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLVectorfM::SharedCtor(uint64_t this)
{
  *(void *)(this + 24) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::Vision::VLVectorfM *CoreNavigation::CLP::LogEntry::Vision::VLVectorfM::VLVectorfM(CoreNavigation::CLP::LogEntry::Vision::VLVectorfM *this, const CoreNavigation::CLP::LogEntry::Vision::VLVectorfM *a2)
{
  *(void *)this = &unk_1EDD11780;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  CoreNavigation::CLP::LogEntry::Vision::VLVectorfM::MergeFrom(this, a2);
  return this;
}

void sub_18DF544F0(_Unwind_Exception *a1)
{
  unsigned int v3 = v2;
  if (*v3) {
    MEMORY[0x192FA6220](*v3, 0x1000C8052888210);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::VLVectorfM::MergeFrom(CoreNavigation::CLP::LogEntry::Vision::VLVectorfM *this, const CoreNavigation::CLP::LogEntry::Vision::VLVectorfM *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v5);
  }
  int v4 = *((_DWORD *)a2 + 4);
  if (v4)
  {
    sub_18DF47D54((uint64_t)this + 8, *((_DWORD *)this + 4) + v4);
    memcpy((void *)(*((void *)this + 1) + 4 * *((int *)this + 4)), *((const void **)a2 + 1), 4 * *((int *)a2 + 4));
    *((_DWORD *)this + 4) += *((_DWORD *)a2 + 4);
  }
}

void sub_18DF545D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::VLVectorfM::~VLVectorfM(CoreNavigation::CLP::LogEntry::Vision::VLVectorfM *this)
{
  *(void *)this = &unk_1EDD11780;
  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
  uint64_t v2 = *((void *)this + 1);
  if (v2) {
    MEMORY[0x192FA6220](v2, 0x1000C8052888210);
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::Vision::VLVectorfM::~VLVectorfM(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLVectorfM::default_instance(CoreNavigation::CLP::LogEntry::Vision::VLVectorfM *this)
{
  return CoreNavigation::CLP::LogEntry::Vision::VLVectorfM::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLVectorfM::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 24) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::Vision::VLVectorfM::New(CoreNavigation::CLP::LogEntry::Vision::VLVectorfM *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLVectorfM::Clear(uint64_t this)
{
  *(_DWORD *)(this + 16) = 0;
  *(_DWORD *)(this + 28) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLVectorfM::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Vision::VLVectorfM *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (char *)this + 8;
  while (1)
  {
    while (1)
    {
      uint64_t v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v5 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      int v7 = TagFallback & 7;
      if ((TagFallback & 0xFFFFFFF8) != 8) {
        break;
      }
      if (v7 != 2)
      {
        if (v7 != 5) {
          break;
        }
        goto LABEL_15;
      }
      uint64_t result = sub_18DF49B3C(a2, (uint64_t)v4);
      if (!result) {
        return result;
      }
      while (1)
      {
        int v19 = (unsigned char *)*((void *)a2 + 1);
        int v20 = (unsigned char *)*((void *)a2 + 2);
        if (v19 >= v20 || *v19 != 13) {
          break;
        }
        *((void *)a2 + 1) = v19 + 1;
LABEL_15:
        v21[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v21) & 1) == 0) {
          return 0;
        }
        unsigned int v9 = v21[0];
        int v10 = *((_DWORD *)this + 4);
        if (v10 == *((_DWORD *)this + 5))
        {
          sub_18DF47D54((uint64_t)v4, v10 + 1);
          int v10 = *((_DWORD *)this + 4);
        }
        uint64_t v11 = *((void *)this + 1);
        int v12 = v10 + 1;
        *((_DWORD *)this + 4) = v10 + 1;
        *(_DWORD *)(v11 + 4 * v10) = v9;
        uint64_t v13 = *((void *)a2 + 1);
        int v14 = *((_DWORD *)a2 + 4) - v13;
        if (v14 >= 1)
        {
          signed int v15 = v14 / 5u;
          int v16 = v15 >= *((_DWORD *)this + 5) - v12 ? *((_DWORD *)this + 5) - v12 : v15;
          if (v16 >= 1)
          {
            int v17 = 0;
            while (*(unsigned char *)v13 == 13)
            {
              int v18 = *(_DWORD *)(v13 + 1);
              if (v12 >= *((_DWORD *)this + 5))
              {
                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v21);
                int v12 = *((_DWORD *)this + 4);
                uint64_t v11 = *((void *)this + 1);
              }
              *((_DWORD *)this + 4) = v12 + 1;
              *(_DWORD *)(v11 + 4 * v12) = v18;
              ++v17;
              v13 += 5;
              ++v12;
              if (v16 == v17)
              {
                int v17 = v16;
                break;
              }
            }
            if (v17) {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(a2);
            }
          }
        }
      }
      if (v19 == v20 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      }
    }
    if (v7 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

void sub_18DF5498C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLVectorfM::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  if (*(int *)(this + 16) >= 1)
  {
    uint64_t v4 = this;
    uint64_t v5 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(float *)(*(void *)(v4 + 8) + 4 * v5++), a3);
    while (v5 < *(int *)(v4 + 16));
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLVectorfM::ByteSize(CoreNavigation::CLP::LogEntry::Vision::VLVectorfM *this)
{
  uint64_t v1 = (5 * *((_DWORD *)this + 4));
  *((_DWORD *)this + 6) = v1;
  return v1;
}

void CoreNavigation::CLP::LogEntry::Vision::VLVectorfM::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Vision::VLVectorfM *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::Vision::VLVectorfM::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::Vision::VLVectorfM::CopyFrom(CoreNavigation::CLP::LogEntry::Vision::VLVectorfM *this, const CoreNavigation::CLP::LogEntry::Vision::VLVectorfM *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Vision::VLVectorfM *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::Vision::VLVectorfM::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLVectorfM::IsInitialized(CoreNavigation::CLP::LogEntry::Vision::VLVectorfM *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::Vision::VLVectorfM::Swap(CoreNavigation::CLP::LogEntry::Vision::VLVectorfM *this, CoreNavigation::CLP::LogEntry::Vision::VLVectorfM *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    double result = *((double *)a2 + 2);
    *((void *)a2 + 1) = v2;
    uint64_t v4 = *((void *)this + 2);
    *((double *)this + 2) = result;
    *((void *)a2 + 2) = v4;
    LODWORD(v2) = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LODWORD(v2) = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::Vision::VLVectorfM::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.Vision.VLVectorfM");
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN::SharedCtor(uint64_t this)
{
  *(void *)(this + 32) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN *CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN::VLMatrixfMxN(CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN *this, const CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN *a2)
{
  *(void *)this = &unk_1EDD118E8;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  *((void *)this + 4) = 0;
  CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN::MergeFrom(this, a2);
  return this;
}

void sub_18DF54C20(_Unwind_Exception *a1)
{
  sub_18DF0C324(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN::MergeFrom(CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN *this, const CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN *)((char *)this + 8));
  if (*((int *)a2 + 4) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(const CoreNavigation::CLP::LogEntry::Vision::VLVectorfM **)(*((void *)a2 + 1) + 8 * v4);
      int v6 = *((_DWORD *)this + 5);
      uint64_t v7 = *((int *)this + 4);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 6))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN *)((char *)this + 8));
          int v6 = *((_DWORD *)this + 5);
        }
        *((_DWORD *)this + 5) = v6 + 1;
        operator new();
      }
      uint64_t v8 = *((void *)this + 1);
      *((_DWORD *)this + 4) = v7 + 1;
      CoreNavigation::CLP::LogEntry::Vision::VLVectorfM::MergeFrom(*(CoreNavigation::CLP::LogEntry::Vision::VLVectorfM **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 4));
  }
}

void sub_18DF54D9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN::~VLMatrixfMxN(CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN *this)
{
  *(void *)this = &unk_1EDD118E8;
  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
  sub_18DF0C324((uint64_t *)this + 1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN::~VLMatrixfMxN(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN::default_instance(CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN *this)
{
  return CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 32) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN::New(CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN::Clear(CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN *this)
{
  uint64_t result = sub_18DF0C208((uint64_t)this + 8);
  *((_DWORD *)this + 9) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4 = (CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN *)((char *)this + 8);
  while (1)
  {
LABEL_2:
    uint64_t v5 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v5 + 1;
    }
    if (TagFallback == 10)
    {
      while (1)
      {
        int v7 = *((_DWORD *)this + 5);
        uint64_t v8 = *((int *)this + 4);
        if ((int)v8 >= v7)
        {
          if (v7 == *((_DWORD *)this + 6))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
            int v7 = *((_DWORD *)this + 5);
          }
          *((_DWORD *)this + 5) = v7 + 1;
          operator new();
        }
        uint64_t v9 = *((void *)this + 1);
        *((_DWORD *)this + 4) = v8 + 1;
        int v10 = *(CoreNavigation::CLP::LogEntry::Vision::VLVectorfM **)(v9 + 8 * v8);
        unsigned int v20 = 0;
        uint64_t v11 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v11 >= *((void *)a2 + 2) || *v11 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v20))return 0; {
        }
          }
        else
        {
          unsigned int v20 = *v11;
          *((void *)a2 + 1) = v11 + 1;
        }
        int v12 = *((_DWORD *)a2 + 14);
        int v13 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v12 + 1;
        if (v12 >= v13) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Vision::VLVectorfM::MergePartialFromCodedStream(v10, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v14 = *((_DWORD *)a2 + 14);
        BOOL v15 = __OFSUB__(v14, 1);
        int v16 = v14 - 1;
        if (v16 < 0 == v15) {
          *((_DWORD *)a2 + 14) = v16;
        }
        int v17 = (unsigned char *)*((void *)a2 + 1);
        int v18 = (unsigned char *)*((void *)a2 + 2);
        if (v17 >= v18 || *v17 != 10)
        {
          if (v17 == v18 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)a2 + 36) = 1;
            return result;
          }
          goto LABEL_2;
        }
        *((void *)a2 + 1) = v17 + 1;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if (*(int *)(this + 16) >= 1)
  {
    uint64_t v5 = this;
    uint64_t v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(*(void *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN::ByteSize(CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN *this)
{
  int v2 = *((_DWORD *)this + 4);
  if (v2 < 1)
  {
    uint64_t v4 = *((unsigned int *)this + 4);
  }
  else
  {
    uint64_t v3 = 0;
    LODWORD(v4) = *((_DWORD *)this + 4);
    do
    {
      uint64_t v5 = *(void *)(*((void *)this + 1) + 8 * v3);
      uint64_t v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(5 * *(_DWORD *)(v5 + 16));
      *(_DWORD *)(v5 + 24) = v6;
      if (v6 >= 0x80)
      {
        int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
        int v2 = *((_DWORD *)this + 4);
      }
      else
      {
        int v7 = 1;
      }
      uint64_t v4 = (v6 + v4 + v7);
      ++v3;
    }
    while (v3 < v2);
  }
  *((_DWORD *)this + 8) = v4;
  return v4;
}

void CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN::CopyFrom(CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN *this, const CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN::IsInitialized(CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN *this)
{
  return 1;
}

CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN *CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN::Swap(CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN *this, CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN *a2)
{
  if (a2 != this)
  {
    uint64_t v3 = this;
    this = (CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    int v4 = *((_DWORD *)v3 + 9);
    *((_DWORD *)v3 + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v4;
    int v5 = *((_DWORD *)v3 + 8);
    *((_DWORD *)v3 + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v5;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.Vision.VLMatrixfMxN");
}

void *CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details::SharedCtor(void *this)
{
  this[1] = 0;
  uint64_t v1 = MEMORY[0x1E4FBA920];
  this[10] = 0;
  this[13] = 0;
  this[14] = v1;
  this[21] = 0;
  this[34] = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details *CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details::VLLocalizationMaps488Details(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details *this, const CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details *a2)
{
  *(_OWORD *)((char *)this + 120) = 0u;
  *(void *)this = &unk_1EDD11F00;
  *((_OWORD *)this + 11) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 152) = 0u;
  *((_OWORD *)this + 12) = 0u;
  *((_OWORD *)this + 13) = 0u;
  *((_OWORD *)this + 14) = 0u;
  *((_OWORD *)this + 15) = 0u;
  *((_OWORD *)this + 16) = 0u;
  *((_DWORD *)this + 68) = 0;
  uint64_t v3 = MEMORY[0x1E4FBA920];
  *((void *)this + 13) = 0;
  *((void *)this + 14) = v3;
  *((void *)this + 21) = 0;
  *((_DWORD *)this + 69) = 0;
  CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details::MergeFrom(this, a2);
  return this;
}

void sub_18DF554CC(_Unwind_Exception *a1)
{
  uint64_t v5 = *((void *)v1 + 32);
  if (v5) {
    MEMORY[0x192FA6220](v5, 0x1000C8000313F17);
  }
  uint64_t v6 = *((void *)v1 + 30);
  if (v6) {
    MEMORY[0x192FA6220](v6, 0x1000C8000313F17);
  }
  uint64_t v7 = *((void *)v1 + 28);
  if (v7) {
    MEMORY[0x192FA6220](v7, 0x1000C8052888210);
  }
  uint64_t v8 = *((void *)v1 + 26);
  if (v8) {
    MEMORY[0x192FA6220](v8, 0x1000C8052888210);
  }
  uint64_t v9 = *((void *)v1 + 24);
  if (v9) {
    MEMORY[0x192FA6220](v9, 0x1000C8052888210);
  }
  if (*v3) {
    MEMORY[0x192FA6220](*v3, 0x1000C8052888210);
  }
  uint64_t v10 = *((void *)v1 + 19);
  if (v10) {
    MEMORY[0x192FA6220](v10, 0x1000C8052888210);
  }
  uint64_t v11 = *((void *)v1 + 17);
  if (v11) {
    MEMORY[0x192FA6220](v11, 0x1000C8052888210);
  }
  if (*v2) {
    MEMORY[0x192FA6220](*v2, 0x1000C8052888210);
  }
  uint64_t v12 = *((void *)v1 + 11);
  if (v12) {
    MEMORY[0x192FA6220](v12, 0x1000C8052888210);
  }
  uint64_t v13 = *((void *)v1 + 8);
  if (v13) {
    MEMORY[0x192FA6220](v13, 0x1000C8000313F17);
  }
  uint64_t v14 = *((void *)v1 + 6);
  if (v14) {
    MEMORY[0x192FA6220](v14, 0x1000C8052888210);
  }
  uint64_t v15 = *((void *)v1 + 4);
  if (v15) {
    MEMORY[0x192FA6220](v15, 0x1000C8000313F17);
  }
  uint64_t v16 = *((void *)v1 + 2);
  if (v16) {
    MEMORY[0x192FA6220](v16, 0x1000C8052888210);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details::MergeFrom(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details *this, const CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v25);
  }
  int v4 = *((_DWORD *)a2 + 6);
  if (v4)
  {
    sub_18DF47D54((uint64_t)this + 16, *((_DWORD *)this + 6) + v4);
    memcpy((void *)(*((void *)this + 2) + 4 * *((int *)this + 6)), *((const void **)a2 + 2), 4 * *((int *)a2 + 6));
    *((_DWORD *)this + 6) += *((_DWORD *)a2 + 6);
  }
  int v5 = *((_DWORD *)a2 + 10);
  if (v5)
  {
    sub_18DF0C278((uint64_t)this + 32, *((_DWORD *)this + 10) + v5);
    memcpy((void *)(*((void *)this + 4) + 8 * *((int *)this + 10)), *((const void **)a2 + 4), 8 * *((int *)a2 + 10));
    *((_DWORD *)this + 10) += *((_DWORD *)a2 + 10);
  }
  int v6 = *((_DWORD *)a2 + 14);
  if (v6)
  {
    sub_18DF47D54((uint64_t)this + 48, *((_DWORD *)this + 14) + v6);
    memcpy((void *)(*((void *)this + 6) + 4 * *((int *)this + 14)), *((const void **)a2 + 6), 4 * *((int *)a2 + 14));
    *((_DWORD *)this + 14) += *((_DWORD *)a2 + 14);
  }
  int v7 = *((_DWORD *)a2 + 18);
  if (v7)
  {
    sub_18DF0C278((uint64_t)this + 64, *((_DWORD *)this + 18) + v7);
    memcpy((void *)(*((void *)this + 8) + 8 * *((int *)this + 18)), *((const void **)a2 + 8), 8 * *((int *)a2 + 18));
    *((_DWORD *)this + 18) += *((_DWORD *)a2 + 18);
  }
  int v8 = *((_DWORD *)a2 + 24);
  if (v8)
  {
    sub_18DF47D54((uint64_t)this + 88, *((_DWORD *)this + 24) + v8);
    memcpy((void *)(*((void *)this + 11) + 4 * *((int *)this + 24)), *((const void **)a2 + 11), 4 * *((int *)a2 + 24));
    *((_DWORD *)this + 24) += *((_DWORD *)a2 + 24);
  }
  int v9 = *((_DWORD *)a2 + 32);
  if (v9)
  {
    sub_18DF47D54((uint64_t)this + 120, *((_DWORD *)this + 32) + v9);
    memcpy((void *)(*((void *)this + 15) + 4 * *((int *)this + 32)), *((const void **)a2 + 15), 4 * *((int *)a2 + 32));
    *((_DWORD *)this + 32) += *((_DWORD *)a2 + 32);
  }
  int v10 = *((_DWORD *)a2 + 36);
  if (v10)
  {
    sub_18DF47D54((uint64_t)this + 136, *((_DWORD *)this + 36) + v10);
    memcpy((void *)(*((void *)this + 17) + 4 * *((int *)this + 36)), *((const void **)a2 + 17), 4 * *((int *)a2 + 36));
    *((_DWORD *)this + 36) += *((_DWORD *)a2 + 36);
  }
  int v11 = *((_DWORD *)a2 + 40);
  if (v11)
  {
    sub_18DF47D54((uint64_t)this + 152, *((_DWORD *)this + 40) + v11);
    memcpy((void *)(*((void *)this + 19) + 4 * *((int *)this + 40)), *((const void **)a2 + 19), 4 * *((int *)a2 + 40));
    *((_DWORD *)this + 40) += *((_DWORD *)a2 + 40);
  }
  int v12 = *((_DWORD *)a2 + 46);
  if (v12)
  {
    sub_18DF47D54((uint64_t)this + 176, *((_DWORD *)this + 46) + v12);
    memcpy((void *)(*((void *)this + 22) + 4 * *((int *)this + 46)), *((const void **)a2 + 22), 4 * *((int *)a2 + 46));
    *((_DWORD *)this + 46) += *((_DWORD *)a2 + 46);
  }
  int v13 = *((_DWORD *)a2 + 50);
  if (v13)
  {
    sub_18DF47D54((uint64_t)this + 192, *((_DWORD *)this + 50) + v13);
    memcpy((void *)(*((void *)this + 24) + 4 * *((int *)this + 50)), *((const void **)a2 + 24), 4 * *((int *)a2 + 50));
    *((_DWORD *)this + 50) += *((_DWORD *)a2 + 50);
  }
  int v14 = *((_DWORD *)a2 + 54);
  if (v14)
  {
    sub_18DF47D54((uint64_t)this + 208, *((_DWORD *)this + 54) + v14);
    memcpy((void *)(*((void *)this + 26) + 4 * *((int *)this + 54)), *((const void **)a2 + 26), 4 * *((int *)a2 + 54));
    *((_DWORD *)this + 54) += *((_DWORD *)a2 + 54);
  }
  int v15 = *((_DWORD *)a2 + 58);
  if (v15)
  {
    sub_18DF47D54((uint64_t)this + 224, *((_DWORD *)this + 58) + v15);
    memcpy((void *)(*((void *)this + 28) + 4 * *((int *)this + 58)), *((const void **)a2 + 28), 4 * *((int *)a2 + 58));
    *((_DWORD *)this + 58) += *((_DWORD *)a2 + 58);
  }
  int v16 = *((_DWORD *)a2 + 62);
  if (v16)
  {
    sub_18DF0C278((uint64_t)this + 240, *((_DWORD *)this + 62) + v16);
    memcpy((void *)(*((void *)this + 30) + 8 * *((int *)this + 62)), *((const void **)a2 + 30), 8 * *((int *)a2 + 62));
    *((_DWORD *)this + 62) += *((_DWORD *)a2 + 62);
  }
  int v17 = *((_DWORD *)a2 + 66);
  if (v17)
  {
    sub_18DF0C278((uint64_t)this + 256, *((_DWORD *)this + 66) + v17);
    memcpy((void *)(*((void *)this + 32) + 8 * *((int *)this + 66)), *((const void **)a2 + 32), 8 * *((int *)a2 + 66));
    *((_DWORD *)this + 66) += *((_DWORD *)a2 + 66);
  }
  int v18 = *((_DWORD *)a2 + 69);
  if ((_BYTE)v18)
  {
    if (v18)
    {
      uint64_t v23 = *((void *)a2 + 1);
      *((_DWORD *)this + 69) |= 1u;
      *((void *)this + 1) = v23;
      int v18 = *((_DWORD *)a2 + 69);
      if ((v18 & 0x20) == 0)
      {
LABEL_34:
        if ((v18 & 0x80) == 0) {
          goto LABEL_36;
        }
        goto LABEL_35;
      }
    }
    else if ((v18 & 0x20) == 0)
    {
      goto LABEL_34;
    }
    uint64_t v24 = *((void *)a2 + 10);
    *((_DWORD *)this + 69) |= 0x20u;
    *((void *)this + 10) = v24;
    int v18 = *((_DWORD *)a2 + 69);
    if ((v18 & 0x80) != 0)
    {
LABEL_35:
      uint64_t v19 = *((void *)a2 + 13);
      *((_DWORD *)this + 69) |= 0x80u;
      *((void *)this + 13) = v19;
      int v18 = *((_DWORD *)a2 + 69);
    }
  }
LABEL_36:
  if ((v18 & 0xFF00) != 0)
  {
    if ((v18 & 0x100) != 0)
    {
      unsigned int v20 = (const std::string *)*((void *)a2 + 14);
      *((_DWORD *)this + 69) |= 0x100u;
      int v21 = (std::string *)*((void *)this + 14);
      if (v21 == (std::string *)MEMORY[0x1E4FBA920]) {
        operator new();
      }
      std::string::operator=(v21, v20);
      int v18 = *((_DWORD *)a2 + 69);
    }
    if ((v18 & 0x1000) != 0)
    {
      uint64_t v22 = *((void *)a2 + 21);
      *((_DWORD *)this + 69) |= 0x1000u;
      *((void *)this + 21) = v22;
    }
  }
}

void sub_18DF55B7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details::~VLLocalizationMaps488Details(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details *this)
{
  *(void *)this = &unk_1EDD11F00;
  CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details::SharedDtor(this);
  uint64_t v2 = *((void *)this + 32);
  if (v2) {
    MEMORY[0x192FA6220](v2, 0x1000C8000313F17);
  }
  uint64_t v3 = *((void *)this + 30);
  if (v3) {
    MEMORY[0x192FA6220](v3, 0x1000C8000313F17);
  }
  uint64_t v4 = *((void *)this + 28);
  if (v4) {
    MEMORY[0x192FA6220](v4, 0x1000C8052888210);
  }
  uint64_t v5 = *((void *)this + 26);
  if (v5) {
    MEMORY[0x192FA6220](v5, 0x1000C8052888210);
  }
  uint64_t v6 = *((void *)this + 24);
  if (v6) {
    MEMORY[0x192FA6220](v6, 0x1000C8052888210);
  }
  uint64_t v7 = *((void *)this + 22);
  if (v7) {
    MEMORY[0x192FA6220](v7, 0x1000C8052888210);
  }
  uint64_t v8 = *((void *)this + 19);
  if (v8) {
    MEMORY[0x192FA6220](v8, 0x1000C8052888210);
  }
  uint64_t v9 = *((void *)this + 17);
  if (v9) {
    MEMORY[0x192FA6220](v9, 0x1000C8052888210);
  }
  uint64_t v10 = *((void *)this + 15);
  if (v10) {
    MEMORY[0x192FA6220](v10, 0x1000C8052888210);
  }
  uint64_t v11 = *((void *)this + 11);
  if (v11) {
    MEMORY[0x192FA6220](v11, 0x1000C8052888210);
  }
  uint64_t v12 = *((void *)this + 8);
  if (v12) {
    MEMORY[0x192FA6220](v12, 0x1000C8000313F17);
  }
  uint64_t v13 = *((void *)this + 6);
  if (v13) {
    MEMORY[0x192FA6220](v13, 0x1000C8052888210);
  }
  uint64_t v14 = *((void *)this + 4);
  if (v14) {
    MEMORY[0x192FA6220](v14, 0x1000C8000313F17);
  }
  uint64_t v15 = *((void *)this + 2);
  if (v15) {
    MEMORY[0x192FA6220](v15, 0x1000C8052888210);
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details::~VLLocalizationMaps488Details(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details::SharedDtor(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details *this)
{
  uint64_t v1 = *((void *)this + 14);
  if (v1 != MEMORY[0x1E4FBA920] && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    this = (CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details *)MEMORY[0x192FA6240](v1, 0x1012C40EC159624);
  }

  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details::default_instance(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details *this)
{
  return CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 272) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details::New(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 276);
  if ((_BYTE)v1)
  {
    *(void *)(this + 8) = 0;
    *(void *)(this + 80) = 0;
    *(void *)(this + 104) = 0;
  }
  if ((v1 & 0xFF00) != 0)
  {
    if ((v1 & 0x100) != 0)
    {
      uint64_t v2 = *(void *)(this + 112);
      if (v2 != MEMORY[0x1E4FBA920])
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
    *(void *)(this + 168) = 0;
  }
  *(_DWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 40) = 0;
  *(_DWORD *)(this + 56) = 0;
  *(_DWORD *)(this + 72) = 0;
  *(_DWORD *)(this + 96) = 0;
  *(_DWORD *)(this + 128) = 0;
  *(_DWORD *)(this + 144) = 0;
  *(_DWORD *)(this + 160) = 0;
  *(_DWORD *)(this + 184) = 0;
  *(_DWORD *)(this + 200) = 0;
  *(_DWORD *)(this + 216) = 0;
  *(_DWORD *)(this + 232) = 0;
  *(_DWORD *)(this + 248) = 0;
  *(_DWORD *)(this + 264) = 0;
  *(_DWORD *)(this + 276) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  v187 = (char *)this + 240;
  v188 = (char *)this + 224;
  v189 = (char *)this + 256;
  v190 = (char *)this + 208;
  uint64_t v4 = (char *)this + 192;
  v195 = (char *)this + 176;
  v196 = (char *)this + 120;
  v199 = (char *)this + 152;
  v200 = (char *)this + 88;
  v201 = (char *)this + 136;
  v202 = (char *)this + 64;
  v197 = (char *)this + 32;
  v198 = (char *)this + 48;
  v186 = (unint64_t *)((char *)this + 8);
  v193 = (char *)this + 16;
  v194 = (unint64_t *)((char *)this + 80);
  v191 = (unint64_t *)((char *)this + 168);
  v192 = (unint64_t *)((char *)this + 104);
LABEL_2:
  while (2)
  {
    uint64_t v5 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_67;
        }
        uint64_t v8 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        if ((unint64_t)v8 >= v9 || *v8 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v186);
          if (!result) {
            return result;
          }
          uint64_t v10 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
        }
        else
        {
          unint64_t *v186 = *v8;
          uint64_t v10 = v8 + 1;
          *((void *)a2 + 1) = v10;
        }
        *((_DWORD *)this + 69) |= 1u;
        if ((unint64_t)v10 >= v9 || *v10 != 21) {
          continue;
        }
        goto LABEL_207;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 == 2)
        {
          uint64_t result = sub_18DF49B3C(a2, (uint64_t)v193);
          if (!result) {
            return result;
          }
          goto LABEL_224;
        }
        if (v7 != 5)
        {
LABEL_67:
          if (v7 == 4) {
            return 1;
          }
          if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
          continue;
          }
        }
        while (1)
        {
          v203[0] = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v203) & 1) == 0) {
            return 0;
          }
          unsigned int v73 = v203[0];
          int v74 = *((_DWORD *)this + 6);
          if (v74 == *((_DWORD *)this + 7))
          {
            sub_18DF47D54((uint64_t)v193, v74 + 1);
            int v74 = *((_DWORD *)this + 6);
          }
          uint64_t v75 = *((void *)this + 2);
          int v76 = v74 + 1;
          *((_DWORD *)this + 6) = v74 + 1;
          *(_DWORD *)(v75 + 4 * v74) = v73;
          uint64_t v77 = *((void *)a2 + 1);
          int v78 = *((_DWORD *)a2 + 4) - v77;
          if (v78 >= 1)
          {
            signed int v79 = v78 / 5u;
            int v80 = v79 >= *((_DWORD *)this + 7) - v76 ? *((_DWORD *)this + 7) - v76 : v79;
            if (v80 >= 1)
            {
              int v81 = 0;
              while (*(unsigned char *)v77 == 21)
              {
                int v82 = *(_DWORD *)(v77 + 1);
                if (v76 >= *((_DWORD *)this + 7))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v203);
                  int v76 = *((_DWORD *)this + 6);
                  uint64_t v75 = *((void *)this + 2);
                }
                *((_DWORD *)this + 6) = v76 + 1;
                *(_DWORD *)(v75 + 4 * v76) = v82;
                ++v81;
                v77 += 5;
                ++v76;
                if (v80 == v81)
                {
                  int v81 = v80;
                  break;
                }
              }
              if (v81) {
                wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(a2);
              }
            }
          }
LABEL_224:
          uint64_t v10 = (unsigned char *)*((void *)a2 + 1);
          if ((unint64_t)v10 >= *((void *)a2 + 2)) {
            goto LABEL_2;
          }
          int v83 = *v10;
          if (v83 != 21) {
            break;
          }
LABEL_207:
          *((void *)a2 + 1) = v10 + 1;
        }
        if (v83 != 25) {
          continue;
        }
LABEL_227:
        *((void *)a2 + 1) = v10 + 1;
LABEL_228:
        *(void *)v203 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v203))
        {
          uint64_t v84 = *(void *)v203;
          int v85 = *((_DWORD *)this + 10);
          if (v85 == *((_DWORD *)this + 11))
          {
            sub_18DF0C278((uint64_t)v197, v85 + 1);
            int v85 = *((_DWORD *)this + 10);
          }
          uint64_t v86 = *((void *)this + 4);
          int v87 = v85 + 1;
          *((_DWORD *)this + 10) = v85 + 1;
          *(void *)(v86 + 8 * v85) = v84;
          uint64_t v88 = *((void *)a2 + 1);
          int v89 = *((_DWORD *)a2 + 4) - v88;
          if (v89 >= 1)
          {
            signed int v90 = v89 / 9u;
            int v91 = v90 >= *((_DWORD *)this + 11) - v87 ? *((_DWORD *)this + 11) - v87 : v90;
            if (v91 >= 1)
            {
              int v92 = 0;
              while (*(unsigned char *)v88 == 25)
              {
                uint64_t v93 = *(void *)(v88 + 1);
                if (v87 >= *((_DWORD *)this + 11))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v203);
                  int v87 = *((_DWORD *)this + 10);
                  uint64_t v86 = *((void *)this + 4);
                }
                *((_DWORD *)this + 10) = v87 + 1;
                *(void *)(v86 + 8 * v87) = v93;
                ++v92;
                v88 += 9;
                ++v87;
                if (v91 == v92)
                {
                  int v92 = v91;
                  break;
                }
              }
              if (v92) {
                wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(a2);
              }
            }
          }
LABEL_244:
          uint64_t v10 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
          if ((unint64_t)v10 >= v13) {
            continue;
          }
          int v94 = *v10;
          if (v94 == 25) {
            goto LABEL_227;
          }
          if (v94 == 32)
          {
            for (i = v10 + 1; ; i = (char *)(v25 + 1))
            {
              *((void *)a2 + 1) = i;
LABEL_249:
              v203[0] = 0;
              if ((unint64_t)i >= v13 || *i < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v203);
                if (!result) {
                  return result;
                }
                unsigned int v95 = v203[0];
              }
              else
              {
                unsigned int v95 = *i;
                *((void *)a2 + 1) = i + 1;
              }
              int v96 = *((_DWORD *)this + 14);
              if (v96 == *((_DWORD *)this + 15))
              {
                sub_18DF47D54((uint64_t)v198, v96 + 1);
                int v96 = *((_DWORD *)this + 14);
              }
              uint64_t v97 = *((void *)this + 6);
              *((_DWORD *)this + 14) = v96 + 1;
              *(_DWORD *)(v97 + 4 * v96) = v95;
              int v98 = *((_DWORD *)this + 15) - *((_DWORD *)this + 14);
              if (v98 >= 1)
              {
                int v99 = v98 + 1;
                do
                {
                  v100 = (unsigned char *)*((void *)a2 + 1);
                  unint64_t v101 = *((void *)a2 + 2);
                  if ((unint64_t)v100 >= v101 || *v100 != 32) {
                    break;
                  }
                  *((void *)a2 + 1) = v100 + 1;
                  v203[0] = 0;
                  if ((unint64_t)(v100 + 1) >= v101 || (char)v100[1] < 0)
                  {
                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v203);
                    if (!result) {
                      return result;
                    }
                    unsigned int v102 = v203[0];
                  }
                  else
                  {
                    unsigned int v102 = v100[1];
                    *((void *)a2 + 1) = v100 + 2;
                  }
                  int v103 = *((_DWORD *)this + 14);
                  if (v103 >= *((_DWORD *)this + 15))
                  {
                    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v203);
                    int v103 = *((_DWORD *)this + 14);
                  }
                  uint64_t v104 = *((void *)this + 6);
                  *((_DWORD *)this + 14) = v103 + 1;
                  *(_DWORD *)(v104 + 4 * v103) = v102;
                  --v99;
                }
                while (v99 > 1);
              }
LABEL_268:
              int v25 = (unsigned __int8 *)*((void *)a2 + 1);
              unint64_t v13 = *((void *)a2 + 2);
              if ((unint64_t)v25 >= v13) {
                break;
              }
              int v105 = *v25;
              if (v105 == 41)
              {
                while (1)
                {
                  *((void *)a2 + 1) = v25 + 1;
LABEL_273:
                  *(void *)v203 = 0;
                  if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v203) & 1) == 0)return 0; {
                  uint64_t v106 = *(void *)v203;
                  }
                  int v107 = *((_DWORD *)this + 18);
                  if (v107 == *((_DWORD *)this + 19))
                  {
                    sub_18DF0C278((uint64_t)v202, v107 + 1);
                    int v107 = *((_DWORD *)this + 18);
                  }
                  uint64_t v108 = *((void *)this + 8);
                  int v109 = v107 + 1;
                  *((_DWORD *)this + 18) = v107 + 1;
                  *(void *)(v108 + 8 * v107) = v106;
                  uint64_t v110 = *((void *)a2 + 1);
                  int v111 = *((_DWORD *)a2 + 4) - v110;
                  if (v111 >= 1)
                  {
                    signed int v112 = v111 / 9u;
                    int v113 = v112 >= *((_DWORD *)this + 19) - v109 ? *((_DWORD *)this + 19) - v109 : v112;
                    if (v113 >= 1)
                    {
                      int v114 = 0;
                      while (*(unsigned char *)v110 == 41)
                      {
                        uint64_t v115 = *(void *)(v110 + 1);
                        if (v109 >= *((_DWORD *)this + 19))
                        {
                          wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                          wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                          wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                          wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v203);
                          int v109 = *((_DWORD *)this + 18);
                          uint64_t v108 = *((void *)this + 8);
                        }
                        *((_DWORD *)this + 18) = v109 + 1;
                        *(void *)(v108 + 8 * v109) = v115;
                        ++v114;
                        v110 += 9;
                        ++v109;
                        if (v113 == v114)
                        {
                          int v114 = v113;
                          break;
                        }
                      }
                      if (v114) {
                        wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(a2);
                      }
                    }
                  }
LABEL_95:
                  int v25 = (unsigned __int8 *)*((void *)a2 + 1);
                  unint64_t v14 = *((void *)a2 + 2);
                  if ((unint64_t)v25 >= v14) {
                    goto LABEL_2;
                  }
                  int v26 = *v25;
                  if (v26 != 41)
                  {
                    if (v26 == 48)
                    {
                      uint64_t v15 = (char *)(v25 + 1);
                      *((void *)a2 + 1) = v25 + 1;
LABEL_99:
                      if ((unint64_t)v15 >= v14 || *v15 < 0)
                      {
                        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v194);
                        if (!result) {
                          return result;
                        }
                        unsigned int v27 = (unsigned char *)*((void *)a2 + 1);
                        unint64_t v14 = *((void *)a2 + 2);
                      }
                      else
                      {
                        unint64_t *v194 = *v15;
                        unsigned int v27 = v15 + 1;
                        *((void *)a2 + 1) = v27;
                      }
                      *((_DWORD *)this + 69) |= 0x20u;
                      if ((unint64_t)v27 < v14 && *v27 == 61)
                      {
                        while (1)
                        {
                          *((void *)a2 + 1) = v27 + 1;
LABEL_290:
                          v203[0] = 0;
                          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v203) & 1) == 0)return 0; {
                          unsigned int v116 = v203[0];
                          }
                          int v117 = *((_DWORD *)this + 24);
                          if (v117 == *((_DWORD *)this + 25))
                          {
                            sub_18DF47D54((uint64_t)v200, v117 + 1);
                            int v117 = *((_DWORD *)this + 24);
                          }
                          uint64_t v118 = *((void *)this + 11);
                          int v119 = v117 + 1;
                          *((_DWORD *)this + 24) = v117 + 1;
                          *(_DWORD *)(v118 + 4 * v117) = v116;
                          uint64_t v120 = *((void *)a2 + 1);
                          int v121 = *((_DWORD *)a2 + 4) - v120;
                          if (v121 >= 1)
                          {
                            signed int v122 = v121 / 5u;
                            int v123 = v122 >= *((_DWORD *)this + 25) - v119 ? *((_DWORD *)this + 25) - v119 : v122;
                            if (v123 >= 1)
                            {
                              int v124 = 0;
                              while (*(unsigned char *)v120 == 61)
                              {
                                int v125 = *(_DWORD *)(v120 + 1);
                                if (v119 >= *((_DWORD *)this + 25))
                                {
                                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v203);
                                  int v119 = *((_DWORD *)this + 24);
                                  uint64_t v118 = *((void *)this + 11);
                                }
                                *((_DWORD *)this + 24) = v119 + 1;
                                *(_DWORD *)(v118 + 4 * v119) = v125;
                                ++v124;
                                v120 += 5;
                                ++v119;
                                if (v123 == v124)
                                {
                                  int v124 = v123;
                                  break;
                                }
                              }
                              if (v124) {
                                wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(a2);
                              }
                            }
                          }
LABEL_306:
                          unsigned int v27 = (unsigned char *)*((void *)a2 + 1);
                          unint64_t v16 = *((void *)a2 + 2);
                          if ((unint64_t)v27 >= v16) {
                            break;
                          }
                          int v126 = *v27;
                          if (v126 != 61)
                          {
                            if (v126 == 64)
                            {
                              int v17 = v27 + 1;
                              *((void *)a2 + 1) = v17;
LABEL_310:
                              if ((unint64_t)v17 >= v16 || *v17 < 0)
                              {
                                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v192);
                                if (!result) {
                                  return result;
                                }
                                v127 = (unsigned char *)*((void *)a2 + 1);
                                unint64_t v16 = *((void *)a2 + 2);
                              }
                              else
                              {
                                unint64_t *v192 = *v17;
                                v127 = v17 + 1;
                                *((void *)a2 + 1) = v127;
                              }
                              int v18 = *((_DWORD *)this + 69) | 0x80;
                              *((_DWORD *)this + 69) = v18;
                              if ((unint64_t)v127 < v16 && *v127 == 74)
                              {
                                *((void *)a2 + 1) = v127 + 1;
LABEL_318:
                                *((_DWORD *)this + 69) = v18 | 0x100;
                                if (*((void *)this + 14) == MEMORY[0x1E4FBA920]) {
                                  operator new();
                                }
                                uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes();
                                if (!result) {
                                  return result;
                                }
                                v128 = (unsigned char *)*((void *)a2 + 1);
                                unint64_t v19 = *((void *)a2 + 2);
                                if ((unint64_t)v128 < v19 && *v128 == 80)
                                {
                                  for (j = v128 + 1; ; j = (char *)(v139 + 1))
                                  {
                                    *((void *)a2 + 1) = j;
LABEL_325:
                                    v203[0] = 0;
                                    if ((unint64_t)j >= v19 || *j < 0)
                                    {
                                      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v203);
                                      if (!result) {
                                        return result;
                                      }
                                      unsigned int v129 = v203[0];
                                    }
                                    else
                                    {
                                      unsigned int v129 = *j;
                                      *((void *)a2 + 1) = j + 1;
                                    }
                                    int v130 = *((_DWORD *)this + 32);
                                    if (v130 == *((_DWORD *)this + 33))
                                    {
                                      sub_18DF47D54((uint64_t)v196, v130 + 1);
                                      int v130 = *((_DWORD *)this + 32);
                                    }
                                    uint64_t v131 = *((void *)this + 15);
                                    *((_DWORD *)this + 32) = v130 + 1;
                                    *(_DWORD *)(v131 + 4 * v130) = v129;
                                    int v132 = *((_DWORD *)this + 33) - *((_DWORD *)this + 32);
                                    if (v132 >= 1)
                                    {
                                      int v133 = v132 + 1;
                                      do
                                      {
                                        v134 = (unsigned char *)*((void *)a2 + 1);
                                        unint64_t v135 = *((void *)a2 + 2);
                                        if ((unint64_t)v134 >= v135 || *v134 != 80) {
                                          break;
                                        }
                                        *((void *)a2 + 1) = v134 + 1;
                                        v203[0] = 0;
                                        if ((unint64_t)(v134 + 1) >= v135 || (char)v134[1] < 0)
                                        {
                                          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v203);
                                          if (!result) {
                                            return result;
                                          }
                                          unsigned int v136 = v203[0];
                                        }
                                        else
                                        {
                                          unsigned int v136 = v134[1];
                                          *((void *)a2 + 1) = v134 + 2;
                                        }
                                        int v137 = *((_DWORD *)this + 32);
                                        if (v137 >= *((_DWORD *)this + 33))
                                        {
                                          wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                                          wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                                          wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                                          wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v203);
                                          int v137 = *((_DWORD *)this + 32);
                                        }
                                        uint64_t v138 = *((void *)this + 15);
                                        *((_DWORD *)this + 32) = v137 + 1;
                                        *(_DWORD *)(v138 + 4 * v137) = v136;
                                        --v133;
                                      }
                                      while (v133 > 1);
                                    }
LABEL_344:
                                    v139 = (unsigned __int8 *)*((void *)a2 + 1);
                                    unint64_t v19 = *((void *)a2 + 2);
                                    if ((unint64_t)v139 >= v19) {
                                      break;
                                    }
                                    int v140 = *v139;
                                    if (v140 == 93)
                                    {
                                      while (1)
                                      {
                                        *((void *)a2 + 1) = v139 + 1;
LABEL_349:
                                        v203[0] = 0;
                                        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v203) & 1) == 0)return 0; {
                                        unsigned int v141 = v203[0];
                                        }
                                        int v142 = *((_DWORD *)this + 36);
                                        if (v142 == *((_DWORD *)this + 37))
                                        {
                                          sub_18DF47D54((uint64_t)v201, v142 + 1);
                                          int v142 = *((_DWORD *)this + 36);
                                        }
                                        uint64_t v143 = *((void *)this + 17);
                                        int v144 = v142 + 1;
                                        *((_DWORD *)this + 36) = v142 + 1;
                                        *(_DWORD *)(v143 + 4 * v142) = v141;
                                        uint64_t v145 = *((void *)a2 + 1);
                                        int v146 = *((_DWORD *)a2 + 4) - v145;
                                        if (v146 >= 1)
                                        {
                                          signed int v147 = v146 / 5u;
                                          int v148 = v147 >= *((_DWORD *)this + 37) - v144
                                               ? *((_DWORD *)this + 37) - v144
                                               : v147;
                                          if (v148 >= 1)
                                          {
                                            int v149 = 0;
                                            while (*(unsigned char *)v145 == 93)
                                            {
                                              int v150 = *(_DWORD *)(v145 + 1);
                                              if (v144 >= *((_DWORD *)this + 37))
                                              {
                                                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                                                wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                                                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                                                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v203);
                                                int v144 = *((_DWORD *)this + 36);
                                                uint64_t v143 = *((void *)this + 17);
                                              }
                                              *((_DWORD *)this + 36) = v144 + 1;
                                              *(_DWORD *)(v143 + 4 * v144) = v150;
                                              ++v149;
                                              v145 += 5;
                                              ++v144;
                                              if (v148 == v149)
                                              {
                                                int v149 = v148;
                                                break;
                                              }
                                            }
                                            if (v149) {
                                              wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(a2);
                                            }
                                          }
                                        }
LABEL_365:
                                        v139 = (unsigned __int8 *)*((void *)a2 + 1);
                                        unint64_t v22 = *((void *)a2 + 2);
                                        if ((unint64_t)v139 >= v22) {
                                          goto LABEL_2;
                                        }
                                        int v151 = *v139;
                                        if (v151 != 93)
                                        {
                                          if (v151 == 96)
                                          {
                                            for (k = (char *)(v139 + 1); ; k = (char *)(v162 + 1))
                                            {
                                              *((void *)a2 + 1) = k;
LABEL_370:
                                              v203[0] = 0;
                                              if ((unint64_t)k >= v22 || *k < 0)
                                              {
                                                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v203);
                                                if (!result) {
                                                  return result;
                                                }
                                                unsigned int v152 = v203[0];
                                              }
                                              else
                                              {
                                                unsigned int v152 = *k;
                                                *((void *)a2 + 1) = k + 1;
                                              }
                                              int v153 = *((_DWORD *)this + 40);
                                              if (v153 == *((_DWORD *)this + 41))
                                              {
                                                sub_18DF47D54((uint64_t)v199, v153 + 1);
                                                int v153 = *((_DWORD *)this + 40);
                                              }
                                              uint64_t v154 = *((void *)this + 19);
                                              *((_DWORD *)this + 40) = v153 + 1;
                                              *(_DWORD *)(v154 + 4 * v153) = v152;
                                              int v155 = *((_DWORD *)this + 41) - *((_DWORD *)this + 40);
                                              if (v155 >= 1)
                                              {
                                                int v156 = v155 + 1;
                                                do
                                                {
                                                  v157 = (unsigned char *)*((void *)a2 + 1);
                                                  unint64_t v158 = *((void *)a2 + 2);
                                                  if ((unint64_t)v157 >= v158 || *v157 != 96) {
                                                    break;
                                                  }
                                                  *((void *)a2 + 1) = v157 + 1;
                                                  v203[0] = 0;
                                                  if ((unint64_t)(v157 + 1) >= v158 || (char)v157[1] < 0)
                                                  {
                                                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v203);
                                                    if (!result) {
                                                      return result;
                                                    }
                                                    unsigned int v159 = v203[0];
                                                  }
                                                  else
                                                  {
                                                    unsigned int v159 = v157[1];
                                                    *((void *)a2 + 1) = v157 + 2;
                                                  }
                                                  int v160 = *((_DWORD *)this + 40);
                                                  if (v160 >= *((_DWORD *)this + 41))
                                                  {
                                                    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                                                    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                                                    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                                                    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v203);
                                                    int v160 = *((_DWORD *)this + 40);
                                                  }
                                                  uint64_t v161 = *((void *)this + 19);
                                                  *((_DWORD *)this + 40) = v160 + 1;
                                                  *(_DWORD *)(v161 + 4 * v160) = v159;
                                                  --v156;
                                                }
                                                while (v156 > 1);
                                              }
LABEL_389:
                                              v162 = (unsigned __int8 *)*((void *)a2 + 1);
                                              unint64_t v22 = *((void *)a2 + 2);
                                              if ((unint64_t)v162 >= v22) {
                                                break;
                                              }
                                              int v163 = *v162;
                                              if (v163 == 104)
                                              {
                                                uint64_t v23 = v162 + 1;
                                                *((void *)a2 + 1) = v23;
LABEL_394:
                                                if ((unint64_t)v23 >= v22 || (char)*v23 < 0)
                                                {
                                                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v191);
                                                  if (!result) {
                                                    return result;
                                                  }
                                                  int v38 = (unsigned __int8 *)*((void *)a2 + 1);
                                                  unint64_t v22 = *((void *)a2 + 2);
                                                }
                                                else
                                                {
                                                  unint64_t *v191 = *v23;
                                                  int v38 = v23 + 1;
                                                  *((void *)a2 + 1) = v38;
                                                }
                                                *((_DWORD *)this + 69) |= 0x1000u;
                                                if ((unint64_t)v38 < v22)
                                                {
                                                  int v39 = *v38;
                                                  while (v39 == 112)
                                                  {
                                                    uint64_t v24 = (char *)(v38 + 1);
                                                    *((void *)a2 + 1) = v24;
LABEL_107:
                                                    v203[0] = 0;
                                                    if ((unint64_t)v24 >= v22 || *v24 < 0)
                                                    {
                                                      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v203);
                                                      if (!result) {
                                                        return result;
                                                      }
                                                      unsigned int v28 = v203[0];
                                                    }
                                                    else
                                                    {
                                                      unsigned int v28 = *v24;
                                                      *((void *)a2 + 1) = v24 + 1;
                                                    }
                                                    int v29 = *((_DWORD *)this + 46);
                                                    if (v29 == *((_DWORD *)this + 47))
                                                    {
                                                      sub_18DF47D54((uint64_t)v195, v29 + 1);
                                                      int v29 = *((_DWORD *)this + 46);
                                                    }
                                                    uint64_t v30 = *((void *)this + 22);
                                                    *((_DWORD *)this + 46) = v29 + 1;
                                                    *(_DWORD *)(v30 + 4 * v29) = v28;
                                                    int v31 = *((_DWORD *)this + 47) - *((_DWORD *)this + 46);
                                                    if (v31 >= 1)
                                                    {
                                                      int v32 = v31 + 1;
                                                      do
                                                      {
                                                        int v33 = (unsigned char *)*((void *)a2 + 1);
                                                        unint64_t v34 = *((void *)a2 + 2);
                                                        if ((unint64_t)v33 >= v34 || *v33 != 112) {
                                                          break;
                                                        }
                                                        *((void *)a2 + 1) = v33 + 1;
                                                        v203[0] = 0;
                                                        if ((unint64_t)(v33 + 1) >= v34 || (char)v33[1] < 0)
                                                        {
                                                          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v203);
                                                          if (!result) {
                                                            return result;
                                                          }
                                                          unsigned int v35 = v203[0];
                                                        }
                                                        else
                                                        {
                                                          unsigned int v35 = v33[1];
                                                          *((void *)a2 + 1) = v33 + 2;
                                                        }
                                                        int v36 = *((_DWORD *)this + 46);
                                                        if (v36 >= *((_DWORD *)this + 47))
                                                        {
                                                          wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                                                          wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                                                          wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                                                          wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v203);
                                                          int v36 = *((_DWORD *)this + 46);
                                                        }
                                                        uint64_t v37 = *((void *)this + 22);
                                                        *((_DWORD *)this + 46) = v36 + 1;
                                                        *(_DWORD *)(v37 + 4 * v36) = v35;
                                                        --v32;
                                                      }
                                                      while (v32 > 1);
                                                    }
LABEL_126:
                                                    int v38 = (unsigned __int8 *)*((void *)a2 + 1);
                                                    unint64_t v22 = *((void *)a2 + 2);
                                                    if ((unint64_t)v38 >= v22) {
                                                      break;
                                                    }
                                                    int v39 = *v38;
                                                    if (v39 == 125)
                                                    {
                                                      do
                                                      {
                                                        *((void *)a2 + 1) = v38 + 1;
LABEL_404:
                                                        v203[0] = 0;
                                                        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v203) & 1) == 0)return 0; {
                                                        unsigned int v164 = v203[0];
                                                        }
                                                        int v165 = *((_DWORD *)this + 50);
                                                        if (v165 == *((_DWORD *)this + 51))
                                                        {
                                                          sub_18DF47D54((uint64_t)v4, v165 + 1);
                                                          int v165 = *((_DWORD *)this + 50);
                                                        }
                                                        uint64_t v166 = *((void *)this + 24);
                                                        int v167 = v165 + 1;
                                                        *((_DWORD *)this + 50) = v165 + 1;
                                                        *(_DWORD *)(v166 + 4 * v165) = v164;
                                                        uint64_t v168 = *((void *)a2 + 1);
                                                        int v169 = *((_DWORD *)a2 + 4) - v168;
                                                        if (v169 >= 1)
                                                        {
                                                          signed int v170 = v169 / 5u;
                                                          int v171 = v170 >= *((_DWORD *)this + 51) - v167
                                                               ? *((_DWORD *)this + 51) - v167
                                                               : v170;
                                                          if (v171 >= 1)
                                                          {
                                                            int v172 = 0;
                                                            while (*(unsigned char *)v168 == 125)
                                                            {
                                                              int v173 = *(_DWORD *)(v168 + 1);
                                                              if (v167 >= *((_DWORD *)this + 51))
                                                              {
                                                                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                                                                wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                                                                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                                                                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v203);
                                                                int v167 = *((_DWORD *)this + 50);
                                                                uint64_t v166 = *((void *)this + 24);
                                                              }
                                                              *((_DWORD *)this + 50) = v167 + 1;
                                                              *(_DWORD *)(v166 + 4 * v167) = v173;
                                                              ++v172;
                                                              v168 += 5;
                                                              ++v167;
                                                              if (v171 == v172)
                                                              {
                                                                int v172 = v171;
                                                                break;
                                                              }
                                                            }
                                                            if (v172) {
                                                              wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(a2);
                                                            }
                                                          }
                                                        }
LABEL_420:
                                                        int v38 = (unsigned __int8 *)*((void *)a2 + 1);
                                                        unint64_t v174 = *((void *)a2 + 2);
                                                      }
                                                      while ((unint64_t)v38 < v174 && *v38 == 125);
                                                      if ((int)v174 - (int)v38 >= 2)
                                                      {
                                                        int v175 = *v38;
                                                        while (v175 == 133 && v38[1] == 1)
                                                        {
                                                          *((void *)a2 + 1) = v38 + 2;
LABEL_426:
                                                          if (wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)0x85) != 2)
                                                          {
                                                            wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                                                            wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                                                            wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                                                            wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v203);
                                                          }
                                                          v203[0] = 0;
                                                          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v203) & 1) == 0)return 0; {
                                                          unsigned int v176 = v203[0];
                                                          }
                                                          int v177 = *((_DWORD *)this + 54);
                                                          if (v177 == *((_DWORD *)this + 55))
                                                          {
                                                            sub_18DF47D54((uint64_t)v190, v177 + 1);
                                                            int v177 = *((_DWORD *)this + 54);
                                                          }
                                                          uint64_t v178 = *((void *)this + 26);
                                                          int v179 = v177 + 1;
                                                          *((_DWORD *)this + 54) = v177 + 1;
                                                          *(_DWORD *)(v178 + 4 * v177) = v176;
                                                          v180 = (unsigned __int8 *)*((void *)a2 + 1);
                                                          int v181 = *((_DWORD *)a2 + 4) - v180;
                                                          if (v181 >= 1)
                                                          {
                                                            signed int v182 = v181 / 6u;
                                                            int v183 = v182 >= *((_DWORD *)this + 55) - v179
                                                                 ? *((_DWORD *)this + 55) - v179
                                                                 : v182;
                                                            if (v183 >= 1)
                                                            {
                                                              int v184 = 0;
                                                              while (*v180 == 133 && v180[1] == 1)
                                                              {
                                                                int v185 = *(_DWORD *)(v180 + 2);
                                                                if (v179 >= *((_DWORD *)this + 55))
                                                                {
                                                                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                                                                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                                                                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                                                                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v203);
                                                                  int v179 = *((_DWORD *)this + 54);
                                                                  uint64_t v178 = *((void *)this + 26);
                                                                }
                                                                *((_DWORD *)this + 54) = v179 + 1;
                                                                *(_DWORD *)(v178 + 4 * v179) = v185;
                                                                ++v184;
                                                                v180 += 6;
                                                                ++v179;
                                                                if (v183 == v184)
                                                                {
                                                                  int v184 = v183;
                                                                  break;
                                                                }
                                                              }
                                                              if (v184) {
                                                                wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(a2);
                                                              }
                                                            }
                                                          }
LABEL_445:
                                                          int v38 = (unsigned __int8 *)*((void *)a2 + 1);
                                                          if (*((_DWORD *)a2 + 4) - (int)v38 <= 1) {
                                                            break;
                                                          }
                                                          int v175 = *v38;
                                                          if (v175 == 141)
                                                          {
                                                            while (v38[1] == 1)
                                                            {
                                                              *((void *)a2 + 1) = v38 + 2;
LABEL_129:
                                                              if (wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)0x8D) != 2)
                                                              {
                                                                wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                                                                wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                                                                wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                                                                wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v203);
                                                              }
                                                              v203[0] = 0;
                                                              if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v203) & 1) == 0)return 0; {
                                                              unsigned int v40 = v203[0];
                                                              }
                                                              int v41 = *((_DWORD *)this + 58);
                                                              if (v41 == *((_DWORD *)this + 59))
                                                              {
                                                                sub_18DF47D54((uint64_t)v188, v41 + 1);
                                                                int v41 = *((_DWORD *)this + 58);
                                                              }
                                                              uint64_t v42 = *((void *)this + 28);
                                                              int v43 = v41 + 1;
                                                              *((_DWORD *)this + 58) = v41 + 1;
                                                              *(_DWORD *)(v42 + 4 * v41) = v40;
                                                              int v44 = (unsigned __int8 *)*((void *)a2 + 1);
                                                              int v45 = *((_DWORD *)a2 + 4) - v44;
                                                              if (v45 >= 1)
                                                              {
                                                                signed int v46 = v45 / 6u;
                                                                int v47 = v46 >= *((_DWORD *)this + 59) - v43
                                                                    ? *((_DWORD *)this + 59) - v43
                                                                    : v46;
                                                                if (v47 >= 1)
                                                                {
                                                                  int v48 = 0;
                                                                  while (*v44 == 141 && v44[1] == 1)
                                                                  {
                                                                    int v49 = *(_DWORD *)(v44 + 2);
                                                                    if (v43 >= *((_DWORD *)this + 59))
                                                                    {
                                                                      wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                                                                      wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                                                                      wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                                                                      wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v203);
                                                                      int v43 = *((_DWORD *)this + 58);
                                                                      uint64_t v42 = *((void *)this + 28);
                                                                    }
                                                                    *((_DWORD *)this + 58) = v43 + 1;
                                                                    *(_DWORD *)(v42 + 4 * v43) = v49;
                                                                    ++v48;
                                                                    v44 += 6;
                                                                    ++v43;
                                                                    if (v47 == v48)
                                                                    {
                                                                      int v48 = v47;
                                                                      break;
                                                                    }
                                                                  }
                                                                  if (v48) {
                                                                    wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(a2);
                                                                  }
                                                                }
                                                              }
LABEL_148:
                                                              int v38 = (unsigned __int8 *)*((void *)a2 + 1);
                                                              if (*((_DWORD *)a2 + 4) - (int)v38 <= 1) {
                                                                break;
                                                              }
                                                              int v50 = *v38;
                                                              if (v50 == 145)
                                                              {
                                                                while (1)
                                                                {
                                                                  if (v38[1] != 1) {
                                                                    goto LABEL_2;
                                                                  }
                                                                  *((void *)a2 + 1) = v38 + 2;
LABEL_157:
                                                                  if (wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)0x91) != 2)
                                                                  {
                                                                    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                                                                    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                                                                    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                                                                    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v203);
                                                                  }
                                                                  *(void *)v203 = 0;
                                                                  if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v203) & 1) == 0)return 0; {
                                                                  uint64_t v52 = *(void *)v203;
                                                                  }
                                                                  int v53 = *((_DWORD *)this + 62);
                                                                  if (v53 == *((_DWORD *)this + 63))
                                                                  {
                                                                    sub_18DF0C278((uint64_t)v187, v53 + 1);
                                                                    int v53 = *((_DWORD *)this + 62);
                                                                  }
                                                                  uint64_t v54 = *((void *)this + 30);
                                                                  int v55 = v53 + 1;
                                                                  *((_DWORD *)this + 62) = v53 + 1;
                                                                  *(void *)(v54 + 8 * v53) = v52;
                                                                  v56 = (unsigned __int8 *)*((void *)a2 + 1);
                                                                  int v57 = *((_DWORD *)a2 + 4) - v56;
                                                                  if (v57 >= 1)
                                                                  {
                                                                    signed int v58 = v57 / 0xAu;
                                                                    int v59 = v58 >= *((_DWORD *)this + 63) - v55
                                                                        ? *((_DWORD *)this + 63) - v55
                                                                        : v58;
                                                                    if (v59 >= 1)
                                                                    {
                                                                      int v60 = 0;
                                                                      while (*v56 == 145 && v56[1] == 1)
                                                                      {
                                                                        uint64_t v61 = *(void *)(v56 + 2);
                                                                        if (v55 >= *((_DWORD *)this + 63))
                                                                        {
                                                                          wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                                                                          wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                                                                          wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                                                                          wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v203);
                                                                          int v55 = *((_DWORD *)this + 62);
                                                                          uint64_t v54 = *((void *)this + 30);
                                                                        }
                                                                        *((_DWORD *)this + 62) = v55 + 1;
                                                                        *(void *)(v54 + 8 * v55) = v61;
                                                                        ++v60;
                                                                        v56 += 10;
                                                                        ++v55;
                                                                        if (v59 == v60)
                                                                        {
                                                                          int v60 = v59;
                                                                          break;
                                                                        }
                                                                      }
                                                                      if (v60) {
                                                                        wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(a2);
                                                                      }
                                                                    }
                                                                  }
LABEL_152:
                                                                  int v38 = (unsigned __int8 *)*((void *)a2 + 1);
                                                                  if (*((_DWORD *)a2 + 4) - (int)v38 <= 1) {
                                                                    goto LABEL_2;
                                                                  }
                                                                  int v51 = *v38;
                                                                  if (v51 == 153) {
                                                                    break;
                                                                  }
                                                                  if (v51 != 145) {
                                                                    goto LABEL_2;
                                                                  }
                                                                }
                                                                if (v38[1] == 1)
                                                                {
                                                                  do
                                                                  {
                                                                    *((void *)a2 + 1) = v38 + 2;
LABEL_182:
                                                                    if (wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)0x99) != 2)
                                                                    {
                                                                      wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                                                                      wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                                                                      wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                                                                      wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v203);
                                                                    }
                                                                    *(void *)v203 = 0;
                                                                    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v203) & 1) == 0)return 0; {
                                                                    uint64_t v63 = *(void *)v203;
                                                                    }
                                                                    int v64 = *((_DWORD *)this + 66);
                                                                    if (v64 == *((_DWORD *)this + 67))
                                                                    {
                                                                      sub_18DF0C278((uint64_t)v189, v64 + 1);
                                                                      int v64 = *((_DWORD *)this + 66);
                                                                    }
                                                                    uint64_t v65 = *((void *)this + 32);
                                                                    int v66 = v64 + 1;
                                                                    *((_DWORD *)this + 66) = v64 + 1;
                                                                    *(void *)(v65 + 8 * v64) = v63;
                                                                    v67 = (unsigned __int8 *)*((void *)a2 + 1);
                                                                    int v68 = *((_DWORD *)a2 + 4) - v67;
                                                                    if (v68 >= 1)
                                                                    {
                                                                      signed int v69 = v68 / 0xAu;
                                                                      int v70 = v69 >= *((_DWORD *)this + 67) - v66
                                                                          ? *((_DWORD *)this + 67) - v66
                                                                          : v69;
                                                                      if (v70 >= 1)
                                                                      {
                                                                        int v71 = 0;
                                                                        while (*v67 == 153 && v67[1] == 1)
                                                                        {
                                                                          uint64_t v72 = *(void *)(v67 + 2);
                                                                          if (v66 >= *((_DWORD *)this + 67))
                                                                          {
                                                                            wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                                                                            wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                                                                            wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                                                                            wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v203);
                                                                            int v66 = *((_DWORD *)this + 66);
                                                                            uint64_t v65 = *((void *)this + 32);
                                                                          }
                                                                          *((_DWORD *)this + 66) = v66 + 1;
                                                                          *(void *)(v65 + 8 * v66) = v72;
                                                                          ++v71;
                                                                          v67 += 10;
                                                                          ++v66;
                                                                          if (v70 == v71)
                                                                          {
                                                                            int v71 = v70;
                                                                            break;
                                                                          }
                                                                        }
                                                                        if (v71) {
                                                                          wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(a2);
                                                                        }
                                                                      }
                                                                    }
LABEL_178:
                                                                    int v38 = (unsigned __int8 *)*((void *)a2 + 1);
                                                                    int v62 = (unsigned __int8 *)*((void *)a2 + 2);
                                                                  }
                                                                  while ((int)v62 - (int)v38 > 1
                                                                       && *v38 == 153
                                                                       && v38[1] == 1);
                                                                  if (v38 == v62
                                                                    && (*((_DWORD *)a2 + 11)
                                                                     || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                                                                  {
                                                                    *((_DWORD *)a2 + 8) = 0;
                                                                    uint64_t result = 1;
                                                                    *((unsigned char *)a2 + 36) = 1;
                                                                    return result;
                                                                  }
                                                                }
                                                                goto LABEL_2;
                                                              }
                                                              if (v50 != 141) {
                                                                goto LABEL_2;
                                                              }
                                                            }
                                                            goto LABEL_2;
                                                          }
                                                        }
                                                      }
                                                      goto LABEL_2;
                                                    }
                                                  }
                                                }
                                                goto LABEL_2;
                                              }
                                              if (v163 != 96) {
                                                goto LABEL_2;
                                              }
                                            }
                                          }
                                          goto LABEL_2;
                                        }
                                      }
                                    }
                                    if (v140 != 80) {
                                      goto LABEL_2;
                                    }
                                  }
                                }
                              }
                            }
                            goto LABEL_2;
                          }
                        }
                      }
                    }
                    goto LABEL_2;
                  }
                }
              }
              if (v105 != 32) {
                goto LABEL_2;
              }
            }
          }
          continue;
        }
        return 0;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_228;
        }
        if (v7 != 2) {
          goto LABEL_67;
        }
        uint64_t result = sub_18DF39FAC(a2, (uint64_t)v197);
        if (!result) {
          return result;
        }
        goto LABEL_244;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 2)
        {
          uint64_t result = sub_18DF57A18(a2, (uint64_t)v198);
          if (!result) {
            return result;
          }
          goto LABEL_268;
        }
        if ((TagFallback & 7) != 0) {
          goto LABEL_67;
        }
        i = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_249;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_273;
        }
        if (v7 != 2) {
          goto LABEL_67;
        }
        uint64_t result = sub_18DF39FAC(a2, (uint64_t)v202);
        if (!result) {
          return result;
        }
        goto LABEL_95;
      case 6u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_67;
        }
        uint64_t v15 = (char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        goto LABEL_99;
      case 7u:
        int v7 = TagFallback & 7;
        if (v7 == 2)
        {
          uint64_t result = sub_18DF49B3C(a2, (uint64_t)v200);
          if (!result) {
            return result;
          }
          goto LABEL_306;
        }
        if (v7 == 5) {
          goto LABEL_290;
        }
        goto LABEL_67;
      case 8u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_67;
        }
        int v17 = (char *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
        goto LABEL_310;
      case 9u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_67;
        }
        int v18 = *((_DWORD *)this + 69);
        goto LABEL_318;
      case 0xAu:
        int v7 = TagFallback & 7;
        if (v7 == 2)
        {
          uint64_t result = sub_18DF57A18(a2, (uint64_t)v196);
          if (!result) {
            return result;
          }
          goto LABEL_344;
        }
        if ((TagFallback & 7) != 0) {
          goto LABEL_67;
        }
        j = (char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        goto LABEL_325;
      case 0xBu:
        int v7 = TagFallback & 7;
        if (v7 == 2)
        {
          uint64_t result = sub_18DF49B3C(a2, (uint64_t)v201);
          if (!result) {
            return result;
          }
          goto LABEL_365;
        }
        if (v7 == 5) {
          goto LABEL_349;
        }
        goto LABEL_67;
      case 0xCu:
        int v7 = TagFallback & 7;
        if (v7 == 2)
        {
          uint64_t result = sub_18DF57A18(a2, (uint64_t)v199);
          if (!result) {
            return result;
          }
          goto LABEL_389;
        }
        if ((TagFallback & 7) != 0) {
          goto LABEL_67;
        }
        k = (char *)*((void *)a2 + 1);
        unint64_t v22 = *((void *)a2 + 2);
        goto LABEL_370;
      case 0xDu:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_67;
        }
        uint64_t v23 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v22 = *((void *)a2 + 2);
        goto LABEL_394;
      case 0xEu:
        int v7 = TagFallback & 7;
        if (v7 == 2)
        {
          uint64_t result = sub_18DF57A18(a2, (uint64_t)v195);
          if (!result) {
            return result;
          }
          goto LABEL_126;
        }
        if ((TagFallback & 7) != 0) {
          goto LABEL_67;
        }
        uint64_t v24 = (char *)*((void *)a2 + 1);
        unint64_t v22 = *((void *)a2 + 2);
        goto LABEL_107;
      case 0xFu:
        int v7 = TagFallback & 7;
        if (v7 == 2)
        {
          uint64_t result = sub_18DF49B3C(a2, (uint64_t)v4);
          if (!result) {
            return result;
          }
          goto LABEL_420;
        }
        if (v7 == 5) {
          goto LABEL_404;
        }
        goto LABEL_67;
      case 0x10u:
        int v7 = TagFallback & 7;
        if (v7 == 2)
        {
          uint64_t result = sub_18DF49B3C(a2, (uint64_t)v190);
          if (!result) {
            return result;
          }
          goto LABEL_445;
        }
        if (v7 == 5) {
          goto LABEL_426;
        }
        goto LABEL_67;
      case 0x11u:
        int v7 = TagFallback & 7;
        if (v7 == 2)
        {
          uint64_t result = sub_18DF49B3C(a2, (uint64_t)v188);
          if (!result) {
            return result;
          }
          goto LABEL_148;
        }
        if (v7 == 5) {
          goto LABEL_129;
        }
        goto LABEL_67;
      case 0x12u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_157;
        }
        if (v7 != 2) {
          goto LABEL_67;
        }
        uint64_t result = sub_18DF39FAC(a2, (uint64_t)v187);
        if (!result) {
          return result;
        }
        goto LABEL_152;
      case 0x13u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_182;
        }
        if (v7 != 2) {
          goto LABEL_67;
        }
        uint64_t result = sub_18DF39FAC(a2, (uint64_t)v189);
        if (!result) {
          return result;
        }
        goto LABEL_178;
      default:
        int v7 = TagFallback & 7;
        goto LABEL_67;
    }
  }
}

void sub_18DF5792C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28)
{
}

uint64_t sub_18DF57A18(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t a2)
{
  unsigned int v10 = 0;
  uint64_t v4 = (char *)*((void *)this + 1);
  if ((unint64_t)v4 >= *((void *)this + 2) || *v4 < 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v10);
    if (!result) {
      return result;
    }
  }
  else
  {
    unsigned int v10 = *v4;
    *((void *)this + 1) = v4 + 1;
  }
  wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
  if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) >= 1)
  {
    do
    {
      unsigned int v11 = 0;
      uint64_t v6 = (char *)*((void *)this + 1);
      if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v11);
        if (!result) {
          return result;
        }
        unsigned int v7 = v11;
      }
      else
      {
        unsigned int v7 = *v6;
        *((void *)this + 1) = v6 + 1;
      }
      int v8 = *(_DWORD *)(a2 + 8);
      if (v8 == *(_DWORD *)(a2 + 12))
      {
        sub_18DF47D54(a2, v8 + 1);
        int v8 = *(_DWORD *)(a2 + 8);
      }
      uint64_t v9 = *(void *)a2;
      *(_DWORD *)(a2 + 8) = v8 + 1;
      *(_DWORD *)(v9 + 4 * v8) = v7;
    }
    while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) > 0);
  }
  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(unsigned char *)(this + 276)) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
  }
  if (*(int *)(v5 + 24) >= 1)
  {
    uint64_t v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(float *)(*(void *)(v5 + 16) + 4 * v6++), a3);
    while (v6 < *(int *)(v5 + 24));
  }
  if (*(int *)(v5 + 40) >= 1)
  {
    uint64_t v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(*(void *)(v5 + 32) + 8 * v7++), a3);
    while (v7 < *(int *)(v5 + 40));
  }
  if (*(int *)(v5 + 56) >= 1)
  {
    uint64_t v8 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(*(void *)(v5 + 48) + 4 * v8++), (uint64_t)a2, a4);
    while (v8 < *(int *)(v5 + 56));
  }
  if (*(int *)(v5 + 72) >= 1)
  {
    uint64_t v9 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(*(void *)(v5 + 64) + 8 * v9++), a3);
    while (v9 < *(int *)(v5 + 72));
  }
  if ((*(unsigned char *)(v5 + 276) & 0x20) != 0) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(void *)(v5 + 80), (uint64_t)a2, a4);
  }
  if (*(int *)(v5 + 96) >= 1)
  {
    uint64_t v10 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (uint64_t)a2, *(float *)(*(void *)(v5 + 88) + 4 * v10++), a3);
    while (v10 < *(int *)(v5 + 96));
  }
  int v11 = *(_DWORD *)(v5 + 276);
  if ((v11 & 0x80) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(void *)(v5 + 104), (uint64_t)a2, a4);
    int v11 = *(_DWORD *)(v5 + 276);
  }
  if ((v11 & 0x100) != 0) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
  }
  if (*(int *)(v5 + 128) >= 1)
  {
    uint64_t v12 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned int *)(*(void *)(v5 + 120) + 4 * v12++), (uint64_t)a2, a4);
    while (v12 < *(int *)(v5 + 128));
  }
  if (*(int *)(v5 + 144) >= 1)
  {
    uint64_t v13 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, (uint64_t)a2, *(float *)(*(void *)(v5 + 136) + 4 * v13++), a3);
    while (v13 < *(int *)(v5 + 144));
  }
  if (*(int *)(v5 + 160) >= 1)
  {
    uint64_t v14 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(unsigned int *)(*(void *)(v5 + 152) + 4 * v14++), (uint64_t)a2, a4);
    while (v14 < *(int *)(v5 + 160));
  }
  if ((*(unsigned char *)(v5 + 277) & 0x10) != 0) {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, *(void *)(v5 + 168), (uint64_t)a2, a4);
  }
  if (*(int *)(v5 + 184) >= 1)
  {
    uint64_t v15 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, *(unsigned int *)(*(void *)(v5 + 176) + 4 * v15++), (uint64_t)a2, a4);
    while (v15 < *(int *)(v5 + 184));
  }
  if (*(int *)(v5 + 200) >= 1)
  {
    uint64_t v16 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, (uint64_t)a2, *(float *)(*(void *)(v5 + 192) + 4 * v16++), a3);
    while (v16 < *(int *)(v5 + 200));
  }
  if (*(int *)(v5 + 216) >= 1)
  {
    uint64_t v17 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, (uint64_t)a2, *(float *)(*(void *)(v5 + 208) + 4 * v17++), a3);
    while (v17 < *(int *)(v5 + 216));
  }
  if (*(int *)(v5 + 232) >= 1)
  {
    uint64_t v18 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, (uint64_t)a2, *(float *)(*(void *)(v5 + 224) + 4 * v18++), a3);
    while (v18 < *(int *)(v5 + 232));
  }
  if (*(int *)(v5 + 248) >= 1)
  {
    uint64_t v19 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, (uint64_t)a2, *(double *)(*(void *)(v5 + 240) + 8 * v19++), a3);
    while (v19 < *(int *)(v5 + 248));
  }
  if (*(int *)(v5 + 264) >= 1)
  {
    uint64_t v20 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, (uint64_t)a2, *(double *)(*(void *)(v5 + 256) + 8 * v20++), a3);
    while (v20 < *(int *)(v5 + 264));
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details::ByteSize(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details *this)
{
  int v2 = *((_DWORD *)this + 69);
  if (!(_BYTE)v2)
  {
    int v3 = 0;
    goto LABEL_10;
  }
  if (v2)
  {
    int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                     + 1))
       + 1;
    int v2 = *((_DWORD *)this + 69);
    if ((v2 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  int v3 = 0;
  if ((v2 & 0x20) != 0)
  {
LABEL_7:
    v3 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 10))
        + 1;
    int v2 = *((_DWORD *)this + 69);
  }
LABEL_8:
  if ((v2 & 0x80) != 0)
  {
    v3 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 13))
        + 1;
    int v2 = *((_DWORD *)this + 69);
  }
LABEL_10:
  if ((v2 & 0xFF00) != 0)
  {
    if ((v2 & 0x100) != 0)
    {
      uint64_t v4 = *((void *)this + 14);
      int v5 = *(unsigned __int8 *)(v4 + 23);
      char v6 = v5;
      uint64_t v7 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        unint64_t v8 = *(unsigned __int8 *)(v4 + 23);
      }
      else {
        unint64_t v8 = v7;
      }
      if (v8 >= 0x80)
      {
        int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8);
        int v5 = *(unsigned __int8 *)(v4 + 23);
        uint64_t v7 = *(void *)(v4 + 8);
        int v2 = *((_DWORD *)this + 69);
        char v6 = *(unsigned char *)(v4 + 23);
      }
      else
      {
        int v9 = 1;
      }
      if (v6 < 0) {
        int v5 = v7;
      }
      v3 += v9 + v5 + 1;
    }
    if ((v2 & 0x1000) != 0) {
      v3 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
    }
                                                                                        + 21))
          + 1;
  }
  int v34 = *((_DWORD *)this + 6);
  int v35 = *((_DWORD *)this + 10);
  int v36 = v3;
  int v10 = *((_DWORD *)this + 14);
  if (v10 < 1)
  {
    int v12 = 0;
  }
  else
  {
    uint64_t v11 = 0;
    int v12 = 0;
    do
    {
      uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((void *)this + 6)
                                                                                             + 4 * v11);
      if ((v13 & 0x80000000) != 0)
      {
        int v14 = 10;
      }
      else if (v13 >= 0x80)
      {
        int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
        int v10 = *((_DWORD *)this + 14);
      }
      else
      {
        int v14 = 1;
      }
      v12 += v14;
      ++v11;
    }
    while (v11 < v10);
  }
  int v32 = *((_DWORD *)this + 24);
  int v33 = *((_DWORD *)this + 18);
  int v15 = *((_DWORD *)this + 32);
  if (v15 < 1)
  {
    int v17 = 0;
  }
  else
  {
    uint64_t v16 = 0;
    int v17 = 0;
    do
    {
      uint64_t v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((void *)this + 15)
                                                                                             + 4 * v16);
      if ((v18 & 0x80000000) != 0)
      {
        int v19 = 10;
      }
      else if (v18 >= 0x80)
      {
        int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18);
        int v15 = *((_DWORD *)this + 32);
      }
      else
      {
        int v19 = 1;
      }
      v17 += v19;
      ++v16;
    }
    while (v16 < v15);
  }
  int v20 = *((_DWORD *)this + 36);
  int v21 = *((_DWORD *)this + 40);
  if (v21 < 1)
  {
    int v23 = 0;
  }
  else
  {
    uint64_t v22 = 0;
    int v23 = 0;
    do
    {
      uint64_t v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((void *)this + 19)
                                                                                             + 4 * v22);
      if ((v24 & 0x80000000) != 0)
      {
        int v25 = 10;
      }
      else if (v24 >= 0x80)
      {
        int v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24);
        int v21 = *((_DWORD *)this + 40);
      }
      else
      {
        int v25 = 1;
      }
      v23 += v25;
      ++v22;
    }
    while (v22 < v21);
  }
  int v26 = *((_DWORD *)this + 46);
  if (v26 < 1)
  {
    int v28 = 0;
  }
  else
  {
    uint64_t v27 = 0;
    int v28 = 0;
    do
    {
      int v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((void *)this + 22)
                                                                                             + 4 * v27);
      if ((v29 & 0x80000000) != 0)
      {
        int v30 = 10;
      }
      else if (v29 >= 0x80)
      {
        int v30 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v29);
        int v26 = *((_DWORD *)this + 46);
      }
      else
      {
        int v30 = 1;
      }
      v28 += v30;
      ++v27;
    }
    while (v27 < v26);
  }
  uint64_t result = (v12
                        + v36
                        + v10
                        + v17
                        + 9 * (v33 + v35)
                        + v15
                        + v23
                        + v21
                        + v28
                        + v26
                        + 5 * (v32 + v34 + v20 + *((_DWORD *)this + 50))
                        + 6 * (*((_DWORD *)this + 58) + *((_DWORD *)this + 54))
                        + 10 * (*((_DWORD *)this + 66) + *((_DWORD *)this + 62)));
  *((_DWORD *)this + 68) = result;
  return result;
}

void CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details::CopyFrom(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details *this, const CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details *))(*(void *)this
                                                                                                  + 32))(this);
    CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details::IsInitialized(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details::Swap(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details *this, CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    uint64_t v3 = *((void *)this + 2);
    uint64_t v4 = *((void *)a2 + 2);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)this + 2) = v4;
    *((void *)a2 + 1) = v2;
    *((void *)a2 + 2) = v3;
    uint64_t v5 = *((void *)this + 4);
    *((void *)this + 4) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v5;
    uint64_t v6 = *((void *)this + 6);
    *((void *)this + 6) = *((void *)a2 + 6);
    *((void *)a2 + 6) = v6;
    uint64_t v7 = *((void *)this + 8);
    *((void *)this + 8) = *((void *)a2 + 8);
    *((void *)a2 + 8) = v7;
    uint64_t v8 = *((void *)this + 10);
    uint64_t v9 = *((void *)this + 11);
    uint64_t v10 = *((void *)a2 + 11);
    *((void *)this + 10) = *((void *)a2 + 10);
    *((void *)this + 11) = v10;
    *((void *)a2 + 10) = v8;
    *((void *)a2 + 11) = v9;
    uint64_t v11 = *((void *)this + 13);
    uint64_t v12 = *((void *)this + 14);
    uint64_t v13 = *((void *)a2 + 14);
    *((void *)this + 13) = *((void *)a2 + 13);
    *((void *)this + 14) = v13;
    *((void *)a2 + 13) = v11;
    *((void *)a2 + 14) = v12;
    uint64_t v14 = *((void *)this + 15);
    *((void *)this + 15) = *((void *)a2 + 15);
    *((void *)a2 + 15) = v14;
    uint64_t v15 = *((void *)this + 17);
    *((void *)this + 17) = *((void *)a2 + 17);
    *((void *)a2 + 17) = v15;
    uint64_t v16 = *((void *)this + 19);
    *((void *)this + 19) = *((void *)a2 + 19);
    *((void *)a2 + 19) = v16;
    uint64_t v17 = *((void *)this + 21);
    uint64_t v18 = *((void *)this + 22);
    uint64_t v19 = *((void *)a2 + 22);
    *((void *)this + 21) = *((void *)a2 + 21);
    *((void *)this + 22) = v19;
    uint64_t v20 = *((void *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v20;
    uint64_t v21 = *((void *)this + 5);
    *((void *)this + 5) = *((void *)a2 + 5);
    *((void *)a2 + 5) = v21;
    uint64_t v22 = *((void *)this + 7);
    *((void *)this + 7) = *((void *)a2 + 7);
    *((void *)a2 + 7) = v22;
    uint64_t v23 = *((void *)this + 9);
    *((void *)this + 9) = *((void *)a2 + 9);
    *((void *)a2 + 9) = v23;
    uint64_t v24 = *((void *)this + 12);
    *((void *)this + 12) = *((void *)a2 + 12);
    *((void *)a2 + 12) = v24;
    uint64_t v25 = *((void *)this + 16);
    *((void *)this + 16) = *((void *)a2 + 16);
    *((void *)a2 + 16) = v25;
    uint64_t v26 = *((void *)this + 18);
    *((void *)this + 18) = *((void *)a2 + 18);
    *((void *)a2 + 18) = v26;
    uint64_t v27 = *((void *)this + 20);
    *((void *)this + 20) = *((void *)a2 + 20);
    *((void *)a2 + 20) = v27;
    uint64_t v28 = *((void *)a2 + 23);
    *((void *)a2 + 21) = v17;
    *((void *)a2 + 22) = v18;
    uint64_t v29 = *((void *)this + 23);
    *((void *)this + 23) = v28;
    *((void *)a2 + 23) = v29;
    uint64_t v30 = *((void *)this + 24);
    *((void *)this + 24) = *((void *)a2 + 24);
    uint64_t v31 = *((void *)a2 + 25);
    *((void *)a2 + 24) = v30;
    uint64_t v32 = *((void *)this + 25);
    *((void *)this + 25) = v31;
    *((void *)a2 + 25) = v32;
    uint64_t v33 = *((void *)this + 26);
    *((void *)this + 26) = *((void *)a2 + 26);
    uint64_t v34 = *((void *)a2 + 27);
    *((void *)a2 + 26) = v33;
    uint64_t v35 = *((void *)this + 27);
    *((void *)this + 27) = v34;
    *((void *)a2 + 27) = v35;
    uint64_t v36 = *((void *)this + 28);
    *((void *)this + 28) = *((void *)a2 + 28);
    uint64_t v37 = *((void *)a2 + 29);
    *((void *)a2 + 28) = v36;
    uint64_t v38 = *((void *)this + 29);
    *((void *)this + 29) = v37;
    *((void *)a2 + 29) = v38;
    uint64_t v39 = *((void *)this + 30);
    *((void *)this + 30) = *((void *)a2 + 30);
    uint64_t v40 = *((void *)a2 + 31);
    *((void *)a2 + 30) = v39;
    uint64_t v41 = *((void *)this + 31);
    *((void *)this + 31) = v40;
    *((void *)a2 + 31) = v41;
    uint64_t v42 = *((void *)this + 32);
    *((void *)this + 32) = *((void *)a2 + 32);
    double result = *((double *)a2 + 33);
    *((void *)a2 + 32) = v42;
    uint64_t v44 = *((void *)this + 33);
    *((double *)this + 33) = result;
    *((void *)a2 + 33) = v44;
    LODWORD(v42) = *((_DWORD *)this + 69);
    *((_DWORD *)this + 69) = *((_DWORD *)a2 + 69);
    *((_DWORD *)a2 + 69) = v42;
    LODWORD(v42) = *((_DWORD *)this + 68);
    *((_DWORD *)this + 68) = *((_DWORD *)a2 + 68);
    *((_DWORD *)a2 + 68) = v42;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::Vision::VLLocalizationMaps488Details::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.Vision.VLLocalizationMaps488Details");
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo *CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo::VLLocalizationDebugInfo(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo *this, const CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo *a2)
{
  *(void *)this = &unk_1EDD11E10;
  *((void *)this + 1) = 0;
  CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo::MergeFrom(this, a2);
  return this;
}

void sub_18DF58560(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo::MergeFrom(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo *this, const CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v2);
  }
}

void sub_18DF585DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo::~VLLocalizationDebugInfo(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo *this)
{
  *(void *)this = &unk_1EDD11E10;
  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo::~VLLocalizationDebugInfo(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo::default_instance(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo *this)
{
  return CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 8) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo::New(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo::Clear(uint64_t this)
{
  *(_DWORD *)(this + 12) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  do
  {
    uint64_t v3 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v3 >= *((void *)a2 + 2) || *v3 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
    }
    else
    {
      unint64_t TagFallback = *v3;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v3 + 1;
    }
    if (TagFallback) {
      BOOL v5 = (TagFallback & 7) == 4;
    }
    else {
      BOOL v5 = 1;
    }
    uint64_t v6 = v5;
  }
  while (!v5
       && (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0);
  return v6;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo::ByteSize(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo *this)
{
  *((_DWORD *)this + 2) = 0;
  return 0;
}

void CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo::CopyFrom(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo *this, const CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo::IsInitialized(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo *this)
{
  return 1;
}

CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo *CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo::Swap(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo *this, CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo *a2)
{
  if (a2 != this)
  {
    int v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.Vision.VLLocalizationDebugInfo");
}

double CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::SharedCtor(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult *this)
{
  *((_DWORD *)this + 14) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult *CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::VLLocalizationResult(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult *this, const CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult *a2)
{
  *(void *)this = &unk_1EDD11D20;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((_DWORD *)this + 14) = 0;
  CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::MergeFrom(this, a2);
  return this;
}

void sub_18DF5897C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::MergeFrom(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult *this, const CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v16);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 56);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 56))
    {
      *((_DWORD *)this + 14) |= 1u;
      BOOL v5 = (CoreNavigation::CLP::LogEntry::Vision::TimeStamp *)*((void *)this + 1);
      if (!v5) {
        operator new();
      }
      uint64_t v6 = (const CoreNavigation::CLP::LogEntry::Vision::TimeStamp *)*((void *)a2 + 1);
      if (!v6)
      {
        CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
        uint64_t v6 = *(const CoreNavigation::CLP::LogEntry::Vision::TimeStamp **)(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::default_instance_
                                                                        + 8);
      }
      CoreNavigation::CLP::LogEntry::Vision::TimeStamp::MergeFrom(v5, v6);
      int v4 = *((_DWORD *)a2 + 14);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_21;
      }
    }
    else if ((*((unsigned char *)a2 + 56) & 2) == 0)
    {
      goto LABEL_6;
    }
    *((_DWORD *)this + 14) |= 2u;
    uint64_t v7 = (CoreNavigation::CLP::LogEntry::Vision::VLLocation *)*((void *)this + 2);
    if (!v7) {
      operator new();
    }
    uint64_t v8 = (const CoreNavigation::CLP::LogEntry::Vision::VLLocation *)*((void *)a2 + 2);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
      uint64_t v8 = *(const CoreNavigation::CLP::LogEntry::Vision::VLLocation **)(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::default_instance_
                                                                       + 16);
    }
    CoreNavigation::CLP::LogEntry::Vision::VLLocation::MergeFrom(v7, v8);
    int v4 = *((_DWORD *)a2 + 14);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_26;
    }
LABEL_21:
    *((_DWORD *)this + 14) |= 4u;
    uint64_t v9 = (CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *)*((void *)this + 3);
    if (!v9) {
      operator new();
    }
    uint64_t v10 = (const CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *)*((void *)a2 + 3);
    if (!v10)
    {
      CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
      uint64_t v10 = *(const CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN **)(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::default_instance_
                                                                            + 24);
    }
    CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::MergeFrom(v9, v10);
    int v4 = *((_DWORD *)a2 + 14);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_31;
    }
LABEL_26:
    *((_DWORD *)this + 14) |= 8u;
    uint64_t v11 = (CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN *)*((void *)this + 4);
    if (!v11) {
      operator new();
    }
    uint64_t v12 = (const CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN *)*((void *)a2 + 4);
    if (!v12)
    {
      CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
      uint64_t v12 = *(const CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN **)(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::default_instance_
                                                                          + 32);
    }
    CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN::MergeFrom(v11, v12);
    int v4 = *((_DWORD *)a2 + 14);
    if ((v4 & 0x10) == 0)
    {
LABEL_9:
      if ((v4 & 0x20) == 0) {
        return;
      }
      goto LABEL_32;
    }
LABEL_31:
    int v13 = *((_DWORD *)a2 + 12);
    *((_DWORD *)this + 14) |= 0x10u;
    *((_DWORD *)this + 12) = v13;
    if ((*((_DWORD *)a2 + 14) & 0x20) == 0) {
      return;
    }
LABEL_32:
    *((_DWORD *)this + 14) |= 0x20u;
    uint64_t v14 = (CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo *)*((void *)this + 5);
    if (!v14) {
      operator new();
    }
    uint64_t v15 = (const CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo *)*((void *)a2 + 5);
    if (!v15)
    {
      CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
      uint64_t v15 = *(const CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo **)(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::default_instance_
                                                                                     + 40);
    }
    CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo::MergeFrom(v14, v15);
  }
}

void sub_18DF58CC0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::~VLLocalizationResult(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult *this)
{
  *(void *)this = &unk_1EDD11D20;
  CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::~VLLocalizationResult(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::SharedDtor(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult *this)
{
  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult *)CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 2);
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = *((void *)this + 3);
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = *((void *)this + 4);
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
    uint64_t v6 = *((void *)this + 5);
    if (v6)
    {
      uint64_t v7 = *(void (**)(void))(*(void *)v6 + 8);
      v7();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::default_instance(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult *this)
{
  return CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 52) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::New(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::Clear(uint64_t this)
{
  uint64_t v1 = this;
  LOBYTE(v2) = *(unsigned char *)(this + 56);
  if ((_BYTE)v2)
  {
    if (*(unsigned char *)(this + 56))
    {
      uint64_t v3 = *(void *)(this + 8);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
          *(void *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        int v2 = *(_DWORD *)(this + 56);
      }
    }
    if ((v2 & 2) != 0)
    {
      uint64_t v4 = *(void *)(this + 16);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 28))
        {
          if (*(unsigned char *)(v4 + 28))
          {
            uint64_t v5 = *(void *)(v4 + 8);
            if (v5)
            {
              *(_DWORD *)(v5 + 16) = 0;
              *(_DWORD *)(v5 + 28) = 0;
            }
          }
          *(void *)(v4 + 16) = 0;
        }
        *(_DWORD *)(v4 + 28) = 0;
        int v2 = *(_DWORD *)(this + 56);
      }
    }
    if ((v2 & 4) != 0)
    {
      uint64_t v6 = *(void *)(this + 24);
      if (v6)
      {
        this = sub_18DF0C208(v6 + 8);
        *(_DWORD *)(v6 + 36) = 0;
        int v2 = *(_DWORD *)(v1 + 56);
      }
    }
    if ((v2 & 8) != 0)
    {
      uint64_t v7 = *(void *)(v1 + 32);
      if (v7)
      {
        this = sub_18DF0C208(v7 + 8);
        *(_DWORD *)(v7 + 36) = 0;
        int v2 = *(_DWORD *)(v1 + 56);
      }
    }
    *(_DWORD *)(v1 + 48) = 0;
    if ((v2 & 0x20) != 0)
    {
      uint64_t v8 = *(void *)(v1 + 40);
      if (v8) {
        *(_DWORD *)(v8 + 12) = 0;
      }
    }
  }
  *(_DWORD *)(v1 + 56) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (1)
  {
    uint64_t v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 < *((void *)a2 + 2) && (*v4 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_6;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_6:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_24;
        }
        *((_DWORD *)this + 14) |= 1u;
        uint64_t v7 = (CoreNavigation::CLP::LogEntry::Vision::TimeStamp *)*((void *)this + 1);
        if (!v7) {
          operator new();
        }
        unsigned int v45 = 0;
        uint64_t v8 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v45))return 0; {
        }
          }
        else
        {
          unsigned int v45 = *v8;
          *((void *)a2 + 1) = v8 + 1;
        }
        int v10 = *((_DWORD *)a2 + 14);
        int v11 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v10 + 1;
        if (v10 >= v11) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Vision::TimeStamp::MergePartialFromCodedStream(v7, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v12 = *((_DWORD *)a2 + 14);
        BOOL v13 = __OFSUB__(v12, 1);
        int v14 = v12 - 1;
        if (v14 < 0 == v13) {
          *((_DWORD *)a2 + 14) = v14;
        }
        uint64_t v15 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v15 >= *((void *)a2 + 2) || *v15 != 18) {
          continue;
        }
        *((void *)a2 + 1) = v15 + 1;
        goto LABEL_36;
      case 2u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_24;
        }
LABEL_36:
        *((_DWORD *)this + 14) |= 2u;
        uint64_t v16 = (CoreNavigation::CLP::LogEntry::Vision::VLLocation *)*((void *)this + 2);
        if (!v16) {
          operator new();
        }
        unsigned int v45 = 0;
        uint64_t v17 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v17 >= *((void *)a2 + 2) || *v17 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v45))return 0; {
        }
          }
        else
        {
          unsigned int v45 = *v17;
          *((void *)a2 + 1) = v17 + 1;
        }
        int v18 = *((_DWORD *)a2 + 14);
        int v19 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v18 + 1;
        if (v18 >= v19) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Vision::VLLocation::MergePartialFromCodedStream(v16, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v20 = *((_DWORD *)a2 + 14);
        BOOL v13 = __OFSUB__(v20, 1);
        int v21 = v20 - 1;
        if (v21 < 0 == v13) {
          *((_DWORD *)a2 + 14) = v21;
        }
        uint64_t v22 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v22 >= *((void *)a2 + 2) || *v22 != 26) {
          continue;
        }
        *((void *)a2 + 1) = v22 + 1;
LABEL_50:
        *((_DWORD *)this + 14) |= 4u;
        uint64_t v23 = (CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN *)*((void *)this + 3);
        if (!v23) {
          operator new();
        }
        unsigned int v45 = 0;
        uint64_t v24 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v24 >= *((void *)a2 + 2) || *v24 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v45))return 0; {
        }
          }
        else
        {
          unsigned int v45 = *v24;
          *((void *)a2 + 1) = v24 + 1;
        }
        int v25 = *((_DWORD *)a2 + 14);
        int v26 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v25 + 1;
        if (v25 >= v26) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::MergePartialFromCodedStream(v23, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v27 = *((_DWORD *)a2 + 14);
        BOOL v13 = __OFSUB__(v27, 1);
        int v28 = v27 - 1;
        if (v28 < 0 == v13) {
          *((_DWORD *)a2 + 14) = v28;
        }
        uint64_t v29 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v29 >= *((void *)a2 + 2) || *v29 != 34) {
          continue;
        }
        *((void *)a2 + 1) = v29 + 1;
LABEL_64:
        *((_DWORD *)this + 14) |= 8u;
        uint64_t v30 = (CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN *)*((void *)this + 4);
        if (!v30) {
          operator new();
        }
        unsigned int v45 = 0;
        uint64_t v31 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v31 >= *((void *)a2 + 2) || *v31 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v45))return 0; {
        }
          }
        else
        {
          unsigned int v45 = *v31;
          *((void *)a2 + 1) = v31 + 1;
        }
        int v32 = *((_DWORD *)a2 + 14);
        int v33 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v32 + 1;
        if (v32 >= v33) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN::MergePartialFromCodedStream(v30, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v34 = *((_DWORD *)a2 + 14);
        BOOL v13 = __OFSUB__(v34, 1);
        int v35 = v34 - 1;
        if (v35 < 0 == v13) {
          *((_DWORD *)a2 + 14) = v35;
        }
        uint64_t v36 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v36 >= *((void *)a2 + 2) || *v36 != 45) {
          continue;
        }
        *((void *)a2 + 1) = v36 + 1;
LABEL_78:
        unsigned int v45 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v45) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 12) = v45;
        int v9 = *((_DWORD *)this + 14) | 0x10;
        *((_DWORD *)this + 14) = v9;
        uint64_t v37 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v37 >= *((void *)a2 + 2) || *v37 != 50) {
          continue;
        }
        *((void *)a2 + 1) = v37 + 1;
LABEL_82:
        *((_DWORD *)this + 14) = v9 | 0x20;
        if (!*((void *)this + 5)) {
          operator new();
        }
        unsigned int v45 = 0;
        uint64_t v38 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v38 >= *((void *)a2 + 2) || *v38 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v45))return 0; {
        }
          }
        else
        {
          unsigned int v45 = *v38;
          *((void *)a2 + 1) = v38 + 1;
        }
        int v39 = *((_DWORD *)a2 + 14);
        int v40 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v39 + 1;
        if (v39 >= v40) {
          return 0;
        }
        uint64_t v41 = (CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo *)wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Vision::VLLocalizationDebugInfo::MergePartialFromCodedStream(v41, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v42 = *((_DWORD *)a2 + 14);
        BOOL v13 = __OFSUB__(v42, 1);
        int v43 = v42 - 1;
        if (v43 < 0 == v13) {
          *((_DWORD *)a2 + 14) = v43;
        }
        if (*((void *)a2 + 1) == *((void *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
        break;
      case 3u:
        int v6 = TagFallback & 7;
        if (v6 == 2) {
          goto LABEL_50;
        }
        goto LABEL_24;
      case 4u:
        int v6 = TagFallback & 7;
        if (v6 == 2) {
          goto LABEL_64;
        }
        goto LABEL_24;
      case 5u:
        int v6 = TagFallback & 7;
        if (v6 == 5) {
          goto LABEL_78;
        }
        goto LABEL_24;
      case 6u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_24;
        }
        int v9 = *((_DWORD *)this + 14);
        goto LABEL_82;
      default:
        int v6 = TagFallback & 7;
LABEL_24:
        if (v6 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 56);
  if (v6)
  {
    uint64_t v7 = *(void *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto((CoreNavigation::CLP::LogEntry::Vision *)this);
      uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 56);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto((CoreNavigation::CLP::LogEntry::Vision *)this);
    uint64_t v8 = *(void *)(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::default_instance_ + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_14:
  uint64_t v9 = *(void *)(v5 + 24);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto((CoreNavigation::CLP::LogEntry::Vision *)this);
    uint64_t v9 = *(void *)(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::default_instance_ + 24);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v9, a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
LABEL_20:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(float *)(v5 + 48), a3);
    if ((*(_DWORD *)(v5 + 56) & 0x20) == 0) {
      return this;
    }
    goto LABEL_21;
  }
LABEL_17:
  uint64_t v10 = *(void *)(v5 + 32);
  if (!v10)
  {
    CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto((CoreNavigation::CLP::LogEntry::Vision *)this);
    uint64_t v10 = *(void *)(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::default_instance_ + 32);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v10, a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x10) != 0) {
    goto LABEL_20;
  }
LABEL_6:
  if ((v6 & 0x20) == 0) {
    return this;
  }
LABEL_21:
  uint64_t v11 = *(void *)(v5 + 40);
  if (!v11)
  {
    CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto((CoreNavigation::CLP::LogEntry::Vision *)this);
    uint64_t v11 = *(void *)(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::default_instance_ + 40);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v11, a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::ByteSize(uint64_t this)
{
  uint64_t v1 = this;
  LOBYTE(v2) = *(unsigned char *)(this + 56);
  if (!(_BYTE)v2)
  {
    uint64_t v4 = 0;
    goto LABEL_43;
  }
  if ((*(unsigned char *)(this + 56) & 1) == 0)
  {
    unsigned int v3 = 0;
    if ((*(unsigned char *)(this + 56) & 2) == 0) {
      goto LABEL_21;
    }
    goto LABEL_15;
  }
  uint64_t v5 = *(void *)(this + 8);
  if (!v5)
  {
    CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto((CoreNavigation::CLP::LogEntry::Vision *)this);
    uint64_t v5 = *(void *)(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::default_instance_ + 8);
  }
  int v6 = *(unsigned __int8 *)(v5 + 36);
  if (*(unsigned char *)(v5 + 36))
  {
    int v7 = (v6 << 31 >> 31) & 9;
    if ((v6 & 2) != 0) {
      v7 += 9;
    }
    if ((v6 & 4) != 0) {
      int v6 = v7 + 9;
    }
    else {
      int v6 = v7;
    }
  }
  *(_DWORD *)(v5 + 32) = v6;
  unsigned int v3 = v6 + 2;
  int v2 = *(_DWORD *)(v1 + 56);
  if ((v2 & 2) != 0)
  {
LABEL_15:
    uint64_t v8 = *(CoreNavigation::CLP::LogEntry::Vision::VLLocation **)(v1 + 16);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(0);
      uint64_t v8 = *(CoreNavigation::CLP::LogEntry::Vision::VLLocation **)(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::default_instance_
                                                                 + 16);
    }
    uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Vision::VLLocation::ByteSize(v8);
    int v10 = (int)v9;
    if (v9 >= 0x80) {
      this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9);
    }
    else {
      this = 1;
    }
    v3 += v10 + this + 1;
    int v2 = *(_DWORD *)(v1 + 56);
  }
LABEL_21:
  if ((v2 & 4) != 0)
  {
    uint64_t v11 = *(CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN **)(v1 + 24);
    if (!v11)
    {
      CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(0);
      uint64_t v11 = *(CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN **)(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::default_instance_
                                                                      + 24);
    }
    int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Vision::simd_doubleMxN::ByteSize(v11);
    int v13 = (int)v12;
    if (v12 >= 0x80) {
      this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12);
    }
    else {
      this = 1;
    }
    v3 += v13 + this + 1;
    int v2 = *(_DWORD *)(v1 + 56);
    if ((v2 & 8) == 0) {
      goto LABEL_36;
    }
    goto LABEL_30;
  }
  if ((v2 & 8) != 0)
  {
LABEL_30:
    int v14 = *(CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN **)(v1 + 32);
    if (!v14)
    {
      CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(0);
      int v14 = *(CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN **)(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::default_instance_
                                                                    + 32);
    }
    uint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Vision::VLMatrixfMxN::ByteSize(v14);
    int v16 = (int)v15;
    if (v15 >= 0x80) {
      this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15);
    }
    else {
      this = 1;
    }
    v3 += v16 + this + 1;
    int v2 = *(_DWORD *)(v1 + 56);
  }
LABEL_36:
  if ((v2 & 0x10) != 0) {
    uint64_t v4 = v3 + 5;
  }
  else {
    uint64_t v4 = v3;
  }
  if ((v2 & 0x20) != 0)
  {
    uint64_t v17 = *(void *)(v1 + 40);
    if (!v17)
    {
      CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto((CoreNavigation::CLP::LogEntry::Vision *)this);
      uint64_t v17 = *(void *)(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::default_instance_ + 40);
    }
    *(_DWORD *)(v17 + 8) = 0;
    uint64_t v4 = (v4 + 2);
  }
LABEL_43:
  *(_DWORD *)(v1 + 52) = v4;
  return v4;
}

void CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::CopyFrom(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult *this, const CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::IsInitialized(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult *this)
{
  return 1;
}

float CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::Swap(CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult *this, CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    uint64_t v3 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    uint64_t v4 = *((void *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v4;
    uint64_t v5 = *((void *)this + 4);
    *((void *)this + 4) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v5;
    float result = *((float *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((float *)a2 + 12) = result;
    uint64_t v7 = *((void *)this + 5);
    *((void *)this + 5) = *((void *)a2 + 5);
    *((void *)a2 + 5) = v7;
    LODWORD(v7) = *((_DWORD *)this + 14);
    *((_DWORD *)this + 14) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v7;
    LODWORD(v7) = *((_DWORD *)this + 13);
    *((_DWORD *)this + 13) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v7;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.Vision.VLLocalizationResult");
}

uint64_t sub_18DF59B74(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_18DF59B7C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_18DF59B84(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_18DF59B8C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_18DF59B94(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_18DF59B9C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_18DF59BA4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 60);
}

uint64_t sub_18DF59BAC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 60);
}

uint64_t sub_18DF59BB4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 84);
}

uint64_t sub_18DF59BBC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_18DF59BC4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_18DF59BCC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 68);
}

uint64_t sub_18DF59BD4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_18DF59BDC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_18DF59BE4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_18DF59BEC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_18DF59BF4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_18DF59BFC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_18DF59C04(uint64_t a1)
{
  return *(unsigned int *)(a1 + 272);
}

uint64_t sub_18DF59C0C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 8);
}

uint64_t sub_18DF59C14(uint64_t a1)
{
  return *(unsigned int *)(a1 + 52);
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::protobuf_ShutdownFile_CoreNavigationCLPVisionLogEntry_2eproto(CoreNavigation::CLP::LogEntry::Vision *this)
{
  uint64_t result = CoreNavigation::CLP::LogEntry::Vision::LogEntry::default_instance_;
  if (CoreNavigation::CLP::LogEntry::Vision::LogEntry::default_instance_) {
    return (*(uint64_t (**)(void))(*(void *)CoreNavigation::CLP::LogEntry::Vision::LogEntry::default_instance_ + 8))();
  }
  return result;
}

void CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionLogEntry_2eproto_impl(CoreNavigation::CLP::LogEntry::Vision *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v4 = (CoreNavigation::CLP::LogEntry::Vision *)wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/CoreNavigation/shared/cnprotobuf/CoreNavigationCLPVisionLogEntry.pb.cc", a4);
  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionEvent_2eproto(v4);
  operator new();
}

double CoreNavigation::CLP::LogEntry::Vision::LogEntry::LogEntry(CoreNavigation::CLP::LogEntry::Vision::LogEntry *this)
{
  *(void *)&double result = 0xFFFFFFFFLL;
  *((void *)this + 4) = 0xFFFFFFFFLL;
  *((_DWORD *)this + 10) = 0;
  *(void *)this = &unk_1EDD11FF0;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  return result;
}

{
  double result;

  *(void *)&double result = 0xFFFFFFFFLL;
  *((void *)this + 4) = 0xFFFFFFFFLL;
  *((_DWORD *)this + 10) = 0;
  *(void *)this = &unk_1EDD11FF0;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  return result;
}

void *CoreNavigation::CLP::LogEntry::Vision::LogEntry::InitAsDefaultInstance(void *this)
{
  uint64_t v1 = CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation::default_instance_;
  this[1] = CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::default_instance_;
  this[2] = v1;
  this[3] = CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::default_instance_;
  return this;
}

void CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionLogEntry_2eproto(CoreNavigation::CLP::LogEntry::Vision *this)
{
  uint64_t v1 = CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionLogEntry_2eproto_once_;
  __dmb(0xBu);
  if (v1 != 2)
  {
    v2[0] = MEMORY[0x1E4FBA938] + 16;
    v2[1] = CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionLogEntry_2eproto_impl;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
}

void sub_18DF59DF8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::Vision::LogEntry::SharedCtor(CoreNavigation::CLP::LogEntry::Vision::LogEntry *this)
{
  *(void *)&double result = 0xFFFFFFFFLL;
  *((void *)this + 4) = 0xFFFFFFFFLL;
  *((_DWORD *)this + 10) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((void *)this + 1) = 0;
  return result;
}

CoreNavigation::CLP::LogEntry::Vision::LogEntry *CoreNavigation::CLP::LogEntry::Vision::LogEntry::LogEntry(CoreNavigation::CLP::LogEntry::Vision::LogEntry *this, const CoreNavigation::CLP::LogEntry::Vision::LogEntry *a2)
{
  *((void *)this + 4) = 0xFFFFFFFFLL;
  *((_DWORD *)this + 10) = 0;
  *(void *)this = &unk_1EDD11FF0;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  CoreNavigation::CLP::LogEntry::Vision::LogEntry::MergeFrom(this, a2);
  return this;
}

void sub_18DF59EA8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::LogEntry::MergeFrom(CoreNavigation::CLP::LogEntry::Vision::LogEntry *this, const CoreNavigation::CLP::LogEntry::Vision::LogEntry *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 40);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 40))
    {
      int v5 = *((_DWORD *)a2 + 8);
      if ((v5 + 1) >= 4) {
        __assert_rtn("set_ar_session_state", "CoreNavigationCLPVisionLogEntry.pb.h", 185, "::CoreNavigation::CLP::LogEntry::Vision::ARSessionState_IsValid(value)");
      }
      *((_DWORD *)this + 10) |= 1u;
      *((_DWORD *)this + 8) = v5;
      int v4 = *((_DWORD *)a2 + 10);
    }
    if ((v4 & 2) != 0)
    {
      *((_DWORD *)this + 10) |= 2u;
      int v6 = (CoreNavigation::CLP::LogEntry::Vision::VIOEstimation *)*((void *)this + 1);
      if (!v6) {
        operator new();
      }
      uint64_t v7 = (const CoreNavigation::CLP::LogEntry::Vision::VIOEstimation *)*((void *)a2 + 1);
      if (!v7)
      {
        CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionLogEntry_2eproto(this);
        uint64_t v7 = *(const CoreNavigation::CLP::LogEntry::Vision::VIOEstimation **)(CoreNavigation::CLP::LogEntry::Vision::LogEntry::default_instance_
                                                                            + 8);
      }
      CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::MergeFrom(v6, v7);
      int v4 = *((_DWORD *)a2 + 10);
      if ((v4 & 4) == 0)
      {
LABEL_9:
        if ((v4 & 8) == 0) {
          return;
        }
        goto LABEL_21;
      }
    }
    else if ((v4 & 4) == 0)
    {
      goto LABEL_9;
    }
    *((_DWORD *)this + 10) |= 4u;
    uint64_t v8 = (CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation *)*((void *)this + 2);
    if (!v8) {
      operator new();
    }
    uint64_t v9 = (const CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation *)*((void *)a2 + 2);
    if (!v9)
    {
      CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionLogEntry_2eproto(this);
      uint64_t v9 = *(const CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation **)(CoreNavigation::CLP::LogEntry::Vision::LogEntry::default_instance_
                                                                                 + 16);
    }
    CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation::MergeFrom(v8, v9);
    if ((*((_DWORD *)a2 + 10) & 8) != 0)
    {
LABEL_21:
      *((_DWORD *)this + 10) |= 8u;
      int v10 = (CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult *)*((void *)this + 3);
      if (!v10) {
        operator new();
      }
      uint64_t v11 = (const CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult *)*((void *)a2 + 3);
      if (!v11)
      {
        CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionLogEntry_2eproto(this);
        uint64_t v11 = *(const CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult **)(CoreNavigation::CLP::LogEntry::Vision::LogEntry::default_instance_
                                                                                    + 24);
      }
      CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::MergeFrom(v10, v11);
    }
  }
}

void sub_18DF5A140(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Vision::LogEntry::~LogEntry(CoreNavigation::CLP::LogEntry::Vision::LogEntry *this)
{
  *(void *)this = &unk_1EDD11FF0;
  CoreNavigation::CLP::LogEntry::Vision::LogEntry::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::Vision::LogEntry::~LogEntry(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::Vision::LogEntry::SharedDtor(CoreNavigation::CLP::LogEntry::Vision::LogEntry *this)
{
  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionLogEntry_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::Vision::LogEntry *)CoreNavigation::CLP::LogEntry::Vision::LogEntry::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 2);
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = *((void *)this + 3);
    if (v4)
    {
      int v5 = *(void (**)(void))(*(void *)v4 + 8);
      v5();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LogEntry::default_instance(CoreNavigation::CLP::LogEntry::Vision::LogEntry *this)
{
  return CoreNavigation::CLP::LogEntry::Vision::LogEntry::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LogEntry::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 36) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::Vision::LogEntry::New(CoreNavigation::CLP::LogEntry::Vision::LogEntry *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LogEntry::Clear(uint64_t this)
{
  uint64_t v1 = this;
  LOBYTE(v2) = *(unsigned char *)(this + 40);
  if ((_BYTE)v2)
  {
    *(_DWORD *)(this + 32) = -1;
    if ((v2 & 2) != 0)
    {
      this = *(void *)(this + 8);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::Clear(this);
        int v2 = *(_DWORD *)(v1 + 40);
      }
    }
    if ((v2 & 4) != 0)
    {
      uint64_t v3 = *(void *)(v1 + 16);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 44)) {
          *(void *)(v3 + 32) = 0x8FFFFFFFFLL;
        }
        this = sub_18DF0C208(v3 + 8);
        *(_DWORD *)(v3 + 44) = 0;
        int v2 = *(_DWORD *)(v1 + 40);
      }
    }
    if ((v2 & 8) != 0)
    {
      this = *(void *)(v1 + 24);
      if (this) {
        this = CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::Clear(this);
      }
    }
  }
  *(_DWORD *)(v1 + 40) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LogEntry::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Vision::LogEntry *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (1)
  {
    uint64_t v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 < *((void *)a2 + 2) && (*v4 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_6;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_6:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        unsigned int v32 = 0;
        uint64_t v7 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v7 >= *((void *)a2 + 2) || *v7 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v32);
          if (!result) {
            return result;
          }
          unsigned int v8 = v32;
        }
        else
        {
          unsigned int v8 = *v7;
          *((void *)a2 + 1) = v7 + 1;
        }
        if (v8 + 1 <= 3)
        {
          *((_DWORD *)this + 10) |= 1u;
          *((_DWORD *)this + 8) = v8;
        }
        int v10 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v10 < *((void *)a2 + 2) && *v10 == 18)
        {
          *((void *)a2 + 1) = v10 + 1;
          goto LABEL_27;
        }
        continue;
      case 2u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_17;
        }
LABEL_27:
        *((_DWORD *)this + 10) |= 2u;
        uint64_t v11 = (CoreNavigation::CLP::LogEntry::Vision::VIOEstimation *)*((void *)this + 1);
        if (!v11) {
          operator new();
        }
        unsigned int v32 = 0;
        int v12 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v12 >= *((void *)a2 + 2) || *v12 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v32))return 0; {
        }
          }
        else
        {
          unsigned int v32 = *v12;
          *((void *)a2 + 1) = v12 + 1;
        }
        int v13 = *((_DWORD *)a2 + 14);
        int v14 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v13 + 1;
        if (v13 >= v14) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::MergePartialFromCodedStream(v11, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v15 = *((_DWORD *)a2 + 14);
        BOOL v16 = __OFSUB__(v15, 1);
        int v17 = v15 - 1;
        if (v17 < 0 == v16) {
          *((_DWORD *)a2 + 14) = v17;
        }
        int v18 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v18 >= *((void *)a2 + 2) || *v18 != 26) {
          continue;
        }
        *((void *)a2 + 1) = v18 + 1;
LABEL_41:
        *((_DWORD *)this + 10) |= 4u;
        int v19 = (CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation *)*((void *)this + 2);
        if (!v19) {
          operator new();
        }
        unsigned int v32 = 0;
        int v20 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v20 >= *((void *)a2 + 2) || *v20 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v32))return 0; {
        }
          }
        else
        {
          unsigned int v32 = *v20;
          *((void *)a2 + 1) = v20 + 1;
        }
        int v21 = *((_DWORD *)a2 + 14);
        int v22 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v21 + 1;
        if (v21 >= v22) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation::MergePartialFromCodedStream(v19, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v23 = *((_DWORD *)a2 + 14);
        BOOL v16 = __OFSUB__(v23, 1);
        int v24 = v23 - 1;
        if (v24 < 0 == v16) {
          *((_DWORD *)a2 + 14) = v24;
        }
        int v25 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v25 >= *((void *)a2 + 2) || *v25 != 34) {
          continue;
        }
        *((void *)a2 + 1) = v25 + 1;
LABEL_55:
        *((_DWORD *)this + 10) |= 8u;
        int v26 = (CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult *)*((void *)this + 3);
        if (!v26) {
          operator new();
        }
        unsigned int v32 = 0;
        int v27 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v27 >= *((void *)a2 + 2) || *v27 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v32))return 0; {
        }
          }
        else
        {
          unsigned int v32 = *v27;
          *((void *)a2 + 1) = v27 + 1;
        }
        int v28 = *((_DWORD *)a2 + 14);
        int v29 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v28 + 1;
        if (v28 >= v29) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::MergePartialFromCodedStream(v26, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v30 = *((_DWORD *)a2 + 14);
        BOOL v16 = __OFSUB__(v30, 1);
        int v31 = v30 - 1;
        if (v31 < 0 == v16) {
          *((_DWORD *)a2 + 14) = v31;
        }
        if (*((void *)a2 + 1) == *((void *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
        break;
      case 3u:
        int v6 = TagFallback & 7;
        if (v6 == 2) {
          goto LABEL_41;
        }
        goto LABEL_17;
      case 4u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_17;
        }
        goto LABEL_55;
      default:
        int v6 = TagFallback & 7;
LABEL_17:
        if (v6 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

unsigned int *CoreNavigation::CLP::LogEntry::Vision::LogEntry::SerializeWithCachedSizes(unsigned int *this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = this;
  unsigned int v6 = this[10];
  if (v6)
  {
    this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, this[8], (uint64_t)a2, a4);
    unsigned int v6 = v5[10];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v7 = *((void *)v5 + 1);
  if (!v7)
  {
    CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionLogEntry_2eproto((CoreNavigation::CLP::LogEntry::Vision *)this);
    uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::Vision::LogEntry::default_instance_ + 8);
  }
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  unsigned int v6 = v5[10];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      return this;
    }
    goto LABEL_13;
  }
LABEL_10:
  uint64_t v8 = *((void *)v5 + 2);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionLogEntry_2eproto((CoreNavigation::CLP::LogEntry::Vision *)this);
    uint64_t v8 = *(void *)(CoreNavigation::CLP::LogEntry::Vision::LogEntry::default_instance_ + 16);
  }
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
  if ((v5[10] & 8) != 0)
  {
LABEL_13:
    uint64_t v9 = *((void *)v5 + 3);
    if (!v9)
    {
      CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionLogEntry_2eproto((CoreNavigation::CLP::LogEntry::Vision *)this);
      uint64_t v9 = *(void *)(CoreNavigation::CLP::LogEntry::Vision::LogEntry::default_instance_ + 24);
    }
    return (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v9, a2, a4);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LogEntry::ByteSize(CoreNavigation::CLP::LogEntry::Vision::LogEntry *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 40);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_34;
  }
  if (*((unsigned char *)this + 40))
  {
    uint64_t v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    if ((v4 & 0x80000000) != 0)
    {
      uint64_t v3 = 11;
      if ((v2 & 2) == 0) {
        goto LABEL_19;
      }
    }
    else if (v4 >= 0x80)
    {
      uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      int v2 = *((_DWORD *)this + 10);
      if ((v2 & 2) == 0) {
        goto LABEL_19;
      }
    }
    else
    {
      uint64_t v3 = 2;
      if ((v2 & 2) == 0) {
        goto LABEL_19;
      }
    }
  }
  else
  {
    uint64_t v3 = 0;
    if ((*((unsigned char *)this + 40) & 2) == 0) {
      goto LABEL_19;
    }
  }
  uint64_t v5 = *((void *)this + 1);
  if (!v5)
  {
    CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionLogEntry_2eproto(0);
    uint64_t v5 = *(void *)(CoreNavigation::CLP::LogEntry::Vision::LogEntry::default_instance_ + 8);
  }
  unsigned int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Vision::VIOEstimation::ByteSize(v5);
  int v7 = (int)v6;
  if (v6 >= 0x80) {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
  }
  else {
    int v8 = 1;
  }
  uint64_t v3 = (v3 + v7 + v8 + 1);
  int v2 = *((_DWORD *)this + 10);
LABEL_19:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_34;
    }
    goto LABEL_28;
  }
  uint64_t v9 = (CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation *)*((void *)this + 2);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionLogEntry_2eproto(0);
    uint64_t v9 = *(CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation **)(CoreNavigation::CLP::LogEntry::Vision::LogEntry::default_instance_
                                                                         + 16);
  }
  int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Vision::LSLHeadingEstimation::ByteSize(v9);
  int v11 = (int)v10;
  if (v10 >= 0x80) {
    int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
  }
  else {
    int v12 = 1;
  }
  uint64_t v3 = (v3 + v11 + v12 + 1);
  if ((*((_DWORD *)this + 10) & 8) != 0)
  {
LABEL_28:
    uint64_t v13 = *((void *)this + 3);
    if (!v13)
    {
      CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionLogEntry_2eproto(0);
      uint64_t v13 = *(void *)(CoreNavigation::CLP::LogEntry::Vision::LogEntry::default_instance_ + 24);
    }
    int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Vision::VLLocalizationResult::ByteSize(v13);
    int v15 = (int)v14;
    if (v14 >= 0x80) {
      int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14);
    }
    else {
      int v16 = 1;
    }
    uint64_t v3 = (v3 + v15 + v16 + 1);
  }
LABEL_34:
  *((_DWORD *)this + 9) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::Vision::LogEntry::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Vision::LogEntry *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::Vision::LogEntry::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::Vision::LogEntry::CopyFrom(CoreNavigation::CLP::LogEntry::Vision::LogEntry *this, const CoreNavigation::CLP::LogEntry::Vision::LogEntry *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Vision::LogEntry *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::Vision::LogEntry::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LogEntry::IsInitialized(CoreNavigation::CLP::LogEntry::Vision::LogEntry *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::Vision::LogEntry::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::Vision::LogEntry *a2)
{
  if (a2 != (CoreNavigation::CLP::LogEntry::Vision::LogEntry *)this)
  {
    int v2 = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
    uint64_t v3 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v3;
    uint64_t v4 = *(void *)(this + 16);
    *(void *)(this + 16) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v4;
    uint64_t v5 = *(void *)(this + 24);
    *(void *)(this + 24) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v5;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::Vision::LogEntry::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.Vision.LogEntry");
}

uint64_t sub_18DF5ACBC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t CoreNavigation::CLP::LogEntry::protobuf_ShutdownFile_CoreNavigationCLPLogEntry_2eproto(CoreNavigation::CLP::LogEntry *this)
{
  if (CoreNavigation::CLP::LogEntry::LogEntry::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::LogEntry::default_instance_ + 8))(CoreNavigation::CLP::LogEntry::LogEntry::default_instance_);
  }
  uint64_t result = CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp::default_instance_;
  if (CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp::default_instance_)
  {
    int v2 = *(uint64_t (**)(void))(*(void *)CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp::default_instance_ + 8);
    return v2();
  }
  return result;
}

void CoreNavigation::CLP::LogEntry::protobuf_AddDesc_CoreNavigationCLPLogEntry_2eproto_impl(CoreNavigation::CLP::LogEntry *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v4 = (CoreNavigation::CLP::LogEntry::PrivateData *)wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/CoreNavigation/shared/cnprotobuf/CoreNavigationCLPLogEntry.pb.cc", a4);
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(v4);
  operator new();
}

void sub_18DF5AE30(_Unwind_Exception *a1)
{
  MEMORY[0x192FA6240](v1, 0x10A1C400739E6B9);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp::LogEntry_TimeStamp(CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp *this)
{
  *(void *)this = &unk_1EDD0FCC8;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((void *)this + 5) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD0FCC8;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((void *)this + 5) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::LogEntry::InitAsDefaultInstance(uint64_t this)
{
  uint64_t v1 = CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_;
  *(void *)(this + 32) = CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp::default_instance_;
  *(void *)(this + 40) = v1;
  return this;
}

void CoreNavigation::CLP::LogEntry::protobuf_AddDesc_CoreNavigationCLPLogEntry_2eproto(CoreNavigation::CLP::LogEntry *this)
{
  uint64_t v1 = CoreNavigation::CLP::LogEntry::protobuf_AddDesc_CoreNavigationCLPLogEntry_2eproto_once_;
  __dmb(0xBu);
  if (v1 != 2)
  {
    v2[0] = MEMORY[0x1E4FBA938] + 16;
    v2[1] = CoreNavigation::CLP::LogEntry::protobuf_AddDesc_CoreNavigationCLPLogEntry_2eproto_impl;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
}

void sub_18DF5AF2C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp::SharedCtor(CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp *this)
{
  *((void *)this + 5) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp *CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp::LogEntry_TimeStamp(CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp *this, const CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp *a2)
{
  *(void *)this = &unk_1EDD0FCC8;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((void *)this + 5) = 0;
  CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp::MergeFrom(this, a2);
  return this;
}

void sub_18DF5AFD8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp::MergeFrom(CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp *this, const CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 44);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 44))
    {
      double result = *((double *)a2 + 1);
      *((_DWORD *)this + 11) |= 1u;
      *((double *)this + 1) = result;
      int v5 = *((_DWORD *)a2 + 11);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_12;
      }
    }
    else if ((*((unsigned char *)a2 + 44) & 2) == 0)
    {
      goto LABEL_6;
    }
    double result = *((double *)a2 + 2);
    *((_DWORD *)this + 11) |= 2u;
    *((double *)this + 2) = result;
    int v5 = *((_DWORD *)a2 + 11);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        return result;
      }
      goto LABEL_8;
    }
LABEL_12:
    double result = *((double *)a2 + 3);
    *((_DWORD *)this + 11) |= 4u;
    *((double *)this + 3) = result;
    if ((*((_DWORD *)a2 + 11) & 8) == 0) {
      return result;
    }
LABEL_8:
    uint64_t v6 = *((void *)a2 + 4);
    *((_DWORD *)this + 11) |= 8u;
    *((void *)this + 4) = v6;
  }
  return result;
}

void sub_18DF5B0E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp::~LogEntry_TimeStamp(CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp *this)
{
  *(void *)this = &unk_1EDD0FCC8;
  CoreNavigation::CLP::LogEntry::protobuf_AddDesc_CoreNavigationCLPLogEntry_2eproto(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp::~LogEntry_TimeStamp(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp::default_instance(CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp *this)
{
  return CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 40) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp::New(CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 44))
  {
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 8) = 0u;
  }
  *(_DWORD *)(this + 44) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (2)
  {
    uint64_t v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_24;
        }
        unint64_t v15 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v15) & 1) == 0) {
          return 0;
        }
        *((void *)this + 1) = v15;
        *((_DWORD *)this + 11) |= 1u;
        int v7 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v7 >= *((void *)a2 + 2) || *v7 != 17) {
          continue;
        }
        *((void *)a2 + 1) = v7 + 1;
        goto LABEL_14;
      case 2u:
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_24;
        }
LABEL_14:
        unint64_t v15 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v15) & 1) == 0) {
          return 0;
        }
        *((void *)this + 2) = v15;
        *((_DWORD *)this + 11) |= 2u;
        int v8 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 != 25) {
          continue;
        }
        *((void *)a2 + 1) = v8 + 1;
LABEL_19:
        unint64_t v15 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v15))
        {
          *((void *)this + 3) = v15;
          *((_DWORD *)this + 11) |= 4u;
          int v10 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
          if ((unint64_t)v10 < v9 && *v10 == 32)
          {
            int v11 = v10 + 1;
            *((void *)a2 + 1) = v11;
LABEL_28:
            unint64_t v15 = 0;
            if ((unint64_t)v11 >= v9 || *v11 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, &v15);
              if (!result) {
                return result;
              }
              unint64_t v12 = v15;
              uint64_t v13 = (unsigned __int8 *)*((void *)a2 + 1);
              unint64_t v9 = *((void *)a2 + 2);
            }
            else
            {
              unint64_t v12 = *v11;
              uint64_t v13 = (unsigned __int8 *)(v11 + 1);
              *((void *)a2 + 1) = v13;
            }
            *((void *)this + 4) = v12;
            *((_DWORD *)this + 11) |= 8u;
            if (v13 == (unsigned __int8 *)v9 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
            {
              *((_DWORD *)a2 + 8) = 0;
              uint64_t result = 1;
              *((unsigned char *)a2 + 36) = 1;
              return result;
            }
          }
          continue;
        }
        return 0;
      case 3u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_19;
        }
        goto LABEL_24;
      case 4u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        int v11 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        goto LABEL_28;
      default:
        int v6 = TagFallback & 7;
LABEL_24:
        if (v6 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 44);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
    int v6 = *(_DWORD *)(v5 + 44);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 24), a3);
      if ((*(_DWORD *)(v5 + 44) & 8) == 0) {
        return this;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return this;
  }
LABEL_9:
  uint64_t v7 = *(void *)(v5 + 32);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v7, (uint64_t)a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp::ByteSize(wireless_diagnostics::google::protobuf::io::CodedOutputStream **this)
{
  int v2 = *((unsigned __int8 *)this + 44);
  if (*((unsigned char *)this + 44))
  {
    unsigned int v3 = (v2 << 31 >> 31) & 9;
    if ((v2 & 2) != 0) {
      v3 += 9;
    }
    if ((v2 & 4) != 0) {
      uint64_t v4 = v3 + 9;
    }
    else {
      uint64_t v4 = v3;
    }
    if ((v2 & 8) != 0) {
      uint64_t v4 = v4
    }
         + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(this[4])
         + 1;
  }
  else
  {
    uint64_t v4 = 0;
  }
  *((_DWORD *)this + 10) = v4;
  return v4;
}

double CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp::CopyFrom(CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp *this, const CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp::IsInitialized(CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp::Swap(CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp *this, CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    uint64_t v3 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    double result = *((double *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    *((double *)a2 + 3) = result;
    uint64_t v5 = *((void *)this + 4);
    *((void *)this + 4) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v5;
    LODWORD(v5) = *((_DWORD *)this + 11);
    *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v5;
    LODWORD(v5) = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v5;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.LogEntry.TimeStamp");
}

CoreNavigation::CLP::LogEntry::LogEntry *CoreNavigation::CLP::LogEntry::LogEntry::LogEntry(CoreNavigation::CLP::LogEntry::LogEntry *this)
{
  *(void *)this = &unk_1EDD120E0;
  wireless_diagnostics::google::protobuf::internal::ExtensionSet::ExtensionSet((CoreNavigation::CLP::LogEntry::LogEntry *)((char *)this + 8));
  *((void *)this + 4) = 0;
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  return this;
}

void sub_18DF5B790(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void *CoreNavigation::CLP::LogEntry::LogEntry::SharedCtor(void *this)
{
  this[4] = 0;
  this[5] = 0;
  this[6] = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::LogEntry *CoreNavigation::CLP::LogEntry::LogEntry::LogEntry(CoreNavigation::CLP::LogEntry::LogEntry *this, const CoreNavigation::CLP::LogEntry::LogEntry *a2)
{
  *(void *)this = &unk_1EDD120E0;
  wireless_diagnostics::google::protobuf::internal::ExtensionSet::ExtensionSet((CoreNavigation::CLP::LogEntry::LogEntry *)((char *)this + 8));
  *((void *)this + 4) = 0;
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  CoreNavigation::CLP::LogEntry::LogEntry::MergeFrom(this, a2);
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::LogEntry::MergeFrom(CoreNavigation::CLP::LogEntry::LogEntry *this, const CoreNavigation::CLP::LogEntry::LogEntry *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 52);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 52))
    {
      *((_DWORD *)this + 13) |= 1u;
      uint64_t v5 = (CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp *)*((void *)this + 4);
      if (!v5) {
        operator new();
      }
      int v6 = (const CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp *)*((void *)a2 + 4);
      if (!v6)
      {
        CoreNavigation::CLP::LogEntry::protobuf_AddDesc_CoreNavigationCLPLogEntry_2eproto(this);
        int v6 = *(const CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp **)(CoreNavigation::CLP::LogEntry::LogEntry::default_instance_
                                                                         + 32);
      }
      CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp::MergeFrom(v5, v6);
      int v4 = *((_DWORD *)a2 + 13);
    }
    if ((v4 & 2) != 0)
    {
      *((_DWORD *)this + 13) |= 2u;
      uint64_t v7 = (CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *)*((void *)this + 5);
      if (!v7) {
        operator new();
      }
      int v8 = (const CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *)*((void *)a2 + 5);
      if (!v8)
      {
        CoreNavigation::CLP::LogEntry::protobuf_AddDesc_CoreNavigationCLPLogEntry_2eproto(this);
        int v8 = *(const CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture **)(CoreNavigation::CLP::LogEntry::LogEntry::default_instance_
                                                                                      + 40);
      }
      CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::MergeFrom(v7, v8);
    }
  }
  return wireless_diagnostics::google::protobuf::internal::ExtensionSet::MergeFrom((CoreNavigation::CLP::LogEntry::LogEntry *)((char *)this + 8), (const CoreNavigation::CLP::LogEntry::LogEntry *)((char *)a2 + 8));
}

void sub_18DF5BA20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::LogEntry::~LogEntry(CoreNavigation::CLP::LogEntry::LogEntry *this)
{
  *(void *)this = &unk_1EDD120E0;
  CoreNavigation::CLP::LogEntry::LogEntry::SharedDtor(this);
  MEMORY[0x192FA59D0]((char *)this + 8);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::LogEntry::~LogEntry(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::LogEntry::SharedDtor(CoreNavigation::CLP::LogEntry::LogEntry *this)
{
  CoreNavigation::CLP::LogEntry::protobuf_AddDesc_CoreNavigationCLPLogEntry_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::LogEntry *)CoreNavigation::CLP::LogEntry::LogEntry::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 4);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 5);
    if (v3)
    {
      int v4 = *(void (**)(void))(*(void *)v3 + 8);
      v4();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::LogEntry::default_instance(CoreNavigation::CLP::LogEntry::LogEntry *this)
{
  return CoreNavigation::CLP::LogEntry::LogEntry::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::LogEntry::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 48) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::LogEntry::New(CoreNavigation::CLP::LogEntry::LogEntry *this)
{
}

void sub_18DF5BBE4(_Unwind_Exception *a1)
{
  MEMORY[0x192FA6240](v1, 0x10A1C400739E6B9);
  _Unwind_Resume(a1);
}

uint64_t CoreNavigation::CLP::LogEntry::LogEntry::Clear(CoreNavigation::CLP::LogEntry::LogEntry *this)
{
  uint64_t result = wireless_diagnostics::google::protobuf::internal::ExtensionSet::Clear((CoreNavigation::CLP::LogEntry::LogEntry *)((char *)this + 8));
  LOBYTE(v3) = *((unsigned char *)this + 52);
  if ((_BYTE)v3)
  {
    if (*((unsigned char *)this + 52))
    {
      uint64_t v4 = *((void *)this + 4);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 44))
        {
          *(_OWORD *)(v4 + 24) = 0u;
          *(_OWORD *)(v4 + 8) = 0u;
        }
        *(_DWORD *)(v4 + 44) = 0;
        int v3 = *((_DWORD *)this + 13);
      }
    }
    if ((v3 & 2) != 0)
    {
      uint64_t result = *((void *)this + 5);
      if (result) {
        uint64_t result = CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::Clear(result);
      }
    }
  }
  *((_DWORD *)this + 13) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::LogEntry::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::LogEntry *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v3 = this;
  uint64_t v4 = (CoreNavigation::CLP::LogEntry::LogEntry *)((char *)this + 8);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
        {
          this = (CoreNavigation::CLP::LogEntry::LogEntry *)wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          uint64_t v6 = (uint64_t)this;
          *((_DWORD *)a2 + 8) = this;
          if (!this) {
            return 1;
          }
        }
        else
        {
          uint64_t v6 = *v5;
          *((_DWORD *)a2 + 8) = v6;
          *((void *)a2 + 1) = v5 + 1;
          if (!v6) {
            return 1;
          }
        }
        if (v6 >> 3 != 1) {
          break;
        }
        int v7 = v6 & 7;
        if (v7 != 2) {
          goto LABEL_18;
        }
        *((_DWORD *)v3 + 13) |= 1u;
        int v8 = (CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp *)*((void *)v3 + 4);
        if (!v8) {
          operator new();
        }
        unsigned int v23 = 0;
        unint64_t v9 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v9 >= *((void *)a2 + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v23))return 0; {
        }
          }
        else
        {
          unsigned int v23 = *v9;
          *((void *)a2 + 1) = v9 + 1;
        }
        int v10 = *((_DWORD *)a2 + 14);
        int v11 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v10 + 1;
        if (v10 >= v11) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp::MergePartialFromCodedStream(v8, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        this = (CoreNavigation::CLP::LogEntry::LogEntry *)wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v12 = *((_DWORD *)a2 + 14);
        BOOL v13 = __OFSUB__(v12, 1);
        int v14 = v12 - 1;
        if (v14 < 0 == v13) {
          *((_DWORD *)a2 + 14) = v14;
        }
        unint64_t v15 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v15 < *((void *)a2 + 2) && *v15 == 34)
        {
          *((void *)a2 + 1) = v15 + 1;
          goto LABEL_33;
        }
      }
      if (v6 >> 3 != 4) {
        break;
      }
      int v7 = v6 & 7;
      if (v7 != 2) {
        goto LABEL_18;
      }
LABEL_33:
      *((_DWORD *)v3 + 13) |= 2u;
      int v16 = (CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *)*((void *)v3 + 5);
      if (!v16) {
        operator new();
      }
      unsigned int v24 = 0;
      int v17 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v17 >= *((void *)a2 + 2) || *v17 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v24)) {
          return 0;
        }
      }
      else
      {
        unsigned int v24 = *v17;
        *((void *)a2 + 1) = v17 + 1;
      }
      int v18 = *((_DWORD *)a2 + 14);
      int v19 = *((_DWORD *)a2 + 15);
      *((_DWORD *)a2 + 14) = v18 + 1;
      if (v18 >= v19) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
      if (!CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::MergePartialFromCodedStream(v16, a2)|| !*((unsigned char *)a2 + 36))
      {
        return 0;
      }
      this = (CoreNavigation::CLP::LogEntry::LogEntry *)wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
      int v20 = *((_DWORD *)a2 + 14);
      BOOL v13 = __OFSUB__(v20, 1);
      int v21 = v20 - 1;
      if (v21 < 0 == v13) {
        *((_DWORD *)a2 + 14) = v21;
      }
      if (*((void *)a2 + 1) == *((void *)a2 + 2)
        && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      }
    }
    int v7 = v6 & 7;
LABEL_18:
    if (v7 == 4) {
      return 1;
    }
    if ((v6 & 0xFFFFFFF8) == 0x10)
    {
      CoreNavigation::CLP::LogEntry::protobuf_AddDesc_CoreNavigationCLPLogEntry_2eproto(this);
      this = (CoreNavigation::CLP::LogEntry::LogEntry *)wireless_diagnostics::google::protobuf::internal::ExtensionSet::ParseField(v4, v6, a2, (const wireless_diagnostics::google::protobuf::MessageLite *)CoreNavigation::CLP::LogEntry::LogEntry::default_instance_);
      if ((this & 1) == 0) {
        return 0;
      }
    }
    else
    {
      this = (CoreNavigation::CLP::LogEntry::LogEntry *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)v6);
      if ((this & 1) == 0) {
        return 0;
      }
    }
  }
}

CoreNavigation::CLP::LogEntry *CoreNavigation::CLP::LogEntry::LogEntry::SerializeWithCachedSizes(CoreNavigation::CLP::LogEntry::LogEntry *this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if (*((unsigned char *)this + 52))
  {
    uint64_t v6 = *((void *)this + 4);
    if (!v6)
    {
      CoreNavigation::CLP::LogEntry::protobuf_AddDesc_CoreNavigationCLPLogEntry_2eproto(this);
      uint64_t v6 = *(void *)(CoreNavigation::CLP::LogEntry::LogEntry::default_instance_ + 32);
    }
    wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
  }
  uint64_t result = (CoreNavigation::CLP::LogEntry *)wireless_diagnostics::google::protobuf::internal::ExtensionSet::SerializeWithCachedSizes((CoreNavigation::CLP::LogEntry::LogEntry *)((char *)this + 8), 2, 3, a2);
  if ((*((unsigned char *)this + 52) & 2) != 0)
  {
    uint64_t v9 = *((void *)this + 5);
    if (!v9)
    {
      CoreNavigation::CLP::LogEntry::protobuf_AddDesc_CoreNavigationCLPLogEntry_2eproto(result);
      uint64_t v9 = *(void *)(CoreNavigation::CLP::LogEntry::LogEntry::default_instance_ + 40);
    }
    return (CoreNavigation::CLP::LogEntry *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v9, a2, v8);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::LogEntry::ByteSize(CoreNavigation::CLP::LogEntry::LogEntry *this)
{
  if (!*((unsigned char *)this + 52))
  {
    int v2 = 0;
    goto LABEL_18;
  }
  if ((*((unsigned char *)this + 52) & 1) == 0)
  {
    int v2 = 0;
    if ((*((unsigned char *)this + 52) & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  int v3 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream **)*((void *)this + 4);
  if (!v3)
  {
    CoreNavigation::CLP::LogEntry::protobuf_AddDesc_CoreNavigationCLPLogEntry_2eproto(0);
    int v3 = *(wireless_diagnostics::google::protobuf::io::CodedOutputStream ***)(CoreNavigation::CLP::LogEntry::LogEntry::default_instance_
                                                                            + 32);
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::LogEntry_TimeStamp::ByteSize(v3);
  int v5 = (int)v4;
  if (v4 >= 0x80) {
    int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
  }
  else {
    int v6 = 1;
  }
  int v2 = v5 + v6 + 1;
  if ((*((_DWORD *)this + 13) & 2) != 0)
  {
LABEL_12:
    int v7 = (CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *)*((void *)this + 5);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::protobuf_AddDesc_CoreNavigationCLPLogEntry_2eproto(0);
      int v7 = *(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture **)(CoreNavigation::CLP::LogEntry::LogEntry::default_instance_
                                                                              + 40);
    }
    int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::ByteSize(v7);
    int v9 = (int)v8;
    if (v8 >= 0x80) {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
    }
    else {
      int v10 = 1;
    }
    v2 += v9 + v10 + 1;
  }
LABEL_18:
  uint64_t result = wireless_diagnostics::google::protobuf::internal::ExtensionSet::ByteSize((CoreNavigation::CLP::LogEntry::LogEntry *)((char *)this + 8))
         + v2;
  *((_DWORD *)this + 12) = result;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::LogEntry::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::LogEntry *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::LogEntry::MergeFrom(this, lpsrc);
}

const CoreNavigation::CLP::LogEntry::LogEntry *CoreNavigation::CLP::LogEntry::LogEntry::CopyFrom(const CoreNavigation::CLP::LogEntry::LogEntry *this, const CoreNavigation::CLP::LogEntry::LogEntry *a2)
{
  if (a2 != this)
  {
    uint64_t v4 = this;
    (*(void (**)(const CoreNavigation::CLP::LogEntry::LogEntry *))(*(void *)this + 32))(this);
    return (const CoreNavigation::CLP::LogEntry::LogEntry *)CoreNavigation::CLP::LogEntry::LogEntry::MergeFrom(v4, a2);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::LogEntry::IsInitialized(CoreNavigation::CLP::LogEntry::LogEntry *this)
{
  return MEMORY[0x1F4181E48]((char *)this + 8);
}

uint64_t CoreNavigation::CLP::LogEntry::LogEntry::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::LogEntry *a2)
{
  if (a2 != (CoreNavigation::CLP::LogEntry::LogEntry *)this)
  {
    uint64_t v2 = *(void *)(this + 32);
    *(void *)(this + 32) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v2;
    uint64_t v3 = *(void *)(this + 40);
    *(void *)(this + 40) = *((void *)a2 + 5);
    *((void *)a2 + 5) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 52);
    *(_DWORD *)(this + 52) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 48);
    *(_DWORD *)(this + 48) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v3;
    JUMPOUT(0x192FA5990);
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::LogEntry::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.LogEntry");
}

uint64_t sub_18DF5C310(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_18DF5C318(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::protobuf_ShutdownFile_CoreNavigationCLPPrivateDataShared_2eproto(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  if (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::Accel::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::Accel::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::Accel::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::Gyro::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::Gyro::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::Gyro::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::Baro::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::Baro::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::Baro::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::PressureSample::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::PressureSample::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::PressureSample::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::Location::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::Location::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::Location::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::MotionState::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::MotionState::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::MotionState::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::Timer::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::Timer::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::Timer::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::MapVector::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::MapVector::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::MapVector::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::Battery::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::Battery::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::Battery::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::MagSample::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::MagSample::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::MagSample::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::Reset::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::Reset::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::Reset::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::StepCount::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::StepCount::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::StepCount::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::Compass::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::Compass::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::Compass::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::WristState::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::WristState::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::WristState::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::WatchState::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::WatchState::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::WatchState::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::default_instance_);
  if (CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate::default_instance_);
  uint64_t result = CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample::default_instance_;
  if (CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample::default_instance_)
  {
    uint64_t v2 = *(uint64_t (**)(void))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample::default_instance_
                             + 8);
    return v2();
  }
  return result;
}

void CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto_impl(CoreNavigation::CLP::LogEntry::PrivateData *this, uint64_t a2, uint64_t a3, const char *a4)
{
}

double CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::TimeStamp(CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *this)
{
  *(void *)this = &unk_1EDD0F200;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD0F200;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::AccelSample(uint64_t this)
{
  *(void *)this = &unk_1EDD0B588;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

{
  *(void *)this = &unk_1EDD0B588;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Accel::Accel(uint64_t this)
{
  *(void *)(this + 40) = 0;
  *(void *)this = &unk_1EDD0EAF8;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

{
  *(void *)(this + 40) = 0;
  *(void *)this = &unk_1EDD0EAF8;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::GyroSample(uint64_t this)
{
  *(void *)this = &unk_1EDD0B420;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

{
  *(void *)this = &unk_1EDD0B420;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Gyro::Gyro(uint64_t this)
{
  *(void *)(this + 40) = 0;
  *(void *)this = &unk_1EDD0EA08;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

{
  *(void *)(this + 40) = 0;
  *(void *)this = &unk_1EDD0EA08;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::BaroSample(void *this)
{
  *this = &unk_1EDD0B330;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

{
  *this = &unk_1EDD0B330;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Baro::Baro(uint64_t this)
{
  *(void *)(this + 40) = 0;
  *(void *)this = &unk_1EDD0E990;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

{
  *(void *)(this + 40) = 0;
  *(void *)this = &unk_1EDD0E990;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::ClientLocationCoordinate(void *this)
{
  *this = &unk_1EDD0DF40;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

{
  *this = &unk_1EDD0DF40;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::DaemonLocation(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation *this)
{
  *(void *)this = &unk_1EDD0BD08;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(void *)&double result = 0xFFFFFFFFLL;
  *(_OWORD *)((char *)this + 120) = xmmword_18E1F3620;
  *((void *)this + 17) = 0;
  *((unsigned char *)this + 144) = 0;
  *((_DWORD *)this + 37) = 0;
  *((_DWORD *)this + 38) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD0BD08;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(void *)&double result = 0xFFFFFFFFLL;
  *(_OWORD *)((char *)this + 120) = xmmword_18E1F3620;
  *((void *)this + 17) = 0;
  *((unsigned char *)this + 144) = 0;
  *((_DWORD *)this + 37) = 0;
  *((_DWORD *)this + 38) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData::MapMatcherData(uint64_t this)
{
  *(_DWORD *)(this + 28) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_1EDD0BEE8;
  *(_WORD *)(this + 24) = 0;
  return this;
}

{
  *(_DWORD *)(this + 28) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_1EDD0BEE8;
  *(_WORD *)(this + 24) = 0;
  return this;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::PressureSample::PressureSample(void *this)
{
  *this = &unk_1EDD0C050;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

{
  *this = &unk_1EDD0C050;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo::ClientSatelliteInfo(uint64_t this)
{
  *(_DWORD *)(this + 36) = 0;
  *(_DWORD *)(this + 40) = 0;
  *(void *)this = &unk_1EDD0D568;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  *(_WORD *)(this + 32) = 0;
  return this;
}

{
  *(_DWORD *)(this + 36) = 0;
  *(_DWORD *)(this + 40) = 0;
  *(void *)this = &unk_1EDD0D568;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  *(_WORD *)(this + 32) = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::DaemonLocationPrivate(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate *this)
{
  *(void *)this = &unk_1EDD0DA18;
  *((void *)this + 36) = 0;
  *((void *)this + 37) = 0;
  *((_DWORD *)this + 76) = 0;
  *((_DWORD *)this + 89) = 0;
  *((_WORD *)this + 56) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((void *)this + 11) = 0;
  *((void *)this + 12) = 0xFFFFFFFFLL;
  *((void *)this + 13) = 0;
  *((void *)this + 45) = 0;
  *(_OWORD *)((char *)this + 130) = 0u;
  *(_OWORD *)((char *)this + 146) = 0u;
  *(_OWORD *)((char *)this + 162) = 0u;
  *(_OWORD *)((char *)this + 178) = 0u;
  *(_OWORD *)((char *)this + 194) = 0u;
  *(_OWORD *)((char *)this + 210) = 0u;
  *(_OWORD *)((char *)this + 226) = 0u;
  *(_OWORD *)((char *)this + 242) = 0u;
  *(_OWORD *)((char *)this + 114) = 0u;
  *((_OWORD *)this + 17) = 0u;
  *(_OWORD *)((char *)this + 258) = 0u;
  *(_OWORD *)((char *)this + 340) = 0u;
  *(_OWORD *)((char *)this + 312) = 0u;
  *(_OWORD *)((char *)this + 328) = 0u;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD0DA18;
  *((void *)this + 36) = 0;
  *((void *)this + 37) = 0;
  *((_DWORD *)this + 76) = 0;
  *((_DWORD *)this + 89) = 0;
  *((_WORD *)this + 56) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((void *)this + 11) = 0;
  *((void *)this + 12) = 0xFFFFFFFFLL;
  *((void *)this + 13) = 0;
  *((void *)this + 45) = 0;
  *(_OWORD *)((char *)this + 130) = 0u;
  *(_OWORD *)((char *)this + 146) = 0u;
  *(_OWORD *)((char *)this + 162) = 0u;
  *(_OWORD *)((char *)this + 178) = 0u;
  *(_OWORD *)((char *)this + 194) = 0u;
  *(_OWORD *)((char *)this + 210) = 0u;
  *(_OWORD *)((char *)this + 226) = 0u;
  *(_OWORD *)((char *)this + 242) = 0u;
  *(_OWORD *)((char *)this + 114) = 0u;
  *((_OWORD *)this + 17) = 0u;
  *(_OWORD *)((char *)this + 258) = 0u;
  *(_OWORD *)((char *)this + 340) = 0u;
  *(_OWORD *)((char *)this + 312) = 0u;
  *(_OWORD *)((char *)this + 328) = 0u;
  return result;
}

double CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo::DaemonLocationPrivate_AltitudeInfo(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo *this)
{
  *(void *)this = &unk_1EDD0E7B0;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *(void *)&double result = 0xFFFFFFFFLL;
  *((void *)this + 4) = 0xFFFFFFFFLL;
  *((_DWORD *)this + 10) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD0E7B0;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *(void *)&double result = 0xFFFFFFFFLL;
  *((void *)this + 4) = 0xFFFFFFFFLL;
  *((_DWORD *)this + 10) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus::TechnologyStatus(uint64_t this)
{
  *(void *)this = &unk_1EDD0C8C0;
  *(_DWORD *)(this + 8) = 0;
  *(unsigned char *)(this + 12) = 0;
  *(void *)(this + 16) = 0;
  return this;
}

{
  *(void *)this = &unk_1EDD0C8C0;
  *(_DWORD *)(this + 8) = 0;
  *(unsigned char *)(this + 12) = 0;
  *(void *)(this + 16) = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed::VehicleSpeed(CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed *this)
{
  *(void *)this = &unk_1EDD0BA38;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((void *)this + 5) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD0BA38;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((void *)this + 5) = 0;
  return result;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading::VehicleHeading(void *this)
{
  *this = &unk_1EDD0C1B8;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

{
  *this = &unk_1EDD0C1B8;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable::XtraFileAvailable(void *this)
{
  *this = &unk_1EDD0D040;
  this[1] = 0;
  this[2] = MEMORY[0x1E4FBA920];
  this[3] = 0;
  return this;
}

{
  *this = &unk_1EDD0D040;
  this[1] = 0;
  this[2] = MEMORY[0x1E4FBA920];
  this[3] = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed::LocationDerivedSpeed(CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed *this)
{
  *(void *)this = &unk_1EDD0D838;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD0D838;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

double CoreNavigation::CLP::LogEntry::PrivateData::Location::Location(CoreNavigation::CLP::LogEntry::PrivateData::Location *this)
{
  *(void *)this = &unk_1EDD0EF30;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *(void *)((char *)this + 29) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD0EF30;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *(void *)((char *)this + 29) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations::BatchedLocations(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_1EDD0C758;
  *(_DWORD *)(this + 24) = 0;
  *(void *)(this + 32) = 0;
  *(void *)(this + 40) = 0;
  *(_DWORD *)(this + 48) = 0;
  *(void *)(this + 56) = 0;
  return this;
}

{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_1EDD0C758;
  *(_DWORD *)(this + 24) = 0;
  *(void *)(this + 32) = 0;
  *(void *)(this + 40) = 0;
  *(_DWORD *)(this + 48) = 0;
  *(void *)(this + 56) = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate::RhythmicGnssStatusUpdate(CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate *this)
{
  *(void *)this = &unk_1EDD0E0A8;
  *((_WORD *)this + 8) = 0;
  *(void *)&double result = 0x100000000;
  *((void *)this + 1) = 0x100000000;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 5) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD0E0A8;
  *((_WORD *)this + 8) = 0;
  *(void *)&double result = 0x100000000;
  *((void *)this + 1) = 0x100000000;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 5) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl::RhythmicStreamingControl(uint64_t this)
{
  *(void *)this = &unk_1EDD0E120;
  *(unsigned char *)(this + 8) = 0;
  *(_DWORD *)(this + 12) = 0;
  *(_DWORD *)(this + 16) = 0;
  return this;
}

{
  *(void *)this = &unk_1EDD0E120;
  *(unsigned char *)(this + 8) = 0;
  *(_DWORD *)(this + 12) = 0;
  *(_DWORD *)(this + 16) = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::MotionActivity(CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity *this)
{
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)this = &unk_1EDD0BF60;
  *(void *)((char *)this + 22) = 0;
  double result = 0.0;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 4) = 0u;
  *((_OWORD *)this + 5) = 0u;
  return result;
}

{
  double result;

  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)this = &unk_1EDD0BF60;
  *(void *)((char *)this + 22) = 0;
  double result = 0.0;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 4) = 0u;
  *((_OWORD *)this + 5) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionState::MotionState(uint64_t this)
{
  *(void *)this = &unk_1EDD0B768;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

{
  *(void *)this = &unk_1EDD0B768;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::WorkoutUpdate(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate *this)
{
  *(void *)this = &unk_1EDD0BC18;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD0BC18;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::MotionStateObserver(uint64_t this)
{
  *(void *)this = &unk_1EDD0D6D0;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

{
  *(void *)this = &unk_1EDD0D6D0;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings::WorkoutSettings(uint64_t this)
{
  uint64_t v1 = MEMORY[0x1E4FBA920];
  *(void *)this = &unk_1EDD0C6E0;
  *(void *)(this + 8) = v1;
  *(void *)(this + 16) = v1;
  *(void *)(this + 24) = 0;
  *(void *)(this + 32) = 0;
  *(_DWORD *)(this + 40) = 0;
  return this;
}

{
  uint64_t v1;

  uint64_t v1 = MEMORY[0x1E4FBA920];
  *(void *)this = &unk_1EDD0C6E0;
  *(void *)(this + 8) = v1;
  *(void *)(this + 16) = v1;
  *(void *)(this + 24) = 0;
  *(void *)(this + 32) = 0;
  *(_DWORD *)(this + 40) = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::WorkoutEvent(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent *this)
{
  *(void *)this = &unk_1EDD0BAB0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 36) = 0u;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD0BAB0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 36) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::MotionStateMediator(uint64_t this)
{
  *(void *)this = &unk_1EDD0D658;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

{
  *(void *)this = &unk_1EDD0D658;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity::MediatedMotionActivity(uint64_t this)
{
  *(_DWORD *)(this + 28) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_1EDD025D8;
  *(unsigned char *)(this + 24) = 0;
  return this;
}

{
  *(_DWORD *)(this + 28) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_1EDD025D8;
  *(unsigned char *)(this + 24) = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics::BodyMetrics(CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics *this)
{
  *(void *)this = &unk_1EDD0B600;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((_DWORD *)this + 14) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD0B600;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((_DWORD *)this + 14) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::Natalimetry(uint64_t this)
{
  *(void *)this = &unk_1EDD0B7E0;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

{
  *(void *)this = &unk_1EDD0B7E0;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::Timer::Timer(void *this)
{
  this[1] = 0;
  this[2] = 0;
  *this = &unk_1EDD0EC60;
  return this;
}

{
  this[1] = 0;
  this[2] = 0;
  *this = &unk_1EDD0EC60;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::DigitalElevationModel(CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel *this)
{
  *(void *)this = &unk_1EDD0DA90;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD0DA90;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

double CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::DirectionOfTravel(CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel *this)
{
  *(void *)this = &unk_1EDD0CC08;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 84) = 0u;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD0CC08;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 84) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapVector::MapVector(uint64_t this)
{
  *(void *)this = &unk_1EDD0F098;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

{
  *(void *)this = &unk_1EDD0F098;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::TunnelBridgeAssistance(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance *this)
{
  *(void *)this = &unk_1EDD0DD60;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 36) = 0u;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD0DD60;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 36) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::TunnelBridgeNotification(uint64_t this)
{
  *(void *)this = &unk_1EDD0E198;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

{
  *(void *)this = &unk_1EDD0E198;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::TunnelEndPointAssistance(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance *this)
{
  *(void *)this = &unk_1EDD0E210;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(void *)((char *)this + 69) = 0;
  *((_OWORD *)this + 5) = 0u;
  *((_OWORD *)this + 6) = 0u;
  *((_OWORD *)this + 7) = 0u;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD0E210;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(void *)((char *)this + 69) = 0;
  *((_OWORD *)this + 5) = 0u;
  *((_OWORD *)this + 6) = 0u;
  *((_OWORD *)this + 7) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::TunnelEndPoint(uint64_t this)
{
  *(void *)this = &unk_1EDD0C140;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

{
  *(void *)this = &unk_1EDD0C140;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData::MapsRouteHintData(CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData *this)
{
  *(void *)this = &unk_1EDD0CC80;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD0CC80;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

double CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::MapMatchingRouteHint(CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint *this)
{
  *(void *)this = &unk_1EDD0D8B0;
  *((void *)this + 7) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 36) = 0u;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD0D8B0;
  *((void *)this + 7) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 36) = 0u;
  return result;
}

double CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::AccessoryVehicleSpeedNotification(CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification *this)
{
  *(void *)this = &unk_1EDD0E6C0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 37) = 0u;
  *((void *)this + 8) = 0;
  *((void *)this + 9) = 0;
  *((void *)this + 7) = 0;
  *((_DWORD *)this + 20) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD0E6C0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 37) = 0u;
  *((void *)this + 8) = 0;
  *((void *)this + 9) = 0;
  *((void *)this + 7) = 0;
  *((_DWORD *)this + 20) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState::ReachabilityState(uint64_t this)
{
  *(_DWORD *)(this + 20) = 0;
  *(_DWORD *)(this + 24) = 0;
  *(void *)this = &unk_1EDD0CE60;
  *(void *)(this + 8) = 0;
  *(_WORD *)(this + 16) = 0;
  return this;
}

{
  *(_DWORD *)(this + 20) = 0;
  *(_DWORD *)(this + 24) = 0;
  *(void *)this = &unk_1EDD0CE60;
  *(void *)(this + 8) = 0;
  *(_WORD *)(this + 16) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Battery::Battery(uint64_t this)
{
  *(void *)this = &unk_1EDD0EDC8;
  *(void *)(this + 8) = 0xBFF0000000000000;
  *(_WORD *)(this + 16) = 0;
  *(unsigned char *)(this + 18) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(void *)(this + 24) = 0;
  *(_DWORD *)(this + 20) = 0;
  return this;
}

{
  *(void *)this = &unk_1EDD0EDC8;
  *(void *)(this + 8) = 0xBFF0000000000000;
  *(_WORD *)(this + 16) = 0;
  *(unsigned char *)(this + 18) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(void *)(this + 24) = 0;
  *(_DWORD *)(this + 20) = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::DeviceStatus(CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus *this)
{
  *(void *)this = &unk_1EDD0B8D0;
  *((void *)this + 7) = 0;
  *((_DWORD *)this + 13) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 34) = 0u;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD0B8D0;
  *((void *)this + 7) = 0;
  *((_DWORD *)this + 13) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 34) = 0u;
  return result;
}

double CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::SignalEnvironment(CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment *this)
{
  *(void *)this = &unk_1EDD0CF50;
  *((void *)this + 1) = 0;
  double result = NAN;
  *((_OWORD *)this + 1) = xmmword_18E1F3630;
  *((_DWORD *)this + 8) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD0CF50;
  *((void *)this + 1) = 0;
  double result = NAN;
  *((_OWORD *)this + 1) = xmmword_18E1F3630;
  *((_DWORD *)this + 8) = 0;
  return result;
}

double CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo::SignalEnvironmentInfo(CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo *this)
{
  *(void *)this = &unk_1EDD0DBF8;
  *(void *)&double result = 0xFFFFFFFFLL;
  *(_OWORD *)((char *)this + 8) = xmmword_18E1F3640;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD0DBF8;
  *(void *)&double result = 0xFFFFFFFFLL;
  *(_OWORD *)((char *)this + 8) = xmmword_18E1F3640;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MagSample::MagSample(uint64_t this)
{
  *(void *)this = &unk_1EDD0F020;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

{
  *(void *)this = &unk_1EDD0F020;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::Magnetometer(uint64_t this)
{
  *(void *)(this + 40) = 0;
  *(void *)this = &unk_1EDD0B948;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

{
  *(void *)(this + 40) = 0;
  *(void *)this = &unk_1EDD0B948;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::Reset::Reset(void *this)
{
  this[1] = 0;
  this[2] = 0;
  *this = &unk_1EDD0EBE8;
  return this;
}

{
  this[1] = 0;
  this[2] = 0;
  *this = &unk_1EDD0EBE8;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace::AccelerometerPace(CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace *this)
{
  *(void *)this = &unk_1EDD0CA28;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD0CA28;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState::FalseStepDetectorState(void *this)
{
  this[1] = 0;
  this[2] = 0;
  *this = &unk_1EDD0DC70;
  return this;
}

{
  this[1] = 0;
  this[2] = 0;
  *this = &unk_1EDD0DC70;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::StepCountEntry(CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry *this)
{
  *(void *)this = &unk_1EDD0C0C8;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((void *)this + 11) = MEMORY[0x1E4FBA920];
  *((_WORD *)this + 48) = 0;
  *((void *)this + 18) = 0;
  *(_OWORD *)((char *)this + 100) = 0u;
  *(_OWORD *)((char *)this + 116) = 0u;
  *((_OWORD *)this + 8) = 0u;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD0C0C8;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((void *)this + 11) = MEMORY[0x1E4FBA920];
  *((_WORD *)this + 48) = 0;
  *((void *)this + 18) = 0;
  *(_OWORD *)((char *)this + 100) = 0u;
  *(_OWORD *)((char *)this + 116) = 0u;
  *((_OWORD *)this + 8) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::StepCount::StepCount(uint64_t this)
{
  *(void *)this = &unk_1EDD0F110;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

{
  *(void *)this = &unk_1EDD0F110;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::MotionTypeVector3(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_1EDD0CDE8;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_1EDD0CDE8;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::MotionTypeDoubleVector4(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 *this)
{
  *(void *)this = &unk_1EDD0DE50;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((void *)this + 5) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD0DE50;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((void *)this + 5) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::MotionTypeCompass(uint64_t this)
{
  *(void *)this = &unk_1EDD0CD70;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  *(void *)(this + 32) = 0xFFFFFFFF00000000;
  *(unsigned char *)(this + 40) = 0;
  *(void *)(this + 64) = 0;
  *(void *)(this + 52) = 0;
  *(void *)(this + 44) = 0;
  *(_DWORD *)(this + 60) = 0;
  return this;
}

{
  *(void *)this = &unk_1EDD0CD70;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  *(void *)(this + 32) = 0xFFFFFFFF00000000;
  *(unsigned char *)(this + 40) = 0;
  *(void *)(this + 64) = 0;
  *(void *)(this + 52) = 0;
  *(void *)(this + 44) = 0;
  *(_DWORD *)(this + 60) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::CompassTypeSample(uint64_t this)
{
  *(_DWORD *)(this + 36) = 0;
  *(_DWORD *)(this + 40) = 0;
  *(void *)this = &unk_1EDD0CB90;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  *(unsigned char *)(this + 32) = 0;
  return this;
}

{
  *(_DWORD *)(this + 36) = 0;
  *(_DWORD *)(this + 40) = 0;
  *(void *)this = &unk_1EDD0CB90;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  *(unsigned char *)(this + 32) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Compass::Compass(uint64_t this)
{
  *(void *)(this + 40) = 0;
  *(void *)this = &unk_1EDD0EE40;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

{
  *(void *)(this + 40) = 0;
  *(void *)this = &unk_1EDD0EE40;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::MotionTypeDeviceMotion(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion *this)
{
  *(void *)this = &unk_1EDD0DCE8;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = -1;
  *((_WORD *)this + 22) = 0;
  *((unsigned char *)this + 46) = 0;
  *((_DWORD *)this + 14) = 0;
  *((void *)this + 6) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD0DCE8;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = -1;
  *((_WORD *)this + 22) = 0;
  *((unsigned char *)this + 46) = 0;
  *((_DWORD *)this + 14) = 0;
  *((void *)this + 6) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus::SensorFusionStatus(uint64_t this)
{
  *(void *)this = &unk_1EDD0D400;
  *(void *)(this + 8) = 0;
  *(_DWORD *)(this + 16) = 0;
  return this;
}

{
  *(void *)this = &unk_1EDD0D400;
  *(void *)(this + 8) = 0;
  *(_DWORD *)(this + 16) = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::DeviceMotionSample(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample *this)
{
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)this = &unk_1EDD0D0B8;
  *((unsigned char *)this + 24) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 28) = 0u;
  *(_OWORD *)((char *)this + 44) = 0u;
  return result;
}

{
  double result;

  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)this = &unk_1EDD0D0B8;
  *((unsigned char *)this + 24) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 28) = 0u;
  *(_OWORD *)((char *)this + 44) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::DeviceMotion(uint64_t this)
{
  *(void *)(this + 40) = 0;
  *(void *)this = &unk_1EDD0B858;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

{
  *(void *)(this + 40) = 0;
  *(void *)this = &unk_1EDD0B858;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::MotionTypeGeomagneticModelData(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData *this)
{
  *(void *)this = &unk_1EDD0E5D0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *((void *)this + 9) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD0E5D0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *((void *)this + 9) = 0;
  return result;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData::GeomagneticModelData(void *this)
{
  this[1] = 0;
  this[2] = 0;
  *this = &unk_1EDD0D7C0;
  return this;
}

{
  this[1] = 0;
  this[2] = 0;
  *this = &unk_1EDD0D7C0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::WifiAccessPoint(uint64_t this)
{
  *(void *)this = &unk_1EDD0C668;
  *(void *)(this + 8) = 0;
  uint64_t v1 = MEMORY[0x1E4FBA920];
  *(_DWORD *)(this + 56) = 0;
  *(void *)(this + 48) = 0;
  *(_DWORD *)(this + 44) = 0;
  *(void *)(this + 24) = 0;
  *(void *)(this + 32) = 0;
  *(void *)(this + 16) = v1;
  *(_WORD *)(this + 40) = 0;
  return this;
}

{
  uint64_t v1;

  *(void *)this = &unk_1EDD0C668;
  *(void *)(this + 8) = 0;
  uint64_t v1 = MEMORY[0x1E4FBA920];
  *(_DWORD *)(this + 56) = 0;
  *(void *)(this + 48) = 0;
  *(_DWORD *)(this + 44) = 0;
  *(void *)(this + 24) = 0;
  *(void *)(this + 32) = 0;
  *(void *)(this + 16) = v1;
  *(_WORD *)(this + 40) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::WifiAssociationState(uint64_t this)
{
  *(unsigned char *)(this + 16) = 0;
  *(void *)this = &unk_1EDD0D9A0;
  *(void *)(this + 8) = 0;
  *(_DWORD *)(this + 20) = 0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

{
  *(unsigned char *)(this + 16) = 0;
  *(void *)this = &unk_1EDD0D9A0;
  *(void *)(this + 8) = 0;
  *(_DWORD *)(this + 20) = 0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::WifiScanResult(uint64_t this)
{
  *(void *)(this + 40) = 0;
  *(void *)this = &unk_1EDD0C230;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

{
  *(void *)(this + 40) = 0;
  *(void *)this = &unk_1EDD0C230;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::WifiNotification(CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification *this)
{
  *(void *)this = &unk_1EDD0C9B0;
  *((_DWORD *)this + 13) = 0;
  *((_DWORD *)this + 14) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 33) = 0u;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD0C9B0;
  *((_DWORD *)this + 13) = 0;
  *((_DWORD *)this + 14) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 33) = 0u;
  return result;
}

double CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction::GnssAvailabilityPrediction(CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction *this)
{
  *(void *)this = &unk_1EDD0E3F0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD0E3F0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::GEOLocationCoordinate2D(void *this)
{
  *this = &unk_1EDD0DDD8;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

{
  *this = &unk_1EDD0DDD8;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection::GEOMapFeatureBuildingSection(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection *this)
{
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)this = &unk_1EDD0E4E0;
  *((_DWORD *)this + 6) = 0;
  *((_DWORD *)this + 21) = 0;
  *((_DWORD *)this + 22) = 0;
  double result = 0.0;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 4) = 0u;
  *((unsigned char *)this + 80) = 0;
  return result;
}

{
  double result;

  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)this = &unk_1EDD0E4E0;
  *((_DWORD *)this + 6) = 0;
  *((_DWORD *)this + 21) = 0;
  *((_DWORD *)this + 22) = 0;
  double result = 0.0;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 4) = 0u;
  *((unsigned char *)this + 80) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding::GEOMapFeatureBuilding(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_1EDD0DB08;
  *(_DWORD *)(this + 24) = 0;
  *(void *)(this + 40) = 0;
  *(void *)(this + 48) = 0;
  *(void *)(this + 32) = 0;
  return this;
}

{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_1EDD0DB08;
  *(_DWORD *)(this + 24) = 0;
  *(void *)(this + 40) = 0;
  *(void *)(this + 48) = 0;
  *(void *)(this + 32) = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::GEOMapBuildingData(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData *this)
{
  *(void *)this = &unk_1EDD0D130;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD0D130;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch::GEOMapFeatureTropicalSavannaBranch(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_1EDD0E828;
  *(_DWORD *)(this + 24) = 0;
  *(void *)(this + 40) = 0;
  *(void *)(this + 48) = 0;
  *(void *)(this + 32) = 0;
  return this;
}

{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_1EDD0E828;
  *(_DWORD *)(this + 24) = 0;
  *(void *)(this + 40) = 0;
  *(void *)(this + 48) = 0;
  *(void *)(this + 32) = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox::GEOMapFeatureTropicalSavannaBoundingBox(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox *this)
{
  *(void *)this = &unk_1EDD0E8A0;
  *((void *)this + 8) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((_DWORD *)this + 14) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD0E8A0;
  *((void *)this + 8) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((_DWORD *)this + 14) = 0;
  return result;
}

double CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::GEOMapFeatureTropicalSavanna(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna *this)
{
  double result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *((void *)this + 9) = 0;
  *(void *)this = &unk_1EDD0E558;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return result;
}

{
  double result;

  double result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *((void *)this + 9) = 0;
  *(void *)this = &unk_1EDD0E558;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures::GEOMapFeatureTropicalSavanna_TreeFeatures(uint64_t this)
{
  *(void *)this = &unk_1EDD0E918;
  *(_WORD *)(this + 8) = 0;
  *(_DWORD *)(this + 12) = 0;
  *(_DWORD *)(this + 16) = 0;
  return this;
}

{
  *(void *)this = &unk_1EDD0E918;
  *(_WORD *)(this + 8) = 0;
  *(_DWORD *)(this + 12) = 0;
  *(_DWORD *)(this + 16) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::GEOMapTropicalSavannaData(uint64_t this)
{
  *(unsigned char *)(this + 40) = 0;
  *(_DWORD *)(this + 44) = 0;
  *(_DWORD *)(this + 48) = 0;
  *(void *)this = &unk_1EDD0E288;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

{
  *(unsigned char *)(this + 40) = 0;
  *(_DWORD *)(this + 44) = 0;
  *(_DWORD *)(this + 48) = 0;
  *(void *)this = &unk_1EDD0E288;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  *(_DWORD *)(this + 32) = 0;
  return this;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation::WatchOrientation(void *this)
{
  this[1] = 0;
  this[2] = 0;
  *this = &unk_1EDD0C938;
  return this;
}

{
  this[1] = 0;
  this[2] = 0;
  *this = &unk_1EDD0C938;
  return this;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::WristState::WristState(void *this)
{
  this[4] = 0;
  this[1] = 0;
  this[2] = 0;
  *this = &unk_1EDD0B510;
  *(void *)((char *)this + 23) = 0;
  return this;
}

{
  this[4] = 0;
  this[1] = 0;
  this[2] = 0;
  *this = &unk_1EDD0B510;
  *(void *)((char *)this + 23) = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::PrivateData::WatchState::WatchState(CoreNavigation::CLP::LogEntry::PrivateData::WatchState *this)
{
  *(void *)this = &unk_1EDD0B498;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD0B498;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 0;
  return result;
}

double CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference::PlaceInference(CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference *this)
{
  *(void *)this = &unk_1EDD0BFD8;
  double result = 0.0;
  *((void *)this + 1) = 0;
  uint64_t v2 = MEMORY[0x1E4FBA920];
  *((void *)this + 2) = MEMORY[0x1E4FBA920];
  *((void *)this + 3) = v2;
  *((void *)this + 4) = 0;
  return result;
}

{
  double result;
  uint64_t v2;

  *(void *)this = &unk_1EDD0BFD8;
  double result = 0.0;
  *((void *)this + 1) = 0;
  uint64_t v2 = MEMORY[0x1E4FBA920];
  *((void *)this + 2) = MEMORY[0x1E4FBA920];
  *((void *)this + 3) = v2;
  *((void *)this + 4) = 0;
  return result;
}

double CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::RoutineVisit(CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit *this)
{
  *(void *)this = &unk_1EDD0B9C0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD0B9C0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  return result;
}

double CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate::OutdoorUpdate(CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate *this)
{
  *(void *)this = &unk_1EDD024E8;
  *((_DWORD *)this + 14) = 0;
  *((void *)this + 6) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(void *)((char *)this + 37) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD024E8;
  *((_DWORD *)this + 14) = 0;
  *((void *)this + 6) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(void *)((char *)this + 37) = 0;
  return result;
}

double CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample::InertialOdometrySample(CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample *this)
{
  *(void *)this = &unk_1EDD02560;
  *((_DWORD *)this + 19) = 0;
  *((_DWORD *)this + 20) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_DWORD *)((char *)this + 71) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD02560;
  *((_DWORD *)this + 19) = 0;
  *((_DWORD *)this + 20) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_DWORD *)((char *)this + 71) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::InitAsDefaultInstance(uint64_t this)
{
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Accel::InitAsDefaultInstance(uint64_t this)
{
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::InitAsDefaultInstance(uint64_t this)
{
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Gyro::InitAsDefaultInstance(uint64_t this)
{
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::InitAsDefaultInstance(uint64_t this)
{
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Baro::InitAsDefaultInstance(uint64_t this)
{
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::InitAsDefaultInstance(uint64_t this)
{
  uint64_t v1 = CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::default_instance_;
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::default_instance_;
  *(void *)(this + 96) = v1;
  return this;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::InitAsDefaultInstance(void *this)
{
  uint64_t v1 = CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::default_instance_;
  this[8] = CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::default_instance_;
  this[11] = CoreNavigation::CLP::LogEntry::PrivateData::PressureSample::default_instance_;
  this[13] = v1;
  this[17] = CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData::default_instance_;
  this[26] = v1;
  this[40] = CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo::default_instance_;
  return this;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::Location::InitAsDefaultInstance(void *this)
{
  uint64_t v1 = CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::default_instance_;
  this[1] = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  this[2] = v1;
  this[3] = CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::default_instance_;
  this[5] = CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus::default_instance_;
  uint64_t v2 = CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading::default_instance_;
  this[7] = CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed::default_instance_;
  this[8] = v2;
  uint64_t v3 = CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed::default_instance_;
  this[10] = CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable::default_instance_;
  this[11] = v3;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::InitAsDefaultInstance(uint64_t this)
{
  uint64_t v1 = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  *(void *)(this + 64) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  *(void *)(this + 80) = v1;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionState::InitAsDefaultInstance(uint64_t this)
{
  uint64_t v1 = CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::default_instance_;
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  *(void *)(this + 16) = v1;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::InitAsDefaultInstance(uint64_t this)
{
  *(void *)(this + 24) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::InitAsDefaultInstance(uint64_t this)
{
  uint64_t v1 = CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::default_instance_;
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  *(void *)(this + 16) = v1;
  return this;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::InitAsDefaultInstance(void *this)
{
  uint64_t v1 = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  this[1] = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  this[2] = v1;
  uint64_t v2 = CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings::default_instance_;
  this[3] = v1;
  this[4] = v2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::InitAsDefaultInstance(uint64_t this)
{
  uint64_t v1 = CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::default_instance_;
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  *(void *)(this + 16) = v1;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity::InitAsDefaultInstance(uint64_t this)
{
  *(void *)(this + 16) = CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::InitAsDefaultInstance(uint64_t this)
{
  uint64_t v1 = CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics::default_instance_;
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  *(void *)(this + 16) = v1;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Timer::InitAsDefaultInstance(uint64_t this)
{
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::InitAsDefaultInstance(uint64_t this)
{
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::InitAsDefaultInstance(uint64_t this)
{
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapVector::InitAsDefaultInstance(uint64_t this)
{
  uint64_t v1 = CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::default_instance_;
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  *(void *)(this + 16) = v1;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::InitAsDefaultInstance(uint64_t this)
{
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::InitAsDefaultInstance(uint64_t this)
{
  uint64_t v1 = CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::default_instance_;
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  *(void *)(this + 16) = v1;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::InitAsDefaultInstance(uint64_t this)
{
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::InitAsDefaultInstance(uint64_t this)
{
  uint64_t v1 = CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::default_instance_;
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  *(void *)(this + 16) = v1;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::InitAsDefaultInstance(uint64_t this)
{
  uint64_t v1 = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  *(void *)(this + 16) = v1;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::InitAsDefaultInstance(uint64_t this)
{
  uint64_t v1 = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  *(void *)(this + 16) = v1;
  return this;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::InitAsDefaultInstance(void *this)
{
  this[1] = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  uint64_t v1 = CoreNavigation::CLP::LogEntry::PrivateData::Battery::default_instance_;
  this[3] = CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState::default_instance_;
  this[4] = v1;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::InitAsDefaultInstance(uint64_t this)
{
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MagSample::InitAsDefaultInstance(uint64_t this)
{
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::InitAsDefaultInstance(uint64_t this)
{
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Reset::InitAsDefaultInstance(uint64_t this)
{
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  return this;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::InitAsDefaultInstance(void *this)
{
  uint64_t v1 = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  this[1] = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  this[2] = v1;
  this[3] = v1;
  this[13] = CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace::default_instance_;
  this[17] = CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::StepCount::InitAsDefaultInstance(uint64_t this)
{
  uint64_t v1 = CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::default_instance_;
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  *(void *)(this + 16) = v1;
  return this;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::InitAsDefaultInstance(void *this)
{
  uint64_t v1 = CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::default_instance_;
  this[1] = CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::default_instance_;
  this[2] = v1;
  this[7] = CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::InitAsDefaultInstance(uint64_t this)
{
  uint64_t v1 = CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::default_instance_;
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  *(void *)(this + 16) = v1;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Compass::InitAsDefaultInstance(uint64_t this)
{
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  return this;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::InitAsDefaultInstance(void *this)
{
  uint64_t v1 = CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::default_instance_;
  this[1] = CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::default_instance_;
  this[2] = v1;
  this[3] = v1;
  this[4] = v1;
  return this;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::InitAsDefaultInstance(void *this)
{
  uint64_t v1 = CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::default_instance_;
  this[1] = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  this[2] = v1;
  this[4] = CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::InitAsDefaultInstance(uint64_t this)
{
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::InitAsDefaultInstance(uint64_t this)
{
  *(void *)(this + 64) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData::InitAsDefaultInstance(uint64_t this)
{
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::InitAsDefaultInstance(uint64_t this)
{
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::InitAsDefaultInstance(uint64_t this)
{
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  return this;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::InitAsDefaultInstance(void *this)
{
  this[1] = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  uint64_t v1 = CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::default_instance_;
  this[3] = CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::default_instance_;
  this[4] = v1;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction::InitAsDefaultInstance(uint64_t this)
{
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::InitAsDefaultInstance(uint64_t this)
{
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  *(void *)(this + 56) = CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::InitAsDefaultInstance(uint64_t this)
{
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox::default_instance_;
  *(void *)(this + 56) = CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::InitAsDefaultInstance(uint64_t this)
{
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WristState::InitAsDefaultInstance(uint64_t this)
{
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  return this;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::WatchState::InitAsDefaultInstance(void *this)
{
  uint64_t v1 = CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation::default_instance_;
  this[1] = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  this[2] = v1;
  this[3] = CoreNavigation::CLP::LogEntry::PrivateData::WristState::default_instance_;
  return this;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::InitAsDefaultInstance(void *this)
{
  uint64_t v1 = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  this[1] = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
  this[2] = v1;
  this[3] = v1;
  this[4] = v1;
  uint64_t v2 = CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::default_instance_;
  this[5] = CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference::default_instance_;
  this[6] = v2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  uint64_t v1 = CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto_once_;
  __dmb(0xBu);
  if (v1 != 2)
  {
    v2[0] = MEMORY[0x1E4FBA938] + 16;
    v2[1] = CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto_impl;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
}

void sub_18DF608F8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationReferenceFrameType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 3;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::LocationType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 0xE;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteConstellation_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 7;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocationFixType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 5;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::GnssModeOfOperation_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 3;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssWakeMode_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 5;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::BatchMode_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 3;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::OperatingMode_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 4;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::PipelineOperatingMode_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 3;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DominantMotionModeType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  int v1 = (int)this;
  uint64_t result = 1;
  if (v1 <= 11804)
  {
    if (v1 > 2009)
    {
      if (((v1 - 2010) > 0x3D || ((1 << (v1 + 38)) & 0x2488004000005401) == 0)
        && ((v1 - 2101) > 0x31 || ((1 << (v1 - 53)) & 0x2000000000011) == 0)
        && (v1 - 3015) >= 2)
      {
        return 0;
      }
      return result;
    }
    if (v1 < 0xC) {
      return result;
    }
    unsigned int v4 = v1 - 41;
    if (v4 <= 0x3B)
    {
      uint64_t v5 = 1 << v4;
      uint64_t v6 = 0x800000003F08801;
      goto LABEL_33;
    }
    return 0;
  }
  if (v1 <= 15651)
  {
    if (v1 > 15329)
    {
      if ((v1 - 15562) <= 0x3A && ((1 << (v1 + 54)) & 0x401000040000001) != 0
        || (v1 - 15330) <= 0x1E && ((1 << (v1 + 30)) & 0x40100001) != 0)
      {
        return result;
      }
      int v3 = 15460;
    }
    else if (v1 <= 15054)
    {
      if (v1 == 11805 || v1 == 12150) {
        return result;
      }
      int v3 = 15030;
    }
    else
    {
      if ((v1 - 15100) <= 0x32 && ((1 << (v1 + 4)) & 0x4000000000401) != 0
        || (v1 - 15230) <= 0x19 && ((1 << (v1 - 126)) & 0x2000401) != 0)
      {
        return result;
      }
      int v3 = 15055;
    }
    goto LABEL_51;
  }
  if (v1 > 18199)
  {
    if (v1 > 19149)
    {
      if (v1 <= 90602)
      {
        if (v1 == 19150) {
          return result;
        }
        int v3 = 19160;
      }
      else
      {
        if (v1 == 90603 || v1 == 515621) {
          return result;
        }
        int v3 = 515652;
      }
    }
    else
    {
      if ((v1 - 18200) <= 0x28 && ((1 << (v1 - 24)) & 0x10002000001) != 0
        || v1 == 19030)
      {
        return result;
      }
      int v3 = 19090;
    }
    goto LABEL_51;
  }
  if (v1 > 15732)
  {
    if (v1 == 15733 || v1 == 17150) {
      return result;
    }
    int v3 = 18070;
LABEL_51:
    if (v1 == v3) {
      return result;
    }
    return 0;
  }
  unsigned int v7 = v1 - 15652;
  if (v7 > 0x3A) {
    return 0;
  }
  uint64_t v5 = 1 << v7;
  uint64_t v6 = 0x400000000840101;
LABEL_33:
  if ((v5 & v6) == 0) {
    return 0;
  }
  return result;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 4 || this == 1001;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::BatteryChargerType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 5;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentFidelityLevel_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 4;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompassCalibrationLevel_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return (this + 1) < 8;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionMode_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 5;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPointMode_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 4;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::WifiRfBand_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 4;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::WifiScanType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 0xF;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::WifiNotificationType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 0xF;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::LocationServicesEnabled_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 4;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::DataAvailability_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 3;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::IndoorOutdoorType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 3;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::IndoorOutdoorConfidence_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 4;
}

double CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *this)
{
  double result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::TimeStamp(CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *this, const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *a2)
{
  *(void *)this = &unk_1EDD0F200;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(this, a2);
  return this;
}

void sub_18DF60D68(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *this, const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 36);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 36))
    {
      double result = *((double *)a2 + 1);
      *((_DWORD *)this + 9) |= 1u;
      *((double *)this + 1) = result;
      int v5 = *((_DWORD *)a2 + 9);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          return result;
        }
        goto LABEL_7;
      }
    }
    else if ((*((unsigned char *)a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    double result = *((double *)a2 + 2);
    *((_DWORD *)this + 9) |= 2u;
    *((double *)this + 2) = result;
    if ((*((_DWORD *)a2 + 9) & 4) == 0) {
      return result;
    }
LABEL_7:
    double result = *((double *)a2 + 3);
    *((_DWORD *)this + 9) |= 4u;
    *((double *)this + 3) = result;
  }
  return result;
}

void sub_18DF60E50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::~TimeStamp(CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *this)
{
  *(void *)this = &unk_1EDD0F200;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::~TimeStamp(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 32) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::New(CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 36))
  {
    *(void *)(this + 8) = 0;
    *(void *)(this + 16) = 0;
    *(void *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 36) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  do
  {
    while (1)
    {
      while (1)
      {
        unsigned int v4 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v4;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((void *)a2 + 1) = v4 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v6 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_27;
        }
        unint64_t v11 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0) {
          return 0;
        }
        *((void *)this + 1) = v11;
        *((_DWORD *)this + 9) |= 1u;
        int v8 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v8 < *((void *)a2 + 2) && *v8 == 17)
        {
          *((void *)a2 + 1) = v8 + 1;
LABEL_17:
          unint64_t v11 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0) {
            return 0;
          }
          *((void *)this + 2) = v11;
          *((_DWORD *)this + 9) |= 2u;
          int v9 = (unsigned char *)*((void *)a2 + 1);
          if ((unint64_t)v9 < *((void *)a2 + 2) && *v9 == 25)
          {
            *((void *)a2 + 1) = v9 + 1;
            goto LABEL_21;
          }
        }
      }
      if (v6 == 2)
      {
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_27;
        }
        goto LABEL_17;
      }
      if (v6 != 3)
      {
        int v7 = TagFallback & 7;
        goto LABEL_27;
      }
      int v7 = TagFallback & 7;
      if (v7 == 1) {
        break;
      }
LABEL_27:
      if (v7 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
    }
      }
LABEL_21:
    unint64_t v11 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0) {
      return 0;
    }
    *((void *)this + 3) = v11;
    *((_DWORD *)this + 9) |= 4u;
  }
  while (*((void *)a2 + 1) != *((void *)a2 + 2)
       || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10));
  *((_DWORD *)a2 + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)a2 + 36) = 1;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = this;
  int v5 = *(_DWORD *)(this + 36);
  if ((v5 & 1) == 0)
  {
    if ((v5 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v4 + 16), a3);
    if ((*(_DWORD *)(v4 + 36) & 4) == 0) {
      return this;
    }
    goto LABEL_7;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
  int v5 = *(_DWORD *)(v4 + 36);
  if ((v5 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 4) == 0) {
    return this;
  }
LABEL_7:
  double v6 = *(double *)(v4 + 24);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, v6, a3);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *this)
{
  uint64_t v1 = *((unsigned __int8 *)this + 36);
  if (*((unsigned char *)this + 36))
  {
    unsigned int v2 = ((int)(v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0) {
      v2 += 9;
    }
    if ((v1 & 4) != 0) {
      uint64_t v1 = v2 + 9;
    }
    else {
      uint64_t v1 = v2;
    }
  }
  *((_DWORD *)this + 8) = v1;
  return v1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *this, const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::Swap(CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *this, CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    uint64_t v3 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    double result = *((double *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    *((double *)a2 + 3) = result;
    int v5 = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v5;
    int v6 = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v6;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.TimeStamp");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(void *)(this + 24) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::AccelSample *CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::AccelSample(CoreNavigation::CLP::LogEntry::PrivateData::AccelSample *this, const CoreNavigation::CLP::LogEntry::PrivateData::AccelSample *a2)
{
  *(void *)this = &unk_1EDD0B588;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::MergeFrom(this, a2);
  return this;
}

void sub_18DF6142C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

float CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::AccelSample *this, const CoreNavigation::CLP::LogEntry::PrivateData::AccelSample *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 32);
  if (!(_BYTE)v5) {
    return *(float *)&v4;
  }
  if (*((unsigned char *)a2 + 32))
  {
    *((_DWORD *)this + 8) |= 1u;
    int v6 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
    if (!v6) {
      operator new();
    }
    int v7 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)a2 + 1);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      int v7 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::default_instance_
                                                                           + 8);
    }
    double v4 = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v6, v7);
    int v5 = *((_DWORD *)a2 + 8);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
LABEL_16:
      LODWORD(v4) = *((_DWORD *)a2 + 5);
      *((_DWORD *)this + 8) |= 4u;
      *((_DWORD *)this + 5) = LODWORD(v4);
      if ((*((_DWORD *)a2 + 8) & 8) != 0) {
        goto LABEL_8;
      }
      return *(float *)&v4;
    }
  }
  else if ((*((unsigned char *)a2 + 32) & 2) == 0)
  {
    goto LABEL_6;
  }
  LODWORD(v4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 8) |= 2u;
  *((_DWORD *)this + 4) = LODWORD(v4);
  int v5 = *((_DWORD *)a2 + 8);
  if ((v5 & 4) != 0) {
    goto LABEL_16;
  }
LABEL_7:
  if ((v5 & 8) != 0)
  {
LABEL_8:
    LODWORD(v4) = *((_DWORD *)a2 + 6);
    *((_DWORD *)this + 8) |= 8u;
    *((_DWORD *)this + 6) = LODWORD(v4);
  }
  return *(float *)&v4;
}

void sub_18DF615A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::~AccelSample(CoreNavigation::CLP::LogEntry::PrivateData::AccelSample *this)
{
  *(void *)this = &unk_1EDD0B588;
  CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::~AccelSample(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::AccelSample *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::AccelSample *)CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2)
    {
      uint64_t v3 = *(void (**)(void))(*(void *)v2 + 8);
      v3();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::AccelSample *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 28) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::New(CoreNavigation::CLP::LogEntry::PrivateData::AccelSample *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 32))
  {
    if (*(unsigned char *)(this + 32))
    {
      uint64_t v1 = *(void *)(this + 8);
      if (v1)
      {
        if (*(unsigned char *)(v1 + 36))
        {
          *(void *)(v1 + 8) = 0;
          *(void *)(v1 + 16) = 0;
          *(void *)(v1 + 24) = 0;
        }
        *(_DWORD *)(v1 + 36) = 0;
      }
    }
    *(void *)(this + 16) = 0;
    *(_DWORD *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 32) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::AccelSample *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (2)
  {
    double v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_19;
        }
        *((_DWORD *)this + 8) |= 1u;
        int v7 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
        if (!v7) {
          operator new();
        }
        unsigned int v18 = 0;
        int v8 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v18))return 0; {
        }
          }
        else
        {
          unsigned int v18 = *v8;
          *((void *)a2 + 1) = v8 + 1;
        }
        int v9 = *((_DWORD *)a2 + 14);
        int v10 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v9 + 1;
        if (v9 >= v10) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream(v7, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v11 = *((_DWORD *)a2 + 14);
        BOOL v12 = __OFSUB__(v11, 1);
        int v13 = v11 - 1;
        if (v13 < 0 == v12) {
          *((_DWORD *)a2 + 14) = v13;
        }
        int v14 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v14 >= *((void *)a2 + 2) || *v14 != 21) {
          continue;
        }
        *((void *)a2 + 1) = v14 + 1;
        goto LABEL_31;
      case 2u:
        int v6 = TagFallback & 7;
        if (v6 != 5) {
          goto LABEL_19;
        }
LABEL_31:
        unsigned int v18 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v18) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 4) = v18;
        *((_DWORD *)this + 8) |= 2u;
        unint64_t v15 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v15 >= *((void *)a2 + 2) || *v15 != 29) {
          continue;
        }
        *((void *)a2 + 1) = v15 + 1;
LABEL_35:
        unsigned int v18 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v18) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 5) = v18;
        *((_DWORD *)this + 8) |= 4u;
        int v16 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v16 >= *((void *)a2 + 2) || *v16 != 37) {
          continue;
        }
        *((void *)a2 + 1) = v16 + 1;
LABEL_39:
        unsigned int v18 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v18))
        {
          *((_DWORD *)this + 6) = v18;
          *((_DWORD *)this + 8) |= 8u;
          if (*((void *)a2 + 1) == *((void *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        int v6 = TagFallback & 7;
        if (v6 == 5) {
          goto LABEL_35;
        }
        goto LABEL_19;
      case 4u:
        int v6 = TagFallback & 7;
        if (v6 != 5) {
          goto LABEL_19;
        }
        goto LABEL_39;
      default:
        int v6 = TagFallback & 7;
LABEL_19:
        if (v6 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 32);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_10:
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(float *)(v5 + 20), a3);
      if ((*(_DWORD *)(v5 + 32) & 8) == 0) {
        return this;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(float *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 4) != 0) {
    goto LABEL_10;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return this;
  }
LABEL_11:
  float v8 = *(float *)(v5 + 24);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, v8, a3);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::AccelSample *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 32);
  if ((_BYTE)v2)
  {
    if (*((unsigned char *)this + 32))
    {
      uint64_t v5 = *((void *)this + 1);
      if (!v5)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
        uint64_t v5 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::default_instance_ + 8);
      }
      int v6 = *(unsigned __int8 *)(v5 + 36);
      if (*(unsigned char *)(v5 + 36))
      {
        int v7 = (v6 << 31 >> 31) & 9;
        if ((v6 & 2) != 0) {
          v7 += 9;
        }
        if ((v6 & 4) != 0) {
          int v6 = v7 + 9;
        }
        else {
          int v6 = v7;
        }
      }
      *(_DWORD *)(v5 + 32) = v6;
      unsigned int v3 = v6 + 2;
      int v2 = *((_DWORD *)this + 8);
    }
    else
    {
      unsigned int v3 = 0;
    }
    if ((v2 & 2) != 0) {
      v3 += 5;
    }
    if ((v2 & 4) != 0) {
      v3 += 5;
    }
    if ((v2 & 8) != 0) {
      uint64_t result = v3 + 5;
    }
    else {
      uint64_t result = v3;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  *((_DWORD *)this + 7) = result;
  return result;
}

float CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::AccelSample *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::MergeFrom(this, lpsrc);
}

float CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::AccelSample *this, const CoreNavigation::CLP::LogEntry::PrivateData::AccelSample *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::AccelSample *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::AccelSample *this)
{
  return 1;
}

float CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::Swap(CoreNavigation::CLP::LogEntry::PrivateData::AccelSample *this, CoreNavigation::CLP::LogEntry::PrivateData::AccelSample *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    int v3 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v3;
    int v4 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v4;
    float result = *((float *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((float *)a2 + 6) = result;
    LODWORD(v2) = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
    LODWORD(v2) = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.AccelSample");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Accel::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 40) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::Accel *CoreNavigation::CLP::LogEntry::PrivateData::Accel::Accel(CoreNavigation::CLP::LogEntry::PrivateData::Accel *this, const CoreNavigation::CLP::LogEntry::PrivateData::Accel *a2)
{
  *((void *)this + 5) = 0;
  *(void *)this = &unk_1EDD0EAF8;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::Accel::MergeFrom(this, a2);
  return this;
}

void sub_18DF61E1C(_Unwind_Exception *a1)
{
  sub_18DF0C324(v1 + 2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::Accel::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::Accel *this, const CoreNavigation::CLP::LogEntry::PrivateData::Accel *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  int v4 = (CoreNavigation::CLP::LogEntry::PrivateData *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::Accel *)((char *)this + 16));
  if (*((int *)a2 + 6) >= 1)
  {
    uint64_t v6 = 0;
    do
    {
      int v7 = *(const CoreNavigation::CLP::LogEntry::PrivateData::AccelSample **)(*((void *)a2 + 2) + 8 * v6);
      int v8 = *((_DWORD *)this + 7);
      uint64_t v9 = *((int *)this + 6);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)this + 8))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::Accel *)((char *)this + 16));
          int v8 = *((_DWORD *)this + 7);
        }
        *((_DWORD *)this + 7) = v8 + 1;
        operator new();
      }
      uint64_t v10 = *((void *)this + 2);
      *((_DWORD *)this + 6) = v9 + 1;
      *(float *)&double result = CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::MergeFrom(*(CoreNavigation::CLP::LogEntry::PrivateData::AccelSample **)(v10 + 8 * v9), v7);
      ++v6;
    }
    while (v6 < *((int *)a2 + 6));
  }
  if (*((unsigned char *)a2 + 44))
  {
    *((_DWORD *)this + 11) |= 1u;
    int v11 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
    if (!v11) {
      operator new();
    }
    BOOL v12 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)a2 + 1);
    if (!v12)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(v4);
      BOOL v12 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::Accel::default_instance_
                                                                            + 8);
    }
    return CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v11, v12);
  }
  return result;
}

void sub_18DF62020(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::Accel::~Accel(CoreNavigation::CLP::LogEntry::PrivateData::Accel *this)
{
  *(void *)this = &unk_1EDD0EAF8;
  CoreNavigation::CLP::LogEntry::PrivateData::Accel::SharedDtor(this);
  sub_18DF0C324((uint64_t *)this + 2);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::Accel::~Accel(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::PrivateData::Accel::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::Accel *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::Accel *)CoreNavigation::CLP::LogEntry::PrivateData::Accel::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2)
    {
      int v3 = *(void (**)(void))(*(void *)v2 + 8);
      v3();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Accel::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::Accel *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::Accel::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Accel::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 40) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::Accel::New(CoreNavigation::CLP::LogEntry::PrivateData::Accel *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Accel::Clear(CoreNavigation::CLP::LogEntry::PrivateData::Accel *this)
{
  if (*((unsigned char *)this + 44))
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2)
    {
      if (*(unsigned char *)(v2 + 36))
      {
        *(void *)(v2 + 8) = 0;
        *(void *)(v2 + 16) = 0;
        *(void *)(v2 + 24) = 0;
      }
      *(_DWORD *)(v2 + 36) = 0;
    }
  }
  uint64_t result = sub_18DF0C208((uint64_t)this + 16);
  *((_DWORD *)this + 11) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Accel::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::Accel *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (CoreNavigation::CLP::LogEntry::PrivateData::Accel *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v5;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((void *)a2 + 1) = v5 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_18;
        }
        *((_DWORD *)this + 11) |= 1u;
        int v8 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
        if (!v8) {
          operator new();
        }
        unsigned int v27 = 0;
        uint64_t v9 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v9 >= *((void *)a2 + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v27))return 0; {
        }
          }
        else
        {
          unsigned int v27 = *v9;
          *((void *)a2 + 1) = v9 + 1;
        }
        int v10 = *((_DWORD *)a2 + 14);
        int v11 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v10 + 1;
        if (v10 >= v11) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream(v8, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v12 = *((_DWORD *)a2 + 14);
        BOOL v13 = __OFSUB__(v12, 1);
        int v14 = v12 - 1;
        if (v14 < 0 == v13) {
          *((_DWORD *)a2 + 14) = v14;
        }
        unint64_t v15 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v15 < *((void *)a2 + 2) && *v15 == 18) {
          goto LABEL_29;
        }
      }
      if (TagFallback >> 3 != 2) {
        break;
      }
      int v7 = TagFallback & 7;
      if (v7 != 2) {
        goto LABEL_18;
      }
      while (1)
      {
        int v16 = *((_DWORD *)this + 7);
        uint64_t v17 = *((int *)this + 6);
        if ((int)v17 >= v16)
        {
          if (v16 == *((_DWORD *)this + 8))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
            int v16 = *((_DWORD *)this + 7);
          }
          *((_DWORD *)this + 7) = v16 + 1;
          operator new();
        }
        uint64_t v18 = *((void *)this + 2);
        *((_DWORD *)this + 6) = v17 + 1;
        int v19 = *(CoreNavigation::CLP::LogEntry::PrivateData::AccelSample **)(v18 + 8 * v17);
        unsigned int v28 = 0;
        int v20 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v20 >= *((void *)a2 + 2) || *v20 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v28))return 0; {
        }
          }
        else
        {
          unsigned int v28 = *v20;
          *((void *)a2 + 1) = v20 + 1;
        }
        int v21 = *((_DWORD *)a2 + 14);
        int v22 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v21 + 1;
        if (v21 >= v22) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::MergePartialFromCodedStream(v19, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v23 = *((_DWORD *)a2 + 14);
        BOOL v13 = __OFSUB__(v23, 1);
        int v24 = v23 - 1;
        if (v24 < 0 == v13) {
          *((_DWORD *)a2 + 14) = v24;
        }
        unint64_t v15 = (unsigned char *)*((void *)a2 + 1);
        int v25 = (unsigned char *)*((void *)a2 + 2);
        if (v15 >= v25 || *v15 != 18) {
          break;
        }
LABEL_29:
        *((void *)a2 + 1) = v15 + 1;
      }
      if (v15 == v25 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      }
    }
    int v7 = TagFallback & 7;
LABEL_18:
    if (v7 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Accel::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(unsigned char *)(this + 44))
  {
    uint64_t v6 = *(void *)(this + 8);
    if (!v6)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      uint64_t v6 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::Accel::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
  }
  if (*(int *)(v5 + 24) >= 1)
  {
    uint64_t v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(*(void *)(v5 + 16) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 24));
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Accel::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::Accel *this)
{
  if (*((unsigned char *)this + 44))
  {
    uint64_t v3 = *((void *)this + 1);
    if (!v3)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      uint64_t v3 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::Accel::default_instance_ + 8);
    }
    int v4 = *(unsigned __int8 *)(v3 + 36);
    if (*(unsigned char *)(v3 + 36))
    {
      int v5 = (v4 << 31 >> 31) & 9;
      if ((v4 & 2) != 0) {
        v5 += 9;
      }
      if ((v4 & 4) != 0) {
        int v4 = v5 + 9;
      }
      else {
        int v4 = v5;
      }
    }
    *(_DWORD *)(v3 + 32) = v4;
    int v2 = v4 + 2;
  }
  else
  {
    int v2 = 0;
  }
  int v6 = *((_DWORD *)this + 6);
  uint64_t v7 = (v6 + v2);
  if (v6 >= 1)
  {
    uint64_t v8 = 0;
    do
      uint64_t v7 = v7
         + CoreNavigation::CLP::LogEntry::PrivateData::AccelSample::ByteSize(*(CoreNavigation::CLP::LogEntry::PrivateData::AccelSample **)(*((void *)this + 2) + 8 * v8++))
         + 1;
    while (v8 < *((int *)this + 6));
  }
  *((_DWORD *)this + 10) = v7;
  return v7;
}

double CoreNavigation::CLP::LogEntry::PrivateData::Accel::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::Accel *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::Accel::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::Accel::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::Accel *this, const CoreNavigation::CLP::LogEntry::PrivateData::Accel *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::Accel *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::Accel::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Accel::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::Accel *this)
{
  return 1;
}

CoreNavigation::CLP::LogEntry::PrivateData::Accel *CoreNavigation::CLP::LogEntry::PrivateData::Accel::Swap(CoreNavigation::CLP::LogEntry::PrivateData::Accel *this, CoreNavigation::CLP::LogEntry::PrivateData::Accel *a2)
{
  if (a2 != this)
  {
    uint64_t v3 = this;
    uint64_t v4 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v4;
    this = (CoreNavigation::CLP::LogEntry::PrivateData::Accel *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    int v5 = *((_DWORD *)v3 + 11);
    *((_DWORD *)v3 + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v5;
    int v6 = *((_DWORD *)v3 + 10);
    *((_DWORD *)v3 + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v6;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::Accel::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.Accel");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(void *)(this + 24) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::GyroSample *CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::GyroSample(CoreNavigation::CLP::LogEntry::PrivateData::GyroSample *this, const CoreNavigation::CLP::LogEntry::PrivateData::GyroSample *a2)
{
  *(void *)this = &unk_1EDD0B420;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::MergeFrom(this, a2);
  return this;
}

void sub_18DF628E8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

float CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GyroSample *this, const CoreNavigation::CLP::LogEntry::PrivateData::GyroSample *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 32);
  if (!(_BYTE)v5) {
    return *(float *)&v4;
  }
  if (*((unsigned char *)a2 + 32))
  {
    *((_DWORD *)this + 8) |= 1u;
    int v6 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
    if (!v6) {
      operator new();
    }
    uint64_t v7 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)a2 + 1);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      uint64_t v7 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::default_instance_
                                                                           + 8);
    }
    double v4 = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v6, v7);
    int v5 = *((_DWORD *)a2 + 8);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
LABEL_16:
      LODWORD(v4) = *((_DWORD *)a2 + 5);
      *((_DWORD *)this + 8) |= 4u;
      *((_DWORD *)this + 5) = LODWORD(v4);
      if ((*((_DWORD *)a2 + 8) & 8) != 0) {
        goto LABEL_8;
      }
      return *(float *)&v4;
    }
  }
  else if ((*((unsigned char *)a2 + 32) & 2) == 0)
  {
    goto LABEL_6;
  }
  LODWORD(v4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 8) |= 2u;
  *((_DWORD *)this + 4) = LODWORD(v4);
  int v5 = *((_DWORD *)a2 + 8);
  if ((v5 & 4) != 0) {
    goto LABEL_16;
  }
LABEL_7:
  if ((v5 & 8) != 0)
  {
LABEL_8:
    LODWORD(v4) = *((_DWORD *)a2 + 6);
    *((_DWORD *)this + 8) |= 8u;
    *((_DWORD *)this + 6) = LODWORD(v4);
  }
  return *(float *)&v4;
}

void sub_18DF62A60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::~GyroSample(CoreNavigation::CLP::LogEntry::PrivateData::GyroSample *this)
{
  *(void *)this = &unk_1EDD0B420;
  CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::~GyroSample(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::GyroSample *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::GyroSample *)CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2)
    {
      uint64_t v3 = *(void (**)(void))(*(void *)v2 + 8);
      v3();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::GyroSample *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 28) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::New(CoreNavigation::CLP::LogEntry::PrivateData::GyroSample *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 32))
  {
    if (*(unsigned char *)(this + 32))
    {
      uint64_t v1 = *(void *)(this + 8);
      if (v1)
      {
        if (*(unsigned char *)(v1 + 36))
        {
          *(void *)(v1 + 8) = 0;
          *(void *)(v1 + 16) = 0;
          *(void *)(v1 + 24) = 0;
        }
        *(_DWORD *)(v1 + 36) = 0;
      }
    }
    *(void *)(this + 16) = 0;
    *(_DWORD *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 32) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::GyroSample *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (2)
  {
    double v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_19;
        }
        *((_DWORD *)this + 8) |= 1u;
        uint64_t v7 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
        if (!v7) {
          operator new();
        }
        unsigned int v18 = 0;
        uint64_t v8 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v18))return 0; {
        }
          }
        else
        {
          unsigned int v18 = *v8;
          *((void *)a2 + 1) = v8 + 1;
        }
        int v9 = *((_DWORD *)a2 + 14);
        int v10 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v9 + 1;
        if (v9 >= v10) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream(v7, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v11 = *((_DWORD *)a2 + 14);
        BOOL v12 = __OFSUB__(v11, 1);
        int v13 = v11 - 1;
        if (v13 < 0 == v12) {
          *((_DWORD *)a2 + 14) = v13;
        }
        int v14 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v14 >= *((void *)a2 + 2) || *v14 != 21) {
          continue;
        }
        *((void *)a2 + 1) = v14 + 1;
        goto LABEL_31;
      case 2u:
        int v6 = TagFallback & 7;
        if (v6 != 5) {
          goto LABEL_19;
        }
LABEL_31:
        unsigned int v18 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v18) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 4) = v18;
        *((_DWORD *)this + 8) |= 2u;
        unint64_t v15 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v15 >= *((void *)a2 + 2) || *v15 != 29) {
          continue;
        }
        *((void *)a2 + 1) = v15 + 1;
LABEL_35:
        unsigned int v18 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v18) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 5) = v18;
        *((_DWORD *)this + 8) |= 4u;
        int v16 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v16 >= *((void *)a2 + 2) || *v16 != 37) {
          continue;
        }
        *((void *)a2 + 1) = v16 + 1;
LABEL_39:
        unsigned int v18 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v18))
        {
          *((_DWORD *)this + 6) = v18;
          *((_DWORD *)this + 8) |= 8u;
          if (*((void *)a2 + 1) == *((void *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        int v6 = TagFallback & 7;
        if (v6 == 5) {
          goto LABEL_35;
        }
        goto LABEL_19;
      case 4u:
        int v6 = TagFallback & 7;
        if (v6 != 5) {
          goto LABEL_19;
        }
        goto LABEL_39;
      default:
        int v6 = TagFallback & 7;
LABEL_19:
        if (v6 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 32);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_10:
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(float *)(v5 + 20), a3);
      if ((*(_DWORD *)(v5 + 32) & 8) == 0) {
        return this;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(float *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 4) != 0) {
    goto LABEL_10;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return this;
  }
LABEL_11:
  float v8 = *(float *)(v5 + 24);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, v8, a3);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::GyroSample *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 32);
  if ((_BYTE)v2)
  {
    if (*((unsigned char *)this + 32))
    {
      uint64_t v5 = *((void *)this + 1);
      if (!v5)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
        uint64_t v5 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::default_instance_ + 8);
      }
      int v6 = *(unsigned __int8 *)(v5 + 36);
      if (*(unsigned char *)(v5 + 36))
      {
        int v7 = (v6 << 31 >> 31) & 9;
        if ((v6 & 2) != 0) {
          v7 += 9;
        }
        if ((v6 & 4) != 0) {
          int v6 = v7 + 9;
        }
        else {
          int v6 = v7;
        }
      }
      *(_DWORD *)(v5 + 32) = v6;
      unsigned int v3 = v6 + 2;
      int v2 = *((_DWORD *)this + 8);
    }
    else
    {
      unsigned int v3 = 0;
    }
    if ((v2 & 2) != 0) {
      v3 += 5;
    }
    if ((v2 & 4) != 0) {
      v3 += 5;
    }
    if ((v2 & 8) != 0) {
      uint64_t result = v3 + 5;
    }
    else {
      uint64_t result = v3;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  *((_DWORD *)this + 7) = result;
  return result;
}

float CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GyroSample *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::MergeFrom(this, lpsrc);
}

float CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::GyroSample *this, const CoreNavigation::CLP::LogEntry::PrivateData::GyroSample *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::GyroSample *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::GyroSample *this)
{
  return 1;
}

float CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::Swap(CoreNavigation::CLP::LogEntry::PrivateData::GyroSample *this, CoreNavigation::CLP::LogEntry::PrivateData::GyroSample *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    int v3 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v3;
    int v4 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v4;
    float result = *((float *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((float *)a2 + 6) = result;
    LODWORD(v2) = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
    LODWORD(v2) = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.GyroSample");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Gyro::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 40) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::Gyro *CoreNavigation::CLP::LogEntry::PrivateData::Gyro::Gyro(CoreNavigation::CLP::LogEntry::PrivateData::Gyro *this, const CoreNavigation::CLP::LogEntry::PrivateData::Gyro *a2)
{
  *((void *)this + 5) = 0;
  *(void *)this = &unk_1EDD0EA08;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::Gyro::MergeFrom(this, a2);
  return this;
}

void sub_18DF632D8(_Unwind_Exception *a1)
{
  sub_18DF0C324(v1 + 2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::Gyro::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::Gyro *this, const CoreNavigation::CLP::LogEntry::PrivateData::Gyro *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  int v4 = (CoreNavigation::CLP::LogEntry::PrivateData *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::Gyro *)((char *)this + 16));
  if (*((int *)a2 + 6) >= 1)
  {
    uint64_t v6 = 0;
    do
    {
      int v7 = *(const CoreNavigation::CLP::LogEntry::PrivateData::GyroSample **)(*((void *)a2 + 2) + 8 * v6);
      int v8 = *((_DWORD *)this + 7);
      uint64_t v9 = *((int *)this + 6);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)this + 8))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::Gyro *)((char *)this + 16));
          int v8 = *((_DWORD *)this + 7);
        }
        *((_DWORD *)this + 7) = v8 + 1;
        operator new();
      }
      uint64_t v10 = *((void *)this + 2);
      *((_DWORD *)this + 6) = v9 + 1;
      *(float *)&double result = CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::MergeFrom(*(CoreNavigation::CLP::LogEntry::PrivateData::GyroSample **)(v10 + 8 * v9), v7);
      ++v6;
    }
    while (v6 < *((int *)a2 + 6));
  }
  if (*((unsigned char *)a2 + 44))
  {
    *((_DWORD *)this + 11) |= 1u;
    int v11 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
    if (!v11) {
      operator new();
    }
    BOOL v12 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)a2 + 1);
    if (!v12)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(v4);
      BOOL v12 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::Gyro::default_instance_
                                                                            + 8);
    }
    return CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v11, v12);
  }
  return result;
}

void sub_18DF634DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::Gyro::~Gyro(CoreNavigation::CLP::LogEntry::PrivateData::Gyro *this)
{
  *(void *)this = &unk_1EDD0EA08;
  CoreNavigation::CLP::LogEntry::PrivateData::Gyro::SharedDtor(this);
  sub_18DF0C324((uint64_t *)this + 2);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::Gyro::~Gyro(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::PrivateData::Gyro::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::Gyro *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::Gyro *)CoreNavigation::CLP::LogEntry::PrivateData::Gyro::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2)
    {
      int v3 = *(void (**)(void))(*(void *)v2 + 8);
      v3();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Gyro::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::Gyro *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::Gyro::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Gyro::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 40) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::Gyro::New(CoreNavigation::CLP::LogEntry::PrivateData::Gyro *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Gyro::Clear(CoreNavigation::CLP::LogEntry::PrivateData::Gyro *this)
{
  if (*((unsigned char *)this + 44))
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2)
    {
      if (*(unsigned char *)(v2 + 36))
      {
        *(void *)(v2 + 8) = 0;
        *(void *)(v2 + 16) = 0;
        *(void *)(v2 + 24) = 0;
      }
      *(_DWORD *)(v2 + 36) = 0;
    }
  }
  uint64_t result = sub_18DF0C208((uint64_t)this + 16);
  *((_DWORD *)this + 11) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Gyro::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::Gyro *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (CoreNavigation::CLP::LogEntry::PrivateData::Gyro *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v5;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((void *)a2 + 1) = v5 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_18;
        }
        *((_DWORD *)this + 11) |= 1u;
        int v8 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
        if (!v8) {
          operator new();
        }
        unsigned int v27 = 0;
        uint64_t v9 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v9 >= *((void *)a2 + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v27))return 0; {
        }
          }
        else
        {
          unsigned int v27 = *v9;
          *((void *)a2 + 1) = v9 + 1;
        }
        int v10 = *((_DWORD *)a2 + 14);
        int v11 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v10 + 1;
        if (v10 >= v11) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream(v8, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v12 = *((_DWORD *)a2 + 14);
        BOOL v13 = __OFSUB__(v12, 1);
        int v14 = v12 - 1;
        if (v14 < 0 == v13) {
          *((_DWORD *)a2 + 14) = v14;
        }
        unint64_t v15 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v15 < *((void *)a2 + 2) && *v15 == 18) {
          goto LABEL_29;
        }
      }
      if (TagFallback >> 3 != 2) {
        break;
      }
      int v7 = TagFallback & 7;
      if (v7 != 2) {
        goto LABEL_18;
      }
      while (1)
      {
        int v16 = *((_DWORD *)this + 7);
        uint64_t v17 = *((int *)this + 6);
        if ((int)v17 >= v16)
        {
          if (v16 == *((_DWORD *)this + 8))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
            int v16 = *((_DWORD *)this + 7);
          }
          *((_DWORD *)this + 7) = v16 + 1;
          operator new();
        }
        uint64_t v18 = *((void *)this + 2);
        *((_DWORD *)this + 6) = v17 + 1;
        int v19 = *(CoreNavigation::CLP::LogEntry::PrivateData::GyroSample **)(v18 + 8 * v17);
        unsigned int v28 = 0;
        int v20 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v20 >= *((void *)a2 + 2) || *v20 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v28))return 0; {
        }
          }
        else
        {
          unsigned int v28 = *v20;
          *((void *)a2 + 1) = v20 + 1;
        }
        int v21 = *((_DWORD *)a2 + 14);
        int v22 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v21 + 1;
        if (v21 >= v22) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::MergePartialFromCodedStream(v19, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v23 = *((_DWORD *)a2 + 14);
        BOOL v13 = __OFSUB__(v23, 1);
        int v24 = v23 - 1;
        if (v24 < 0 == v13) {
          *((_DWORD *)a2 + 14) = v24;
        }
        unint64_t v15 = (unsigned char *)*((void *)a2 + 1);
        int v25 = (unsigned char *)*((void *)a2 + 2);
        if (v15 >= v25 || *v15 != 18) {
          break;
        }
LABEL_29:
        *((void *)a2 + 1) = v15 + 1;
      }
      if (v15 == v25 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      }
    }
    int v7 = TagFallback & 7;
LABEL_18:
    if (v7 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Gyro::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(unsigned char *)(this + 44))
  {
    uint64_t v6 = *(void *)(this + 8);
    if (!v6)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      uint64_t v6 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::Gyro::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
  }
  if (*(int *)(v5 + 24) >= 1)
  {
    uint64_t v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(*(void *)(v5 + 16) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 24));
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Gyro::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::Gyro *this)
{
  if (*((unsigned char *)this + 44))
  {
    uint64_t v3 = *((void *)this + 1);
    if (!v3)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      uint64_t v3 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::Gyro::default_instance_ + 8);
    }
    int v4 = *(unsigned __int8 *)(v3 + 36);
    if (*(unsigned char *)(v3 + 36))
    {
      int v5 = (v4 << 31 >> 31) & 9;
      if ((v4 & 2) != 0) {
        v5 += 9;
      }
      if ((v4 & 4) != 0) {
        int v4 = v5 + 9;
      }
      else {
        int v4 = v5;
      }
    }
    *(_DWORD *)(v3 + 32) = v4;
    int v2 = v4 + 2;
  }
  else
  {
    int v2 = 0;
  }
  int v6 = *((_DWORD *)this + 6);
  uint64_t v7 = (v6 + v2);
  if (v6 >= 1)
  {
    uint64_t v8 = 0;
    do
      uint64_t v7 = v7
         + CoreNavigation::CLP::LogEntry::PrivateData::GyroSample::ByteSize(*(CoreNavigation::CLP::LogEntry::PrivateData::GyroSample **)(*((void *)this + 2) + 8 * v8++))
         + 1;
    while (v8 < *((int *)this + 6));
  }
  *((_DWORD *)this + 10) = v7;
  return v7;
}

double CoreNavigation::CLP::LogEntry::PrivateData::Gyro::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::Gyro *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::Gyro::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::Gyro::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::Gyro *this, const CoreNavigation::CLP::LogEntry::PrivateData::Gyro *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::Gyro *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::Gyro::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Gyro::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::Gyro *this)
{
  return 1;
}

CoreNavigation::CLP::LogEntry::PrivateData::Gyro *CoreNavigation::CLP::LogEntry::PrivateData::Gyro::Swap(CoreNavigation::CLP::LogEntry::PrivateData::Gyro *this, CoreNavigation::CLP::LogEntry::PrivateData::Gyro *a2)
{
  if (a2 != this)
  {
    uint64_t v3 = this;
    uint64_t v4 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v4;
    this = (CoreNavigation::CLP::LogEntry::PrivateData::Gyro *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    int v5 = *((_DWORD *)v3 + 11);
    *((_DWORD *)v3 + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v5;
    int v6 = *((_DWORD *)v3 + 10);
    *((_DWORD *)v3 + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v6;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::Gyro::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.Gyro");
}

void *CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::SharedCtor(void *this)
{
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::BaroSample *CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::BaroSample(CoreNavigation::CLP::LogEntry::PrivateData::BaroSample *this, const CoreNavigation::CLP::LogEntry::PrivateData::BaroSample *a2)
{
  *(void *)this = &unk_1EDD0B330;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::MergeFrom(this, a2);
  return this;
}

void sub_18DF63D98(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

float CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::BaroSample *this, const CoreNavigation::CLP::LogEntry::PrivateData::BaroSample *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 28);
  if (!(_BYTE)v5) {
    return *(float *)&v4;
  }
  if ((*((unsigned char *)a2 + 28) & 1) == 0)
  {
    if ((*((unsigned char *)a2 + 28) & 2) == 0) {
      goto LABEL_6;
    }
LABEL_14:
    LODWORD(v4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)this + 7) |= 2u;
    *((_DWORD *)this + 4) = LODWORD(v4);
    if ((*((_DWORD *)a2 + 7) & 4) != 0) {
      goto LABEL_7;
    }
    return *(float *)&v4;
  }
  *((_DWORD *)this + 7) |= 1u;
  int v6 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
  if (!v6) {
    operator new();
  }
  uint64_t v7 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)a2 + 1);
  if (!v7)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    uint64_t v7 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::default_instance_
                                                                         + 8);
  }
  double v4 = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v6, v7);
  int v5 = *((_DWORD *)a2 + 7);
  if ((v5 & 2) != 0) {
    goto LABEL_14;
  }
LABEL_6:
  if ((v5 & 4) != 0)
  {
LABEL_7:
    LODWORD(v4) = *((_DWORD *)a2 + 5);
    *((_DWORD *)this + 7) |= 4u;
    *((_DWORD *)this + 5) = LODWORD(v4);
  }
  return *(float *)&v4;
}

void sub_18DF63EF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::~BaroSample(CoreNavigation::CLP::LogEntry::PrivateData::BaroSample *this)
{
  *(void *)this = &unk_1EDD0B330;
  CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::~BaroSample(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::BaroSample *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::BaroSample *)CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2)
    {
      uint64_t v3 = *(void (**)(void))(*(void *)v2 + 8);
      v3();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::BaroSample *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 24) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::New(CoreNavigation::CLP::LogEntry::PrivateData::BaroSample *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 28))
  {
    if (*(unsigned char *)(this + 28))
    {
      uint64_t v1 = *(void *)(this + 8);
      if (v1)
      {
        if (*(unsigned char *)(v1 + 36))
        {
          *(void *)(v1 + 8) = 0;
          *(void *)(v1 + 16) = 0;
          *(void *)(v1 + 24) = 0;
        }
        *(_DWORD *)(v1 + 36) = 0;
      }
    }
    *(void *)(this + 16) = 0;
  }
  *(_DWORD *)(this + 28) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::BaroSample *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (1)
  {
    while (1)
    {
      double v4 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v4;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v4 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      unsigned int v6 = TagFallback >> 3;
      if (TagFallback >> 3 == 1) {
        break;
      }
      if (v6 == 2)
      {
        int v7 = TagFallback & 7;
        if (v7 != 5) {
          goto LABEL_20;
        }
LABEL_32:
        unsigned int v19 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v19) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 4) = v19;
        *((_DWORD *)this + 7) |= 2u;
        int v16 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v16 < *((void *)a2 + 2) && *v16 == 29)
        {
          *((void *)a2 + 1) = v16 + 1;
          goto LABEL_36;
        }
      }
      else
      {
        if (v6 != 3)
        {
          int v7 = TagFallback & 7;
          goto LABEL_20;
        }
        int v7 = TagFallback & 7;
        if (v7 == 5)
        {
LABEL_36:
          unsigned int v18 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v18) & 1) == 0) {
            return 0;
          }
          *((_DWORD *)this + 5) = v18;
          *((_DWORD *)this + 7) |= 4u;
          if (*((void *)a2 + 1) == *((void *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)a2 + 36) = 1;
            return result;
          }
        }
        else
        {
LABEL_20:
          if (v7 == 4) {
            return 1;
          }
          if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        }
          }
      }
    }
    int v7 = TagFallback & 7;
    if (v7 != 2) {
      goto LABEL_20;
    }
    *((_DWORD *)this + 7) |= 1u;
    uint64_t v8 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
    if (!v8) {
      operator new();
    }
    unsigned int v20 = 0;
    uint64_t v9 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v9 >= *((void *)a2 + 2) || *v9 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v20)) {
        return 0;
      }
    }
    else
    {
      unsigned int v20 = *v9;
      *((void *)a2 + 1) = v9 + 1;
    }
    int v10 = *((_DWORD *)a2 + 14);
    int v11 = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 14) = v10 + 1;
    if (v10 >= v11) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
    if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream(v8, a2)
      || !*((unsigned char *)a2 + 36))
    {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
    int v12 = *((_DWORD *)a2 + 14);
    BOOL v13 = __OFSUB__(v12, 1);
    int v14 = v12 - 1;
    if (v14 < 0 == v13) {
      *((_DWORD *)a2 + 14) = v14;
    }
    unint64_t v15 = (unsigned char *)*((void *)a2 + 1);
    if ((unint64_t)v15 < *((void *)a2 + 2) && *v15 == 21)
    {
      *((void *)a2 + 1) = v15 + 1;
      goto LABEL_32;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 28);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_8:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(float *)(v5 + 16), a3);
    if ((*(_DWORD *)(v5 + 28) & 4) == 0) {
      return this;
    }
    goto LABEL_9;
  }
  uint64_t v7 = *(void *)(this + 8);
  if (!v7)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::default_instance_ + 8);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
  int v6 = *(_DWORD *)(v5 + 28);
  if ((v6 & 2) != 0) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return this;
  }
LABEL_9:
  float v8 = *(float *)(v5 + 20);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, v8, a3);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::BaroSample *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 28);
  if ((_BYTE)v2)
  {
    if (*((unsigned char *)this + 28))
    {
      uint64_t v5 = *((void *)this + 1);
      if (!v5)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
        uint64_t v5 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::default_instance_ + 8);
      }
      int v6 = *(unsigned __int8 *)(v5 + 36);
      if (*(unsigned char *)(v5 + 36))
      {
        int v7 = (v6 << 31 >> 31) & 9;
        if ((v6 & 2) != 0) {
          v7 += 9;
        }
        if ((v6 & 4) != 0) {
          int v6 = v7 + 9;
        }
        else {
          int v6 = v7;
        }
      }
      *(_DWORD *)(v5 + 32) = v6;
      unsigned int v3 = v6 + 2;
      int v2 = *((_DWORD *)this + 7);
    }
    else
    {
      unsigned int v3 = 0;
    }
    if ((v2 & 2) != 0) {
      v3 += 5;
    }
    if ((v2 & 4) != 0) {
      uint64_t result = v3 + 5;
    }
    else {
      uint64_t result = v3;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  *((_DWORD *)this + 6) = result;
  return result;
}

float CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::BaroSample *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::MergeFrom(this, lpsrc);
}

float CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::BaroSample *this, const CoreNavigation::CLP::LogEntry::PrivateData::BaroSample *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::BaroSample *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::BaroSample *this)
{
  return 1;
}

float CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::Swap(CoreNavigation::CLP::LogEntry::PrivateData::BaroSample *this, CoreNavigation::CLP::LogEntry::PrivateData::BaroSample *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    int v3 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v3;
    float result = *((float *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((float *)a2 + 5) = result;
    LODWORD(v2) = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LODWORD(v2) = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.BaroSample");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Baro::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 40) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::Baro *CoreNavigation::CLP::LogEntry::PrivateData::Baro::Baro(CoreNavigation::CLP::LogEntry::PrivateData::Baro *this, const CoreNavigation::CLP::LogEntry::PrivateData::Baro *a2)
{
  *((void *)this + 5) = 0;
  *(void *)this = &unk_1EDD0E990;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::Baro::MergeFrom(this, a2);
  return this;
}

void sub_18DF646AC(_Unwind_Exception *a1)
{
  sub_18DF0C324(v1 + 2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::Baro::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::Baro *this, const CoreNavigation::CLP::LogEntry::PrivateData::Baro *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  double v4 = (CoreNavigation::CLP::LogEntry::PrivateData *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::Baro *)((char *)this + 16));
  if (*((int *)a2 + 6) >= 1)
  {
    uint64_t v6 = 0;
    do
    {
      int v7 = *(const CoreNavigation::CLP::LogEntry::PrivateData::BaroSample **)(*((void *)a2 + 2) + 8 * v6);
      int v8 = *((_DWORD *)this + 7);
      uint64_t v9 = *((int *)this + 6);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)this + 8))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::Baro *)((char *)this + 16));
          int v8 = *((_DWORD *)this + 7);
        }
        *((_DWORD *)this + 7) = v8 + 1;
        operator new();
      }
      uint64_t v10 = *((void *)this + 2);
      *((_DWORD *)this + 6) = v9 + 1;
      *(float *)&double result = CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::MergeFrom(*(CoreNavigation::CLP::LogEntry::PrivateData::BaroSample **)(v10 + 8 * v9), v7);
      ++v6;
    }
    while (v6 < *((int *)a2 + 6));
  }
  if (*((unsigned char *)a2 + 44))
  {
    *((_DWORD *)this + 11) |= 1u;
    int v11 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
    if (!v11) {
      operator new();
    }
    int v12 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)a2 + 1);
    if (!v12)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(v4);
      int v12 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::Baro::default_instance_
                                                                            + 8);
    }
    return CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v11, v12);
  }
  return result;
}

void sub_18DF648AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::Baro::~Baro(CoreNavigation::CLP::LogEntry::PrivateData::Baro *this)
{
  *(void *)this = &unk_1EDD0E990;
  CoreNavigation::CLP::LogEntry::PrivateData::Baro::SharedDtor(this);
  sub_18DF0C324((uint64_t *)this + 2);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::Baro::~Baro(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::PrivateData::Baro::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::Baro *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::Baro *)CoreNavigation::CLP::LogEntry::PrivateData::Baro::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2)
    {
      int v3 = *(void (**)(void))(*(void *)v2 + 8);
      v3();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Baro::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::Baro *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::Baro::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Baro::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 40) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::Baro::New(CoreNavigation::CLP::LogEntry::PrivateData::Baro *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Baro::Clear(CoreNavigation::CLP::LogEntry::PrivateData::Baro *this)
{
  if (*((unsigned char *)this + 44))
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2)
    {
      if (*(unsigned char *)(v2 + 36))
      {
        *(void *)(v2 + 8) = 0;
        *(void *)(v2 + 16) = 0;
        *(void *)(v2 + 24) = 0;
      }
      *(_DWORD *)(v2 + 36) = 0;
    }
  }
  uint64_t result = sub_18DF0C208((uint64_t)this + 16);
  *((_DWORD *)this + 11) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Baro::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::Baro *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  double v4 = (CoreNavigation::CLP::LogEntry::PrivateData::Baro *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v5;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((void *)a2 + 1) = v5 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_18;
        }
        *((_DWORD *)this + 11) |= 1u;
        int v8 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
        if (!v8) {
          operator new();
        }
        unsigned int v27 = 0;
        uint64_t v9 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v9 >= *((void *)a2 + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v27))return 0; {
        }
          }
        else
        {
          unsigned int v27 = *v9;
          *((void *)a2 + 1) = v9 + 1;
        }
        int v10 = *((_DWORD *)a2 + 14);
        int v11 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v10 + 1;
        if (v10 >= v11) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream(v8, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v12 = *((_DWORD *)a2 + 14);
        BOOL v13 = __OFSUB__(v12, 1);
        int v14 = v12 - 1;
        if (v14 < 0 == v13) {
          *((_DWORD *)a2 + 14) = v14;
        }
        unint64_t v15 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v15 < *((void *)a2 + 2) && *v15 == 18) {
          goto LABEL_29;
        }
      }
      if (TagFallback >> 3 != 2) {
        break;
      }
      int v7 = TagFallback & 7;
      if (v7 != 2) {
        goto LABEL_18;
      }
      while (1)
      {
        int v16 = *((_DWORD *)this + 7);
        uint64_t v17 = *((int *)this + 6);
        if ((int)v17 >= v16)
        {
          if (v16 == *((_DWORD *)this + 8))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
            int v16 = *((_DWORD *)this + 7);
          }
          *((_DWORD *)this + 7) = v16 + 1;
          operator new();
        }
        uint64_t v18 = *((void *)this + 2);
        *((_DWORD *)this + 6) = v17 + 1;
        unsigned int v19 = *(CoreNavigation::CLP::LogEntry::PrivateData::BaroSample **)(v18 + 8 * v17);
        unsigned int v28 = 0;
        unsigned int v20 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v20 >= *((void *)a2 + 2) || *v20 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v28))return 0; {
        }
          }
        else
        {
          unsigned int v28 = *v20;
          *((void *)a2 + 1) = v20 + 1;
        }
        int v21 = *((_DWORD *)a2 + 14);
        int v22 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v21 + 1;
        if (v21 >= v22) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::MergePartialFromCodedStream(v19, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v23 = *((_DWORD *)a2 + 14);
        BOOL v13 = __OFSUB__(v23, 1);
        int v24 = v23 - 1;
        if (v24 < 0 == v13) {
          *((_DWORD *)a2 + 14) = v24;
        }
        unint64_t v15 = (unsigned char *)*((void *)a2 + 1);
        int v25 = (unsigned char *)*((void *)a2 + 2);
        if (v15 >= v25 || *v15 != 18) {
          break;
        }
LABEL_29:
        *((void *)a2 + 1) = v15 + 1;
      }
      if (v15 == v25 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      }
    }
    int v7 = TagFallback & 7;
LABEL_18:
    if (v7 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Baro::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(unsigned char *)(this + 44))
  {
    uint64_t v6 = *(void *)(this + 8);
    if (!v6)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      uint64_t v6 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::Baro::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
  }
  if (*(int *)(v5 + 24) >= 1)
  {
    uint64_t v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(*(void *)(v5 + 16) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 24));
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Baro::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::Baro *this)
{
  if (*((unsigned char *)this + 44))
  {
    uint64_t v3 = *((void *)this + 1);
    if (!v3)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      uint64_t v3 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::Baro::default_instance_ + 8);
    }
    int v4 = *(unsigned __int8 *)(v3 + 36);
    if (*(unsigned char *)(v3 + 36))
    {
      int v5 = (v4 << 31 >> 31) & 9;
      if ((v4 & 2) != 0) {
        v5 += 9;
      }
      if ((v4 & 4) != 0) {
        int v4 = v5 + 9;
      }
      else {
        int v4 = v5;
      }
    }
    *(_DWORD *)(v3 + 32) = v4;
    int v2 = v4 + 2;
  }
  else
  {
    int v2 = 0;
  }
  int v6 = *((_DWORD *)this + 6);
  uint64_t v7 = (v6 + v2);
  if (v6 >= 1)
  {
    uint64_t v8 = 0;
    do
      uint64_t v7 = v7
         + CoreNavigation::CLP::LogEntry::PrivateData::BaroSample::ByteSize(*(CoreNavigation::CLP::LogEntry::PrivateData::BaroSample **)(*((void *)this + 2) + 8 * v8++))
         + 1;
    while (v8 < *((int *)this + 6));
  }
  *((_DWORD *)this + 10) = v7;
  return v7;
}

double CoreNavigation::CLP::LogEntry::PrivateData::Baro::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::Baro *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::Baro::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::Baro::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::Baro *this, const CoreNavigation::CLP::LogEntry::PrivateData::Baro *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::Baro *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::Baro::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Baro::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::Baro *this)
{
  return 1;
}

CoreNavigation::CLP::LogEntry::PrivateData::Baro *CoreNavigation::CLP::LogEntry::PrivateData::Baro::Swap(CoreNavigation::CLP::LogEntry::PrivateData::Baro *this, CoreNavigation::CLP::LogEntry::PrivateData::Baro *a2)
{
  if (a2 != this)
  {
    uint64_t v3 = this;
    uint64_t v4 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v4;
    this = (CoreNavigation::CLP::LogEntry::PrivateData::Baro *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    int v5 = *((_DWORD *)v3 + 11);
    *((_DWORD *)v3 + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v5;
    int v6 = *((_DWORD *)v3 + 10);
    *((_DWORD *)v3 + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v6;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::Baro::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.Baro");
}

void *CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::SharedCtor(void *this)
{
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::ClientLocationCoordinate(CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *this, const CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *a2)
{
  *(void *)this = &unk_1EDD0DF40;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::MergeFrom(this, a2);
  return this;
}

void sub_18DF65164(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *this, const CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 28);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 28))
    {
      double result = *((double *)a2 + 1);
      *((_DWORD *)this + 7) |= 1u;
      *((double *)this + 1) = result;
      int v5 = *((_DWORD *)a2 + 7);
    }
    if ((v5 & 2) != 0)
    {
      double result = *((double *)a2 + 2);
      *((_DWORD *)this + 7) |= 2u;
      *((double *)this + 2) = result;
    }
  }
  return result;
}

void sub_18DF65224(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::~ClientLocationCoordinate(CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *this)
{
  *(void *)this = &unk_1EDD0DF40;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::~ClientLocationCoordinate(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 24) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::New(CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 28))
  {
    *(void *)(this + 8) = 0;
    *(void *)(this + 16) = 0;
  }
  *(_DWORD *)(this + 28) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v4 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v4;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((void *)a2 + 1) = v4 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_21;
        }
        unint64_t v9 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v9) & 1) == 0) {
          return 0;
        }
        *((void *)this + 1) = v9;
        *((_DWORD *)this + 7) |= 1u;
        uint64_t v7 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v7 < *((void *)a2 + 2) && *v7 == 17)
        {
          *((void *)a2 + 1) = v7 + 1;
          goto LABEL_15;
        }
      }
      if (TagFallback >> 3 != 2)
      {
        int v6 = TagFallback & 7;
        goto LABEL_21;
      }
      int v6 = TagFallback & 7;
      if (v6 == 1) {
        break;
      }
LABEL_21:
      if (v6 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
    }
      }
LABEL_15:
    unint64_t v9 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v9) & 1) == 0) {
      return 0;
    }
    *((void *)this + 2) = v9;
    *((_DWORD *)this + 7) |= 2u;
  }
  while (*((void *)a2 + 1) != *((void *)a2 + 2)
       || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10));
  *((_DWORD *)a2 + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)a2 + 36) = 1;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = this;
  int v5 = *(_DWORD *)(this + 28);
  if (v5)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
    int v5 = *(_DWORD *)(v4 + 28);
  }
  if ((v5 & 2) != 0)
  {
    double v6 = *(double *)(v4 + 16);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, v6, a3);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *this)
{
  uint64_t v1 = *((unsigned __int8 *)this + 28);
  if (*((unsigned char *)this + 28))
  {
    unsigned int v2 = ((int)(v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0) {
      uint64_t v1 = v2 + 9;
    }
    else {
      uint64_t v1 = v2;
    }
  }
  *((_DWORD *)this + 6) = v1;
  return v1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *this, const CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::Swap(CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *this, CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    double result = *((double *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((double *)a2 + 2) = result;
    int v4 = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v4;
    int v5 = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v5;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.ClientLocationCoordinate");
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation_ClientLocationSuitabilityType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 3 || this == 0xFFFF;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation_LocationIntegrityType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  int v1 = (int)this;
  BOOL result = 1;
  if ((v1 - 25) > 0x32 || ((1 << (v1 - 25)) & 0x4000002000001) == 0) {
    return (v1 + 1) < 2;
  }
  return result;
}

double CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation *this)
{
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(void *)&double result = 0xFFFFFFFFLL;
  *(_OWORD *)((char *)this + 120) = xmmword_18E1F3620;
  *((void *)this + 17) = 0;
  *((unsigned char *)this + 144) = 0;
  *((_DWORD *)this + 37) = 0;
  *((_DWORD *)this + 38) = 0;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation *CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::DaemonLocation(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation *this, const CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation *a2)
{
  *(void *)this = &unk_1EDD0BD08;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = xmmword_18E1F3620;
  *((void *)this + 17) = 0;
  *((unsigned char *)this + 144) = 0;
  *((_DWORD *)this + 37) = 0;
  *((_DWORD *)this + 38) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::MergeFrom(this, a2);
  return this;
}

void sub_18DF65844(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation *this, const CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v29);
  }
  int v4 = *((_DWORD *)a2 + 38);
  if (!(_BYTE)v4) {
    goto LABEL_16;
  }
  if (v4)
  {
    unsigned int v5 = *((_DWORD *)a2 + 12);
    if (v5 >= 3 && v5 != 0xFFFF) {
      __assert_rtn("set_suitability", "CoreNavigationCLPPrivateDataShared.pb.h", 14312, "::CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation_ClientLocationSuitabilityType_IsValid(value)");
    }
    *((_DWORD *)this + 38) |= 1u;
    *((_DWORD *)this + 12) = v5;
    int v4 = *((_DWORD *)a2 + 38);
  }
  if ((v4 & 2) != 0)
  {
    *((_DWORD *)this + 38) |= 2u;
    int v22 = (CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *)*((void *)this + 1);
    if (!v22) {
      operator new();
    }
    int v23 = (const CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *)*((void *)a2 + 1);
    if (!v23)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      int v23 = *(const CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate **)(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::default_instance_
                                                                                           + 8);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::MergeFrom(v22, v23);
    int v4 = *((_DWORD *)a2 + 38);
    if ((v4 & 4) == 0)
    {
LABEL_10:
      if ((v4 & 8) == 0) {
        goto LABEL_11;
      }
      goto LABEL_65;
    }
  }
  else if ((v4 & 4) == 0)
  {
    goto LABEL_10;
  }
  uint64_t v24 = *((void *)a2 + 2);
  *((_DWORD *)this + 38) |= 4u;
  *((void *)this + 2) = v24;
  int v4 = *((_DWORD *)a2 + 38);
  if ((v4 & 8) == 0)
  {
LABEL_11:
    if ((v4 & 0x10) == 0) {
      goto LABEL_12;
    }
    goto LABEL_66;
  }
LABEL_65:
  uint64_t v25 = *((void *)a2 + 3);
  *((_DWORD *)this + 38) |= 8u;
  *((void *)this + 3) = v25;
  int v4 = *((_DWORD *)a2 + 38);
  if ((v4 & 0x10) == 0)
  {
LABEL_12:
    if ((v4 & 0x20) == 0) {
      goto LABEL_13;
    }
LABEL_67:
    uint64_t v27 = *((void *)a2 + 5);
    *((_DWORD *)this + 38) |= 0x20u;
    *((void *)this + 5) = v27;
    int v4 = *((_DWORD *)a2 + 38);
    if ((v4 & 0x40) == 0)
    {
LABEL_14:
      if ((v4 & 0x80) == 0) {
        goto LABEL_16;
      }
      goto LABEL_15;
    }
    goto LABEL_68;
  }
LABEL_66:
  uint64_t v26 = *((void *)a2 + 4);
  *((_DWORD *)this + 38) |= 0x10u;
  *((void *)this + 4) = v26;
  int v4 = *((_DWORD *)a2 + 38);
  if ((v4 & 0x20) != 0) {
    goto LABEL_67;
  }
LABEL_13:
  if ((v4 & 0x40) == 0) {
    goto LABEL_14;
  }
LABEL_68:
  uint64_t v28 = *((void *)a2 + 7);
  *((_DWORD *)this + 38) |= 0x40u;
  *((void *)this + 7) = v28;
  int v4 = *((_DWORD *)a2 + 38);
  if ((v4 & 0x80) != 0)
  {
LABEL_15:
    uint64_t v6 = *((void *)a2 + 8);
    *((_DWORD *)this + 38) |= 0x80u;
    *((void *)this + 8) = v6;
    int v4 = *((_DWORD *)a2 + 38);
  }
LABEL_16:
  if ((v4 & 0xFF00) == 0) {
    goto LABEL_26;
  }
  if ((v4 & 0x100) != 0)
  {
    uint64_t v14 = *((void *)a2 + 9);
    *((_DWORD *)this + 38) |= 0x100u;
    *((void *)this + 9) = v14;
    int v4 = *((_DWORD *)a2 + 38);
    if ((v4 & 0x200) == 0)
    {
LABEL_19:
      if ((v4 & 0x400) == 0) {
        goto LABEL_20;
      }
      goto LABEL_48;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_19;
  }
  uint64_t v15 = *((void *)a2 + 10);
  *((_DWORD *)this + 38) |= 0x200u;
  *((void *)this + 10) = v15;
  int v4 = *((_DWORD *)a2 + 38);
  if ((v4 & 0x400) == 0)
  {
LABEL_20:
    if ((v4 & 0x800) == 0) {
      goto LABEL_21;
    }
    goto LABEL_49;
  }
LABEL_48:
  int v16 = *((_DWORD *)a2 + 13);
  *((_DWORD *)this + 38) |= 0x400u;
  *((_DWORD *)this + 13) = v16;
  int v4 = *((_DWORD *)a2 + 38);
  if ((v4 & 0x800) == 0)
  {
LABEL_21:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_50;
  }
LABEL_49:
  uint64_t v17 = *((void *)a2 + 11);
  *((_DWORD *)this + 38) |= 0x800u;
  *((void *)this + 11) = v17;
  int v4 = *((_DWORD *)a2 + 38);
  if ((v4 & 0x1000) == 0)
  {
LABEL_22:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_52;
  }
LABEL_50:
  unsigned int v18 = *((_DWORD *)a2 + 26);
  if (v18 >= 0xE) {
    __assert_rtn("set_type", "CoreNavigationCLPPrivateDataShared.pb.h", 14597, "::CoreNavigation::CLP::LogEntry::PrivateData::LocationType_IsValid(value)");
  }
  *((_DWORD *)this + 38) |= 0x1000u;
  *((_DWORD *)this + 26) = v18;
  int v4 = *((_DWORD *)a2 + 38);
  if ((v4 & 0x2000) == 0)
  {
LABEL_23:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_57;
  }
LABEL_52:
  *((_DWORD *)this + 38) |= 0x2000u;
  unsigned int v19 = (CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *)*((void *)this + 12);
  if (!v19) {
    operator new();
  }
  unsigned int v20 = (const CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *)*((void *)a2 + 12);
  if (!v20)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    unsigned int v20 = *(const CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate **)(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::default_instance_
                                                                                         + 96);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::MergeFrom(v19, v20);
  int v4 = *((_DWORD *)a2 + 38);
  if ((v4 & 0x4000) == 0)
  {
LABEL_24:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_25;
  }
LABEL_57:
  uint64_t v21 = *((void *)a2 + 14);
  *((_DWORD *)this + 38) |= 0x4000u;
  *((void *)this + 14) = v21;
  int v4 = *((_DWORD *)a2 + 38);
  if ((v4 & 0x8000) != 0)
  {
LABEL_25:
    int v7 = *((_DWORD *)a2 + 27);
    *((_DWORD *)this + 38) |= 0x8000u;
    *((_DWORD *)this + 27) = v7;
    int v4 = *((_DWORD *)a2 + 38);
  }
LABEL_26:
  if ((v4 & 0xFF0000) != 0)
  {
    if ((v4 & 0x10000) != 0)
    {
      int v8 = *((_DWORD *)a2 + 30);
      if (((v8 - 25) > 0x32 || ((1 << (v8 - 25)) & 0x4000002000001) == 0)
        && (v8 + 1) >= 2)
      {
        __assert_rtn("set_integrity", "CoreNavigationCLPPrivateDataShared.pb.h", 14706, "::CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation_LocationIntegrityType_IsValid(value)");
      }
      *((_DWORD *)this + 38) |= 0x10000u;
      *((_DWORD *)this + 30) = v8;
      int v4 = *((_DWORD *)a2 + 38);
    }
    if ((v4 & 0x20000) != 0)
    {
      unsigned int v9 = *((_DWORD *)a2 + 31);
      if (v9 >= 3) {
        __assert_rtn("set_reference_frame", "CoreNavigationCLPPrivateDataShared.pb.h", 14729, "::CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationReferenceFrameType_IsValid(value)");
      }
      *((_DWORD *)this + 38) |= 0x20000u;
      *((_DWORD *)this + 31) = v9;
      int v4 = *((_DWORD *)a2 + 38);
    }
    if ((v4 & 0x40000) != 0)
    {
      unsigned int v10 = *((_DWORD *)a2 + 32);
      if (v10 >= 3) {
        __assert_rtn("set_raw_reference_frame", "CoreNavigationCLPPrivateDataShared.pb.h", 14752, "::CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationReferenceFrameType_IsValid(value)");
      }
      *((_DWORD *)this + 38) |= 0x40000u;
      *((_DWORD *)this + 32) = v10;
      int v4 = *((_DWORD *)a2 + 38);
    }
    if ((v4 & 0x80000) != 0)
    {
      int v11 = *((_DWORD *)a2 + 33);
      if ((v11 + 1) >= 8) {
        __assert_rtn("set_signal_environment_type", "CoreNavigationCLPPrivateDataShared.pb.h", 14775, "::CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment_SignalEnvironmentType_IsValid(value)");
      }
      *((_DWORD *)this + 38) |= 0x80000u;
      *((_DWORD *)this + 33) = v11;
      int v4 = *((_DWORD *)a2 + 38);
    }
    if ((v4 & 0x100000) != 0)
    {
      uint64_t v12 = *((void *)a2 + 17);
      *((_DWORD *)this + 38) |= 0x100000u;
      *((void *)this + 17) = v12;
      int v4 = *((_DWORD *)a2 + 38);
    }
    if ((v4 & 0x200000) != 0)
    {
      char v13 = *((unsigned char *)a2 + 144);
      *((_DWORD *)this + 38) |= 0x200000u;
      *((unsigned char *)this + 144) = v13;
    }
  }
}

void sub_18DF65D78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::~DaemonLocation(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation *this)
{
  *(void *)this = &unk_1EDD0BD08;
  CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::~DaemonLocation(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation *)CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 12);
    if (v3)
    {
      int v4 = *(void (**)(void))(*(void *)v3 + 8);
      v4();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 148) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::New(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 152);
  if ((_BYTE)v1)
  {
    *(_DWORD *)(this + 48) = 0;
    if ((v1 & 2) != 0)
    {
      uint64_t v2 = *(void *)(this + 8);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 28))
        {
          *(void *)(v2 + 8) = 0;
          *(void *)(v2 + 16) = 0;
        }
        *(_DWORD *)(v2 + 28) = 0;
        int v1 = *(_DWORD *)(this + 152);
      }
    }
    *(_OWORD *)(this + 16) = 0u;
    *(_OWORD *)(this + 32) = 0u;
    *(void *)(this + 56) = 0;
    *(void *)(this + 64) = 0;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_DWORD *)(this + 52) = 0;
    *(_DWORD *)(this + 104) = 0;
    *(void *)(this + 80) = 0;
    *(void *)(this + 88) = 0;
    *(void *)(this + 72) = 0;
    if ((v1 & 0x2000) != 0)
    {
      uint64_t v3 = *(void *)(this + 96);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 28))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
        }
        *(_DWORD *)(v3 + 28) = 0;
        int v1 = *(_DWORD *)(this + 152);
      }
    }
    *(void *)(this + 112) = 0;
    *(_DWORD *)(this + 108) = 0;
  }
  if ((v1 & 0xFF0000) != 0)
  {
    *(_OWORD *)(this + 120) = xmmword_18E1F3620;
    *(void *)(this + 136) = 0;
    *(unsigned char *)(this + 144) = 0;
  }
  *(_DWORD *)(this + 152) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (2)
  {
    int v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_57;
        }
        v71[0] = 0;
        int v7 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v7 >= *((void *)a2 + 2) || *v7 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v71);
          if (!result) {
            return result;
          }
          unsigned int v8 = v71[0];
        }
        else
        {
          unsigned int v8 = *v7;
          *((void *)a2 + 1) = v7 + 1;
        }
        if (v8 < 3 || v8 == 0xFFFF)
        {
          *((_DWORD *)this + 38) |= 1u;
          *((_DWORD *)this + 12) = v8;
        }
        int v29 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v29 < *((void *)a2 + 2) && *v29 == 18)
        {
          *((void *)a2 + 1) = v29 + 1;
          goto LABEL_81;
        }
        continue;
      case 2u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_57;
        }
LABEL_81:
        *((_DWORD *)this + 38) |= 2u;
        int v30 = (CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *)*((void *)this + 1);
        if (!v30) {
          operator new();
        }
        v71[0] = 0;
        int v31 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v31 >= *((void *)a2 + 2) || *v31 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v71))return 0; {
        }
          }
        else
        {
          v71[0] = *v31;
          *((void *)a2 + 1) = v31 + 1;
        }
        int v32 = *((_DWORD *)a2 + 14);
        int v33 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v32 + 1;
        if (v32 >= v33) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::MergePartialFromCodedStream(v30, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v34 = *((_DWORD *)a2 + 14);
        BOOL v35 = __OFSUB__(v34, 1);
        int v36 = v34 - 1;
        if (v36 < 0 == v35) {
          *((_DWORD *)a2 + 14) = v36;
        }
        uint64_t v37 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v37 >= *((void *)a2 + 2) || *v37 != 25) {
          continue;
        }
        *((void *)a2 + 1) = v37 + 1;
LABEL_95:
        *(void *)int v71 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v71) & 1) == 0)return 0; {
        *((void *)this + 2) = *(void *)v71;
        }
        *((_DWORD *)this + 38) |= 4u;
        uint64_t v38 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v38 >= *((void *)a2 + 2) || *v38 != 33) {
          continue;
        }
        *((void *)a2 + 1) = v38 + 1;
LABEL_99:
        *(void *)int v71 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v71) & 1) == 0)return 0; {
        *((void *)this + 3) = *(void *)v71;
        }
        *((_DWORD *)this + 38) |= 8u;
        int v39 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v39 >= *((void *)a2 + 2) || *v39 != 41) {
          continue;
        }
        *((void *)a2 + 1) = v39 + 1;
LABEL_103:
        *(void *)int v71 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v71) & 1) == 0)return 0; {
        *((void *)this + 4) = *(void *)v71;
        }
        *((_DWORD *)this + 38) |= 0x10u;
        int v40 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v40 >= *((void *)a2 + 2) || *v40 != 49) {
          continue;
        }
        *((void *)a2 + 1) = v40 + 1;
LABEL_107:
        *(void *)int v71 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v71) & 1) == 0)return 0; {
        *((void *)this + 5) = *(void *)v71;
        }
        *((_DWORD *)this + 38) |= 0x20u;
        uint64_t v41 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v41 >= *((void *)a2 + 2) || *v41 != 57) {
          continue;
        }
        *((void *)a2 + 1) = v41 + 1;
LABEL_111:
        *(void *)int v71 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v71) & 1) == 0)return 0; {
        *((void *)this + 7) = *(void *)v71;
        }
        *((_DWORD *)this + 38) |= 0x40u;
        int v42 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v42 >= *((void *)a2 + 2) || *v42 != 65) {
          continue;
        }
        *((void *)a2 + 1) = v42 + 1;
LABEL_115:
        *(void *)int v71 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v71) & 1) == 0)return 0; {
        *((void *)this + 8) = *(void *)v71;
        }
        *((_DWORD *)this + 38) |= 0x80u;
        int v43 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v43 >= *((void *)a2 + 2) || *v43 != 73) {
          continue;
        }
        *((void *)a2 + 1) = v43 + 1;
LABEL_119:
        *(void *)int v71 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v71) & 1) == 0)return 0; {
        *((void *)this + 9) = *(void *)v71;
        }
        *((_DWORD *)this + 38) |= 0x100u;
        uint64_t v44 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v44 >= *((void *)a2 + 2) || *v44 != 81) {
          continue;
        }
        *((void *)a2 + 1) = v44 + 1;
LABEL_123:
        *(void *)int v71 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v71) & 1) == 0)return 0; {
        *((void *)this + 10) = *(void *)v71;
        }
        *((_DWORD *)this + 38) |= 0x200u;
        unsigned int v45 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        if ((unint64_t)v45 >= v9 || *v45 != 88) {
          continue;
        }
        unsigned int v10 = v45 + 1;
        *((void *)a2 + 1) = v10;
LABEL_127:
        v71[0] = 0;
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v71);
          if (!result) {
            return result;
          }
          unsigned int v46 = v71[0];
          int v47 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v46 = *v10;
          int v47 = v10 + 1;
          *((void *)a2 + 1) = v47;
        }
        *((_DWORD *)this + 13) = v46;
        *((_DWORD *)this + 38) |= 0x400u;
        if ((unint64_t)v47 >= v9 || *v47 != 97) {
          continue;
        }
        *((void *)a2 + 1) = v47 + 1;
LABEL_135:
        *(void *)int v71 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v71) & 1) == 0)return 0; {
        *((void *)this + 11) = *(void *)v71;
        }
        *((_DWORD *)this + 38) |= 0x800u;
        int v48 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
        if ((unint64_t)v48 >= v11 || *v48 != 104) {
          continue;
        }
        uint64_t v12 = v48 + 1;
        *((void *)a2 + 1) = v12;
LABEL_139:
        v71[0] = 0;
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v71);
          if (!result) {
            return result;
          }
          unsigned int v49 = v71[0];
        }
        else
        {
          unsigned int v49 = *v12;
          *((void *)a2 + 1) = v12 + 1;
        }
        if (v49 <= 0xD)
        {
          *((_DWORD *)this + 38) |= 0x1000u;
          *((_DWORD *)this + 26) = v49;
        }
        int v50 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v50 >= *((void *)a2 + 2) || *v50 != 114) {
          continue;
        }
        *((void *)a2 + 1) = v50 + 1;
LABEL_149:
        *((_DWORD *)this + 38) |= 0x2000u;
        int v51 = (CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *)*((void *)this + 12);
        if (!v51) {
          operator new();
        }
        v71[0] = 0;
        uint64_t v52 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v52 >= *((void *)a2 + 2) || *v52 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v71))return 0; {
        }
          }
        else
        {
          v71[0] = *v52;
          *((void *)a2 + 1) = v52 + 1;
        }
        int v53 = *((_DWORD *)a2 + 14);
        int v54 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v53 + 1;
        if (v53 >= v54) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::MergePartialFromCodedStream(v51, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v55 = *((_DWORD *)a2 + 14);
        BOOL v35 = __OFSUB__(v55, 1);
        int v56 = v55 - 1;
        if (v56 < 0 == v35) {
          *((_DWORD *)a2 + 14) = v56;
        }
        int v57 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v57 >= *((void *)a2 + 2) || *v57 != 121) {
          continue;
        }
        *((void *)a2 + 1) = v57 + 1;
LABEL_163:
        *(void *)int v71 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v71) & 1) == 0)return 0; {
        *((void *)this + 14) = *(void *)v71;
        }
        *((_DWORD *)this + 38) |= 0x4000u;
        signed int v58 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        if ((int)v13 - (int)v58 < 2 || *v58 != 128 || v58[1] != 1) {
          continue;
        }
        uint64_t v14 = v58 + 2;
        *((void *)a2 + 1) = v14;
LABEL_168:
        v71[0] = 0;
        if ((unint64_t)v14 >= v13 || (char)*v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v71);
          if (!result) {
            return result;
          }
          unsigned int v59 = v71[0];
          int v60 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v59 = *v14;
          int v60 = v14 + 1;
          *((void *)a2 + 1) = v60;
        }
        *((_DWORD *)this + 27) = v59;
        *((_DWORD *)this + 38) |= 0x8000u;
        if ((int)v13 - (int)v60 < 2 || *v60 != 136 || v60[1] != 1) {
          continue;
        }
        uint64_t v15 = (char *)(v60 + 2);
        *((void *)a2 + 1) = v15;
LABEL_177:
        v71[0] = 0;
        if ((unint64_t)v15 >= v13 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v71);
          if (!result) {
            return result;
          }
          unsigned int v61 = v71[0];
        }
        else
        {
          unsigned int v61 = *v15;
          *((void *)a2 + 1) = v15 + 1;
        }
        if (v61 - 25 <= 0x32 && ((1 << (v61 - 25)) & 0x4000002000001) != 0 || v61 + 1 < 2)
        {
          *((_DWORD *)this + 38) |= 0x10000u;
          *((_DWORD *)this + 30) = v61;
        }
        int v64 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
        if ((int)v16 - (int)v64 < 2 || *v64 != 144 || v64[1] != 1) {
          continue;
        }
        uint64_t v17 = (char *)(v64 + 2);
        *((void *)a2 + 1) = v17;
LABEL_194:
        v71[0] = 0;
        if ((unint64_t)v17 >= v16 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v71);
          if (!result) {
            return result;
          }
          unsigned int v65 = v71[0];
        }
        else
        {
          unsigned int v65 = *v17;
          *((void *)a2 + 1) = v17 + 1;
        }
        if (v65 <= 2)
        {
          *((_DWORD *)this + 38) |= 0x20000u;
          *((_DWORD *)this + 31) = v65;
        }
        int v66 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v18 = *((void *)a2 + 2);
        if ((int)v18 - (int)v66 < 2 || *v66 != 152 || v66[1] != 1) {
          continue;
        }
        unsigned int v19 = (char *)(v66 + 2);
        *((void *)a2 + 1) = v19;
LABEL_205:
        v71[0] = 0;
        if ((unint64_t)v19 >= v18 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v71);
          if (!result) {
            return result;
          }
          unsigned int v67 = v71[0];
        }
        else
        {
          unsigned int v67 = *v19;
          *((void *)a2 + 1) = v19 + 1;
        }
        if (v67 <= 2)
        {
          *((_DWORD *)this + 38) |= 0x40000u;
          *((_DWORD *)this + 32) = v67;
        }
        int v68 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v20 = *((void *)a2 + 2);
        if ((int)v20 - (int)v68 < 2 || *v68 != 160 || v68[1] != 1) {
          continue;
        }
        uint64_t v21 = (char *)(v68 + 2);
        *((void *)a2 + 1) = v21;
LABEL_216:
        v71[0] = 0;
        if ((unint64_t)v21 >= v20 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v71);
          if (!result) {
            return result;
          }
          unsigned int v69 = v71[0];
        }
        else
        {
          unsigned int v69 = *v21;
          *((void *)a2 + 1) = v21 + 1;
        }
        if (v69 + 1 <= 7)
        {
          *((_DWORD *)this + 38) |= 0x80000u;
          *((_DWORD *)this + 33) = v69;
        }
        int v70 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v70 < 2 || *v70 != 169 || v70[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v70 + 2;
LABEL_51:
        *(void *)int v71 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v71))
        {
          *((void *)this + 17) = *(void *)v71;
          *((_DWORD *)this + 38) |= 0x100000u;
          int v23 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v22 = *((void *)a2 + 2);
          if ((int)v22 - (int)v23 >= 2 && *v23 == 176 && v23[1] == 1)
          {
            uint64_t v24 = (char *)(v23 + 2);
            *((void *)a2 + 1) = v24;
LABEL_61:
            v71[0] = 0;
            if ((unint64_t)v24 >= v22 || *v24 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v71);
              if (!result) {
                return result;
              }
              unsigned int v25 = v71[0];
              uint64_t v26 = (unsigned __int8 *)*((void *)a2 + 1);
              unint64_t v22 = *((void *)a2 + 2);
            }
            else
            {
              unsigned int v25 = *v24;
              uint64_t v26 = (unsigned __int8 *)(v24 + 1);
              *((void *)a2 + 1) = v26;
            }
            *((unsigned char *)this + 144) = v25 != 0;
            *((_DWORD *)this + 38) |= 0x200000u;
            if (v26 == (unsigned __int8 *)v22 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
            {
              *((_DWORD *)a2 + 8) = 0;
              uint64_t result = 1;
              *((unsigned char *)a2 + 36) = 1;
              return result;
            }
          }
          continue;
        }
        return 0;
      case 3u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_95;
        }
        goto LABEL_57;
      case 4u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_99;
        }
        goto LABEL_57;
      case 5u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_103;
        }
        goto LABEL_57;
      case 6u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_107;
        }
        goto LABEL_57;
      case 7u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_111;
        }
        goto LABEL_57;
      case 8u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_115;
        }
        goto LABEL_57;
      case 9u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_119;
        }
        goto LABEL_57;
      case 0xAu:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_123;
        }
        goto LABEL_57;
      case 0xBu:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_57;
        }
        unsigned int v10 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        goto LABEL_127;
      case 0xCu:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_135;
        }
        goto LABEL_57;
      case 0xDu:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_57;
        }
        uint64_t v12 = (char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
        goto LABEL_139;
      case 0xEu:
        int v6 = TagFallback & 7;
        if (v6 == 2) {
          goto LABEL_149;
        }
        goto LABEL_57;
      case 0xFu:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_163;
        }
        goto LABEL_57;
      case 0x10u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_57;
        }
        uint64_t v14 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_168;
      case 0x11u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_57;
        }
        uint64_t v15 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_177;
      case 0x12u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_57;
        }
        uint64_t v17 = (char *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
        goto LABEL_194;
      case 0x13u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_57;
        }
        unsigned int v19 = (char *)*((void *)a2 + 1);
        unint64_t v18 = *((void *)a2 + 2);
        goto LABEL_205;
      case 0x14u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_57;
        }
        uint64_t v21 = (char *)*((void *)a2 + 1);
        unint64_t v20 = *((void *)a2 + 2);
        goto LABEL_216;
      case 0x15u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_51;
        }
        goto LABEL_57;
      case 0x16u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_57;
        }
        uint64_t v24 = (char *)*((void *)a2 + 1);
        unint64_t v22 = *((void *)a2 + 2);
        goto LABEL_61;
      default:
        int v6 = TagFallback & 7;
LABEL_57:
        if (v6 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment_SignalEnvironmentType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return (this + 1) < 8;
}

unsigned int *CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::SerializeWithCachedSizes(unsigned int *this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  unsigned int v5 = this;
  unsigned int v6 = this[38];
  if (v6)
  {
    this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, this[12], (uint64_t)a2, a4);
    unsigned int v6 = v5[38];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_28;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v7 = *((void *)v5 + 1);
  if (!v7)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::default_instance_ + 8);
  }
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  unsigned int v6 = v5[38];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_29;
  }
LABEL_28:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *((double *)v5 + 2), a3);
  unsigned int v6 = v5[38];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_30;
  }
LABEL_29:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *((double *)v5 + 3), a3);
  unsigned int v6 = v5[38];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_31;
  }
LABEL_30:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *((double *)v5 + 4), a3);
  unsigned int v6 = v5[38];
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_32;
  }
LABEL_31:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *((double *)v5 + 5), a3);
  unsigned int v6 = v5[38];
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_33;
  }
LABEL_32:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (uint64_t)a2, *((double *)v5 + 7), a3);
  unsigned int v6 = v5[38];
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_34;
  }
LABEL_33:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (uint64_t)a2, *((double *)v5 + 8), a3);
  unsigned int v6 = v5[38];
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_35;
  }
LABEL_34:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (uint64_t)a2, *((double *)v5 + 9), a3);
  unsigned int v6 = v5[38];
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_36;
  }
LABEL_35:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (uint64_t)a2, *((double *)v5 + 10), a3);
  unsigned int v6 = v5[38];
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_37;
  }
LABEL_36:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v5[13], (uint64_t)a2, a4);
  unsigned int v6 = v5[38];
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_38;
  }
LABEL_37:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, (uint64_t)a2, *((double *)v5 + 11), a3);
  unsigned int v6 = v5[38];
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_39;
  }
LABEL_38:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, v5[26], (uint64_t)a2, a4);
  unsigned int v6 = v5[38];
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_42;
  }
LABEL_39:
  uint64_t v8 = *((void *)v5 + 12);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v8 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::default_instance_ + 96);
  }
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, v8, a2, a4);
  unsigned int v6 = v5[38];
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_43;
  }
LABEL_42:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, (uint64_t)a2, *((double *)v5 + 14), a3);
  unsigned int v6 = v5[38];
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_44;
  }
LABEL_43:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, v5[27], (uint64_t)a2, a4);
  unsigned int v6 = v5[38];
  if ((v6 & 0x10000) == 0)
  {
LABEL_18:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_45;
  }
LABEL_44:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, v5[30], (uint64_t)a2, a4);
  unsigned int v6 = v5[38];
  if ((v6 & 0x20000) == 0)
  {
LABEL_19:
    if ((v6 & 0x40000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_46;
  }
LABEL_45:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, v5[31], (uint64_t)a2, a4);
  unsigned int v6 = v5[38];
  if ((v6 & 0x40000) == 0)
  {
LABEL_20:
    if ((v6 & 0x80000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_47;
  }
LABEL_46:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, v5[32], (uint64_t)a2, a4);
  unsigned int v6 = v5[38];
  if ((v6 & 0x80000) == 0)
  {
LABEL_21:
    if ((v6 & 0x100000) == 0) {
      goto LABEL_22;
    }
LABEL_48:
    this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x15, (uint64_t)a2, *((double *)v5 + 17), a3);
    if ((v5[38] & 0x200000) == 0) {
      return this;
    }
    goto LABEL_49;
  }
LABEL_47:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14, v5[33], (uint64_t)a2, a4);
  unsigned int v6 = v5[38];
  if ((v6 & 0x100000) != 0) {
    goto LABEL_48;
  }
LABEL_22:
  if ((v6 & 0x200000) == 0) {
    return this;
  }
LABEL_49:
  uint64_t v9 = *((unsigned __int8 *)v5 + 144);

  return (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x16, v9, (uint64_t)a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::ByteSize(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 152);
  if (!(_BYTE)v2)
  {
    uint64_t v4 = 0;
    goto LABEL_32;
  }
  if (v2)
  {
    unsigned int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(this + 48);
    if ((v5 & 0x80000000) != 0)
    {
      this = 10;
    }
    else if (v5 >= 0x80)
    {
      this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
      int v2 = *(_DWORD *)(v1 + 152);
    }
    else
    {
      this = 1;
    }
    int v3 = this + 1;
    if ((v2 & 2) == 0) {
      goto LABEL_19;
    }
LABEL_12:
    uint64_t v6 = *(void *)(v1 + 8);
    if (!v6)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      uint64_t v6 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::default_instance_ + 8);
    }
    int v7 = *(unsigned __int8 *)(v6 + 28);
    if (*(unsigned char *)(v6 + 28))
    {
      if ((v7 & 2) != 0) {
        int v7 = ((v7 << 31 >> 31) & 9) + 9;
      }
      else {
        int v7 = (v7 << 31 >> 31) & 9;
      }
    }
    *(_DWORD *)(v6 + 24) = v7;
    v3 += v7 + 2;
    int v2 = *(_DWORD *)(v1 + 152);
    goto LABEL_19;
  }
  int v3 = 0;
  if ((v2 & 2) != 0) {
    goto LABEL_12;
  }
LABEL_19:
  unsigned int v8 = v3 + 9;
  if ((v2 & 4) == 0) {
    unsigned int v8 = v3;
  }
  if ((v2 & 8) != 0) {
    v8 += 9;
  }
  if ((v2 & 0x10) != 0) {
    v8 += 9;
  }
  if ((v2 & 0x20) != 0) {
    v8 += 9;
  }
  if ((v2 & 0x40) != 0) {
    v8 += 9;
  }
  if ((v2 & 0x80) != 0) {
    uint64_t v4 = v8 + 9;
  }
  else {
    uint64_t v4 = v8;
  }
LABEL_32:
  if ((v2 & 0xFF00) != 0)
  {
    int v9 = v4 + 9;
    if ((v2 & 0x100) == 0) {
      int v9 = v4;
    }
    if ((v2 & 0x200) != 0) {
      LODWORD(v4) = v9 + 9;
    }
    else {
      LODWORD(v4) = v9;
    }
    if ((v2 & 0x400) != 0)
    {
      unsigned int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 52);
      if ((v10 & 0x80000000) != 0)
      {
        this = 10;
      }
      else if (v10 >= 0x80)
      {
        this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
        int v2 = *(_DWORD *)(v1 + 152);
      }
      else
      {
        this = 1;
      }
      LODWORD(v4) = v4 + this + 1;
    }
    if ((v2 & 0x800) != 0) {
      LODWORD(v4) = v4 + 9;
    }
    if ((v2 & 0x1000) != 0)
    {
      unint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 104);
      if ((v11 & 0x80000000) != 0)
      {
        this = 10;
      }
      else if (v11 >= 0x80)
      {
        this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11);
        int v2 = *(_DWORD *)(v1 + 152);
      }
      else
      {
        this = 1;
      }
      LODWORD(v4) = v4 + this + 1;
    }
    if ((v2 & 0x2000) != 0)
    {
      uint64_t v12 = *(void *)(v1 + 96);
      if (!v12)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
        uint64_t v12 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::default_instance_ + 96);
      }
      int v13 = *(unsigned __int8 *)(v12 + 28);
      int v14 = (v13 << 31 >> 31) & 9;
      if ((v13 & 2) != 0) {
        v14 += 9;
      }
      if (*(unsigned char *)(v12 + 28)) {
        int v15 = v14;
      }
      else {
        int v15 = 0;
      }
      *(_DWORD *)(v12 + 24) = v15;
      LODWORD(v4) = v4 + v15 + 2;
      int v2 = *(_DWORD *)(v1 + 152);
    }
    if ((v2 & 0x4000) != 0) {
      uint64_t v4 = (v4 + 9);
    }
    else {
      uint64_t v4 = v4;
    }
    if ((v2 & 0x8000) != 0)
    {
      unint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 108);
      if ((v16 & 0x80000000) != 0)
      {
        int v17 = 12;
      }
      else if (v16 >= 0x80)
      {
        int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16) + 2;
        int v2 = *(_DWORD *)(v1 + 152);
      }
      else
      {
        int v17 = 3;
      }
      uint64_t v4 = (v17 + v4);
    }
  }
  if ((v2 & 0xFF0000) != 0)
  {
    if ((v2 & 0x10000) != 0)
    {
      unint64_t v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 120);
      if ((v18 & 0x80000000) != 0)
      {
        int v19 = 12;
      }
      else if (v18 >= 0x80)
      {
        int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18) + 2;
        int v2 = *(_DWORD *)(v1 + 152);
      }
      else
      {
        int v19 = 3;
      }
      LODWORD(v4) = v19 + v4;
      if ((v2 & 0x20000) == 0)
      {
LABEL_76:
        if ((v2 & 0x40000) == 0) {
          goto LABEL_77;
        }
        goto LABEL_91;
      }
    }
    else if ((v2 & 0x20000) == 0)
    {
      goto LABEL_76;
    }
    unint64_t v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 124);
    if ((v20 & 0x80000000) != 0)
    {
      int v21 = 12;
    }
    else if (v20 >= 0x80)
    {
      int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20) + 2;
      int v2 = *(_DWORD *)(v1 + 152);
    }
    else
    {
      int v21 = 3;
    }
    LODWORD(v4) = v21 + v4;
    if ((v2 & 0x40000) == 0)
    {
LABEL_77:
      if ((v2 & 0x80000) == 0) {
        goto LABEL_103;
      }
      goto LABEL_97;
    }
LABEL_91:
    unint64_t v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 128);
    if ((v22 & 0x80000000) != 0)
    {
      int v23 = 12;
    }
    else if (v22 >= 0x80)
    {
      int v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22) + 2;
      int v2 = *(_DWORD *)(v1 + 152);
    }
    else
    {
      int v23 = 3;
    }
    LODWORD(v4) = v23 + v4;
    if ((v2 & 0x80000) == 0)
    {
LABEL_103:
      unsigned int v26 = v4 + 10;
      if ((v2 & 0x100000) == 0) {
        unsigned int v26 = v4;
      }
      if ((v2 & 0x200000) != 0) {
        uint64_t v4 = v26 + 3;
      }
      else {
        uint64_t v4 = v26;
      }
      goto LABEL_108;
    }
LABEL_97:
    uint64_t v24 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 132);
    if ((v24 & 0x80000000) != 0)
    {
      int v25 = 12;
    }
    else if (v24 >= 0x80)
    {
      int v25 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v24) + 2;
      int v2 = *(_DWORD *)(v1 + 152);
    }
    else
    {
      int v25 = 3;
    }
    LODWORD(v4) = v25 + v4;
    goto LABEL_103;
  }
LABEL_108:
  *(_DWORD *)(v1 + 148) = v4;
  return v4;
}

void CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation *this, const CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::Swap(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation *this, CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation *a2)
{
  if (a2 != this)
  {
    int v2 = *((_DWORD *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v2;
    uint64_t v3 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v3;
    uint64_t v4 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v4;
    uint64_t v5 = *((void *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v5;
    uint64_t v6 = *((void *)this + 4);
    *((void *)this + 4) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v6;
    uint64_t v7 = *((void *)this + 5);
    *((void *)this + 5) = *((void *)a2 + 5);
    *((void *)a2 + 5) = v7;
    uint64_t v8 = *((void *)this + 7);
    *((void *)this + 7) = *((void *)a2 + 7);
    *((void *)a2 + 7) = v8;
    uint64_t v9 = *((void *)this + 8);
    *((void *)this + 8) = *((void *)a2 + 8);
    *((void *)a2 + 8) = v9;
    uint64_t v10 = *((void *)this + 9);
    *((void *)this + 9) = *((void *)a2 + 9);
    *((void *)a2 + 9) = v10;
    uint64_t v11 = *((void *)this + 10);
    *((void *)this + 10) = *((void *)a2 + 10);
    *((void *)a2 + 10) = v11;
    LODWORD(v3) = *((_DWORD *)this + 13);
    *((_DWORD *)this + 13) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v3;
    uint64_t v12 = *((void *)this + 11);
    *((void *)this + 11) = *((void *)a2 + 11);
    *((void *)a2 + 11) = v12;
    LODWORD(v3) = *((_DWORD *)this + 26);
    *((_DWORD *)this + 26) = *((_DWORD *)a2 + 26);
    *((_DWORD *)a2 + 26) = v3;
    uint64_t v13 = *((void *)this + 12);
    *((void *)this + 12) = *((void *)a2 + 12);
    *((void *)a2 + 12) = v13;
    uint64_t v14 = *((void *)this + 14);
    *((void *)this + 14) = *((void *)a2 + 14);
    *((void *)a2 + 14) = v14;
    LODWORD(v13) = *((_DWORD *)this + 27);
    *((_DWORD *)this + 27) = *((_DWORD *)a2 + 27);
    *((_DWORD *)a2 + 27) = v13;
    LODWORD(v13) = *((_DWORD *)this + 30);
    *((_DWORD *)this + 30) = *((_DWORD *)a2 + 30);
    *((_DWORD *)a2 + 30) = v13;
    LODWORD(v13) = *((_DWORD *)this + 31);
    *((_DWORD *)this + 31) = *((_DWORD *)a2 + 31);
    *((_DWORD *)a2 + 31) = v13;
    LODWORD(v13) = *((_DWORD *)this + 32);
    *((_DWORD *)this + 32) = *((_DWORD *)a2 + 32);
    *((_DWORD *)a2 + 32) = v13;
    LODWORD(v13) = *((_DWORD *)this + 33);
    *((_DWORD *)this + 33) = *((_DWORD *)a2 + 33);
    *((_DWORD *)a2 + 33) = v13;
    double result = *((double *)this + 17);
    *((void *)this + 17) = *((void *)a2 + 17);
    *((double *)a2 + 17) = result;
    LOBYTE(v13) = *((unsigned char *)this + 144);
    *((unsigned char *)this + 144) = *((unsigned char *)a2 + 144);
    *((unsigned char *)a2 + 144) = v13;
    LODWORD(v13) = *((_DWORD *)this + 38);
    *((_DWORD *)this + 38) = *((_DWORD *)a2 + 38);
    *((_DWORD *)a2 + 38) = v13;
    LODWORD(v13) = *((_DWORD *)this + 37);
    *((_DWORD *)this + 37) = *((_DWORD *)a2 + 37);
    *((_DWORD *)a2 + 37) = v13;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.DaemonLocation");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData::SharedCtor(uint64_t this)
{
  *(_DWORD *)(this + 28) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(_WORD *)(this + 24) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData *CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData::MapMatcherData(CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData *this, const CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData *a2)
{
  *((_DWORD *)this + 7) = 0;
  *((_DWORD *)this + 8) = 0;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)this = &unk_1EDD0BEE8;
  *((_WORD *)this + 12) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData::MergeFrom(this, a2);
  return this;
}

void sub_18DF675B8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData *this, const CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 32))
    {
      uint64_t v6 = *((void *)a2 + 1);
      *((_DWORD *)this + 8) |= 1u;
      *((void *)this + 1) = v6;
      int v4 = *((_DWORD *)a2 + 8);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_12;
      }
    }
    else if ((*((unsigned char *)a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    uint64_t v7 = *((void *)a2 + 2);
    *((_DWORD *)this + 8) |= 2u;
    *((void *)this + 2) = v7;
    int v4 = *((_DWORD *)a2 + 8);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        return;
      }
      goto LABEL_8;
    }
LABEL_12:
    char v8 = *((unsigned char *)a2 + 24);
    *((_DWORD *)this + 8) |= 4u;
    *((unsigned char *)this + 24) = v8;
    if ((*((_DWORD *)a2 + 8) & 8) == 0) {
      return;
    }
LABEL_8:
    char v5 = *((unsigned char *)a2 + 25);
    *((_DWORD *)this + 8) |= 8u;
    *((unsigned char *)this + 25) = v5;
  }
}

void sub_18DF676C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData::~MapMatcherData(CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData *this)
{
  *(void *)this = &unk_1EDD0BEE8;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData::~MapMatcherData(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 28) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData::New(CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 32))
  {
    *(void *)(this + 8) = 0;
    *(void *)(this + 16) = 0;
    *(_WORD *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 32) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (2)
  {
    int v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_24;
        }
        *(void *)int v17 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v17) & 1) == 0)return 0; {
        *((void *)this + 1) = *(void *)v17;
        }
        *((_DWORD *)this + 8) |= 1u;
        uint64_t v7 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v7 >= *((void *)a2 + 2) || *v7 != 17) {
          continue;
        }
        *((void *)a2 + 1) = v7 + 1;
        goto LABEL_14;
      case 2u:
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_24;
        }
LABEL_14:
        *(void *)int v17 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v17) & 1) == 0)return 0; {
        *((void *)this + 2) = *(void *)v17;
        }
        *((_DWORD *)this + 8) |= 2u;
        uint64_t v9 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v8 = *((void *)a2 + 2);
        if ((unint64_t)v9 >= v8 || *v9 != 24) {
          continue;
        }
        uint64_t v10 = v9 + 1;
        *((void *)a2 + 1) = v10;
LABEL_20:
        v17[0] = 0;
        if ((unint64_t)v10 >= v8 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v17);
          if (!result) {
            return result;
          }
          unsigned int v11 = v17[0];
          uint64_t v12 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v8 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v11 = *v10;
          uint64_t v12 = v10 + 1;
          *((void *)a2 + 1) = v12;
        }
        *((unsigned char *)this + 24) = v11 != 0;
        *((_DWORD *)this + 8) |= 4u;
        if ((unint64_t)v12 >= v8 || *v12 != 32) {
          continue;
        }
        uint64_t v13 = v12 + 1;
        *((void *)a2 + 1) = v13;
LABEL_33:
        v17[0] = 0;
        if ((unint64_t)v13 >= v8 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v17);
          if (!result) {
            return result;
          }
          unsigned int v15 = v17[0];
          unint64_t v16 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v8 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v15 = *v13;
          unint64_t v16 = (unsigned __int8 *)(v13 + 1);
          *((void *)a2 + 1) = v16;
        }
        *((unsigned char *)this + 25) = v15 != 0;
        *((_DWORD *)this + 8) |= 8u;
        if (v16 != (unsigned __int8 *)v8 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10)) {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        break;
      case 3u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        uint64_t v10 = (char *)*((void *)a2 + 1);
        unint64_t v8 = *((void *)a2 + 2);
        goto LABEL_20;
      case 4u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        uint64_t v13 = (char *)*((void *)a2 + 1);
        unint64_t v8 = *((void *)a2 + 2);
        goto LABEL_33;
      default:
        int v6 = TagFallback & 7;
LABEL_24:
        if (v6 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 32);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
    int v6 = *(_DWORD *)(v5 + 32);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 24), (uint64_t)a2, a4);
      if ((*(_DWORD *)(v5 + 32) & 8) == 0) {
        return this;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return this;
  }
LABEL_9:
  uint64_t v7 = *(unsigned __int8 *)(v5 + 25);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v7, (uint64_t)a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData *this)
{
  uint64_t v1 = *((unsigned __int8 *)this + 32);
  if (*((unsigned char *)this + 32))
  {
    unsigned int v2 = ((int)(v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0) {
      v2 += 9;
    }
    if ((v1 & 4) != 0) {
      v2 += 2;
    }
    if ((v1 & 8) != 0) {
      uint64_t v1 = v2 + 2;
    }
    else {
      uint64_t v1 = v2;
    }
  }
  *((_DWORD *)this + 7) = v1;
  return v1;
}

void CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData *this, const CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData::Swap(CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData *this, CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    double result = *((double *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((double *)a2 + 2) = result;
    char v4 = *((unsigned char *)this + 24);
    *((unsigned char *)this + 24) = *((unsigned char *)a2 + 24);
    *((unsigned char *)a2 + 24) = v4;
    char v5 = *((unsigned char *)this + 25);
    *((unsigned char *)this + 25) = *((unsigned char *)a2 + 25);
    *((unsigned char *)a2 + 25) = v5;
    int v6 = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v6;
    int v7 = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v7;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.MapMatcherData");
}

void *CoreNavigation::CLP::LogEntry::PrivateData::PressureSample::SharedCtor(void *this)
{
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::PressureSample *CoreNavigation::CLP::LogEntry::PrivateData::PressureSample::PressureSample(CoreNavigation::CLP::LogEntry::PrivateData::PressureSample *this, const CoreNavigation::CLP::LogEntry::PrivateData::PressureSample *a2)
{
  *(void *)this = &unk_1EDD0C050;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::PressureSample::MergeFrom(this, a2);
  return this;
}

void sub_18DF67D98(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::PressureSample::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::PressureSample *this, const CoreNavigation::CLP::LogEntry::PrivateData::PressureSample *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 28);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 28))
    {
      double result = *((double *)a2 + 1);
      *((_DWORD *)this + 7) |= 1u;
      *((double *)this + 1) = result;
      int v5 = *((_DWORD *)a2 + 7);
    }
    if ((v5 & 2) != 0)
    {
      double result = *((double *)a2 + 2);
      *((_DWORD *)this + 7) |= 2u;
      *((double *)this + 2) = result;
    }
  }
  return result;
}

void sub_18DF67E58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::PressureSample::~PressureSample(CoreNavigation::CLP::LogEntry::PrivateData::PressureSample *this)
{
  *(void *)this = &unk_1EDD0C050;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::PressureSample::~PressureSample(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::PressureSample::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::PressureSample *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::PressureSample::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::PressureSample::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 24) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::PressureSample::New(CoreNavigation::CLP::LogEntry::PrivateData::PressureSample *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::PressureSample::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 28))
  {
    *(void *)(this + 8) = 0;
    *(void *)(this + 16) = 0;
  }
  *(_DWORD *)(this + 28) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::PressureSample::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::PressureSample *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  do
  {
    while (1)
    {
      while (1)
      {
        char v4 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v4;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((void *)a2 + 1) = v4 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_21;
        }
        unint64_t v9 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v9) & 1) == 0) {
          return 0;
        }
        *((void *)this + 1) = v9;
        *((_DWORD *)this + 7) |= 1u;
        int v7 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v7 < *((void *)a2 + 2) && *v7 == 17)
        {
          *((void *)a2 + 1) = v7 + 1;
          goto LABEL_15;
        }
      }
      if (TagFallback >> 3 != 2)
      {
        int v6 = TagFallback & 7;
        goto LABEL_21;
      }
      int v6 = TagFallback & 7;
      if (v6 == 1) {
        break;
      }
LABEL_21:
      if (v6 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
    }
      }
LABEL_15:
    unint64_t v9 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v9) & 1) == 0) {
      return 0;
    }
    *((void *)this + 2) = v9;
    *((_DWORD *)this + 7) |= 2u;
  }
  while (*((void *)a2 + 1) != *((void *)a2 + 2)
       || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10));
  *((_DWORD *)a2 + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)a2 + 36) = 1;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::PressureSample::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = this;
  int v5 = *(_DWORD *)(this + 28);
  if (v5)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
    int v5 = *(_DWORD *)(v4 + 28);
  }
  if ((v5 & 2) != 0)
  {
    double v6 = *(double *)(v4 + 16);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, v6, a3);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::PressureSample::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::PressureSample *this)
{
  uint64_t v1 = *((unsigned __int8 *)this + 28);
  if (*((unsigned char *)this + 28))
  {
    unsigned int v2 = ((int)(v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0) {
      uint64_t v1 = v2 + 9;
    }
    else {
      uint64_t v1 = v2;
    }
  }
  *((_DWORD *)this + 6) = v1;
  return v1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::PressureSample::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::PressureSample *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::PressureSample::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::PressureSample::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::PressureSample *this, const CoreNavigation::CLP::LogEntry::PrivateData::PressureSample *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::PressureSample *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::PressureSample::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::PressureSample::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::PressureSample *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::PressureSample::Swap(CoreNavigation::CLP::LogEntry::PrivateData::PressureSample *this, CoreNavigation::CLP::LogEntry::PrivateData::PressureSample *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    double result = *((double *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((double *)a2 + 2) = result;
    int v4 = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v4;
    int v5 = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v5;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::PressureSample::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.PressureSample");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo::SharedCtor(uint64_t this)
{
  *(_DWORD *)(this + 36) = 0;
  *(_DWORD *)(this + 40) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  *(void *)(this + 8) = 0;
  *(_WORD *)(this + 32) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo *CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo::ClientSatelliteInfo(CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo *this, const CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo *a2)
{
  *((_DWORD *)this + 9) = 0;
  *((_DWORD *)this + 10) = 0;
  *(void *)this = &unk_1EDD0D568;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((_WORD *)this + 16) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo::MergeFrom(this, a2);
  return this;
}

void sub_18DF68398(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo *this, const CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 40);
  if (!(_BYTE)v4) {
    return;
  }
  if (*((unsigned char *)a2 + 40))
  {
    unsigned int v5 = *((_DWORD *)a2 + 2);
    if (v5 >= 7) {
      __assert_rtn("set_constellation", "CoreNavigationCLPPrivateDataShared.pb.h", 14986, "::CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteConstellation_IsValid(value)");
    }
    *((_DWORD *)this + 10) |= 1u;
    *((_DWORD *)this + 2) = v5;
    int v4 = *((_DWORD *)a2 + 10);
  }
  if ((v4 & 2) != 0)
  {
    int v7 = *((_DWORD *)a2 + 3);
    *((_DWORD *)this + 10) |= 2u;
    *((_DWORD *)this + 3) = v7;
    int v4 = *((_DWORD *)a2 + 10);
    if ((v4 & 4) == 0)
    {
LABEL_9:
      if ((v4 & 8) == 0) {
        goto LABEL_10;
      }
      goto LABEL_18;
    }
  }
  else if ((v4 & 4) == 0)
  {
    goto LABEL_9;
  }
  int v8 = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 10) |= 4u;
  *((_DWORD *)this + 4) = v8;
  int v4 = *((_DWORD *)a2 + 10);
  if ((v4 & 8) == 0)
  {
LABEL_10:
    if ((v4 & 0x10) == 0) {
      goto LABEL_11;
    }
    goto LABEL_19;
  }
LABEL_18:
  int v9 = *((_DWORD *)a2 + 5);
  *((_DWORD *)this + 10) |= 8u;
  *((_DWORD *)this + 5) = v9;
  int v4 = *((_DWORD *)a2 + 10);
  if ((v4 & 0x10) == 0)
  {
LABEL_11:
    if ((v4 & 0x20) == 0) {
      goto LABEL_12;
    }
LABEL_20:
    int v11 = *((_DWORD *)a2 + 7);
    *((_DWORD *)this + 10) |= 0x20u;
    *((_DWORD *)this + 7) = v11;
    int v4 = *((_DWORD *)a2 + 10);
    if ((v4 & 0x40) == 0)
    {
LABEL_13:
      if ((v4 & 0x80) == 0) {
        return;
      }
      goto LABEL_14;
    }
    goto LABEL_21;
  }
LABEL_19:
  int v10 = *((_DWORD *)a2 + 6);
  *((_DWORD *)this + 10) |= 0x10u;
  *((_DWORD *)this + 6) = v10;
  int v4 = *((_DWORD *)a2 + 10);
  if ((v4 & 0x20) != 0) {
    goto LABEL_20;
  }
LABEL_12:
  if ((v4 & 0x40) == 0) {
    goto LABEL_13;
  }
LABEL_21:
  char v12 = *((unsigned char *)a2 + 32);
  *((_DWORD *)this + 10) |= 0x40u;
  *((unsigned char *)this + 32) = v12;
  if ((*((_DWORD *)a2 + 10) & 0x80) != 0)
  {
LABEL_14:
    char v6 = *((unsigned char *)a2 + 33);
    *((_DWORD *)this + 10) |= 0x80u;
    *((unsigned char *)this + 33) = v6;
  }
}

void sub_18DF68544(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo::~ClientSatelliteInfo(CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo *this)
{
  *(void *)this = &unk_1EDD0D568;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo::~ClientSatelliteInfo(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 36) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo::New(CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 40))
  {
    *(void *)(this + 8) = 0;
    *(void *)(this + 16) = 0;
    *(_WORD *)(this + 32) = 0;
    *(void *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 40) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (2)
  {
    int v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        unsigned int v26 = 0;
        int v7 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v7 >= *((void *)a2 + 2) || *v7 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v26);
          if (!result) {
            return result;
          }
          unsigned int v8 = v26;
        }
        else
        {
          unsigned int v8 = *v7;
          *((void *)a2 + 1) = v7 + 1;
        }
        if (v8 <= 6)
        {
          *((_DWORD *)this + 10) |= 1u;
          *((_DWORD *)this + 2) = v8;
        }
        unsigned int v15 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        if ((unint64_t)v15 < v9 && *v15 == 16)
        {
          int v10 = v15 + 1;
          *((void *)a2 + 1) = v10;
          goto LABEL_36;
        }
        continue;
      case 2u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        int v10 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
LABEL_36:
        unsigned int v26 = 0;
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v26);
          if (!result) {
            return result;
          }
          unsigned int v16 = v26;
          int v17 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v16 = *v10;
          int v17 = v10 + 1;
          *((void *)a2 + 1) = v17;
        }
        *((_DWORD *)this + 3) = v16;
        *((_DWORD *)this + 10) |= 2u;
        if ((unint64_t)v17 >= v9 || *v17 != 29) {
          continue;
        }
        *((void *)a2 + 1) = v17 + 1;
LABEL_44:
        unsigned int v26 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v26) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 4) = v26;
        *((_DWORD *)this + 10) |= 4u;
        unint64_t v18 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v18 >= *((void *)a2 + 2) || *v18 != 37) {
          continue;
        }
        *((void *)a2 + 1) = v18 + 1;
LABEL_48:
        unsigned int v26 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v26) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 5) = v26;
        *((_DWORD *)this + 10) |= 8u;
        int v19 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v19 >= *((void *)a2 + 2) || *v19 != 45) {
          continue;
        }
        *((void *)a2 + 1) = v19 + 1;
LABEL_52:
        unsigned int v26 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v26) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 6) = v26;
        *((_DWORD *)this + 10) |= 0x10u;
        unint64_t v20 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v20 >= *((void *)a2 + 2) || *v20 != 53) {
          continue;
        }
        *((void *)a2 + 1) = v20 + 1;
LABEL_56:
        unsigned int v26 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v26))
        {
          *((_DWORD *)this + 7) = v26;
          *((_DWORD *)this + 10) |= 0x20u;
          int v21 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v11 = *((void *)a2 + 2);
          if ((unint64_t)v21 < v11 && *v21 == 56)
          {
            char v12 = v21 + 1;
            *((void *)a2 + 1) = v12;
LABEL_60:
            unsigned int v26 = 0;
            if ((unint64_t)v12 >= v11 || *v12 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v26);
              if (!result) {
                return result;
              }
              unsigned int v22 = v26;
              int v23 = (unsigned char *)*((void *)a2 + 1);
              unint64_t v11 = *((void *)a2 + 2);
            }
            else
            {
              unsigned int v22 = *v12;
              int v23 = v12 + 1;
              *((void *)a2 + 1) = v23;
            }
            *((unsigned char *)this + 32) = v22 != 0;
            *((_DWORD *)this + 10) |= 0x40u;
            if ((unint64_t)v23 < v11 && *v23 == 64)
            {
              uint64_t v13 = v23 + 1;
              *((void *)a2 + 1) = v13;
LABEL_68:
              unsigned int v26 = 0;
              if ((unint64_t)v13 >= v11 || *v13 < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v26);
                if (!result) {
                  return result;
                }
                unsigned int v24 = v26;
                int v25 = (unsigned __int8 *)*((void *)a2 + 1);
                unint64_t v11 = *((void *)a2 + 2);
              }
              else
              {
                unsigned int v24 = *v13;
                int v25 = (unsigned __int8 *)(v13 + 1);
                *((void *)a2 + 1) = v25;
              }
              *((unsigned char *)this + 33) = v24 != 0;
              *((_DWORD *)this + 10) |= 0x80u;
              if (v25 == (unsigned __int8 *)v11
                && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
              {
                *((_DWORD *)a2 + 8) = 0;
                uint64_t result = 1;
                *((unsigned char *)a2 + 36) = 1;
                return result;
              }
            }
          }
          continue;
        }
        return 0;
      case 3u:
        int v6 = TagFallback & 7;
        if (v6 == 5) {
          goto LABEL_44;
        }
        goto LABEL_25;
      case 4u:
        int v6 = TagFallback & 7;
        if (v6 == 5) {
          goto LABEL_48;
        }
        goto LABEL_25;
      case 5u:
        int v6 = TagFallback & 7;
        if (v6 == 5) {
          goto LABEL_52;
        }
        goto LABEL_25;
      case 6u:
        int v6 = TagFallback & 7;
        if (v6 == 5) {
          goto LABEL_56;
        }
        goto LABEL_25;
      case 7u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        char v12 = (char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
        goto LABEL_60;
      case 8u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        uint64_t v13 = (char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
        goto LABEL_68;
      default:
        int v6 = TagFallback & 7;
LABEL_25:
        if (v6 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 40);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 40);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 12), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(float *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_14;
  }
LABEL_13:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(float *)(v5 + 20), a3);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_15;
  }
LABEL_14:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(float *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
LABEL_16:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned __int8 *)(v5 + 32), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 40) & 0x80) == 0) {
      return this;
    }
    goto LABEL_17;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(float *)(v5 + 28), a3);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 0x40) != 0) {
    goto LABEL_16;
  }
LABEL_8:
  if ((v6 & 0x80) == 0) {
    return this;
  }
LABEL_17:
  uint64_t v7 = *(unsigned __int8 *)(v5 + 33);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v7, (uint64_t)a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 40);
  if (!(_BYTE)v2)
  {
    uint64_t result = 0;
    goto LABEL_32;
  }
  if ((*((unsigned char *)this + 40) & 1) == 0)
  {
    int v3 = 0;
    if ((*((unsigned char *)this + 40) & 2) == 0) {
      goto LABEL_19;
    }
LABEL_13:
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
    if ((v6 & 0x80000000) != 0)
    {
      int v7 = 11;
    }
    else if (v6 >= 0x80)
    {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6) + 1;
      int v2 = *((_DWORD *)this + 10);
    }
    else
    {
      int v7 = 2;
    }
    v3 += v7;
    goto LABEL_19;
  }
  uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
  if ((v5 & 0x80000000) != 0)
  {
    int v3 = 11;
    if ((v2 & 2) == 0) {
      goto LABEL_19;
    }
    goto LABEL_13;
  }
  if (v5 < 0x80)
  {
    int v3 = 2;
    if ((v2 & 2) == 0) {
      goto LABEL_19;
    }
    goto LABEL_13;
  }
  int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
  int v2 = *((_DWORD *)this + 10);
  if ((v2 & 2) != 0) {
    goto LABEL_13;
  }
LABEL_19:
  unsigned int v8 = v3 + 5;
  if ((v2 & 4) == 0) {
    unsigned int v8 = v3;
  }
  if ((v2 & 8) != 0) {
    v8 += 5;
  }
  if ((v2 & 0x10) != 0) {
    v8 += 5;
  }
  if ((v2 & 0x20) != 0) {
    v8 += 5;
  }
  if ((v2 & 0x40) != 0) {
    v8 += 2;
  }
  if ((v2 & 0x80) != 0) {
    uint64_t result = v8 + 2;
  }
  else {
    uint64_t result = v8;
  }
LABEL_32:
  *((_DWORD *)this + 9) = result;
  return result;
}

void CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo *this, const CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo *this)
{
  return 1;
}

float CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo::Swap(CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo *this, CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo *a2)
{
  if (a2 != this)
  {
    int v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    int v3 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    int v4 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v4;
    int v5 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v5;
    int v6 = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v6;
    float result = *((float *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((float *)a2 + 7) = result;
    LOBYTE(v3) = *((unsigned char *)this + 32);
    *((unsigned char *)this + 32) = *((unsigned char *)a2 + 32);
    *((unsigned char *)a2 + 32) = v3;
    LOBYTE(v3) = *((unsigned char *)this + 33);
    *((unsigned char *)this + 33) = *((unsigned char *)a2 + 33);
    *((unsigned char *)a2 + 33) = v3;
    int v8 = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v8;
    int v9 = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v9;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.ClientSatelliteInfo");
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_MatchQualityType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 4;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_UndulationModelType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return (this + 1) < 4;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_ClientLocationOriginDeviceType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 3;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_GnssContent_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 3;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_PositionContextStateType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 3;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_MapMatcherType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 4;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_LoiLocationSourceAccuracy_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 3;
}

double CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo *this)
{
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *(void *)&double result = 0xFFFFFFFFLL;
  *((void *)this + 4) = 0xFFFFFFFFLL;
  *((_DWORD *)this + 10) = 0;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo *CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo::DaemonLocationPrivate_AltitudeInfo(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo *this, const CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo *a2)
{
  *(void *)this = &unk_1EDD0E7B0;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((void *)this + 4) = 0xFFFFFFFFLL;
  *((_DWORD *)this + 10) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo::MergeFrom(this, a2);
  return this;
}

void sub_18DF68FB4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo *this, const CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 40);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 40))
    {
      uint64_t v5 = *((void *)a2 + 1);
      *((_DWORD *)this + 10) |= 1u;
      *((void *)this + 1) = v5;
      int v4 = *((_DWORD *)a2 + 10);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_11;
      }
    }
    else if ((*((unsigned char *)a2 + 40) & 2) == 0)
    {
      goto LABEL_6;
    }
    uint64_t v6 = *((void *)a2 + 2);
    *((_DWORD *)this + 10) |= 2u;
    *((void *)this + 2) = v6;
    int v4 = *((_DWORD *)a2 + 10);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        return;
      }
LABEL_12:
      int v8 = *((_DWORD *)a2 + 8);
      if ((v8 + 1) >= 4) {
        __assert_rtn("set_undulation_model", "CoreNavigationCLPPrivateDataShared.pb.h", 15233, "::CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_UndulationModelType_IsValid(value)");
      }
      *((_DWORD *)this + 10) |= 8u;
      *((_DWORD *)this + 8) = v8;
      return;
    }
LABEL_11:
    uint64_t v7 = *((void *)a2 + 3);
    *((_DWORD *)this + 10) |= 4u;
    *((void *)this + 3) = v7;
    if ((*((_DWORD *)a2 + 10) & 8) == 0) {
      return;
    }
    goto LABEL_12;
  }
}

void sub_18DF690E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo::~DaemonLocationPrivate_AltitudeInfo(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo *this)
{
  *(void *)this = &unk_1EDD0E7B0;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo::~DaemonLocationPrivate_AltitudeInfo(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 36) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo::New(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 40))
  {
    *(void *)(this + 8) = 0;
    *(void *)(this + 16) = 0;
    *(void *)(this + 24) = 0;
    *(_DWORD *)(this + 32) = -1;
  }
  *(_DWORD *)(this + 40) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (2)
  {
    int v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_24;
        }
        *(void *)uint64_t v14 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v14) & 1) == 0)return 0; {
        *((void *)this + 1) = *(void *)v14;
        }
        *((_DWORD *)this + 10) |= 1u;
        uint64_t v7 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v7 >= *((void *)a2 + 2) || *v7 != 17) {
          continue;
        }
        *((void *)a2 + 1) = v7 + 1;
        goto LABEL_14;
      case 2u:
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_24;
        }
LABEL_14:
        *(void *)uint64_t v14 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v14) & 1) == 0)return 0; {
        *((void *)this + 2) = *(void *)v14;
        }
        *((_DWORD *)this + 10) |= 2u;
        int v8 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 != 25) {
          continue;
        }
        *((void *)a2 + 1) = v8 + 1;
LABEL_19:
        *(void *)uint64_t v14 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v14))
        {
          *((void *)this + 3) = *(void *)v14;
          *((_DWORD *)this + 10) |= 4u;
          int v10 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
          if ((unint64_t)v10 < v9 && *v10 == 32)
          {
            unint64_t v11 = v10 + 1;
            *((void *)a2 + 1) = v11;
LABEL_28:
            v14[0] = 0;
            if ((unint64_t)v11 >= v9 || *v11 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v14);
              if (!result) {
                return result;
              }
              unsigned int v12 = v14[0];
            }
            else
            {
              unsigned int v12 = *v11;
              *((void *)a2 + 1) = v11 + 1;
            }
            if (v12 + 1 <= 3)
            {
              *((_DWORD *)this + 10) |= 8u;
              *((_DWORD *)this + 8) = v12;
            }
            if (*((void *)a2 + 1) == *((void *)a2 + 2)
              && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
            {
              *((_DWORD *)a2 + 8) = 0;
              uint64_t result = 1;
              *((unsigned char *)a2 + 36) = 1;
              return result;
            }
          }
          continue;
        }
        return 0;
      case 3u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_19;
        }
        goto LABEL_24;
      case 4u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        unint64_t v11 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        goto LABEL_28;
      default:
        int v6 = TagFallback & 7;
LABEL_24:
        if (v6 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 40);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
    int v6 = *(_DWORD *)(v5 + 40);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 24), a3);
      if ((*(_DWORD *)(v5 + 40) & 8) == 0) {
        return this;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return this;
  }
LABEL_9:
  uint64_t v7 = *(unsigned int *)(v5 + 32);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v7, (uint64_t)a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo *this)
{
  int v2 = *((unsigned __int8 *)this + 40);
  if (*((unsigned char *)this + 40))
  {
    unsigned int v3 = (v2 << 31 >> 31) & 9;
    if ((v2 & 2) != 0) {
      v3 += 9;
    }
    if ((v2 & 4) != 0) {
      uint64_t v4 = v3 + 9;
    }
    else {
      uint64_t v4 = v3;
    }
    if ((v2 & 8) != 0)
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
      if ((v5 & 0x80000000) != 0)
      {
        int v6 = 11;
      }
      else if (v5 >= 0x80)
      {
        int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
      }
      else
      {
        int v6 = 2;
      }
      uint64_t v4 = (v6 + v4);
    }
  }
  else
  {
    uint64_t v4 = 0;
  }
  *((_DWORD *)this + 9) = v4;
  return v4;
}

void CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo *this, const CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo::Swap(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo *this, CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    uint64_t v3 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    double result = *((double *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    *((double *)a2 + 3) = result;
    int v5 = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v5;
    int v6 = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v6;
    int v7 = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v7;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.DaemonLocationPrivate.AltitudeInfo");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate *this)
{
  *(_OWORD *)((char *)this + 114) = 0u;
  uint64_t result = (uint64_t)this + 114;
  *(_DWORD *)(result + 242) = 0;
  *(_WORD *)(result - 2) = 0;
  *(_OWORD *)(result - 106) = 0u;
  *(_OWORD *)(result - 90) = 0u;
  *(_OWORD *)(result - 74) = 0u;
  *(_OWORD *)(result - 58) = 0u;
  *(_OWORD *)(result - 42) = 0u;
  *(void *)(result - 26) = 0;
  *(void *)(result - 18) = 0xFFFFFFFFLL;
  *(void *)(result - 10) = 0;
  *(void *)(result + 246) = 0;
  *(_OWORD *)(result + 16) = 0u;
  *(_OWORD *)(result + 32) = 0u;
  *(_OWORD *)(result + 48) = 0u;
  *(_OWORD *)(result + 64) = 0u;
  *(_OWORD *)(result + 80) = 0u;
  *(_OWORD *)(result + 96) = 0u;
  *(_OWORD *)(result + 112) = 0u;
  *(_OWORD *)(result + 128) = 0u;
  *(_OWORD *)(result + 144) = 0u;
  *(_OWORD *)(result + 158) = 0u;
  *(_OWORD *)(result + 226) = 0u;
  *(_OWORD *)(result + 214) = 0u;
  *(_OWORD *)(result + 198) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate *CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::DaemonLocationPrivate(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate *this, const CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate *a2)
{
  *(void *)this = &unk_1EDD0DA18;
  *((void *)this + 36) = 0;
  *((void *)this + 37) = 0;
  *((_DWORD *)this + 76) = 0;
  *((_DWORD *)this + 89) = 0;
  *((_WORD *)this + 56) = 0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((void *)this + 11) = 0;
  *((void *)this + 12) = 0xFFFFFFFFLL;
  *((void *)this + 13) = 0;
  *((void *)this + 45) = 0;
  *(_OWORD *)((char *)this + 130) = 0u;
  *(_OWORD *)((char *)this + 146) = 0u;
  *(_OWORD *)((char *)this + 162) = 0u;
  *(_OWORD *)((char *)this + 178) = 0u;
  *(_OWORD *)((char *)this + 194) = 0u;
  *(_OWORD *)((char *)this + 210) = 0u;
  *(_OWORD *)((char *)this + 226) = 0u;
  *(_OWORD *)((char *)this + 242) = 0u;
  *((_OWORD *)this + 17) = 0u;
  *(_OWORD *)((char *)this + 114) = 0u;
  *(_OWORD *)((char *)this + 258) = 0u;
  *(_OWORD *)((char *)this + 340) = 0u;
  *(_OWORD *)((char *)this + 312) = 0u;
  *(_OWORD *)((char *)this + 328) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::MergeFrom(this, a2);
  return this;
}

void sub_18DF69930(_Unwind_Exception *a1)
{
  sub_18DF0C324(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate *this, const CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v73);
  }
  uint64_t v4 = (CoreNavigation::CLP::LogEntry::PrivateData *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate *)((char *)this + 288));
  if (*((int *)a2 + 74) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      int v6 = *(const CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo **)(*((void *)a2 + 36) + 8 * v5);
      uint64_t v7 = *((int *)this + 74);
      int v8 = *((_DWORD *)this + 75);
      if ((int)v7 >= v8)
      {
        if (v8 == *((_DWORD *)this + 76))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate *)((char *)this + 288));
          int v8 = *((_DWORD *)this + 75);
        }
        *((_DWORD *)this + 75) = v8 + 1;
        operator new();
      }
      uint64_t v9 = *((void *)this + 36);
      *((_DWORD *)this + 74) = v7 + 1;
      CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo::MergeFrom(*(CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo **)(v9 + 8 * v7), v6);
      ++v5;
    }
    while (v5 < *((int *)a2 + 74));
  }
  unsigned int v10 = *((_DWORD *)a2 + 90);
  if (!(_BYTE)v10) {
    goto LABEL_21;
  }
  if (v10)
  {
    uint64_t v14 = *((void *)a2 + 1);
    *((_DWORD *)this + 90) |= 1u;
    *((void *)this + 1) = v14;
    unsigned int v10 = *((_DWORD *)a2 + 90);
    if ((v10 & 2) == 0)
    {
LABEL_14:
      if ((v10 & 4) == 0) {
        goto LABEL_15;
      }
      goto LABEL_36;
    }
  }
  else if ((v10 & 2) == 0)
  {
    goto LABEL_14;
  }
  uint64_t v15 = *((void *)a2 + 2);
  *((_DWORD *)this + 90) |= 2u;
  *((void *)this + 2) = v15;
  unsigned int v10 = *((_DWORD *)a2 + 90);
  if ((v10 & 4) == 0)
  {
LABEL_15:
    if ((v10 & 8) == 0) {
      goto LABEL_16;
    }
    goto LABEL_37;
  }
LABEL_36:
  uint64_t v16 = *((void *)a2 + 3);
  *((_DWORD *)this + 90) |= 4u;
  *((void *)this + 3) = v16;
  unsigned int v10 = *((_DWORD *)a2 + 90);
  if ((v10 & 8) == 0)
  {
LABEL_16:
    if ((v10 & 0x10) == 0) {
      goto LABEL_17;
    }
    goto LABEL_38;
  }
LABEL_37:
  uint64_t v17 = *((void *)a2 + 4);
  *((_DWORD *)this + 90) |= 8u;
  *((void *)this + 4) = v17;
  unsigned int v10 = *((_DWORD *)a2 + 90);
  if ((v10 & 0x10) == 0)
  {
LABEL_17:
    if ((v10 & 0x20) == 0) {
      goto LABEL_18;
    }
LABEL_39:
    int v19 = *((_DWORD *)a2 + 12);
    *((_DWORD *)this + 90) |= 0x20u;
    *((_DWORD *)this + 12) = v19;
    unsigned int v10 = *((_DWORD *)a2 + 90);
    if ((v10 & 0x40) == 0)
    {
LABEL_19:
      if ((v10 & 0x80) == 0) {
        goto LABEL_21;
      }
      goto LABEL_20;
    }
    goto LABEL_40;
  }
LABEL_38:
  uint64_t v18 = *((void *)a2 + 5);
  *((_DWORD *)this + 90) |= 0x10u;
  *((void *)this + 5) = v18;
  unsigned int v10 = *((_DWORD *)a2 + 90);
  if ((v10 & 0x20) != 0) {
    goto LABEL_39;
  }
LABEL_18:
  if ((v10 & 0x40) == 0) {
    goto LABEL_19;
  }
LABEL_40:
  int v20 = *((_DWORD *)a2 + 13);
  *((_DWORD *)this + 90) |= 0x40u;
  *((_DWORD *)this + 13) = v20;
  unsigned int v10 = *((_DWORD *)a2 + 90);
  if ((v10 & 0x80) != 0)
  {
LABEL_20:
    int v11 = *((_DWORD *)a2 + 14);
    *((_DWORD *)this + 90) |= 0x80u;
    *((_DWORD *)this + 14) = v11;
    unsigned int v10 = *((_DWORD *)a2 + 90);
  }
LABEL_21:
  if ((v10 & 0xFF00) == 0) {
    goto LABEL_56;
  }
  if ((v10 & 0x100) != 0)
  {
    char v12 = *((unsigned char *)a2 + 112);
    *((_DWORD *)this + 90) |= 0x100u;
    *((unsigned char *)this + 112) = v12;
    unsigned int v10 = *((_DWORD *)a2 + 90);
  }
  if ((v10 & 0x200) != 0)
  {
    unsigned int v13 = *((_DWORD *)a2 + 15);
    if (v13 >= 4) {
      __assert_rtn("set_match_quality", "CoreNavigationCLPPrivateDataShared.pb.h", 15458, "::CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_MatchQualityType_IsValid(value)");
    }
    *((_DWORD *)this + 90) |= 0x200u;
    *((_DWORD *)this + 15) = v13;
    unsigned int v10 = *((_DWORD *)a2 + 90);
  }
  if ((v10 & 0x400) != 0)
  {
    *((_DWORD *)this + 90) |= 0x400u;
    int v21 = (CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *)*((void *)this + 8);
    if (!v21) {
      operator new();
    }
    unsigned int v22 = (const CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *)*((void *)a2 + 8);
    if (!v22)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(v4);
      unsigned int v22 = *(const CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate **)(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::default_instance_
                                                                                           + 64);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::MergeFrom(v21, v22);
    unsigned int v10 = *((_DWORD *)a2 + 90);
    if ((v10 & 0x800) == 0)
    {
LABEL_29:
      if ((v10 & 0x1000) == 0) {
        goto LABEL_30;
      }
      goto LABEL_48;
    }
  }
  else if ((v10 & 0x800) == 0)
  {
    goto LABEL_29;
  }
  uint64_t v23 = *((void *)a2 + 9);
  *((_DWORD *)this + 90) |= 0x800u;
  *((void *)this + 9) = v23;
  unsigned int v10 = *((_DWORD *)a2 + 90);
  if ((v10 & 0x1000) == 0)
  {
LABEL_30:
    if ((v10 & 0x2000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_49;
  }
LABEL_48:
  int v24 = *((_DWORD *)a2 + 20);
  *((_DWORD *)this + 90) |= 0x1000u;
  *((_DWORD *)this + 20) = v24;
  unsigned int v10 = *((_DWORD *)a2 + 90);
  if ((v10 & 0x2000) == 0)
  {
LABEL_31:
    if ((v10 & 0x4000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_50;
  }
LABEL_49:
  int v25 = *((_DWORD *)a2 + 21);
  *((_DWORD *)this + 90) |= 0x2000u;
  *((_DWORD *)this + 21) = v25;
  unsigned int v10 = *((_DWORD *)a2 + 90);
  if ((v10 & 0x4000) == 0)
  {
LABEL_32:
    if ((v10 & 0x8000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_51;
  }
LABEL_50:
  char v26 = *((unsigned char *)a2 + 113);
  *((_DWORD *)this + 90) |= 0x4000u;
  *((unsigned char *)this + 113) = v26;
  unsigned int v10 = *((_DWORD *)a2 + 90);
  if ((v10 & 0x8000) == 0) {
    goto LABEL_56;
  }
LABEL_51:
  *((_DWORD *)this + 90) |= 0x8000u;
  uint64_t v27 = (CoreNavigation::CLP::LogEntry::PrivateData::PressureSample *)*((void *)this + 11);
  if (!v27) {
    operator new();
  }
  uint64_t v28 = (const CoreNavigation::CLP::LogEntry::PrivateData::PressureSample *)*((void *)a2 + 11);
  if (!v28)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(v4);
    uint64_t v28 = *(const CoreNavigation::CLP::LogEntry::PrivateData::PressureSample **)(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::default_instance_
                                                                               + 88);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::PressureSample::MergeFrom(v27, v28);
  unsigned int v10 = *((_DWORD *)a2 + 90);
LABEL_56:
  if ((v10 & 0xFF0000) == 0) {
    goto LABEL_73;
  }
  if ((v10 & 0x10000) != 0)
  {
    int v29 = *((_DWORD *)a2 + 24);
    if ((v29 + 1) >= 4) {
      __assert_rtn("set_undulation_model", "CoreNavigationCLPPrivateDataShared.pb.h", 15653, "::CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_UndulationModelType_IsValid(value)");
    }
    *((_DWORD *)this + 90) |= 0x10000u;
    *((_DWORD *)this + 24) = v29;
    unsigned int v10 = *((_DWORD *)a2 + 90);
  }
  if ((v10 & 0x20000) != 0)
  {
    int v35 = *((_DWORD *)a2 + 25);
    *((_DWORD *)this + 90) |= 0x20000u;
    *((_DWORD *)this + 25) = v35;
    unsigned int v10 = *((_DWORD *)a2 + 90);
    if ((v10 & 0x40000) == 0)
    {
LABEL_62:
      if ((v10 & 0x80000) == 0) {
        goto LABEL_63;
      }
      goto LABEL_107;
    }
  }
  else if ((v10 & 0x40000) == 0)
  {
    goto LABEL_62;
  }
  *((_DWORD *)this + 90) |= 0x40000u;
  int v36 = (CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *)*((void *)this + 13);
  if (!v36) {
    operator new();
  }
  uint64_t v37 = (const CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *)*((void *)a2 + 13);
  if (!v37)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(v4);
    uint64_t v37 = *(const CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate **)(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::default_instance_
                                                                                         + 104);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::MergeFrom(v36, v37);
  unsigned int v10 = *((_DWORD *)a2 + 90);
  if ((v10 & 0x80000) == 0)
  {
LABEL_63:
    if ((v10 & 0x100000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_108;
  }
LABEL_107:
  uint64_t v38 = *((void *)a2 + 15);
  *((_DWORD *)this + 90) |= 0x80000u;
  *((void *)this + 15) = v38;
  unsigned int v10 = *((_DWORD *)a2 + 90);
  if ((v10 & 0x100000) == 0)
  {
LABEL_64:
    if ((v10 & 0x200000) == 0) {
      goto LABEL_65;
    }
    goto LABEL_109;
  }
LABEL_108:
  uint64_t v39 = *((void *)a2 + 16);
  *((_DWORD *)this + 90) |= 0x100000u;
  *((void *)this + 16) = v39;
  unsigned int v10 = *((_DWORD *)a2 + 90);
  if ((v10 & 0x200000) == 0)
  {
LABEL_65:
    if ((v10 & 0x400000) == 0) {
      goto LABEL_67;
    }
    goto LABEL_66;
  }
LABEL_109:
  unsigned int v40 = *((_DWORD *)a2 + 29);
  if (v40 >= 3) {
    __assert_rtn("set_origin_device", "CoreNavigationCLPPrivateDataShared.pb.h", 15784, "::CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_ClientLocationOriginDeviceType_IsValid(value)");
  }
  *((_DWORD *)this + 90) |= 0x200000u;
  *((_DWORD *)this + 29) = v40;
  unsigned int v10 = *((_DWORD *)a2 + 90);
  if ((v10 & 0x400000) == 0) {
    goto LABEL_67;
  }
LABEL_66:
  char v30 = *((unsigned char *)a2 + 114);
  *((_DWORD *)this + 90) |= 0x400000u;
  *((unsigned char *)this + 114) = v30;
  unsigned int v10 = *((_DWORD *)a2 + 90);
LABEL_67:
  if ((v10 & 0x800000) != 0)
  {
    *((_DWORD *)this + 90) |= 0x800000u;
    int v31 = (CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData *)*((void *)this + 17);
    if (!v31) {
      operator new();
    }
    int v32 = (const CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData *)*((void *)a2 + 17);
    if (!v32)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(v4);
      int v32 = *(const CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData **)(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::default_instance_
                                                                                 + 136);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData::MergeFrom(v31, v32);
    unsigned int v10 = *((_DWORD *)a2 + 90);
  }
LABEL_73:
  if (!HIBYTE(v10)) {
    goto LABEL_82;
  }
  if ((v10 & 0x1000000) != 0)
  {
    uint64_t v65 = *((void *)a2 + 18);
    *((_DWORD *)this + 90) |= 0x1000000u;
    *((void *)this + 18) = v65;
    unsigned int v10 = *((_DWORD *)a2 + 90);
    if ((v10 & 0x2000000) == 0)
    {
LABEL_76:
      if ((v10 & 0x4000000) == 0) {
        goto LABEL_77;
      }
      goto LABEL_162;
    }
  }
  else if ((v10 & 0x2000000) == 0)
  {
    goto LABEL_76;
  }
  uint64_t v66 = *((void *)a2 + 19);
  *((_DWORD *)this + 90) |= 0x2000000u;
  *((void *)this + 19) = v66;
  unsigned int v10 = *((_DWORD *)a2 + 90);
  if ((v10 & 0x4000000) == 0)
  {
LABEL_77:
    if ((v10 & 0x8000000) == 0) {
      goto LABEL_78;
    }
    goto LABEL_163;
  }
LABEL_162:
  uint64_t v67 = *((void *)a2 + 20);
  *((_DWORD *)this + 90) |= 0x4000000u;
  *((void *)this + 20) = v67;
  unsigned int v10 = *((_DWORD *)a2 + 90);
  if ((v10 & 0x8000000) == 0)
  {
LABEL_78:
    if ((v10 & 0x10000000) == 0) {
      goto LABEL_79;
    }
    goto LABEL_164;
  }
LABEL_163:
  uint64_t v68 = *((void *)a2 + 21);
  *((_DWORD *)this + 90) |= 0x8000000u;
  *((void *)this + 21) = v68;
  unsigned int v10 = *((_DWORD *)a2 + 90);
  if ((v10 & 0x10000000) == 0)
  {
LABEL_79:
    if ((v10 & 0x20000000) == 0) {
      goto LABEL_80;
    }
    goto LABEL_165;
  }
LABEL_164:
  uint64_t v69 = *((void *)a2 + 22);
  *((_DWORD *)this + 90) |= 0x10000000u;
  *((void *)this + 22) = v69;
  unsigned int v10 = *((_DWORD *)a2 + 90);
  if ((v10 & 0x20000000) == 0)
  {
LABEL_80:
    if ((v10 & 0x40000000) == 0) {
      goto LABEL_81;
    }
LABEL_166:
    char v71 = *((unsigned char *)a2 + 115);
    *((_DWORD *)this + 90) |= 0x40000000u;
    *((unsigned char *)this + 115) = v71;
    if ((*((_DWORD *)a2 + 90) & 0x80000000) == 0) {
      goto LABEL_82;
    }
    goto LABEL_167;
  }
LABEL_165:
  uint64_t v70 = *((void *)a2 + 23);
  *((_DWORD *)this + 90) |= 0x20000000u;
  *((void *)this + 23) = v70;
  unsigned int v10 = *((_DWORD *)a2 + 90);
  if ((v10 & 0x40000000) != 0) {
    goto LABEL_166;
  }
LABEL_81:
  if ((v10 & 0x80000000) == 0) {
    goto LABEL_82;
  }
LABEL_167:
  uint64_t v72 = *((void *)a2 + 24);
  *((_DWORD *)this + 90) |= 0x80000000;
  *((void *)this + 24) = v72;
LABEL_82:
  int v33 = *((_DWORD *)a2 + 91);
  if (!(_BYTE)v33) {
    goto LABEL_92;
  }
  if (v33)
  {
    uint64_t v41 = *((void *)a2 + 25);
    *((_DWORD *)this + 91) |= 1u;
    *((void *)this + 25) = v41;
    int v33 = *((_DWORD *)a2 + 91);
    if ((v33 & 2) == 0)
    {
LABEL_85:
      if ((v33 & 4) == 0) {
        goto LABEL_86;
      }
      goto LABEL_114;
    }
  }
  else if ((v33 & 2) == 0)
  {
    goto LABEL_85;
  }
  char v42 = *((unsigned char *)a2 + 276);
  *((_DWORD *)this + 91) |= 2u;
  *((unsigned char *)this + 276) = v42;
  int v33 = *((_DWORD *)a2 + 91);
  if ((v33 & 4) == 0)
  {
LABEL_86:
    if ((v33 & 8) == 0) {
      goto LABEL_87;
    }
    goto LABEL_119;
  }
LABEL_114:
  *((_DWORD *)this + 91) |= 4u;
  int v43 = (CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *)*((void *)this + 26);
  if (!v43) {
    operator new();
  }
  uint64_t v44 = (const CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *)*((void *)a2 + 26);
  if (!v44)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(v4);
    uint64_t v44 = *(const CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate **)(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::default_instance_
                                                                                         + 208);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::MergeFrom(v43, v44);
  int v33 = *((_DWORD *)a2 + 91);
  if ((v33 & 8) == 0)
  {
LABEL_87:
    if ((v33 & 0x10) == 0) {
      goto LABEL_88;
    }
    goto LABEL_120;
  }
LABEL_119:
  uint64_t v45 = *((void *)a2 + 27);
  *((_DWORD *)this + 91) |= 8u;
  *((void *)this + 27) = v45;
  int v33 = *((_DWORD *)a2 + 91);
  if ((v33 & 0x10) == 0)
  {
LABEL_88:
    if ((v33 & 0x20) == 0) {
      goto LABEL_89;
    }
    goto LABEL_122;
  }
LABEL_120:
  unsigned int v46 = *((_DWORD *)a2 + 68);
  if (v46 >= 3) {
    __assert_rtn("set_fused_reference_frame", "CoreNavigationCLPPrivateDataShared.pb.h", 16155, "::CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationReferenceFrameType_IsValid(value)");
  }
  *((_DWORD *)this + 91) |= 0x10u;
  *((_DWORD *)this + 68) = v46;
  int v33 = *((_DWORD *)a2 + 91);
  if ((v33 & 0x20) == 0)
  {
LABEL_89:
    if ((v33 & 0x40) == 0) {
      goto LABEL_90;
    }
    goto LABEL_123;
  }
LABEL_122:
  uint64_t v47 = *((void *)a2 + 28);
  *((_DWORD *)this + 91) |= 0x20u;
  *((void *)this + 28) = v47;
  int v33 = *((_DWORD *)a2 + 91);
  if ((v33 & 0x40) == 0)
  {
LABEL_90:
    if ((v33 & 0x80) == 0) {
      goto LABEL_92;
    }
    goto LABEL_91;
  }
LABEL_123:
  uint64_t v48 = *((void *)a2 + 29);
  *((_DWORD *)this + 91) |= 0x40u;
  *((void *)this + 29) = v48;
  int v33 = *((_DWORD *)a2 + 91);
  if ((v33 & 0x80) != 0)
  {
LABEL_91:
    uint64_t v34 = *((void *)a2 + 30);
    *((_DWORD *)this + 91) |= 0x80u;
    *((void *)this + 30) = v34;
    int v33 = *((_DWORD *)a2 + 91);
  }
LABEL_92:
  if ((v33 & 0xFF00) == 0) {
    goto LABEL_137;
  }
  if ((v33 & 0x100) != 0)
  {
    uint64_t v49 = *((void *)a2 + 31);
    *((_DWORD *)this + 91) |= 0x100u;
    *((void *)this + 31) = v49;
    int v33 = *((_DWORD *)a2 + 91);
    if ((v33 & 0x200) == 0)
    {
LABEL_95:
      if ((v33 & 0x400) == 0) {
        goto LABEL_96;
      }
      goto LABEL_127;
    }
  }
  else if ((v33 & 0x200) == 0)
  {
    goto LABEL_95;
  }
  uint64_t v50 = *((void *)a2 + 32);
  *((_DWORD *)this + 91) |= 0x200u;
  *((void *)this + 32) = v50;
  int v33 = *((_DWORD *)a2 + 91);
  if ((v33 & 0x400) == 0)
  {
LABEL_96:
    if ((v33 & 0x800) == 0) {
      goto LABEL_97;
    }
    goto LABEL_128;
  }
LABEL_127:
  char v51 = *((unsigned char *)a2 + 277);
  *((_DWORD *)this + 91) |= 0x400u;
  *((unsigned char *)this + 277) = v51;
  int v33 = *((_DWORD *)a2 + 91);
  if ((v33 & 0x800) == 0)
  {
LABEL_97:
    if ((v33 & 0x1000) == 0) {
      goto LABEL_98;
    }
    goto LABEL_129;
  }
LABEL_128:
  uint64_t v52 = *((void *)a2 + 33);
  *((_DWORD *)this + 91) |= 0x800u;
  *((void *)this + 33) = v52;
  int v33 = *((_DWORD *)a2 + 91);
  if ((v33 & 0x1000) == 0)
  {
LABEL_98:
    if ((v33 & 0x4000) == 0) {
      goto LABEL_99;
    }
    goto LABEL_130;
  }
LABEL_129:
  uint64_t v53 = *((void *)a2 + 35);
  *((_DWORD *)this + 91) |= 0x1000u;
  *((void *)this + 35) = v53;
  int v33 = *((_DWORD *)a2 + 91);
  if ((v33 & 0x4000) == 0)
  {
LABEL_99:
    if ((v33 & 0x8000) == 0) {
      goto LABEL_137;
    }
    goto LABEL_132;
  }
LABEL_130:
  unsigned int v54 = *((_DWORD *)a2 + 78);
  if (v54 >= 3) {
    __assert_rtn("set_gnss_content", "CoreNavigationCLPPrivateDataShared.pb.h", 16379, "::CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_GnssContent_IsValid(value)");
  }
  *((_DWORD *)this + 91) |= 0x4000u;
  *((_DWORD *)this + 78) = v54;
  int v33 = *((_DWORD *)a2 + 91);
  if ((v33 & 0x8000) != 0)
  {
LABEL_132:
    *((_DWORD *)this + 91) |= 0x8000u;
    int v55 = (CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo *)*((void *)this + 40);
    if (!v55) {
      operator new();
    }
    int v56 = (const CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo *)*((void *)a2 + 40);
    if (!v56)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(v4);
      int v56 = *(const CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo **)(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::default_instance_ + 320);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo::MergeFrom(v55, v56);
    int v33 = *((_DWORD *)a2 + 91);
  }
LABEL_137:
  if ((v33 & 0xFF0000) == 0) {
    return;
  }
  if ((v33 & 0x10000) != 0)
  {
    unsigned int v57 = *((_DWORD *)a2 + 79);
    if (v57 >= 3) {
      __assert_rtn("set_estimated_position_context_state", "CoreNavigationCLPPrivateDataShared.pb.h", 16444, "::CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_PositionContextStateType_IsValid(value)");
    }
    *((_DWORD *)this + 91) |= 0x10000u;
    *((_DWORD *)this + 79) = v57;
    int v33 = *((_DWORD *)a2 + 91);
  }
  if ((v33 & 0x20000) != 0)
  {
    uint64_t v62 = *((void *)a2 + 41);
    *((_DWORD *)this + 91) |= 0x20000u;
    *((void *)this + 41) = v62;
    int v33 = *((_DWORD *)a2 + 91);
    if ((v33 & 0x40000) == 0)
    {
LABEL_143:
      if ((v33 & 0x80000) == 0) {
        goto LABEL_144;
      }
LABEL_157:
      unsigned int v64 = *((_DWORD *)a2 + 86);
      if (v64 >= 4) {
        __assert_rtn("set_map_matcher_type", "CoreNavigationCLPPrivateDataShared.pb.h", 16511, "::CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_MapMatcherType_IsValid(value)");
      }
      *((_DWORD *)this + 91) |= 0x80000u;
      *((_DWORD *)this + 86) = v64;
      int v33 = *((_DWORD *)a2 + 91);
      if ((v33 & 0x100000) == 0) {
        goto LABEL_146;
      }
      goto LABEL_145;
    }
  }
  else if ((v33 & 0x40000) == 0)
  {
    goto LABEL_143;
  }
  uint64_t v63 = *((void *)a2 + 42);
  *((_DWORD *)this + 91) |= 0x40000u;
  *((void *)this + 42) = v63;
  int v33 = *((_DWORD *)a2 + 91);
  if ((v33 & 0x80000) != 0) {
    goto LABEL_157;
  }
LABEL_144:
  if ((v33 & 0x100000) != 0)
  {
LABEL_145:
    char v58 = *((unsigned char *)a2 + 278);
    *((_DWORD *)this + 91) |= 0x100000u;
    *((unsigned char *)this + 278) = v58;
    int v33 = *((_DWORD *)a2 + 91);
  }
LABEL_146:
  if ((v33 & 0x200000) != 0)
  {
    unsigned int v59 = *((_DWORD *)a2 + 87);
    if (v59 >= 3) {
      __assert_rtn("set_loi_location_source_accuracy", "CoreNavigationCLPPrivateDataShared.pb.h", 16556, "::CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_LoiLocationSourceAccuracy_IsValid(value)");
    }
    *((_DWORD *)this + 91) |= 0x200000u;
    *((_DWORD *)this + 87) = v59;
    int v33 = *((_DWORD *)a2 + 91);
  }
  if ((v33 & 0x400000) != 0)
  {
    unsigned int v60 = *((_DWORD *)a2 + 88);
    if (v60 >= 5) {
      __assert_rtn("set_batched_location_fix_type", "CoreNavigationCLPPrivateDataShared.pb.h", 16579, "::CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocationFixType_IsValid(value)");
    }
    *((_DWORD *)this + 91) |= 0x400000u;
    *((_DWORD *)this + 88) = v60;
    int v33 = *((_DWORD *)a2 + 91);
  }
  if ((v33 & 0x800000) != 0)
  {
    char v61 = *((unsigned char *)a2 + 279);
    *((_DWORD *)this + 91) |= 0x800000u;
    *((unsigned char *)this + 279) = v61;
  }
}

void sub_18DF6A56C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::~DaemonLocationPrivate(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate *this)
{
  *(void *)this = &unk_1EDD0DA18;
  CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::SharedDtor(this);
  sub_18DF0C324((uint64_t *)this + 36);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::~DaemonLocationPrivate(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate *)CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 8);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 11);
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = *((void *)this + 13);
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = *((void *)this + 17);
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
    uint64_t v6 = *((void *)this + 26);
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    uint64_t v7 = *((void *)this + 40);
    if (v7)
    {
      int v8 = *(void (**)(void))(*(void *)v7 + 8);
      v8();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 356) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::New(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::Clear(uint64_t this)
{
  uint64_t v1 = this;
  unsigned int v2 = *(_DWORD *)(this + 360);
  if ((_BYTE)v2)
  {
    *(_DWORD *)(this + 56) = 0;
    *(_OWORD *)(this + 40) = 0u;
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 8) = 0u;
  }
  if ((v2 & 0xFF00) != 0)
  {
    *(unsigned char *)(this + 112) = 0;
    *(_DWORD *)(this + 60) = 0;
    if ((v2 & 0x400) != 0)
    {
      uint64_t v3 = *(void *)(this + 64);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 28))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
        }
        *(_DWORD *)(v3 + 28) = 0;
        unsigned int v2 = *(_DWORD *)(this + 360);
      }
    }
    *(unsigned char *)(this + 113) = 0;
    *(void *)(this + 72) = 0;
    *(void *)(this + 80) = 0;
    if ((v2 & 0x8000) != 0)
    {
      uint64_t v4 = *(void *)(this + 88);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 28))
        {
          *(void *)(v4 + 8) = 0;
          *(void *)(v4 + 16) = 0;
        }
        *(_DWORD *)(v4 + 28) = 0;
        unsigned int v2 = *(_DWORD *)(this + 360);
      }
    }
  }
  if ((v2 & 0xFF0000) != 0)
  {
    *(void *)(this + 96) = 0xFFFFFFFFLL;
    if ((v2 & 0x40000) != 0)
    {
      uint64_t v5 = *(void *)(this + 104);
      if (v5)
      {
        if (*(unsigned char *)(v5 + 28))
        {
          *(void *)(v5 + 8) = 0;
          *(void *)(v5 + 16) = 0;
        }
        *(_DWORD *)(v5 + 28) = 0;
        unsigned int v2 = *(_DWORD *)(this + 360);
      }
    }
    *(unsigned char *)(this + 114) = 0;
    *(void *)(this + 124) = 0;
    *(void *)(this + 116) = 0;
    *(_DWORD *)(this + 132) = 0;
    if ((v2 & 0x800000) != 0)
    {
      uint64_t v6 = *(void *)(this + 136);
      if (v6)
      {
        if (*(unsigned char *)(v6 + 32))
        {
          *(void *)(v6 + 8) = 0;
          *(void *)(v6 + 16) = 0;
          *(_WORD *)(v6 + 24) = 0;
        }
        *(_DWORD *)(v6 + 32) = 0;
        unsigned int v2 = *(_DWORD *)(this + 360);
      }
    }
  }
  if (HIBYTE(v2))
  {
    *(unsigned char *)(this + 115) = 0;
    *(_OWORD *)(this + 144) = 0u;
    *(_OWORD *)(this + 160) = 0u;
    *(_OWORD *)(this + 176) = 0u;
    *(void *)(this + 192) = 0;
  }
  int v7 = *(_DWORD *)(this + 364);
  if ((_BYTE)v7)
  {
    *(void *)(this + 200) = 0;
    *(unsigned char *)(this + 276) = 0;
    if ((v7 & 4) != 0)
    {
      uint64_t v8 = *(void *)(this + 208);
      if (v8)
      {
        if (*(unsigned char *)(v8 + 28))
        {
          *(void *)(v8 + 8) = 0;
          *(void *)(v8 + 16) = 0;
        }
        *(_DWORD *)(v8 + 28) = 0;
        int v7 = *(_DWORD *)(this + 364);
      }
    }
    *(_DWORD *)(this + 272) = 0;
    *(_OWORD *)(this + 216) = 0u;
    *(_OWORD *)(this + 232) = 0u;
  }
  if ((v7 & 0xFF00) != 0)
  {
    *(unsigned char *)(this + 277) = 0;
    *(void *)(this + 280) = 0;
    *(_DWORD *)(this + 312) = 0;
    *(void *)(this + 256) = 0;
    *(void *)(this + 264) = 0;
    *(void *)(this + 248) = 0;
    if ((v7 & 0x8000) != 0)
    {
      uint64_t v9 = *(void *)(this + 320);
      if (v9)
      {
        if (*(unsigned char *)(v9 + 40))
        {
          *(void *)(v9 + 8) = 0;
          *(void *)(v9 + 16) = 0;
          *(void *)(v9 + 24) = 0;
          *(_DWORD *)(v9 + 32) = -1;
        }
        *(_DWORD *)(v9 + 40) = 0;
        int v7 = *(_DWORD *)(this + 364);
      }
    }
  }
  if ((v7 & 0xFF0000) != 0)
  {
    *(_DWORD *)(this + 316) = 0;
    *(_WORD *)(this + 278) = 0;
    *(void *)(this + 336) = 0;
    *(void *)(this + 344) = 0;
    *(void *)(this + 328) = 0;
    *(_DWORD *)(this + 352) = 0;
  }
  if (*(int *)(this + 296) >= 1)
  {
    uint64_t v10 = 0;
    do
    {
      uint64_t v11 = *(void *)(*(void *)(v1 + 288) + 8 * v10);
      this = (*(uint64_t (**)(uint64_t))(*(void *)v11 + 32))(v11);
      ++v10;
    }
    while (v10 < *(int *)(v1 + 296));
  }
  *(_DWORD *)(v1 + 296) = 0;
  *(void *)(v1 + 360) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4 = (CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate *)((char *)this + 288);
LABEL_2:
  while (2)
  {
    uint64_t v5 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_151;
        }
        *(void *)uint64_t v168 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v168) & 1) == 0)return 0; {
        *((void *)this + 1) = *(void *)v168;
        }
        *((_DWORD *)this + 90) |= 1u;
        uint64_t v8 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 != 17) {
          continue;
        }
        *((void *)a2 + 1) = v8 + 1;
        goto LABEL_15;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_151;
        }
LABEL_15:
        *(void *)uint64_t v168 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v168) & 1) == 0)return 0; {
        *((void *)this + 2) = *(void *)v168;
        }
        *((_DWORD *)this + 90) |= 2u;
        uint64_t v9 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v9 >= *((void *)a2 + 2) || *v9 != 25) {
          continue;
        }
        *((void *)a2 + 1) = v9 + 1;
LABEL_20:
        *(void *)uint64_t v168 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v168) & 1) == 0)return 0; {
        *((void *)this + 3) = *(void *)v168;
        }
        *((_DWORD *)this + 90) |= 4u;
        uint64_t v10 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 != 33) {
          continue;
        }
        *((void *)a2 + 1) = v10 + 1;
LABEL_25:
        *(void *)uint64_t v168 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v168) & 1) == 0)return 0; {
        *((void *)this + 4) = *(void *)v168;
        }
        *((_DWORD *)this + 90) |= 8u;
        uint64_t v11 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v11 >= *((void *)a2 + 2) || *v11 != 41) {
          continue;
        }
        *((void *)a2 + 1) = v11 + 1;
LABEL_30:
        *(void *)uint64_t v168 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v168) & 1) == 0)return 0; {
        *((void *)this + 5) = *(void *)v168;
        }
        *((_DWORD *)this + 90) |= 0x10u;
        char v12 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v12 >= *((void *)a2 + 2) || *v12 != 53) {
          continue;
        }
        *((void *)a2 + 1) = v12 + 1;
LABEL_35:
        v168[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v168) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 12) = v168[0];
        *((_DWORD *)this + 90) |= 0x20u;
        unsigned int v13 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v13 >= *((void *)a2 + 2) || *v13 != 61) {
          continue;
        }
        *((void *)a2 + 1) = v13 + 1;
LABEL_40:
        v168[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v168) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 13) = v168[0];
        *((_DWORD *)this + 90) |= 0x40u;
        uint64_t v14 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v14 >= *((void *)a2 + 2) || *v14 != 69) {
          continue;
        }
        *((void *)a2 + 1) = v14 + 1;
LABEL_45:
        v168[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v168) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 14) = v168[0];
        *((_DWORD *)this + 90) |= 0x80u;
        uint64_t v16 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        if ((unint64_t)v16 >= v15 || *v16 != 72) {
          continue;
        }
        uint64_t v17 = v16 + 1;
        *((void *)a2 + 1) = v17;
LABEL_51:
        v168[0] = 0;
        if ((unint64_t)v17 >= v15 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v168);
          if (!result) {
            return result;
          }
          unsigned int v18 = v168[0];
          int v19 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v18 = *v17;
          int v19 = v17 + 1;
          *((void *)a2 + 1) = v19;
        }
        *((unsigned char *)this + 112) = v18 != 0;
        *((_DWORD *)this + 90) |= 0x100u;
        if ((unint64_t)v19 >= v15 || *v19 != 80) {
          continue;
        }
        int v20 = v19 + 1;
        *((void *)a2 + 1) = v20;
LABEL_160:
        v168[0] = 0;
        if ((unint64_t)v20 >= v15 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v168);
          if (!result) {
            return result;
          }
          unsigned int v59 = v168[0];
        }
        else
        {
          unsigned int v59 = *v20;
          *((void *)a2 + 1) = v20 + 1;
        }
        if (v59 <= 3)
        {
          *((_DWORD *)this + 90) |= 0x200u;
          *((_DWORD *)this + 15) = v59;
        }
        unsigned int v60 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v60 >= *((void *)a2 + 2) || *v60 != 90) {
          continue;
        }
        *((void *)a2 + 1) = v60 + 1;
LABEL_170:
        *((_DWORD *)this + 90) |= 0x400u;
        char v61 = (CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *)*((void *)this + 8);
        if (!v61) {
          operator new();
        }
        v168[0] = 0;
        uint64_t v62 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v62 >= *((void *)a2 + 2) || *v62 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v168))return 0; {
        }
          }
        else
        {
          v168[0] = *v62;
          *((void *)a2 + 1) = v62 + 1;
        }
        int v63 = *((_DWORD *)a2 + 14);
        int v64 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v63 + 1;
        if (v63 >= v64) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::MergePartialFromCodedStream(v61, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v65 = *((_DWORD *)a2 + 14);
        BOOL v66 = __OFSUB__(v65, 1);
        int v67 = v65 - 1;
        if (v67 < 0 == v66) {
          *((_DWORD *)a2 + 14) = v67;
        }
        uint64_t v68 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v68 >= *((void *)a2 + 2) || *v68 != 97) {
          continue;
        }
        *((void *)a2 + 1) = v68 + 1;
LABEL_184:
        *(void *)uint64_t v168 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v168) & 1) == 0)return 0; {
        *((void *)this + 9) = *(void *)v168;
        }
        *((_DWORD *)this + 90) |= 0x800u;
        uint64_t v69 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v21 = *((void *)a2 + 2);
        if ((unint64_t)v69 >= v21 || *v69 != 104) {
          continue;
        }
        unsigned int v22 = v69 + 1;
        *((void *)a2 + 1) = v22;
LABEL_188:
        v168[0] = 0;
        if ((unint64_t)v22 >= v21 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v168);
          if (!result) {
            return result;
          }
          unsigned int v70 = v168[0];
          char v71 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v21 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v70 = *v22;
          char v71 = v22 + 1;
          *((void *)a2 + 1) = v71;
        }
        *((_DWORD *)this + 20) = v70;
        *((_DWORD *)this + 90) |= 0x1000u;
        if ((unint64_t)v71 >= v21 || *v71 != 112) {
          continue;
        }
        uint64_t v23 = v71 + 1;
        *((void *)a2 + 1) = v23;
LABEL_196:
        v168[0] = 0;
        if ((unint64_t)v23 >= v21 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v168);
          if (!result) {
            return result;
          }
          unsigned int v72 = v168[0];
          unsigned int v73 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v21 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v72 = *v23;
          unsigned int v73 = v23 + 1;
          *((void *)a2 + 1) = v73;
        }
        *((_DWORD *)this + 21) = v72;
        *((_DWORD *)this + 90) |= 0x2000u;
        if ((unint64_t)v73 >= v21 || *v73 != 120) {
          continue;
        }
        int v24 = v73 + 1;
        *((void *)a2 + 1) = v24;
LABEL_204:
        v168[0] = 0;
        if ((unint64_t)v24 >= v21 || (char)*v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v168);
          if (!result) {
            return result;
          }
          unsigned int v74 = v168[0];
          uint64_t v75 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v21 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v74 = *v24;
          uint64_t v75 = v24 + 1;
          *((void *)a2 + 1) = v75;
        }
        *((unsigned char *)this + 113) = v74 != 0;
        int v25 = *((_DWORD *)this + 90) | 0x4000;
        *((_DWORD *)this + 90) = v25;
        if ((int)v21 - (int)v75 < 2 || *v75 != 130 || v75[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v75 + 2;
LABEL_213:
        *((_DWORD *)this + 90) = v25 | 0x8000;
        int v76 = (CoreNavigation::CLP::LogEntry::PrivateData::PressureSample *)*((void *)this + 11);
        if (!v76) {
          operator new();
        }
        v168[0] = 0;
        uint64_t v77 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v77 >= *((void *)a2 + 2) || *v77 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v168))return 0; {
        }
          }
        else
        {
          v168[0] = *v77;
          *((void *)a2 + 1) = v77 + 1;
        }
        int v78 = *((_DWORD *)a2 + 14);
        int v79 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v78 + 1;
        if (v78 >= v79) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::PressureSample::MergePartialFromCodedStream(v76, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v80 = *((_DWORD *)a2 + 14);
        BOOL v66 = __OFSUB__(v80, 1);
        int v81 = v80 - 1;
        if (v81 < 0 == v66) {
          *((_DWORD *)a2 + 14) = v81;
        }
        int v82 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v26 = *((void *)a2 + 2);
        if ((int)v26 - (int)v82 <= 1 || *v82 != 136 || v82[1] != 1) {
          continue;
        }
        uint64_t v27 = (char *)(v82 + 2);
        *((void *)a2 + 1) = v27;
LABEL_228:
        v168[0] = 0;
        if ((unint64_t)v27 >= v26 || *v27 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v168);
          if (!result) {
            return result;
          }
          unsigned int v83 = v168[0];
        }
        else
        {
          unsigned int v83 = *v27;
          *((void *)a2 + 1) = v27 + 1;
        }
        if (v83 + 1 <= 3)
        {
          *((_DWORD *)this + 90) |= 0x10000u;
          *((_DWORD *)this + 24) = v83;
        }
        signed int v90 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v90 < 2 || *v90 != 149 || v90[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v90 + 2;
LABEL_252:
        v168[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v168) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 25) = v168[0];
        int v28 = *((_DWORD *)this + 90) | 0x20000;
        *((_DWORD *)this + 90) = v28;
        int v91 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v91 < 2 || *v91 != 154 || v91[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v91 + 2;
LABEL_257:
        *((_DWORD *)this + 90) = v28 | 0x40000;
        int v92 = (CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *)*((void *)this + 13);
        if (!v92) {
          operator new();
        }
        v168[0] = 0;
        uint64_t v93 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v93 >= *((void *)a2 + 2) || *v93 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v168))return 0; {
        }
          }
        else
        {
          v168[0] = *v93;
          *((void *)a2 + 1) = v93 + 1;
        }
        int v94 = *((_DWORD *)a2 + 14);
        int v95 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v94 + 1;
        if (v94 >= v95) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::MergePartialFromCodedStream(v92, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v96 = *((_DWORD *)a2 + 14);
        BOOL v66 = __OFSUB__(v96, 1);
        int v97 = v96 - 1;
        if (v97 < 0 == v66) {
          *((_DWORD *)a2 + 14) = v97;
        }
        int v98 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v98 <= 1 || *v98 != 161 || v98[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v98 + 2;
LABEL_272:
        *(void *)uint64_t v168 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v168) & 1) == 0)return 0; {
        *((void *)this + 15) = *(void *)v168;
        }
        *((_DWORD *)this + 90) |= 0x80000u;
        int v99 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v99 < 2 || *v99 != 169 || v99[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v99 + 2;
LABEL_277:
        *(void *)uint64_t v168 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v168) & 1) == 0)return 0; {
        *((void *)this + 16) = *(void *)v168;
        }
        *((_DWORD *)this + 90) |= 0x100000u;
        v100 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v29 = *((void *)a2 + 2);
        if ((int)v29 - (int)v100 < 2 || *v100 != 176 || v100[1] != 1) {
          continue;
        }
        char v30 = (char *)(v100 + 2);
        *((void *)a2 + 1) = v30;
LABEL_282:
        v168[0] = 0;
        if ((unint64_t)v30 >= v29 || *v30 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v168);
          if (!result) {
            return result;
          }
          unsigned int v101 = v168[0];
        }
        else
        {
          unsigned int v101 = *v30;
          *((void *)a2 + 1) = v30 + 1;
        }
        if (v101 <= 2)
        {
          *((_DWORD *)this + 90) |= 0x200000u;
          *((_DWORD *)this + 29) = v101;
        }
        unsigned int v102 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v31 = *((void *)a2 + 2);
        if ((int)v31 - (int)v102 < 2 || *v102 != 184 || v102[1] != 1) {
          continue;
        }
        int v32 = v102 + 2;
        *((void *)a2 + 1) = v32;
LABEL_293:
        v168[0] = 0;
        if ((unint64_t)v32 >= v31 || (char)*v32 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v168);
          if (!result) {
            return result;
          }
          unsigned int v103 = v168[0];
          uint64_t v104 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v31 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v103 = *v32;
          uint64_t v104 = v32 + 1;
          *((void *)a2 + 1) = v104;
        }
        *((unsigned char *)this + 114) = v103 != 0;
        int v33 = *((_DWORD *)this + 90) | 0x400000;
        *((_DWORD *)this + 90) = v33;
        if ((int)v31 - (int)v104 < 2 || *v104 != 194 || v104[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v104 + 2;
LABEL_334:
        *((_DWORD *)this + 90) = v33 | 0x800000;
        signed int v112 = (CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData *)*((void *)this + 17);
        if (!v112) {
          operator new();
        }
        v168[0] = 0;
        int v113 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v113 >= *((void *)a2 + 2) || *v113 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v168))return 0; {
        }
          }
        else
        {
          v168[0] = *v113;
          *((void *)a2 + 1) = v113 + 1;
        }
        int v114 = *((_DWORD *)a2 + 14);
        int v115 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v114 + 1;
        if (v114 >= v115) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData::MergePartialFromCodedStream(v112, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v116 = *((_DWORD *)a2 + 14);
        BOOL v66 = __OFSUB__(v116, 1);
        int v117 = v116 - 1;
        if (v117 < 0 == v66) {
          *((_DWORD *)a2 + 14) = v117;
        }
        uint64_t v118 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v118 <= 1 || *v118 != 201 || v118[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v118 + 2;
LABEL_349:
        *(void *)uint64_t v168 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v168) & 1) == 0)return 0; {
        *((void *)this + 18) = *(void *)v168;
        }
        *((_DWORD *)this + 90) |= 0x1000000u;
        int v119 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v119 < 2 || *v119 != 209 || v119[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v119 + 2;
LABEL_354:
        *(void *)uint64_t v168 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v168) & 1) == 0)return 0; {
        *((void *)this + 19) = *(void *)v168;
        }
        *((_DWORD *)this + 90) |= 0x2000000u;
        uint64_t v120 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v120 < 2 || *v120 != 217 || v120[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v120 + 2;
LABEL_359:
        *(void *)uint64_t v168 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v168) & 1) == 0)return 0; {
        *((void *)this + 20) = *(void *)v168;
        }
        *((_DWORD *)this + 90) |= 0x4000000u;
        int v121 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v121 < 2 || *v121 != 225 || v121[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v121 + 2;
LABEL_364:
        *(void *)uint64_t v168 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v168) & 1) == 0)return 0; {
        *((void *)this + 21) = *(void *)v168;
        }
        *((_DWORD *)this + 90) |= 0x8000000u;
        signed int v122 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v122 < 2 || *v122 != 233 || v122[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v122 + 2;
LABEL_369:
        *(void *)uint64_t v168 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v168) & 1) == 0)return 0; {
        *((void *)this + 22) = *(void *)v168;
        }
        *((_DWORD *)this + 90) |= 0x10000000u;
        int v123 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v123 < 2 || *v123 != 241 || v123[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v123 + 2;
LABEL_374:
        *(void *)uint64_t v168 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v168) & 1) == 0)return 0; {
        *((void *)this + 23) = *(void *)v168;
        }
        *((_DWORD *)this + 90) |= 0x20000000u;
        int v124 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v34 = *((void *)a2 + 2);
        if ((int)v34 - (int)v124 < 2 || *v124 != 248 || v124[1] != 1) {
          continue;
        }
        int v35 = v124 + 2;
        *((void *)a2 + 1) = v35;
LABEL_379:
        v168[0] = 0;
        if ((unint64_t)v35 >= v34 || (char)*v35 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v168);
          if (!result) {
            return result;
          }
          unsigned int v125 = v168[0];
          int v126 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v34 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v125 = *v35;
          int v126 = v35 + 1;
          *((void *)a2 + 1) = v126;
        }
        *((unsigned char *)this + 115) = v125 != 0;
        *((_DWORD *)this + 90) |= 0x40000000u;
        if ((int)v34 - (int)v126 < 2 || *v126 != 129 || v126[1] != 2) {
          continue;
        }
        *((void *)a2 + 1) = v126 + 2;
LABEL_388:
        *(void *)uint64_t v168 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v168) & 1) == 0)return 0; {
        *((void *)this + 24) = *(void *)v168;
        }
        *((_DWORD *)this + 90) |= 0x80000000;
        v127 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v127 < 2 || *v127 != 137 || v127[1] != 2) {
          continue;
        }
        *((void *)a2 + 1) = v127 + 2;
LABEL_393:
        *(void *)uint64_t v168 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v168) & 1) == 0)return 0; {
        *((void *)this + 25) = *(void *)v168;
        }
        *((_DWORD *)this + 91) |= 1u;
        v128 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v36 = *((void *)a2 + 2);
        if ((int)v36 - (int)v128 < 2 || *v128 != 144 || v128[1] != 2) {
          continue;
        }
        uint64_t v37 = v128 + 2;
        *((void *)a2 + 1) = v37;
LABEL_398:
        v168[0] = 0;
        if ((unint64_t)v37 >= v36 || (char)*v37 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v168);
          if (!result) {
            return result;
          }
          unsigned int v129 = v168[0];
          int v130 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v36 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v129 = *v37;
          int v130 = v37 + 1;
          *((void *)a2 + 1) = v130;
        }
        *((unsigned char *)this + 276) = v129 != 0;
        int v38 = *((_DWORD *)this + 91) | 2;
        *((_DWORD *)this + 91) = v38;
        if ((int)v36 - (int)v130 < 2 || *v130 != 154 || v130[1] != 2) {
          continue;
        }
        *((void *)a2 + 1) = v130 + 2;
LABEL_407:
        *((_DWORD *)this + 91) = v38 | 4;
        uint64_t v131 = (CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *)*((void *)this + 26);
        if (!v131) {
          operator new();
        }
        v168[0] = 0;
        int v132 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v132 >= *((void *)a2 + 2) || *v132 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v168))return 0; {
        }
          }
        else
        {
          v168[0] = *v132;
          *((void *)a2 + 1) = v132 + 1;
        }
        int v133 = *((_DWORD *)a2 + 14);
        int v134 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v133 + 1;
        if (v133 >= v134) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::MergePartialFromCodedStream(v131, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v135 = *((_DWORD *)a2 + 14);
        BOOL v66 = __OFSUB__(v135, 1);
        int v136 = v135 - 1;
        if (v136 < 0 == v66) {
          *((_DWORD *)a2 + 14) = v136;
        }
        int v137 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v137 <= 1 || *v137 != 161 || v137[1] != 2) {
          continue;
        }
        *((void *)a2 + 1) = v137 + 2;
LABEL_422:
        *(void *)uint64_t v168 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v168) & 1) == 0)return 0; {
        *((void *)this + 27) = *(void *)v168;
        }
        *((_DWORD *)this + 91) |= 8u;
        uint64_t v138 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v39 = *((void *)a2 + 2);
        if ((int)v39 - (int)v138 < 2 || *v138 != 168 || v138[1] != 2) {
          continue;
        }
        unsigned int v40 = (char *)(v138 + 2);
        *((void *)a2 + 1) = v40;
LABEL_427:
        v168[0] = 0;
        if ((unint64_t)v40 >= v39 || *v40 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v168);
          if (!result) {
            return result;
          }
          unsigned int v139 = v168[0];
        }
        else
        {
          unsigned int v139 = *v40;
          *((void *)a2 + 1) = v40 + 1;
        }
        if (v139 <= 2)
        {
          *((_DWORD *)this + 91) |= 0x10u;
          *((_DWORD *)this + 68) = v139;
        }
        int v140 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v140 < 2 || *v140 != 177 || v140[1] != 2) {
          continue;
        }
        *((void *)a2 + 1) = v140 + 2;
LABEL_438:
        *(void *)uint64_t v168 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v168) & 1) == 0)return 0; {
        *((void *)this + 28) = *(void *)v168;
        }
        *((_DWORD *)this + 91) |= 0x20u;
        unsigned int v141 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v141 < 2 || *v141 != 185 || v141[1] != 2) {
          continue;
        }
        *((void *)a2 + 1) = v141 + 2;
LABEL_443:
        *(void *)uint64_t v168 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v168) & 1) == 0)return 0; {
        *((void *)this + 29) = *(void *)v168;
        }
        *((_DWORD *)this + 91) |= 0x40u;
        int v142 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v142 < 2 || *v142 != 193 || v142[1] != 2) {
          continue;
        }
        *((void *)a2 + 1) = v142 + 2;
LABEL_448:
        *(void *)uint64_t v168 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v168) & 1) == 0)return 0; {
        *((void *)this + 30) = *(void *)v168;
        }
        *((_DWORD *)this + 91) |= 0x80u;
        uint64_t v143 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v143 < 2 || *v143 != 201 || v143[1] != 2) {
          continue;
        }
        *((void *)a2 + 1) = v143 + 2;
LABEL_453:
        *(void *)uint64_t v168 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v168) & 1) == 0)return 0; {
        *((void *)this + 31) = *(void *)v168;
        }
        *((_DWORD *)this + 91) |= 0x100u;
        int v144 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v144 < 2 || *v144 != 209 || v144[1] != 2) {
          continue;
        }
        *((void *)a2 + 1) = v144 + 2;
LABEL_458:
        *(void *)uint64_t v168 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v168) & 1) == 0)return 0; {
        *((void *)this + 32) = *(void *)v168;
        }
        *((_DWORD *)this + 91) |= 0x200u;
        uint64_t v145 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v41 = *((void *)a2 + 2);
        if ((int)v41 - (int)v145 < 2 || *v145 != 216 || v145[1] != 2) {
          continue;
        }
        char v42 = v145 + 2;
        *((void *)a2 + 1) = v42;
LABEL_463:
        v168[0] = 0;
        if ((unint64_t)v42 >= v41 || (char)*v42 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v168);
          if (!result) {
            return result;
          }
          unsigned int v146 = v168[0];
          signed int v147 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v41 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v146 = *v42;
          signed int v147 = v42 + 1;
          *((void *)a2 + 1) = v147;
        }
        *((unsigned char *)this + 277) = v146 != 0;
        *((_DWORD *)this + 91) |= 0x400u;
        if ((int)v41 - (int)v147 < 2 || *v147 != 225 || v147[1] != 2) {
          continue;
        }
        *((void *)a2 + 1) = v147 + 2;
LABEL_472:
        *(void *)uint64_t v168 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v168) & 1) == 0)return 0; {
        *((void *)this + 33) = *(void *)v168;
        }
        *((_DWORD *)this + 91) |= 0x800u;
        int v148 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v148 < 2 || *v148 != 233 || v148[1] != 2) {
          continue;
        }
        *((void *)a2 + 1) = v148 + 2;
LABEL_477:
        *(void *)uint64_t v168 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v168) & 1) == 0)return 0; {
        *((void *)this + 35) = *(void *)v168;
        }
        *((_DWORD *)this + 91) |= 0x1000u;
        int v149 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v149 < 2 || *v149 != 242) {
          continue;
        }
        while (1)
        {
          if (v149[1] != 2) {
            goto LABEL_2;
          }
          *((void *)a2 + 1) = v149 + 2;
LABEL_518:
          uint64_t v156 = *((int *)this + 74);
          int v157 = *((_DWORD *)this + 75);
          if ((int)v156 >= v157)
          {
            if (v157 == *((_DWORD *)this + 76))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
              int v157 = *((_DWORD *)this + 75);
            }
            *((_DWORD *)this + 75) = v157 + 1;
            operator new();
          }
          uint64_t v158 = *((void *)this + 36);
          *((_DWORD *)this + 74) = v156 + 1;
          unsigned int v159 = *(CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo **)(v158 + 8 * v156);
          v168[0] = 0;
          int v160 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v160 >= *((void *)a2 + 2) || *v160 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v168))return 0; {
          }
            }
          else
          {
            v168[0] = *v160;
            *((void *)a2 + 1) = v160 + 1;
          }
          int v161 = *((_DWORD *)a2 + 14);
          int v162 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v161 + 1;
          if (v161 >= v162) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo::MergePartialFromCodedStream(v159, a2)|| !*((unsigned char *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          int v163 = *((_DWORD *)a2 + 14);
          BOOL v66 = __OFSUB__(v163, 1);
          int v164 = v163 - 1;
          if (v164 < 0 == v66) {
            *((_DWORD *)a2 + 14) = v164;
          }
          int v149 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v44 = *((void *)a2 + 2);
          if ((int)v44 - (int)v149 <= 1) {
            goto LABEL_2;
          }
          int v165 = *v149;
          if (v165 == 248) {
            break;
          }
          if (v165 != 242) {
            goto LABEL_2;
          }
        }
        if (v149[1] != 2) {
          continue;
        }
        int v43 = (char *)(v149 + 2);
        *((void *)a2 + 1) = v43;
LABEL_539:
        v168[0] = 0;
        if ((unint64_t)v43 >= v44 || *v43 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v168);
          if (!result) {
            return result;
          }
          unsigned int v166 = v168[0];
        }
        else
        {
          unsigned int v166 = *v43;
          *((void *)a2 + 1) = v43 + 1;
        }
        if (v166 <= 2)
        {
          *((_DWORD *)this + 91) |= 0x4000u;
          *((_DWORD *)this + 78) = v166;
        }
        int v167 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v167 < 2 || *v167 != 130 || v167[1] != 3) {
          continue;
        }
        *((void *)a2 + 1) = v167 + 2;
LABEL_131:
        *((_DWORD *)this + 91) |= 0x8000u;
        uint64_t v45 = (CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo *)*((void *)this + 40);
        if (!v45) {
          operator new();
        }
        v168[0] = 0;
        unsigned int v46 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v46 >= *((void *)a2 + 2) || *v46 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v168))return 0; {
        }
          }
        else
        {
          v168[0] = *v46;
          *((void *)a2 + 1) = v46 + 1;
        }
        int v84 = *((_DWORD *)a2 + 14);
        int v85 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v84 + 1;
        if (v84 >= v85) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo::MergePartialFromCodedStream(v45, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v86 = *((_DWORD *)a2 + 14);
        BOOL v66 = __OFSUB__(v86, 1);
        int v87 = v86 - 1;
        if (v87 < 0 == v66) {
          *((_DWORD *)a2 + 14) = v87;
        }
        uint64_t v88 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v47 = *((void *)a2 + 2);
        if ((int)v47 - (int)v88 <= 1 || *v88 != 136 || v88[1] != 3) {
          continue;
        }
        uint64_t v48 = (char *)(v88 + 2);
        *((void *)a2 + 1) = v48;
LABEL_241:
        v168[0] = 0;
        if ((unint64_t)v48 >= v47 || *v48 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v168);
          if (!result) {
            return result;
          }
          unsigned int v89 = v168[0];
        }
        else
        {
          unsigned int v89 = *v48;
          *((void *)a2 + 1) = v48 + 1;
        }
        if (v89 <= 2)
        {
          *((_DWORD *)this + 91) |= 0x10000u;
          *((_DWORD *)this + 79) = v89;
        }
        int v105 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v105 < 2 || *v105 != 145 || v105[1] != 3) {
          continue;
        }
        *((void *)a2 + 1) = v105 + 2;
LABEL_304:
        *(void *)uint64_t v168 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v168) & 1) == 0)return 0; {
        *((void *)this + 41) = *(void *)v168;
        }
        *((_DWORD *)this + 91) |= 0x20000u;
        uint64_t v106 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v106 < 2 || *v106 != 153 || v106[1] != 3) {
          continue;
        }
        *((void *)a2 + 1) = v106 + 2;
LABEL_309:
        *(void *)uint64_t v168 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v168))
        {
          *((void *)this + 42) = *(void *)v168;
          *((_DWORD *)this + 91) |= 0x40000u;
          int v107 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v49 = *((void *)a2 + 2);
          if ((int)v49 - (int)v107 >= 2 && *v107 == 160 && v107[1] == 3)
          {
            uint64_t v50 = (char *)(v107 + 2);
            *((void *)a2 + 1) = v50;
LABEL_314:
            v168[0] = 0;
            if ((unint64_t)v50 >= v49 || *v50 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v168);
              if (!result) {
                return result;
              }
              unsigned int v108 = v168[0];
            }
            else
            {
              unsigned int v108 = *v50;
              *((void *)a2 + 1) = v50 + 1;
            }
            if (v108 <= 3)
            {
              *((_DWORD *)this + 91) |= 0x80000u;
              *((_DWORD *)this + 86) = v108;
            }
            int v109 = (unsigned __int8 *)*((void *)a2 + 1);
            unint64_t v51 = *((void *)a2 + 2);
            if ((int)v51 - (int)v109 >= 2 && *v109 == 168 && v109[1] == 3)
            {
              uint64_t v52 = v109 + 2;
              *((void *)a2 + 1) = v52;
LABEL_325:
              v168[0] = 0;
              if ((unint64_t)v52 >= v51 || (char)*v52 < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v168);
                if (!result) {
                  return result;
                }
                unsigned int v110 = v168[0];
                int v111 = (unsigned __int8 *)*((void *)a2 + 1);
                unint64_t v51 = *((void *)a2 + 2);
              }
              else
              {
                unsigned int v110 = *v52;
                int v111 = v52 + 1;
                *((void *)a2 + 1) = v111;
              }
              *((unsigned char *)this + 278) = v110 != 0;
              *((_DWORD *)this + 91) |= 0x100000u;
              if ((int)v51 - (int)v111 >= 2 && *v111 == 176 && v111[1] == 3)
              {
                uint64_t v53 = (char *)(v111 + 2);
                *((void *)a2 + 1) = v53;
LABEL_487:
                v168[0] = 0;
                if ((unint64_t)v53 >= v51 || *v53 < 0)
                {
                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v168);
                  if (!result) {
                    return result;
                  }
                  unsigned int v150 = v168[0];
                }
                else
                {
                  unsigned int v150 = *v53;
                  *((void *)a2 + 1) = v53 + 1;
                }
                if (v150 <= 2)
                {
                  *((_DWORD *)this + 91) |= 0x200000u;
                  *((_DWORD *)this + 87) = v150;
                }
                int v151 = (unsigned __int8 *)*((void *)a2 + 1);
                unint64_t v54 = *((void *)a2 + 2);
                if ((int)v54 - (int)v151 >= 2 && *v151 == 184 && v151[1] == 3)
                {
                  int v55 = (char *)(v151 + 2);
                  *((void *)a2 + 1) = v55;
LABEL_498:
                  v168[0] = 0;
                  if ((unint64_t)v55 >= v54 || *v55 < 0)
                  {
                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v168);
                    if (!result) {
                      return result;
                    }
                    unsigned int v152 = v168[0];
                  }
                  else
                  {
                    unsigned int v152 = *v55;
                    *((void *)a2 + 1) = v55 + 1;
                  }
                  if (v152 <= 4)
                  {
                    *((_DWORD *)this + 91) |= 0x400000u;
                    *((_DWORD *)this + 88) = v152;
                  }
                  int v153 = (unsigned __int8 *)*((void *)a2 + 1);
                  unint64_t v56 = *((void *)a2 + 2);
                  if ((int)v56 - (int)v153 >= 2 && *v153 == 192 && v153[1] == 3)
                  {
                    unsigned int v57 = (char *)(v153 + 2);
                    *((void *)a2 + 1) = v57;
LABEL_509:
                    v168[0] = 0;
                    if ((unint64_t)v57 >= v56 || *v57 < 0)
                    {
                      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v168);
                      if (!result) {
                        return result;
                      }
                      unsigned int v154 = v168[0];
                      int v155 = (unsigned __int8 *)*((void *)a2 + 1);
                      unint64_t v56 = *((void *)a2 + 2);
                    }
                    else
                    {
                      unsigned int v154 = *v57;
                      int v155 = (unsigned __int8 *)(v57 + 1);
                      *((void *)a2 + 1) = v155;
                    }
                    *((unsigned char *)this + 279) = v154 != 0;
                    *((_DWORD *)this + 91) |= 0x800000u;
                    if (v155 == (unsigned __int8 *)v56
                      && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                    {
                      *((_DWORD *)a2 + 8) = 0;
                      uint64_t result = 1;
                      *((unsigned char *)a2 + 36) = 1;
                      return result;
                    }
                  }
                }
              }
            }
          }
          continue;
        }
        return 0;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_20;
        }
        goto LABEL_151;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_25;
        }
        goto LABEL_151;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_30;
        }
        goto LABEL_151;
      case 6u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_35;
        }
        goto LABEL_151;
      case 7u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_40;
        }
        goto LABEL_151;
      case 8u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_45;
        }
        goto LABEL_151;
      case 9u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_151;
        }
        uint64_t v17 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_51;
      case 0xAu:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_151;
        }
        int v20 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_160;
      case 0xBu:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_170;
        }
        goto LABEL_151;
      case 0xCu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_184;
        }
        goto LABEL_151;
      case 0xDu:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_151;
        }
        unsigned int v22 = (char *)*((void *)a2 + 1);
        unint64_t v21 = *((void *)a2 + 2);
        goto LABEL_188;
      case 0xEu:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_151;
        }
        uint64_t v23 = (char *)*((void *)a2 + 1);
        unint64_t v21 = *((void *)a2 + 2);
        goto LABEL_196;
      case 0xFu:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_151;
        }
        int v24 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v21 = *((void *)a2 + 2);
        goto LABEL_204;
      case 0x10u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_151;
        }
        int v25 = *((_DWORD *)this + 90);
        goto LABEL_213;
      case 0x11u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_151;
        }
        uint64_t v27 = (char *)*((void *)a2 + 1);
        unint64_t v26 = *((void *)a2 + 2);
        goto LABEL_228;
      case 0x12u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_252;
        }
        goto LABEL_151;
      case 0x13u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_151;
        }
        int v28 = *((_DWORD *)this + 90);
        goto LABEL_257;
      case 0x14u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_272;
        }
        goto LABEL_151;
      case 0x15u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_277;
        }
        goto LABEL_151;
      case 0x16u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_151;
        }
        char v30 = (char *)*((void *)a2 + 1);
        unint64_t v29 = *((void *)a2 + 2);
        goto LABEL_282;
      case 0x17u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_151;
        }
        int v32 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v31 = *((void *)a2 + 2);
        goto LABEL_293;
      case 0x18u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_151;
        }
        int v33 = *((_DWORD *)this + 90);
        goto LABEL_334;
      case 0x19u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_349;
        }
        goto LABEL_151;
      case 0x1Au:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_354;
        }
        goto LABEL_151;
      case 0x1Bu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_359;
        }
        goto LABEL_151;
      case 0x1Cu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_364;
        }
        goto LABEL_151;
      case 0x1Du:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_369;
        }
        goto LABEL_151;
      case 0x1Eu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_374;
        }
        goto LABEL_151;
      case 0x1Fu:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_151;
        }
        int v35 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v34 = *((void *)a2 + 2);
        goto LABEL_379;
      case 0x20u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_388;
        }
        goto LABEL_151;
      case 0x21u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_393;
        }
        goto LABEL_151;
      case 0x22u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_151;
        }
        uint64_t v37 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v36 = *((void *)a2 + 2);
        goto LABEL_398;
      case 0x23u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_151;
        }
        int v38 = *((_DWORD *)this + 91);
        goto LABEL_407;
      case 0x24u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_422;
        }
        goto LABEL_151;
      case 0x25u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_151;
        }
        unsigned int v40 = (char *)*((void *)a2 + 1);
        unint64_t v39 = *((void *)a2 + 2);
        goto LABEL_427;
      case 0x26u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_438;
        }
        goto LABEL_151;
      case 0x27u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_443;
        }
        goto LABEL_151;
      case 0x28u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_448;
        }
        goto LABEL_151;
      case 0x29u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_453;
        }
        goto LABEL_151;
      case 0x2Au:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_458;
        }
        goto LABEL_151;
      case 0x2Bu:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_151;
        }
        char v42 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v41 = *((void *)a2 + 2);
        goto LABEL_463;
      case 0x2Cu:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_472;
        }
        goto LABEL_151;
      case 0x2Du:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_477;
        }
        goto LABEL_151;
      case 0x2Eu:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_518;
        }
        goto LABEL_151;
      case 0x2Fu:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_151;
        }
        int v43 = (char *)*((void *)a2 + 1);
        unint64_t v44 = *((void *)a2 + 2);
        goto LABEL_539;
      case 0x30u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_131;
        }
        goto LABEL_151;
      case 0x31u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_151;
        }
        uint64_t v48 = (char *)*((void *)a2 + 1);
        unint64_t v47 = *((void *)a2 + 2);
        goto LABEL_241;
      case 0x32u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_304;
        }
        goto LABEL_151;
      case 0x33u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_309;
        }
        goto LABEL_151;
      case 0x34u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_151;
        }
        uint64_t v50 = (char *)*((void *)a2 + 1);
        unint64_t v49 = *((void *)a2 + 2);
        goto LABEL_314;
      case 0x35u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_151;
        }
        uint64_t v52 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v51 = *((void *)a2 + 2);
        goto LABEL_325;
      case 0x36u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_151;
        }
        uint64_t v53 = (char *)*((void *)a2 + 1);
        unint64_t v51 = *((void *)a2 + 2);
        goto LABEL_487;
      case 0x37u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_151;
        }
        int v55 = (char *)*((void *)a2 + 1);
        unint64_t v54 = *((void *)a2 + 2);
        goto LABEL_498;
      case 0x38u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_151;
        }
        unsigned int v57 = (char *)*((void *)a2 + 1);
        unint64_t v56 = *((void *)a2 + 2);
        goto LABEL_509;
      default:
        int v7 = TagFallback & 7;
LABEL_151:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 360);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
    int v6 = *(_DWORD *)(v5 + 360);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_63;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 360);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_64;
  }
LABEL_63:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 360);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_65;
  }
LABEL_64:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 360);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_66;
  }
LABEL_65:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(v5 + 40), a3);
  int v6 = *(_DWORD *)(v5 + 360);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_67;
  }
LABEL_66:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(float *)(v5 + 48), a3);
  int v6 = *(_DWORD *)(v5 + 360);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_68;
  }
LABEL_67:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (uint64_t)a2, *(float *)(v5 + 52), a3);
  int v6 = *(_DWORD *)(v5 + 360);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_69;
  }
LABEL_68:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (uint64_t)a2, *(float *)(v5 + 56), a3);
  int v6 = *(_DWORD *)(v5 + 360);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_70;
  }
LABEL_69:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned __int8 *)(v5 + 112), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 360);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_71;
  }
LABEL_70:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned int *)(v5 + 60), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 360);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_74;
  }
LABEL_71:
  uint64_t v10 = *(void *)(v5 + 64);
  if (!v10)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v10 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::default_instance_ + 64);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v10, a2, a4);
  int v6 = *(_DWORD *)(v5 + 360);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_75;
  }
LABEL_74:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, (uint64_t)a2, *(double *)(v5 + 72), a3);
  int v6 = *(_DWORD *)(v5 + 360);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_76;
  }
LABEL_75:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, *(unsigned int *)(v5 + 80), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 360);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_77;
  }
LABEL_76:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, *(unsigned int *)(v5 + 84), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 360);
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_78;
  }
LABEL_77:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, *(unsigned __int8 *)(v5 + 113), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 360);
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_81;
  }
LABEL_78:
  uint64_t v11 = *(void *)(v5 + 88);
  if (!v11)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v11 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::default_instance_ + 88);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, v11, a2, a4);
  int v6 = *(_DWORD *)(v5 + 360);
  if ((v6 & 0x10000) == 0)
  {
LABEL_18:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_82;
  }
LABEL_81:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, *(unsigned int *)(v5 + 96), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 360);
  if ((v6 & 0x20000) == 0)
  {
LABEL_19:
    if ((v6 & 0x40000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_83;
  }
LABEL_82:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, (uint64_t)a2, *(float *)(v5 + 100), a3);
  int v6 = *(_DWORD *)(v5 + 360);
  if ((v6 & 0x40000) == 0)
  {
LABEL_20:
    if ((v6 & 0x80000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_86;
  }
LABEL_83:
  uint64_t v12 = *(void *)(v5 + 104);
  if (!v12)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v12 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::default_instance_ + 104);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, v12, a2, a4);
  int v6 = *(_DWORD *)(v5 + 360);
  if ((v6 & 0x80000) == 0)
  {
LABEL_21:
    if ((v6 & 0x100000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_87;
  }
LABEL_86:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14, (uint64_t)a2, *(double *)(v5 + 120), a3);
  int v6 = *(_DWORD *)(v5 + 360);
  if ((v6 & 0x100000) == 0)
  {
LABEL_22:
    if ((v6 & 0x200000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_88;
  }
LABEL_87:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x15, (uint64_t)a2, *(double *)(v5 + 128), a3);
  int v6 = *(_DWORD *)(v5 + 360);
  if ((v6 & 0x200000) == 0)
  {
LABEL_23:
    if ((v6 & 0x400000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_89;
  }
LABEL_88:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x16, *(unsigned int *)(v5 + 116), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 360);
  if ((v6 & 0x400000) == 0)
  {
LABEL_24:
    if ((v6 & 0x800000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_90;
  }
LABEL_89:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x17, *(unsigned __int8 *)(v5 + 114), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 360);
  if ((v6 & 0x800000) == 0)
  {
LABEL_25:
    if ((v6 & 0x1000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_93;
  }
LABEL_90:
  uint64_t v13 = *(void *)(v5 + 136);
  if (!v13)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v13 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::default_instance_ + 136);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x18, v13, a2, a4);
  int v6 = *(_DWORD *)(v5 + 360);
  if ((v6 & 0x1000000) == 0)
  {
LABEL_26:
    if ((v6 & 0x2000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_94;
  }
LABEL_93:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x19, (uint64_t)a2, *(double *)(v5 + 144), a3);
  int v6 = *(_DWORD *)(v5 + 360);
  if ((v6 & 0x2000000) == 0)
  {
LABEL_27:
    if ((v6 & 0x4000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_95;
  }
LABEL_94:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1A, (uint64_t)a2, *(double *)(v5 + 152), a3);
  int v6 = *(_DWORD *)(v5 + 360);
  if ((v6 & 0x4000000) == 0)
  {
LABEL_28:
    if ((v6 & 0x8000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_96;
  }
LABEL_95:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1B, (uint64_t)a2, *(double *)(v5 + 160), a3);
  int v6 = *(_DWORD *)(v5 + 360);
  if ((v6 & 0x8000000) == 0)
  {
LABEL_29:
    if ((v6 & 0x10000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_97;
  }
LABEL_96:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1C, (uint64_t)a2, *(double *)(v5 + 168), a3);
  int v6 = *(_DWORD *)(v5 + 360);
  if ((v6 & 0x10000000) == 0)
  {
LABEL_30:
    if ((v6 & 0x20000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_98;
  }
LABEL_97:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1D, (uint64_t)a2, *(double *)(v5 + 176), a3);
  int v6 = *(_DWORD *)(v5 + 360);
  if ((v6 & 0x20000000) == 0)
  {
LABEL_31:
    if ((v6 & 0x40000000) == 0) {
      goto LABEL_32;
    }
LABEL_99:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1F, *(unsigned __int8 *)(v5 + 115), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 360) & 0x80000000) == 0) {
      goto LABEL_33;
    }
    goto LABEL_100;
  }
LABEL_98:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1E, (uint64_t)a2, *(double *)(v5 + 184), a3);
  int v6 = *(_DWORD *)(v5 + 360);
  if ((v6 & 0x40000000) != 0) {
    goto LABEL_99;
  }
LABEL_32:
  if ((v6 & 0x80000000) == 0) {
    goto LABEL_33;
  }
LABEL_100:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x20, (uint64_t)a2, *(double *)(v5 + 192), a3);
LABEL_33:
  int v7 = *(_DWORD *)(v5 + 364);
  if (v7)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x21, (uint64_t)a2, *(double *)(v5 + 200), a3);
    int v7 = *(_DWORD *)(v5 + 364);
    if ((v7 & 2) == 0)
    {
LABEL_35:
      if ((v7 & 4) == 0) {
        goto LABEL_36;
      }
      goto LABEL_103;
    }
  }
  else if ((v7 & 2) == 0)
  {
    goto LABEL_35;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x22, *(unsigned __int8 *)(v5 + 276), (uint64_t)a2, a4);
  int v7 = *(_DWORD *)(v5 + 364);
  if ((v7 & 4) == 0)
  {
LABEL_36:
    if ((v7 & 8) == 0) {
      goto LABEL_37;
    }
    goto LABEL_106;
  }
LABEL_103:
  uint64_t v14 = *(void *)(v5 + 208);
  if (!v14)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v14 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::default_instance_ + 208);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x23, v14, a2, a4);
  int v7 = *(_DWORD *)(v5 + 364);
  if ((v7 & 8) == 0)
  {
LABEL_37:
    if ((v7 & 0x10) == 0) {
      goto LABEL_38;
    }
    goto LABEL_107;
  }
LABEL_106:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x24, (uint64_t)a2, *(double *)(v5 + 216), a3);
  int v7 = *(_DWORD *)(v5 + 364);
  if ((v7 & 0x10) == 0)
  {
LABEL_38:
    if ((v7 & 0x20) == 0) {
      goto LABEL_39;
    }
    goto LABEL_108;
  }
LABEL_107:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x25, *(unsigned int *)(v5 + 272), (uint64_t)a2, a4);
  int v7 = *(_DWORD *)(v5 + 364);
  if ((v7 & 0x20) == 0)
  {
LABEL_39:
    if ((v7 & 0x40) == 0) {
      goto LABEL_40;
    }
    goto LABEL_109;
  }
LABEL_108:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x26, (uint64_t)a2, *(double *)(v5 + 224), a3);
  int v7 = *(_DWORD *)(v5 + 364);
  if ((v7 & 0x40) == 0)
  {
LABEL_40:
    if ((v7 & 0x80) == 0) {
      goto LABEL_41;
    }
    goto LABEL_110;
  }
LABEL_109:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x27, (uint64_t)a2, *(double *)(v5 + 232), a3);
  int v7 = *(_DWORD *)(v5 + 364);
  if ((v7 & 0x80) == 0)
  {
LABEL_41:
    if ((v7 & 0x100) == 0) {
      goto LABEL_42;
    }
    goto LABEL_111;
  }
LABEL_110:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x28, (uint64_t)a2, *(double *)(v5 + 240), a3);
  int v7 = *(_DWORD *)(v5 + 364);
  if ((v7 & 0x100) == 0)
  {
LABEL_42:
    if ((v7 & 0x200) == 0) {
      goto LABEL_43;
    }
    goto LABEL_112;
  }
LABEL_111:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x29, (uint64_t)a2, *(double *)(v5 + 248), a3);
  int v7 = *(_DWORD *)(v5 + 364);
  if ((v7 & 0x200) == 0)
  {
LABEL_43:
    if ((v7 & 0x400) == 0) {
      goto LABEL_44;
    }
    goto LABEL_113;
  }
LABEL_112:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2A, (uint64_t)a2, *(double *)(v5 + 256), a3);
  int v7 = *(_DWORD *)(v5 + 364);
  if ((v7 & 0x400) == 0)
  {
LABEL_44:
    if ((v7 & 0x800) == 0) {
      goto LABEL_45;
    }
    goto LABEL_114;
  }
LABEL_113:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2B, *(unsigned __int8 *)(v5 + 277), (uint64_t)a2, a4);
  int v7 = *(_DWORD *)(v5 + 364);
  if ((v7 & 0x800) == 0)
  {
LABEL_45:
    if ((v7 & 0x1000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_46;
  }
LABEL_114:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2C, (uint64_t)a2, *(double *)(v5 + 264), a3);
  if ((*(_DWORD *)(v5 + 364) & 0x1000) != 0) {
LABEL_46:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2D, (uint64_t)a2, *(double *)(v5 + 280), a3);
LABEL_47:
  if (*(int *)(v5 + 296) >= 1)
  {
    uint64_t v8 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2E, *(void *)(*(void *)(v5 + 288) + 8 * v8++), a2, a4);
    while (v8 < *(int *)(v5 + 296));
  }
  int v9 = *(_DWORD *)(v5 + 364);
  if ((v9 & 0x4000) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x2F, *(unsigned int *)(v5 + 312), (uint64_t)a2, a4);
    int v9 = *(_DWORD *)(v5 + 364);
    if ((v9 & 0x8000) == 0)
    {
LABEL_52:
      if ((v9 & 0x10000) == 0) {
        goto LABEL_53;
      }
      goto LABEL_120;
    }
  }
  else if ((v9 & 0x8000) == 0)
  {
    goto LABEL_52;
  }
  uint64_t v15 = *(void *)(v5 + 320);
  if (!v15)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v15 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::default_instance_ + 320);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x30, v15, a2, a4);
  int v9 = *(_DWORD *)(v5 + 364);
  if ((v9 & 0x10000) == 0)
  {
LABEL_53:
    if ((v9 & 0x20000) == 0) {
      goto LABEL_54;
    }
    goto LABEL_121;
  }
LABEL_120:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x31, *(unsigned int *)(v5 + 316), (uint64_t)a2, a4);
  int v9 = *(_DWORD *)(v5 + 364);
  if ((v9 & 0x20000) == 0)
  {
LABEL_54:
    if ((v9 & 0x40000) == 0) {
      goto LABEL_55;
    }
    goto LABEL_122;
  }
LABEL_121:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x32, (uint64_t)a2, *(double *)(v5 + 328), a3);
  int v9 = *(_DWORD *)(v5 + 364);
  if ((v9 & 0x40000) == 0)
  {
LABEL_55:
    if ((v9 & 0x80000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_123;
  }
LABEL_122:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x33, (uint64_t)a2, *(double *)(v5 + 336), a3);
  int v9 = *(_DWORD *)(v5 + 364);
  if ((v9 & 0x80000) == 0)
  {
LABEL_56:
    if ((v9 & 0x100000) == 0) {
      goto LABEL_57;
    }
    goto LABEL_124;
  }
LABEL_123:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x34, *(unsigned int *)(v5 + 344), (uint64_t)a2, a4);
  int v9 = *(_DWORD *)(v5 + 364);
  if ((v9 & 0x100000) == 0)
  {
LABEL_57:
    if ((v9 & 0x200000) == 0) {
      goto LABEL_58;
    }
    goto LABEL_125;
  }
LABEL_124:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x35, *(unsigned __int8 *)(v5 + 278), (uint64_t)a2, a4);
  int v9 = *(_DWORD *)(v5 + 364);
  if ((v9 & 0x200000) == 0)
  {
LABEL_58:
    if ((v9 & 0x400000) == 0) {
      goto LABEL_59;
    }
LABEL_126:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x37, *(unsigned int *)(v5 + 352), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 364) & 0x800000) == 0) {
      return this;
    }
    goto LABEL_127;
  }
LABEL_125:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x36, *(unsigned int *)(v5 + 348), (uint64_t)a2, a4);
  int v9 = *(_DWORD *)(v5 + 364);
  if ((v9 & 0x400000) != 0) {
    goto LABEL_126;
  }
LABEL_59:
  if ((v9 & 0x800000) == 0) {
    return this;
  }
LABEL_127:
  uint64_t v16 = *(unsigned __int8 *)(v5 + 279);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x38, v16, (uint64_t)a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::ByteSize(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 360);
  if ((_BYTE)v2)
  {
    int v3 = (v2 << 31 >> 31) & 9;
    if ((v2 & 2) != 0) {
      v3 += 9;
    }
    if ((v2 & 4) != 0) {
      v3 += 9;
    }
    if ((v2 & 8) != 0) {
      v3 += 9;
    }
    if ((v2 & 0x10) != 0) {
      v3 += 9;
    }
    if ((v2 & 0x20) != 0) {
      v3 += 5;
    }
    if ((v2 & 0x40) != 0) {
      v3 += 5;
    }
    if ((v2 & 0x80) != 0) {
      int v4 = v3 + 5;
    }
    else {
      int v4 = v3;
    }
  }
  else
  {
    int v4 = 0;
  }
  if ((v2 & 0xFF00) != 0)
  {
    if ((v2 & 0x100) != 0) {
      int v5 = v4 + 2;
    }
    else {
      int v5 = v4;
    }
    if ((v2 & 0x200) != 0)
    {
      int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(this + 60);
      if ((v6 & 0x80000000) != 0)
      {
        this = 10;
      }
      else if (v6 >= 0x80)
      {
        this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
        int v2 = *(_DWORD *)(v1 + 360);
      }
      else
      {
        this = 1;
      }
      v5 += this + 1;
    }
    if ((v2 & 0x400) != 0)
    {
      uint64_t v7 = *(void *)(v1 + 64);
      if (!v7)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
        uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::default_instance_ + 64);
      }
      int v8 = *(unsigned __int8 *)(v7 + 28);
      int v9 = (v8 << 31 >> 31) & 9;
      if ((v8 & 2) != 0) {
        v9 += 9;
      }
      if (*(unsigned char *)(v7 + 28)) {
        int v10 = v9;
      }
      else {
        int v10 = 0;
      }
      *(_DWORD *)(v7 + 24) = v10;
      v5 += v10 + 2;
      int v2 = *(_DWORD *)(v1 + 360);
    }
    if ((v2 & 0x800) != 0) {
      v5 += 9;
    }
    if ((v2 & 0x1000) != 0)
    {
      uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 80);
      if ((v11 & 0x80000000) != 0)
      {
        this = 10;
      }
      else if (v11 >= 0x80)
      {
        this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11);
        int v2 = *(_DWORD *)(v1 + 360);
      }
      else
      {
        this = 1;
      }
      v5 += this + 1;
    }
    if ((v2 & 0x2000) != 0)
    {
      uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 84);
      if ((v12 & 0x80000000) != 0)
      {
        this = 10;
      }
      else if (v12 >= 0x80)
      {
        this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12);
        int v2 = *(_DWORD *)(v1 + 360);
      }
      else
      {
        this = 1;
      }
      v5 += this + 1;
    }
    if ((v2 & 0x4000) != 0) {
      int v4 = v5 + 2;
    }
    else {
      int v4 = v5;
    }
    if ((v2 & 0x8000) != 0)
    {
      uint64_t v13 = *(void *)(v1 + 88);
      if (!v13)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
        uint64_t v13 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::default_instance_ + 88);
      }
      int v14 = *(unsigned __int8 *)(v13 + 28);
      int v15 = (v14 << 31 >> 31) & 9;
      if ((v14 & 2) != 0) {
        v15 += 9;
      }
      if (*(unsigned char *)(v13 + 28)) {
        int v16 = v15;
      }
      else {
        int v16 = 0;
      }
      *(_DWORD *)(v13 + 24) = v16;
      v4 += v16 + 3;
      int v2 = *(_DWORD *)(v1 + 360);
    }
  }
  if ((v2 & 0xFF0000) != 0)
  {
    if ((v2 & 0x10000) != 0)
    {
      uint64_t v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 96);
      if ((v17 & 0x80000000) != 0)
      {
        this = 10;
      }
      else if (v17 >= 0x80)
      {
        this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17);
        int v2 = *(_DWORD *)(v1 + 360);
      }
      else
      {
        this = 1;
      }
      v4 += this + 2;
    }
    if ((v2 & 0x20000) != 0) {
      int v18 = v4 + 6;
    }
    else {
      int v18 = v4;
    }
    if ((v2 & 0x40000) != 0)
    {
      uint64_t v19 = *(void *)(v1 + 104);
      if (!v19)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
        uint64_t v19 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::default_instance_ + 104);
      }
      int v20 = *(unsigned __int8 *)(v19 + 28);
      int v21 = (v20 << 31 >> 31) & 9;
      if ((v20 & 2) != 0) {
        v21 += 9;
      }
      if (*(unsigned char *)(v19 + 28)) {
        int v22 = v21;
      }
      else {
        int v22 = 0;
      }
      *(_DWORD *)(v19 + 24) = v22;
      v18 += v22 + 3;
      int v2 = *(_DWORD *)(v1 + 360);
    }
    int v23 = v18 + 10;
    if ((v2 & 0x80000) == 0) {
      int v23 = v18;
    }
    if ((v2 & 0x100000) != 0) {
      int v24 = v23 + 10;
    }
    else {
      int v24 = v23;
    }
    if ((v2 & 0x200000) != 0)
    {
      int v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 116);
      if ((v25 & 0x80000000) != 0)
      {
        this = 10;
      }
      else if (v25 >= 0x80)
      {
        this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25);
        int v2 = *(_DWORD *)(v1 + 360);
      }
      else
      {
        this = 1;
      }
      v24 += this + 2;
    }
    if ((v2 & 0x400000) != 0) {
      int v4 = v24 + 3;
    }
    else {
      int v4 = v24;
    }
    if ((v2 & 0x800000) != 0)
    {
      unint64_t v26 = *(CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData **)(v1 + 136);
      if (!v26)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(0);
        unint64_t v26 = *(CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData **)(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::default_instance_
                                                                             + 136);
      }
      this = CoreNavigation::CLP::LogEntry::PrivateData::MapMatcherData::ByteSize(v26);
      v4 += this + 3;
      int v2 = *(_DWORD *)(v1 + 360);
    }
  }
  if (HIBYTE(v2))
  {
    int v27 = v4 + 10;
    if ((v2 & 0x1000000) == 0) {
      int v27 = v4;
    }
    if ((v2 & 0x2000000) != 0) {
      v27 += 10;
    }
    if ((v2 & 0x4000000) != 0) {
      v27 += 10;
    }
    if ((v2 & 0x8000000) != 0) {
      v27 += 10;
    }
    if ((v2 & 0x10000000) != 0) {
      v27 += 10;
    }
    if ((v2 & 0x20000000) != 0) {
      v27 += 10;
    }
    if ((v2 & 0x40000000) != 0) {
      v27 += 3;
    }
    if (v2 >= 0) {
      int v4 = v27;
    }
    else {
      int v4 = v27 + 10;
    }
  }
  int v28 = *(_DWORD *)(v1 + 364);
  if ((_BYTE)v28)
  {
    int v29 = v4 + 10;
    if ((v28 & 1) == 0) {
      int v29 = v4;
    }
    if ((v28 & 2) != 0) {
      int v30 = v29 + 3;
    }
    else {
      int v30 = v29;
    }
    if ((v28 & 4) != 0)
    {
      uint64_t v31 = *(void *)(v1 + 208);
      if (!v31)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
        uint64_t v31 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::default_instance_ + 208);
      }
      int v32 = *(unsigned __int8 *)(v31 + 28);
      int v33 = (v32 << 31 >> 31) & 9;
      if ((v32 & 2) != 0) {
        v33 += 9;
      }
      if (*(unsigned char *)(v31 + 28)) {
        int v34 = v33;
      }
      else {
        int v34 = 0;
      }
      *(_DWORD *)(v31 + 24) = v34;
      v30 += v34 + 3;
      int v28 = *(_DWORD *)(v1 + 364);
    }
    if ((v28 & 8) != 0) {
      v30 += 10;
    }
    if ((v28 & 0x10) != 0)
    {
      int v35 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 272);
      if ((v35 & 0x80000000) != 0)
      {
        int v36 = 10;
      }
      else if (v35 >= 0x80)
      {
        int v36 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v35);
        int v28 = *(_DWORD *)(v1 + 364);
      }
      else
      {
        int v36 = 1;
      }
      v30 += v36 + 2;
    }
    int v37 = v30 + 10;
    if ((v28 & 0x20) == 0) {
      int v37 = v30;
    }
    if ((v28 & 0x40) != 0) {
      v37 += 10;
    }
    if ((v28 & 0x80) != 0) {
      int v4 = v37 + 10;
    }
    else {
      int v4 = v37;
    }
  }
  if ((v28 & 0xFF00) != 0)
  {
    int v38 = v4 + 10;
    if ((v28 & 0x100) == 0) {
      int v38 = v4;
    }
    if ((v28 & 0x200) != 0) {
      v38 += 10;
    }
    if ((v28 & 0x400) != 0) {
      v38 += 3;
    }
    if ((v28 & 0x800) != 0) {
      v38 += 10;
    }
    if ((v28 & 0x1000) != 0) {
      int v4 = v38 + 10;
    }
    else {
      int v4 = v38;
    }
    if ((v28 & 0x4000) != 0)
    {
      unint64_t v39 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 312);
      if ((v39 & 0x80000000) != 0)
      {
        int v40 = 10;
      }
      else if (v39 >= 0x80)
      {
        int v40 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v39);
        int v28 = *(_DWORD *)(v1 + 364);
      }
      else
      {
        int v40 = 1;
      }
      v4 += v40 + 2;
    }
    if ((v28 & 0x8000) != 0)
    {
      unint64_t v41 = *(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo **)(v1 + 320);
      if (!v41)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(0);
        unint64_t v41 = *(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo **)(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::default_instance_
                                                                                                 + 320);
      }
      char v42 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate_AltitudeInfo::ByteSize(v41);
      int v43 = (int)v42;
      if (v42 >= 0x80) {
        int v44 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v42);
      }
      else {
        int v44 = 1;
      }
      v4 += v43 + v44 + 2;
      int v28 = *(_DWORD *)(v1 + 364);
    }
  }
  if ((v28 & 0xFF0000) != 0)
  {
    if ((v28 & 0x10000) != 0)
    {
      uint64_t v45 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 316);
      if ((v45 & 0x80000000) != 0)
      {
        int v46 = 12;
      }
      else if (v45 >= 0x80)
      {
        int v46 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v45) + 2;
        int v28 = *(_DWORD *)(v1 + 364);
      }
      else
      {
        int v46 = 3;
      }
      v4 += v46;
    }
    int v47 = v4 + 10;
    if ((v28 & 0x20000) == 0) {
      int v47 = v4;
    }
    if ((v28 & 0x40000) != 0) {
      int v48 = v47 + 10;
    }
    else {
      int v48 = v47;
    }
    if ((v28 & 0x80000) != 0)
    {
      unint64_t v49 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 344);
      if ((v49 & 0x80000000) != 0)
      {
        int v50 = 12;
      }
      else if (v49 >= 0x80)
      {
        int v50 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v49) + 2;
        int v28 = *(_DWORD *)(v1 + 364);
      }
      else
      {
        int v50 = 3;
      }
      v48 += v50;
    }
    if ((v28 & 0x100000) != 0) {
      v48 += 3;
    }
    if ((v28 & 0x200000) != 0)
    {
      unint64_t v51 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 348);
      if ((v51 & 0x80000000) != 0)
      {
        int v52 = 12;
      }
      else if (v51 >= 0x80)
      {
        int v52 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v51) + 2;
        int v28 = *(_DWORD *)(v1 + 364);
      }
      else
      {
        int v52 = 3;
      }
      v48 += v52;
    }
    if ((v28 & 0x400000) != 0)
    {
      uint64_t v53 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 352);
      if ((v53 & 0x80000000) != 0)
      {
        int v54 = 12;
      }
      else if (v53 >= 0x80)
      {
        int v54 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v53) + 2;
        int v28 = *(_DWORD *)(v1 + 364);
      }
      else
      {
        int v54 = 3;
      }
      v48 += v54;
    }
    if ((v28 & 0x800000) != 0) {
      int v4 = v48 + 3;
    }
    else {
      int v4 = v48;
    }
  }
  int v55 = *(_DWORD *)(v1 + 296);
  uint64_t v56 = (v4 + 2 * v55);
  if (v55 >= 1)
  {
    uint64_t v57 = 0;
    do
    {
      char v58 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo::ByteSize(*(CoreNavigation::CLP::LogEntry::PrivateData::ClientSatelliteInfo **)(*(void *)(v1 + 288) + 8 * v57));
      int v59 = (int)v58;
      if (v58 >= 0x80) {
        int v60 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v58);
      }
      else {
        int v60 = 1;
      }
      uint64_t v56 = (v59 + v56 + v60);
      ++v57;
    }
    while (v57 < *(int *)(v1 + 296));
  }
  *(_DWORD *)(v1 + 356) = v56;
  return v56;
}

void CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate *this, const CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::Swap(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate *this, CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate *a2)
{
  if (a2 != this)
  {
    uint64_t v4 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v4;
    uint64_t v5 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v5;
    uint64_t v6 = *((void *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v6;
    uint64_t v7 = *((void *)this + 4);
    *((void *)this + 4) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v7;
    uint64_t v8 = *((void *)this + 5);
    *((void *)this + 5) = *((void *)a2 + 5);
    *((void *)a2 + 5) = v8;
    LODWORD(v8) = *((_DWORD *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v8;
    LODWORD(v8) = *((_DWORD *)this + 13);
    *((_DWORD *)this + 13) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v8;
    LODWORD(v8) = *((_DWORD *)this + 14);
    *((_DWORD *)this + 14) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v8;
    char v9 = *((unsigned char *)this + 112);
    *((unsigned char *)this + 112) = *((unsigned char *)a2 + 112);
    *((unsigned char *)a2 + 112) = v9;
    int v10 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 15) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v10;
    uint64_t v11 = *((void *)this + 8);
    *((void *)this + 8) = *((void *)a2 + 8);
    *((void *)a2 + 8) = v11;
    uint64_t v12 = *((void *)this + 9);
    *((void *)this + 9) = *((void *)a2 + 9);
    *((void *)a2 + 9) = v12;
    LODWORD(v11) = *((_DWORD *)this + 20);
    *((_DWORD *)this + 20) = *((_DWORD *)a2 + 20);
    *((_DWORD *)a2 + 20) = v11;
    LODWORD(v11) = *((_DWORD *)this + 21);
    *((_DWORD *)this + 21) = *((_DWORD *)a2 + 21);
    *((_DWORD *)a2 + 21) = v11;
    LOBYTE(v11) = *((unsigned char *)this + 113);
    *((unsigned char *)this + 113) = *((unsigned char *)a2 + 113);
    *((unsigned char *)a2 + 113) = v11;
    uint64_t v13 = *((void *)this + 11);
    *((void *)this + 11) = *((void *)a2 + 11);
    *((void *)a2 + 11) = v13;
    LODWORD(v13) = *((_DWORD *)this + 24);
    *((_DWORD *)this + 24) = *((_DWORD *)a2 + 24);
    *((_DWORD *)a2 + 24) = v13;
    LODWORD(v12) = *((_DWORD *)this + 25);
    *((_DWORD *)this + 25) = *((_DWORD *)a2 + 25);
    *((_DWORD *)a2 + 25) = v12;
    uint64_t v14 = *((void *)this + 13);
    *((void *)this + 13) = *((void *)a2 + 13);
    *((void *)a2 + 13) = v14;
    uint64_t v15 = *((void *)this + 15);
    *((void *)this + 15) = *((void *)a2 + 15);
    *((void *)a2 + 15) = v15;
    uint64_t v16 = *((void *)this + 16);
    *((void *)this + 16) = *((void *)a2 + 16);
    *((void *)a2 + 16) = v16;
    LODWORD(v14) = *((_DWORD *)this + 29);
    *((_DWORD *)this + 29) = *((_DWORD *)a2 + 29);
    *((_DWORD *)a2 + 29) = v14;
    LOBYTE(v14) = *((unsigned char *)this + 114);
    *((unsigned char *)this + 114) = *((unsigned char *)a2 + 114);
    *((unsigned char *)a2 + 114) = v14;
    uint64_t v17 = *((void *)this + 17);
    *((void *)this + 17) = *((void *)a2 + 17);
    *((void *)a2 + 17) = v17;
    uint64_t v18 = *((void *)this + 18);
    *((void *)this + 18) = *((void *)a2 + 18);
    *((void *)a2 + 18) = v18;
    uint64_t v19 = *((void *)this + 19);
    *((void *)this + 19) = *((void *)a2 + 19);
    *((void *)a2 + 19) = v19;
    uint64_t v20 = *((void *)this + 20);
    *((void *)this + 20) = *((void *)a2 + 20);
    *((void *)a2 + 20) = v20;
    uint64_t v21 = *((void *)this + 21);
    *((void *)this + 21) = *((void *)a2 + 21);
    *((void *)a2 + 21) = v21;
    uint64_t v22 = *((void *)this + 22);
    *((void *)this + 22) = *((void *)a2 + 22);
    *((void *)a2 + 22) = v22;
    uint64_t v23 = *((void *)this + 23);
    *((void *)this + 23) = *((void *)a2 + 23);
    *((void *)a2 + 23) = v23;
    LOBYTE(v17) = *((unsigned char *)this + 115);
    *((unsigned char *)this + 115) = *((unsigned char *)a2 + 115);
    *((unsigned char *)a2 + 115) = v17;
    uint64_t v24 = *((void *)this + 24);
    *((void *)this + 24) = *((void *)a2 + 24);
    *((void *)a2 + 24) = v24;
    uint64_t v25 = *((void *)this + 25);
    *((void *)this + 25) = *((void *)a2 + 25);
    *((void *)a2 + 25) = v25;
    LOBYTE(v17) = *((unsigned char *)this + 276);
    *((unsigned char *)this + 276) = *((unsigned char *)a2 + 276);
    *((unsigned char *)a2 + 276) = v17;
    uint64_t v26 = *((void *)this + 26);
    *((void *)this + 26) = *((void *)a2 + 26);
    *((void *)a2 + 26) = v26;
    uint64_t v27 = *((void *)this + 27);
    *((void *)this + 27) = *((void *)a2 + 27);
    *((void *)a2 + 27) = v27;
    LODWORD(v26) = *((_DWORD *)this + 68);
    *((_DWORD *)this + 68) = *((_DWORD *)a2 + 68);
    *((_DWORD *)a2 + 68) = v26;
    uint64_t v28 = *((void *)this + 28);
    *((void *)this + 28) = *((void *)a2 + 28);
    *((void *)a2 + 28) = v28;
    uint64_t v29 = *((void *)this + 29);
    *((void *)this + 29) = *((void *)a2 + 29);
    *((void *)a2 + 29) = v29;
    uint64_t v30 = *((void *)this + 30);
    *((void *)this + 30) = *((void *)a2 + 30);
    *((void *)a2 + 30) = v30;
    uint64_t v31 = *((void *)this + 31);
    *((void *)this + 31) = *((void *)a2 + 31);
    *((void *)a2 + 31) = v31;
    uint64_t v32 = *((void *)this + 32);
    *((void *)this + 32) = *((void *)a2 + 32);
    *((void *)a2 + 32) = v32;
    LOBYTE(v26) = *((unsigned char *)this + 277);
    *((unsigned char *)this + 277) = *((unsigned char *)a2 + 277);
    *((unsigned char *)a2 + 277) = v26;
    uint64_t v33 = *((void *)this + 33);
    *((void *)this + 33) = *((void *)a2 + 33);
    *((void *)a2 + 33) = v33;
    uint64_t v34 = *((void *)this + 35);
    *((void *)this + 35) = *((void *)a2 + 35);
    *((void *)a2 + 35) = v34;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    int v35 = *((_DWORD *)this + 78);
    *((_DWORD *)this + 78) = *((_DWORD *)a2 + 78);
    *((_DWORD *)a2 + 78) = v35;
    uint64_t v36 = *((void *)this + 40);
    *((void *)this + 40) = *((void *)a2 + 40);
    *((void *)a2 + 40) = v36;
    LODWORD(v36) = *((_DWORD *)this + 79);
    *((_DWORD *)this + 79) = *((_DWORD *)a2 + 79);
    *((_DWORD *)a2 + 79) = v36;
    uint64_t v37 = *((void *)this + 41);
    *((void *)this + 41) = *((void *)a2 + 41);
    *((void *)a2 + 41) = v37;
    double result = *((double *)this + 42);
    *((void *)this + 42) = *((void *)a2 + 42);
    *((double *)a2 + 42) = result;
    LODWORD(v36) = *((_DWORD *)this + 86);
    *((_DWORD *)this + 86) = *((_DWORD *)a2 + 86);
    *((_DWORD *)a2 + 86) = v36;
    LOBYTE(v36) = *((unsigned char *)this + 278);
    *((unsigned char *)this + 278) = *((unsigned char *)a2 + 278);
    *((unsigned char *)a2 + 278) = v36;
    LODWORD(v36) = *((_DWORD *)this + 87);
    *((_DWORD *)this + 87) = *((_DWORD *)a2 + 87);
    *((_DWORD *)a2 + 87) = v36;
    LODWORD(v36) = *((_DWORD *)this + 88);
    *((_DWORD *)this + 88) = *((_DWORD *)a2 + 88);
    *((_DWORD *)a2 + 88) = v36;
    LOBYTE(v36) = *((unsigned char *)this + 279);
    *((unsigned char *)this + 279) = *((unsigned char *)a2 + 279);
    *((unsigned char *)a2 + 279) = v36;
    LODWORD(v36) = *((_DWORD *)this + 90);
    *((_DWORD *)this + 90) = *((_DWORD *)a2 + 90);
    *((_DWORD *)a2 + 90) = v36;
    LODWORD(v36) = *((_DWORD *)this + 91);
    *((_DWORD *)this + 91) = *((_DWORD *)a2 + 91);
    *((_DWORD *)a2 + 91) = v36;
    LODWORD(v36) = *((_DWORD *)this + 89);
    *((_DWORD *)this + 89) = *((_DWORD *)a2 + 89);
    *((_DWORD *)a2 + 89) = v36;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.DaemonLocationPrivate");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus::SharedCtor(uint64_t this)
{
  *(_DWORD *)(this + 8) = 0;
  *(unsigned char *)(this + 12) = 0;
  *(void *)(this + 16) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus *CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus::TechnologyStatus(CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus *this, const CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus *a2)
{
  *(void *)this = &unk_1EDD0C8C0;
  *((_DWORD *)this + 2) = 0;
  *((unsigned char *)this + 12) = 0;
  *((void *)this + 2) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus::MergeFrom(this, a2);
  return this;
}

void sub_18DF6DE14(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus *this, const CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 20);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 20))
    {
      unsigned int v5 = *((_DWORD *)a2 + 2);
      if (v5 >= 0xE) {
        __assert_rtn("set_location_type", "CoreNavigationCLPPrivateDataShared.pb.h", 16628, "::CoreNavigation::CLP::LogEntry::PrivateData::LocationType_IsValid(value)");
      }
      *((_DWORD *)this + 5) |= 1u;
      *((_DWORD *)this + 2) = v5;
      int v4 = *((_DWORD *)a2 + 5);
    }
    if ((v4 & 2) != 0)
    {
      char v6 = *((unsigned char *)a2 + 12);
      *((_DWORD *)this + 5) |= 2u;
      *((unsigned char *)this + 12) = v6;
    }
  }
}

void sub_18DF6DEFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus::~TechnologyStatus(CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus *this)
{
  *(void *)this = &unk_1EDD0C8C0;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus::~TechnologyStatus(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 16) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus::New(CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 20))
  {
    *(_DWORD *)(this + 8) = 0;
    *(unsigned char *)(this + 12) = 0;
  }
  *(_DWORD *)(this + 20) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (1)
  {
    while (1)
    {
      int v4 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v4;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v4 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v6 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_15;
      }
      unsigned int v15 = 0;
      char v9 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v9 >= *((void *)a2 + 2) || *v9 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v15);
        if (!result) {
          return result;
        }
        unsigned int v10 = v15;
      }
      else
      {
        unsigned int v10 = *v9;
        *((void *)a2 + 1) = v9 + 1;
      }
      if (v10 <= 0xD)
      {
        *((_DWORD *)this + 5) |= 1u;
        *((_DWORD *)this + 2) = v10;
      }
      uint64_t v11 = (unsigned char *)*((void *)a2 + 1);
      unint64_t v7 = *((void *)a2 + 2);
      if ((unint64_t)v11 < v7 && *v11 == 16)
      {
        uint64_t v8 = v11 + 1;
        *((void *)a2 + 1) = v8;
LABEL_25:
        unsigned int v16 = 0;
        if ((unint64_t)v8 >= v7 || *v8 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v16);
          if (!result) {
            return result;
          }
          unsigned int v12 = v16;
          uint64_t v13 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v7 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v12 = *v8;
          uint64_t v13 = (unsigned __int8 *)(v8 + 1);
          *((void *)a2 + 1) = v13;
        }
        *((unsigned char *)this + 12) = v12 != 0;
        *((_DWORD *)this + 5) |= 2u;
        if (v13 == (unsigned __int8 *)v7 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v6 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        uint64_t v8 = (char *)*((void *)a2 + 1);
        unint64_t v7 = *((void *)a2 + 2);
        goto LABEL_25;
      }
    }
    else
    {
      int v6 = TagFallback & 7;
    }
LABEL_15:
    if (v6 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 20);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
  {
    uint64_t v7 = *(unsigned __int8 *)(v5 + 12);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, (uint64_t)a2, a4);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 20);
  if ((_BYTE)v2)
  {
    if (*((unsigned char *)this + 20))
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
      if ((v5 & 0x80000000) != 0)
      {
        unsigned int v3 = 11;
      }
      else if (v5 >= 0x80)
      {
        unsigned int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
        int v2 = *((_DWORD *)this + 5);
      }
      else
      {
        unsigned int v3 = 2;
      }
    }
    else
    {
      unsigned int v3 = 0;
    }
    if ((v2 & 2) != 0) {
      uint64_t result = v3 + 2;
    }
    else {
      uint64_t result = v3;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  *((_DWORD *)this + 4) = result;
  return result;
}

void CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus *this, const CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus *a2)
{
  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus *)this)
  {
    int v2 = *(_DWORD *)(this + 8);
    *(_DWORD *)(this + 8) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    LOBYTE(v2) = *(unsigned char *)(this + 12);
    *(unsigned char *)(this + 12) = *((unsigned char *)a2 + 12);
    *((unsigned char *)a2 + 12) = v2;
    int v3 = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v3;
    int v4 = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v4;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.TechnologyStatus");
}

double CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed *this)
{
  *((void *)this + 5) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed *CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed::VehicleSpeed(CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed *this, const CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed *a2)
{
  *(void *)this = &unk_1EDD0BA38;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((void *)this + 5) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed::MergeFrom(this, a2);
  return this;
}

void sub_18DF6E4EC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed *this, const CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 44);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 44))
    {
      double result = *((double *)a2 + 1);
      *((_DWORD *)this + 11) |= 1u;
      *((double *)this + 1) = result;
      int v5 = *((_DWORD *)a2 + 11);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_12;
      }
    }
    else if ((*((unsigned char *)a2 + 44) & 2) == 0)
    {
      goto LABEL_6;
    }
    double result = *((double *)a2 + 2);
    *((_DWORD *)this + 11) |= 2u;
    *((double *)this + 2) = result;
    int v5 = *((_DWORD *)a2 + 11);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        return result;
      }
      goto LABEL_8;
    }
LABEL_12:
    double result = *((double *)a2 + 3);
    *((_DWORD *)this + 11) |= 4u;
    *((double *)this + 3) = result;
    if ((*((_DWORD *)a2 + 11) & 8) == 0) {
      return result;
    }
LABEL_8:
    double result = *((double *)a2 + 4);
    *((_DWORD *)this + 11) |= 8u;
    *((double *)this + 4) = result;
  }
  return result;
}

void sub_18DF6E5F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed::~VehicleSpeed(CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed *this)
{
  *(void *)this = &unk_1EDD0BA38;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed::~VehicleSpeed(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 40) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed::New(CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 44))
  {
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 8) = 0u;
  }
  *(_DWORD *)(this + 44) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (2)
  {
    int v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_29;
        }
        unint64_t v11 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0) {
          return 0;
        }
        *((void *)this + 1) = v11;
        *((_DWORD *)this + 11) |= 1u;
        uint64_t v7 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v7 >= *((void *)a2 + 2) || *v7 != 17) {
          continue;
        }
        *((void *)a2 + 1) = v7 + 1;
        goto LABEL_14;
      case 2u:
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_29;
        }
LABEL_14:
        unint64_t v11 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0) {
          return 0;
        }
        *((void *)this + 2) = v11;
        *((_DWORD *)this + 11) |= 2u;
        uint64_t v8 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 != 25) {
          continue;
        }
        *((void *)a2 + 1) = v8 + 1;
LABEL_19:
        unint64_t v11 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0) {
          return 0;
        }
        *((void *)this + 3) = v11;
        *((_DWORD *)this + 11) |= 4u;
        char v9 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v9 >= *((void *)a2 + 2) || *v9 != 33) {
          continue;
        }
        *((void *)a2 + 1) = v9 + 1;
LABEL_24:
        unint64_t v11 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0) {
          return 0;
        }
        *((void *)this + 4) = v11;
        *((_DWORD *)this + 11) |= 8u;
        if (*((void *)a2 + 1) != *((void *)a2 + 2)
          || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
        {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        break;
      case 3u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_19;
        }
        goto LABEL_29;
      case 4u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_24;
        }
        goto LABEL_29;
      default:
        int v6 = TagFallback & 7;
LABEL_29:
        if (v6 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
    return result;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = this;
  int v5 = *(_DWORD *)(this + 44);
  if (v5)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
    int v5 = *(_DWORD *)(v4 + 44);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v4 + 24), a3);
      if ((*(_DWORD *)(v4 + 44) & 8) == 0) {
        return this;
      }
      goto LABEL_9;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v4 + 16), a3);
  int v5 = *(_DWORD *)(v4 + 44);
  if ((v5 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v5 & 8) == 0) {
    return this;
  }
LABEL_9:
  double v6 = *(double *)(v4 + 32);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, v6, a3);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed *this)
{
  uint64_t v1 = *((unsigned __int8 *)this + 44);
  if (*((unsigned char *)this + 44))
  {
    unsigned int v2 = ((int)(v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0) {
      v2 += 9;
    }
    if ((v1 & 4) != 0) {
      v2 += 9;
    }
    if ((v1 & 8) != 0) {
      uint64_t v1 = v2 + 9;
    }
    else {
      uint64_t v1 = v2;
    }
  }
  *((_DWORD *)this + 10) = v1;
  return v1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed *this, const CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed::Swap(CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed *this, CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    uint64_t v3 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    uint64_t v4 = *((void *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v4;
    double result = *((double *)this + 4);
    *((void *)this + 4) = *((void *)a2 + 4);
    *((double *)a2 + 4) = result;
    int v6 = *((_DWORD *)this + 11);
    *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v6;
    int v7 = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v7;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.VehicleSpeed");
}

void *CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading::SharedCtor(void *this)
{
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading *CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading::VehicleHeading(CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading *this, const CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading *a2)
{
  *(void *)this = &unk_1EDD0C1B8;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading::MergeFrom(this, a2);
  return this;
}

void sub_18DF6EC84(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading *this, const CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 28);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 28))
    {
      double result = *((double *)a2 + 1);
      *((_DWORD *)this + 7) |= 1u;
      *((double *)this + 1) = result;
      int v5 = *((_DWORD *)a2 + 7);
    }
    if ((v5 & 2) != 0)
    {
      double result = *((double *)a2 + 2);
      *((_DWORD *)this + 7) |= 2u;
      *((double *)this + 2) = result;
    }
  }
  return result;
}

void sub_18DF6ED44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading::~VehicleHeading(CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading *this)
{
  *(void *)this = &unk_1EDD0C1B8;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading::~VehicleHeading(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 24) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading::New(CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 28))
  {
    *(void *)(this + 8) = 0;
    *(void *)(this + 16) = 0;
  }
  *(_DWORD *)(this + 28) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v4 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v4;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((void *)a2 + 1) = v4 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_21;
        }
        unint64_t v9 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v9) & 1) == 0) {
          return 0;
        }
        *((void *)this + 1) = v9;
        *((_DWORD *)this + 7) |= 1u;
        int v7 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v7 < *((void *)a2 + 2) && *v7 == 17)
        {
          *((void *)a2 + 1) = v7 + 1;
          goto LABEL_15;
        }
      }
      if (TagFallback >> 3 != 2)
      {
        int v6 = TagFallback & 7;
        goto LABEL_21;
      }
      int v6 = TagFallback & 7;
      if (v6 == 1) {
        break;
      }
LABEL_21:
      if (v6 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
    }
      }
LABEL_15:
    unint64_t v9 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v9) & 1) == 0) {
      return 0;
    }
    *((void *)this + 2) = v9;
    *((_DWORD *)this + 7) |= 2u;
  }
  while (*((void *)a2 + 1) != *((void *)a2 + 2)
       || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10));
  *((_DWORD *)a2 + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)a2 + 36) = 1;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = this;
  int v5 = *(_DWORD *)(this + 28);
  if (v5)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
    int v5 = *(_DWORD *)(v4 + 28);
  }
  if ((v5 & 2) != 0)
  {
    double v6 = *(double *)(v4 + 16);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, v6, a3);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading *this)
{
  uint64_t v1 = *((unsigned __int8 *)this + 28);
  if (*((unsigned char *)this + 28))
  {
    unsigned int v2 = ((int)(v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0) {
      uint64_t v1 = v2 + 9;
    }
    else {
      uint64_t v1 = v2;
    }
  }
  *((_DWORD *)this + 6) = v1;
  return v1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading *this, const CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading::Swap(CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading *this, CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    double result = *((double *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((double *)a2 + 2) = result;
    int v4 = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v4;
    int v5 = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v5;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.VehicleHeading");
}

void *CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable::SharedCtor(void *this)
{
  uint64_t v1 = MEMORY[0x1E4FBA920];
  this[1] = 0;
  this[2] = v1;
  this[3] = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable *CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable::XtraFileAvailable(CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable *this, const CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable *a2)
{
  *(void *)this = &unk_1EDD0D040;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = MEMORY[0x1E4FBA920];
  *((void *)this + 3) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable::MergeFrom(this, a2);
  return this;
}

void sub_18DF6F284(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable *this, const CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 28);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 28))
    {
      uint64_t v5 = *((void *)a2 + 1);
      *((_DWORD *)this + 7) |= 1u;
      *((void *)this + 1) = v5;
      int v4 = *((_DWORD *)a2 + 7);
    }
    if ((v4 & 2) != 0)
    {
      double v6 = (const std::string *)*((void *)a2 + 2);
      *((_DWORD *)this + 7) |= 2u;
      int v7 = (std::string *)*((void *)this + 2);
      if (v7 == (std::string *)MEMORY[0x1E4FBA920]) {
        operator new();
      }
      std::string::operator=(v7, v6);
    }
  }
}

void sub_18DF6F380(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable::~XtraFileAvailable(CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable *this)
{
  *(void *)this = &unk_1EDD0D040;
  CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable::~XtraFileAvailable(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable *this)
{
  uint64_t v1 = *((void *)this + 2);
  if (v1 != MEMORY[0x1E4FBA920] && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    this = (CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable *)MEMORY[0x192FA6240](v1, 0x1012C40EC159624);
  }

  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 24) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable::New(CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable::Clear(uint64_t this)
{
  char v1 = *(unsigned char *)(this + 28);
  if (v1)
  {
    *(void *)(this + 8) = 0;
    if ((v1 & 2) != 0)
    {
      uint64_t v2 = *(void *)(this + 16);
      if (v2 != MEMORY[0x1E4FBA920])
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
  }
  *(_DWORD *)(this + 28) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4 = MEMORY[0x1E4FBA920];
  while (1)
  {
    while (1)
    {
      uint64_t v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v5 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 == 1) {
        break;
      }
      if (TagFallback >> 3 == 2)
      {
        int v7 = TagFallback & 7;
        if (v7 == 2)
        {
          int v8 = *((_DWORD *)this + 7);
          goto LABEL_16;
        }
      }
      else
      {
        int v7 = TagFallback & 7;
      }
LABEL_24:
      if (v7 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
    }
      }
    int v7 = TagFallback & 7;
    if (v7 != 1) {
      goto LABEL_24;
    }
    unint64_t v11 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0) {
      return 0;
    }
    *((void *)this + 1) = v11;
    int v8 = *((_DWORD *)this + 7) | 1;
    *((_DWORD *)this + 7) = v8;
    unint64_t v9 = (unsigned char *)*((void *)a2 + 1);
    if ((unint64_t)v9 < *((void *)a2 + 2) && *v9 == 18)
    {
      *((void *)a2 + 1) = v9 + 1;
LABEL_16:
      *((_DWORD *)this + 7) = v8 | 2;
      if (*((void *)this + 2) == v4) {
        operator new();
      }
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
      if (!result) {
        return result;
      }
      if (*((void *)a2 + 1) == *((void *)a2 + 2)
        && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        break;
      }
    }
  }
  *((_DWORD *)a2 + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)a2 + 36) = 1;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v3 = this;
  int v4 = *(_DWORD *)(this + 28);
  if (v4)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
    int v4 = *(_DWORD *)(v3 + 28);
  }
  if ((v4 & 2) != 0)
  {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable *this)
{
  int v2 = *((unsigned __int8 *)this + 28);
  if (*((unsigned char *)this + 28))
  {
    uint64_t v3 = (v2 << 31 >> 31) & 9;
    if ((v2 & 2) != 0)
    {
      uint64_t v4 = *((void *)this + 2);
      int v5 = *(unsigned __int8 *)(v4 + 23);
      char v6 = v5;
      uint64_t v7 = *(void *)(v4 + 8);
      if ((v5 & 0x80u) == 0) {
        unint64_t v8 = *(unsigned __int8 *)(v4 + 23);
      }
      else {
        unint64_t v8 = v7;
      }
      if (v8 >= 0x80)
      {
        int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8);
        int v5 = *(unsigned __int8 *)(v4 + 23);
        uint64_t v7 = *(void *)(v4 + 8);
        char v6 = *(unsigned char *)(v4 + 23);
      }
      else
      {
        int v9 = 1;
      }
      if (v6 < 0) {
        int v5 = v7;
      }
      uint64_t v3 = (v3 + v9 + v5 + 1);
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  *((_DWORD *)this + 6) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable *this, const CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable::Swap(CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable *this, CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable *a2)
{
  if (a2 != this)
  {
    double result = *((double *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((double *)a2 + 1) = result;
    uint64_t v3 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    LODWORD(v3) = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v3;
    LODWORD(v3) = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v3;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.XtraFileAvailable");
}

double CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed *this)
{
  double result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed *CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed::LocationDerivedSpeed(CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed *this, const CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed *a2)
{
  *(void *)this = &unk_1EDD0D838;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed::MergeFrom(this, a2);
  return this;
}

void sub_18DF6FA0C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed *this, const CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 36);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 36))
    {
      double result = *((double *)a2 + 1);
      *((_DWORD *)this + 9) |= 1u;
      *((double *)this + 1) = result;
      int v5 = *((_DWORD *)a2 + 9);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          return result;
        }
        goto LABEL_7;
      }
    }
    else if ((*((unsigned char *)a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    double result = *((double *)a2 + 2);
    *((_DWORD *)this + 9) |= 2u;
    *((double *)this + 2) = result;
    if ((*((_DWORD *)a2 + 9) & 4) == 0) {
      return result;
    }
LABEL_7:
    double result = *((double *)a2 + 3);
    *((_DWORD *)this + 9) |= 4u;
    *((double *)this + 3) = result;
  }
  return result;
}

void sub_18DF6FAF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed::~LocationDerivedSpeed(CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed *this)
{
  *(void *)this = &unk_1EDD0D838;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed::~LocationDerivedSpeed(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 32) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed::New(CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 36))
  {
    *(void *)(this + 8) = 0;
    *(void *)(this + 16) = 0;
    *(void *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 36) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v4 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v4;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((void *)a2 + 1) = v4 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v6 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_27;
        }
        unint64_t v11 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0) {
          return 0;
        }
        *((void *)this + 1) = v11;
        *((_DWORD *)this + 9) |= 1u;
        unint64_t v8 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v8 < *((void *)a2 + 2) && *v8 == 17)
        {
          *((void *)a2 + 1) = v8 + 1;
LABEL_17:
          unint64_t v11 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0) {
            return 0;
          }
          *((void *)this + 2) = v11;
          *((_DWORD *)this + 9) |= 2u;
          int v9 = (unsigned char *)*((void *)a2 + 1);
          if ((unint64_t)v9 < *((void *)a2 + 2) && *v9 == 25)
          {
            *((void *)a2 + 1) = v9 + 1;
            goto LABEL_21;
          }
        }
      }
      if (v6 == 2)
      {
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_27;
        }
        goto LABEL_17;
      }
      if (v6 != 3)
      {
        int v7 = TagFallback & 7;
        goto LABEL_27;
      }
      int v7 = TagFallback & 7;
      if (v7 == 1) {
        break;
      }
LABEL_27:
      if (v7 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
    }
      }
LABEL_21:
    unint64_t v11 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0) {
      return 0;
    }
    *((void *)this + 3) = v11;
    *((_DWORD *)this + 9) |= 4u;
  }
  while (*((void *)a2 + 1) != *((void *)a2 + 2)
       || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10));
  *((_DWORD *)a2 + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)a2 + 36) = 1;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = this;
  int v5 = *(_DWORD *)(this + 36);
  if ((v5 & 1) == 0)
  {
    if ((v5 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v4 + 16), a3);
    if ((*(_DWORD *)(v4 + 36) & 4) == 0) {
      return this;
    }
    goto LABEL_7;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
  int v5 = *(_DWORD *)(v4 + 36);
  if ((v5 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 4) == 0) {
    return this;
  }
LABEL_7:
  double v6 = *(double *)(v4 + 24);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, v6, a3);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed *this)
{
  uint64_t v1 = *((unsigned __int8 *)this + 36);
  if (*((unsigned char *)this + 36))
  {
    unsigned int v2 = ((int)(v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0) {
      v2 += 9;
    }
    if ((v1 & 4) != 0) {
      uint64_t v1 = v2 + 9;
    }
    else {
      uint64_t v1 = v2;
    }
  }
  *((_DWORD *)this + 8) = v1;
  return v1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed *this, const CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed::Swap(CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed *this, CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    uint64_t v3 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    double result = *((double *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    *((double *)a2 + 3) = result;
    int v5 = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v5;
    int v6 = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v6;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.LocationDerivedSpeed");
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::Location_SignalQualityType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 3;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::Location_MotionDetectedType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 3;
}

double CoreNavigation::CLP::LogEntry::PrivateData::Location::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::Location *this)
{
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)((char *)this + 29) = 0;
  *((void *)this + 3) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::Location *CoreNavigation::CLP::LogEntry::PrivateData::Location::Location(CoreNavigation::CLP::LogEntry::PrivateData::Location *this, const CoreNavigation::CLP::LogEntry::PrivateData::Location *a2)
{
  *(void *)this = &unk_1EDD0EF30;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *(void *)((char *)this + 29) = 0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::Location::MergeFrom(this, a2);
  return this;
}

void sub_18DF70124(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::Location::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::Location *this, const CoreNavigation::CLP::LogEntry::PrivateData::Location *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v26);
  }
  int v5 = *((_DWORD *)a2 + 25);
  if ((_BYTE)v5)
  {
    if (v5)
    {
      *((_DWORD *)this + 25) |= 1u;
      int v6 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
      if (!v6) {
        operator new();
      }
      int v7 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)a2 + 1);
      if (!v7)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
        int v7 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::Location::default_instance_
                                                                             + 8);
      }
      double result = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v6, v7);
      int v5 = *((_DWORD *)a2 + 25);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_19;
      }
    }
    else if ((v5 & 2) == 0)
    {
      goto LABEL_6;
    }
    int v8 = *((_DWORD *)a2 + 8);
    *((_DWORD *)this + 25) |= 2u;
    *((_DWORD *)this + 8) = v8;
    int v5 = *((_DWORD *)a2 + 25);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_24;
    }
LABEL_19:
    *((_DWORD *)this + 25) |= 4u;
    int v9 = (CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation *)*((void *)this + 2);
    if (!v9) {
      operator new();
    }
    unsigned int v10 = (const CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation *)*((void *)a2 + 2);
    if (!v10)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      unsigned int v10 = *(const CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation **)(CoreNavigation::CLP::LogEntry::PrivateData::Location::default_instance_
                                                                                 + 16);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::MergeFrom(v9, v10);
    int v5 = *((_DWORD *)a2 + 25);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_29;
    }
LABEL_24:
    *((_DWORD *)this + 25) |= 8u;
    unint64_t v11 = (CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate *)*((void *)this + 3);
    if (!v11) {
      operator new();
    }
    unsigned int v12 = (const CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate *)*((void *)a2 + 3);
    if (!v12)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      unsigned int v12 = *(const CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate **)(CoreNavigation::CLP::LogEntry::PrivateData::Location::default_instance_
                                                                                        + 24);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::MergeFrom(v11, v12);
    int v5 = *((_DWORD *)a2 + 25);
    if ((v5 & 0x10) == 0)
    {
LABEL_9:
      if ((v5 & 0x20) == 0) {
        goto LABEL_10;
      }
      goto LABEL_34;
    }
LABEL_29:
    *((_DWORD *)this + 25) |= 0x10u;
    uint64_t v13 = (CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus *)*((void *)this + 5);
    if (!v13) {
      operator new();
    }
    uint64_t v14 = (const CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus *)*((void *)a2 + 5);
    if (!v14)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      uint64_t v14 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus **)(CoreNavigation::CLP::LogEntry::PrivateData::Location::default_instance_
                                                                                   + 40);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus::MergeFrom(v13, v14);
    int v5 = *((_DWORD *)a2 + 25);
    if ((v5 & 0x20) == 0)
    {
LABEL_10:
      if ((v5 & 0x40) == 0) {
        goto LABEL_11;
      }
      goto LABEL_35;
    }
LABEL_34:
    char v15 = *((unsigned char *)a2 + 36);
    *((_DWORD *)this + 25) |= 0x20u;
    *((unsigned char *)this + 36) = v15;
    int v5 = *((_DWORD *)a2 + 25);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0) {
        goto LABEL_38;
      }
      goto LABEL_36;
    }
LABEL_35:
    double result = *((double *)a2 + 6);
    *((_DWORD *)this + 25) |= 0x40u;
    *((double *)this + 6) = result;
    int v5 = *((_DWORD *)a2 + 25);
    if ((v5 & 0x80) == 0) {
      goto LABEL_38;
    }
LABEL_36:
    unsigned int v16 = *((_DWORD *)a2 + 18);
    if (v16 >= 3) {
      __assert_rtn("set_signal_quality", "CoreNavigationCLPPrivateDataShared.pb.h", 17217, "::CoreNavigation::CLP::LogEntry::PrivateData::Location_SignalQualityType_IsValid(value)");
    }
    *((_DWORD *)this + 25) |= 0x80u;
    *((_DWORD *)this + 18) = v16;
    int v5 = *((_DWORD *)a2 + 25);
  }
LABEL_38:
  if ((v5 & 0xFF00) == 0) {
    return result;
  }
  if ((v5 & 0x100) != 0)
  {
    *((_DWORD *)this + 25) |= 0x100u;
    uint64_t v17 = (CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed *)*((void *)this + 7);
    if (!v17) {
      operator new();
    }
    uint64_t v18 = (const CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed *)*((void *)a2 + 7);
    if (!v18)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      uint64_t v18 = *(const CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed **)(CoreNavigation::CLP::LogEntry::PrivateData::Location::default_instance_
                                                                               + 56);
    }
    double result = CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed::MergeFrom(v17, v18);
    int v5 = *((_DWORD *)a2 + 25);
    if ((v5 & 0x200) == 0)
    {
LABEL_41:
      if ((v5 & 0x400) == 0) {
        goto LABEL_42;
      }
      goto LABEL_55;
    }
  }
  else if ((v5 & 0x200) == 0)
  {
    goto LABEL_41;
  }
  *((_DWORD *)this + 25) |= 0x200u;
  uint64_t v19 = (CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading *)*((void *)this + 8);
  if (!v19) {
    operator new();
  }
  uint64_t v20 = (const CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading *)*((void *)a2 + 8);
  if (!v20)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    uint64_t v20 = *(const CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading **)(CoreNavigation::CLP::LogEntry::PrivateData::Location::default_instance_
                                                                               + 64);
  }
  double result = CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading::MergeFrom(v19, v20);
  int v5 = *((_DWORD *)a2 + 25);
  if ((v5 & 0x400) == 0)
  {
LABEL_42:
    if ((v5 & 0x800) == 0) {
      goto LABEL_43;
    }
    goto LABEL_60;
  }
LABEL_55:
  *((_DWORD *)this + 25) |= 0x400u;
  uint64_t v21 = (CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable *)*((void *)this + 10);
  if (!v21) {
    operator new();
  }
  uint64_t v22 = (const CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable *)*((void *)a2 + 10);
  if (!v22)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    uint64_t v22 = *(const CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable **)(CoreNavigation::CLP::LogEntry::PrivateData::Location::default_instance_
                                                                                  + 80);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable::MergeFrom(v21, v22);
  int v5 = *((_DWORD *)a2 + 25);
  if ((v5 & 0x800) == 0)
  {
LABEL_43:
    if ((v5 & 0x1000) == 0) {
      return result;
    }
    goto LABEL_62;
  }
LABEL_60:
  unsigned int v23 = *((_DWORD *)a2 + 19);
  if (v23 >= 3) {
    __assert_rtn("set_motion_detected", "CoreNavigationCLPPrivateDataShared.pb.h", 17366, "::CoreNavigation::CLP::LogEntry::PrivateData::Location_MotionDetectedType_IsValid(value)");
  }
  *((_DWORD *)this + 25) |= 0x800u;
  *((_DWORD *)this + 19) = v23;
  if ((*((_DWORD *)a2 + 25) & 0x1000) != 0)
  {
LABEL_62:
    *((_DWORD *)this + 25) |= 0x1000u;
    uint64_t v24 = (CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed *)*((void *)this + 11);
    if (!v24) {
      operator new();
    }
    uint64_t v25 = (const CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed *)*((void *)a2 + 11);
    if (!v25)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      uint64_t v25 = *(const CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed **)(CoreNavigation::CLP::LogEntry::PrivateData::Location::default_instance_
                                                                                       + 88);
    }
    return CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed::MergeFrom(v24, v25);
  }
  return result;
}

void sub_18DF70780(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::Location::~Location(CoreNavigation::CLP::LogEntry::PrivateData::Location *this)
{
  *(void *)this = &unk_1EDD0EF30;
  CoreNavigation::CLP::LogEntry::PrivateData::Location::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::Location::~Location(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::PrivateData::Location::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::Location *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::Location *)CoreNavigation::CLP::LogEntry::PrivateData::Location::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 2);
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = *((void *)this + 3);
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = *((void *)this + 5);
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
    uint64_t v6 = *((void *)this + 7);
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    uint64_t v7 = *((void *)this + 8);
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
    uint64_t v8 = *((void *)this + 10);
    if (v8) {
      (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
    }
    uint64_t v9 = *((void *)this + 11);
    if (v9)
    {
      unsigned int v10 = *(void (**)(void))(*(void *)v9 + 8);
      v10();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Location::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::Location *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::Location::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Location::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 96) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::Location::New(CoreNavigation::CLP::LogEntry::PrivateData::Location *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Location::Clear(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 100);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      uint64_t v3 = *(void *)(this + 8);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
          *(void *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        int v2 = *(_DWORD *)(this + 100);
      }
    }
    *(_DWORD *)(this + 32) = 0;
    if ((v2 & 4) != 0)
    {
      this = *(void *)(this + 16);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::Clear(this);
        int v2 = *(_DWORD *)(v1 + 100);
      }
    }
    if ((v2 & 8) != 0)
    {
      this = *(void *)(v1 + 24);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::Clear(this);
        int v2 = *(_DWORD *)(v1 + 100);
      }
    }
    if ((v2 & 0x10) != 0)
    {
      uint64_t v4 = *(void *)(v1 + 40);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 20))
        {
          *(_DWORD *)(v4 + 8) = 0;
          *(unsigned char *)(v4 + 12) = 0;
        }
        *(_DWORD *)(v4 + 20) = 0;
        int v2 = *(_DWORD *)(v1 + 100);
      }
    }
    *(unsigned char *)(v1 + 36) = 0;
    *(void *)(v1 + 48) = 0;
    *(_DWORD *)(v1 + 72) = 0;
  }
  if ((v2 & 0xFF00) != 0)
  {
    if ((v2 & 0x100) != 0)
    {
      uint64_t v5 = *(void *)(v1 + 56);
      if (v5)
      {
        if (*(unsigned char *)(v5 + 44))
        {
          *(_OWORD *)(v5 + 24) = 0u;
          *(_OWORD *)(v5 + 8) = 0u;
        }
        *(_DWORD *)(v5 + 44) = 0;
        int v2 = *(_DWORD *)(v1 + 100);
      }
    }
    if ((v2 & 0x200) != 0)
    {
      uint64_t v6 = *(void *)(v1 + 64);
      if (v6)
      {
        if (*(unsigned char *)(v6 + 28))
        {
          *(void *)(v6 + 8) = 0;
          *(void *)(v6 + 16) = 0;
        }
        *(_DWORD *)(v6 + 28) = 0;
        int v2 = *(_DWORD *)(v1 + 100);
      }
    }
    if ((v2 & 0x400) != 0)
    {
      this = *(void *)(v1 + 80);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable::Clear(this);
        int v2 = *(_DWORD *)(v1 + 100);
      }
    }
    *(_DWORD *)(v1 + 76) = 0;
    if ((v2 & 0x1000) != 0)
    {
      uint64_t v7 = *(void *)(v1 + 88);
      if (v7)
      {
        if (*(unsigned char *)(v7 + 36))
        {
          *(void *)(v7 + 8) = 0;
          *(void *)(v7 + 16) = 0;
          *(void *)(v7 + 24) = 0;
        }
        *(_DWORD *)(v7 + 36) = 0;
      }
    }
  }
  *(_DWORD *)(v1 + 100) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Location::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::Location *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (1)
  {
    uint64_t v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 < *((void *)a2 + 2) && (*v4 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_6;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_6:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_37;
        }
        *((_DWORD *)this + 25) |= 1u;
        uint64_t v7 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
        if (!v7) {
          operator new();
        }
        v82[0] = 0;
        uint64_t v8 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v82))return 0; {
        }
          }
        else
        {
          v82[0] = *v8;
          *((void *)a2 + 1) = v8 + 1;
        }
        int v18 = *((_DWORD *)a2 + 14);
        int v19 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v18 + 1;
        if (v18 >= v19) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream(v7, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v20 = *((_DWORD *)a2 + 14);
        BOOL v21 = __OFSUB__(v20, 1);
        int v22 = v20 - 1;
        if (v22 < 0 == v21) {
          *((_DWORD *)a2 + 14) = v22;
        }
        unsigned int v23 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        if ((unint64_t)v23 >= v9 || *v23 != 16) {
          continue;
        }
        unsigned int v10 = v23 + 1;
        *((void *)a2 + 1) = v10;
        goto LABEL_49;
      case 2u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_37;
        }
        unsigned int v10 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
LABEL_49:
        v82[0] = 0;
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v82);
          if (!result) {
            return result;
          }
          unsigned int v24 = v82[0];
          uint64_t v25 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v24 = *v10;
          uint64_t v25 = v10 + 1;
          *((void *)a2 + 1) = v25;
        }
        *((_DWORD *)this + 8) = v24;
        int v11 = *((_DWORD *)this + 25) | 2;
        *((_DWORD *)this + 25) = v11;
        if ((unint64_t)v25 >= v9 || *v25 != 26) {
          continue;
        }
        *((void *)a2 + 1) = v25 + 1;
LABEL_57:
        *((_DWORD *)this + 25) = v11 | 4;
        uint64_t v27 = (CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation *)*((void *)this + 2);
        if (!v27) {
          operator new();
        }
        v82[0] = 0;
        uint64_t v28 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v28 >= *((void *)a2 + 2) || *v28 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v82))return 0; {
        }
          }
        else
        {
          v82[0] = *v28;
          *((void *)a2 + 1) = v28 + 1;
        }
        int v29 = *((_DWORD *)a2 + 14);
        int v30 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v29 + 1;
        if (v29 >= v30) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::MergePartialFromCodedStream(v27, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v31 = *((_DWORD *)a2 + 14);
        BOOL v21 = __OFSUB__(v31, 1);
        int v32 = v31 - 1;
        if (v32 < 0 == v21) {
          *((_DWORD *)a2 + 14) = v32;
        }
        uint64_t v33 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v33 >= *((void *)a2 + 2) || *v33 != 34) {
          continue;
        }
        *((void *)a2 + 1) = v33 + 1;
LABEL_71:
        *((_DWORD *)this + 25) |= 8u;
        uint64_t v34 = (CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate *)*((void *)this + 3);
        if (!v34) {
          operator new();
        }
        v82[0] = 0;
        int v35 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v35 >= *((void *)a2 + 2) || *v35 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v82))return 0; {
        }
          }
        else
        {
          v82[0] = *v35;
          *((void *)a2 + 1) = v35 + 1;
        }
        int v36 = *((_DWORD *)a2 + 14);
        int v37 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v36 + 1;
        if (v36 >= v37) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::MergePartialFromCodedStream(v34, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v38 = *((_DWORD *)a2 + 14);
        BOOL v21 = __OFSUB__(v38, 1);
        int v39 = v38 - 1;
        if (v39 < 0 == v21) {
          *((_DWORD *)a2 + 14) = v39;
        }
        int v40 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v40 >= *((void *)a2 + 2) || *v40 != 42) {
          continue;
        }
        *((void *)a2 + 1) = v40 + 1;
LABEL_85:
        *((_DWORD *)this + 25) |= 0x10u;
        unint64_t v41 = (CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus *)*((void *)this + 5);
        if (!v41) {
          operator new();
        }
        v82[0] = 0;
        char v42 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v42 >= *((void *)a2 + 2) || *v42 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v82))return 0; {
        }
          }
        else
        {
          v82[0] = *v42;
          *((void *)a2 + 1) = v42 + 1;
        }
        int v43 = *((_DWORD *)a2 + 14);
        int v44 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v43 + 1;
        if (v43 >= v44) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus::MergePartialFromCodedStream(v41, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v45 = *((_DWORD *)a2 + 14);
        BOOL v21 = __OFSUB__(v45, 1);
        int v46 = v45 - 1;
        if (v46 < 0 == v21) {
          *((_DWORD *)a2 + 14) = v46;
        }
        int v47 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v12 = *((void *)a2 + 2);
        if ((unint64_t)v47 >= v12 || *v47 != 48) {
          continue;
        }
        uint64_t v13 = v47 + 1;
        *((void *)a2 + 1) = v13;
LABEL_99:
        v82[0] = 0;
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v82);
          if (!result) {
            return result;
          }
          unsigned int v48 = v82[0];
          unint64_t v49 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v12 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v48 = *v13;
          unint64_t v49 = v13 + 1;
          *((void *)a2 + 1) = v49;
        }
        *((unsigned char *)this + 36) = v48 != 0;
        *((_DWORD *)this + 25) |= 0x20u;
        if ((unint64_t)v49 >= v12 || *v49 != 57) {
          continue;
        }
        *((void *)a2 + 1) = v49 + 1;
LABEL_107:
        *(void *)int v82 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v82) & 1) == 0)return 0; {
        *((void *)this + 6) = *(void *)v82;
        }
        *((_DWORD *)this + 25) |= 0x40u;
        int v50 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        if ((unint64_t)v50 >= v14 || *v50 != 64) {
          continue;
        }
        char v15 = v50 + 1;
        *((void *)a2 + 1) = v15;
LABEL_111:
        v82[0] = 0;
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v82);
          if (!result) {
            return result;
          }
          unsigned int v51 = v82[0];
        }
        else
        {
          unsigned int v51 = *v15;
          *((void *)a2 + 1) = v15 + 1;
        }
        if (v51 <= 2)
        {
          *((_DWORD *)this + 25) |= 0x80u;
          *((_DWORD *)this + 18) = v51;
        }
        int v52 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v52 >= *((void *)a2 + 2) || *v52 != 74) {
          continue;
        }
        *((void *)a2 + 1) = v52 + 1;
LABEL_121:
        *((_DWORD *)this + 25) |= 0x100u;
        uint64_t v53 = (CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed *)*((void *)this + 7);
        if (!v53) {
          operator new();
        }
        v82[0] = 0;
        int v54 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v54 >= *((void *)a2 + 2) || *v54 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v82))return 0; {
        }
          }
        else
        {
          v82[0] = *v54;
          *((void *)a2 + 1) = v54 + 1;
        }
        int v55 = *((_DWORD *)a2 + 14);
        int v56 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v55 + 1;
        if (v55 >= v56) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed::MergePartialFromCodedStream(v53, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v57 = *((_DWORD *)a2 + 14);
        BOOL v21 = __OFSUB__(v57, 1);
        int v58 = v57 - 1;
        if (v58 < 0 == v21) {
          *((_DWORD *)a2 + 14) = v58;
        }
        int v59 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v59 >= *((void *)a2 + 2) || *v59 != 82) {
          continue;
        }
        *((void *)a2 + 1) = v59 + 1;
LABEL_135:
        *((_DWORD *)this + 25) |= 0x200u;
        int v60 = (CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading *)*((void *)this + 8);
        if (!v60) {
          operator new();
        }
        v82[0] = 0;
        char v61 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v61 >= *((void *)a2 + 2) || *v61 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v82))return 0; {
        }
          }
        else
        {
          v82[0] = *v61;
          *((void *)a2 + 1) = v61 + 1;
        }
        int v62 = *((_DWORD *)a2 + 14);
        int v63 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v62 + 1;
        if (v62 >= v63) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::VehicleHeading::MergePartialFromCodedStream(v60, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v64 = *((_DWORD *)a2 + 14);
        BOOL v21 = __OFSUB__(v64, 1);
        int v65 = v64 - 1;
        if (v65 < 0 == v21) {
          *((_DWORD *)a2 + 14) = v65;
        }
        BOOL v66 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v66 >= *((void *)a2 + 2) || *v66 != 90) {
          continue;
        }
        *((void *)a2 + 1) = v66 + 1;
LABEL_149:
        *((_DWORD *)this + 25) |= 0x400u;
        int v67 = (CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable *)*((void *)this + 10);
        if (!v67) {
          operator new();
        }
        v82[0] = 0;
        uint64_t v68 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v68 >= *((void *)a2 + 2) || *v68 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v82))return 0; {
        }
          }
        else
        {
          v82[0] = *v68;
          *((void *)a2 + 1) = v68 + 1;
        }
        int v69 = *((_DWORD *)a2 + 14);
        int v70 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v69 + 1;
        if (v69 >= v70) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable::MergePartialFromCodedStream(v67, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v71 = *((_DWORD *)a2 + 14);
        BOOL v21 = __OFSUB__(v71, 1);
        int v72 = v71 - 1;
        if (v72 < 0 == v21) {
          *((_DWORD *)a2 + 14) = v72;
        }
        unsigned int v73 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
        if ((unint64_t)v73 >= v16 || *v73 != 96) {
          continue;
        }
        uint64_t v17 = v73 + 1;
        *((void *)a2 + 1) = v17;
LABEL_163:
        v82[0] = 0;
        if ((unint64_t)v17 >= v16 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v82);
          if (!result) {
            return result;
          }
          unsigned int v74 = v82[0];
        }
        else
        {
          unsigned int v74 = *v17;
          *((void *)a2 + 1) = v17 + 1;
        }
        if (v74 <= 2)
        {
          *((_DWORD *)this + 25) |= 0x800u;
          *((_DWORD *)this + 19) = v74;
        }
        uint64_t v75 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v75 >= *((void *)a2 + 2) || *v75 != 106) {
          continue;
        }
        *((void *)a2 + 1) = v75 + 1;
LABEL_173:
        *((_DWORD *)this + 25) |= 0x1000u;
        int v76 = (CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed *)*((void *)this + 11);
        if (!v76) {
          operator new();
        }
        v82[0] = 0;
        uint64_t v77 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v77 >= *((void *)a2 + 2) || *v77 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v82))return 0; {
        }
          }
        else
        {
          v82[0] = *v77;
          *((void *)a2 + 1) = v77 + 1;
        }
        int v78 = *((_DWORD *)a2 + 14);
        int v79 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v78 + 1;
        if (v78 >= v79) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::LocationDerivedSpeed::MergePartialFromCodedStream(v76, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v80 = *((_DWORD *)a2 + 14);
        BOOL v21 = __OFSUB__(v80, 1);
        int v81 = v80 - 1;
        if (v81 < 0 == v21) {
          *((_DWORD *)a2 + 14) = v81;
        }
        if (*((void *)a2 + 1) == *((void *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
        break;
      case 3u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_37;
        }
        int v11 = *((_DWORD *)this + 25);
        goto LABEL_57;
      case 4u:
        int v6 = TagFallback & 7;
        if (v6 == 2) {
          goto LABEL_71;
        }
        goto LABEL_37;
      case 5u:
        int v6 = TagFallback & 7;
        if (v6 == 2) {
          goto LABEL_85;
        }
        goto LABEL_37;
      case 6u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_37;
        }
        uint64_t v13 = (char *)*((void *)a2 + 1);
        unint64_t v12 = *((void *)a2 + 2);
        goto LABEL_99;
      case 7u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_107;
        }
        goto LABEL_37;
      case 8u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_37;
        }
        char v15 = (char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        goto LABEL_111;
      case 9u:
        int v6 = TagFallback & 7;
        if (v6 == 2) {
          goto LABEL_121;
        }
        goto LABEL_37;
      case 0xAu:
        int v6 = TagFallback & 7;
        if (v6 == 2) {
          goto LABEL_135;
        }
        goto LABEL_37;
      case 0xBu:
        int v6 = TagFallback & 7;
        if (v6 == 2) {
          goto LABEL_149;
        }
        goto LABEL_37;
      case 0xCu:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_37;
        }
        uint64_t v17 = (char *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
        goto LABEL_163;
      case 0xDu:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_37;
        }
        goto LABEL_173;
      default:
        int v6 = TagFallback & 7;
LABEL_37:
        if (v6 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Location::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 100);
  if (v6)
  {
    uint64_t v7 = *(void *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::Location::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 100);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_19;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 32), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 100);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_22;
  }
LABEL_19:
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v8 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::Location::default_instance_ + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 100);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_25;
  }
LABEL_22:
  uint64_t v9 = *(void *)(v5 + 24);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v9 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::Location::default_instance_ + 24);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v9, a2, a4);
  int v6 = *(_DWORD *)(v5 + 100);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_28;
  }
LABEL_25:
  uint64_t v10 = *(void *)(v5 + 40);
  if (!v10)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v10 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::Location::default_instance_ + 40);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v10, a2, a4);
  int v6 = *(_DWORD *)(v5 + 100);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_29;
  }
LABEL_28:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned __int8 *)(v5 + 36), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 100);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_30;
  }
LABEL_29:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (uint64_t)a2, *(double *)(v5 + 48), a3);
  int v6 = *(_DWORD *)(v5 + 100);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_31;
  }
LABEL_30:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned int *)(v5 + 72), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 100);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_34;
  }
LABEL_31:
  uint64_t v11 = *(void *)(v5 + 56);
  if (!v11)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v11 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::Location::default_instance_ + 56);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v11, a2, a4);
  int v6 = *(_DWORD *)(v5 + 100);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_37;
  }
LABEL_34:
  uint64_t v12 = *(void *)(v5 + 64);
  if (!v12)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v12 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::Location::default_instance_ + 64);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v12, a2, a4);
  int v6 = *(_DWORD *)(v5 + 100);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
LABEL_40:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(unsigned int *)(v5 + 76), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 100) & 0x1000) == 0) {
      return this;
    }
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v13 = *(void *)(v5 + 80);
  if (!v13)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v13 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::Location::default_instance_ + 80);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v13, a2, a4);
  int v6 = *(_DWORD *)(v5 + 100);
  if ((v6 & 0x800) != 0) {
    goto LABEL_40;
  }
LABEL_13:
  if ((v6 & 0x1000) == 0) {
    return this;
  }
LABEL_41:
  uint64_t v14 = *(void *)(v5 + 88);
  if (!v14)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v14 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::Location::default_instance_ + 88);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, v14, a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Location::ByteSize(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 100);
  if (!(_BYTE)v2)
  {
    uint64_t v4 = 0;
    goto LABEL_55;
  }
  if ((v2 & 1) == 0)
  {
    int v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_21;
    }
    goto LABEL_15;
  }
  uint64_t v5 = *(void *)(this + 8);
  if (!v5)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v5 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::Location::default_instance_ + 8);
  }
  int v6 = *(unsigned __int8 *)(v5 + 36);
  if (*(unsigned char *)(v5 + 36))
  {
    int v7 = (v6 << 31 >> 31) & 9;
    if ((v6 & 2) != 0) {
      v7 += 9;
    }
    if ((v6 & 4) != 0) {
      int v6 = v7 + 9;
    }
    else {
      int v6 = v7;
    }
  }
  *(_DWORD *)(v5 + 32) = v6;
  int v3 = v6 + 2;
  int v2 = *(_DWORD *)(v1 + 100);
  if ((v2 & 2) != 0)
  {
LABEL_15:
    uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 32);
    if ((v8 & 0x80000000) != 0)
    {
      this = 10;
    }
    else if (v8 >= 0x80)
    {
      this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
      int v2 = *(_DWORD *)(v1 + 100);
    }
    else
    {
      this = 1;
    }
    v3 += this + 1;
  }
LABEL_21:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_23;
    }
LABEL_31:
    uint64_t v12 = *(void *)(v1 + 24);
    if (!v12)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(0);
      uint64_t v12 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::Location::default_instance_ + 24);
    }
    uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::ByteSize(v12);
    int v14 = (int)v13;
    if (v13 >= 0x80) {
      this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
    }
    else {
      this = 1;
    }
    v3 += v14 + this + 1;
    int v2 = *(_DWORD *)(v1 + 100);
    if ((v2 & 0x10) == 0) {
      goto LABEL_43;
    }
    goto LABEL_37;
  }
  uint64_t v9 = *(void *)(v1 + 16);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(0);
    uint64_t v9 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::Location::default_instance_ + 16);
  }
  uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::ByteSize(v9);
  int v11 = (int)v10;
  if (v10 >= 0x80) {
    this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
  }
  else {
    this = 1;
  }
  v3 += v11 + this + 1;
  int v2 = *(_DWORD *)(v1 + 100);
  if ((v2 & 8) != 0) {
    goto LABEL_31;
  }
LABEL_23:
  if ((v2 & 0x10) != 0)
  {
LABEL_37:
    char v15 = *(CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus **)(v1 + 40);
    if (!v15)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(0);
      char v15 = *(CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus **)(CoreNavigation::CLP::LogEntry::PrivateData::Location::default_instance_
                                                                             + 40);
    }
    unint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::TechnologyStatus::ByteSize(v15);
    int v17 = (int)v16;
    if (v16 >= 0x80) {
      this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16);
    }
    else {
      this = 1;
    }
    v3 += v17 + this + 1;
    int v2 = *(_DWORD *)(v1 + 100);
  }
LABEL_43:
  unsigned int v18 = v3 + 2;
  if ((v2 & 0x20) == 0) {
    unsigned int v18 = v3;
  }
  if ((v2 & 0x40) != 0) {
    uint64_t v4 = v18 + 9;
  }
  else {
    uint64_t v4 = v18;
  }
  if ((v2 & 0x80) != 0)
  {
    int v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 72);
    if ((v19 & 0x80000000) != 0)
    {
      this = 10;
    }
    else if (v19 >= 0x80)
    {
      this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19);
      int v2 = *(_DWORD *)(v1 + 100);
    }
    else
    {
      this = 1;
    }
    uint64_t v4 = (v4 + this + 1);
  }
LABEL_55:
  if ((v2 & 0xFF00) == 0) {
    goto LABEL_94;
  }
  if ((v2 & 0x100) != 0)
  {
    int v20 = *(CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed **)(v1 + 56);
    if (!v20)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(0);
      int v20 = *(CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed **)(CoreNavigation::CLP::LogEntry::PrivateData::Location::default_instance_
                                                                         + 56);
    }
    this = CoreNavigation::CLP::LogEntry::PrivateData::VehicleSpeed::ByteSize(v20);
    uint64_t v4 = (v4 + this + 2);
    int v2 = *(_DWORD *)(v1 + 100);
    if ((v2 & 0x200) == 0)
    {
LABEL_58:
      if ((v2 & 0x400) == 0) {
        goto LABEL_59;
      }
      goto LABEL_73;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_58;
  }
  uint64_t v21 = *(void *)(v1 + 64);
  if (!v21)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v21 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::Location::default_instance_ + 64);
  }
  int v22 = *(unsigned __int8 *)(v21 + 28);
  int v23 = (v22 << 31 >> 31) & 9;
  if ((v22 & 2) != 0) {
    v23 += 9;
  }
  if (*(unsigned char *)(v21 + 28)) {
    int v24 = v23;
  }
  else {
    int v24 = 0;
  }
  *(_DWORD *)(v21 + 24) = v24;
  uint64_t v4 = (v4 + v24 + 2);
  int v2 = *(_DWORD *)(v1 + 100);
  if ((v2 & 0x400) == 0)
  {
LABEL_59:
    if ((v2 & 0x800) == 0) {
      goto LABEL_60;
    }
LABEL_79:
    this = *(unsigned int *)(v1 + 76);
    if ((this & 0x80000000) != 0)
    {
      int v28 = 11;
    }
    else if (this >= 0x80)
    {
      this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)this);
      int v28 = this + 1;
      int v2 = *(_DWORD *)(v1 + 100);
    }
    else
    {
      int v28 = 2;
    }
    uint64_t v4 = (v28 + v4);
    if ((v2 & 0x1000) == 0) {
      goto LABEL_94;
    }
    goto LABEL_85;
  }
LABEL_73:
  uint64_t v25 = *(CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable **)(v1 + 80);
  if (!v25)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(0);
    uint64_t v25 = *(CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable **)(CoreNavigation::CLP::LogEntry::PrivateData::Location::default_instance_
                                                                            + 80);
  }
  uint64_t v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::XtraFileAvailable::ByteSize(v25);
  int v27 = (int)v26;
  if (v26 >= 0x80) {
    this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26);
  }
  else {
    this = 1;
  }
  uint64_t v4 = (v4 + v27 + this + 1);
  int v2 = *(_DWORD *)(v1 + 100);
  if ((v2 & 0x800) != 0) {
    goto LABEL_79;
  }
LABEL_60:
  if ((v2 & 0x1000) == 0) {
    goto LABEL_94;
  }
LABEL_85:
  uint64_t v29 = *(void *)(v1 + 88);
  if (!v29)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v29 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::Location::default_instance_ + 88);
  }
  int v30 = *(unsigned __int8 *)(v29 + 36);
  if (*(unsigned char *)(v29 + 36))
  {
    int v31 = (v30 << 31 >> 31) & 9;
    if ((v30 & 2) != 0) {
      v31 += 9;
    }
    if ((v30 & 4) != 0) {
      int v30 = v31 + 9;
    }
    else {
      int v30 = v31;
    }
  }
  *(_DWORD *)(v29 + 32) = v30;
  uint64_t v4 = (v4 + v30 + 2);
LABEL_94:
  *(_DWORD *)(v1 + 96) = v4;
  return v4;
}

double CoreNavigation::CLP::LogEntry::PrivateData::Location::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::Location *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::Location::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::Location::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::Location *this, const CoreNavigation::CLP::LogEntry::PrivateData::Location *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::Location *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::Location::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Location::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::Location *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::Location::Swap(CoreNavigation::CLP::LogEntry::PrivateData::Location *this, CoreNavigation::CLP::LogEntry::PrivateData::Location *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    LODWORD(v2) = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
    uint64_t v3 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    uint64_t v4 = *((void *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v4;
    uint64_t v5 = *((void *)this + 5);
    *((void *)this + 5) = *((void *)a2 + 5);
    *((void *)a2 + 5) = v5;
    LOBYTE(v5) = *((unsigned char *)this + 36);
    *((unsigned char *)this + 36) = *((unsigned char *)a2 + 36);
    *((unsigned char *)a2 + 36) = v5;
    double result = *((double *)this + 6);
    *((void *)this + 6) = *((void *)a2 + 6);
    *((double *)a2 + 6) = result;
    LODWORD(v5) = *((_DWORD *)this + 18);
    *((_DWORD *)this + 18) = *((_DWORD *)a2 + 18);
    *((_DWORD *)a2 + 18) = v5;
    uint64_t v7 = *((void *)this + 7);
    *((void *)this + 7) = *((void *)a2 + 7);
    *((void *)a2 + 7) = v7;
    uint64_t v8 = *((void *)this + 8);
    *((void *)this + 8) = *((void *)a2 + 8);
    *((void *)a2 + 8) = v8;
    uint64_t v9 = *((void *)this + 10);
    *((void *)this + 10) = *((void *)a2 + 10);
    *((void *)a2 + 10) = v9;
    LODWORD(v9) = *((_DWORD *)this + 19);
    *((_DWORD *)this + 19) = *((_DWORD *)a2 + 19);
    *((_DWORD *)a2 + 19) = v9;
    uint64_t v10 = *((void *)this + 11);
    *((void *)this + 11) = *((void *)a2 + 11);
    *((void *)a2 + 11) = v10;
    LODWORD(v10) = *((_DWORD *)this + 25);
    *((_DWORD *)this + 25) = *((_DWORD *)a2 + 25);
    *((_DWORD *)a2 + 25) = v10;
    LODWORD(v10) = *((_DWORD *)this + 24);
    *((_DWORD *)this + 24) = *((_DWORD *)a2 + 24);
    *((_DWORD *)a2 + 24) = v10;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::Location::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.Location");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations::SharedCtor(uint64_t this)
{
  *(void *)(this + 56) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations *CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations::BatchedLocations(CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations *this, const CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations *a2)
{
  *(void *)this = &unk_1EDD0C758;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  *((void *)this + 4) = 0;
  *((void *)this + 5) = 0;
  *((_DWORD *)this + 12) = 0;
  *((void *)this + 7) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations::MergeFrom(this, a2);
  return this;
}

void sub_18DF72134(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;
  sub_18DF0C324(v4);
  sub_18DF0C324(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations *this, const CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations *)((char *)this + 8));
  if (*((int *)a2 + 4) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(const CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation **)(*((void *)a2 + 1) + 8 * v4);
      int v6 = *((_DWORD *)this + 5);
      uint64_t v7 = *((int *)this + 4);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 6))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations *)((char *)this + 8));
          int v6 = *((_DWORD *)this + 5);
        }
        *((_DWORD *)this + 5) = v6 + 1;
        operator new();
      }
      uint64_t v8 = *((void *)this + 1);
      *((_DWORD *)this + 4) = v7 + 1;
      CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::MergeFrom(*(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 4));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations *)((char *)this + 32));
  if (*((int *)a2 + 10) >= 1)
  {
    uint64_t v9 = 0;
    do
    {
      uint64_t v10 = *(const CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate **)(*((void *)a2 + 4) + 8 * v9);
      int v11 = *((_DWORD *)this + 11);
      uint64_t v12 = *((int *)this + 10);
      if ((int)v12 >= v11)
      {
        if (v11 == *((_DWORD *)this + 12))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations *)((char *)this + 32));
          int v11 = *((_DWORD *)this + 11);
        }
        *((_DWORD *)this + 11) = v11 + 1;
        sub_18DFA8FE4();
      }
      uint64_t v13 = *((void *)this + 4);
      *((_DWORD *)this + 10) = v12 + 1;
      CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::MergeFrom(*(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate **)(v13 + 8 * v12), v10);
      ++v9;
    }
    while (v9 < *((int *)a2 + 10));
  }
}

void sub_18DF723A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations::~BatchedLocations(CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations *this)
{
  *(void *)this = &unk_1EDD0C758;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  sub_18DF0C324((uint64_t *)this + 4);
  sub_18DF0C324((uint64_t *)this + 1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations::~BatchedLocations(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 56) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations::New(CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations::Clear(uint64_t this)
{
  uint64_t v1 = this;
  if (*(int *)(this + 16) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      uint64_t v3 = *(void *)(*(void *)(v1 + 8) + 8 * v2);
      this = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 32))(v3);
      ++v2;
    }
    while (v2 < *(int *)(v1 + 16));
  }
  *(_DWORD *)(v1 + 16) = 0;
  if (*(int *)(v1 + 40) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(v1 + 32) + 8 * v4);
      this = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 32))(v5);
      ++v4;
    }
    while (v4 < *(int *)(v1 + 40));
  }
  *(_DWORD *)(v1 + 40) = 0;
  *(_DWORD *)(v1 + 60) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4 = (CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations *)((char *)this + 8);
  uint64_t v5 = (CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations *)((char *)this + 32);
  while (1)
  {
    while (1)
    {
      while (1)
      {
LABEL_2:
        int v6 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v6 >= *((void *)a2 + 2) || *v6 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v6;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((void *)a2 + 1) = v6 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_30;
        }
        while (1)
        {
          int v9 = *((_DWORD *)this + 5);
          uint64_t v10 = *((int *)this + 4);
          if ((int)v10 >= v9)
          {
            if (v9 == *((_DWORD *)this + 6))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
              int v9 = *((_DWORD *)this + 5);
            }
            *((_DWORD *)this + 5) = v9 + 1;
            operator new();
          }
          uint64_t v11 = *((void *)this + 1);
          *((_DWORD *)this + 4) = v10 + 1;
          uint64_t v12 = *(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation **)(v11 + 8 * v10);
          unsigned int v32 = 0;
          uint64_t v13 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v13 >= *((void *)a2 + 2) || *v13 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v32))return 0; {
          }
            }
          else
          {
            unsigned int v32 = *v13;
            *((void *)a2 + 1) = v13 + 1;
          }
          int v14 = *((_DWORD *)a2 + 14);
          int v15 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v14 + 1;
          if (v14 >= v15) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::MergePartialFromCodedStream(v12, a2)|| !*((unsigned char *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          int v16 = *((_DWORD *)a2 + 14);
          BOOL v17 = __OFSUB__(v16, 1);
          int v18 = v16 - 1;
          if (v18 < 0 == v17) {
            *((_DWORD *)a2 + 14) = v18;
          }
          int v19 = (unsigned char *)*((void *)a2 + 1);
          if ((unint64_t)v19 >= *((void *)a2 + 2)) {
            break;
          }
          int v20 = *v19;
          if (v20 != 10)
          {
            if (v20 != 18) {
              goto LABEL_2;
            }
            goto LABEL_34;
          }
          *((void *)a2 + 1) = v19 + 1;
        }
      }
      if (TagFallback >> 3 != 2) {
        break;
      }
      int v8 = TagFallback & 7;
      if (v8 != 2) {
        goto LABEL_30;
      }
      while (1)
      {
        int v21 = *((_DWORD *)this + 11);
        uint64_t v22 = *((int *)this + 10);
        if ((int)v22 >= v21)
        {
          if (v21 == *((_DWORD *)this + 12))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5);
            int v21 = *((_DWORD *)this + 11);
          }
          *((_DWORD *)this + 11) = v21 + 1;
          sub_18DFA8FE4();
        }
        uint64_t v23 = *((void *)this + 4);
        *((_DWORD *)this + 10) = v22 + 1;
        int v24 = *(CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate **)(v23 + 8 * v22);
        unsigned int v33 = 0;
        uint64_t v25 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v25 >= *((void *)a2 + 2) || *v25 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v33))return 0; {
        }
          }
        else
        {
          unsigned int v33 = *v25;
          *((void *)a2 + 1) = v25 + 1;
        }
        int v26 = *((_DWORD *)a2 + 14);
        int v27 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v26 + 1;
        if (v26 >= v27) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::MergePartialFromCodedStream(v24, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v28 = *((_DWORD *)a2 + 14);
        BOOL v17 = __OFSUB__(v28, 1);
        int v29 = v28 - 1;
        if (v29 < 0 == v17) {
          *((_DWORD *)a2 + 14) = v29;
        }
        int v19 = (unsigned char *)*((void *)a2 + 1);
        int v30 = (unsigned char *)*((void *)a2 + 2);
        if (v19 >= v30 || *v19 != 18) {
          break;
        }
LABEL_34:
        *((void *)a2 + 1) = v19 + 1;
      }
      if (v19 == v30 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      }
    }
    int v8 = TagFallback & 7;
LABEL_30:
    if (v8 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(int *)(this + 16) >= 1)
  {
    uint64_t v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(*(void *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  if (*(int *)(v5 + 40) >= 1)
  {
    uint64_t v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(*(void *)(v5 + 32) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 40));
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations *this)
{
  int v2 = *((_DWORD *)this + 4);
  if (v2 >= 1)
  {
    uint64_t v3 = 0;
    do
    {
      uint64_t v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocation::ByteSize(*(void *)(*((void *)this + 1) + 8 * v3));
      int v5 = (int)v4;
      if (v4 >= 0x80) {
        int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
      }
      else {
        int v6 = 1;
      }
      v2 += v5 + v6;
      ++v3;
    }
    while (v3 < *((int *)this + 4));
  }
  int v7 = *((_DWORD *)this + 10);
  uint64_t v8 = (v7 + v2);
  if (v7 >= 1)
  {
    uint64_t v9 = 0;
    do
    {
      uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::DaemonLocationPrivate::ByteSize(*(void *)(*((void *)this + 4) + 8 * v9));
      int v11 = (int)v10;
      if (v10 >= 0x80) {
        int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
      }
      else {
        int v12 = 1;
      }
      uint64_t v8 = (v11 + v8 + v12);
      ++v9;
    }
    while (v9 < *((int *)this + 10));
  }
  *((_DWORD *)this + 14) = v8;
  return v8;
}

void CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations *this, const CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations *this)
{
  return 1;
}

CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations *CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations::Swap(CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations *this, CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations *a2)
{
  if (a2 != this)
  {
    uint64_t v3 = this;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    this = (CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    int v4 = *((_DWORD *)v3 + 15);
    *((_DWORD *)v3 + 15) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v4;
    int v5 = *((_DWORD *)v3 + 14);
    *((_DWORD *)v3 + 14) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v5;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::BatchedLocations::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.BatchedLocations");
}

double CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate *this)
{
  *((_WORD *)this + 8) = 0;
  *(void *)&double result = 0x100000000;
  *((void *)this + 1) = 0x100000000;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 5) = 0;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate *CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate::RhythmicGnssStatusUpdate(CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate *this, const CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate *a2)
{
  *(void *)this = &unk_1EDD0E0A8;
  *((_WORD *)this + 8) = 0;
  *((void *)this + 1) = 0x100000000;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 5) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate::MergeFrom(this, a2);
  return this;
}

void sub_18DF72D18(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate *this, const CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 28);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 28))
    {
      unsigned int v5 = *((_DWORD *)a2 + 2);
      if (v5 >= 3) {
        __assert_rtn("set_gnss_mode_of_operation", "CoreNavigationCLPPrivateDataShared.pb.h", 17489, "::CoreNavigation::CLP::LogEntry::PrivateData::GnssModeOfOperation_IsValid(value)");
      }
      *((_DWORD *)this + 7) |= 1u;
      *((_DWORD *)this + 2) = v5;
      int v4 = *((_DWORD *)a2 + 7);
    }
    if ((v4 & 2) != 0)
    {
      char v6 = *((unsigned char *)a2 + 16);
      *((_DWORD *)this + 7) |= 2u;
      *((unsigned char *)this + 16) = v6;
      int v4 = *((_DWORD *)a2 + 7);
    }
    if ((v4 & 4) != 0)
    {
      unsigned int v7 = *((_DWORD *)a2 + 3);
      if (v7 >= 5) {
        __assert_rtn("set_rhythmic_mode", "CoreNavigationCLPPrivateDataShared.pb.h", 17534, "::CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssWakeMode_IsValid(value)");
      }
      *((_DWORD *)this + 7) |= 4u;
      *((_DWORD *)this + 3) = v7;
      int v4 = *((_DWORD *)a2 + 7);
    }
    if ((v4 & 8) != 0)
    {
      int v8 = *((_DWORD *)a2 + 5);
      *((_DWORD *)this + 7) |= 8u;
      *((_DWORD *)this + 5) = v8;
      int v4 = *((_DWORD *)a2 + 7);
    }
    if ((v4 & 0x10) != 0)
    {
      char v9 = *((unsigned char *)a2 + 17);
      *((_DWORD *)this + 7) |= 0x10u;
      *((unsigned char *)this + 17) = v9;
    }
  }
}

void sub_18DF72E7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate::~RhythmicGnssStatusUpdate(CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate *this)
{
  *(void *)this = &unk_1EDD0E0A8;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate::~RhythmicGnssStatusUpdate(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 24) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate::New(CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 28))
  {
    *(_WORD *)(this + 16) = 0;
    *(void *)(this + 8) = 0x100000000;
    *(_DWORD *)(this + 20) = 0;
  }
  *(_DWORD *)(this + 28) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unsigned int *)((char *)this + 20);
  while (2)
  {
    unsigned int v5 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        unsigned int v25 = 0;
        int v8 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v8 < *((void *)a2 + 2) && (*v8 & 0x80000000) == 0)
        {
          unsigned int v9 = *v8;
          *((void *)a2 + 1) = v8 + 1;
          goto LABEL_26;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v25);
        if (result)
        {
          unsigned int v9 = v25;
LABEL_26:
          if (v9 <= 2)
          {
            *((_DWORD *)this + 7) |= 1u;
            *((_DWORD *)this + 2) = v9;
          }
          int v16 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v10 = *((void *)a2 + 2);
          if ((unint64_t)v16 < v10 && *v16 == 16)
          {
            int v11 = v16 + 1;
            *((void *)a2 + 1) = v11;
            goto LABEL_31;
          }
          continue;
        }
        break;
      case 2u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v11 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
LABEL_31:
        unsigned int v25 = 0;
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v25);
          if (!result) {
            return result;
          }
          unsigned int v17 = v25;
          int v18 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v10 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v17 = *v11;
          int v18 = v11 + 1;
          *((void *)a2 + 1) = v18;
        }
        *((unsigned char *)this + 16) = v17 != 0;
        *((_DWORD *)this + 7) |= 2u;
        if ((unint64_t)v18 >= v10 || *v18 != 24) {
          continue;
        }
        int v12 = v18 + 1;
        *((void *)a2 + 1) = v12;
LABEL_39:
        unsigned int v25 = 0;
        if ((unint64_t)v12 >= v10 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v25);
          if (!result) {
            return result;
          }
          unsigned int v19 = v25;
        }
        else
        {
          unsigned int v19 = *v12;
          *((void *)a2 + 1) = v12 + 1;
        }
        if (v19 <= 4)
        {
          *((_DWORD *)this + 7) |= 4u;
          *((_DWORD *)this + 3) = v19;
        }
        int v20 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        if ((unint64_t)v20 >= v13 || *v20 != 32) {
          continue;
        }
        int v14 = v20 + 1;
        *((void *)a2 + 1) = v14;
LABEL_49:
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!result) {
            return result;
          }
          int v21 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v4 = *v14;
          int v21 = v14 + 1;
          *((void *)a2 + 1) = v21;
        }
        *((_DWORD *)this + 7) |= 8u;
        if ((unint64_t)v21 >= v13 || *v21 != 40) {
          continue;
        }
        int v15 = v21 + 1;
        *((void *)a2 + 1) = v15;
LABEL_57:
        unsigned int v25 = 0;
        if ((unint64_t)v15 >= v13 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v25);
          if (!result) {
            return result;
          }
          unsigned int v22 = v25;
          uint64_t v23 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v22 = *v15;
          uint64_t v23 = (unsigned __int8 *)(v15 + 1);
          *((void *)a2 + 1) = v23;
        }
        *((unsigned char *)this + 17) = v22 != 0;
        *((_DWORD *)this + 7) |= 0x10u;
        if (v23 != (unsigned __int8 *)v13 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10)) {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      case 3u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v12 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
        goto LABEL_39;
      case 4u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v14 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_49;
      case 5u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v15 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_57;
      default:
        int v7 = TagFallback & 7;
LABEL_20:
        if (v7 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 28);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 28);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 16), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 28);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 20), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 28) & 0x10) == 0) {
      return this;
    }
    goto LABEL_11;
  }
LABEL_9:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 12), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 28);
  if ((v6 & 8) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v6 & 0x10) == 0) {
    return this;
  }
LABEL_11:
  uint64_t v7 = *(unsigned __int8 *)(v5 + 17);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v7, (uint64_t)a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 28);
  if ((_BYTE)v2)
  {
    if (*((unsigned char *)this + 28))
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
      if ((v5 & 0x80000000) != 0)
      {
        int v3 = 11;
      }
      else if (v5 >= 0x80)
      {
        int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
        int v2 = *((_DWORD *)this + 7);
      }
      else
      {
        int v3 = 2;
      }
    }
    else
    {
      int v3 = 0;
    }
    if ((v2 & 2) != 0) {
      unsigned int v6 = v3 + 2;
    }
    else {
      unsigned int v6 = v3;
    }
    if ((v2 & 4) != 0)
    {
      uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
      if ((v7 & 0x80000000) != 0)
      {
        int v8 = 11;
      }
      else if (v7 >= 0x80)
      {
        int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7) + 1;
        int v2 = *((_DWORD *)this + 7);
      }
      else
      {
        int v8 = 2;
      }
      v6 += v8;
    }
    if ((v2 & 8) != 0)
    {
      unsigned int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
      if (v9 >= 0x80)
      {
        int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9) + 1;
        int v2 = *((_DWORD *)this + 7);
      }
      else
      {
        int v10 = 2;
      }
      v6 += v10;
    }
    if ((v2 & 0x10) != 0) {
      uint64_t result = v6 + 2;
    }
    else {
      uint64_t result = v6;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  *((_DWORD *)this + 6) = result;
  return result;
}

void CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate *this, const CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate *a2)
{
  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate *)this)
  {
    int v2 = *(_DWORD *)(this + 8);
    *(_DWORD *)(this + 8) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    LOBYTE(v2) = *(unsigned char *)(this + 16);
    *(unsigned char *)(this + 16) = *((unsigned char *)a2 + 16);
    *((unsigned char *)a2 + 16) = v2;
    int v3 = *(_DWORD *)(this + 12);
    *(_DWORD *)(this + 12) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    int v4 = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v4;
    LOBYTE(v4) = *(unsigned char *)(this + 17);
    *(unsigned char *)(this + 17) = *((unsigned char *)a2 + 17);
    *((unsigned char *)a2 + 17) = v4;
    int v5 = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v5;
    int v6 = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v6;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::RhythmicGnssStatusUpdate::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.RhythmicGnssStatusUpdate");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl::SharedCtor(uint64_t this)
{
  *(unsigned char *)(this + 8) = 0;
  *(_DWORD *)(this + 12) = 0;
  *(_DWORD *)(this + 16) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl *CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl::RhythmicStreamingControl(CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl *this, const CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl *a2)
{
  *(void *)this = &unk_1EDD0E120;
  *((unsigned char *)this + 8) = 0;
  *((_DWORD *)this + 3) = 0;
  *((_DWORD *)this + 4) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl::MergeFrom(this, a2);
  return this;
}

void sub_18DF7370C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl *this, const CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v5);
  }
  if (*((unsigned char *)a2 + 16))
  {
    char v4 = *((unsigned char *)a2 + 8);
    *((_DWORD *)this + 4) |= 1u;
    *((unsigned char *)this + 8) = v4;
  }
}

void sub_18DF737AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl::~RhythmicStreamingControl(CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl *this)
{
  *(void *)this = &unk_1EDD0E120;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl::~RhythmicStreamingControl(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 12) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl::New(CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 16)) {
    *(unsigned char *)(this + 8) = 0;
  }
  *(_DWORD *)(this + 16) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (1)
  {
    while (1)
    {
      char v4 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
      }
      else
      {
        unint64_t TagFallback = *v4;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v4 + 1;
      }
      if (TagFallback != 8) {
        break;
      }
      unsigned int v11 = 0;
      uint64_t v7 = (char *)*((void *)a2 + 1);
      unint64_t v6 = *((void *)a2 + 2);
      if ((unint64_t)v7 >= v6 || *v7 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v11);
        if (!result) {
          return result;
        }
        unsigned int v8 = v11;
        unsigned int v9 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v6 = *((void *)a2 + 2);
      }
      else
      {
        unsigned int v8 = *v7;
        unsigned int v9 = (unsigned __int8 *)(v7 + 1);
        *((void *)a2 + 1) = v9;
      }
      *((unsigned char *)this + 8) = v8 != 0;
      *((_DWORD *)this + 4) |= 1u;
      if (v9 == (unsigned __int8 *)v6 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      break;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if (*(unsigned char *)(this + 16)) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(this + 8), (uint64_t)a2, a4);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl *this)
{
  if (*((_DWORD *)this + 4)) {
    uint64_t v1 = 2 * (*((_DWORD *)this + 4) & 1u);
  }
  else {
    uint64_t v1 = 0;
  }
  *((_DWORD *)this + 3) = v1;
  return v1;
}

void CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl *this, const CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl *a2)
{
  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl *)this)
  {
    char v2 = *(unsigned char *)(this + 8);
    *(unsigned char *)(this + 8) = *((unsigned char *)a2 + 8);
    *((unsigned char *)a2 + 8) = v2;
    int v3 = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v3;
    int v4 = *(_DWORD *)(this + 12);
    *(_DWORD *)(this + 12) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v4;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::RhythmicStreamingControl::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.RhythmicStreamingControl");
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity_MountedStateType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 3;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity_ConfidenceType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 4;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity_VehicleExitStateType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 4;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity_VehicularConfidenceType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 6;
}

double CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity *this)
{
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)((char *)this + 22) = 0;
  double result = 0.0;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 4) = 0u;
  *((_OWORD *)this + 5) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity *CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::MotionActivity(CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity *this, const CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity *a2)
{
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)this = &unk_1EDD0BF60;
  *(void *)((char *)this + 22) = 0;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 4) = 0u;
  *((_OWORD *)this + 5) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::MergeFrom(this, a2);
  return this;
}

void sub_18DF73C7C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity *this, const CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity *a2)
{
  int v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v23);
  }
  int v4 = *((_DWORD *)a2 + 23);
  if (!(_BYTE)v4) {
    goto LABEL_21;
  }
  if (v4)
  {
    unsigned int v5 = *((_DWORD *)a2 + 2);
    this = (CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity *)CoreNavigation::CLP::LogEntry::PrivateData::DominantMotionModeType_IsValid((CoreNavigation::CLP::LogEntry::PrivateData *)v5);
    if ((this & 1) == 0) {
      __assert_rtn("set_type", "CoreNavigationCLPPrivateDataShared.pb.h", 17631, "::CoreNavigation::CLP::LogEntry::PrivateData::DominantMotionModeType_IsValid(value)");
    }
    *((_DWORD *)v3 + 23) |= 1u;
    *((_DWORD *)v3 + 2) = v5;
    int v4 = *((_DWORD *)a2 + 23);
  }
  if ((v4 & 2) != 0)
  {
    unsigned int v6 = *((_DWORD *)a2 + 3);
    if (v6 >= 4) {
      __assert_rtn("set_confidence", "CoreNavigationCLPPrivateDataShared.pb.h", 17654, "::CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity_ConfidenceType_IsValid(value)");
    }
    *((_DWORD *)v3 + 23) |= 2u;
    *((_DWORD *)v3 + 3) = v6;
    int v4 = *((_DWORD *)a2 + 23);
  }
  if ((v4 & 4) != 0)
  {
    unsigned int v7 = *((_DWORD *)a2 + 4);
    if (v7 >= 3) {
      __assert_rtn("set_mounted_state", "CoreNavigationCLPPrivateDataShared.pb.h", 17677, "::CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity_MountedStateType_IsValid(value)");
    }
    *((_DWORD *)v3 + 23) |= 4u;
    *((_DWORD *)v3 + 4) = v7;
    int v4 = *((_DWORD *)a2 + 23);
  }
  if ((v4 & 8) != 0)
  {
    unsigned int v8 = *((_DWORD *)a2 + 5);
    if (v8 >= 4) {
      __assert_rtn("set_mounted_confidence", "CoreNavigationCLPPrivateDataShared.pb.h", 17700, "::CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity_ConfidenceType_IsValid(value)");
    }
    *((_DWORD *)v3 + 23) |= 8u;
    *((_DWORD *)v3 + 5) = v8;
    int v4 = *((_DWORD *)a2 + 23);
  }
  if ((v4 & 0x10) == 0)
  {
    if ((v4 & 0x20) == 0) {
      goto LABEL_18;
    }
LABEL_53:
    int v21 = *((_DWORD *)a2 + 6);
    *((_DWORD *)v3 + 23) |= 0x20u;
    *((_DWORD *)v3 + 6) = v21;
    int v4 = *((_DWORD *)a2 + 23);
    if ((v4 & 0x40) == 0)
    {
LABEL_19:
      if ((v4 & 0x80) == 0) {
        goto LABEL_21;
      }
      goto LABEL_20;
    }
    goto LABEL_54;
  }
  char v20 = *((unsigned char *)a2 + 28);
  *((_DWORD *)v3 + 23) |= 0x10u;
  *((unsigned char *)v3 + 28) = v20;
  int v4 = *((_DWORD *)a2 + 23);
  if ((v4 & 0x20) != 0) {
    goto LABEL_53;
  }
LABEL_18:
  if ((v4 & 0x40) == 0) {
    goto LABEL_19;
  }
LABEL_54:
  uint64_t v22 = *((void *)a2 + 4);
  *((_DWORD *)v3 + 23) |= 0x40u;
  *((void *)v3 + 4) = v22;
  int v4 = *((_DWORD *)a2 + 23);
  if ((v4 & 0x80) != 0)
  {
LABEL_20:
    char v9 = *((unsigned char *)a2 + 29);
    *((_DWORD *)v3 + 23) |= 0x80u;
    *((unsigned char *)v3 + 29) = v9;
    int v4 = *((_DWORD *)a2 + 23);
  }
LABEL_21:
  if ((v4 & 0xFF00) == 0) {
    return;
  }
  if ((v4 & 0x100) != 0)
  {
    unsigned int v10 = *((_DWORD *)a2 + 12);
    if (v10 >= 4) {
      __assert_rtn("set_exit_state", "CoreNavigationCLPPrivateDataShared.pb.h", 17811, "::CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity_VehicleExitStateType_IsValid(value)");
    }
    *((_DWORD *)v3 + 23) |= 0x100u;
    *((_DWORD *)v3 + 12) = v10;
    int v4 = *((_DWORD *)a2 + 23);
  }
  if ((v4 & 0x200) != 0)
  {
    uint64_t v11 = *((void *)a2 + 5);
    *((_DWORD *)v3 + 23) |= 0x200u;
    *((void *)v3 + 5) = v11;
    int v4 = *((_DWORD *)a2 + 23);
    if ((v4 & 0x400) == 0)
    {
LABEL_27:
      if ((v4 & 0x800) == 0) {
        goto LABEL_28;
      }
      goto LABEL_35;
    }
  }
  else if ((v4 & 0x400) == 0)
  {
    goto LABEL_27;
  }
  uint64_t v12 = *((void *)a2 + 7);
  *((_DWORD *)v3 + 23) |= 0x400u;
  *((void *)v3 + 7) = v12;
  int v4 = *((_DWORD *)a2 + 23);
  if ((v4 & 0x800) == 0)
  {
LABEL_28:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_37;
  }
LABEL_35:
  unsigned int v13 = *((_DWORD *)a2 + 13);
  this = (CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity *)CoreNavigation::CLP::LogEntry::PrivateData::DominantMotionModeType_IsValid((CoreNavigation::CLP::LogEntry::PrivateData *)v13);
  if ((this & 1) == 0) {
    __assert_rtn("set_raw_type", "CoreNavigationCLPPrivateDataShared.pb.h", 17878, "::CoreNavigation::CLP::LogEntry::PrivateData::DominantMotionModeType_IsValid(value)");
  }
  *((_DWORD *)v3 + 23) |= 0x800u;
  *((_DWORD *)v3 + 13) = v13;
  int v4 = *((_DWORD *)a2 + 23);
  if ((v4 & 0x1000) == 0)
  {
LABEL_29:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_39;
  }
LABEL_37:
  unsigned int v14 = *((_DWORD *)a2 + 18);
  if (v14 >= 4) {
    __assert_rtn("set_raw_confidence", "CoreNavigationCLPPrivateDataShared.pb.h", 17901, "::CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity_ConfidenceType_IsValid(value)");
  }
  *((_DWORD *)v3 + 23) |= 0x1000u;
  *((_DWORD *)v3 + 18) = v14;
  int v4 = *((_DWORD *)a2 + 23);
  if ((v4 & 0x2000) == 0)
  {
LABEL_30:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_44;
  }
LABEL_39:
  *((_DWORD *)v3 + 23) |= 0x2000u;
  int v15 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)v3 + 8);
  if (!v15) {
    operator new();
  }
  int v16 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)a2 + 8);
  if (!v16)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    int v16 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::default_instance_
                                                                          + 64);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v15, v16);
  int v4 = *((_DWORD *)a2 + 23);
  if ((v4 & 0x4000) == 0)
  {
LABEL_31:
    if ((v4 & 0x8000) == 0) {
      return;
    }
    goto LABEL_49;
  }
LABEL_44:
  *((_DWORD *)v3 + 23) |= 0x4000u;
  unsigned int v17 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)v3 + 10);
  if (!v17) {
    operator new();
  }
  int v18 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)a2 + 10);
  if (!v18)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    int v18 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::default_instance_
                                                                          + 80);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v17, v18);
  if ((*((_DWORD *)a2 + 23) & 0x8000) != 0)
  {
LABEL_49:
    unsigned int v19 = *((_DWORD *)a2 + 19);
    if (v19 >= 6) {
      __assert_rtn("set_vehicular_confidence", "CoreNavigationCLPPrivateDataShared.pb.h", 18008, "::CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity_VehicularConfidenceType_IsValid(value)");
    }
    *((_DWORD *)v3 + 23) |= 0x8000u;
    *((_DWORD *)v3 + 19) = v19;
  }
}

void sub_18DF7411C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::~MotionActivity(CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity *this)
{
  *(void *)this = &unk_1EDD0BF60;
  CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::~MotionActivity(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity *)CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 8);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 10);
    if (v3)
    {
      int v4 = *(void (**)(void))(*(void *)v3 + 8);
      v4();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 88) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::New(CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 92);
  if ((_BYTE)v1)
  {
    *(void *)(this + 32) = 0;
    *(void *)(this + 8) = 0;
    *(void *)(this + 16) = 0;
    *(void *)(this + 22) = 0;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_DWORD *)(this + 72) = 0;
    *(void *)(this + 48) = 0;
    *(void *)(this + 56) = 0;
    *(void *)(this + 40) = 0;
    if ((v1 & 0x2000) != 0)
    {
      uint64_t v2 = *(void *)(this + 64);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 36))
        {
          *(void *)(v2 + 8) = 0;
          *(void *)(v2 + 16) = 0;
          *(void *)(v2 + 24) = 0;
        }
        *(_DWORD *)(v2 + 36) = 0;
        int v1 = *(_DWORD *)(this + 92);
      }
    }
    if ((v1 & 0x4000) != 0)
    {
      uint64_t v3 = *(void *)(this + 80);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
          *(void *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
      }
    }
    *(_DWORD *)(this + 76) = 0;
  }
  *(_DWORD *)(this + 92) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (2)
  {
    int v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_41;
        }
        v64[0] = 0;
        unsigned int v7 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v7 >= *((void *)a2 + 2) || *v7 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v64);
          if (!result) {
            return result;
          }
          unint64_t v8 = v64[0];
        }
        else
        {
          unint64_t v8 = *v7;
          *((void *)a2 + 1) = v7 + 1;
        }
        if (CoreNavigation::CLP::LogEntry::PrivateData::DominantMotionModeType_IsValid((CoreNavigation::CLP::LogEntry::PrivateData *)v8))
        {
          *((_DWORD *)this + 23) |= 1u;
          *((_DWORD *)this + 2) = v8;
        }
        int v27 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        if ((unint64_t)v27 < v9 && *v27 == 16)
        {
          unsigned int v10 = v27 + 1;
          *((void *)a2 + 1) = v10;
          goto LABEL_52;
        }
        continue;
      case 2u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_41;
        }
        unsigned int v10 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
LABEL_52:
        v64[0] = 0;
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v64);
          if (!result) {
            return result;
          }
          unsigned int v28 = v64[0];
        }
        else
        {
          unsigned int v28 = *v10;
          *((void *)a2 + 1) = v10 + 1;
        }
        if (v28 <= 3)
        {
          *((_DWORD *)this + 23) |= 2u;
          *((_DWORD *)this + 3) = v28;
        }
        int v29 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
        if ((unint64_t)v29 >= v11 || *v29 != 24) {
          continue;
        }
        uint64_t v12 = v29 + 1;
        *((void *)a2 + 1) = v12;
LABEL_62:
        v64[0] = 0;
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v64);
          if (!result) {
            return result;
          }
          unsigned int v30 = v64[0];
        }
        else
        {
          unsigned int v30 = *v12;
          *((void *)a2 + 1) = v12 + 1;
        }
        if (v30 <= 2)
        {
          *((_DWORD *)this + 23) |= 4u;
          *((_DWORD *)this + 4) = v30;
        }
        int v31 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        if ((unint64_t)v31 >= v13 || *v31 != 32) {
          continue;
        }
        unsigned int v14 = v31 + 1;
        *((void *)a2 + 1) = v14;
LABEL_72:
        v64[0] = 0;
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v64);
          if (!result) {
            return result;
          }
          unsigned int v32 = v64[0];
        }
        else
        {
          unsigned int v32 = *v14;
          *((void *)a2 + 1) = v14 + 1;
        }
        if (v32 <= 3)
        {
          *((_DWORD *)this + 23) |= 8u;
          *((_DWORD *)this + 5) = v32;
        }
        unsigned int v33 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        if ((unint64_t)v33 >= v15 || *v33 != 40) {
          continue;
        }
        int v16 = v33 + 1;
        *((void *)a2 + 1) = v16;
LABEL_82:
        v64[0] = 0;
        if ((unint64_t)v16 >= v15 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v64);
          if (!result) {
            return result;
          }
          unsigned int v34 = v64[0];
          int v35 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v34 = *v16;
          int v35 = v16 + 1;
          *((void *)a2 + 1) = v35;
        }
        *((unsigned char *)this + 28) = v34 != 0;
        *((_DWORD *)this + 23) |= 0x10u;
        if ((unint64_t)v35 >= v15 || *v35 != 53) {
          continue;
        }
        *((void *)a2 + 1) = v35 + 1;
LABEL_90:
        v64[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v64) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 6) = v64[0];
        *((_DWORD *)this + 23) |= 0x20u;
        int v36 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v36 >= *((void *)a2 + 2) || *v36 != 57) {
          continue;
        }
        *((void *)a2 + 1) = v36 + 1;
LABEL_94:
        *(void *)int v64 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v64) & 1) == 0)return 0; {
        *((void *)this + 4) = *(void *)v64;
        }
        *((_DWORD *)this + 23) |= 0x40u;
        int v37 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v17 = *((void *)a2 + 2);
        if ((unint64_t)v37 >= v17 || *v37 != 64) {
          continue;
        }
        int v18 = v37 + 1;
        *((void *)a2 + 1) = v18;
LABEL_98:
        v64[0] = 0;
        if ((unint64_t)v18 >= v17 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v64);
          if (!result) {
            return result;
          }
          unsigned int v38 = v64[0];
          int v39 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v17 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v38 = *v18;
          int v39 = v18 + 1;
          *((void *)a2 + 1) = v39;
        }
        *((unsigned char *)this + 29) = v38 != 0;
        *((_DWORD *)this + 23) |= 0x80u;
        if ((unint64_t)v39 >= v17 || *v39 != 72) {
          continue;
        }
        unsigned int v19 = v39 + 1;
        *((void *)a2 + 1) = v19;
LABEL_106:
        v64[0] = 0;
        if ((unint64_t)v19 >= v17 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v64);
          if (!result) {
            return result;
          }
          unsigned int v40 = v64[0];
        }
        else
        {
          unsigned int v40 = *v19;
          *((void *)a2 + 1) = v19 + 1;
        }
        if (v40 <= 3)
        {
          *((_DWORD *)this + 23) |= 0x100u;
          *((_DWORD *)this + 12) = v40;
        }
        unint64_t v41 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v41 >= *((void *)a2 + 2) || *v41 != 81) {
          continue;
        }
        *((void *)a2 + 1) = v41 + 1;
LABEL_116:
        *(void *)int v64 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v64) & 1) == 0)return 0; {
        *((void *)this + 5) = *(void *)v64;
        }
        *((_DWORD *)this + 23) |= 0x200u;
        char v42 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v42 >= *((void *)a2 + 2) || *v42 != 89) {
          continue;
        }
        *((void *)a2 + 1) = v42 + 1;
LABEL_120:
        *(void *)int v64 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v64) & 1) == 0)return 0; {
        *((void *)this + 7) = *(void *)v64;
        }
        *((_DWORD *)this + 23) |= 0x400u;
        int v43 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v20 = *((void *)a2 + 2);
        if ((unint64_t)v43 >= v20 || *v43 != 96) {
          continue;
        }
        int v21 = v43 + 1;
        *((void *)a2 + 1) = v21;
LABEL_124:
        v64[0] = 0;
        if ((unint64_t)v21 >= v20 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v64);
          if (!result) {
            return result;
          }
          unint64_t v44 = v64[0];
        }
        else
        {
          unint64_t v44 = *v21;
          *((void *)a2 + 1) = v21 + 1;
        }
        if (CoreNavigation::CLP::LogEntry::PrivateData::DominantMotionModeType_IsValid((CoreNavigation::CLP::LogEntry::PrivateData *)v44))
        {
          *((_DWORD *)this + 23) |= 0x800u;
          *((_DWORD *)this + 13) = v44;
        }
        int v45 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v22 = *((void *)a2 + 2);
        if ((unint64_t)v45 >= v22 || *v45 != 104) {
          continue;
        }
        uint64_t v23 = v45 + 1;
        *((void *)a2 + 1) = v23;
LABEL_134:
        v64[0] = 0;
        if ((unint64_t)v23 >= v22 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v64);
          if (!result) {
            return result;
          }
          unsigned int v46 = v64[0];
        }
        else
        {
          unsigned int v46 = *v23;
          *((void *)a2 + 1) = v23 + 1;
        }
        if (v46 <= 3)
        {
          *((_DWORD *)this + 23) |= 0x1000u;
          *((_DWORD *)this + 18) = v46;
        }
        int v47 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v47 >= *((void *)a2 + 2) || *v47 != 114) {
          continue;
        }
        *((void *)a2 + 1) = v47 + 1;
LABEL_144:
        *((_DWORD *)this + 23) |= 0x2000u;
        unsigned int v48 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 8);
        if (!v48) {
          operator new();
        }
        v64[0] = 0;
        unint64_t v49 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v49 >= *((void *)a2 + 2) || *v49 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v64))return 0; {
        }
          }
        else
        {
          v64[0] = *v49;
          *((void *)a2 + 1) = v49 + 1;
        }
        int v50 = *((_DWORD *)a2 + 14);
        int v51 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v50 + 1;
        if (v50 >= v51) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream(v48, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v52 = *((_DWORD *)a2 + 14);
        BOOL v53 = __OFSUB__(v52, 1);
        int v54 = v52 - 1;
        if (v54 < 0 == v53) {
          *((_DWORD *)a2 + 14) = v54;
        }
        int v55 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v55 >= *((void *)a2 + 2) || *v55 != 122) {
          continue;
        }
        *((void *)a2 + 1) = v55 + 1;
LABEL_158:
        *((_DWORD *)this + 23) |= 0x4000u;
        int v56 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 10);
        if (!v56) {
          operator new();
        }
        v64[0] = 0;
        int v57 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v57 >= *((void *)a2 + 2) || *v57 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v64))return 0; {
        }
          }
        else
        {
          v64[0] = *v57;
          *((void *)a2 + 1) = v57 + 1;
        }
        int v58 = *((_DWORD *)a2 + 14);
        int v59 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v58 + 1;
        if (v58 < v59)
        {
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream(v56, a2))
          {
            if (*((unsigned char *)a2 + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
              int v60 = *((_DWORD *)a2 + 14);
              BOOL v53 = __OFSUB__(v60, 1);
              int v61 = v60 - 1;
              if (v61 < 0 == v53) {
                *((_DWORD *)a2 + 14) = v61;
              }
              int v62 = (unsigned __int8 *)*((void *)a2 + 1);
              unint64_t v24 = *((void *)a2 + 2);
              if ((int)v24 - (int)v62 > 1 && *v62 == 128 && v62[1] == 1)
              {
                unsigned int v25 = (char *)(v62 + 2);
                *((void *)a2 + 1) = v25;
LABEL_173:
                v64[0] = 0;
                if ((unint64_t)v25 >= v24 || *v25 < 0)
                {
                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v64);
                  if (!result) {
                    return result;
                  }
                  unsigned int v63 = v64[0];
                }
                else
                {
                  unsigned int v63 = *v25;
                  *((void *)a2 + 1) = v25 + 1;
                }
                if (v63 <= 5)
                {
                  *((_DWORD *)this + 23) |= 0x8000u;
                  *((_DWORD *)this + 19) = v63;
                }
                if (*((void *)a2 + 1) == *((void *)a2 + 2)
                  && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                {
                  *((_DWORD *)a2 + 8) = 0;
                  uint64_t result = 1;
                  *((unsigned char *)a2 + 36) = 1;
                  return result;
                }
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_41;
        }
        uint64_t v12 = (char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
        goto LABEL_62;
      case 4u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_41;
        }
        unsigned int v14 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_72;
      case 5u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_41;
        }
        int v16 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_82;
      case 6u:
        int v6 = TagFallback & 7;
        if (v6 == 5) {
          goto LABEL_90;
        }
        goto LABEL_41;
      case 7u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_94;
        }
        goto LABEL_41;
      case 8u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_41;
        }
        int v18 = (char *)*((void *)a2 + 1);
        unint64_t v17 = *((void *)a2 + 2);
        goto LABEL_98;
      case 9u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_41;
        }
        unsigned int v19 = (char *)*((void *)a2 + 1);
        unint64_t v17 = *((void *)a2 + 2);
        goto LABEL_106;
      case 0xAu:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_116;
        }
        goto LABEL_41;
      case 0xBu:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_120;
        }
        goto LABEL_41;
      case 0xCu:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_41;
        }
        int v21 = (char *)*((void *)a2 + 1);
        unint64_t v20 = *((void *)a2 + 2);
        goto LABEL_124;
      case 0xDu:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_41;
        }
        uint64_t v23 = (char *)*((void *)a2 + 1);
        unint64_t v22 = *((void *)a2 + 2);
        goto LABEL_134;
      case 0xEu:
        int v6 = TagFallback & 7;
        if (v6 == 2) {
          goto LABEL_144;
        }
        goto LABEL_41;
      case 0xFu:
        int v6 = TagFallback & 7;
        if (v6 == 2) {
          goto LABEL_158;
        }
        goto LABEL_41;
      case 0x10u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_41;
        }
        unsigned int v25 = (char *)*((void *)a2 + 1);
        unint64_t v24 = *((void *)a2 + 2);
        goto LABEL_173;
      default:
        int v6 = TagFallback & 7;
LABEL_41:
        if (v6 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

unsigned int *CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::SerializeWithCachedSizes(unsigned int *this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  unsigned int v5 = this;
  unsigned int v6 = this[23];
  if (v6)
  {
    this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, this[2], (uint64_t)a2, a4);
    unsigned int v6 = v5[23];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_20;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], (uint64_t)a2, a4);
  unsigned int v6 = v5[23];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_21;
  }
LABEL_20:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], (uint64_t)a2, a4);
  unsigned int v6 = v5[23];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_22;
  }
LABEL_21:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], (uint64_t)a2, a4);
  unsigned int v6 = v5[23];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_23;
  }
LABEL_22:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *((unsigned __int8 *)v5 + 28), (uint64_t)a2, a4);
  unsigned int v6 = v5[23];
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_24;
  }
LABEL_23:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *((float *)v5 + 6), a3);
  unsigned int v6 = v5[23];
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_25;
  }
LABEL_24:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (uint64_t)a2, *((double *)v5 + 4), a3);
  unsigned int v6 = v5[23];
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_26;
  }
LABEL_25:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *((unsigned __int8 *)v5 + 29), (uint64_t)a2, a4);
  unsigned int v6 = v5[23];
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_27;
  }
LABEL_26:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v5[12], (uint64_t)a2, a4);
  unsigned int v6 = v5[23];
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_28;
  }
LABEL_27:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (uint64_t)a2, *((double *)v5 + 5), a3);
  unsigned int v6 = v5[23];
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_29;
  }
LABEL_28:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, (uint64_t)a2, *((double *)v5 + 7), a3);
  unsigned int v6 = v5[23];
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_30;
  }
LABEL_29:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, v5[13], (uint64_t)a2, a4);
  unsigned int v6 = v5[23];
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_31;
  }
LABEL_30:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, v5[18], (uint64_t)a2, a4);
  unsigned int v6 = v5[23];
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_34;
  }
LABEL_31:
  uint64_t v7 = *((void *)v5 + 8);
  if (!v7)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::default_instance_ + 64);
  }
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, v7, a2, a4);
  unsigned int v6 = v5[23];
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0) {
      return this;
    }
    goto LABEL_37;
  }
LABEL_34:
  uint64_t v8 = *((void *)v5 + 10);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v8 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::default_instance_ + 80);
  }
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, v8, a2, a4);
  if ((v5[23] & 0x8000) != 0)
  {
LABEL_37:
    uint64_t v9 = v5[19];
    return (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, v9, (uint64_t)a2, a4);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::ByteSize(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 92);
  if (!(_BYTE)v2)
  {
    uint64_t v4 = 0;
    goto LABEL_42;
  }
  if ((v2 & 1) == 0)
  {
    int v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  unsigned int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(this + 8);
  if ((v5 & 0x80000000) != 0)
  {
    this = 10;
  }
  else if (v5 >= 0x80)
  {
    this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
    int v2 = *(_DWORD *)(v1 + 92);
  }
  else
  {
    this = 1;
  }
  int v3 = this + 1;
  if ((v2 & 2) != 0)
  {
LABEL_12:
    unsigned int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 12);
    if ((v6 & 0x80000000) != 0)
    {
      this = 10;
    }
    else if (v6 >= 0x80)
    {
      this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
      int v2 = *(_DWORD *)(v1 + 92);
    }
    else
    {
      this = 1;
    }
    v3 += this + 1;
  }
LABEL_18:
  if ((v2 & 4) != 0)
  {
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 16);
    if ((v7 & 0x80000000) != 0)
    {
      this = 10;
    }
    else if (v7 >= 0x80)
    {
      this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7);
      int v2 = *(_DWORD *)(v1 + 92);
    }
    else
    {
      this = 1;
    }
    v3 += this + 1;
    if ((v2 & 8) == 0) {
      goto LABEL_33;
    }
    goto LABEL_27;
  }
  if ((v2 & 8) != 0)
  {
LABEL_27:
    uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 20);
    if ((v8 & 0x80000000) != 0)
    {
      this = 10;
    }
    else if (v8 >= 0x80)
    {
      this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
      int v2 = *(_DWORD *)(v1 + 92);
    }
    else
    {
      this = 1;
    }
    v3 += this + 1;
  }
LABEL_33:
  unsigned int v9 = v3 + 2;
  if ((v2 & 0x10) == 0) {
    unsigned int v9 = v3;
  }
  if ((v2 & 0x20) != 0) {
    v9 += 5;
  }
  if ((v2 & 0x40) != 0) {
    v9 += 9;
  }
  if ((v2 & 0x80) != 0) {
    uint64_t v4 = v9 + 2;
  }
  else {
    uint64_t v4 = v9;
  }
LABEL_42:
  if ((v2 & 0xFF00) == 0) {
    goto LABEL_99;
  }
  if ((v2 & 0x100) != 0)
  {
    this = *(unsigned int *)(v1 + 48);
    if ((this & 0x80000000) != 0)
    {
      int v10 = 11;
    }
    else if (this >= 0x80)
    {
      this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)this);
      int v10 = this + 1;
      int v2 = *(_DWORD *)(v1 + 92);
    }
    else
    {
      int v10 = 2;
    }
    LODWORD(v4) = v10 + v4;
  }
  unsigned int v11 = v4 + 9;
  if ((v2 & 0x200) == 0) {
    unsigned int v11 = v4;
  }
  if ((v2 & 0x400) != 0) {
    uint64_t v4 = v11 + 9;
  }
  else {
    uint64_t v4 = v11;
  }
  if ((v2 & 0x800) != 0)
  {
    this = *(unsigned int *)(v1 + 52);
    if ((this & 0x80000000) != 0)
    {
      int v12 = 11;
    }
    else if (this >= 0x80)
    {
      this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)this);
      int v12 = this + 1;
      int v2 = *(_DWORD *)(v1 + 92);
    }
    else
    {
      int v12 = 2;
    }
    uint64_t v4 = (v12 + v4);
    if ((v2 & 0x1000) == 0)
    {
LABEL_57:
      if ((v2 & 0x2000) == 0) {
        goto LABEL_58;
      }
      goto LABEL_73;
    }
  }
  else if ((v2 & 0x1000) == 0)
  {
    goto LABEL_57;
  }
  this = *(unsigned int *)(v1 + 72);
  if ((this & 0x80000000) != 0)
  {
    int v13 = 11;
  }
  else if (this >= 0x80)
  {
    this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)this);
    int v13 = this + 1;
    int v2 = *(_DWORD *)(v1 + 92);
  }
  else
  {
    int v13 = 2;
  }
  uint64_t v4 = (v13 + v4);
  if ((v2 & 0x2000) == 0)
  {
LABEL_58:
    if ((v2 & 0x4000) == 0) {
      goto LABEL_59;
    }
    goto LABEL_83;
  }
LABEL_73:
  uint64_t v14 = *(void *)(v1 + 64);
  if (!v14)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v14 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::default_instance_ + 64);
  }
  int v15 = *(unsigned __int8 *)(v14 + 36);
  int v16 = (v15 << 31 >> 31) & 9;
  if ((v15 & 2) != 0) {
    v16 += 9;
  }
  if ((v15 & 4) != 0) {
    v16 += 9;
  }
  if (*(unsigned char *)(v14 + 36)) {
    int v17 = v16;
  }
  else {
    int v17 = 0;
  }
  *(_DWORD *)(v14 + 32) = v17;
  uint64_t v4 = (v4 + v17 + 2);
  int v2 = *(_DWORD *)(v1 + 92);
  if ((v2 & 0x4000) == 0)
  {
LABEL_59:
    if ((v2 & 0x8000) == 0) {
      goto LABEL_99;
    }
    goto LABEL_93;
  }
LABEL_83:
  uint64_t v18 = *(void *)(v1 + 80);
  if (!v18)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v18 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::default_instance_ + 80);
  }
  int v19 = *(unsigned __int8 *)(v18 + 36);
  int v20 = (v19 << 31 >> 31) & 9;
  if ((v19 & 2) != 0) {
    v20 += 9;
  }
  if ((v19 & 4) != 0) {
    v20 += 9;
  }
  if (*(unsigned char *)(v18 + 36)) {
    int v21 = v20;
  }
  else {
    int v21 = 0;
  }
  *(_DWORD *)(v18 + 32) = v21;
  uint64_t v4 = (v4 + v21 + 2);
  if ((*(_DWORD *)(v1 + 92) & 0x8000) != 0)
  {
LABEL_93:
    unint64_t v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 76);
    if ((v22 & 0x80000000) != 0)
    {
      int v23 = 12;
    }
    else if (v22 >= 0x80)
    {
      int v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22) + 2;
    }
    else
    {
      int v23 = 3;
    }
    uint64_t v4 = (v23 + v4);
  }
LABEL_99:
  *(_DWORD *)(v1 + 88) = v4;
  return v4;
}

void CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity *this, const CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::Swap(CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity *this, CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity *a2)
{
  if (a2 != this)
  {
    int v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    int v3 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    int v4 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v4;
    int v5 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v5;
    LOBYTE(v5) = *((unsigned char *)this + 28);
    *((unsigned char *)this + 28) = *((unsigned char *)a2 + 28);
    *((unsigned char *)a2 + 28) = v5;
    int v6 = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v6;
    uint64_t v7 = *((void *)this + 4);
    *((void *)this + 4) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v7;
    LOBYTE(v5) = *((unsigned char *)this + 29);
    *((unsigned char *)this + 29) = *((unsigned char *)a2 + 29);
    *((unsigned char *)a2 + 29) = v5;
    int v8 = *((_DWORD *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v8;
    uint64_t v9 = *((void *)this + 5);
    *((void *)this + 5) = *((void *)a2 + 5);
    *((void *)a2 + 5) = v9;
    double result = *((double *)this + 7);
    *((void *)this + 7) = *((void *)a2 + 7);
    *((double *)a2 + 7) = result;
    int v11 = *((_DWORD *)this + 13);
    *((_DWORD *)this + 13) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v11;
    int v12 = *((_DWORD *)this + 18);
    *((_DWORD *)this + 18) = *((_DWORD *)a2 + 18);
    *((_DWORD *)a2 + 18) = v12;
    uint64_t v13 = *((void *)this + 8);
    *((void *)this + 8) = *((void *)a2 + 8);
    *((void *)a2 + 8) = v13;
    uint64_t v14 = *((void *)this + 10);
    *((void *)this + 10) = *((void *)a2 + 10);
    *((void *)a2 + 10) = v14;
    LODWORD(v14) = *((_DWORD *)this + 19);
    *((_DWORD *)this + 19) = *((_DWORD *)a2 + 19);
    *((_DWORD *)a2 + 19) = v14;
    LODWORD(v14) = *((_DWORD *)this + 23);
    *((_DWORD *)this + 23) = *((_DWORD *)a2 + 23);
    *((_DWORD *)a2 + 23) = v14;
    LODWORD(v14) = *((_DWORD *)this + 22);
    *((_DWORD *)this + 22) = *((_DWORD *)a2 + 22);
    *((_DWORD *)a2 + 22) = v14;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.MotionActivity");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionState::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(void *)(this + 24) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::MotionState *CoreNavigation::CLP::LogEntry::PrivateData::MotionState::MotionState(CoreNavigation::CLP::LogEntry::PrivateData::MotionState *this, const CoreNavigation::CLP::LogEntry::PrivateData::MotionState *a2)
{
  *(void *)this = &unk_1EDD0B768;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::MotionState::MergeFrom(this, a2);
  return this;
}

void sub_18DF75544(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MotionState::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::MotionState *this, const CoreNavigation::CLP::LogEntry::PrivateData::MotionState *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 32))
    {
      *((_DWORD *)this + 8) |= 1u;
      int v5 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
      if (!v5) {
        operator new();
      }
      int v6 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)a2 + 1);
      if (!v6)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
        int v6 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::MotionState::default_instance_
                                                                             + 8);
      }
      CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v5, v6);
      int v4 = *((_DWORD *)a2 + 8);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          return;
        }
        goto LABEL_14;
      }
    }
    else if ((*((unsigned char *)a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v7 = *((_DWORD *)a2 + 6);
    *((_DWORD *)this + 8) |= 2u;
    *((_DWORD *)this + 6) = v7;
    if ((*((_DWORD *)a2 + 8) & 4) == 0) {
      return;
    }
LABEL_14:
    *((_DWORD *)this + 8) |= 4u;
    int v8 = (CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity *)*((void *)this + 2);
    if (!v8) {
      operator new();
    }
    uint64_t v9 = (const CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity *)*((void *)a2 + 2);
    if (!v9)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      uint64_t v9 = *(const CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity **)(CoreNavigation::CLP::LogEntry::PrivateData::MotionState::default_instance_
                                                                                + 16);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::MergeFrom(v8, v9);
  }
}

void sub_18DF7570C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MotionState::~MotionState(CoreNavigation::CLP::LogEntry::PrivateData::MotionState *this)
{
  *(void *)this = &unk_1EDD0B768;
  CoreNavigation::CLP::LogEntry::PrivateData::MotionState::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::MotionState::~MotionState(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MotionState::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::MotionState *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::MotionState *)CoreNavigation::CLP::LogEntry::PrivateData::MotionState::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 2);
    if (v3)
    {
      int v4 = *(void (**)(void))(*(void *)v3 + 8);
      v4();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionState::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::MotionState *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::MotionState::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionState::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 28) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::MotionState::New(CoreNavigation::CLP::LogEntry::PrivateData::MotionState *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionState::Clear(uint64_t this)
{
  uint64_t v1 = this;
  LOBYTE(v2) = *(unsigned char *)(this + 32);
  if ((_BYTE)v2)
  {
    if (*(unsigned char *)(this + 32))
    {
      uint64_t v3 = *(void *)(this + 8);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
          *(void *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        int v2 = *(_DWORD *)(this + 32);
      }
    }
    *(_DWORD *)(this + 24) = 0;
    if ((v2 & 4) != 0)
    {
      this = *(void *)(this + 16);
      if (this) {
        this = CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::Clear(this);
      }
    }
  }
  *(_DWORD *)(v1 + 32) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionState::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::MotionState *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (1)
  {
    do
    {
      while (1)
      {
        while (1)
        {
          int v4 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
          {
            unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
            *((_DWORD *)a2 + 8) = TagFallback;
            if (!TagFallback) {
              return 1;
            }
          }
          else
          {
            unint64_t TagFallback = *v4;
            *((_DWORD *)a2 + 8) = TagFallback;
            *((void *)a2 + 1) = v4 + 1;
            if (!TagFallback) {
              return 1;
            }
          }
          unsigned int v6 = TagFallback >> 3;
          if (TagFallback >> 3 != 1) {
            break;
          }
          int v7 = TagFallback & 7;
          if (v7 != 2) {
            goto LABEL_20;
          }
          *((_DWORD *)this + 8) |= 1u;
          uint64_t v9 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
          if (!v9) {
            operator new();
          }
          unsigned int v29 = 0;
          int v10 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v29))return 0; {
          }
            }
          else
          {
            unsigned int v29 = *v10;
            *((void *)a2 + 1) = v10 + 1;
          }
          int v13 = *((_DWORD *)a2 + 14);
          int v14 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v13 + 1;
          if (v13 >= v14) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream(v9, a2)
            || !*((unsigned char *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          int v15 = *((_DWORD *)a2 + 14);
          BOOL v16 = __OFSUB__(v15, 1);
          int v17 = v15 - 1;
          if (v17 < 0 == v16) {
            *((_DWORD *)a2 + 14) = v17;
          }
          uint64_t v18 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v11 = *((void *)a2 + 2);
          if ((unint64_t)v18 < v11 && *v18 == 16)
          {
            int v12 = v18 + 1;
            *((void *)a2 + 1) = v12;
            goto LABEL_32;
          }
        }
        if (v6 == 2) {
          break;
        }
        if (v6 == 3)
        {
          int v7 = TagFallback & 7;
          if (v7 == 2)
          {
            int v8 = *((_DWORD *)this + 8);
            goto LABEL_40;
          }
        }
        else
        {
          int v7 = TagFallback & 7;
        }
LABEL_20:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
      }
        }
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_20;
      }
      int v12 = (char *)*((void *)a2 + 1);
      unint64_t v11 = *((void *)a2 + 2);
LABEL_32:
      unsigned int v28 = 0;
      if ((unint64_t)v12 >= v11 || *v12 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v28);
        if (!result) {
          return result;
        }
        unsigned int v19 = v28;
        int v20 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
      }
      else
      {
        unsigned int v19 = *v12;
        int v20 = v12 + 1;
        *((void *)a2 + 1) = v20;
      }
      *((_DWORD *)this + 6) = v19;
      int v8 = *((_DWORD *)this + 8) | 2;
      *((_DWORD *)this + 8) = v8;
    }
    while ((unint64_t)v20 >= v11 || *v20 != 26);
    *((void *)a2 + 1) = v20 + 1;
LABEL_40:
    *((_DWORD *)this + 8) = v8 | 4;
    unint64_t v22 = (CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity *)*((void *)this + 2);
    if (!v22) {
      operator new();
    }
    unsigned int v30 = 0;
    int v23 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v23 >= *((void *)a2 + 2) || *v23 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30)) {
        return 0;
      }
    }
    else
    {
      unsigned int v30 = *v23;
      *((void *)a2 + 1) = v23 + 1;
    }
    int v24 = *((_DWORD *)a2 + 14);
    int v25 = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 14) = v24 + 1;
    if (v24 >= v25) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
    if (!CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::MergePartialFromCodedStream(v22, a2)
      || !*((unsigned char *)a2 + 36))
    {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
    int v26 = *((_DWORD *)a2 + 14);
    BOOL v16 = __OFSUB__(v26, 1);
    int v27 = v26 - 1;
    if (v27 < 0 == v16) {
      *((_DWORD *)a2 + 14) = v27;
    }
    if (*((void *)a2 + 1) == *((void *)a2 + 2)
      && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
    {
      *((_DWORD *)a2 + 8) = 0;
      uint64_t result = 1;
      *((unsigned char *)a2 + 36) = 1;
      return result;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionState::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 32);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_8:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 32) & 4) == 0) {
      return this;
    }
    goto LABEL_9;
  }
  uint64_t v7 = *(void *)(this + 8);
  if (!v7)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::MotionState::default_instance_ + 8);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 2) != 0) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return this;
  }
LABEL_9:
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v8 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::MotionState::default_instance_ + 16);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionState::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::MotionState *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 32);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_28;
  }
  if (*((unsigned char *)this + 32))
  {
    uint64_t v4 = *((void *)this + 1);
    if (!v4)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      uint64_t v4 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::MotionState::default_instance_ + 8);
    }
    int v5 = *(unsigned __int8 *)(v4 + 36);
    if (*(unsigned char *)(v4 + 36))
    {
      int v6 = (v5 << 31 >> 31) & 9;
      if ((v5 & 2) != 0) {
        v6 += 9;
      }
      if ((v5 & 4) != 0) {
        int v5 = v6 + 9;
      }
      else {
        int v5 = v6;
      }
    }
    *(_DWORD *)(v4 + 32) = v5;
    uint64_t v3 = (v5 + 2);
    int v2 = *((_DWORD *)this + 8);
    if ((v2 & 2) == 0) {
      goto LABEL_21;
    }
  }
  else
  {
    uint64_t v3 = 0;
    if ((*((unsigned char *)this + 32) & 2) == 0) {
      goto LABEL_21;
    }
  }
  uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  if ((v7 & 0x80000000) != 0)
  {
    int v8 = 11;
  }
  else if (v7 >= 0x80)
  {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7) + 1;
    int v2 = *((_DWORD *)this + 8);
  }
  else
  {
    int v8 = 2;
  }
  uint64_t v3 = (v8 + v3);
LABEL_21:
  if ((v2 & 4) != 0)
  {
    uint64_t v9 = *((void *)this + 2);
    if (!v9)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(0);
      uint64_t v9 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::MotionState::default_instance_ + 16);
    }
    int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::ByteSize(v9);
    int v11 = (int)v10;
    if (v10 >= 0x80) {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
    }
    else {
      int v12 = 1;
    }
    uint64_t v3 = (v3 + v11 + v12 + 1);
  }
LABEL_28:
  *((_DWORD *)this + 7) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::PrivateData::MotionState::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::MotionState *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::MotionState::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MotionState::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::MotionState *this, const CoreNavigation::CLP::LogEntry::PrivateData::MotionState *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::MotionState *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::MotionState::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionState::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::MotionState *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionState::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::MotionState *a2)
{
  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::MotionState *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    uint64_t v3 = *(void *)(this + 16);
    *(void *)(this + 16) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v3;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::MotionState::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.MotionState");
}

double CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate *this)
{
  double result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate *CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::WorkoutUpdate(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate *this, const CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate *a2)
{
  *(void *)this = &unk_1EDD0BC18;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::MergeFrom(this, a2);
  return this;
}

void sub_18DF760A4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate *this, const CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate *a2)
{
  uint64_t v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 36);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 36))
    {
      unsigned int v5 = *((_DWORD *)a2 + 4);
      this = (CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate *)CoreNavigation::CLP::LogEntry::PrivateData::DominantMotionModeType_IsValid((CoreNavigation::CLP::LogEntry::PrivateData *)v5);
      if ((this & 1) == 0) {
        __assert_rtn("set_activity_type", "CoreNavigationCLPPrivateDataShared.pb.h", 18145, "::CoreNavigation::CLP::LogEntry::PrivateData::DominantMotionModeType_IsValid(value)");
      }
      *((_DWORD *)v3 + 9) |= 1u;
      *((_DWORD *)v3 + 4) = v5;
      int v4 = *((_DWORD *)a2 + 9);
    }
    if ((v4 & 2) != 0)
    {
      uint64_t v6 = *((void *)a2 + 1);
      *((_DWORD *)v3 + 9) |= 2u;
      *((void *)v3 + 1) = v6;
      int v4 = *((_DWORD *)a2 + 9);
      if ((v4 & 4) == 0)
      {
LABEL_9:
        if ((v4 & 8) == 0) {
          return;
        }
        goto LABEL_17;
      }
    }
    else if ((v4 & 4) == 0)
    {
      goto LABEL_9;
    }
    *((_DWORD *)v3 + 9) |= 4u;
    uint64_t v7 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)v3 + 3);
    if (!v7) {
      operator new();
    }
    int v8 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)a2 + 3);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      int v8 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::default_instance_
                                                                           + 24);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v7, v8);
    if ((*((_DWORD *)a2 + 9) & 8) != 0)
    {
LABEL_17:
      uint64_t v9 = (CoreNavigation::CLP::LogEntry::PrivateData *)*((unsigned int *)a2 + 5);
      if ((CoreNavigation::CLP::LogEntry::PrivateData::DominantMotionModeType_IsValid(v9) & 1) == 0) {
        __assert_rtn("set_predicted_workout_type", "CoreNavigationCLPPrivateDataShared.pb.h", 18232, "::CoreNavigation::CLP::LogEntry::PrivateData::DominantMotionModeType_IsValid(value)");
      }
      *((_DWORD *)v3 + 9) |= 8u;
      *((_DWORD *)v3 + 5) = v9;
    }
  }
}

void sub_18DF76270(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::~WorkoutUpdate(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate *this)
{
  *(void *)this = &unk_1EDD0BC18;
  CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::~WorkoutUpdate(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate *)CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 3);
    if (v2)
    {
      uint64_t v3 = *(void (**)(void))(*(void *)v2 + 8);
      v3();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 32) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::New(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::Clear(uint64_t this)
{
  char v1 = *(unsigned char *)(this + 36);
  if (v1)
  {
    *(_DWORD *)(this + 16) = 0;
    *(void *)(this + 8) = 0;
    if ((v1 & 4) != 0)
    {
      uint64_t v2 = *(void *)(this + 24);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 36))
        {
          *(void *)(v2 + 8) = 0;
          *(void *)(v2 + 16) = 0;
          *(void *)(v2 + 24) = 0;
        }
        *(_DWORD *)(v2 + 36) = 0;
      }
    }
    *(_DWORD *)(this + 20) = 0;
  }
  *(_DWORD *)(this + 36) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (2)
  {
    int v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        v24[0] = 0;
        uint64_t v7 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v7 >= *((void *)a2 + 2) || *v7 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v24);
          if (!result) {
            return result;
          }
          unint64_t v8 = v24[0];
        }
        else
        {
          unint64_t v8 = *v7;
          *((void *)a2 + 1) = v7 + 1;
        }
        if (CoreNavigation::CLP::LogEntry::PrivateData::DominantMotionModeType_IsValid((CoreNavigation::CLP::LogEntry::PrivateData *)v8))
        {
          *((_DWORD *)this + 9) |= 1u;
          *((_DWORD *)this + 4) = v8;
        }
        int v13 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v13 < *((void *)a2 + 2) && *v13 == 17)
        {
          *((void *)a2 + 1) = v13 + 1;
          goto LABEL_28;
        }
        continue;
      case 2u:
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_17;
        }
LABEL_28:
        *(void *)int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0; {
        *((void *)this + 1) = *(void *)v24;
        }
        int v9 = *((_DWORD *)this + 9) | 2;
        *((_DWORD *)this + 9) = v9;
        int v14 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v14 >= *((void *)a2 + 2) || *v14 != 26) {
          continue;
        }
        *((void *)a2 + 1) = v14 + 1;
LABEL_32:
        *((_DWORD *)this + 9) = v9 | 4;
        int v15 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 3);
        if (!v15) {
          operator new();
        }
        v24[0] = 0;
        BOOL v16 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v16 >= *((void *)a2 + 2) || *v16 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v24))return 0; {
        }
          }
        else
        {
          v24[0] = *v16;
          *((void *)a2 + 1) = v16 + 1;
        }
        int v17 = *((_DWORD *)a2 + 14);
        int v18 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v17 + 1;
        if (v17 < v18)
        {
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream(v15, a2))
          {
            if (*((unsigned char *)a2 + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
              int v19 = *((_DWORD *)a2 + 14);
              BOOL v20 = __OFSUB__(v19, 1);
              int v21 = v19 - 1;
              if (v21 < 0 == v20) {
                *((_DWORD *)a2 + 14) = v21;
              }
              unint64_t v22 = (unsigned char *)*((void *)a2 + 1);
              unint64_t v10 = *((void *)a2 + 2);
              if ((unint64_t)v22 < v10 && *v22 == 32)
              {
                int v11 = v22 + 1;
                *((void *)a2 + 1) = v11;
LABEL_46:
                v24[0] = 0;
                if ((unint64_t)v11 >= v10 || *v11 < 0)
                {
                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v24);
                  if (!result) {
                    return result;
                  }
                  unint64_t v23 = v24[0];
                }
                else
                {
                  unint64_t v23 = *v11;
                  *((void *)a2 + 1) = v11 + 1;
                }
                if (CoreNavigation::CLP::LogEntry::PrivateData::DominantMotionModeType_IsValid((CoreNavigation::CLP::LogEntry::PrivateData *)v23))
                {
                  *((_DWORD *)this + 9) |= 8u;
                  *((_DWORD *)this + 5) = v23;
                }
                if (*((void *)a2 + 1) == *((void *)a2 + 2)
                  && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                {
                  *((_DWORD *)a2 + 8) = 0;
                  uint64_t result = 1;
                  *((unsigned char *)a2 + 36) = 1;
                  return result;
                }
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_17;
        }
        int v9 = *((_DWORD *)this + 9);
        goto LABEL_32;
      case 4u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        int v11 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
        goto LABEL_46;
      default:
        int v6 = TagFallback & 7;
LABEL_17:
        if (v6 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

unsigned int *CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::SerializeWithCachedSizes(unsigned int *this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  unsigned int v5 = this;
  unsigned int v6 = this[9];
  if (v6)
  {
    this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, this[4], (uint64_t)a2, a4);
    unsigned int v6 = v5[9];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *((double *)v5 + 1), a3);
  unsigned int v6 = v5[9];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      return this;
    }
    goto LABEL_11;
  }
LABEL_8:
  uint64_t v7 = *((void *)v5 + 3);
  if (!v7)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::default_instance_ + 24);
  }
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
  if ((v5[9] & 8) != 0)
  {
LABEL_11:
    uint64_t v8 = v5[5];
    return (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v8, (uint64_t)a2, a4);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate *this)
{
  char v1 = this;
  LOBYTE(v2) = *((unsigned char *)this + 36);
  if ((_BYTE)v2)
  {
    if (*((unsigned char *)this + 36))
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate *)*((unsigned int *)this + 4);
      if ((this & 0x80000000) != 0)
      {
        unsigned int v3 = 11;
      }
      else if (this >= 0x80)
      {
        this = (CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(this);
        unsigned int v3 = this + 1;
        int v2 = *((_DWORD *)v1 + 9);
      }
      else
      {
        unsigned int v3 = 2;
      }
    }
    else
    {
      unsigned int v3 = 0;
    }
    if ((v2 & 2) != 0) {
      uint64_t v4 = v3 + 9;
    }
    else {
      uint64_t v4 = v3;
    }
    if ((v2 & 4) != 0)
    {
      uint64_t v5 = *((void *)v1 + 3);
      if (!v5)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
        uint64_t v5 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::default_instance_ + 24);
      }
      int v6 = *(unsigned __int8 *)(v5 + 36);
      if (*(unsigned char *)(v5 + 36))
      {
        int v7 = (v6 << 31 >> 31) & 9;
        if ((v6 & 2) != 0) {
          v7 += 9;
        }
        if ((v6 & 4) != 0) {
          int v6 = v7 + 9;
        }
        else {
          int v6 = v7;
        }
      }
      *(_DWORD *)(v5 + 32) = v6;
      uint64_t v4 = (v4 + v6 + 2);
      int v2 = *((_DWORD *)v1 + 9);
    }
    if ((v2 & 8) != 0)
    {
      uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 5);
      if ((v8 & 0x80000000) != 0)
      {
        int v9 = 11;
      }
      else if (v8 >= 0x80)
      {
        int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8) + 1;
      }
      else
      {
        int v9 = 2;
      }
      uint64_t v4 = (v9 + v4);
    }
  }
  else
  {
    uint64_t v4 = 0;
  }
  *((_DWORD *)v1 + 8) = v4;
  return v4;
}

void CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate *this, const CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::Swap(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate *this, CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate *a2)
{
  if (a2 != this)
  {
    int v2 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    double result = *((double *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((double *)a2 + 1) = result;
    uint64_t v4 = *((void *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v4;
    LODWORD(v4) = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v4;
    LODWORD(v4) = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v4;
    LODWORD(v4) = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v4;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.WorkoutUpdate");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(void *)(this + 24) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver *CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::MotionStateObserver(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver *this, const CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver *a2)
{
  *(void *)this = &unk_1EDD0D6D0;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::MergeFrom(this, a2);
  return this;
}

void sub_18DF76B98(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver *this, const CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 32))
    {
      *((_DWORD *)this + 8) |= 1u;
      uint64_t v5 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
      if (!v5) {
        operator new();
      }
      int v6 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)a2 + 1);
      if (!v6)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
        int v6 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::default_instance_
                                                                             + 8);
      }
      CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v5, v6);
      int v4 = *((_DWORD *)a2 + 8);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          return;
        }
        goto LABEL_14;
      }
    }
    else if ((*((unsigned char *)a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v7 = *((_DWORD *)a2 + 6);
    *((_DWORD *)this + 8) |= 2u;
    *((_DWORD *)this + 6) = v7;
    if ((*((_DWORD *)a2 + 8) & 4) == 0) {
      return;
    }
LABEL_14:
    *((_DWORD *)this + 8) |= 4u;
    uint64_t v8 = (CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate *)*((void *)this + 2);
    if (!v8) {
      operator new();
    }
    int v9 = (const CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate *)*((void *)a2 + 2);
    if (!v9)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      int v9 = *(const CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate **)(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::default_instance_
                                                                               + 16);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::MergeFrom(v8, v9);
  }
}

void sub_18DF76D58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::~MotionStateObserver(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver *this)
{
  *(void *)this = &unk_1EDD0D6D0;
  CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::~MotionStateObserver(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver *)CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 2);
    if (v3)
    {
      int v4 = *(void (**)(void))(*(void *)v3 + 8);
      v4();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 28) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::New(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::Clear(uint64_t this)
{
  uint64_t v1 = this;
  LOBYTE(v2) = *(unsigned char *)(this + 32);
  if ((_BYTE)v2)
  {
    if (*(unsigned char *)(this + 32))
    {
      uint64_t v3 = *(void *)(this + 8);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
          *(void *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        int v2 = *(_DWORD *)(this + 32);
      }
    }
    *(_DWORD *)(this + 24) = 0;
    if ((v2 & 4) != 0)
    {
      this = *(void *)(this + 16);
      if (this) {
        this = CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::Clear(this);
      }
    }
  }
  *(_DWORD *)(v1 + 32) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (1)
  {
    do
    {
      while (1)
      {
        while (1)
        {
          int v4 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
          {
            unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
            *((_DWORD *)a2 + 8) = TagFallback;
            if (!TagFallback) {
              return 1;
            }
          }
          else
          {
            unint64_t TagFallback = *v4;
            *((_DWORD *)a2 + 8) = TagFallback;
            *((void *)a2 + 1) = v4 + 1;
            if (!TagFallback) {
              return 1;
            }
          }
          unsigned int v6 = TagFallback >> 3;
          if (TagFallback >> 3 != 1) {
            break;
          }
          int v7 = TagFallback & 7;
          if (v7 != 2) {
            goto LABEL_20;
          }
          *((_DWORD *)this + 8) |= 1u;
          int v9 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
          if (!v9) {
            operator new();
          }
          unsigned int v29 = 0;
          unint64_t v10 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v29))return 0; {
          }
            }
          else
          {
            unsigned int v29 = *v10;
            *((void *)a2 + 1) = v10 + 1;
          }
          int v13 = *((_DWORD *)a2 + 14);
          int v14 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v13 + 1;
          if (v13 >= v14) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream(v9, a2)
            || !*((unsigned char *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          int v15 = *((_DWORD *)a2 + 14);
          BOOL v16 = __OFSUB__(v15, 1);
          int v17 = v15 - 1;
          if (v17 < 0 == v16) {
            *((_DWORD *)a2 + 14) = v17;
          }
          int v18 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v11 = *((void *)a2 + 2);
          if ((unint64_t)v18 < v11 && *v18 == 16)
          {
            int v12 = v18 + 1;
            *((void *)a2 + 1) = v12;
            goto LABEL_32;
          }
        }
        if (v6 == 2) {
          break;
        }
        if (v6 == 3)
        {
          int v7 = TagFallback & 7;
          if (v7 == 2)
          {
            int v8 = *((_DWORD *)this + 8);
            goto LABEL_40;
          }
        }
        else
        {
          int v7 = TagFallback & 7;
        }
LABEL_20:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
      }
        }
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_20;
      }
      int v12 = (char *)*((void *)a2 + 1);
      unint64_t v11 = *((void *)a2 + 2);
LABEL_32:
      unsigned int v28 = 0;
      if ((unint64_t)v12 >= v11 || *v12 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v28);
        if (!result) {
          return result;
        }
        unsigned int v19 = v28;
        BOOL v20 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
      }
      else
      {
        unsigned int v19 = *v12;
        BOOL v20 = v12 + 1;
        *((void *)a2 + 1) = v20;
      }
      *((_DWORD *)this + 6) = v19;
      int v8 = *((_DWORD *)this + 8) | 2;
      *((_DWORD *)this + 8) = v8;
    }
    while ((unint64_t)v20 >= v11 || *v20 != 26);
    *((void *)a2 + 1) = v20 + 1;
LABEL_40:
    *((_DWORD *)this + 8) = v8 | 4;
    unint64_t v22 = (CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate *)*((void *)this + 2);
    if (!v22) {
      operator new();
    }
    unsigned int v30 = 0;
    unint64_t v23 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v23 >= *((void *)a2 + 2) || *v23 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30)) {
        return 0;
      }
    }
    else
    {
      unsigned int v30 = *v23;
      *((void *)a2 + 1) = v23 + 1;
    }
    int v24 = *((_DWORD *)a2 + 14);
    int v25 = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 14) = v24 + 1;
    if (v24 >= v25) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
    if (!CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::MergePartialFromCodedStream(v22, a2)
      || !*((unsigned char *)a2 + 36))
    {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
    int v26 = *((_DWORD *)a2 + 14);
    BOOL v16 = __OFSUB__(v26, 1);
    int v27 = v26 - 1;
    if (v27 < 0 == v16) {
      *((_DWORD *)a2 + 14) = v27;
    }
    if (*((void *)a2 + 1) == *((void *)a2 + 2)
      && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
    {
      *((_DWORD *)a2 + 8) = 0;
      uint64_t result = 1;
      *((unsigned char *)a2 + 36) = 1;
      return result;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 32);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_8:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 32) & 4) == 0) {
      return this;
    }
    goto LABEL_9;
  }
  uint64_t v7 = *(void *)(this + 8);
  if (!v7)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::default_instance_ + 8);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 2) != 0) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return this;
  }
LABEL_9:
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v8 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::default_instance_ + 16);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 32);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_28;
  }
  if (*((unsigned char *)this + 32))
  {
    uint64_t v4 = *((void *)this + 1);
    if (!v4)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      uint64_t v4 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::default_instance_ + 8);
    }
    int v5 = *(unsigned __int8 *)(v4 + 36);
    if (*(unsigned char *)(v4 + 36))
    {
      int v6 = (v5 << 31 >> 31) & 9;
      if ((v5 & 2) != 0) {
        v6 += 9;
      }
      if ((v5 & 4) != 0) {
        int v5 = v6 + 9;
      }
      else {
        int v5 = v6;
      }
    }
    *(_DWORD *)(v4 + 32) = v5;
    uint64_t v3 = (v5 + 2);
    int v2 = *((_DWORD *)this + 8);
    if ((v2 & 2) == 0) {
      goto LABEL_21;
    }
  }
  else
  {
    uint64_t v3 = 0;
    if ((*((unsigned char *)this + 32) & 2) == 0) {
      goto LABEL_21;
    }
  }
  uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  if ((v7 & 0x80000000) != 0)
  {
    int v8 = 11;
  }
  else if (v7 >= 0x80)
  {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7) + 1;
    int v2 = *((_DWORD *)this + 8);
  }
  else
  {
    int v8 = 2;
  }
  uint64_t v3 = (v8 + v3);
LABEL_21:
  if ((v2 & 4) != 0)
  {
    int v9 = (CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate *)*((void *)this + 2);
    if (!v9)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(0);
      int v9 = *(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate **)(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::default_instance_
                                                                         + 16);
    }
    unint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::WorkoutUpdate::ByteSize(v9);
    int v11 = (int)v10;
    if (v10 >= 0x80) {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
    }
    else {
      int v12 = 1;
    }
    uint64_t v3 = (v3 + v11 + v12 + 1);
  }
LABEL_28:
  *((_DWORD *)this + 7) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver *this, const CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver *a2)
{
  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    uint64_t v3 = *(void *)(this + 16);
    *(void *)(this + 16) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v3;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.MotionStateObserver");
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings_WorkoutType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 0x43;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings_WorkoutLocationType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 5;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings_WorkoutMode_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 3;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings::SharedCtor(uint64_t this)
{
  uint64_t v1 = MEMORY[0x1E4FBA920];
  *(void *)(this + 8) = MEMORY[0x1E4FBA920];
  *(void *)(this + 16) = v1;
  *(void *)(this + 24) = 0;
  *(void *)(this + 32) = 0;
  *(_DWORD *)(this + 40) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings *CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings::WorkoutSettings(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings *this, const CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings *a2)
{
  uint64_t v3 = MEMORY[0x1E4FBA920];
  *(void *)this = &unk_1EDD0C6E0;
  *((void *)this + 1) = v3;
  *((void *)this + 2) = v3;
  *((void *)this + 3) = 0;
  *((void *)this + 4) = 0;
  *((_DWORD *)this + 10) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings::MergeFrom(this, a2);
  return this;
}

void sub_18DF77724(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings *this, const CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 40);
  if (!(_BYTE)v4) {
    return;
  }
  int v5 = (std::string *)MEMORY[0x1E4FBA920];
  if (*((unsigned char *)a2 + 40))
  {
    int v6 = (const std::string *)*((void *)a2 + 1);
    *((_DWORD *)this + 10) |= 1u;
    uint64_t v7 = (std::string *)*((void *)this + 1);
    if (v7 == v5) {
      operator new();
    }
    std::string::operator=(v7, v6);
    int v4 = *((_DWORD *)a2 + 10);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
LABEL_16:
      unsigned int v10 = *((_DWORD *)a2 + 6);
      if (v10 >= 0x43) {
        __assert_rtn("set_workout_type", "CoreNavigationCLPPrivateDataShared.pb.h", 18509, "::CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings_WorkoutType_IsValid(value)");
      }
      *((_DWORD *)this + 10) |= 4u;
      *((_DWORD *)this + 6) = v10;
      int v4 = *((_DWORD *)a2 + 10);
      if ((v4 & 8) == 0)
      {
LABEL_8:
        if ((v4 & 0x10) == 0) {
          return;
        }
        goto LABEL_20;
      }
      goto LABEL_18;
    }
  }
  else if ((*((unsigned char *)a2 + 40) & 2) == 0)
  {
    goto LABEL_6;
  }
  int v8 = (const std::string *)*((void *)a2 + 2);
  *((_DWORD *)this + 10) |= 2u;
  int v9 = (std::string *)*((void *)this + 2);
  if (v9 == v5) {
    operator new();
  }
  std::string::operator=(v9, v8);
  int v4 = *((_DWORD *)a2 + 10);
  if ((v4 & 4) != 0) {
    goto LABEL_16;
  }
LABEL_7:
  if ((v4 & 8) == 0) {
    goto LABEL_8;
  }
LABEL_18:
  unsigned int v11 = *((_DWORD *)a2 + 7);
  if (v11 >= 5) {
    __assert_rtn("set_workout_location_type", "CoreNavigationCLPPrivateDataShared.pb.h", 18532, "::CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings_WorkoutLocationType_IsValid(value)");
  }
  *((_DWORD *)this + 10) |= 8u;
  *((_DWORD *)this + 7) = v11;
  if ((*((_DWORD *)a2 + 10) & 0x10) != 0)
  {
LABEL_20:
    unsigned int v12 = *((_DWORD *)a2 + 8);
    if (v12 >= 3) {
      __assert_rtn("set_workout_mode", "CoreNavigationCLPPrivateDataShared.pb.h", 18555, "::CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings_WorkoutMode_IsValid(value)");
    }
    *((_DWORD *)this + 10) |= 0x10u;
    *((_DWORD *)this + 8) = v12;
  }
}

void sub_18DF7793C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings::~WorkoutSettings(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings *this)
{
  *(void *)this = &unk_1EDD0C6E0;
  CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings::~WorkoutSettings(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings *this)
{
  uint64_t v1 = this;
  uint64_t v2 = *((void *)this + 1);
  uint64_t v3 = MEMORY[0x1E4FBA920];
  if (v2 != MEMORY[0x1E4FBA920] && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    this = (CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings *)MEMORY[0x192FA6240](v2, 0x1012C40EC159624);
  }
  uint64_t v5 = *((void *)v1 + 2);
  if (v5 != v3 && v5 != 0)
  {
    if (*(char *)(v5 + 23) < 0) {
      operator delete(*(void **)v5);
    }
    this = (CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings *)MEMORY[0x192FA6240](v5, 0x1012C40EC159624);
  }

  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 36) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings::New(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 40))
  {
    uint64_t v1 = MEMORY[0x1E4FBA920];
    if (*(unsigned char *)(this + 40))
    {
      uint64_t v2 = *(void *)(this + 8);
      if (v2 != MEMORY[0x1E4FBA920])
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
    if ((*(unsigned char *)(this + 40) & 2) != 0)
    {
      uint64_t v3 = *(void *)(this + 16);
      if (v3 != v1)
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(unsigned char **)uint64_t v3 = 0;
          *(void *)(v3 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v3 = 0;
          *(unsigned char *)(v3 + 23) = 0;
        }
      }
    }
    *(void *)(this + 24) = 0;
    *(_DWORD *)(this + 32) = 0;
  }
  *(_DWORD *)(this + 40) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4 = MEMORY[0x1E4FBA920];
  while (2)
  {
    uint64_t v5 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_31;
        }
        *((_DWORD *)this + 10) |= 1u;
        if (*((void *)this + 1) == v4) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (result)
        {
          int v9 = (unsigned char *)*((void *)a2 + 1);
          if ((unint64_t)v9 < *((void *)a2 + 2) && *v9 == 18)
          {
            *((void *)a2 + 1) = v9 + 1;
            goto LABEL_17;
          }
          continue;
        }
        return result;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_31;
        }
LABEL_17:
        *((_DWORD *)this + 10) |= 2u;
        if (*((void *)this + 2) == v4) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (result)
        {
          unsigned int v11 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v10 = *((void *)a2 + 2);
          if ((unint64_t)v11 < v10 && *v11 == 24)
          {
            unsigned int v12 = v11 + 1;
            *((void *)a2 + 1) = v12;
            goto LABEL_25;
          }
          continue;
        }
        return result;
      case 3u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_31;
        }
        unsigned int v12 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
LABEL_25:
        unsigned int v24 = 0;
        if ((unint64_t)v12 < v10 && (*v12 & 0x80000000) == 0)
        {
          unsigned int v13 = *v12;
          *((void *)a2 + 1) = v12 + 1;
          goto LABEL_37;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v24);
        if (result)
        {
          unsigned int v13 = v24;
LABEL_37:
          if (v13 <= 0x42)
          {
            *((_DWORD *)this + 10) |= 4u;
            *((_DWORD *)this + 6) = v13;
          }
          int v18 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v14 = *((void *)a2 + 2);
          if ((unint64_t)v18 < v14 && *v18 == 32)
          {
            int v15 = v18 + 1;
            *((void *)a2 + 1) = v15;
            goto LABEL_42;
          }
          continue;
        }
        break;
      case 4u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_31;
        }
        int v15 = (char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
LABEL_42:
        unsigned int v23 = 0;
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v23);
          if (!result) {
            return result;
          }
          unsigned int v19 = v23;
        }
        else
        {
          unsigned int v19 = *v15;
          *((void *)a2 + 1) = v15 + 1;
        }
        if (v19 <= 4)
        {
          *((_DWORD *)this + 10) |= 8u;
          *((_DWORD *)this + 7) = v19;
        }
        BOOL v20 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
        if ((unint64_t)v20 >= v16 || *v20 != 40) {
          continue;
        }
        int v17 = v20 + 1;
        *((void *)a2 + 1) = v17;
LABEL_52:
        unsigned int v22 = 0;
        if ((unint64_t)v17 >= v16 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v22);
          if (!result) {
            return result;
          }
          unsigned int v21 = v22;
        }
        else
        {
          unsigned int v21 = *v17;
          *((void *)a2 + 1) = v17 + 1;
        }
        if (v21 <= 2)
        {
          *((_DWORD *)this + 10) |= 0x10u;
          *((_DWORD *)this + 8) = v21;
        }
        if (*((void *)a2 + 1) != *((void *)a2 + 2)
          || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
        {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      case 5u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_31;
        }
        int v17 = (char *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
        goto LABEL_52;
      default:
        int v7 = TagFallback & 7;
LABEL_31:
        if (v7 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback))continue; {
        return 0;
        }
    }
    return result;
  }
}

unsigned int *CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings::SerializeWithCachedSizes(unsigned int *this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  unsigned int v6 = this[10];
  if (v6)
  {
    this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
    unsigned int v6 = v5[10];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  unsigned int v6 = v5[10];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[7], (uint64_t)a2, a4);
    if ((v5[10] & 0x10) == 0) {
      return this;
    }
    goto LABEL_11;
  }
LABEL_9:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[6], (uint64_t)a2, a4);
  unsigned int v6 = v5[10];
  if ((v6 & 8) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v6 & 0x10) == 0) {
    return this;
  }
LABEL_11:
  uint64_t v7 = v5[8];

  return (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v7, (uint64_t)a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 40);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_46;
  }
  if ((*((unsigned char *)this + 40) & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((*((unsigned char *)this + 40) & 2) == 0) {
      goto LABEL_24;
    }
    goto LABEL_15;
  }
  uint64_t v4 = *((void *)this + 1);
  int v5 = *(unsigned __int8 *)(v4 + 23);
  char v6 = v5;
  uint64_t v7 = *(void *)(v4 + 8);
  if ((v5 & 0x80u) == 0) {
    unint64_t v8 = *(unsigned __int8 *)(v4 + 23);
  }
  else {
    unint64_t v8 = v7;
  }
  if (v8 >= 0x80)
  {
    int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v8);
    int v5 = *(unsigned __int8 *)(v4 + 23);
    uint64_t v7 = *(void *)(v4 + 8);
    int v9 = v10 + 1;
    int v2 = *((_DWORD *)this + 10);
    char v6 = *(unsigned char *)(v4 + 23);
  }
  else
  {
    int v9 = 2;
  }
  if (v6 < 0) {
    int v5 = v7;
  }
  uint64_t v3 = (v9 + v5);
  if ((v2 & 2) != 0)
  {
LABEL_15:
    uint64_t v11 = *((void *)this + 2);
    int v12 = *(unsigned __int8 *)(v11 + 23);
    char v13 = v12;
    uint64_t v14 = *(void *)(v11 + 8);
    if ((v12 & 0x80u) == 0) {
      unint64_t v15 = *(unsigned __int8 *)(v11 + 23);
    }
    else {
      unint64_t v15 = v14;
    }
    if (v15 >= 0x80)
    {
      int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v15);
      int v12 = *(unsigned __int8 *)(v11 + 23);
      uint64_t v14 = *(void *)(v11 + 8);
      int v2 = *((_DWORD *)this + 10);
      char v13 = *(unsigned char *)(v11 + 23);
    }
    else
    {
      int v16 = 1;
    }
    if (v13 < 0) {
      int v12 = v14;
    }
    uint64_t v3 = (v3 + v16 + v12 + 1);
  }
LABEL_24:
  if ((v2 & 4) != 0)
  {
    int v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    if ((v17 & 0x80000000) != 0)
    {
      int v18 = 11;
    }
    else if (v17 >= 0x80)
    {
      int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17) + 1;
      int v2 = *((_DWORD *)this + 10);
    }
    else
    {
      int v18 = 2;
    }
    uint64_t v3 = (v18 + v3);
    if ((v2 & 8) == 0)
    {
LABEL_26:
      if ((v2 & 0x10) == 0) {
        goto LABEL_46;
      }
      goto LABEL_40;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_26;
  }
  unsigned int v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
  if ((v19 & 0x80000000) != 0)
  {
    int v20 = 11;
  }
  else if (v19 >= 0x80)
  {
    int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19) + 1;
    int v2 = *((_DWORD *)this + 10);
  }
  else
  {
    int v20 = 2;
  }
  uint64_t v3 = (v20 + v3);
  if ((v2 & 0x10) != 0)
  {
LABEL_40:
    unsigned int v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    if ((v21 & 0x80000000) != 0)
    {
      int v22 = 11;
    }
    else if (v21 >= 0x80)
    {
      int v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21) + 1;
    }
    else
    {
      int v22 = 2;
    }
    uint64_t v3 = (v22 + v3);
  }
LABEL_46:
  *((_DWORD *)this + 9) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings *this, const CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings *a2)
{
  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    uint64_t v3 = *(void *)(this + 16);
    *(void *)(this + 16) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v3;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.WorkoutSettings");
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent_EventType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 0x13;
}

double CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent *this)
{
  double result = 0.0;
  *(_OWORD *)((char *)this + 36) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent *CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::WorkoutEvent(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent *this, const CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent *a2)
{
  *(void *)this = &unk_1EDD0BAB0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 36) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::MergeFrom(this, a2);
  return this;
}

void sub_18DF783C0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent *this, const CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 48);
  if (!(_BYTE)v4) {
    return;
  }
  if (*((unsigned char *)a2 + 48))
  {
    *((_DWORD *)this + 12) |= 1u;
    int v5 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
    if (!v5) {
      operator new();
    }
    char v6 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)a2 + 1);
    if (!v6)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      char v6 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::default_instance_
                                                                           + 8);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v5, v6);
    int v4 = *((_DWORD *)a2 + 12);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
LABEL_20:
      unsigned int v9 = *((_DWORD *)a2 + 10);
      if (v9 >= 0x13) {
        __assert_rtn("set_event_type", "CoreNavigationCLPPrivateDataShared.pb.h", 18666, "::CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent_EventType_IsValid(value)");
      }
      *((_DWORD *)this + 12) |= 4u;
      *((_DWORD *)this + 10) = v9;
      int v4 = *((_DWORD *)a2 + 12);
      if ((v4 & 8) == 0)
      {
LABEL_8:
        if ((v4 & 0x10) == 0) {
          return;
        }
        goto LABEL_27;
      }
      goto LABEL_22;
    }
  }
  else if ((*((unsigned char *)a2 + 48) & 2) == 0)
  {
    goto LABEL_6;
  }
  *((_DWORD *)this + 12) |= 2u;
  uint64_t v7 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 2);
  if (!v7) {
    operator new();
  }
  unint64_t v8 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)a2 + 2);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    unint64_t v8 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::default_instance_
                                                                         + 16);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v7, v8);
  int v4 = *((_DWORD *)a2 + 12);
  if ((v4 & 4) != 0) {
    goto LABEL_20;
  }
LABEL_7:
  if ((v4 & 8) == 0) {
    goto LABEL_8;
  }
LABEL_22:
  *((_DWORD *)this + 12) |= 8u;
  int v10 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 3);
  if (!v10) {
    operator new();
  }
  uint64_t v11 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)a2 + 3);
  if (!v11)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    uint64_t v11 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::default_instance_
                                                                          + 24);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v10, v11);
  if ((*((_DWORD *)a2 + 12) & 0x10) != 0)
  {
LABEL_27:
    *((_DWORD *)this + 12) |= 0x10u;
    int v12 = (CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings *)*((void *)this + 4);
    if (!v12) {
      operator new();
    }
    char v13 = (const CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings *)*((void *)a2 + 4);
    if (!v13)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      char v13 = *(const CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings **)(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::default_instance_
                                                                                  + 32);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings::MergeFrom(v12, v13);
  }
}

void sub_18DF786C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::~WorkoutEvent(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent *this)
{
  *(void *)this = &unk_1EDD0BAB0;
  CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::~WorkoutEvent(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent *)CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 2);
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = *((void *)this + 3);
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = *((void *)this + 4);
    if (v5)
    {
      char v6 = *(void (**)(void))(*(void *)v5 + 8);
      v6();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 44) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::New(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::Clear(uint64_t this)
{
  uint64_t v1 = this;
  LOBYTE(v2) = *(unsigned char *)(this + 48);
  if ((_BYTE)v2)
  {
    if (*(unsigned char *)(this + 48))
    {
      uint64_t v3 = *(void *)(this + 8);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
          *(void *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        int v2 = *(_DWORD *)(this + 48);
      }
    }
    if ((v2 & 2) != 0)
    {
      uint64_t v4 = *(void *)(this + 16);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 36))
        {
          *(void *)(v4 + 8) = 0;
          *(void *)(v4 + 16) = 0;
          *(void *)(v4 + 24) = 0;
        }
        *(_DWORD *)(v4 + 36) = 0;
        int v2 = *(_DWORD *)(this + 48);
      }
    }
    *(_DWORD *)(this + 40) = 0;
    if ((v2 & 8) != 0)
    {
      uint64_t v5 = *(void *)(this + 24);
      if (v5)
      {
        if (*(unsigned char *)(v5 + 36))
        {
          *(void *)(v5 + 8) = 0;
          *(void *)(v5 + 16) = 0;
          *(void *)(v5 + 24) = 0;
        }
        *(_DWORD *)(v5 + 36) = 0;
        int v2 = *(_DWORD *)(this + 48);
      }
    }
    if ((v2 & 0x10) != 0)
    {
      this = *(void *)(this + 32);
      if (this) {
        this = CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings::Clear(this);
      }
    }
  }
  *(_DWORD *)(v1 + 48) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (1)
  {
    uint64_t v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 < *((void *)a2 + 2) && (*v4 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_6;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_6:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_21;
        }
        *((_DWORD *)this + 12) |= 1u;
        uint64_t v7 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
        if (!v7) {
          operator new();
        }
        unsigned int v40 = 0;
        unint64_t v8 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v40))return 0; {
        }
          }
        else
        {
          unsigned int v40 = *v8;
          *((void *)a2 + 1) = v8 + 1;
        }
        int v11 = *((_DWORD *)a2 + 14);
        int v12 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v11 + 1;
        if (v11 >= v12) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream(v7, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v13 = *((_DWORD *)a2 + 14);
        BOOL v14 = __OFSUB__(v13, 1);
        int v15 = v13 - 1;
        if (v15 < 0 == v14) {
          *((_DWORD *)a2 + 14) = v15;
        }
        int v16 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v16 >= *((void *)a2 + 2) || *v16 != 18) {
          continue;
        }
        *((void *)a2 + 1) = v16 + 1;
        goto LABEL_33;
      case 2u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_21;
        }
LABEL_33:
        *((_DWORD *)this + 12) |= 2u;
        int v17 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 2);
        if (!v17) {
          operator new();
        }
        unsigned int v40 = 0;
        int v18 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v18 >= *((void *)a2 + 2) || *v18 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v40))return 0; {
        }
          }
        else
        {
          unsigned int v40 = *v18;
          *((void *)a2 + 1) = v18 + 1;
        }
        int v19 = *((_DWORD *)a2 + 14);
        int v20 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v19 + 1;
        if (v19 >= v20) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream(v17, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v21 = *((_DWORD *)a2 + 14);
        BOOL v14 = __OFSUB__(v21, 1);
        int v22 = v21 - 1;
        if (v22 < 0 == v14) {
          *((_DWORD *)a2 + 14) = v22;
        }
        unsigned int v23 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        if ((unint64_t)v23 >= v9 || *v23 != 24) {
          continue;
        }
        int v10 = v23 + 1;
        *((void *)a2 + 1) = v10;
LABEL_47:
        unsigned int v40 = 0;
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v40);
          if (!result) {
            return result;
          }
          unsigned int v24 = v40;
        }
        else
        {
          unsigned int v24 = *v10;
          *((void *)a2 + 1) = v10 + 1;
        }
        if (v24 <= 0x12)
        {
          *((_DWORD *)this + 12) |= 4u;
          *((_DWORD *)this + 10) = v24;
        }
        int v26 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v26 >= *((void *)a2 + 2) || *v26 != 34) {
          continue;
        }
        *((void *)a2 + 1) = v26 + 1;
LABEL_57:
        *((_DWORD *)this + 12) |= 8u;
        int v27 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 3);
        if (!v27) {
          operator new();
        }
        unsigned int v40 = 0;
        unsigned int v28 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v28 >= *((void *)a2 + 2) || *v28 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v40))return 0; {
        }
          }
        else
        {
          unsigned int v40 = *v28;
          *((void *)a2 + 1) = v28 + 1;
        }
        int v29 = *((_DWORD *)a2 + 14);
        int v30 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v29 + 1;
        if (v29 >= v30) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream(v27, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v31 = *((_DWORD *)a2 + 14);
        BOOL v14 = __OFSUB__(v31, 1);
        int v32 = v31 - 1;
        if (v32 < 0 == v14) {
          *((_DWORD *)a2 + 14) = v32;
        }
        unsigned int v33 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v33 >= *((void *)a2 + 2) || *v33 != 42) {
          continue;
        }
        *((void *)a2 + 1) = v33 + 1;
LABEL_71:
        *((_DWORD *)this + 12) |= 0x10u;
        unsigned int v34 = (CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings *)*((void *)this + 4);
        if (!v34) {
          operator new();
        }
        unsigned int v40 = 0;
        int v35 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v35 >= *((void *)a2 + 2) || *v35 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v40))return 0; {
        }
          }
        else
        {
          unsigned int v40 = *v35;
          *((void *)a2 + 1) = v35 + 1;
        }
        int v36 = *((_DWORD *)a2 + 14);
        int v37 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v36 + 1;
        if (v36 >= v37) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings::MergePartialFromCodedStream(v34, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v38 = *((_DWORD *)a2 + 14);
        BOOL v14 = __OFSUB__(v38, 1);
        int v39 = v38 - 1;
        if (v39 < 0 == v14) {
          *((_DWORD *)a2 + 14) = v39;
        }
        if (*((void *)a2 + 1) == *((void *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
        break;
      case 3u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_21;
        }
        int v10 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        goto LABEL_47;
      case 4u:
        int v6 = TagFallback & 7;
        if (v6 == 2) {
          goto LABEL_57;
        }
        goto LABEL_21;
      case 5u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_21;
        }
        goto LABEL_71;
      default:
        int v6 = TagFallback & 7;
LABEL_21:
        if (v6 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 48);
  if (v6)
  {
    uint64_t v7 = *(void *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 48);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v8 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::default_instance_ + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      return this;
    }
    goto LABEL_17;
  }
LABEL_14:
  uint64_t v9 = *(void *)(v5 + 24);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v9 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::default_instance_ + 24);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v9, a2, a4);
  if ((*(_DWORD *)(v5 + 48) & 0x10) != 0)
  {
LABEL_17:
    uint64_t v10 = *(void *)(v5 + 32);
    if (!v10)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      uint64_t v10 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::default_instance_ + 32);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v10, a2, a4);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent *this)
{
  uint64_t v1 = this;
  LOBYTE(v2) = *((unsigned char *)this + 48);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_49;
  }
  if ((*((unsigned char *)this + 48) & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((*((unsigned char *)this + 48) & 2) == 0) {
      goto LABEL_24;
    }
    goto LABEL_15;
  }
  uint64_t v4 = *((void *)this + 1);
  if (!v4)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    uint64_t v4 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::default_instance_ + 8);
  }
  int v5 = *(unsigned __int8 *)(v4 + 36);
  if (*(unsigned char *)(v4 + 36))
  {
    int v6 = (v5 << 31 >> 31) & 9;
    if ((v5 & 2) != 0) {
      v6 += 9;
    }
    if ((v5 & 4) != 0) {
      int v5 = v6 + 9;
    }
    else {
      int v5 = v6;
    }
  }
  *(_DWORD *)(v4 + 32) = v5;
  uint64_t v3 = (v5 + 2);
  int v2 = *((_DWORD *)v1 + 12);
  if ((v2 & 2) != 0)
  {
LABEL_15:
    uint64_t v7 = *((void *)v1 + 2);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::default_instance_ + 16);
    }
    int v8 = *(unsigned __int8 *)(v7 + 36);
    if (*(unsigned char *)(v7 + 36))
    {
      int v9 = (v8 << 31 >> 31) & 9;
      if ((v8 & 2) != 0) {
        v9 += 9;
      }
      if ((v8 & 4) != 0) {
        int v8 = v9 + 9;
      }
      else {
        int v8 = v9;
      }
    }
    *(_DWORD *)(v7 + 32) = v8;
    uint64_t v3 = (v3 + v8 + 2);
    int v2 = *((_DWORD *)v1 + 12);
  }
LABEL_24:
  if ((v2 & 4) != 0)
  {
    this = (CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent *)*((unsigned int *)v1 + 10);
    if ((this & 0x80000000) != 0)
    {
      int v10 = 11;
    }
    else if (this >= 0x80)
    {
      this = (CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(this);
      int v10 = this + 1;
      int v2 = *((_DWORD *)v1 + 12);
    }
    else
    {
      int v10 = 2;
    }
    uint64_t v3 = (v10 + v3);
    if ((v2 & 8) == 0)
    {
LABEL_26:
      if ((v2 & 0x10) == 0) {
        goto LABEL_49;
      }
      goto LABEL_43;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_26;
  }
  uint64_t v11 = *((void *)v1 + 3);
  if (!v11)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    uint64_t v11 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::default_instance_ + 24);
  }
  int v12 = *(unsigned __int8 *)(v11 + 36);
  if (*(unsigned char *)(v11 + 36))
  {
    int v13 = (v12 << 31 >> 31) & 9;
    if ((v12 & 2) != 0) {
      v13 += 9;
    }
    if ((v12 & 4) != 0) {
      int v12 = v13 + 9;
    }
    else {
      int v12 = v13;
    }
  }
  *(_DWORD *)(v11 + 32) = v12;
  uint64_t v3 = (v3 + v12 + 2);
  if ((*((_DWORD *)v1 + 12) & 0x10) != 0)
  {
LABEL_43:
    BOOL v14 = (CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings *)*((void *)v1 + 4);
    if (!v14)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(0);
      BOOL v14 = *(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings **)(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::default_instance_
                                                                            + 32);
    }
    int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::WorkoutSettings::ByteSize(v14);
    int v16 = (int)v15;
    if (v15 >= 0x80) {
      int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15);
    }
    else {
      int v17 = 1;
    }
    uint64_t v3 = (v3 + v16 + v17 + 1);
  }
LABEL_49:
  *((_DWORD *)v1 + 11) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent *this, const CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent *a2)
{
  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    uint64_t v3 = *(void *)(this + 16);
    *(void *)(this + 16) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v3;
    uint64_t v4 = *(void *)(this + 24);
    *(void *)(this + 24) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v4;
    uint64_t v5 = *(void *)(this + 32);
    *(void *)(this + 32) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 48);
    *(_DWORD *)(this + 48) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 44);
    *(_DWORD *)(this + 44) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v5;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.WorkoutEvent");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(void *)(this + 24) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator *CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::MotionStateMediator(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator *this, const CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator *a2)
{
  *(void *)this = &unk_1EDD0D658;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::MergeFrom(this, a2);
  return this;
}

void sub_18DF794AC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator *this, const CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 32))
    {
      *((_DWORD *)this + 8) |= 1u;
      uint64_t v5 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
      if (!v5) {
        operator new();
      }
      int v6 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)a2 + 1);
      if (!v6)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
        int v6 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::default_instance_
                                                                             + 8);
      }
      CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v5, v6);
      int v4 = *((_DWORD *)a2 + 8);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          return;
        }
        goto LABEL_14;
      }
    }
    else if ((*((unsigned char *)a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v7 = *((_DWORD *)a2 + 6);
    *((_DWORD *)this + 8) |= 2u;
    *((_DWORD *)this + 6) = v7;
    if ((*((_DWORD *)a2 + 8) & 4) == 0) {
      return;
    }
LABEL_14:
    *((_DWORD *)this + 8) |= 4u;
    int v8 = (CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent *)*((void *)this + 2);
    if (!v8) {
      operator new();
    }
    int v9 = (const CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent *)*((void *)a2 + 2);
    if (!v9)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      int v9 = *(const CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent **)(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::default_instance_
                                                                              + 16);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::MergeFrom(v8, v9);
  }
}

void sub_18DF79670(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::~MotionStateMediator(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator *this)
{
  *(void *)this = &unk_1EDD0D658;
  CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::~MotionStateMediator(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator *)CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 2);
    if (v3)
    {
      int v4 = *(void (**)(void))(*(void *)v3 + 8);
      v4();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 28) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::New(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::Clear(uint64_t this)
{
  uint64_t v1 = this;
  LOBYTE(v2) = *(unsigned char *)(this + 32);
  if ((_BYTE)v2)
  {
    if (*(unsigned char *)(this + 32))
    {
      uint64_t v3 = *(void *)(this + 8);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
          *(void *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        int v2 = *(_DWORD *)(this + 32);
      }
    }
    *(_DWORD *)(this + 24) = 0;
    if ((v2 & 4) != 0)
    {
      this = *(void *)(this + 16);
      if (this) {
        this = CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::Clear(this);
      }
    }
  }
  *(_DWORD *)(v1 + 32) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (1)
  {
    do
    {
      while (1)
      {
        while (1)
        {
          int v4 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
          {
            unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
            *((_DWORD *)a2 + 8) = TagFallback;
            if (!TagFallback) {
              return 1;
            }
          }
          else
          {
            unint64_t TagFallback = *v4;
            *((_DWORD *)a2 + 8) = TagFallback;
            *((void *)a2 + 1) = v4 + 1;
            if (!TagFallback) {
              return 1;
            }
          }
          unsigned int v6 = TagFallback >> 3;
          if (TagFallback >> 3 != 1) {
            break;
          }
          int v7 = TagFallback & 7;
          if (v7 != 2) {
            goto LABEL_20;
          }
          *((_DWORD *)this + 8) |= 1u;
          int v9 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
          if (!v9) {
            operator new();
          }
          unsigned int v29 = 0;
          int v10 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v29))return 0; {
          }
            }
          else
          {
            unsigned int v29 = *v10;
            *((void *)a2 + 1) = v10 + 1;
          }
          int v13 = *((_DWORD *)a2 + 14);
          int v14 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v13 + 1;
          if (v13 >= v14) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream(v9, a2)
            || !*((unsigned char *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          int v15 = *((_DWORD *)a2 + 14);
          BOOL v16 = __OFSUB__(v15, 1);
          int v17 = v15 - 1;
          if (v17 < 0 == v16) {
            *((_DWORD *)a2 + 14) = v17;
          }
          int v18 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v11 = *((void *)a2 + 2);
          if ((unint64_t)v18 < v11 && *v18 == 16)
          {
            int v12 = v18 + 1;
            *((void *)a2 + 1) = v12;
            goto LABEL_32;
          }
        }
        if (v6 == 2) {
          break;
        }
        if (v6 == 3)
        {
          int v7 = TagFallback & 7;
          if (v7 == 2)
          {
            int v8 = *((_DWORD *)this + 8);
            goto LABEL_40;
          }
        }
        else
        {
          int v7 = TagFallback & 7;
        }
LABEL_20:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
      }
        }
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_20;
      }
      int v12 = (char *)*((void *)a2 + 1);
      unint64_t v11 = *((void *)a2 + 2);
LABEL_32:
      unsigned int v28 = 0;
      if ((unint64_t)v12 >= v11 || *v12 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v28);
        if (!result) {
          return result;
        }
        unsigned int v19 = v28;
        int v20 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
      }
      else
      {
        unsigned int v19 = *v12;
        int v20 = v12 + 1;
        *((void *)a2 + 1) = v20;
      }
      *((_DWORD *)this + 6) = v19;
      int v8 = *((_DWORD *)this + 8) | 2;
      *((_DWORD *)this + 8) = v8;
    }
    while ((unint64_t)v20 >= v11 || *v20 != 26);
    *((void *)a2 + 1) = v20 + 1;
LABEL_40:
    *((_DWORD *)this + 8) = v8 | 4;
    int v22 = (CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent *)*((void *)this + 2);
    if (!v22) {
      operator new();
    }
    unsigned int v30 = 0;
    unsigned int v23 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v23 >= *((void *)a2 + 2) || *v23 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30)) {
        return 0;
      }
    }
    else
    {
      unsigned int v30 = *v23;
      *((void *)a2 + 1) = v23 + 1;
    }
    int v24 = *((_DWORD *)a2 + 14);
    int v25 = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 14) = v24 + 1;
    if (v24 >= v25) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
    if (!CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::MergePartialFromCodedStream(v22, a2)
      || !*((unsigned char *)a2 + 36))
    {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
    int v26 = *((_DWORD *)a2 + 14);
    BOOL v16 = __OFSUB__(v26, 1);
    int v27 = v26 - 1;
    if (v27 < 0 == v16) {
      *((_DWORD *)a2 + 14) = v27;
    }
    if (*((void *)a2 + 1) == *((void *)a2 + 2)
      && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
    {
      *((_DWORD *)a2 + 8) = 0;
      uint64_t result = 1;
      *((unsigned char *)a2 + 36) = 1;
      return result;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 32);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_8:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 32) & 4) == 0) {
      return this;
    }
    goto LABEL_9;
  }
  uint64_t v7 = *(void *)(this + 8);
  if (!v7)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::default_instance_ + 8);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 2) != 0) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return this;
  }
LABEL_9:
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v8 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::default_instance_ + 16);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 32);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_28;
  }
  if (*((unsigned char *)this + 32))
  {
    uint64_t v4 = *((void *)this + 1);
    if (!v4)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      uint64_t v4 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::default_instance_ + 8);
    }
    int v5 = *(unsigned __int8 *)(v4 + 36);
    if (*(unsigned char *)(v4 + 36))
    {
      int v6 = (v5 << 31 >> 31) & 9;
      if ((v5 & 2) != 0) {
        v6 += 9;
      }
      if ((v5 & 4) != 0) {
        int v5 = v6 + 9;
      }
      else {
        int v5 = v6;
      }
    }
    *(_DWORD *)(v4 + 32) = v5;
    uint64_t v3 = (v5 + 2);
    int v2 = *((_DWORD *)this + 8);
    if ((v2 & 2) == 0) {
      goto LABEL_21;
    }
  }
  else
  {
    uint64_t v3 = 0;
    if ((*((unsigned char *)this + 32) & 2) == 0) {
      goto LABEL_21;
    }
  }
  uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  if ((v7 & 0x80000000) != 0)
  {
    int v8 = 11;
  }
  else if (v7 >= 0x80)
  {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7) + 1;
    int v2 = *((_DWORD *)this + 8);
  }
  else
  {
    int v8 = 2;
  }
  uint64_t v3 = (v8 + v3);
LABEL_21:
  if ((v2 & 4) != 0)
  {
    int v9 = (CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent *)*((void *)this + 2);
    if (!v9)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(0);
      int v9 = *(CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent **)(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::default_instance_
                                                                        + 16);
    }
    int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::WorkoutEvent::ByteSize(v9);
    int v11 = (int)v10;
    if (v10 >= 0x80) {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
    }
    else {
      int v12 = 1;
    }
    uint64_t v3 = (v3 + v11 + v12 + 1);
  }
LABEL_28:
  *((_DWORD *)this + 7) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator *this, const CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator *a2)
{
  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    uint64_t v3 = *(void *)(this + 16);
    *(void *)(this + 16) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v3;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.MotionStateMediator");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity::SharedCtor(uint64_t this)
{
  *(_DWORD *)(this + 28) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(unsigned char *)(this + 24) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity *CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity::MediatedMotionActivity(CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity *this, const CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity *a2)
{
  *((_DWORD *)this + 7) = 0;
  *((_DWORD *)this + 8) = 0;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)this = &unk_1EDD025D8;
  *((unsigned char *)this + 24) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity::MergeFrom(this, a2);
  return this;
}

void sub_18DF7A004(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity *this, const CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 32))
    {
      uint64_t v6 = *((void *)a2 + 1);
      *((_DWORD *)this + 8) |= 1u;
      *((void *)this + 1) = v6;
      int v4 = *((_DWORD *)a2 + 8);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          return;
        }
        goto LABEL_7;
      }
    }
    else if ((*((unsigned char *)a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    *((_DWORD *)this + 8) |= 2u;
    uint64_t v7 = (CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity *)*((void *)this + 2);
    if (!v7) {
      operator new();
    }
    int v8 = (const CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity *)*((void *)a2 + 2);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      int v8 = *(const CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity **)(CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity::default_instance_
                                                                                + 16);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::MergeFrom(v7, v8);
    if ((*((_DWORD *)a2 + 8) & 4) != 0)
    {
LABEL_7:
      char v5 = *((unsigned char *)a2 + 24);
      *((_DWORD *)this + 8) |= 4u;
      *((unsigned char *)this + 24) = v5;
    }
  }
}

void sub_18DF7A164(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity::~MediatedMotionActivity(CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity *this)
{
  *(void *)this = &unk_1EDD025D8;
  CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity::~MediatedMotionActivity(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity *)CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 2);
    if (v2)
    {
      uint64_t v3 = *(void (**)(void))(*(void *)v2 + 8);
      v3();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 28) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity::New(CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity::Clear(uint64_t this)
{
  uint64_t v1 = this;
  char v2 = *(unsigned char *)(this + 32);
  if (v2)
  {
    *(void *)(this + 8) = 0;
    if ((v2 & 2) != 0)
    {
      this = *(void *)(this + 16);
      if (this) {
        this = CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::Clear(this);
      }
    }
    *(unsigned char *)(v1 + 24) = 0;
  }
  *(_DWORD *)(v1 + 32) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        int v4 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v4;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((void *)a2 + 1) = v4 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v6 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_24;
        }
        *(void *)unsigned int v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v23) & 1) == 0)return 0; {
        *((void *)this + 1) = *(void *)v23;
        }
        int v10 = *((_DWORD *)this + 8) | 1;
        *((_DWORD *)this + 8) = v10;
        int v11 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v11 < *((void *)a2 + 2) && *v11 == 18)
        {
          *((void *)a2 + 1) = v11 + 1;
          goto LABEL_18;
        }
      }
      if (v6 == 2) {
        break;
      }
      if (v6 == 3)
      {
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) == 0)
        {
          int v9 = (char *)*((void *)a2 + 1);
          unint64_t v8 = *((void *)a2 + 2);
          goto LABEL_36;
        }
      }
      else
      {
        int v7 = TagFallback & 7;
      }
LABEL_24:
      if (v7 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
    }
      }
    int v7 = TagFallback & 7;
    if (v7 != 2) {
      goto LABEL_24;
    }
    int v10 = *((_DWORD *)this + 8);
LABEL_18:
    *((_DWORD *)this + 8) = v10 | 2;
    int v12 = (CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity *)*((void *)this + 2);
    if (!v12) {
      operator new();
    }
    v23[0] = 0;
    int v13 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v13 >= *((void *)a2 + 2) || *v13 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v23)) {
        return 0;
      }
    }
    else
    {
      v23[0] = *v13;
      *((void *)a2 + 1) = v13 + 1;
    }
    int v14 = *((_DWORD *)a2 + 14);
    int v15 = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 14) = v14 + 1;
    if (v14 >= v15) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
    if (!CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::MergePartialFromCodedStream(v12, a2)
      || !*((unsigned char *)a2 + 36))
    {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
    int v16 = *((_DWORD *)a2 + 14);
    BOOL v17 = __OFSUB__(v16, 1);
    int v18 = v16 - 1;
    if (v18 < 0 == v17) {
      *((_DWORD *)a2 + 14) = v18;
    }
    unsigned int v19 = (unsigned char *)*((void *)a2 + 1);
    unint64_t v8 = *((void *)a2 + 2);
    if ((unint64_t)v19 < v8 && *v19 == 24)
    {
      int v9 = v19 + 1;
      *((void *)a2 + 1) = v9;
LABEL_36:
      v23[0] = 0;
      if ((unint64_t)v9 >= v8 || *v9 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v23);
        if (!result) {
          return result;
        }
        unsigned int v20 = v23[0];
        int v21 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v8 = *((void *)a2 + 2);
      }
      else
      {
        unsigned int v20 = *v9;
        int v21 = (unsigned __int8 *)(v9 + 1);
        *((void *)a2 + 1) = v21;
      }
      *((unsigned char *)this + 24) = v20 != 0;
      *((_DWORD *)this + 8) |= 4u;
      if (v21 == (unsigned __int8 *)v8 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 32);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
    int v6 = *(_DWORD *)(v5 + 32);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        return this;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v7 = *(void *)(v5 + 16);
  if (!v7)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity::default_instance_ + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  if ((*(_DWORD *)(v5 + 32) & 4) != 0)
  {
LABEL_9:
    uint64_t v8 = *(unsigned __int8 *)(v5 + 24);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, (uint64_t)a2, a4);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity *this)
{
  int v2 = *((unsigned __int8 *)this + 32);
  if (*((unsigned char *)this + 32))
  {
    unsigned int v3 = (v2 << 31 >> 31) & 9;
    if ((v2 & 2) != 0)
    {
      uint64_t v4 = *((void *)this + 2);
      if (!v4)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(0);
        uint64_t v4 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity::default_instance_ + 16);
      }
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::MotionActivity::ByteSize(v4);
      int v6 = (int)v5;
      if (v5 >= 0x80) {
        int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
      }
      else {
        int v7 = 1;
      }
      v3 += v6 + v7 + 1;
      int v2 = *((_DWORD *)this + 8);
    }
    if ((v2 & 4) != 0) {
      uint64_t result = v3 + 2;
    }
    else {
      uint64_t result = v3;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  *((_DWORD *)this + 7) = result;
  return result;
}

void CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity *this, const CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity::Swap(CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity *this, CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity *a2)
{
  if (a2 != this)
  {
    double result = *((double *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((double *)a2 + 1) = result;
    uint64_t v3 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    LOBYTE(v3) = *((unsigned char *)this + 24);
    *((unsigned char *)this + 24) = *((unsigned char *)a2 + 24);
    *((unsigned char *)a2 + 24) = v3;
    LODWORD(v3) = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v3;
    LODWORD(v3) = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v3;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::MediatedMotionActivity::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.MediatedMotionActivity");
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics_NatalimeterGenderType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 3;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics_UserConditionType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 8;
}

double CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics *this)
{
  *((_DWORD *)this + 14) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics *CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics::BodyMetrics(CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics *this, const CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics *a2)
{
  *(void *)this = &unk_1EDD0B600;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((_DWORD *)this + 14) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics::MergeFrom(this, a2);
  return this;
}

void sub_18DF7A994(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

float CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics *this, const CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  int v5 = *((_DWORD *)a2 + 14);
  if (!(_BYTE)v5) {
    goto LABEL_15;
  }
  if (v5)
  {
    unsigned int v6 = *((_DWORD *)a2 + 2);
    if (v6 >= 3) {
      __assert_rtn("set_gender", "CoreNavigationCLPPrivateDataShared.pb.h", 18977, "::CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics_NatalimeterGenderType_IsValid(value)");
    }
    *((_DWORD *)this + 14) |= 1u;
    *((_DWORD *)this + 2) = v6;
    int v5 = *((_DWORD *)a2 + 14);
  }
  if ((v5 & 2) != 0)
  {
    float result = *((float *)a2 + 3);
    *((_DWORD *)this + 14) |= 2u;
    *((float *)this + 3) = result;
    int v5 = *((_DWORD *)a2 + 14);
    if ((v5 & 4) == 0)
    {
LABEL_9:
      if ((v5 & 8) == 0) {
        goto LABEL_10;
      }
      goto LABEL_26;
    }
  }
  else if ((v5 & 4) == 0)
  {
    goto LABEL_9;
  }
  float result = *((float *)a2 + 4);
  *((_DWORD *)this + 14) |= 4u;
  *((float *)this + 4) = result;
  int v5 = *((_DWORD *)a2 + 14);
  if ((v5 & 8) == 0)
  {
LABEL_10:
    if ((v5 & 0x10) == 0) {
      goto LABEL_11;
    }
    goto LABEL_27;
  }
LABEL_26:
  float result = *((float *)a2 + 5);
  *((_DWORD *)this + 14) |= 8u;
  *((float *)this + 5) = result;
  int v5 = *((_DWORD *)a2 + 14);
  if ((v5 & 0x10) == 0)
  {
LABEL_11:
    if ((v5 & 0x20) == 0) {
      goto LABEL_12;
    }
LABEL_28:
    float result = *((float *)a2 + 7);
    *((_DWORD *)this + 14) |= 0x20u;
    *((float *)this + 7) = result;
    int v5 = *((_DWORD *)a2 + 14);
    if ((v5 & 0x40) == 0)
    {
LABEL_13:
      if ((v5 & 0x80) == 0) {
        goto LABEL_15;
      }
      goto LABEL_14;
    }
    goto LABEL_29;
  }
LABEL_27:
  float result = *((float *)a2 + 6);
  *((_DWORD *)this + 14) |= 0x10u;
  *((float *)this + 6) = result;
  int v5 = *((_DWORD *)a2 + 14);
  if ((v5 & 0x20) != 0) {
    goto LABEL_28;
  }
LABEL_12:
  if ((v5 & 0x40) == 0) {
    goto LABEL_13;
  }
LABEL_29:
  float result = *((float *)a2 + 8);
  *((_DWORD *)this + 14) |= 0x40u;
  *((float *)this + 8) = result;
  int v5 = *((_DWORD *)a2 + 14);
  if ((v5 & 0x80) != 0)
  {
LABEL_14:
    float result = *((float *)a2 + 9);
    *((_DWORD *)this + 14) |= 0x80u;
    *((float *)this + 9) = result;
    int v5 = *((_DWORD *)a2 + 14);
  }
LABEL_15:
  if ((v5 & 0xFF00) != 0)
  {
    if ((v5 & 0x100) != 0)
    {
      float result = *((float *)a2 + 10);
      *((_DWORD *)this + 14) |= 0x100u;
      *((float *)this + 10) = result;
      int v5 = *((_DWORD *)a2 + 14);
    }
    if ((v5 & 0x200) != 0)
    {
      unsigned int v7 = *((_DWORD *)a2 + 11);
      if (v7 >= 8) {
        __assert_rtn("set_condition", "CoreNavigationCLPPrivateDataShared.pb.h", 19176, "::CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics_UserConditionType_IsValid(value)");
      }
      *((_DWORD *)this + 14) |= 0x200u;
      *((_DWORD *)this + 11) = v7;
      int v5 = *((_DWORD *)a2 + 14);
    }
    if ((v5 & 0x400) != 0)
    {
      float result = *((float *)a2 + 12);
      *((_DWORD *)this + 14) |= 0x400u;
      *((float *)this + 12) = result;
    }
  }
  return result;
}

void sub_18DF7ABC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics::~BodyMetrics(CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics *this)
{
  *(void *)this = &unk_1EDD0B600;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics::~BodyMetrics(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 52) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics::New(CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 56);
  if ((_BYTE)v1)
  {
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 8) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(void *)(this + 40) = 0;
    *(_DWORD *)(this + 48) = 0;
  }
  *(_DWORD *)(this + 56) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (2)
  {
    uint64_t v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_31;
        }
        unsigned int v23 = 0;
        unsigned int v7 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v7 >= *((void *)a2 + 2) || *v7 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v23);
          if (!result) {
            return result;
          }
          unsigned int v8 = v23;
        }
        else
        {
          unsigned int v8 = *v7;
          *((void *)a2 + 1) = v7 + 1;
        }
        if (v8 <= 2)
        {
          *((_DWORD *)this + 14) |= 1u;
          *((_DWORD *)this + 2) = v8;
        }
        int v12 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v12 < *((void *)a2 + 2) && *v12 == 21)
        {
          *((void *)a2 + 1) = v12 + 1;
          goto LABEL_41;
        }
        continue;
      case 2u:
        int v6 = TagFallback & 7;
        if (v6 != 5) {
          goto LABEL_31;
        }
LABEL_41:
        unsigned int v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v23) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 3) = v23;
        *((_DWORD *)this + 14) |= 2u;
        int v13 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v13 >= *((void *)a2 + 2) || *v13 != 29) {
          continue;
        }
        *((void *)a2 + 1) = v13 + 1;
LABEL_45:
        unsigned int v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v23) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 4) = v23;
        *((_DWORD *)this + 14) |= 4u;
        int v14 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v14 >= *((void *)a2 + 2) || *v14 != 37) {
          continue;
        }
        *((void *)a2 + 1) = v14 + 1;
LABEL_49:
        unsigned int v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v23) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 5) = v23;
        *((_DWORD *)this + 14) |= 8u;
        int v15 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v15 >= *((void *)a2 + 2) || *v15 != 45) {
          continue;
        }
        *((void *)a2 + 1) = v15 + 1;
LABEL_53:
        unsigned int v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v23) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 6) = v23;
        *((_DWORD *)this + 14) |= 0x10u;
        int v16 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v16 >= *((void *)a2 + 2) || *v16 != 53) {
          continue;
        }
        *((void *)a2 + 1) = v16 + 1;
LABEL_57:
        unsigned int v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v23) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 7) = v23;
        *((_DWORD *)this + 14) |= 0x20u;
        BOOL v17 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v17 >= *((void *)a2 + 2) || *v17 != 61) {
          continue;
        }
        *((void *)a2 + 1) = v17 + 1;
LABEL_61:
        unsigned int v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v23) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 8) = v23;
        *((_DWORD *)this + 14) |= 0x40u;
        int v18 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v18 >= *((void *)a2 + 2) || *v18 != 69) {
          continue;
        }
        *((void *)a2 + 1) = v18 + 1;
LABEL_65:
        unsigned int v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v23) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 9) = v23;
        *((_DWORD *)this + 14) |= 0x80u;
        unsigned int v19 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v19 >= *((void *)a2 + 2) || *v19 != 77) {
          continue;
        }
        *((void *)a2 + 1) = v19 + 1;
LABEL_69:
        unsigned int v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v23) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 10) = v23;
        *((_DWORD *)this + 14) |= 0x100u;
        unsigned int v20 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        if ((unint64_t)v20 >= v9 || *v20 != 80) {
          continue;
        }
        int v10 = v20 + 1;
        *((void *)a2 + 1) = v10;
LABEL_73:
        unsigned int v23 = 0;
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v23);
          if (!result) {
            return result;
          }
          unsigned int v21 = v23;
        }
        else
        {
          unsigned int v21 = *v10;
          *((void *)a2 + 1) = v10 + 1;
        }
        if (v21 <= 7)
        {
          *((_DWORD *)this + 14) |= 0x200u;
          *((_DWORD *)this + 11) = v21;
        }
        int v22 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v22 >= *((void *)a2 + 2) || *v22 != 93) {
          continue;
        }
        *((void *)a2 + 1) = v22 + 1;
LABEL_83:
        unsigned int v23 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v23))
        {
          *((_DWORD *)this + 12) = v23;
          *((_DWORD *)this + 14) |= 0x400u;
          if (*((void *)a2 + 1) == *((void *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        int v6 = TagFallback & 7;
        if (v6 == 5) {
          goto LABEL_45;
        }
        goto LABEL_31;
      case 4u:
        int v6 = TagFallback & 7;
        if (v6 == 5) {
          goto LABEL_49;
        }
        goto LABEL_31;
      case 5u:
        int v6 = TagFallback & 7;
        if (v6 == 5) {
          goto LABEL_53;
        }
        goto LABEL_31;
      case 6u:
        int v6 = TagFallback & 7;
        if (v6 == 5) {
          goto LABEL_57;
        }
        goto LABEL_31;
      case 7u:
        int v6 = TagFallback & 7;
        if (v6 == 5) {
          goto LABEL_61;
        }
        goto LABEL_31;
      case 8u:
        int v6 = TagFallback & 7;
        if (v6 == 5) {
          goto LABEL_65;
        }
        goto LABEL_31;
      case 9u:
        int v6 = TagFallback & 7;
        if (v6 == 5) {
          goto LABEL_69;
        }
        goto LABEL_31;
      case 0xAu:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_31;
        }
        int v10 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        goto LABEL_73;
      case 0xBu:
        int v6 = TagFallback & 7;
        if (v6 != 5) {
          goto LABEL_31;
        }
        goto LABEL_83;
      default:
        int v6 = TagFallback & 7;
LABEL_31:
        if (v6 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 56);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 56);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(float *)(v5 + 12), a3);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(float *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(float *)(v5 + 20), a3);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(float *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(float *)(v5 + 28), a3);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (uint64_t)a2, *(float *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (uint64_t)a2, *(float *)(v5 + 36), a3);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
LABEL_22:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned int *)(v5 + 44), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 56) & 0x400) == 0) {
      return this;
    }
    goto LABEL_23;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (uint64_t)a2, *(float *)(v5 + 40), a3);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x200) != 0) {
    goto LABEL_22;
  }
LABEL_11:
  if ((v6 & 0x400) == 0) {
    return this;
  }
LABEL_23:
  float v7 = *(float *)(v5 + 48);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, (uint64_t)a2, v7, a3);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics *this)
{
  int v2 = *((_DWORD *)this + 14);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
      if ((v5 & 0x80000000) != 0)
      {
        unsigned int v3 = 11;
      }
      else if (v5 >= 0x80)
      {
        unsigned int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
        int v2 = *((_DWORD *)this + 14);
      }
      else
      {
        unsigned int v3 = 2;
      }
    }
    else
    {
      unsigned int v3 = 0;
    }
    if ((v2 & 2) != 0) {
      v3 += 5;
    }
    if ((v2 & 4) != 0) {
      v3 += 5;
    }
    if ((v2 & 8) != 0) {
      v3 += 5;
    }
    if ((v2 & 0x10) != 0) {
      v3 += 5;
    }
    if ((v2 & 0x20) != 0) {
      v3 += 5;
    }
    if ((v2 & 0x40) != 0) {
      v3 += 5;
    }
    if ((v2 & 0x80) != 0) {
      uint64_t result = v3 + 5;
    }
    else {
      uint64_t result = v3;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  if ((v2 & 0xFF00) != 0)
  {
    if ((v2 & 0x100) != 0) {
      unsigned int v6 = result + 5;
    }
    else {
      unsigned int v6 = result;
    }
    if ((v2 & 0x200) != 0)
    {
      float v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
      if ((v7 & 0x80000000) != 0)
      {
        int v8 = 11;
      }
      else if (v7 >= 0x80)
      {
        int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7) + 1;
        int v2 = *((_DWORD *)this + 14);
      }
      else
      {
        int v8 = 2;
      }
      v6 += v8;
    }
    if ((v2 & 0x400) != 0) {
      uint64_t result = v6 + 5;
    }
    else {
      uint64_t result = v6;
    }
  }
  *((_DWORD *)this + 13) = result;
  return result;
}

float CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics::MergeFrom(this, lpsrc);
}

float CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics *this, const CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics *this)
{
  return 1;
}

float CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics::Swap(CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics *this, CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics *a2)
{
  if (a2 != this)
  {
    int v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    int v3 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    int v4 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v4;
    int v5 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v5;
    int v6 = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v6;
    int v7 = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v7;
    int v8 = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v8;
    int v9 = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v9;
    int v10 = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v10;
    int v11 = *((_DWORD *)this + 11);
    *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v11;
    float result = *((float *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((float *)a2 + 12) = result;
    int v13 = *((_DWORD *)this + 14);
    *((_DWORD *)this + 14) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v13;
    int v14 = *((_DWORD *)this + 13);
    *((_DWORD *)this + 13) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v14;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.BodyMetrics");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(void *)(this + 24) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry *CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::Natalimetry(CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry *this, const CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry *a2)
{
  *(void *)this = &unk_1EDD0B7E0;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::MergeFrom(this, a2);
  return this;
}

void sub_18DF7B754(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

float CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry *this, const CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 32))
    {
      *((_DWORD *)this + 8) |= 1u;
      int v6 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
      if (!v6) {
        operator new();
      }
      int v7 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)a2 + 1);
      if (!v7)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
        int v7 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::default_instance_
                                                                             + 8);
      }
      double v4 = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v6, v7);
      int v5 = *((_DWORD *)a2 + 8);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          return *(float *)&v4;
        }
LABEL_14:
        *((_DWORD *)this + 8) |= 4u;
        int v9 = (CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics *)*((void *)this + 2);
        if (!v9) {
          operator new();
        }
        int v10 = (const CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics *)*((void *)a2 + 2);
        if (!v10)
        {
          CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
          int v10 = *(const CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics **)(CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::default_instance_
                                                                                  + 16);
        }
        *(float *)&double v4 = CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics::MergeFrom(v9, v10);
        return *(float *)&v4;
      }
    }
    else if ((*((unsigned char *)a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v8 = *((_DWORD *)a2 + 6);
    *((_DWORD *)this + 8) |= 2u;
    *((_DWORD *)this + 6) = v8;
    if ((*((_DWORD *)a2 + 8) & 4) == 0) {
      return *(float *)&v4;
    }
    goto LABEL_14;
  }
  return *(float *)&v4;
}

void sub_18DF7B91C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::~Natalimetry(CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry *this)
{
  *(void *)this = &unk_1EDD0B7E0;
  CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::~Natalimetry(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry *)CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 2);
    if (v3)
    {
      double v4 = *(void (**)(void))(*(void *)v3 + 8);
      v4();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 28) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::New(CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::Clear(uint64_t this)
{
  LOBYTE(v1) = *(unsigned char *)(this + 32);
  if ((_BYTE)v1)
  {
    if (*(unsigned char *)(this + 32))
    {
      uint64_t v2 = *(void *)(this + 8);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 36))
        {
          *(void *)(v2 + 8) = 0;
          *(void *)(v2 + 16) = 0;
          *(void *)(v2 + 24) = 0;
        }
        *(_DWORD *)(v2 + 36) = 0;
        int v1 = *(_DWORD *)(this + 32);
      }
    }
    *(_DWORD *)(this + 24) = 0;
    if ((v1 & 4) != 0)
    {
      uint64_t v3 = *(void *)(this + 16);
      if (v3)
      {
        int v4 = *(_DWORD *)(v3 + 56);
        if ((_BYTE)v4)
        {
          *(_OWORD *)(v3 + 24) = 0u;
          *(_OWORD *)(v3 + 8) = 0u;
        }
        if ((v4 & 0xFF00) != 0)
        {
          *(void *)(v3 + 40) = 0;
          *(_DWORD *)(v3 + 48) = 0;
        }
        *(_DWORD *)(v3 + 56) = 0;
      }
    }
  }
  *(_DWORD *)(this + 32) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (1)
  {
    do
    {
      while (1)
      {
        while (1)
        {
          int v4 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
          {
            unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
            *((_DWORD *)a2 + 8) = TagFallback;
            if (!TagFallback) {
              return 1;
            }
          }
          else
          {
            unint64_t TagFallback = *v4;
            *((_DWORD *)a2 + 8) = TagFallback;
            *((void *)a2 + 1) = v4 + 1;
            if (!TagFallback) {
              return 1;
            }
          }
          unsigned int v6 = TagFallback >> 3;
          if (TagFallback >> 3 != 1) {
            break;
          }
          int v7 = TagFallback & 7;
          if (v7 != 2) {
            goto LABEL_20;
          }
          *((_DWORD *)this + 8) |= 1u;
          int v9 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
          if (!v9) {
            operator new();
          }
          unsigned int v29 = 0;
          int v10 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v29))return 0; {
          }
            }
          else
          {
            unsigned int v29 = *v10;
            *((void *)a2 + 1) = v10 + 1;
          }
          int v13 = *((_DWORD *)a2 + 14);
          int v14 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v13 + 1;
          if (v13 >= v14) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream(v9, a2)
            || !*((unsigned char *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          int v15 = *((_DWORD *)a2 + 14);
          BOOL v16 = __OFSUB__(v15, 1);
          int v17 = v15 - 1;
          if (v17 < 0 == v16) {
            *((_DWORD *)a2 + 14) = v17;
          }
          int v18 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v11 = *((void *)a2 + 2);
          if ((unint64_t)v18 < v11 && *v18 == 16)
          {
            int v12 = v18 + 1;
            *((void *)a2 + 1) = v12;
            goto LABEL_32;
          }
        }
        if (v6 == 2) {
          break;
        }
        if (v6 == 3)
        {
          int v7 = TagFallback & 7;
          if (v7 == 2)
          {
            int v8 = *((_DWORD *)this + 8);
            goto LABEL_40;
          }
        }
        else
        {
          int v7 = TagFallback & 7;
        }
LABEL_20:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
      }
        }
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_20;
      }
      int v12 = (char *)*((void *)a2 + 1);
      unint64_t v11 = *((void *)a2 + 2);
LABEL_32:
      unsigned int v28 = 0;
      if ((unint64_t)v12 >= v11 || *v12 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v28);
        if (!result) {
          return result;
        }
        unsigned int v19 = v28;
        unsigned int v20 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
      }
      else
      {
        unsigned int v19 = *v12;
        unsigned int v20 = v12 + 1;
        *((void *)a2 + 1) = v20;
      }
      *((_DWORD *)this + 6) = v19;
      int v8 = *((_DWORD *)this + 8) | 2;
      *((_DWORD *)this + 8) = v8;
    }
    while ((unint64_t)v20 >= v11 || *v20 != 26);
    *((void *)a2 + 1) = v20 + 1;
LABEL_40:
    *((_DWORD *)this + 8) = v8 | 4;
    int v22 = (CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics *)*((void *)this + 2);
    if (!v22) {
      operator new();
    }
    unsigned int v30 = 0;
    unsigned int v23 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v23 >= *((void *)a2 + 2) || *v23 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30)) {
        return 0;
      }
    }
    else
    {
      unsigned int v30 = *v23;
      *((void *)a2 + 1) = v23 + 1;
    }
    int v24 = *((_DWORD *)a2 + 14);
    int v25 = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 14) = v24 + 1;
    if (v24 >= v25) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
    if (!CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics::MergePartialFromCodedStream(v22, a2)
      || !*((unsigned char *)a2 + 36))
    {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
    int v26 = *((_DWORD *)a2 + 14);
    BOOL v16 = __OFSUB__(v26, 1);
    int v27 = v26 - 1;
    if (v27 < 0 == v16) {
      *((_DWORD *)a2 + 14) = v27;
    }
    if (*((void *)a2 + 1) == *((void *)a2 + 2)
      && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
    {
      *((_DWORD *)a2 + 8) = 0;
      uint64_t result = 1;
      *((unsigned char *)a2 + 36) = 1;
      return result;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 32);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_8:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 32) & 4) == 0) {
      return this;
    }
    goto LABEL_9;
  }
  uint64_t v7 = *(void *)(this + 8);
  if (!v7)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::default_instance_ + 8);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 2) != 0) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return this;
  }
LABEL_9:
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v8 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::default_instance_ + 16);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 32);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_28;
  }
  if (*((unsigned char *)this + 32))
  {
    uint64_t v4 = *((void *)this + 1);
    if (!v4)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      uint64_t v4 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::default_instance_ + 8);
    }
    int v5 = *(unsigned __int8 *)(v4 + 36);
    if (*(unsigned char *)(v4 + 36))
    {
      int v6 = (v5 << 31 >> 31) & 9;
      if ((v5 & 2) != 0) {
        v6 += 9;
      }
      if ((v5 & 4) != 0) {
        int v5 = v6 + 9;
      }
      else {
        int v5 = v6;
      }
    }
    *(_DWORD *)(v4 + 32) = v5;
    uint64_t v3 = (v5 + 2);
    int v2 = *((_DWORD *)this + 8);
    if ((v2 & 2) == 0) {
      goto LABEL_21;
    }
  }
  else
  {
    uint64_t v3 = 0;
    if ((*((unsigned char *)this + 32) & 2) == 0) {
      goto LABEL_21;
    }
  }
  uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  if ((v7 & 0x80000000) != 0)
  {
    int v8 = 11;
  }
  else if (v7 >= 0x80)
  {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7) + 1;
    int v2 = *((_DWORD *)this + 8);
  }
  else
  {
    int v8 = 2;
  }
  uint64_t v3 = (v8 + v3);
LABEL_21:
  if ((v2 & 4) != 0)
  {
    int v9 = (CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics *)*((void *)this + 2);
    if (!v9)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(0);
      int v9 = *(CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics **)(CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::default_instance_
                                                                       + 16);
    }
    int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::BodyMetrics::ByteSize(v9);
    int v11 = (int)v10;
    if (v10 >= 0x80) {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
    }
    else {
      int v12 = 1;
    }
    uint64_t v3 = (v3 + v11 + v12 + 1);
  }
LABEL_28:
  *((_DWORD *)this + 7) = v3;
  return v3;
}

float CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::MergeFrom(this, lpsrc);
}

float CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry *this, const CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry *a2)
{
  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    uint64_t v3 = *(void *)(this + 16);
    *(void *)(this + 16) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v3;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.Natalimetry");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Timer::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::Timer *CoreNavigation::CLP::LogEntry::PrivateData::Timer::Timer(CoreNavigation::CLP::LogEntry::PrivateData::Timer *this, const CoreNavigation::CLP::LogEntry::PrivateData::Timer *a2)
{
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)this = &unk_1EDD0EC60;
  CoreNavigation::CLP::LogEntry::PrivateData::Timer::MergeFrom(this, a2);
  return this;
}

void sub_18DF7C2A8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::Timer::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::Timer *this, const CoreNavigation::CLP::LogEntry::PrivateData::Timer *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (*((unsigned char *)a2 + 20))
  {
    *((_DWORD *)this + 5) |= 1u;
    int v5 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
    if (!v5) {
      operator new();
    }
    int v6 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)a2 + 1);
    if (!v6)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      int v6 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::Timer::default_instance_
                                                                           + 8);
    }
    return CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v5, v6);
  }
  return result;
}

void sub_18DF7C3B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::Timer::~Timer(CoreNavigation::CLP::LogEntry::PrivateData::Timer *this)
{
  *(void *)this = &unk_1EDD0EC60;
  CoreNavigation::CLP::LogEntry::PrivateData::Timer::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::Timer::~Timer(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::PrivateData::Timer::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::Timer *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::Timer *)CoreNavigation::CLP::LogEntry::PrivateData::Timer::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2)
    {
      uint64_t v3 = *(void (**)(void))(*(void *)v2 + 8);
      v3();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Timer::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::Timer *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::Timer::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Timer::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 16) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::Timer::New(CoreNavigation::CLP::LogEntry::PrivateData::Timer *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Timer::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 20))
  {
    uint64_t v1 = *(void *)(this + 8);
    if (v1)
    {
      if (*(unsigned char *)(v1 + 36))
      {
        *(void *)(v1 + 8) = 0;
        *(void *)(v1 + 16) = 0;
        *(void *)(v1 + 24) = 0;
      }
      *(_DWORD *)(v1 + 36) = 0;
    }
  }
  *(_DWORD *)(this + 20) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Timer::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::Timer *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (1)
  {
    while (1)
    {
      uint64_t v4 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
      }
      else
      {
        unint64_t TagFallback = *v4;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v4 + 1;
      }
      if (TagFallback != 10) {
        break;
      }
      *((_DWORD *)this + 5) |= 1u;
      int v6 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
      if (!v6) {
        operator new();
      }
      unsigned int v14 = 0;
      uint64_t v7 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v7 >= *((void *)a2 + 2) || *v7 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v14)) {
          return 0;
        }
      }
      else
      {
        unsigned int v14 = *v7;
        *((void *)a2 + 1) = v7 + 1;
      }
      int v8 = *((_DWORD *)a2 + 14);
      int v9 = *((_DWORD *)a2 + 15);
      *((_DWORD *)a2 + 14) = v8 + 1;
      if (v8 >= v9) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
      if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream(v6, a2)
        || !*((unsigned char *)a2 + 36))
      {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
      int v10 = *((_DWORD *)a2 + 14);
      BOOL v11 = __OFSUB__(v10, 1);
      int v12 = v10 - 1;
      if (v12 < 0 == v11) {
        *((_DWORD *)a2 + 14) = v12;
      }
      if (*((void *)a2 + 1) == *((void *)a2 + 2)
        && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      break;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Timer::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if (*(unsigned char *)(this + 20))
  {
    uint64_t v5 = *(void *)(this + 8);
    if (!v5)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      uint64_t v5 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::Timer::default_instance_ + 8);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v5, a2, a4);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Timer::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::Timer *this)
{
  if (*((unsigned char *)this + 20))
  {
    uint64_t v3 = *((void *)this + 1);
    if (!v3)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      uint64_t v3 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::Timer::default_instance_ + 8);
    }
    int v4 = *(unsigned __int8 *)(v3 + 36);
    if (*(unsigned char *)(v3 + 36))
    {
      int v5 = (v4 << 31 >> 31) & 9;
      if ((v4 & 2) != 0) {
        v5 += 9;
      }
      if ((v4 & 4) != 0) {
        int v4 = v5 + 9;
      }
      else {
        int v4 = v5;
      }
    }
    *(_DWORD *)(v3 + 32) = v4;
    uint64_t result = (v4 + 2);
  }
  else
  {
    uint64_t result = 0;
  }
  *((_DWORD *)this + 4) = result;
  return result;
}

double CoreNavigation::CLP::LogEntry::PrivateData::Timer::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::Timer *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::Timer::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::Timer::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::Timer *this, const CoreNavigation::CLP::LogEntry::PrivateData::Timer *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::Timer *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::Timer::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Timer::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::Timer *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Timer::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::Timer *a2)
{
  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::Timer *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::Timer::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.Timer");
}

double CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel *this)
{
  double result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel *CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::DigitalElevationModel(CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel *this, const CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel *a2)
{
  *(void *)this = &unk_1EDD0DA90;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::MergeFrom(this, a2);
  return this;
}

void sub_18DF7CA24(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

float CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel *this, const CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 52);
  if (!(_BYTE)v5) {
    return *(float *)&v4;
  }
  if (*((unsigned char *)a2 + 52))
  {
    *((_DWORD *)this + 13) |= 1u;
    uint64_t v7 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
    if (!v7) {
      operator new();
    }
    int v8 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)a2 + 1);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      int v8 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::default_instance_
                                                                           + 8);
    }
    double v4 = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v7, v8);
    int v5 = *((_DWORD *)a2 + 13);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_19;
    }
  }
  else if ((*((unsigned char *)a2 + 52) & 2) == 0)
  {
    goto LABEL_6;
  }
  double v4 = *((double *)a2 + 2);
  *((_DWORD *)this + 13) |= 2u;
  *((double *)this + 2) = v4;
  int v5 = *((_DWORD *)a2 + 13);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }
LABEL_19:
  double v4 = *((double *)a2 + 3);
  *((_DWORD *)this + 13) |= 4u;
  *((double *)this + 3) = v4;
  int v5 = *((_DWORD *)a2 + 13);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_21;
  }
LABEL_20:
  LODWORD(v4) = *((_DWORD *)a2 + 8);
  *((_DWORD *)this + 13) |= 8u;
  *((_DWORD *)this + 8) = LODWORD(v4);
  int v5 = *((_DWORD *)a2 + 13);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_22:
    LODWORD(v4) = *((_DWORD *)a2 + 10);
    *((_DWORD *)this + 13) |= 0x20u;
    *((_DWORD *)this + 10) = LODWORD(v4);
    if ((*((_DWORD *)a2 + 13) & 0x40) != 0) {
      goto LABEL_11;
    }
    return *(float *)&v4;
  }
LABEL_21:
  LODWORD(v4) = *((_DWORD *)a2 + 9);
  *((_DWORD *)this + 13) |= 0x10u;
  *((_DWORD *)this + 9) = LODWORD(v4);
  int v5 = *((_DWORD *)a2 + 13);
  if ((v5 & 0x20) != 0) {
    goto LABEL_22;
  }
LABEL_10:
  if ((v5 & 0x40) != 0)
  {
LABEL_11:
    int v6 = *((_DWORD *)a2 + 11);
    *((_DWORD *)this + 13) |= 0x40u;
    *((_DWORD *)this + 11) = v6;
  }
  return *(float *)&v4;
}

void sub_18DF7CBFC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::~DigitalElevationModel(CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel *this)
{
  *(void *)this = &unk_1EDD0DA90;
  CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::~DigitalElevationModel(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel *)CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2)
    {
      uint64_t v3 = *(void (**)(void))(*(void *)v2 + 8);
      v3();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 48) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::New(CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 52))
  {
    if (*(unsigned char *)(this + 52))
    {
      uint64_t v1 = *(void *)(this + 8);
      if (v1)
      {
        if (*(unsigned char *)(v1 + 36))
        {
          *(void *)(v1 + 8) = 0;
          *(void *)(v1 + 16) = 0;
          *(void *)(v1 + 24) = 0;
        }
        *(_DWORD *)(v1 + 36) = 0;
      }
    }
    *(_OWORD *)(this + 16) = 0u;
    *(_OWORD *)(this + 32) = 0u;
  }
  *(_DWORD *)(this + 52) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (2)
  {
    double v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_25;
        }
        *((_DWORD *)this + 13) |= 1u;
        uint64_t v7 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
        if (!v7) {
          operator new();
        }
        v25[0] = 0;
        int v8 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v25))return 0; {
        }
          }
        else
        {
          v25[0] = *v8;
          *((void *)a2 + 1) = v8 + 1;
        }
        int v11 = *((_DWORD *)a2 + 14);
        int v12 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v11 + 1;
        if (v11 >= v12) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream(v7, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v13 = *((_DWORD *)a2 + 14);
        BOOL v14 = __OFSUB__(v13, 1);
        int v15 = v13 - 1;
        if (v15 < 0 == v14) {
          *((_DWORD *)a2 + 14) = v15;
        }
        BOOL v16 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v16 >= *((void *)a2 + 2) || *v16 != 17) {
          continue;
        }
        *((void *)a2 + 1) = v16 + 1;
        goto LABEL_38;
      case 2u:
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_25;
        }
LABEL_38:
        *(void *)int v25 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v25) & 1) == 0)return 0; {
        *((void *)this + 2) = *(void *)v25;
        }
        *((_DWORD *)this + 13) |= 2u;
        int v17 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v17 >= *((void *)a2 + 2) || *v17 != 25) {
          continue;
        }
        *((void *)a2 + 1) = v17 + 1;
LABEL_42:
        *(void *)int v25 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v25) & 1) == 0)return 0; {
        *((void *)this + 3) = *(void *)v25;
        }
        *((_DWORD *)this + 13) |= 4u;
        int v18 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v18 >= *((void *)a2 + 2) || *v18 != 37) {
          continue;
        }
        *((void *)a2 + 1) = v18 + 1;
LABEL_46:
        v25[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v25) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 8) = v25[0];
        *((_DWORD *)this + 13) |= 8u;
        unsigned int v19 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v19 >= *((void *)a2 + 2) || *v19 != 45) {
          continue;
        }
        *((void *)a2 + 1) = v19 + 1;
LABEL_50:
        v25[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v25) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 9) = v25[0];
        *((_DWORD *)this + 13) |= 0x10u;
        unsigned int v20 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v20 >= *((void *)a2 + 2) || *v20 != 53) {
          continue;
        }
        *((void *)a2 + 1) = v20 + 1;
LABEL_54:
        v25[0] = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v25))
        {
          *((_DWORD *)this + 10) = v25[0];
          *((_DWORD *)this + 13) |= 0x20u;
          unsigned int v21 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
          if ((unint64_t)v21 < v9 && *v21 == 56)
          {
            int v10 = v21 + 1;
            *((void *)a2 + 1) = v10;
LABEL_58:
            v25[0] = 0;
            if ((unint64_t)v10 >= v9 || *v10 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v25);
              if (!result) {
                return result;
              }
              unsigned int v22 = v25[0];
              unsigned int v23 = (unsigned __int8 *)*((void *)a2 + 1);
              unint64_t v9 = *((void *)a2 + 2);
            }
            else
            {
              unsigned int v22 = *v10;
              unsigned int v23 = (unsigned __int8 *)(v10 + 1);
              *((void *)a2 + 1) = v23;
            }
            *((_DWORD *)this + 11) = v22;
            *((_DWORD *)this + 13) |= 0x40u;
            if (v23 == (unsigned __int8 *)v9 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
            {
              *((_DWORD *)a2 + 8) = 0;
              uint64_t result = 1;
              *((unsigned char *)a2 + 36) = 1;
              return result;
            }
          }
          continue;
        }
        return 0;
      case 3u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_42;
        }
        goto LABEL_25;
      case 4u:
        int v6 = TagFallback & 7;
        if (v6 == 5) {
          goto LABEL_46;
        }
        goto LABEL_25;
      case 5u:
        int v6 = TagFallback & 7;
        if (v6 == 5) {
          goto LABEL_50;
        }
        goto LABEL_25;
      case 6u:
        int v6 = TagFallback & 7;
        if (v6 == 5) {
          goto LABEL_54;
        }
        goto LABEL_25;
      case 7u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        int v10 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        goto LABEL_58;
      default:
        int v6 = TagFallback & 7;
LABEL_25:
        if (v6 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 52);
  if (v6)
  {
    uint64_t v7 = *(void *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 52);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(float *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
LABEL_16:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(float *)(v5 + 40), a3);
    if ((*(_DWORD *)(v5 + 52) & 0x40) == 0) {
      return this;
    }
    goto LABEL_17;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(float *)(v5 + 36), a3);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x20) != 0) {
    goto LABEL_16;
  }
LABEL_7:
  if ((v6 & 0x40) == 0) {
    return this;
  }
LABEL_17:
  uint64_t v8 = *(unsigned int *)(v5 + 44);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v8, (uint64_t)a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 52);
  if ((_BYTE)v2)
  {
    if (*((unsigned char *)this + 52))
    {
      uint64_t v5 = *((void *)this + 1);
      if (!v5)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
        uint64_t v5 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::default_instance_ + 8);
      }
      int v6 = *(unsigned __int8 *)(v5 + 36);
      if (*(unsigned char *)(v5 + 36))
      {
        int v7 = (v6 << 31 >> 31) & 9;
        if ((v6 & 2) != 0) {
          v7 += 9;
        }
        if ((v6 & 4) != 0) {
          int v6 = v7 + 9;
        }
        else {
          int v6 = v7;
        }
      }
      *(_DWORD *)(v5 + 32) = v6;
      unsigned int v3 = v6 + 2;
      int v2 = *((_DWORD *)this + 13);
    }
    else
    {
      unsigned int v3 = 0;
    }
    if ((v2 & 2) != 0) {
      v3 += 9;
    }
    if ((v2 & 4) != 0) {
      v3 += 9;
    }
    if ((v2 & 8) != 0) {
      v3 += 5;
    }
    if ((v2 & 0x10) != 0) {
      v3 += 5;
    }
    if ((v2 & 0x20) != 0) {
      uint64_t v4 = v3 + 5;
    }
    else {
      uint64_t v4 = v3;
    }
    if ((v2 & 0x40) != 0)
    {
      uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
      if ((v8 & 0x80000000) != 0)
      {
        int v9 = 11;
      }
      else if (v8 >= 0x80)
      {
        int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8) + 1;
      }
      else
      {
        int v9 = 2;
      }
      uint64_t v4 = (v9 + v4);
    }
  }
  else
  {
    uint64_t v4 = 0;
  }
  *((_DWORD *)this + 12) = v4;
  return v4;
}

float CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::MergeFrom(this, lpsrc);
}

float CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel *this, const CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel *this)
{
  return 1;
}

float CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::Swap(CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel *this, CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    uint64_t v3 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    uint64_t v4 = *((void *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v4;
    LODWORD(v4) = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v4;
    LODWORD(v4) = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v4;
    float result = *((float *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((float *)a2 + 10) = result;
    LODWORD(v2) = *((_DWORD *)this + 11);
    *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v2;
    LODWORD(v2) = *((_DWORD *)this + 13);
    *((_DWORD *)this + 13) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v2;
    LODWORD(v2) = *((_DWORD *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v2;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.DigitalElevationModel");
}

double CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel *this)
{
  double result = 0.0;
  *(_OWORD *)((char *)this + 84) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel *CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::DirectionOfTravel(CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel *this, const CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel *a2)
{
  *(void *)this = &unk_1EDD0CC08;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 84) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::MergeFrom(this, a2);
  return this;
}

void sub_18DF7D6B8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel *this, const CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v20);
  }
  int v4 = *((_DWORD *)a2 + 24);
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    *((_DWORD *)this + 24) |= 1u;
    int v7 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
    if (!v7) {
      operator new();
    }
    uint64_t v8 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)a2 + 1);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      uint64_t v8 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::default_instance_
                                                                           + 8);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v7, v8);
    int v4 = *((_DWORD *)a2 + 24);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_28;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  uint64_t v9 = *((void *)a2 + 2);
  *((_DWORD *)this + 24) |= 2u;
  *((void *)this + 2) = v9;
  int v4 = *((_DWORD *)a2 + 24);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t v10 = *((void *)a2 + 3);
  *((_DWORD *)this + 24) |= 4u;
  *((void *)this + 3) = v10;
  int v4 = *((_DWORD *)a2 + 24);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_30;
  }
LABEL_29:
  uint64_t v11 = *((void *)a2 + 4);
  *((_DWORD *)this + 24) |= 8u;
  *((void *)this + 4) = v11;
  int v4 = *((_DWORD *)a2 + 24);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_31:
    uint64_t v13 = *((void *)a2 + 6);
    *((_DWORD *)this + 24) |= 0x20u;
    *((void *)this + 6) = v13;
    int v4 = *((_DWORD *)a2 + 24);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_32;
  }
LABEL_30:
  uint64_t v12 = *((void *)a2 + 5);
  *((_DWORD *)this + 24) |= 0x10u;
  *((void *)this + 5) = v12;
  int v4 = *((_DWORD *)a2 + 24);
  if ((v4 & 0x20) != 0) {
    goto LABEL_31;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_32:
  uint64_t v14 = *((void *)a2 + 7);
  *((_DWORD *)this + 24) |= 0x40u;
  *((void *)this + 7) = v14;
  int v4 = *((_DWORD *)a2 + 24);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    uint64_t v5 = *((void *)a2 + 8);
    *((_DWORD *)this + 24) |= 0x80u;
    *((void *)this + 8) = v5;
    int v4 = *((_DWORD *)a2 + 24);
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0) {
    return;
  }
  if ((v4 & 0x100) != 0)
  {
    uint64_t v15 = *((void *)a2 + 9);
    *((_DWORD *)this + 24) |= 0x100u;
    *((void *)this + 9) = v15;
    int v4 = *((_DWORD *)a2 + 24);
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0) {
        goto LABEL_17;
      }
      goto LABEL_36;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  uint64_t v16 = *((void *)a2 + 10);
  *((_DWORD *)this + 24) |= 0x200u;
  *((void *)this + 10) = v16;
  int v4 = *((_DWORD *)a2 + 24);
  if ((v4 & 0x400) == 0)
  {
LABEL_17:
    if ((v4 & 0x800) == 0) {
      goto LABEL_18;
    }
    goto LABEL_37;
  }
LABEL_36:
  char v17 = *((unsigned char *)a2 + 88);
  *((_DWORD *)this + 24) |= 0x400u;
  *((unsigned char *)this + 88) = v17;
  int v4 = *((_DWORD *)a2 + 24);
  if ((v4 & 0x800) == 0)
  {
LABEL_18:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_38;
  }
LABEL_37:
  char v18 = *((unsigned char *)a2 + 89);
  *((_DWORD *)this + 24) |= 0x800u;
  *((unsigned char *)this + 89) = v18;
  int v4 = *((_DWORD *)a2 + 24);
  if ((v4 & 0x1000) == 0)
  {
LABEL_19:
    if ((v4 & 0x2000) == 0) {
      return;
    }
    goto LABEL_20;
  }
LABEL_38:
  char v19 = *((unsigned char *)a2 + 90);
  *((_DWORD *)this + 24) |= 0x1000u;
  *((unsigned char *)this + 90) = v19;
  if ((*((_DWORD *)a2 + 24) & 0x2000) == 0) {
    return;
  }
LABEL_20:
  char v6 = *((unsigned char *)a2 + 91);
  *((_DWORD *)this + 24) |= 0x2000u;
  *((unsigned char *)this + 91) = v6;
}

void sub_18DF7D97C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::~DirectionOfTravel(CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel *this)
{
  *(void *)this = &unk_1EDD0CC08;
  CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::~DirectionOfTravel(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel *)CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2)
    {
      uint64_t v3 = *(void (**)(void))(*(void *)v2 + 8);
      v3();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 92) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::New(CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 96);
  if ((_BYTE)v1)
  {
    if (v1)
    {
      uint64_t v2 = *(void *)(this + 8);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 36))
        {
          *(void *)(v2 + 8) = 0;
          *(void *)(v2 + 16) = 0;
          *(void *)(v2 + 24) = 0;
        }
        *(_DWORD *)(v2 + 36) = 0;
        int v1 = *(_DWORD *)(this + 96);
      }
    }
    *(void *)(this + 64) = 0;
    *(_OWORD *)(this + 32) = 0u;
    *(_OWORD *)(this + 48) = 0u;
    *(_OWORD *)(this + 16) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(void *)(this + 72) = 0;
    *(void *)(this + 80) = 0;
    *(_DWORD *)(this + 88) = 0;
  }
  *(_DWORD *)(this + 96) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (2)
  {
    int v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_39;
        }
        *((_DWORD *)this + 24) |= 1u;
        int v7 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
        if (!v7) {
          operator new();
        }
        v38[0] = 0;
        uint64_t v8 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v38))return 0; {
        }
          }
        else
        {
          v38[0] = *v8;
          *((void *)a2 + 1) = v8 + 1;
        }
        int v14 = *((_DWORD *)a2 + 14);
        int v15 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v14 + 1;
        if (v14 >= v15) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream(v7, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v16 = *((_DWORD *)a2 + 14);
        BOOL v17 = __OFSUB__(v16, 1);
        int v18 = v16 - 1;
        if (v18 < 0 == v17) {
          *((_DWORD *)a2 + 14) = v18;
        }
        char v19 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v19 >= *((void *)a2 + 2) || *v19 != 17) {
          continue;
        }
        *((void *)a2 + 1) = v19 + 1;
        goto LABEL_52;
      case 2u:
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_39;
        }
LABEL_52:
        *(void *)int v38 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v38) & 1) == 0)return 0; {
        *((void *)this + 2) = *(void *)v38;
        }
        *((_DWORD *)this + 24) |= 2u;
        unsigned int v20 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v20 >= *((void *)a2 + 2) || *v20 != 25) {
          continue;
        }
        *((void *)a2 + 1) = v20 + 1;
LABEL_56:
        *(void *)int v38 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v38) & 1) == 0)return 0; {
        *((void *)this + 3) = *(void *)v38;
        }
        *((_DWORD *)this + 24) |= 4u;
        unsigned int v21 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v21 >= *((void *)a2 + 2) || *v21 != 33) {
          continue;
        }
        *((void *)a2 + 1) = v21 + 1;
LABEL_60:
        *(void *)int v38 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v38) & 1) == 0)return 0; {
        *((void *)this + 4) = *(void *)v38;
        }
        *((_DWORD *)this + 24) |= 8u;
        unsigned int v22 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v22 >= *((void *)a2 + 2) || *v22 != 41) {
          continue;
        }
        *((void *)a2 + 1) = v22 + 1;
LABEL_64:
        *(void *)int v38 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v38) & 1) == 0)return 0; {
        *((void *)this + 5) = *(void *)v38;
        }
        *((_DWORD *)this + 24) |= 0x10u;
        unsigned int v23 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v23 >= *((void *)a2 + 2) || *v23 != 49) {
          continue;
        }
        *((void *)a2 + 1) = v23 + 1;
LABEL_68:
        *(void *)int v38 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v38) & 1) == 0)return 0; {
        *((void *)this + 6) = *(void *)v38;
        }
        *((_DWORD *)this + 24) |= 0x20u;
        int v24 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v24 >= *((void *)a2 + 2) || *v24 != 57) {
          continue;
        }
        *((void *)a2 + 1) = v24 + 1;
LABEL_72:
        *(void *)int v38 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v38) & 1) == 0)return 0; {
        *((void *)this + 7) = *(void *)v38;
        }
        *((_DWORD *)this + 24) |= 0x40u;
        int v25 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v25 >= *((void *)a2 + 2) || *v25 != 65) {
          continue;
        }
        *((void *)a2 + 1) = v25 + 1;
LABEL_76:
        *(void *)int v38 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v38) & 1) == 0)return 0; {
        *((void *)this + 8) = *(void *)v38;
        }
        *((_DWORD *)this + 24) |= 0x80u;
        int v26 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v26 >= *((void *)a2 + 2) || *v26 != 73) {
          continue;
        }
        *((void *)a2 + 1) = v26 + 1;
LABEL_80:
        *(void *)int v38 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v38) & 1) == 0)return 0; {
        *((void *)this + 9) = *(void *)v38;
        }
        *((_DWORD *)this + 24) |= 0x100u;
        int v27 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v27 >= *((void *)a2 + 2) || *v27 != 81) {
          continue;
        }
        *((void *)a2 + 1) = v27 + 1;
LABEL_84:
        *(void *)int v38 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v38))
        {
          *((void *)this + 10) = *(void *)v38;
          *((_DWORD *)this + 24) |= 0x200u;
          unsigned int v28 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
          if ((unint64_t)v28 < v9 && *v28 == 88)
          {
            uint64_t v10 = v28 + 1;
            *((void *)a2 + 1) = v10;
LABEL_88:
            v38[0] = 0;
            if ((unint64_t)v10 >= v9 || *v10 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v38);
              if (!result) {
                return result;
              }
              unsigned int v29 = v38[0];
              unsigned int v30 = (unsigned char *)*((void *)a2 + 1);
              unint64_t v9 = *((void *)a2 + 2);
            }
            else
            {
              unsigned int v29 = *v10;
              unsigned int v30 = v10 + 1;
              *((void *)a2 + 1) = v30;
            }
            *((unsigned char *)this + 88) = v29 != 0;
            *((_DWORD *)this + 24) |= 0x400u;
            if ((unint64_t)v30 < v9 && *v30 == 96)
            {
              uint64_t v11 = v30 + 1;
              *((void *)a2 + 1) = v11;
LABEL_96:
              v38[0] = 0;
              if ((unint64_t)v11 >= v9 || *v11 < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v38);
                if (!result) {
                  return result;
                }
                unsigned int v32 = v38[0];
                unsigned int v33 = (unsigned char *)*((void *)a2 + 1);
                unint64_t v9 = *((void *)a2 + 2);
              }
              else
              {
                unsigned int v32 = *v11;
                unsigned int v33 = v11 + 1;
                *((void *)a2 + 1) = v33;
              }
              *((unsigned char *)this + 89) = v32 != 0;
              *((_DWORD *)this + 24) |= 0x800u;
              if ((unint64_t)v33 < v9 && *v33 == 104)
              {
                uint64_t v12 = v33 + 1;
                *((void *)a2 + 1) = v12;
LABEL_104:
                v38[0] = 0;
                if ((unint64_t)v12 >= v9 || *v12 < 0)
                {
                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v38);
                  if (!result) {
                    return result;
                  }
                  unsigned int v34 = v38[0];
                  int v35 = (unsigned char *)*((void *)a2 + 1);
                  unint64_t v9 = *((void *)a2 + 2);
                }
                else
                {
                  unsigned int v34 = *v12;
                  int v35 = v12 + 1;
                  *((void *)a2 + 1) = v35;
                }
                *((unsigned char *)this + 90) = v34 != 0;
                *((_DWORD *)this + 24) |= 0x1000u;
                if ((unint64_t)v35 < v9 && *v35 == 112)
                {
                  uint64_t v13 = v35 + 1;
                  *((void *)a2 + 1) = v13;
LABEL_112:
                  v38[0] = 0;
                  if ((unint64_t)v13 >= v9 || *v13 < 0)
                  {
                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v38);
                    if (!result) {
                      return result;
                    }
                    unsigned int v36 = v38[0];
                    int v37 = (unsigned __int8 *)*((void *)a2 + 1);
                    unint64_t v9 = *((void *)a2 + 2);
                  }
                  else
                  {
                    unsigned int v36 = *v13;
                    int v37 = (unsigned __int8 *)(v13 + 1);
                    *((void *)a2 + 1) = v37;
                  }
                  *((unsigned char *)this + 91) = v36 != 0;
                  *((_DWORD *)this + 24) |= 0x2000u;
                  if (v37 == (unsigned __int8 *)v9
                    && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                  {
                    *((_DWORD *)a2 + 8) = 0;
                    uint64_t result = 1;
                    *((unsigned char *)a2 + 36) = 1;
                    return result;
                  }
                }
              }
            }
          }
          continue;
        }
        return 0;
      case 3u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_56;
        }
        goto LABEL_39;
      case 4u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_60;
        }
        goto LABEL_39;
      case 5u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_64;
        }
        goto LABEL_39;
      case 6u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_68;
        }
        goto LABEL_39;
      case 7u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_72;
        }
        goto LABEL_39;
      case 8u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_76;
        }
        goto LABEL_39;
      case 9u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_80;
        }
        goto LABEL_39;
      case 0xAu:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_84;
        }
        goto LABEL_39;
      case 0xBu:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_39;
        }
        uint64_t v10 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        goto LABEL_88;
      case 0xCu:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_39;
        }
        uint64_t v11 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        goto LABEL_96;
      case 0xDu:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_39;
        }
        uint64_t v12 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        goto LABEL_104;
      case 0xEu:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_39;
        }
        uint64_t v13 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        goto LABEL_112;
      default:
        int v6 = TagFallback & 7;
LABEL_39:
        if (v6 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 96);
  if (v6)
  {
    uint64_t v7 = *(void *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 96);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_20;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_22;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_23;
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(v5 + 40), a3);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_24;
  }
LABEL_23:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(double *)(v5 + 48), a3);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_25;
  }
LABEL_24:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (uint64_t)a2, *(double *)(v5 + 56), a3);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_26;
  }
LABEL_25:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (uint64_t)a2, *(double *)(v5 + 64), a3);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_27;
  }
LABEL_26:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (uint64_t)a2, *(double *)(v5 + 72), a3);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_28;
  }
LABEL_27:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (uint64_t)a2, *(double *)(v5 + 80), a3);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_29;
  }
LABEL_28:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(unsigned __int8 *)(v5 + 88), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
LABEL_30:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, *(unsigned __int8 *)(v5 + 90), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 96) & 0x2000) == 0) {
      return this;
    }
    goto LABEL_31;
  }
LABEL_29:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(unsigned __int8 *)(v5 + 89), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x1000) != 0) {
    goto LABEL_30;
  }
LABEL_14:
  if ((v6 & 0x2000) == 0) {
    return this;
  }
LABEL_31:
  uint64_t v8 = *(unsigned __int8 *)(v5 + 91);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, v8, (uint64_t)a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel *this)
{
  int v2 = *((_DWORD *)this + 24);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      uint64_t v5 = *((void *)this + 1);
      if (!v5)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
        uint64_t v5 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::default_instance_ + 8);
      }
      int v6 = *(unsigned __int8 *)(v5 + 36);
      if (*(unsigned char *)(v5 + 36))
      {
        int v7 = (v6 << 31 >> 31) & 9;
        if ((v6 & 2) != 0) {
          v7 += 9;
        }
        if ((v6 & 4) != 0) {
          int v6 = v7 + 9;
        }
        else {
          int v6 = v7;
        }
      }
      *(_DWORD *)(v5 + 32) = v6;
      unsigned int v3 = v6 + 2;
      int v2 = *((_DWORD *)this + 24);
    }
    else
    {
      unsigned int v3 = 0;
    }
    if ((v2 & 2) != 0) {
      v3 += 9;
    }
    if ((v2 & 4) != 0) {
      v3 += 9;
    }
    if ((v2 & 8) != 0) {
      v3 += 9;
    }
    if ((v2 & 0x10) != 0) {
      v3 += 9;
    }
    if ((v2 & 0x20) != 0) {
      v3 += 9;
    }
    if ((v2 & 0x40) != 0) {
      v3 += 9;
    }
    if ((v2 & 0x80) != 0) {
      uint64_t result = v3 + 9;
    }
    else {
      uint64_t result = v3;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  if ((v2 & 0xFF00) != 0)
  {
    unsigned int v8 = result + 9;
    if ((v2 & 0x100) == 0) {
      unsigned int v8 = result;
    }
    if ((v2 & 0x200) != 0) {
      v8 += 9;
    }
    if ((v2 & 0x400) != 0) {
      v8 += 2;
    }
    if ((v2 & 0x800) != 0) {
      v8 += 2;
    }
    if ((v2 & 0x1000) != 0) {
      v8 += 2;
    }
    if ((v2 & 0x2000) != 0) {
      uint64_t result = v8 + 2;
    }
    else {
      uint64_t result = v8;
    }
  }
  *((_DWORD *)this + 23) = result;
  return result;
}

void CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel *this, const CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::Swap(CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel *this, CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    uint64_t v3 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    uint64_t v4 = *((void *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v4;
    uint64_t v5 = *((void *)this + 4);
    *((void *)this + 4) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v5;
    uint64_t v6 = *((void *)this + 5);
    *((void *)this + 5) = *((void *)a2 + 5);
    *((void *)a2 + 5) = v6;
    uint64_t v7 = *((void *)this + 6);
    *((void *)this + 6) = *((void *)a2 + 6);
    *((void *)a2 + 6) = v7;
    uint64_t v8 = *((void *)this + 7);
    *((void *)this + 7) = *((void *)a2 + 7);
    *((void *)a2 + 7) = v8;
    uint64_t v9 = *((void *)this + 8);
    *((void *)this + 8) = *((void *)a2 + 8);
    *((void *)a2 + 8) = v9;
    uint64_t v10 = *((void *)this + 9);
    *((void *)this + 9) = *((void *)a2 + 9);
    *((void *)a2 + 9) = v10;
    double result = *((double *)this + 10);
    *((void *)this + 10) = *((void *)a2 + 10);
    *((double *)a2 + 10) = result;
    LOBYTE(v2) = *((unsigned char *)this + 88);
    *((unsigned char *)this + 88) = *((unsigned char *)a2 + 88);
    *((unsigned char *)a2 + 88) = v2;
    LOBYTE(v2) = *((unsigned char *)this + 89);
    *((unsigned char *)this + 89) = *((unsigned char *)a2 + 89);
    *((unsigned char *)a2 + 89) = v2;
    LOBYTE(v2) = *((unsigned char *)this + 90);
    *((unsigned char *)this + 90) = *((unsigned char *)a2 + 90);
    *((unsigned char *)a2 + 90) = v2;
    LOBYTE(v2) = *((unsigned char *)this + 91);
    *((unsigned char *)this + 91) = *((unsigned char *)a2 + 91);
    *((unsigned char *)a2 + 91) = v2;
    LODWORD(v2) = *((_DWORD *)this + 24);
    *((_DWORD *)this + 24) = *((_DWORD *)a2 + 24);
    *((_DWORD *)a2 + 24) = v2;
    LODWORD(v2) = *((_DWORD *)this + 23);
    *((_DWORD *)this + 23) = *((_DWORD *)a2 + 23);
    *((_DWORD *)a2 + 23) = v2;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.DirectionOfTravel");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapVector::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(void *)(this + 24) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::MapVector *CoreNavigation::CLP::LogEntry::PrivateData::MapVector::MapVector(CoreNavigation::CLP::LogEntry::PrivateData::MapVector *this, const CoreNavigation::CLP::LogEntry::PrivateData::MapVector *a2)
{
  *(void *)this = &unk_1EDD0F098;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::MapVector::MergeFrom(this, a2);
  return this;
}

void sub_18DF7E89C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MapVector::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::MapVector *this, const CoreNavigation::CLP::LogEntry::PrivateData::MapVector *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 32))
    {
      *((_DWORD *)this + 8) |= 1u;
      uint64_t v5 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
      if (!v5) {
        operator new();
      }
      uint64_t v6 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)a2 + 1);
      if (!v6)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
        uint64_t v6 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::MapVector::default_instance_
                                                                             + 8);
      }
      CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v5, v6);
      int v4 = *((_DWORD *)a2 + 8);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          return;
        }
        goto LABEL_14;
      }
    }
    else if ((*((unsigned char *)a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v7 = *((_DWORD *)a2 + 6);
    *((_DWORD *)this + 8) |= 2u;
    *((_DWORD *)this + 6) = v7;
    if ((*((_DWORD *)a2 + 8) & 4) == 0) {
      return;
    }
LABEL_14:
    *((_DWORD *)this + 8) |= 4u;
    uint64_t v8 = (CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel *)*((void *)this + 2);
    if (!v8) {
      operator new();
    }
    uint64_t v9 = (const CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel *)*((void *)a2 + 2);
    if (!v9)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      uint64_t v9 = *(const CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel **)(CoreNavigation::CLP::LogEntry::PrivateData::MapVector::default_instance_
                                                                                   + 16);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::MergeFrom(v8, v9);
  }
}

void sub_18DF7EA6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MapVector::~MapVector(CoreNavigation::CLP::LogEntry::PrivateData::MapVector *this)
{
  *(void *)this = &unk_1EDD0F098;
  CoreNavigation::CLP::LogEntry::PrivateData::MapVector::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::MapVector::~MapVector(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MapVector::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::MapVector *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::MapVector *)CoreNavigation::CLP::LogEntry::PrivateData::MapVector::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 2);
    if (v3)
    {
      int v4 = *(void (**)(void))(*(void *)v3 + 8);
      v4();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapVector::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::MapVector *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::MapVector::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapVector::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 28) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::MapVector::New(CoreNavigation::CLP::LogEntry::PrivateData::MapVector *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapVector::Clear(uint64_t this)
{
  uint64_t v1 = this;
  LOBYTE(v2) = *(unsigned char *)(this + 32);
  if ((_BYTE)v2)
  {
    if (*(unsigned char *)(this + 32))
    {
      uint64_t v3 = *(void *)(this + 8);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
          *(void *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        int v2 = *(_DWORD *)(this + 32);
      }
    }
    *(_DWORD *)(this + 24) = 0;
    if ((v2 & 4) != 0)
    {
      this = *(void *)(this + 16);
      if (this) {
        this = CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::Clear(this);
      }
    }
  }
  *(_DWORD *)(v1 + 32) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapVector::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::MapVector *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (1)
  {
    do
    {
      while (1)
      {
        while (1)
        {
          int v4 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
          {
            unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
            *((_DWORD *)a2 + 8) = TagFallback;
            if (!TagFallback) {
              return 1;
            }
          }
          else
          {
            unint64_t TagFallback = *v4;
            *((_DWORD *)a2 + 8) = TagFallback;
            *((void *)a2 + 1) = v4 + 1;
            if (!TagFallback) {
              return 1;
            }
          }
          unsigned int v6 = TagFallback >> 3;
          if (TagFallback >> 3 != 1) {
            break;
          }
          int v7 = TagFallback & 7;
          if (v7 != 2) {
            goto LABEL_20;
          }
          *((_DWORD *)this + 8) |= 1u;
          uint64_t v9 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
          if (!v9) {
            operator new();
          }
          unsigned int v29 = 0;
          uint64_t v10 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v29))return 0; {
          }
            }
          else
          {
            unsigned int v29 = *v10;
            *((void *)a2 + 1) = v10 + 1;
          }
          int v13 = *((_DWORD *)a2 + 14);
          int v14 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v13 + 1;
          if (v13 >= v14) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream(v9, a2)
            || !*((unsigned char *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          int v15 = *((_DWORD *)a2 + 14);
          BOOL v16 = __OFSUB__(v15, 1);
          int v17 = v15 - 1;
          if (v17 < 0 == v16) {
            *((_DWORD *)a2 + 14) = v17;
          }
          int v18 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v11 = *((void *)a2 + 2);
          if ((unint64_t)v18 < v11 && *v18 == 16)
          {
            uint64_t v12 = v18 + 1;
            *((void *)a2 + 1) = v12;
            goto LABEL_32;
          }
        }
        if (v6 == 2) {
          break;
        }
        if (v6 == 3)
        {
          int v7 = TagFallback & 7;
          if (v7 == 2)
          {
            int v8 = *((_DWORD *)this + 8);
            goto LABEL_40;
          }
        }
        else
        {
          int v7 = TagFallback & 7;
        }
LABEL_20:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
      }
        }
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_20;
      }
      uint64_t v12 = (char *)*((void *)a2 + 1);
      unint64_t v11 = *((void *)a2 + 2);
LABEL_32:
      unsigned int v28 = 0;
      if ((unint64_t)v12 >= v11 || *v12 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v28);
        if (!result) {
          return result;
        }
        unsigned int v19 = v28;
        unsigned int v20 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
      }
      else
      {
        unsigned int v19 = *v12;
        unsigned int v20 = v12 + 1;
        *((void *)a2 + 1) = v20;
      }
      *((_DWORD *)this + 6) = v19;
      int v8 = *((_DWORD *)this + 8) | 2;
      *((_DWORD *)this + 8) = v8;
    }
    while ((unint64_t)v20 >= v11 || *v20 != 26);
    *((void *)a2 + 1) = v20 + 1;
LABEL_40:
    *((_DWORD *)this + 8) = v8 | 4;
    unsigned int v22 = (CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel *)*((void *)this + 2);
    if (!v22) {
      operator new();
    }
    unsigned int v30 = 0;
    unsigned int v23 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v23 >= *((void *)a2 + 2) || *v23 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30)) {
        return 0;
      }
    }
    else
    {
      unsigned int v30 = *v23;
      *((void *)a2 + 1) = v23 + 1;
    }
    int v24 = *((_DWORD *)a2 + 14);
    int v25 = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 14) = v24 + 1;
    if (v24 >= v25) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
    if (!CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::MergePartialFromCodedStream(v22, a2)|| !*((unsigned char *)a2 + 36))
    {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
    int v26 = *((_DWORD *)a2 + 14);
    BOOL v16 = __OFSUB__(v26, 1);
    int v27 = v26 - 1;
    if (v27 < 0 == v16) {
      *((_DWORD *)a2 + 14) = v27;
    }
    if (*((void *)a2 + 1) == *((void *)a2 + 2)
      && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
    {
      *((_DWORD *)a2 + 8) = 0;
      uint64_t result = 1;
      *((unsigned char *)a2 + 36) = 1;
      return result;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapVector::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 32);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_8:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 32) & 4) == 0) {
      return this;
    }
    goto LABEL_9;
  }
  uint64_t v7 = *(void *)(this + 8);
  if (!v7)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::MapVector::default_instance_ + 8);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 2) != 0) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return this;
  }
LABEL_9:
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v8 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::MapVector::default_instance_ + 16);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapVector::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::MapVector *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 32);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_25;
  }
  if (*((unsigned char *)this + 32))
  {
    uint64_t v4 = *((void *)this + 1);
    if (!v4)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      uint64_t v4 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::MapVector::default_instance_ + 8);
    }
    int v5 = *(unsigned __int8 *)(v4 + 36);
    if (*(unsigned char *)(v4 + 36))
    {
      int v6 = (v5 << 31 >> 31) & 9;
      if ((v5 & 2) != 0) {
        v6 += 9;
      }
      if ((v5 & 4) != 0) {
        int v5 = v6 + 9;
      }
      else {
        int v5 = v6;
      }
    }
    *(_DWORD *)(v4 + 32) = v5;
    uint64_t v3 = (v5 + 2);
    int v2 = *((_DWORD *)this + 8);
    if ((v2 & 2) == 0) {
      goto LABEL_21;
    }
  }
  else
  {
    uint64_t v3 = 0;
    if ((*((unsigned char *)this + 32) & 2) == 0) {
      goto LABEL_21;
    }
  }
  uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  if ((v7 & 0x80000000) != 0)
  {
    int v8 = 11;
  }
  else if (v7 >= 0x80)
  {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7) + 1;
    int v2 = *((_DWORD *)this + 8);
  }
  else
  {
    int v8 = 2;
  }
  uint64_t v3 = (v8 + v3);
LABEL_21:
  if ((v2 & 4) != 0)
  {
    uint64_t v9 = (CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel *)*((void *)this + 2);
    if (!v9)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(0);
      uint64_t v9 = *(CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel **)(CoreNavigation::CLP::LogEntry::PrivateData::MapVector::default_instance_
                                                                             + 16);
    }
    uint64_t v3 = v3
       + CoreNavigation::CLP::LogEntry::PrivateData::DirectionOfTravel::ByteSize(v9)
       + 2;
  }
LABEL_25:
  *((_DWORD *)this + 7) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::PrivateData::MapVector::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::MapVector *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::MapVector::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MapVector::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::MapVector *this, const CoreNavigation::CLP::LogEntry::PrivateData::MapVector *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::MapVector *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::MapVector::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapVector::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::MapVector *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapVector::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::MapVector *a2)
{
  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::MapVector *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    uint64_t v3 = *(void *)(this + 16);
    *(void *)(this + 16) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v3;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::MapVector::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.MapVector");
}

double CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance *this)
{
  double result = 0.0;
  *(_OWORD *)((char *)this + 36) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance *CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::TunnelBridgeAssistance(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance *this, const CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance *a2)
{
  *(void *)this = &unk_1EDD0DD60;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 36) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::MergeFrom(this, a2);
  return this;
}

void sub_18DF7F3F0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance *this, const CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 48);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 48))
    {
      *((_DWORD *)this + 12) |= 1u;
      int v6 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
      if (!v6) {
        operator new();
      }
      uint64_t v7 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)a2 + 1);
      if (!v7)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
        uint64_t v7 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::default_instance_
                                                                             + 8);
      }
      CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v6, v7);
      int v4 = *((_DWORD *)a2 + 12);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_20;
      }
    }
    else if ((*((unsigned char *)a2 + 48) & 2) == 0)
    {
      goto LABEL_6;
    }
    uint64_t v8 = *((void *)a2 + 2);
    *((_DWORD *)this + 12) |= 2u;
    *((void *)this + 2) = v8;
    int v4 = *((_DWORD *)a2 + 12);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_21;
    }
LABEL_20:
    uint64_t v9 = *((void *)a2 + 3);
    *((_DWORD *)this + 12) |= 4u;
    *((void *)this + 3) = v9;
    int v4 = *((_DWORD *)a2 + 12);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_22;
    }
LABEL_21:
    uint64_t v10 = *((void *)a2 + 4);
    *((_DWORD *)this + 12) |= 8u;
    *((void *)this + 4) = v10;
    int v4 = *((_DWORD *)a2 + 12);
    if ((v4 & 0x10) == 0)
    {
LABEL_9:
      if ((v4 & 0x20) == 0) {
        goto LABEL_10;
      }
      goto LABEL_23;
    }
LABEL_22:
    char v11 = *((unsigned char *)a2 + 40);
    *((_DWORD *)this + 12) |= 0x10u;
    *((unsigned char *)this + 40) = v11;
    int v4 = *((_DWORD *)a2 + 12);
    if ((v4 & 0x20) == 0)
    {
LABEL_10:
      if ((v4 & 0x40) == 0) {
        goto LABEL_11;
      }
      goto LABEL_24;
    }
LABEL_23:
    char v12 = *((unsigned char *)a2 + 41);
    *((_DWORD *)this + 12) |= 0x20u;
    *((unsigned char *)this + 41) = v12;
    int v4 = *((_DWORD *)a2 + 12);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        return;
      }
      goto LABEL_12;
    }
LABEL_24:
    char v13 = *((unsigned char *)a2 + 42);
    *((_DWORD *)this + 12) |= 0x40u;
    *((unsigned char *)this + 42) = v13;
    if ((*((_DWORD *)a2 + 12) & 0x80) == 0) {
      return;
    }
LABEL_12:
    char v5 = *((unsigned char *)a2 + 43);
    *((_DWORD *)this + 12) |= 0x80u;
    *((unsigned char *)this + 43) = v5;
  }
}

void sub_18DF7F5E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::~TunnelBridgeAssistance(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance *this)
{
  *(void *)this = &unk_1EDD0DD60;
  CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::~TunnelBridgeAssistance(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance *)CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2)
    {
      uint64_t v3 = *(void (**)(void))(*(void *)v2 + 8);
      v3();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 44) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::New(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 48))
  {
    if (*(unsigned char *)(this + 48))
    {
      uint64_t v1 = *(void *)(this + 8);
      if (v1)
      {
        if (*(unsigned char *)(v1 + 36))
        {
          *(void *)(v1 + 8) = 0;
          *(void *)(v1 + 16) = 0;
          *(void *)(v1 + 24) = 0;
        }
        *(_DWORD *)(v1 + 36) = 0;
      }
    }
    *(void *)(this + 16) = 0;
    *(void *)(this + 24) = 0;
    *(_DWORD *)(this + 40) = 0;
    *(void *)(this + 32) = 0;
  }
  *(_DWORD *)(this + 48) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (2)
  {
    int v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_27;
        }
        *((_DWORD *)this + 12) |= 1u;
        uint64_t v7 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
        if (!v7) {
          operator new();
        }
        v32[0] = 0;
        uint64_t v8 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v32))return 0; {
        }
          }
        else
        {
          v32[0] = *v8;
          *((void *)a2 + 1) = v8 + 1;
        }
        int v14 = *((_DWORD *)a2 + 14);
        int v15 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v14 + 1;
        if (v14 >= v15) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream(v7, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v16 = *((_DWORD *)a2 + 14);
        BOOL v17 = __OFSUB__(v16, 1);
        int v18 = v16 - 1;
        if (v18 < 0 == v17) {
          *((_DWORD *)a2 + 14) = v18;
        }
        unsigned int v19 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v19 >= *((void *)a2 + 2) || *v19 != 17) {
          continue;
        }
        *((void *)a2 + 1) = v19 + 1;
        goto LABEL_40;
      case 2u:
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_27;
        }
LABEL_40:
        *(void *)unsigned int v32 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v32) & 1) == 0)return 0; {
        *((void *)this + 2) = *(void *)v32;
        }
        *((_DWORD *)this + 12) |= 2u;
        unsigned int v20 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v20 >= *((void *)a2 + 2) || *v20 != 25) {
          continue;
        }
        *((void *)a2 + 1) = v20 + 1;
LABEL_44:
        *(void *)unsigned int v32 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v32) & 1) == 0)return 0; {
        *((void *)this + 3) = *(void *)v32;
        }
        *((_DWORD *)this + 12) |= 4u;
        unsigned int v21 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v21 >= *((void *)a2 + 2) || *v21 != 33) {
          continue;
        }
        *((void *)a2 + 1) = v21 + 1;
LABEL_48:
        *(void *)unsigned int v32 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v32))
        {
          *((void *)this + 4) = *(void *)v32;
          *((_DWORD *)this + 12) |= 8u;
          unsigned int v22 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
          if ((unint64_t)v22 < v9 && *v22 == 40)
          {
            uint64_t v10 = v22 + 1;
            *((void *)a2 + 1) = v10;
LABEL_52:
            v32[0] = 0;
            if ((unint64_t)v10 >= v9 || *v10 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v32);
              if (!result) {
                return result;
              }
              unsigned int v23 = v32[0];
              int v24 = (unsigned char *)*((void *)a2 + 1);
              unint64_t v9 = *((void *)a2 + 2);
            }
            else
            {
              unsigned int v23 = *v10;
              int v24 = v10 + 1;
              *((void *)a2 + 1) = v24;
            }
            *((unsigned char *)this + 40) = v23 != 0;
            *((_DWORD *)this + 12) |= 0x10u;
            if ((unint64_t)v24 < v9 && *v24 == 48)
            {
              char v11 = v24 + 1;
              *((void *)a2 + 1) = v11;
LABEL_60:
              v32[0] = 0;
              if ((unint64_t)v11 >= v9 || *v11 < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v32);
                if (!result) {
                  return result;
                }
                unsigned int v26 = v32[0];
                int v27 = (unsigned char *)*((void *)a2 + 1);
                unint64_t v9 = *((void *)a2 + 2);
              }
              else
              {
                unsigned int v26 = *v11;
                int v27 = v11 + 1;
                *((void *)a2 + 1) = v27;
              }
              *((unsigned char *)this + 41) = v26 != 0;
              *((_DWORD *)this + 12) |= 0x20u;
              if ((unint64_t)v27 < v9 && *v27 == 56)
              {
                char v12 = v27 + 1;
                *((void *)a2 + 1) = v12;
LABEL_68:
                v32[0] = 0;
                if ((unint64_t)v12 >= v9 || *v12 < 0)
                {
                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v32);
                  if (!result) {
                    return result;
                  }
                  unsigned int v28 = v32[0];
                  unsigned int v29 = (unsigned char *)*((void *)a2 + 1);
                  unint64_t v9 = *((void *)a2 + 2);
                }
                else
                {
                  unsigned int v28 = *v12;
                  unsigned int v29 = v12 + 1;
                  *((void *)a2 + 1) = v29;
                }
                *((unsigned char *)this + 42) = v28 != 0;
                *((_DWORD *)this + 12) |= 0x40u;
                if ((unint64_t)v29 < v9 && *v29 == 64)
                {
                  char v13 = v29 + 1;
                  *((void *)a2 + 1) = v13;
LABEL_76:
                  v32[0] = 0;
                  if ((unint64_t)v13 >= v9 || *v13 < 0)
                  {
                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v32);
                    if (!result) {
                      return result;
                    }
                    unsigned int v30 = v32[0];
                    int v31 = (unsigned __int8 *)*((void *)a2 + 1);
                    unint64_t v9 = *((void *)a2 + 2);
                  }
                  else
                  {
                    unsigned int v30 = *v13;
                    int v31 = (unsigned __int8 *)(v13 + 1);
                    *((void *)a2 + 1) = v31;
                  }
                  *((unsigned char *)this + 43) = v30 != 0;
                  *((_DWORD *)this + 12) |= 0x80u;
                  if (v31 == (unsigned __int8 *)v9
                    && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                  {
                    *((_DWORD *)a2 + 8) = 0;
                    uint64_t result = 1;
                    *((unsigned char *)a2 + 36) = 1;
                    return result;
                  }
                }
              }
            }
          }
          continue;
        }
        return 0;
      case 3u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_44;
        }
        goto LABEL_27;
      case 4u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_48;
        }
        goto LABEL_27;
      case 5u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_27;
        }
        uint64_t v10 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        goto LABEL_52;
      case 6u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_27;
        }
        char v11 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        goto LABEL_60;
      case 7u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_27;
        }
        char v12 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        goto LABEL_68;
      case 8u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_27;
        }
        char v13 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        goto LABEL_76;
      default:
        int v6 = TagFallback & 7;
LABEL_27:
        if (v6 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 48);
  if (v6)
  {
    uint64_t v7 = *(void *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 48);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_14:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_17;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned __int8 *)(v5 + 40), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
LABEL_18:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned __int8 *)(v5 + 42), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 48) & 0x80) == 0) {
      return this;
    }
    goto LABEL_19;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned __int8 *)(v5 + 41), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 0x40) != 0) {
    goto LABEL_18;
  }
LABEL_8:
  if ((v6 & 0x80) == 0) {
    return this;
  }
LABEL_19:
  uint64_t v8 = *(unsigned __int8 *)(v5 + 43);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v8, (uint64_t)a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 48);
  if ((_BYTE)v2)
  {
    if (*((unsigned char *)this + 48))
    {
      uint64_t v5 = *((void *)this + 1);
      if (!v5)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
        uint64_t v5 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::default_instance_ + 8);
      }
      int v6 = *(unsigned __int8 *)(v5 + 36);
      if (*(unsigned char *)(v5 + 36))
      {
        int v7 = (v6 << 31 >> 31) & 9;
        if ((v6 & 2) != 0) {
          v7 += 9;
        }
        if ((v6 & 4) != 0) {
          int v6 = v7 + 9;
        }
        else {
          int v6 = v7;
        }
      }
      *(_DWORD *)(v5 + 32) = v6;
      unsigned int v3 = v6 + 2;
      int v2 = *((_DWORD *)this + 12);
    }
    else
    {
      unsigned int v3 = 0;
    }
    if ((v2 & 2) != 0) {
      v3 += 9;
    }
    if ((v2 & 4) != 0) {
      v3 += 9;
    }
    if ((v2 & 8) != 0) {
      v3 += 9;
    }
    if ((v2 & 0x10) != 0) {
      v3 += 2;
    }
    if ((v2 & 0x20) != 0) {
      v3 += 2;
    }
    if ((v2 & 0x40) != 0) {
      v3 += 2;
    }
    if ((v2 & 0x80) != 0) {
      uint64_t result = v3 + 2;
    }
    else {
      uint64_t result = v3;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  *((_DWORD *)this + 11) = result;
  return result;
}

void CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance *this, const CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::Swap(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance *this, CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    uint64_t v3 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    uint64_t v4 = *((void *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v4;
    double result = *((double *)this + 4);
    *((void *)this + 4) = *((void *)a2 + 4);
    *((double *)a2 + 4) = result;
    LOBYTE(v2) = *((unsigned char *)this + 40);
    *((unsigned char *)this + 40) = *((unsigned char *)a2 + 40);
    *((unsigned char *)a2 + 40) = v2;
    LOBYTE(v2) = *((unsigned char *)this + 41);
    *((unsigned char *)this + 41) = *((unsigned char *)a2 + 41);
    *((unsigned char *)a2 + 41) = v2;
    LOBYTE(v2) = *((unsigned char *)this + 42);
    *((unsigned char *)this + 42) = *((unsigned char *)a2 + 42);
    *((unsigned char *)a2 + 42) = v2;
    LOBYTE(v2) = *((unsigned char *)this + 43);
    *((unsigned char *)this + 43) = *((unsigned char *)a2 + 43);
    *((unsigned char *)a2 + 43) = v2;
    LODWORD(v2) = *((_DWORD *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v2;
    LODWORD(v2) = *((_DWORD *)this + 11);
    *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v2;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.TunnelBridgeAssistance");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(void *)(this + 24) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification *CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::TunnelBridgeNotification(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification *this, const CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification *a2)
{
  *(void *)this = &unk_1EDD0E198;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::MergeFrom(this, a2);
  return this;
}

void sub_18DF8015C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification *this, const CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 32))
    {
      *((_DWORD *)this + 8) |= 1u;
      uint64_t v5 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
      if (!v5) {
        operator new();
      }
      int v6 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)a2 + 1);
      if (!v6)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
        int v6 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::default_instance_
                                                                             + 8);
      }
      CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v5, v6);
      int v4 = *((_DWORD *)a2 + 8);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          return;
        }
        goto LABEL_14;
      }
    }
    else if ((*((unsigned char *)a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v7 = *((_DWORD *)a2 + 6);
    *((_DWORD *)this + 8) |= 2u;
    *((_DWORD *)this + 6) = v7;
    if ((*((_DWORD *)a2 + 8) & 4) == 0) {
      return;
    }
LABEL_14:
    *((_DWORD *)this + 8) |= 4u;
    uint64_t v8 = (CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance *)*((void *)this + 2);
    if (!v8) {
      operator new();
    }
    unint64_t v9 = (const CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance *)*((void *)a2 + 2);
    if (!v9)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      unint64_t v9 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance **)(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::default_instance_
                                                                                        + 16);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::MergeFrom(v8, v9);
  }
}

void sub_18DF80320(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::~TunnelBridgeNotification(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification *this)
{
  *(void *)this = &unk_1EDD0E198;
  CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::~TunnelBridgeNotification(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification *)CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 2);
    if (v3)
    {
      int v4 = *(void (**)(void))(*(void *)v3 + 8);
      v4();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 28) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::New(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::Clear(uint64_t this)
{
  uint64_t v1 = this;
  LOBYTE(v2) = *(unsigned char *)(this + 32);
  if ((_BYTE)v2)
  {
    if (*(unsigned char *)(this + 32))
    {
      uint64_t v3 = *(void *)(this + 8);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
          *(void *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        int v2 = *(_DWORD *)(this + 32);
      }
    }
    *(_DWORD *)(this + 24) = 0;
    if ((v2 & 4) != 0)
    {
      this = *(void *)(this + 16);
      if (this) {
        this = CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::Clear(this);
      }
    }
  }
  *(_DWORD *)(v1 + 32) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (1)
  {
    do
    {
      while (1)
      {
        while (1)
        {
          int v4 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
          {
            unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
            *((_DWORD *)a2 + 8) = TagFallback;
            if (!TagFallback) {
              return 1;
            }
          }
          else
          {
            unint64_t TagFallback = *v4;
            *((_DWORD *)a2 + 8) = TagFallback;
            *((void *)a2 + 1) = v4 + 1;
            if (!TagFallback) {
              return 1;
            }
          }
          unsigned int v6 = TagFallback >> 3;
          if (TagFallback >> 3 != 1) {
            break;
          }
          int v7 = TagFallback & 7;
          if (v7 != 2) {
            goto LABEL_20;
          }
          *((_DWORD *)this + 8) |= 1u;
          unint64_t v9 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
          if (!v9) {
            operator new();
          }
          unsigned int v29 = 0;
          uint64_t v10 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v29))return 0; {
          }
            }
          else
          {
            unsigned int v29 = *v10;
            *((void *)a2 + 1) = v10 + 1;
          }
          int v13 = *((_DWORD *)a2 + 14);
          int v14 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v13 + 1;
          if (v13 >= v14) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream(v9, a2)
            || !*((unsigned char *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          int v15 = *((_DWORD *)a2 + 14);
          BOOL v16 = __OFSUB__(v15, 1);
          int v17 = v15 - 1;
          if (v17 < 0 == v16) {
            *((_DWORD *)a2 + 14) = v17;
          }
          int v18 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v11 = *((void *)a2 + 2);
          if ((unint64_t)v18 < v11 && *v18 == 16)
          {
            char v12 = v18 + 1;
            *((void *)a2 + 1) = v12;
            goto LABEL_32;
          }
        }
        if (v6 == 2) {
          break;
        }
        if (v6 == 3)
        {
          int v7 = TagFallback & 7;
          if (v7 == 2)
          {
            int v8 = *((_DWORD *)this + 8);
            goto LABEL_40;
          }
        }
        else
        {
          int v7 = TagFallback & 7;
        }
LABEL_20:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
      }
        }
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_20;
      }
      char v12 = (char *)*((void *)a2 + 1);
      unint64_t v11 = *((void *)a2 + 2);
LABEL_32:
      unsigned int v28 = 0;
      if ((unint64_t)v12 >= v11 || *v12 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v28);
        if (!result) {
          return result;
        }
        unsigned int v19 = v28;
        unsigned int v20 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
      }
      else
      {
        unsigned int v19 = *v12;
        unsigned int v20 = v12 + 1;
        *((void *)a2 + 1) = v20;
      }
      *((_DWORD *)this + 6) = v19;
      int v8 = *((_DWORD *)this + 8) | 2;
      *((_DWORD *)this + 8) = v8;
    }
    while ((unint64_t)v20 >= v11 || *v20 != 26);
    *((void *)a2 + 1) = v20 + 1;
LABEL_40:
    *((_DWORD *)this + 8) = v8 | 4;
    unsigned int v22 = (CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance *)*((void *)this + 2);
    if (!v22) {
      operator new();
    }
    unsigned int v30 = 0;
    unsigned int v23 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v23 >= *((void *)a2 + 2) || *v23 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30)) {
        return 0;
      }
    }
    else
    {
      unsigned int v30 = *v23;
      *((void *)a2 + 1) = v23 + 1;
    }
    int v24 = *((_DWORD *)a2 + 14);
    int v25 = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 14) = v24 + 1;
    if (v24 >= v25) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
    if (!CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::MergePartialFromCodedStream(v22, a2)|| !*((unsigned char *)a2 + 36))
    {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
    int v26 = *((_DWORD *)a2 + 14);
    BOOL v16 = __OFSUB__(v26, 1);
    int v27 = v26 - 1;
    if (v27 < 0 == v16) {
      *((_DWORD *)a2 + 14) = v27;
    }
    if (*((void *)a2 + 1) == *((void *)a2 + 2)
      && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
    {
      *((_DWORD *)a2 + 8) = 0;
      uint64_t result = 1;
      *((unsigned char *)a2 + 36) = 1;
      return result;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 32);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_8:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 32) & 4) == 0) {
      return this;
    }
    goto LABEL_9;
  }
  uint64_t v7 = *(void *)(this + 8);
  if (!v7)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::default_instance_ + 8);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 2) != 0) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return this;
  }
LABEL_9:
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v8 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::default_instance_ + 16);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 32);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_25;
  }
  if (*((unsigned char *)this + 32))
  {
    uint64_t v4 = *((void *)this + 1);
    if (!v4)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      uint64_t v4 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::default_instance_ + 8);
    }
    int v5 = *(unsigned __int8 *)(v4 + 36);
    if (*(unsigned char *)(v4 + 36))
    {
      int v6 = (v5 << 31 >> 31) & 9;
      if ((v5 & 2) != 0) {
        v6 += 9;
      }
      if ((v5 & 4) != 0) {
        int v5 = v6 + 9;
      }
      else {
        int v5 = v6;
      }
    }
    *(_DWORD *)(v4 + 32) = v5;
    uint64_t v3 = (v5 + 2);
    int v2 = *((_DWORD *)this + 8);
    if ((v2 & 2) == 0) {
      goto LABEL_21;
    }
  }
  else
  {
    uint64_t v3 = 0;
    if ((*((unsigned char *)this + 32) & 2) == 0) {
      goto LABEL_21;
    }
  }
  uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  if ((v7 & 0x80000000) != 0)
  {
    int v8 = 11;
  }
  else if (v7 >= 0x80)
  {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7) + 1;
    int v2 = *((_DWORD *)this + 8);
  }
  else
  {
    int v8 = 2;
  }
  uint64_t v3 = (v8 + v3);
LABEL_21:
  if ((v2 & 4) != 0)
  {
    unint64_t v9 = (CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance *)*((void *)this + 2);
    if (!v9)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(0);
      unint64_t v9 = *(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance **)(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::default_instance_
                                                                                  + 16);
    }
    uint64_t v3 = v3
       + CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeAssistance::ByteSize(v9)
       + 2;
  }
LABEL_25:
  *((_DWORD *)this + 7) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification *this, const CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification *a2)
{
  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    uint64_t v3 = *(void *)(this + 16);
    *(void *)(this + 16) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v3;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.TunnelBridgeNotification");
}

double CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance *this)
{
  *(void *)((char *)this + 69) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *((_OWORD *)this + 5) = 0u;
  *((_OWORD *)this + 6) = 0u;
  *((_OWORD *)this + 7) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance *CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::TunnelEndPointAssistance(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance *this, const CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance *a2)
{
  *(void *)this = &unk_1EDD0E210;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(void *)((char *)this + 69) = 0;
  *((_OWORD *)this + 5) = 0u;
  *((_OWORD *)this + 6) = 0u;
  *((_OWORD *)this + 7) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::MergeFrom(this, a2);
  return this;
}

void sub_18DF80CC8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance *this, const CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  int v5 = *((_DWORD *)a2 + 31);
  if (!(_BYTE)v5) {
    goto LABEL_13;
  }
  if (v5)
  {
    *((_DWORD *)this + 31) |= 1u;
    int v6 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
    if (!v6) {
      operator new();
    }
    uint64_t v7 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)a2 + 1);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      uint64_t v7 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::default_instance_
                                                                           + 8);
    }
    double result = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v6, v7);
    int v5 = *((_DWORD *)a2 + 31);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_29;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }
  double result = *((double *)a2 + 2);
  *((_DWORD *)this + 31) |= 2u;
  *((double *)this + 2) = result;
  int v5 = *((_DWORD *)a2 + 31);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_30;
  }
LABEL_29:
  double result = *((double *)a2 + 3);
  *((_DWORD *)this + 31) |= 4u;
  *((double *)this + 3) = result;
  int v5 = *((_DWORD *)a2 + 31);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_31;
  }
LABEL_30:
  double result = *((double *)a2 + 4);
  *((_DWORD *)this + 31) |= 8u;
  *((double *)this + 4) = result;
  int v5 = *((_DWORD *)a2 + 31);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_32:
    double result = *((double *)a2 + 6);
    *((_DWORD *)this + 31) |= 0x20u;
    *((double *)this + 6) = result;
    int v5 = *((_DWORD *)a2 + 31);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_33;
  }
LABEL_31:
  double result = *((double *)a2 + 5);
  *((_DWORD *)this + 31) |= 0x10u;
  *((double *)this + 5) = result;
  int v5 = *((_DWORD *)a2 + 31);
  if ((v5 & 0x20) != 0) {
    goto LABEL_32;
  }
LABEL_10:
  if ((v5 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_33:
  unsigned int v8 = *((_DWORD *)a2 + 18);
  if (v8 >= 3) {
    __assert_rtn("set_reference_frame", "CoreNavigationCLPPrivateDataShared.pb.h", 20463, "::CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationReferenceFrameType_IsValid(value)");
  }
  *((_DWORD *)this + 31) |= 0x40u;
  *((_DWORD *)this + 18) = v8;
  int v5 = *((_DWORD *)a2 + 31);
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    double result = *((double *)a2 + 7);
    *((_DWORD *)this + 31) |= 0x80u;
    *((double *)this + 7) = result;
    int v5 = *((_DWORD *)a2 + 31);
  }
LABEL_13:
  if ((v5 & 0xFF00) == 0) {
    return result;
  }
  if ((v5 & 0x100) != 0)
  {
    double result = *((double *)a2 + 8);
    *((_DWORD *)this + 31) |= 0x100u;
    *((double *)this + 8) = result;
    int v5 = *((_DWORD *)a2 + 31);
    if ((v5 & 0x200) == 0)
    {
LABEL_16:
      if ((v5 & 0x400) == 0) {
        goto LABEL_17;
      }
      goto LABEL_38;
    }
  }
  else if ((v5 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  double result = *((double *)a2 + 10);
  *((_DWORD *)this + 31) |= 0x200u;
  *((double *)this + 10) = result;
  int v5 = *((_DWORD *)a2 + 31);
  if ((v5 & 0x400) == 0)
  {
LABEL_17:
    if ((v5 & 0x800) == 0) {
      goto LABEL_18;
    }
    goto LABEL_39;
  }
LABEL_38:
  char v9 = *((unsigned char *)a2 + 76);
  *((_DWORD *)this + 31) |= 0x400u;
  *((unsigned char *)this + 76) = v9;
  int v5 = *((_DWORD *)a2 + 31);
  if ((v5 & 0x800) == 0)
  {
LABEL_18:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_40;
  }
LABEL_39:
  double result = *((double *)a2 + 11);
  *((_DWORD *)this + 31) |= 0x800u;
  *((double *)this + 11) = result;
  int v5 = *((_DWORD *)a2 + 31);
  if ((v5 & 0x1000) == 0)
  {
LABEL_19:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_41;
  }
LABEL_40:
  double result = *((double *)a2 + 12);
  *((_DWORD *)this + 31) |= 0x1000u;
  *((double *)this + 12) = result;
  int v5 = *((_DWORD *)a2 + 31);
  if ((v5 & 0x2000) == 0)
  {
LABEL_20:
    if ((v5 & 0x4000) == 0) {
      return result;
    }
    goto LABEL_21;
  }
LABEL_41:
  double result = *((double *)a2 + 13);
  *((_DWORD *)this + 31) |= 0x2000u;
  *((double *)this + 13) = result;
  if ((*((_DWORD *)a2 + 31) & 0x4000) != 0)
  {
LABEL_21:
    double result = *((double *)a2 + 14);
    *((_DWORD *)this + 31) |= 0x4000u;
    *((double *)this + 14) = result;
  }
  return result;
}

void sub_18DF80FD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::~TunnelEndPointAssistance(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance *this)
{
  *(void *)this = &unk_1EDD0E210;
  CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::~TunnelEndPointAssistance(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance *)CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2)
    {
      uint64_t v3 = *(void (**)(void))(*(void *)v2 + 8);
      v3();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 120) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::New(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 124);
  if ((_BYTE)v1)
  {
    if (v1)
    {
      uint64_t v2 = *(void *)(this + 8);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 36))
        {
          *(void *)(v2 + 8) = 0;
          *(void *)(v2 + 16) = 0;
          *(void *)(v2 + 24) = 0;
        }
        *(_DWORD *)(v2 + 36) = 0;
        int v1 = *(_DWORD *)(this + 124);
      }
    }
    *(_DWORD *)(this + 72) = 0;
    *(_OWORD *)(this + 16) = 0u;
    *(_OWORD *)(this + 32) = 0u;
    *(_OWORD *)(this + 48) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(void *)(this + 64) = 0;
    *(unsigned char *)(this + 76) = 0;
    *(_OWORD *)(this + 80) = 0u;
    *(_OWORD *)(this + 96) = 0u;
    *(void *)(this + 112) = 0;
  }
  *(_DWORD *)(this + 124) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (2)
  {
    uint64_t v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_41;
        }
        *((_DWORD *)this + 31) |= 1u;
        uint64_t v7 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
        if (!v7) {
          operator new();
        }
        v35[0] = 0;
        unsigned int v8 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v35))return 0; {
        }
          }
        else
        {
          v35[0] = *v8;
          *((void *)a2 + 1) = v8 + 1;
        }
        int v13 = *((_DWORD *)a2 + 14);
        int v14 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v13 + 1;
        if (v13 >= v14) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream(v7, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v15 = *((_DWORD *)a2 + 14);
        BOOL v16 = __OFSUB__(v15, 1);
        int v17 = v15 - 1;
        if (v17 < 0 == v16) {
          *((_DWORD *)a2 + 14) = v17;
        }
        int v18 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v18 >= *((void *)a2 + 2) || *v18 != 17) {
          continue;
        }
        *((void *)a2 + 1) = v18 + 1;
        goto LABEL_53;
      case 2u:
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_41;
        }
LABEL_53:
        *(void *)int v35 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v35) & 1) == 0)return 0; {
        *((void *)this + 2) = *(void *)v35;
        }
        *((_DWORD *)this + 31) |= 2u;
        unsigned int v19 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v19 >= *((void *)a2 + 2) || *v19 != 25) {
          continue;
        }
        *((void *)a2 + 1) = v19 + 1;
LABEL_57:
        *(void *)int v35 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v35) & 1) == 0)return 0; {
        *((void *)this + 3) = *(void *)v35;
        }
        *((_DWORD *)this + 31) |= 4u;
        unsigned int v20 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v20 >= *((void *)a2 + 2) || *v20 != 33) {
          continue;
        }
        *((void *)a2 + 1) = v20 + 1;
LABEL_61:
        *(void *)int v35 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v35) & 1) == 0)return 0; {
        *((void *)this + 4) = *(void *)v35;
        }
        *((_DWORD *)this + 31) |= 8u;
        unsigned int v21 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v21 >= *((void *)a2 + 2) || *v21 != 41) {
          continue;
        }
        *((void *)a2 + 1) = v21 + 1;
LABEL_65:
        *(void *)int v35 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v35) & 1) == 0)return 0; {
        *((void *)this + 5) = *(void *)v35;
        }
        *((_DWORD *)this + 31) |= 0x10u;
        unsigned int v22 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v22 >= *((void *)a2 + 2) || *v22 != 49) {
          continue;
        }
        *((void *)a2 + 1) = v22 + 1;
LABEL_69:
        *(void *)int v35 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v35) & 1) == 0)return 0; {
        *((void *)this + 6) = *(void *)v35;
        }
        *((_DWORD *)this + 31) |= 0x20u;
        unsigned int v23 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        if ((unint64_t)v23 >= v9 || *v23 != 56) {
          continue;
        }
        uint64_t v10 = v23 + 1;
        *((void *)a2 + 1) = v10;
LABEL_73:
        v35[0] = 0;
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v35);
          if (!result) {
            return result;
          }
          unsigned int v24 = v35[0];
        }
        else
        {
          unsigned int v24 = *v10;
          *((void *)a2 + 1) = v10 + 1;
        }
        if (v24 <= 2)
        {
          *((_DWORD *)this + 31) |= 0x40u;
          *((_DWORD *)this + 18) = v24;
        }
        int v26 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v26 >= *((void *)a2 + 2) || *v26 != 65) {
          continue;
        }
        *((void *)a2 + 1) = v26 + 1;
LABEL_83:
        *(void *)int v35 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v35) & 1) == 0)return 0; {
        *((void *)this + 7) = *(void *)v35;
        }
        *((_DWORD *)this + 31) |= 0x80u;
        int v27 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v27 >= *((void *)a2 + 2) || *v27 != 73) {
          continue;
        }
        *((void *)a2 + 1) = v27 + 1;
LABEL_87:
        *(void *)int v35 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v35) & 1) == 0)return 0; {
        *((void *)this + 8) = *(void *)v35;
        }
        *((_DWORD *)this + 31) |= 0x100u;
        unsigned int v28 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v28 >= *((void *)a2 + 2) || *v28 != 81) {
          continue;
        }
        *((void *)a2 + 1) = v28 + 1;
LABEL_91:
        *(void *)int v35 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v35) & 1) == 0)return 0; {
        *((void *)this + 10) = *(void *)v35;
        }
        *((_DWORD *)this + 31) |= 0x200u;
        unsigned int v29 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
        if ((unint64_t)v29 >= v11 || *v29 != 88) {
          continue;
        }
        char v12 = v29 + 1;
        *((void *)a2 + 1) = v12;
LABEL_95:
        v35[0] = 0;
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v35);
          if (!result) {
            return result;
          }
          unsigned int v30 = v35[0];
          int v31 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v11 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v30 = *v12;
          int v31 = v12 + 1;
          *((void *)a2 + 1) = v31;
        }
        *((unsigned char *)this + 76) = v30 != 0;
        *((_DWORD *)this + 31) |= 0x400u;
        if ((unint64_t)v31 >= v11 || *v31 != 97) {
          continue;
        }
        *((void *)a2 + 1) = v31 + 1;
LABEL_103:
        *(void *)int v35 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v35) & 1) == 0)return 0; {
        *((void *)this + 11) = *(void *)v35;
        }
        *((_DWORD *)this + 31) |= 0x800u;
        unsigned int v32 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v32 >= *((void *)a2 + 2) || *v32 != 105) {
          continue;
        }
        *((void *)a2 + 1) = v32 + 1;
LABEL_107:
        *(void *)int v35 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v35) & 1) == 0)return 0; {
        *((void *)this + 12) = *(void *)v35;
        }
        *((_DWORD *)this + 31) |= 0x1000u;
        unsigned int v33 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v33 >= *((void *)a2 + 2) || *v33 != 113) {
          continue;
        }
        *((void *)a2 + 1) = v33 + 1;
LABEL_111:
        *(void *)int v35 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v35) & 1) == 0)return 0; {
        *((void *)this + 13) = *(void *)v35;
        }
        *((_DWORD *)this + 31) |= 0x2000u;
        unsigned int v34 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v34 >= *((void *)a2 + 2) || *v34 != 121) {
          continue;
        }
        *((void *)a2 + 1) = v34 + 1;
LABEL_115:
        *(void *)int v35 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v35))
        {
          *((void *)this + 14) = *(void *)v35;
          *((_DWORD *)this + 31) |= 0x4000u;
          if (*((void *)a2 + 1) == *((void *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_57;
        }
        goto LABEL_41;
      case 4u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_61;
        }
        goto LABEL_41;
      case 5u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_65;
        }
        goto LABEL_41;
      case 6u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_69;
        }
        goto LABEL_41;
      case 7u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_41;
        }
        uint64_t v10 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        goto LABEL_73;
      case 8u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_83;
        }
        goto LABEL_41;
      case 9u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_87;
        }
        goto LABEL_41;
      case 0xAu:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_91;
        }
        goto LABEL_41;
      case 0xBu:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_41;
        }
        char v12 = (char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
        goto LABEL_95;
      case 0xCu:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_103;
        }
        goto LABEL_41;
      case 0xDu:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_107;
        }
        goto LABEL_41;
      case 0xEu:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_111;
        }
        goto LABEL_41;
      case 0xFu:
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_41;
        }
        goto LABEL_115;
      default:
        int v6 = TagFallback & 7;
LABEL_41:
        if (v6 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 124);
  if (v6)
  {
    uint64_t v7 = *(void *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 124);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_21;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_22;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_23;
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_24;
  }
LABEL_23:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(v5 + 40), a3);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_25;
  }
LABEL_24:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(double *)(v5 + 48), a3);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_26;
  }
LABEL_25:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned int *)(v5 + 72), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_27;
  }
LABEL_26:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (uint64_t)a2, *(double *)(v5 + 56), a3);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_28;
  }
LABEL_27:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (uint64_t)a2, *(double *)(v5 + 64), a3);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_29;
  }
LABEL_28:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (uint64_t)a2, *(double *)(v5 + 80), a3);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_30;
  }
LABEL_29:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(unsigned __int8 *)(v5 + 76), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_31;
  }
LABEL_30:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, (uint64_t)a2, *(double *)(v5 + 88), a3);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_15;
    }
LABEL_32:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, (uint64_t)a2, *(double *)(v5 + 104), a3);
    if ((*(_DWORD *)(v5 + 124) & 0x4000) == 0) {
      return this;
    }
    goto LABEL_33;
  }
LABEL_31:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, (uint64_t)a2, *(double *)(v5 + 96), a3);
  int v6 = *(_DWORD *)(v5 + 124);
  if ((v6 & 0x2000) != 0) {
    goto LABEL_32;
  }
LABEL_15:
  if ((v6 & 0x4000) == 0) {
    return this;
  }
LABEL_33:
  double v8 = *(double *)(v5 + 112);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, (uint64_t)a2, v8, a3);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance *this)
{
  int v2 = *((_DWORD *)this + 31);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      uint64_t v5 = *((void *)this + 1);
      if (!v5)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
        uint64_t v5 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::default_instance_ + 8);
      }
      int v6 = *(unsigned __int8 *)(v5 + 36);
      if (*(unsigned char *)(v5 + 36))
      {
        int v7 = (v6 << 31 >> 31) & 9;
        if ((v6 & 2) != 0) {
          v7 += 9;
        }
        if ((v6 & 4) != 0) {
          int v6 = v7 + 9;
        }
        else {
          int v6 = v7;
        }
      }
      *(_DWORD *)(v5 + 32) = v6;
      int v3 = v6 + 2;
      int v2 = *((_DWORD *)this + 31);
    }
    else
    {
      int v3 = 0;
    }
    if ((v2 & 2) != 0) {
      v3 += 9;
    }
    if ((v2 & 4) != 0) {
      v3 += 9;
    }
    if ((v2 & 8) != 0) {
      v3 += 9;
    }
    if ((v2 & 0x10) != 0) {
      v3 += 9;
    }
    if ((v2 & 0x20) != 0) {
      unsigned int v8 = v3 + 9;
    }
    else {
      unsigned int v8 = v3;
    }
    if ((v2 & 0x40) != 0)
    {
      unint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 18);
      if ((v9 & 0x80000000) != 0)
      {
        int v10 = 11;
      }
      else if (v9 >= 0x80)
      {
        int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9) + 1;
        int v2 = *((_DWORD *)this + 31);
      }
      else
      {
        int v10 = 2;
      }
      v8 += v10;
    }
    if ((v2 & 0x80) != 0) {
      uint64_t result = v8 + 9;
    }
    else {
      uint64_t result = v8;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  if ((v2 & 0xFF00) != 0)
  {
    unsigned int v11 = result + 9;
    if ((v2 & 0x100) == 0) {
      unsigned int v11 = result;
    }
    if ((v2 & 0x200) != 0) {
      v11 += 9;
    }
    if ((v2 & 0x400) != 0) {
      v11 += 2;
    }
    if ((v2 & 0x800) != 0) {
      v11 += 9;
    }
    if ((v2 & 0x1000) != 0) {
      v11 += 9;
    }
    if ((v2 & 0x2000) != 0) {
      v11 += 9;
    }
    if ((v2 & 0x4000) != 0) {
      uint64_t result = v11 + 9;
    }
    else {
      uint64_t result = v11;
    }
  }
  *((_DWORD *)this + 30) = result;
  return result;
}

double CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance *this, const CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::Swap(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance *this, CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    uint64_t v3 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    uint64_t v4 = *((void *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v4;
    uint64_t v5 = *((void *)this + 4);
    *((void *)this + 4) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v5;
    uint64_t v6 = *((void *)this + 5);
    *((void *)this + 5) = *((void *)a2 + 5);
    *((void *)a2 + 5) = v6;
    uint64_t v7 = *((void *)this + 6);
    *((void *)this + 6) = *((void *)a2 + 6);
    *((void *)a2 + 6) = v7;
    LODWORD(v2) = *((_DWORD *)this + 18);
    *((_DWORD *)this + 18) = *((_DWORD *)a2 + 18);
    *((_DWORD *)a2 + 18) = v2;
    uint64_t v8 = *((void *)this + 7);
    *((void *)this + 7) = *((void *)a2 + 7);
    *((void *)a2 + 7) = v8;
    uint64_t v9 = *((void *)this + 8);
    *((void *)this + 8) = *((void *)a2 + 8);
    *((void *)a2 + 8) = v9;
    uint64_t v10 = *((void *)this + 10);
    *((void *)this + 10) = *((void *)a2 + 10);
    *((void *)a2 + 10) = v10;
    LOBYTE(v2) = *((unsigned char *)this + 76);
    *((unsigned char *)this + 76) = *((unsigned char *)a2 + 76);
    *((unsigned char *)a2 + 76) = v2;
    uint64_t v11 = *((void *)this + 11);
    *((void *)this + 11) = *((void *)a2 + 11);
    *((void *)a2 + 11) = v11;
    uint64_t v12 = *((void *)this + 12);
    *((void *)this + 12) = *((void *)a2 + 12);
    *((void *)a2 + 12) = v12;
    uint64_t v13 = *((void *)this + 13);
    *((void *)this + 13) = *((void *)a2 + 13);
    *((void *)a2 + 13) = v13;
    double result = *((double *)this + 14);
    *((void *)this + 14) = *((void *)a2 + 14);
    *((double *)a2 + 14) = result;
    LODWORD(v2) = *((_DWORD *)this + 31);
    *((_DWORD *)this + 31) = *((_DWORD *)a2 + 31);
    *((_DWORD *)a2 + 31) = v2;
    LODWORD(v2) = *((_DWORD *)this + 30);
    *((_DWORD *)this + 30) = *((_DWORD *)a2 + 30);
    *((_DWORD *)a2 + 30) = v2;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.TunnelEndPointAssistance");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(void *)(this + 24) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint *CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::TunnelEndPoint(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint *this, const CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint *a2)
{
  *(void *)this = &unk_1EDD0C140;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::MergeFrom(this, a2);
  return this;
}

void sub_18DF81F6C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint *this, const CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 32))
    {
      *((_DWORD *)this + 8) |= 1u;
      uint64_t v6 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
      if (!v6) {
        operator new();
      }
      uint64_t v7 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)a2 + 1);
      if (!v7)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
        uint64_t v7 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::default_instance_
                                                                             + 8);
      }
      double result = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v6, v7);
      int v5 = *((_DWORD *)a2 + 8);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          return result;
        }
        goto LABEL_14;
      }
    }
    else if ((*((unsigned char *)a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v8 = *((_DWORD *)a2 + 6);
    *((_DWORD *)this + 8) |= 2u;
    *((_DWORD *)this + 6) = v8;
    if ((*((_DWORD *)a2 + 8) & 4) == 0) {
      return result;
    }
LABEL_14:
    *((_DWORD *)this + 8) |= 4u;
    uint64_t v9 = (CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance *)*((void *)this + 2);
    if (!v9) {
      operator new();
    }
    uint64_t v10 = (const CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance *)*((void *)a2 + 2);
    if (!v10)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      uint64_t v10 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance **)(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::default_instance_
                                                                                           + 16);
    }
    return CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::MergeFrom(v9, v10);
  }
  return result;
}

void sub_18DF82140(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::~TunnelEndPoint(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint *this)
{
  *(void *)this = &unk_1EDD0C140;
  CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::~TunnelEndPoint(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint *)CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 2);
    if (v3)
    {
      uint64_t v4 = *(void (**)(void))(*(void *)v3 + 8);
      v4();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 28) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::New(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::Clear(uint64_t this)
{
  uint64_t v1 = this;
  LOBYTE(v2) = *(unsigned char *)(this + 32);
  if ((_BYTE)v2)
  {
    if (*(unsigned char *)(this + 32))
    {
      uint64_t v3 = *(void *)(this + 8);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
          *(void *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        int v2 = *(_DWORD *)(this + 32);
      }
    }
    *(_DWORD *)(this + 24) = 0;
    if ((v2 & 4) != 0)
    {
      this = *(void *)(this + 16);
      if (this) {
        this = CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::Clear(this);
      }
    }
  }
  *(_DWORD *)(v1 + 32) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (1)
  {
    do
    {
      while (1)
      {
        while (1)
        {
          uint64_t v4 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
          {
            unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
            *((_DWORD *)a2 + 8) = TagFallback;
            if (!TagFallback) {
              return 1;
            }
          }
          else
          {
            unint64_t TagFallback = *v4;
            *((_DWORD *)a2 + 8) = TagFallback;
            *((void *)a2 + 1) = v4 + 1;
            if (!TagFallback) {
              return 1;
            }
          }
          unsigned int v6 = TagFallback >> 3;
          if (TagFallback >> 3 != 1) {
            break;
          }
          int v7 = TagFallback & 7;
          if (v7 != 2) {
            goto LABEL_20;
          }
          *((_DWORD *)this + 8) |= 1u;
          uint64_t v9 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
          if (!v9) {
            operator new();
          }
          unsigned int v29 = 0;
          uint64_t v10 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v29))return 0; {
          }
            }
          else
          {
            unsigned int v29 = *v10;
            *((void *)a2 + 1) = v10 + 1;
          }
          int v13 = *((_DWORD *)a2 + 14);
          int v14 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v13 + 1;
          if (v13 >= v14) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream(v9, a2)
            || !*((unsigned char *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          int v15 = *((_DWORD *)a2 + 14);
          BOOL v16 = __OFSUB__(v15, 1);
          int v17 = v15 - 1;
          if (v17 < 0 == v16) {
            *((_DWORD *)a2 + 14) = v17;
          }
          int v18 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v11 = *((void *)a2 + 2);
          if ((unint64_t)v18 < v11 && *v18 == 16)
          {
            uint64_t v12 = v18 + 1;
            *((void *)a2 + 1) = v12;
            goto LABEL_32;
          }
        }
        if (v6 == 2) {
          break;
        }
        if (v6 == 3)
        {
          int v7 = TagFallback & 7;
          if (v7 == 2)
          {
            int v8 = *((_DWORD *)this + 8);
            goto LABEL_40;
          }
        }
        else
        {
          int v7 = TagFallback & 7;
        }
LABEL_20:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
      }
        }
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_20;
      }
      uint64_t v12 = (char *)*((void *)a2 + 1);
      unint64_t v11 = *((void *)a2 + 2);
LABEL_32:
      unsigned int v28 = 0;
      if ((unint64_t)v12 >= v11 || *v12 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v28);
        if (!result) {
          return result;
        }
        unsigned int v19 = v28;
        unsigned int v20 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
      }
      else
      {
        unsigned int v19 = *v12;
        unsigned int v20 = v12 + 1;
        *((void *)a2 + 1) = v20;
      }
      *((_DWORD *)this + 6) = v19;
      int v8 = *((_DWORD *)this + 8) | 2;
      *((_DWORD *)this + 8) = v8;
    }
    while ((unint64_t)v20 >= v11 || *v20 != 26);
    *((void *)a2 + 1) = v20 + 1;
LABEL_40:
    *((_DWORD *)this + 8) = v8 | 4;
    unsigned int v22 = (CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance *)*((void *)this + 2);
    if (!v22) {
      operator new();
    }
    unsigned int v30 = 0;
    unsigned int v23 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v23 >= *((void *)a2 + 2) || *v23 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30)) {
        return 0;
      }
    }
    else
    {
      unsigned int v30 = *v23;
      *((void *)a2 + 1) = v23 + 1;
    }
    int v24 = *((_DWORD *)a2 + 14);
    int v25 = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 14) = v24 + 1;
    if (v24 >= v25) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
    if (!CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::MergePartialFromCodedStream(v22, a2)|| !*((unsigned char *)a2 + 36))
    {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
    int v26 = *((_DWORD *)a2 + 14);
    BOOL v16 = __OFSUB__(v26, 1);
    int v27 = v26 - 1;
    if (v27 < 0 == v16) {
      *((_DWORD *)a2 + 14) = v27;
    }
    if (*((void *)a2 + 1) == *((void *)a2 + 2)
      && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
    {
      *((_DWORD *)a2 + 8) = 0;
      uint64_t result = 1;
      *((unsigned char *)a2 + 36) = 1;
      return result;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 32);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_8:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 32) & 4) == 0) {
      return this;
    }
    goto LABEL_9;
  }
  uint64_t v7 = *(void *)(this + 8);
  if (!v7)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::default_instance_ + 8);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 2) != 0) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return this;
  }
LABEL_9:
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v8 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::default_instance_ + 16);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 32);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_28;
  }
  if (*((unsigned char *)this + 32))
  {
    uint64_t v4 = *((void *)this + 1);
    if (!v4)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      uint64_t v4 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::default_instance_ + 8);
    }
    int v5 = *(unsigned __int8 *)(v4 + 36);
    if (*(unsigned char *)(v4 + 36))
    {
      int v6 = (v5 << 31 >> 31) & 9;
      if ((v5 & 2) != 0) {
        v6 += 9;
      }
      if ((v5 & 4) != 0) {
        int v5 = v6 + 9;
      }
      else {
        int v5 = v6;
      }
    }
    *(_DWORD *)(v4 + 32) = v5;
    uint64_t v3 = (v5 + 2);
    int v2 = *((_DWORD *)this + 8);
    if ((v2 & 2) == 0) {
      goto LABEL_21;
    }
  }
  else
  {
    uint64_t v3 = 0;
    if ((*((unsigned char *)this + 32) & 2) == 0) {
      goto LABEL_21;
    }
  }
  uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  if ((v7 & 0x80000000) != 0)
  {
    int v8 = 11;
  }
  else if (v7 >= 0x80)
  {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7) + 1;
    int v2 = *((_DWORD *)this + 8);
  }
  else
  {
    int v8 = 2;
  }
  uint64_t v3 = (v8 + v3);
LABEL_21:
  if ((v2 & 4) != 0)
  {
    uint64_t v9 = (CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance *)*((void *)this + 2);
    if (!v9)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(0);
      uint64_t v9 = *(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance **)(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::default_instance_
                                                                                    + 16);
    }
    uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPointAssistance::ByteSize(v9);
    int v11 = (int)v10;
    if (v10 >= 0x80) {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
    }
    else {
      int v12 = 1;
    }
    uint64_t v3 = (v3 + v11 + v12 + 1);
  }
LABEL_28:
  *((_DWORD *)this + 7) = v3;
  return v3;
}

double CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint *this, const CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint *a2)
{
  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    uint64_t v3 = *(void *)(this + 16);
    *(void *)(this + 16) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v3;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.TunnelEndPoint");
}

double CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData *this)
{
  double result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData *CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData::MapsRouteHintData(CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData *this, const CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData *a2)
{
  *(void *)this = &unk_1EDD0CC80;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData::MergeFrom(this, a2);
  return this;
}

void sub_18DF82AF0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData *this, const CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 52);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 52))
    {
      uint64_t v6 = *((void *)a2 + 1);
      *((_DWORD *)this + 13) |= 1u;
      *((void *)this + 1) = v6;
      int v5 = *((_DWORD *)a2 + 13);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_13;
      }
    }
    else if ((*((unsigned char *)a2 + 52) & 2) == 0)
    {
      goto LABEL_6;
    }
    double result = *((double *)a2 + 2);
    *((_DWORD *)this + 13) |= 2u;
    *((double *)this + 2) = result;
    int v5 = *((_DWORD *)a2 + 13);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_14;
    }
LABEL_13:
    double result = *((double *)a2 + 3);
    *((_DWORD *)this + 13) |= 4u;
    *((double *)this + 3) = result;
    int v5 = *((_DWORD *)a2 + 13);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0) {
        return result;
      }
      goto LABEL_9;
    }
LABEL_14:
    double result = *((double *)a2 + 4);
    *((_DWORD *)this + 13) |= 8u;
    *((double *)this + 4) = result;
    if ((*((_DWORD *)a2 + 13) & 0x10) == 0) {
      return result;
    }
LABEL_9:
    double result = *((double *)a2 + 5);
    *((_DWORD *)this + 13) |= 0x10u;
    *((double *)this + 5) = result;
  }
  return result;
}

void sub_18DF82C18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData::~MapsRouteHintData(CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData *this)
{
  *(void *)this = &unk_1EDD0CC80;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData::~MapsRouteHintData(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 48) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData::New(CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 52))
  {
    *(void *)(this + 40) = 0;
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 8) = 0u;
  }
  *(_DWORD *)(this + 52) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (2)
  {
    uint64_t v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        unint64_t v15 = 0;
        int v8 = (char *)*((void *)a2 + 1);
        unint64_t v7 = *((void *)a2 + 2);
        if ((unint64_t)v8 >= v7 || *v8 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, &v15);
          if (!result) {
            return result;
          }
          unint64_t v9 = v15;
          uint64_t v10 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v7 = *((void *)a2 + 2);
        }
        else
        {
          unint64_t v9 = *v8;
          uint64_t v10 = v8 + 1;
          *((void *)a2 + 1) = v10;
        }
        *((void *)this + 1) = v9;
        *((_DWORD *)this + 13) |= 1u;
        if ((unint64_t)v10 < v7 && *v10 == 17)
        {
          *((void *)a2 + 1) = v10 + 1;
          goto LABEL_27;
        }
        continue;
      case 2u:
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_19;
        }
LABEL_27:
        unint64_t v15 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v15) & 1) == 0) {
          return 0;
        }
        *((void *)this + 2) = v15;
        *((_DWORD *)this + 13) |= 2u;
        int v12 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v12 >= *((void *)a2 + 2) || *v12 != 25) {
          continue;
        }
        *((void *)a2 + 1) = v12 + 1;
LABEL_31:
        unint64_t v15 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v15) & 1) == 0) {
          return 0;
        }
        *((void *)this + 3) = v15;
        *((_DWORD *)this + 13) |= 4u;
        int v13 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v13 >= *((void *)a2 + 2) || *v13 != 33) {
          continue;
        }
        *((void *)a2 + 1) = v13 + 1;
LABEL_35:
        unint64_t v15 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v15) & 1) == 0) {
          return 0;
        }
        *((void *)this + 4) = v15;
        *((_DWORD *)this + 13) |= 8u;
        int v14 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v14 >= *((void *)a2 + 2) || *v14 != 41) {
          continue;
        }
        *((void *)a2 + 1) = v14 + 1;
LABEL_39:
        unint64_t v15 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v15))
        {
          *((void *)this + 5) = v15;
          *((_DWORD *)this + 13) |= 0x10u;
          if (*((void *)a2 + 1) == *((void *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_31;
        }
        goto LABEL_19;
      case 4u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_35;
        }
        goto LABEL_19;
      case 5u:
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_19;
        }
        goto LABEL_39;
      default:
        int v6 = TagFallback & 7;
LABEL_19:
        if (v6 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 52);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 52);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(double *)(v5 + 32), a3);
    if ((*(_DWORD *)(v5 + 52) & 0x10) == 0) {
      return this;
    }
    goto LABEL_11;
  }
LABEL_9:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 8) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v6 & 0x10) == 0) {
    return this;
  }
LABEL_11:
  double v7 = *(double *)(v5 + 40);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, v7, a3);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 52);
  if ((_BYTE)v2)
  {
    if (*((unsigned char *)this + 52))
    {
      unsigned int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                       + 1))
         + 1;
      int v2 = *((_DWORD *)this + 13);
    }
    else
    {
      unsigned int v3 = 0;
    }
    if ((v2 & 2) != 0) {
      v3 += 9;
    }
    if ((v2 & 4) != 0) {
      v3 += 9;
    }
    if ((v2 & 8) != 0) {
      v3 += 9;
    }
    if ((v2 & 0x10) != 0) {
      uint64_t result = v3 + 9;
    }
    else {
      uint64_t result = v3;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  *((_DWORD *)this + 12) = result;
  return result;
}

double CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData *this, const CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData::Swap(CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData *this, CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    uint64_t v3 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    uint64_t v4 = *((void *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v4;
    uint64_t v5 = *((void *)this + 4);
    *((void *)this + 4) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v5;
    double result = *((double *)this + 5);
    *((void *)this + 5) = *((void *)a2 + 5);
    *((double *)a2 + 5) = result;
    LODWORD(v2) = *((_DWORD *)this + 13);
    *((_DWORD *)this + 13) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v2;
    LODWORD(v2) = *((_DWORD *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v2;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.MapsRouteHintData");
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint_RoutingType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 7;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::SharedCtor(void *this)
{
  this[7] = 0;
  this[2] = 0;
  this[3] = 0;
  this[1] = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint *CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::MapMatchingRouteHint(CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint *this, const CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint *a2)
{
  *(void *)this = &unk_1EDD0D8B0;
  *((void *)this + 7) = 0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 36) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::MergeFrom(this, a2);
  return this;
}

void sub_18DF833BC(_Unwind_Exception *a1)
{
  sub_18DF0C324(v1 + 4);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint *this, const CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v17);
  }
  uint64_t v4 = (CoreNavigation::CLP::LogEntry::PrivateData *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint *)((char *)this + 32));
  if (*((int *)a2 + 10) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      int v6 = *(const CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData **)(*((void *)a2 + 4) + 8 * v5);
      int v7 = *((_DWORD *)this + 11);
      uint64_t v8 = *((int *)this + 10);
      if ((int)v8 >= v7)
      {
        if (v7 == *((_DWORD *)this + 12))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint *)((char *)this + 32));
          int v7 = *((_DWORD *)this + 11);
        }
        *((_DWORD *)this + 11) = v7 + 1;
        operator new();
      }
      uint64_t v9 = *((void *)this + 4);
      *((_DWORD *)this + 10) = v8 + 1;
      CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData::MergeFrom(*(CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData **)(v9 + 8 * v8), v6);
      ++v5;
    }
    while (v5 < *((int *)a2 + 10));
  }
  LOBYTE(v10) = *((unsigned char *)a2 + 60);
  if (!(_BYTE)v10) {
    return;
  }
  if ((*((unsigned char *)a2 + 60) & 1) == 0)
  {
    if ((*((unsigned char *)a2 + 60) & 2) == 0) {
      goto LABEL_14;
    }
LABEL_22:
    *((_DWORD *)this + 15) |= 2u;
    int v13 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 2);
    if (!v13) {
      operator new();
    }
    int v14 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)a2 + 2);
    if (!v14)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(v4);
      int v14 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::default_instance_
                                                                            + 16);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v13, v14);
    int v10 = *((_DWORD *)a2 + 15);
    if ((v10 & 4) == 0)
    {
LABEL_15:
      if ((v10 & 8) == 0) {
        return;
      }
      goto LABEL_29;
    }
    goto LABEL_27;
  }
  *((_DWORD *)this + 15) |= 1u;
  int v11 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
  if (!v11) {
    operator new();
  }
  int v12 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)a2 + 1);
  if (!v12)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(v4);
    int v12 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::default_instance_
                                                                          + 8);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v11, v12);
  int v10 = *((_DWORD *)a2 + 15);
  if ((v10 & 2) != 0) {
    goto LABEL_22;
  }
LABEL_14:
  if ((v10 & 4) == 0) {
    goto LABEL_15;
  }
LABEL_27:
  unsigned int v15 = *((_DWORD *)a2 + 6);
  if (v15 >= 7) {
    __assert_rtn("set_route_type", "CoreNavigationCLPPrivateDataShared.pb.h", 20974, "::CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint_RoutingType_IsValid(value)");
  }
  *((_DWORD *)this + 15) |= 4u;
  *((_DWORD *)this + 6) = v15;
  if ((*((_DWORD *)a2 + 15) & 8) != 0)
  {
LABEL_29:
    unsigned int v16 = *((_DWORD *)a2 + 7);
    if (v16 >= 7) {
      __assert_rtn("set_step_type", "CoreNavigationCLPPrivateDataShared.pb.h", 20997, "::CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint_RoutingType_IsValid(value)");
    }
    *((_DWORD *)this + 15) |= 8u;
    *((_DWORD *)this + 7) = v16;
  }
}

void sub_18DF836E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::~MapMatchingRouteHint(CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint *this)
{
  *(void *)this = &unk_1EDD0D8B0;
  CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::SharedDtor(this);
  sub_18DF0C324((uint64_t *)this + 4);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::~MapMatchingRouteHint(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint *)CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 2);
    if (v3)
    {
      uint64_t v4 = *(void (**)(void))(*(void *)v3 + 8);
      v4();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 56) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::New(CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::Clear(CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 60);
  if ((_BYTE)v2)
  {
    if (*((unsigned char *)this + 60))
    {
      uint64_t v3 = *((void *)this + 1);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
          *(void *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        int v2 = *((_DWORD *)this + 15);
      }
    }
    if ((v2 & 2) != 0)
    {
      uint64_t v4 = *((void *)this + 2);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 36))
        {
          *(void *)(v4 + 8) = 0;
          *(void *)(v4 + 16) = 0;
          *(void *)(v4 + 24) = 0;
        }
        *(_DWORD *)(v4 + 36) = 0;
      }
    }
    *((void *)this + 3) = 0;
  }
  uint64_t result = sub_18DF0C208((uint64_t)this + 32);
  *((_DWORD *)this + 15) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4 = (CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint *)((char *)this + 32);
  while (1)
  {
    uint64_t v5 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v5 < *((void *)a2 + 2) && (*v5 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_7;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_22;
        }
        *((_DWORD *)this + 15) |= 1u;
        uint64_t v8 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
        if (!v8) {
          operator new();
        }
        unsigned int v42 = 0;
        uint64_t v9 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v9 >= *((void *)a2 + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v42))return 0; {
        }
          }
        else
        {
          unsigned int v42 = *v9;
          *((void *)a2 + 1) = v9 + 1;
        }
        int v14 = *((_DWORD *)a2 + 14);
        int v15 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v14 + 1;
        if (v14 >= v15) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream(v8, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v16 = *((_DWORD *)a2 + 14);
        BOOL v17 = __OFSUB__(v16, 1);
        int v18 = v16 - 1;
        if (v18 < 0 == v17) {
          *((_DWORD *)a2 + 14) = v18;
        }
        unsigned int v19 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v19 >= *((void *)a2 + 2) || *v19 != 18) {
          continue;
        }
        *((void *)a2 + 1) = v19 + 1;
        goto LABEL_34;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_22;
        }
LABEL_34:
        *((_DWORD *)this + 15) |= 2u;
        unsigned int v20 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 2);
        if (!v20) {
          operator new();
        }
        unsigned int v42 = 0;
        unsigned int v21 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v21 >= *((void *)a2 + 2) || *v21 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v42))return 0; {
        }
          }
        else
        {
          unsigned int v42 = *v21;
          *((void *)a2 + 1) = v21 + 1;
        }
        int v22 = *((_DWORD *)a2 + 14);
        int v23 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v22 + 1;
        if (v22 >= v23) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream(v20, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v24 = *((_DWORD *)a2 + 14);
        BOOL v17 = __OFSUB__(v24, 1);
        int v25 = v24 - 1;
        if (v25 < 0 == v17) {
          *((_DWORD *)a2 + 14) = v25;
        }
        int v26 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
        if ((unint64_t)v26 < v10 && *v26 == 24)
        {
          int v11 = v26 + 1;
          *((void *)a2 + 1) = v11;
LABEL_48:
          unsigned int v42 = 0;
          if ((unint64_t)v11 >= v10 || *v11 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v42);
            if (!result) {
              return result;
            }
            unsigned int v27 = v42;
          }
          else
          {
            unsigned int v27 = *v11;
            *((void *)a2 + 1) = v11 + 1;
          }
          if (v27 <= 6)
          {
            *((_DWORD *)this + 15) |= 4u;
            *((_DWORD *)this + 6) = v27;
          }
          unsigned int v29 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v12 = *((void *)a2 + 2);
          if ((unint64_t)v29 < v12 && *v29 == 32)
          {
            int v13 = v29 + 1;
            *((void *)a2 + 1) = v13;
LABEL_58:
            unsigned int v42 = 0;
            if ((unint64_t)v13 >= v12 || *v13 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v42);
              if (!result) {
                return result;
              }
              unsigned int v30 = v42;
            }
            else
            {
              unsigned int v30 = *v13;
              *((void *)a2 + 1) = v13 + 1;
            }
            if (v30 <= 6)
            {
              *((_DWORD *)this + 15) |= 8u;
              *((_DWORD *)this + 7) = v30;
            }
            int v31 = (unsigned char *)*((void *)a2 + 1);
            if ((unint64_t)v31 < *((void *)a2 + 2) && *v31 == 42)
            {
              do
              {
                *((void *)a2 + 1) = v31 + 1;
LABEL_68:
                int v32 = *((_DWORD *)this + 11);
                uint64_t v33 = *((int *)this + 10);
                if ((int)v33 >= v32)
                {
                  if (v32 == *((_DWORD *)this + 12))
                  {
                    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
                    int v32 = *((_DWORD *)this + 11);
                  }
                  *((_DWORD *)this + 11) = v32 + 1;
                  operator new();
                }
                uint64_t v34 = *((void *)this + 4);
                *((_DWORD *)this + 10) = v33 + 1;
                int v35 = *(CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData **)(v34 + 8 * v33);
                unsigned int v42 = 0;
                unsigned int v36 = (char *)*((void *)a2 + 1);
                if ((unint64_t)v36 >= *((void *)a2 + 2) || *v36 < 0)
                {
                  if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v42))return 0; {
                }
                  }
                else
                {
                  unsigned int v42 = *v36;
                  *((void *)a2 + 1) = v36 + 1;
                }
                int v37 = *((_DWORD *)a2 + 14);
                int v38 = *((_DWORD *)a2 + 15);
                *((_DWORD *)a2 + 14) = v37 + 1;
                if (v37 >= v38) {
                  return 0;
                }
                wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
                if (!CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData::MergePartialFromCodedStream(v35, a2)|| !*((unsigned char *)a2 + 36))
                {
                  return 0;
                }
                wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
                int v39 = *((_DWORD *)a2 + 14);
                BOOL v17 = __OFSUB__(v39, 1);
                int v40 = v39 - 1;
                if (v40 < 0 == v17) {
                  *((_DWORD *)a2 + 14) = v40;
                }
                int v31 = (unsigned char *)*((void *)a2 + 1);
                unint64_t v41 = (unsigned char *)*((void *)a2 + 2);
              }
              while (v31 < v41 && *v31 == 42);
              if (v31 == v41 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
              {
                *((_DWORD *)a2 + 8) = 0;
                uint64_t result = 1;
                *((unsigned char *)a2 + 36) = 1;
                return result;
              }
            }
          }
        }
        break;
      case 3u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        int v11 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
        goto LABEL_48;
      case 4u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        int v13 = (char *)*((void *)a2 + 1);
        unint64_t v12 = *((void *)a2 + 2);
        goto LABEL_58;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_22;
        }
        goto LABEL_68;
      default:
        int v7 = TagFallback & 7;
LABEL_22:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 60);
  if (v6)
  {
    uint64_t v8 = *(void *)(this + 8);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      uint64_t v8 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v8, a2, a4);
    int v6 = *(_DWORD *)(v5 + 60);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v9 = *(void *)(v5 + 16);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v9 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::default_instance_ + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v9, a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 60) & 8) != 0) {
LABEL_5:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 28), (uint64_t)a2, a4);
LABEL_6:
  if (*(int *)(v5 + 40) >= 1)
  {
    uint64_t v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(void *)(*(void *)(v5 + 32) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 40));
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 60);
  if (!(_BYTE)v2)
  {
    int v3 = 0;
    goto LABEL_39;
  }
  if ((*((unsigned char *)this + 60) & 1) == 0)
  {
    int v3 = 0;
    if ((*((unsigned char *)this + 60) & 2) == 0) {
      goto LABEL_24;
    }
    goto LABEL_15;
  }
  uint64_t v4 = *((void *)this + 1);
  if (!v4)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    uint64_t v4 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::default_instance_ + 8);
  }
  int v5 = *(unsigned __int8 *)(v4 + 36);
  if (*(unsigned char *)(v4 + 36))
  {
    int v6 = (v5 << 31 >> 31) & 9;
    if ((v5 & 2) != 0) {
      v6 += 9;
    }
    if ((v5 & 4) != 0) {
      int v5 = v6 + 9;
    }
    else {
      int v5 = v6;
    }
  }
  *(_DWORD *)(v4 + 32) = v5;
  int v3 = v5 + 2;
  int v2 = *((_DWORD *)this + 15);
  if ((v2 & 2) != 0)
  {
LABEL_15:
    uint64_t v7 = *((void *)this + 2);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::default_instance_ + 16);
    }
    int v8 = *(unsigned __int8 *)(v7 + 36);
    if (*(unsigned char *)(v7 + 36))
    {
      int v9 = (v8 << 31 >> 31) & 9;
      if ((v8 & 2) != 0) {
        v9 += 9;
      }
      if ((v8 & 4) != 0) {
        int v8 = v9 + 9;
      }
      else {
        int v8 = v9;
      }
    }
    *(_DWORD *)(v7 + 32) = v8;
    v3 += v8 + 2;
    int v2 = *((_DWORD *)this + 15);
  }
LABEL_24:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_39;
    }
    goto LABEL_33;
  }
  unint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  if ((v10 & 0x80000000) != 0)
  {
    int v11 = 11;
  }
  else if (v10 >= 0x80)
  {
    int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10) + 1;
    int v2 = *((_DWORD *)this + 15);
  }
  else
  {
    int v11 = 2;
  }
  v3 += v11;
  if ((v2 & 8) != 0)
  {
LABEL_33:
    unint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
    if ((v12 & 0x80000000) != 0)
    {
      int v13 = 11;
    }
    else if (v12 >= 0x80)
    {
      int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12) + 1;
    }
    else
    {
      int v13 = 2;
    }
    v3 += v13;
  }
LABEL_39:
  int v14 = *((_DWORD *)this + 10);
  uint64_t v15 = (v14 + v3);
  if (v14 >= 1)
  {
    uint64_t v16 = 0;
    do
    {
      BOOL v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData::ByteSize(*(CoreNavigation::CLP::LogEntry::PrivateData::MapsRouteHintData **)(*((void *)this + 4) + 8 * v16));
      int v18 = (int)v17;
      if (v17 >= 0x80) {
        int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17);
      }
      else {
        int v19 = 1;
      }
      uint64_t v15 = (v18 + v15 + v19);
      ++v16;
    }
    while (v16 < *((int *)this + 10));
  }
  *((_DWORD *)this + 14) = v15;
  return v15;
}

void CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint *this, const CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint *a2)
{
  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint *)this)
  {
    uint64_t v3 = this;
    uint64_t v4 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v4;
    uint64_t v5 = *(void *)(this + 16);
    *(void *)(this + 16) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v5;
    this = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    int v6 = *(_DWORD *)(v3 + 60);
    *(_DWORD *)(v3 + 60) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v6;
    int v7 = *(_DWORD *)(v3 + 56);
    *(_DWORD *)(v3 + 56) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v7;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.MapMatchingRouteHint");
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification_TransmissionStateType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 5;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification_SensorType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 2;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::SharedCtor(uint64_t this)
{
  *(_DWORD *)(this + 48) = 0;
  *(unsigned char *)(this + 52) = 0;
  *(void *)(this + 72) = 0;
  *(_DWORD *)(this + 80) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  *(void *)(this + 8) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification *CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::AccessoryVehicleSpeedNotification(CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification *this, const CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification *a2)
{
  *(void *)this = &unk_1EDD0E6C0;
  *((void *)this + 7) = 0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 37) = 0u;
  *((void *)this + 8) = 0;
  *((void *)this + 9) = 0;
  *((_DWORD *)this + 20) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::MergeFrom(this, a2);
  return this;
}

void sub_18DF84448(_Unwind_Exception *a1)
{
  uint64_t v3 = v2;
  if (*v3) {
    MEMORY[0x192FA6220](*v3, 0x1000C8000313F17);
  }
  uint64_t v5 = *((void *)v1 + 4);
  if (v5) {
    MEMORY[0x192FA6220](v5, 0x1000C8000313F17);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification *this, const CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification *a2)
{
  uint64_t v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v16);
  }
  int v4 = *((_DWORD *)a2 + 10);
  if (v4)
  {
    sub_18DF0C278((uint64_t)v3 + 32, *((_DWORD *)v3 + 10) + v4);
    this = (CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification *)memcpy((void *)(*((void *)v3 + 4) + 8 * *((int *)v3 + 10)), *((const void **)a2 + 4), 8 * *((int *)a2 + 10));
    *((_DWORD *)v3 + 10) += *((_DWORD *)a2 + 10);
  }
  int v5 = *((_DWORD *)a2 + 16);
  if (v5)
  {
    sub_18DF0C278((uint64_t)v3 + 56, *((_DWORD *)v3 + 16) + v5);
    this = (CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification *)memcpy((void *)(*((void *)v3 + 7) + 8 * *((int *)v3 + 16)), *((const void **)a2 + 7), 8 * *((int *)a2 + 16));
    *((_DWORD *)v3 + 16) += *((_DWORD *)a2 + 16);
  }
  int v6 = *((_DWORD *)a2 + 20);
  if ((_BYTE)v6)
  {
    if (v6)
    {
      *((_DWORD *)v3 + 20) |= 1u;
      unint64_t v10 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)v3 + 1);
      if (!v10) {
        operator new();
      }
      int v11 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)a2 + 1);
      if (!v11)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
        int v11 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::default_instance_
                                                                              + 8);
      }
      CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v10, v11);
      int v6 = *((_DWORD *)a2 + 20);
      if ((v6 & 2) == 0)
      {
LABEL_10:
        if ((v6 & 4) == 0) {
          goto LABEL_11;
        }
        goto LABEL_30;
      }
    }
    else if ((v6 & 2) == 0)
    {
      goto LABEL_10;
    }
    *((_DWORD *)v3 + 20) |= 2u;
    unint64_t v12 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)v3 + 2);
    if (!v12) {
      operator new();
    }
    int v13 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)a2 + 2);
    if (!v13)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      int v13 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::default_instance_
                                                                            + 16);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v12, v13);
    int v6 = *((_DWORD *)a2 + 20);
    if ((v6 & 4) == 0)
    {
LABEL_11:
      if ((v6 & 8) == 0) {
        goto LABEL_12;
      }
      goto LABEL_31;
    }
LABEL_30:
    int v14 = *((_DWORD *)a2 + 6);
    *((_DWORD *)v3 + 20) |= 4u;
    *((_DWORD *)v3 + 6) = v14;
    int v6 = *((_DWORD *)a2 + 20);
    if ((v6 & 8) == 0)
    {
LABEL_12:
      if ((v6 & 0x10) == 0) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
LABEL_31:
    unsigned int v15 = *((_DWORD *)a2 + 7);
    if (v15 >= 5) {
      __assert_rtn("set_transmission_state", "CoreNavigationCLPPrivateDataShared.pb.h", 21155, "::CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification_TransmissionStateType_IsValid(value)");
    }
    *((_DWORD *)v3 + 20) |= 8u;
    *((_DWORD *)v3 + 7) = v15;
    int v6 = *((_DWORD *)a2 + 20);
    if ((v6 & 0x10) == 0) {
      goto LABEL_14;
    }
LABEL_13:
    int v7 = *((_DWORD *)a2 + 12);
    *((_DWORD *)v3 + 20) |= 0x10u;
    *((_DWORD *)v3 + 12) = v7;
    int v6 = *((_DWORD *)a2 + 20);
LABEL_14:
    if ((v6 & 0x80) != 0)
    {
      char v8 = *((unsigned char *)a2 + 52);
      *((_DWORD *)v3 + 20) |= 0x80u;
      *((unsigned char *)v3 + 52) = v8;
      int v6 = *((_DWORD *)a2 + 20);
    }
  }
  if ((v6 & 0x100) != 0)
  {
    unsigned int v9 = *((_DWORD *)a2 + 18);
    if (v9 >= 2) {
      __assert_rtn("set_sensor_type", "CoreNavigationCLPPrivateDataShared.pb.h", 21272, "::CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification_SensorType_IsValid(value)");
    }
    *((_DWORD *)v3 + 20) |= 0x100u;
    *((_DWORD *)v3 + 18) = v9;
  }
}

void sub_18DF84798(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::~AccessoryVehicleSpeedNotification(CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification *this)
{
  *(void *)this = &unk_1EDD0E6C0;
  CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::SharedDtor(this);
  uint64_t v2 = *((void *)this + 7);
  if (v2) {
    MEMORY[0x192FA6220](v2, 0x1000C8000313F17);
  }
  uint64_t v3 = *((void *)this + 4);
  if (v3) {
    MEMORY[0x192FA6220](v3, 0x1000C8000313F17);
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::~AccessoryVehicleSpeedNotification(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification *)CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 2);
    if (v3)
    {
      int v4 = *(void (**)(void))(*(void *)v3 + 8);
      v4();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 76) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::New(CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 80);
  if ((_BYTE)v1)
  {
    if (v1)
    {
      uint64_t v2 = *(void *)(this + 8);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 36))
        {
          *(void *)(v2 + 8) = 0;
          *(void *)(v2 + 16) = 0;
          *(void *)(v2 + 24) = 0;
        }
        *(_DWORD *)(v2 + 36) = 0;
        int v1 = *(_DWORD *)(this + 80);
      }
    }
    if ((v1 & 2) != 0)
    {
      uint64_t v3 = *(void *)(this + 16);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
          *(void *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        int v1 = *(_DWORD *)(this + 80);
      }
    }
    *(void *)(this + 24) = 0;
    *(_DWORD *)(this + 48) = 0;
    *(unsigned char *)(this + 52) = 0;
  }
  if ((v1 & 0xFF00) != 0) {
    *(_DWORD *)(this + 72) = 0;
  }
  *(_DWORD *)(this + 40) = 0;
  *(_DWORD *)(this + 64) = 0;
  *(_DWORD *)(this + 80) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (char *)this + 56;
  int v5 = (char *)this + 32;
LABEL_2:
  while (2)
  {
    int v6 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v6 >= *((void *)a2 + 2) || *v6 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v6;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v6 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_34;
        }
        *((_DWORD *)this + 20) |= 1u;
        unsigned int v9 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
        if (!v9) {
          operator new();
        }
        v64[0] = 0;
        unint64_t v10 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v64))return 0; {
        }
          }
        else
        {
          v64[0] = *v10;
          *((void *)a2 + 1) = v10 + 1;
        }
        int v20 = *((_DWORD *)a2 + 14);
        int v21 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v20 + 1;
        if (v20 >= v21) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream(v9, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v22 = *((_DWORD *)a2 + 14);
        BOOL v23 = __OFSUB__(v22, 1);
        int v24 = v22 - 1;
        if (v24 < 0 == v23) {
          *((_DWORD *)a2 + 14) = v24;
        }
        int v25 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v25 >= *((void *)a2 + 2) || *v25 != 18) {
          continue;
        }
        *((void *)a2 + 1) = v25 + 1;
        goto LABEL_47;
      case 2u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_34;
        }
LABEL_47:
        *((_DWORD *)this + 20) |= 2u;
        int v26 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 2);
        if (!v26) {
          operator new();
        }
        v64[0] = 0;
        unsigned int v27 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v27 >= *((void *)a2 + 2) || *v27 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v64))return 0; {
        }
          }
        else
        {
          v64[0] = *v27;
          *((void *)a2 + 1) = v27 + 1;
        }
        int v28 = *((_DWORD *)a2 + 14);
        int v29 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v28 + 1;
        if (v28 >= v29) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream(v26, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v30 = *((_DWORD *)a2 + 14);
        BOOL v23 = __OFSUB__(v30, 1);
        int v31 = v30 - 1;
        if (v31 < 0 == v23) {
          *((_DWORD *)a2 + 14) = v31;
        }
        int v32 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
        if ((unint64_t)v32 >= v11 || *v32 != 24) {
          continue;
        }
        unint64_t v12 = v32 + 1;
        *((void *)a2 + 1) = v12;
LABEL_61:
        v64[0] = 0;
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v64);
          if (!result) {
            return result;
          }
          unsigned int v33 = v64[0];
          uint64_t v34 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v11 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v33 = *v12;
          uint64_t v34 = v12 + 1;
          *((void *)a2 + 1) = v34;
        }
        *((_DWORD *)this + 6) = v33;
        *((_DWORD *)this + 20) |= 4u;
        if ((unint64_t)v34 >= v11 || *v34 != 32) {
          continue;
        }
        int v13 = v34 + 1;
        *((void *)a2 + 1) = v13;
LABEL_69:
        v64[0] = 0;
        if ((unint64_t)v13 >= v11 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v64);
          if (!result) {
            return result;
          }
          unsigned int v35 = v64[0];
        }
        else
        {
          unsigned int v35 = *v13;
          *((void *)a2 + 1) = v13 + 1;
        }
        if (v35 <= 4)
        {
          *((_DWORD *)this + 20) |= 8u;
          *((_DWORD *)this + 7) = v35;
        }
        unsigned int v36 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        if ((unint64_t)v36 >= v14 || *v36 != 40) {
          continue;
        }
        unsigned int v15 = v36 + 1;
        *((void *)a2 + 1) = v15;
LABEL_79:
        v64[0] = 0;
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v64);
          if (!result) {
            return result;
          }
          unsigned int v37 = v64[0];
          int v38 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v14 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v37 = *v15;
          int v38 = v15 + 1;
          *((void *)a2 + 1) = v38;
        }
        *((_DWORD *)this + 12) = v37;
        *((_DWORD *)this + 20) |= 0x10u;
        if ((unint64_t)v38 >= v14 || *v38 != 49) {
          continue;
        }
        do
        {
          *((void *)a2 + 1) = v38 + 1;
LABEL_87:
          *(void *)int v64 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v64) & 1) == 0)return 0; {
          uint64_t v39 = *(void *)v64;
          }
          int v40 = *((_DWORD *)this + 10);
          if (v40 == *((_DWORD *)this + 11))
          {
            sub_18DF0C278((uint64_t)v5, v40 + 1);
            int v40 = *((_DWORD *)this + 10);
          }
          uint64_t v41 = *((void *)this + 4);
          int v42 = v40 + 1;
          *((_DWORD *)this + 10) = v40 + 1;
          *(void *)(v41 + 8 * v40) = v39;
          uint64_t v43 = *((void *)a2 + 1);
          int v44 = *((_DWORD *)a2 + 4) - v43;
          if (v44 >= 1)
          {
            signed int v45 = v44 / 9u;
            int v46 = v45 >= *((_DWORD *)this + 11) - v42 ? *((_DWORD *)this + 11) - v42 : v45;
            if (v46 >= 1)
            {
              int v47 = 0;
              while (*(unsigned char *)v43 == 49)
              {
                uint64_t v48 = *(void *)(v43 + 1);
                if (v42 >= *((_DWORD *)this + 11))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v64);
                  int v42 = *((_DWORD *)this + 10);
                  uint64_t v41 = *((void *)this + 4);
                }
                *((_DWORD *)this + 10) = v42 + 1;
                *(void *)(v41 + 8 * v42) = v48;
                ++v47;
                v43 += 9;
                ++v42;
                if (v46 == v47)
                {
                  int v47 = v46;
                  break;
                }
              }
              if (v47) {
                wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(a2);
              }
            }
          }
LABEL_103:
          int v38 = (unsigned char *)*((void *)a2 + 1);
          if ((unint64_t)v38 >= *((void *)a2 + 2)) {
            goto LABEL_2;
          }
          int v49 = *v38;
        }
        while (v49 == 49);
        if (v49 == 57) {
          goto LABEL_106;
        }
        continue;
      case 3u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        unint64_t v12 = (char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
        goto LABEL_61;
      case 4u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        int v13 = (char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
        goto LABEL_69;
      case 5u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        unsigned int v15 = (char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        goto LABEL_79;
      case 6u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_87;
        }
        if (v8 != 2) {
          goto LABEL_34;
        }
        uint64_t result = sub_18DF39FAC(a2, (uint64_t)v5);
        if (!result) {
          return result;
        }
        goto LABEL_103;
      case 7u:
        int v8 = TagFallback & 7;
        if (v8 == 1) {
          goto LABEL_107;
        }
        if (v8 != 2)
        {
LABEL_34:
          if (v8 == 4) {
            return 1;
          }
          if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
          continue;
          }
        }
        uint64_t result = sub_18DF39FAC(a2, (uint64_t)v4);
        if (!result) {
          return result;
        }
LABEL_123:
        int v38 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v17 = *((void *)a2 + 2);
        if ((unint64_t)v38 >= v17) {
          continue;
        }
        int v60 = *v38;
        if (v60 != 57)
        {
          if (v60 == 64)
          {
            int v18 = v38 + 1;
            *((void *)a2 + 1) = v18;
LABEL_127:
            v64[0] = 0;
            if ((unint64_t)v18 >= v17 || *v18 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v64);
              if (!result) {
                return result;
              }
              unsigned int v61 = v64[0];
              int v62 = (unsigned char *)*((void *)a2 + 1);
              unint64_t v17 = *((void *)a2 + 2);
            }
            else
            {
              unsigned int v61 = *v18;
              int v62 = v18 + 1;
              *((void *)a2 + 1) = v62;
            }
            *((unsigned char *)this + 52) = v61 != 0;
            *((_DWORD *)this + 20) |= 0x80u;
            if ((unint64_t)v62 < v17 && *v62 == 72)
            {
              int v19 = v62 + 1;
              *((void *)a2 + 1) = v19;
LABEL_135:
              v64[0] = 0;
              if ((unint64_t)v19 >= v17 || *v19 < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v64);
                if (!result) {
                  return result;
                }
                unsigned int v63 = v64[0];
              }
              else
              {
                unsigned int v63 = *v19;
                *((void *)a2 + 1) = v19 + 1;
              }
              if (v63 <= 1)
              {
                *((_DWORD *)this + 20) |= 0x100u;
                *((_DWORD *)this + 18) = v63;
              }
              if (*((void *)a2 + 1) == *((void *)a2 + 2)
                && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
              {
                *((_DWORD *)a2 + 8) = 0;
                uint64_t result = 1;
                *((unsigned char *)a2 + 36) = 1;
                return result;
              }
            }
          }
          continue;
        }
LABEL_106:
        *((void *)a2 + 1) = v38 + 1;
LABEL_107:
        *(void *)int v64 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v64))
        {
          uint64_t v50 = *(void *)v64;
          int v51 = *((_DWORD *)this + 16);
          if (v51 == *((_DWORD *)this + 17))
          {
            sub_18DF0C278((uint64_t)v4, v51 + 1);
            int v51 = *((_DWORD *)this + 16);
          }
          uint64_t v52 = *((void *)this + 7);
          int v53 = v51 + 1;
          *((_DWORD *)this + 16) = v51 + 1;
          *(void *)(v52 + 8 * v51) = v50;
          uint64_t v54 = *((void *)a2 + 1);
          int v55 = *((_DWORD *)a2 + 4) - v54;
          if (v55 >= 1)
          {
            signed int v56 = v55 / 9u;
            int v57 = v56 >= *((_DWORD *)this + 17) - v53 ? *((_DWORD *)this + 17) - v53 : v56;
            if (v57 >= 1)
            {
              int v58 = 0;
              while (*(unsigned char *)v54 == 57)
              {
                uint64_t v59 = *(void *)(v54 + 1);
                if (v53 >= *((_DWORD *)this + 17))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v64);
                  int v53 = *((_DWORD *)this + 16);
                  uint64_t v52 = *((void *)this + 7);
                }
                *((_DWORD *)this + 16) = v53 + 1;
                *(void *)(v52 + 8 * v53) = v59;
                ++v58;
                v54 += 9;
                ++v53;
                if (v57 == v58)
                {
                  int v58 = v57;
                  break;
                }
              }
              if (v58) {
                wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(a2);
              }
            }
          }
          goto LABEL_123;
        }
        return 0;
      case 8u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        int v18 = (char *)*((void *)a2 + 1);
        unint64_t v17 = *((void *)a2 + 2);
        goto LABEL_127;
      case 9u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        int v19 = (char *)*((void *)a2 + 1);
        unint64_t v17 = *((void *)a2 + 2);
        goto LABEL_135;
      default:
        int v8 = TagFallback & 7;
        goto LABEL_34;
    }
  }
}

void sub_18DF852BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 80);
  if (v6)
  {
    uint64_t v10 = *(void *)(this + 8);
    if (!v10)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      uint64_t v10 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::default_instance_
                      + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v10, a2, a4);
    int v6 = *(_DWORD *)(v5 + 80);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_22;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v11 = *(void *)(v5 + 16);
  if (!v11)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v11 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::default_instance_
                    + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v11, a2, a4);
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_23;
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
LABEL_23:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 28), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 80) & 0x10) != 0) {
LABEL_6:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 48), (uint64_t)a2, a4);
LABEL_7:
  if (*(int *)(v5 + 40) >= 1)
  {
    uint64_t v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(double *)(*(void *)(v5 + 32) + 8 * v7++), a3);
    while (v7 < *(int *)(v5 + 40));
  }
  if (*(int *)(v5 + 64) >= 1)
  {
    uint64_t v8 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (uint64_t)a2, *(double *)(*(void *)(v5 + 56) + 8 * v8++), a3);
    while (v8 < *(int *)(v5 + 64));
  }
  int v9 = *(_DWORD *)(v5 + 80);
  if ((v9 & 0x80) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned __int8 *)(v5 + 52), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 80) & 0x100) == 0) {
      return this;
    }
  }
  else if ((v9 & 0x100) == 0)
  {
    return this;
  }
  uint64_t v12 = *(unsigned int *)(v5 + 72);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v12, (uint64_t)a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification *this)
{
  int v2 = *((_DWORD *)this + 20);
  if (!(_BYTE)v2)
  {
    int v3 = 0;
    if ((v2 & 0x100) == 0) {
      goto LABEL_56;
    }
    goto LABEL_50;
  }
  if ((v2 & 1) == 0)
  {
    int v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_25;
    }
    goto LABEL_16;
  }
  uint64_t v4 = *((void *)this + 1);
  if (!v4)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    uint64_t v4 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::default_instance_ + 8);
  }
  int v5 = *(unsigned __int8 *)(v4 + 36);
  if (*(unsigned char *)(v4 + 36))
  {
    int v6 = (v5 << 31 >> 31) & 9;
    if ((v5 & 2) != 0) {
      v6 += 9;
    }
    if ((v5 & 4) != 0) {
      int v5 = v6 + 9;
    }
    else {
      int v5 = v6;
    }
  }
  *(_DWORD *)(v4 + 32) = v5;
  int v3 = v5 + 2;
  int v2 = *((_DWORD *)this + 20);
  if ((v2 & 2) != 0)
  {
LABEL_16:
    uint64_t v7 = *((void *)this + 2);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::default_instance_
                     + 16);
    }
    int v8 = *(unsigned __int8 *)(v7 + 36);
    if (*(unsigned char *)(v7 + 36))
    {
      int v9 = (v8 << 31 >> 31) & 9;
      if ((v8 & 2) != 0) {
        v9 += 9;
      }
      if ((v8 & 4) != 0) {
        int v8 = v9 + 9;
      }
      else {
        int v8 = v9;
      }
    }
    *(_DWORD *)(v7 + 32) = v8;
    v3 += v8 + 2;
    int v2 = *((_DWORD *)this + 20);
  }
LABEL_25:
  if ((v2 & 4) != 0)
  {
    uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    if ((v10 & 0x80000000) != 0)
    {
      int v11 = 11;
    }
    else if (v10 >= 0x80)
    {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10) + 1;
      int v2 = *((_DWORD *)this + 20);
    }
    else
    {
      int v11 = 2;
    }
    v3 += v11;
    if ((v2 & 8) == 0)
    {
LABEL_27:
      if ((v2 & 0x10) == 0) {
        goto LABEL_47;
      }
      goto LABEL_41;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_27;
  }
  uint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
  if ((v12 & 0x80000000) != 0)
  {
    int v13 = 11;
  }
  else if (v12 >= 0x80)
  {
    int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12) + 1;
    int v2 = *((_DWORD *)this + 20);
  }
  else
  {
    int v13 = 2;
  }
  v3 += v13;
  if ((v2 & 0x10) != 0)
  {
LABEL_41:
    unint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
    if ((v14 & 0x80000000) != 0)
    {
      int v15 = 11;
    }
    else if (v14 >= 0x80)
    {
      int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14) + 1;
      int v2 = *((_DWORD *)this + 20);
    }
    else
    {
      int v15 = 2;
    }
    v3 += v15;
  }
LABEL_47:
  if ((v2 & 0x80) != 0) {
    v3 += 2;
  }
  if ((v2 & 0x100) != 0)
  {
LABEL_50:
    uint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 18);
    if ((v16 & 0x80000000) != 0)
    {
      int v17 = 11;
    }
    else if (v16 >= 0x80)
    {
      int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16) + 1;
    }
    else
    {
      int v17 = 2;
    }
    v3 += v17;
  }
LABEL_56:
  uint64_t result = (9 * (*((_DWORD *)this + 16) + *((_DWORD *)this + 10)) + v3);
  *((_DWORD *)this + 19) = result;
  return result;
}

void CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification *this, const CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::Swap(CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification *this, CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    uint64_t v3 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    LODWORD(v3) = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v3;
    LODWORD(v3) = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v3;
    LODWORD(v3) = *((_DWORD *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v3;
    uint64_t v4 = *((void *)this + 4);
    *((void *)this + 4) = *((void *)a2 + 4);
    uint64_t v5 = *((void *)a2 + 5);
    *((void *)a2 + 4) = v4;
    uint64_t v6 = *((void *)this + 5);
    *((void *)this + 5) = v5;
    *((void *)a2 + 5) = v6;
    uint64_t v7 = *((void *)this + 7);
    *((void *)this + 7) = *((void *)a2 + 7);
    double result = *((double *)a2 + 8);
    *((void *)a2 + 7) = v7;
    uint64_t v9 = *((void *)this + 8);
    *((double *)this + 8) = result;
    *((void *)a2 + 8) = v9;
    LOBYTE(v7) = *((unsigned char *)this + 52);
    *((unsigned char *)this + 52) = *((unsigned char *)a2 + 52);
    *((unsigned char *)a2 + 52) = v7;
    LODWORD(v7) = *((_DWORD *)this + 18);
    *((_DWORD *)this + 18) = *((_DWORD *)a2 + 18);
    *((_DWORD *)a2 + 18) = v7;
    LODWORD(v7) = *((_DWORD *)this + 20);
    *((_DWORD *)this + 20) = *((_DWORD *)a2 + 20);
    *((_DWORD *)a2 + 20) = v7;
    LODWORD(v7) = *((_DWORD *)this + 19);
    *((_DWORD *)this + 19) = *((_DWORD *)a2 + 19);
    *((_DWORD *)a2 + 19) = v7;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.AccessoryVehicleSpeedNotification");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState::SharedCtor(uint64_t this)
{
  *(_DWORD *)(this + 20) = 0;
  *(_DWORD *)(this + 24) = 0;
  *(void *)(this + 8) = 0;
  *(_WORD *)(this + 16) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState *CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState::ReachabilityState(CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState *this, const CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState *a2)
{
  *((_DWORD *)this + 5) = 0;
  *((_DWORD *)this + 6) = 0;
  *(void *)this = &unk_1EDD0CE60;
  *((void *)this + 1) = 0;
  *((_WORD *)this + 8) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState::MergeFrom(this, a2);
  return this;
}

void sub_18DF8590C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState *this, const CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 24);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 24))
    {
      unsigned int v5 = *((_DWORD *)a2 + 2);
      if (v5 >= 4 && v5 != 1001) {
        __assert_rtn("set_previous", "CoreNavigationCLPPrivateDataShared.pb.h", 21299, "::CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityType_IsValid(value)");
      }
      *((_DWORD *)this + 6) |= 1u;
      *((_DWORD *)this + 2) = v5;
      int v4 = *((_DWORD *)a2 + 6);
    }
    if ((v4 & 2) != 0)
    {
      unsigned int v6 = *((_DWORD *)a2 + 3);
      if (v6 >= 4 && v6 != 1001) {
        __assert_rtn("set_current", "CoreNavigationCLPPrivateDataShared.pb.h", 21322, "::CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityType_IsValid(value)");
      }
      *((_DWORD *)this + 6) |= 2u;
      *((_DWORD *)this + 3) = v6;
      int v4 = *((_DWORD *)a2 + 6);
    }
    if ((v4 & 4) != 0)
    {
      char v7 = *((unsigned char *)a2 + 16);
      *((_DWORD *)this + 6) |= 4u;
      *((unsigned char *)this + 16) = v7;
      int v4 = *((_DWORD *)a2 + 6);
    }
    if ((v4 & 8) != 0)
    {
      char v8 = *((unsigned char *)a2 + 17);
      *((_DWORD *)this + 6) |= 8u;
      *((unsigned char *)this + 17) = v8;
    }
  }
}

void sub_18DF85A64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState::~ReachabilityState(CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState *this)
{
  *(void *)this = &unk_1EDD0CE60;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState::~ReachabilityState(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState::New(CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 24))
  {
    *(_WORD *)(this + 16) = 0;
    *(void *)(this + 8) = 0;
  }
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (2)
  {
    int v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        unsigned int v22 = 0;
        char v7 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v7 < *((void *)a2 + 2) && (*v7 & 0x80000000) == 0)
        {
          unsigned int v8 = *v7;
          *((void *)a2 + 1) = v7 + 1;
LABEL_23:
          if (v8 < 4 || v8 == 1001)
          {
            *((_DWORD *)this + 6) |= 1u;
            *((_DWORD *)this + 2) = v8;
          }
          unint64_t v14 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
          if ((unint64_t)v14 < v9 && *v14 == 16)
          {
            uint64_t v10 = v14 + 1;
            *((void *)a2 + 1) = v10;
            goto LABEL_29;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v22);
        if (result)
        {
          unsigned int v8 = v22;
          goto LABEL_23;
        }
        break;
      case 2u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        uint64_t v10 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
LABEL_29:
        unsigned int v22 = 0;
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v22);
          if (!result) {
            return result;
          }
          unsigned int v15 = v22;
        }
        else
        {
          unsigned int v15 = *v10;
          *((void *)a2 + 1) = v10 + 1;
        }
        if (v15 < 4 || v15 == 1001)
        {
          *((_DWORD *)this + 6) |= 2u;
          *((_DWORD *)this + 3) = v15;
        }
        uint64_t v16 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
        if ((unint64_t)v16 >= v11 || *v16 != 24) {
          continue;
        }
        uint64_t v12 = v16 + 1;
        *((void *)a2 + 1) = v12;
LABEL_39:
        unsigned int v22 = 0;
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v22);
          if (!result) {
            return result;
          }
          unsigned int v17 = v22;
          int v18 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v11 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v17 = *v12;
          int v18 = v12 + 1;
          *((void *)a2 + 1) = v18;
        }
        *((unsigned char *)this + 16) = v17 != 0;
        *((_DWORD *)this + 6) |= 4u;
        if ((unint64_t)v18 >= v11 || *v18 != 32) {
          continue;
        }
        int v13 = v18 + 1;
        *((void *)a2 + 1) = v13;
LABEL_47:
        unsigned int v22 = 0;
        if ((unint64_t)v13 >= v11 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v22);
          if (!result) {
            return result;
          }
          unsigned int v19 = v22;
          int v20 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v11 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v19 = *v13;
          int v20 = (unsigned __int8 *)(v13 + 1);
          *((void *)a2 + 1) = v20;
        }
        *((unsigned char *)this + 17) = v19 != 0;
        *((_DWORD *)this + 6) |= 8u;
        if (v20 != (unsigned __int8 *)v11 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10)) {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      case 3u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        uint64_t v12 = (char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
        goto LABEL_39;
      case 4u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_17;
        }
        int v13 = (char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
        goto LABEL_47;
      default:
        int v6 = TagFallback & 7;
LABEL_17:
        if (v6 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 24);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 24);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 16), (uint64_t)a2, a4);
      if ((*(_DWORD *)(v5 + 24) & 8) == 0) {
        return this;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 12), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 24);
  if ((v6 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return this;
  }
LABEL_9:
  uint64_t v7 = *(unsigned __int8 *)(v5 + 17);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v7, (uint64_t)a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 24);
  if (!(_BYTE)v2)
  {
    uint64_t result = 0;
    goto LABEL_24;
  }
  if (*((unsigned char *)this + 24))
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
    if ((v5 & 0x80000000) != 0)
    {
      int v3 = 11;
      if ((v2 & 2) == 0) {
        goto LABEL_19;
      }
    }
    else if (v5 >= 0x80)
    {
      int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
      int v2 = *((_DWORD *)this + 6);
      if ((v2 & 2) == 0) {
        goto LABEL_19;
      }
    }
    else
    {
      int v3 = 2;
      if ((v2 & 2) == 0) {
        goto LABEL_19;
      }
    }
  }
  else
  {
    int v3 = 0;
    if ((*((unsigned char *)this + 24) & 2) == 0) {
      goto LABEL_19;
    }
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
  if ((v6 & 0x80000000) != 0)
  {
    int v7 = 11;
  }
  else if (v6 >= 0x80)
  {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6) + 1;
    int v2 = *((_DWORD *)this + 6);
  }
  else
  {
    int v7 = 2;
  }
  v3 += v7;
LABEL_19:
  unsigned int v8 = v3 + 2;
  if ((v2 & 4) == 0) {
    unsigned int v8 = v3;
  }
  if ((v2 & 8) != 0) {
    uint64_t result = v8 + 2;
  }
  else {
    uint64_t result = v8;
  }
LABEL_24:
  *((_DWORD *)this + 5) = result;
  return result;
}

void CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState *this, const CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState *a2)
{
  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState *)this)
  {
    int v2 = *(_DWORD *)(this + 8);
    *(_DWORD *)(this + 8) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    int v3 = *(_DWORD *)(this + 12);
    *(_DWORD *)(this + 12) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    LOBYTE(v3) = *(unsigned char *)(this + 16);
    *(unsigned char *)(this + 16) = *((unsigned char *)a2 + 16);
    *((unsigned char *)a2 + 16) = v3;
    LOBYTE(v3) = *(unsigned char *)(this + 17);
    *(unsigned char *)(this + 17) = *((unsigned char *)a2 + 17);
    *((unsigned char *)a2 + 17) = v3;
    int v4 = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v4;
    int v5 = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v5;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.ReachabilityState");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Battery::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0xBFF0000000000000;
  *(_WORD *)(this + 16) = 0;
  *(unsigned char *)(this + 18) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(void *)(this + 24) = 0;
  *(_DWORD *)(this + 20) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::Battery *CoreNavigation::CLP::LogEntry::PrivateData::Battery::Battery(CoreNavigation::CLP::LogEntry::PrivateData::Battery *this, const CoreNavigation::CLP::LogEntry::PrivateData::Battery *a2)
{
  *(void *)this = &unk_1EDD0EDC8;
  *((void *)this + 1) = 0xBFF0000000000000;
  *((_WORD *)this + 8) = 0;
  *((unsigned char *)this + 18) = 0;
  *((_DWORD *)this + 8) = 0;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 5) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::Battery::MergeFrom(this, a2);
  return this;
}

void sub_18DF8625C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::Battery::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::Battery *this, const CoreNavigation::CLP::LogEntry::PrivateData::Battery *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 32))
    {
      uint64_t v7 = *((void *)a2 + 1);
      *((_DWORD *)this + 8) |= 1u;
      *((void *)this + 1) = v7;
      int v4 = *((_DWORD *)a2 + 8);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_15;
      }
    }
    else if ((*((unsigned char *)a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    char v8 = *((unsigned char *)a2 + 16);
    *((_DWORD *)this + 8) |= 2u;
    *((unsigned char *)this + 16) = v8;
    int v4 = *((_DWORD *)a2 + 8);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_16;
    }
LABEL_15:
    char v9 = *((unsigned char *)a2 + 17);
    *((_DWORD *)this + 8) |= 4u;
    *((unsigned char *)this + 17) = v9;
    int v4 = *((_DWORD *)a2 + 8);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        goto LABEL_10;
      }
      goto LABEL_9;
    }
LABEL_16:
    unsigned int v10 = *((_DWORD *)a2 + 5);
    if (v10 >= 5) {
      __assert_rtn("set_charger_type", "CoreNavigationCLPPrivateDataShared.pb.h", 21459, "::CoreNavigation::CLP::LogEntry::PrivateData::BatteryChargerType_IsValid(value)");
    }
    *((_DWORD *)this + 8) |= 8u;
    *((_DWORD *)this + 5) = v10;
    int v4 = *((_DWORD *)a2 + 8);
    if ((v4 & 0x10) == 0) {
      goto LABEL_10;
    }
LABEL_9:
    char v5 = *((unsigned char *)a2 + 18);
    *((_DWORD *)this + 8) |= 0x10u;
    *((unsigned char *)this + 18) = v5;
    int v4 = *((_DWORD *)a2 + 8);
LABEL_10:
    if ((v4 & 0x20) != 0)
    {
      int v6 = *((_DWORD *)a2 + 6);
      *((_DWORD *)this + 8) |= 0x20u;
      *((_DWORD *)this + 6) = v6;
    }
  }
}

void sub_18DF863C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::Battery::~Battery(CoreNavigation::CLP::LogEntry::PrivateData::Battery *this)
{
  *(void *)this = &unk_1EDD0EDC8;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::Battery::~Battery(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Battery::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::Battery *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::Battery::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Battery::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 28) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::Battery::New(CoreNavigation::CLP::LogEntry::PrivateData::Battery *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Battery::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 32))
  {
    *(void *)(this + 8) = 0xBFF0000000000000;
    *(_WORD *)(this + 16) = 0;
    *(unsigned char *)(this + 18) = 0;
    *(_DWORD *)(this + 20) = 0;
    *(_DWORD *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 32) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Battery::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::Battery *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (2)
  {
    int v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_25;
        }
        *(void *)int v26 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v26) & 1) == 0)return 0; {
        *((void *)this + 1) = *(void *)v26;
        }
        *((_DWORD *)this + 8) |= 1u;
        char v8 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v7 = *((void *)a2 + 2);
        if ((unint64_t)v8 >= v7 || *v8 != 16) {
          continue;
        }
        char v9 = v8 + 1;
        *((void *)a2 + 1) = v9;
        goto LABEL_15;
      case 2u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        char v9 = (char *)*((void *)a2 + 1);
        unint64_t v7 = *((void *)a2 + 2);
LABEL_15:
        v26[0] = 0;
        if ((unint64_t)v9 >= v7 || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v26);
          if (!result) {
            return result;
          }
          unsigned int v10 = v26[0];
          unint64_t v11 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v7 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v10 = *v9;
          unint64_t v11 = v9 + 1;
          *((void *)a2 + 1) = v11;
        }
        *((unsigned char *)this + 16) = v10 != 0;
        *((_DWORD *)this + 8) |= 2u;
        if ((unint64_t)v11 >= v7 || *v11 != 24) {
          continue;
        }
        uint64_t v12 = v11 + 1;
        *((void *)a2 + 1) = v12;
LABEL_34:
        v26[0] = 0;
        if ((unint64_t)v12 >= v7 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v26);
          if (!result) {
            return result;
          }
          unsigned int v18 = v26[0];
          unsigned int v19 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v7 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v18 = *v12;
          unsigned int v19 = v12 + 1;
          *((void *)a2 + 1) = v19;
        }
        *((unsigned char *)this + 17) = v18 != 0;
        *((_DWORD *)this + 8) |= 4u;
        if ((unint64_t)v19 >= v7 || *v19 != 32) {
          continue;
        }
        int v13 = v19 + 1;
        *((void *)a2 + 1) = v13;
LABEL_42:
        v26[0] = 0;
        if ((unint64_t)v13 >= v7 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v26);
          if (!result) {
            return result;
          }
          unsigned int v20 = v26[0];
        }
        else
        {
          unsigned int v20 = *v13;
          *((void *)a2 + 1) = v13 + 1;
        }
        if (v20 <= 4)
        {
          *((_DWORD *)this + 8) |= 8u;
          *((_DWORD *)this + 5) = v20;
        }
        int v21 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        if ((unint64_t)v21 >= v14 || *v21 != 40) {
          continue;
        }
        unsigned int v15 = v21 + 1;
        *((void *)a2 + 1) = v15;
LABEL_52:
        v26[0] = 0;
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v26);
          if (!result) {
            return result;
          }
          unsigned int v22 = v26[0];
          BOOL v23 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v14 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v22 = *v15;
          BOOL v23 = v15 + 1;
          *((void *)a2 + 1) = v23;
        }
        *((unsigned char *)this + 18) = v22 != 0;
        *((_DWORD *)this + 8) |= 0x10u;
        if ((unint64_t)v23 >= v14 || *v23 != 48) {
          continue;
        }
        uint64_t v16 = v23 + 1;
        *((void *)a2 + 1) = v16;
LABEL_60:
        v26[0] = 0;
        if ((unint64_t)v16 >= v14 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v26);
          if (!result) {
            return result;
          }
          unsigned int v24 = v26[0];
          int v25 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v14 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v24 = *v16;
          int v25 = (unsigned __int8 *)(v16 + 1);
          *((void *)a2 + 1) = v25;
        }
        *((_DWORD *)this + 6) = v24;
        *((_DWORD *)this + 8) |= 0x20u;
        if (v25 != (unsigned __int8 *)v14 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10)) {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        break;
      case 3u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        uint64_t v12 = (char *)*((void *)a2 + 1);
        unint64_t v7 = *((void *)a2 + 2);
        goto LABEL_34;
      case 4u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        int v13 = (char *)*((void *)a2 + 1);
        unint64_t v7 = *((void *)a2 + 2);
        goto LABEL_42;
      case 5u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        unsigned int v15 = (char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        goto LABEL_52;
      case 6u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        uint64_t v16 = (char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        goto LABEL_60;
      default:
        int v6 = TagFallback & 7;
LABEL_25:
        if (v6 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Battery::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 32);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
    int v6 = *(_DWORD *)(v5 + 32);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 16), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_11;
  }
LABEL_10:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 17), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
LABEL_12:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned __int8 *)(v5 + 18), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 32) & 0x20) == 0) {
      return this;
    }
    goto LABEL_13;
  }
LABEL_11:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 20), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 0x10) != 0) {
    goto LABEL_12;
  }
LABEL_6:
  if ((v6 & 0x20) == 0) {
    return this;
  }
LABEL_13:
  uint64_t v7 = *(unsigned int *)(v5 + 24);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v7, (uint64_t)a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Battery::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::Battery *this)
{
  int v2 = *((unsigned __int8 *)this + 32);
  if (*((unsigned char *)this + 32))
  {
    if ((v2 & 4) != 0) {
      LODWORD(v3) = ((v2 << 31 >> 31) & 9 | v2 & 2) + 2;
    }
    else {
      LODWORD(v3) = (v2 << 31 >> 31) & 9 | v2 & 2;
    }
    if ((v2 & 8) != 0)
    {
      int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
      if ((v4 & 0x80000000) != 0)
      {
        int v5 = 11;
      }
      else if (v4 >= 0x80)
      {
        int v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
        int v2 = *((_DWORD *)this + 8);
      }
      else
      {
        int v5 = 2;
      }
      LODWORD(v3) = v5 + v3;
    }
    if ((v2 & 0x10) != 0) {
      uint64_t v3 = (v3 + 2);
    }
    else {
      uint64_t v3 = v3;
    }
    if ((v2 & 0x20) != 0)
    {
      int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
      if ((v6 & 0x80000000) != 0)
      {
        int v7 = 11;
      }
      else if (v6 >= 0x80)
      {
        int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6) + 1;
      }
      else
      {
        int v7 = 2;
      }
      uint64_t v3 = (v7 + v3);
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  *((_DWORD *)this + 7) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::PrivateData::Battery::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::Battery *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::Battery::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::Battery::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::Battery *this, const CoreNavigation::CLP::LogEntry::PrivateData::Battery *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::Battery *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::Battery::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Battery::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::Battery *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::Battery::Swap(CoreNavigation::CLP::LogEntry::PrivateData::Battery *this, CoreNavigation::CLP::LogEntry::PrivateData::Battery *a2)
{
  if (a2 != this)
  {
    double result = *((double *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((double *)a2 + 1) = result;
    char v3 = *((unsigned char *)this + 16);
    *((unsigned char *)this + 16) = *((unsigned char *)a2 + 16);
    *((unsigned char *)a2 + 16) = v3;
    char v4 = *((unsigned char *)this + 17);
    *((unsigned char *)this + 17) = *((unsigned char *)a2 + 17);
    *((unsigned char *)a2 + 17) = v4;
    int v5 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v5;
    LOBYTE(v5) = *((unsigned char *)this + 18);
    *((unsigned char *)this + 18) = *((unsigned char *)a2 + 18);
    *((unsigned char *)a2 + 18) = v5;
    int v6 = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v6;
    int v7 = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v7;
    int v8 = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v8;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::Battery::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.Battery");
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus_NotificationType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 0x14;
}

double CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus *this)
{
  *((void *)this + 7) = 0;
  *((_DWORD *)this + 13) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 34) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus *CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::DeviceStatus(CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus *this, const CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus *a2)
{
  *(void *)this = &unk_1EDD0B8D0;
  *((void *)this + 7) = 0;
  *((_DWORD *)this + 13) = 0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 34) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::MergeFrom(this, a2);
  return this;
}

void sub_18DF86D00(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus *this, const CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v21);
  }
  int v4 = *((_DWORD *)a2 + 15);
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    *((_DWORD *)this + 15) |= 1u;
    int v7 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
    if (!v7) {
      operator new();
    }
    int v8 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)a2 + 1);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      int v8 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::default_instance_
                                                                           + 8);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v7, v8);
    int v4 = *((_DWORD *)a2 + 15);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_27;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  int v9 = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 15) |= 2u;
  *((_DWORD *)this + 4) = v9;
  int v4 = *((_DWORD *)a2 + 15);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_29;
  }
LABEL_27:
  unsigned int v10 = *((_DWORD *)a2 + 5);
  if (v10 >= 0x14) {
    __assert_rtn("set_notification_data", "CoreNavigationCLPPrivateDataShared.pb.h", 21594, "::CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus_NotificationType_IsValid(value)");
  }
  *((_DWORD *)this + 15) |= 4u;
  *((_DWORD *)this + 5) = v10;
  int v4 = *((_DWORD *)a2 + 15);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_34;
  }
LABEL_29:
  *((_DWORD *)this + 15) |= 8u;
  unint64_t v11 = (CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState *)*((void *)this + 3);
  if (!v11) {
    operator new();
  }
  uint64_t v12 = (const CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState *)*((void *)a2 + 3);
  if (!v12)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    uint64_t v12 = *(const CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState **)(CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::default_instance_
                                                                                  + 24);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState::MergeFrom(v11, v12);
  int v4 = *((_DWORD *)a2 + 15);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_39:
    char v15 = *((unsigned char *)a2 + 40);
    *((_DWORD *)this + 15) |= 0x20u;
    *((unsigned char *)this + 40) = v15;
    int v4 = *((_DWORD *)a2 + 15);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_40;
  }
LABEL_34:
  *((_DWORD *)this + 15) |= 0x10u;
  int v13 = (CoreNavigation::CLP::LogEntry::PrivateData::Battery *)*((void *)this + 4);
  if (!v13) {
    operator new();
  }
  unint64_t v14 = (const CoreNavigation::CLP::LogEntry::PrivateData::Battery *)*((void *)a2 + 4);
  if (!v14)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    unint64_t v14 = *(const CoreNavigation::CLP::LogEntry::PrivateData::Battery **)(CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::default_instance_
                                                                        + 32);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::Battery::MergeFrom(v13, v14);
  int v4 = *((_DWORD *)a2 + 15);
  if ((v4 & 0x20) != 0) {
    goto LABEL_39;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_40:
  char v16 = *((unsigned char *)a2 + 41);
  *((_DWORD *)this + 15) |= 0x40u;
  *((unsigned char *)this + 41) = v16;
  int v4 = *((_DWORD *)a2 + 15);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    char v5 = *((unsigned char *)a2 + 42);
    *((_DWORD *)this + 15) |= 0x80u;
    *((unsigned char *)this + 42) = v5;
    int v4 = *((_DWORD *)a2 + 15);
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0) {
    return;
  }
  if ((v4 & 0x100) != 0)
  {
    char v17 = *((unsigned char *)a2 + 43);
    *((_DWORD *)this + 15) |= 0x100u;
    *((unsigned char *)this + 43) = v17;
    int v4 = *((_DWORD *)a2 + 15);
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0) {
        goto LABEL_17;
      }
      goto LABEL_44;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  char v18 = *((unsigned char *)a2 + 48);
  *((_DWORD *)this + 15) |= 0x200u;
  *((unsigned char *)this + 48) = v18;
  int v4 = *((_DWORD *)a2 + 15);
  if ((v4 & 0x400) == 0)
  {
LABEL_17:
    if ((v4 & 0x800) == 0) {
      goto LABEL_18;
    }
    goto LABEL_45;
  }
LABEL_44:
  int v19 = *((_DWORD *)a2 + 11);
  *((_DWORD *)this + 15) |= 0x400u;
  *((_DWORD *)this + 11) = v19;
  int v4 = *((_DWORD *)a2 + 15);
  if ((v4 & 0x800) == 0)
  {
LABEL_18:
    if ((v4 & 0x1000) == 0) {
      return;
    }
    goto LABEL_19;
  }
LABEL_45:
  int v20 = *((_DWORD *)a2 + 13);
  *((_DWORD *)this + 15) |= 0x800u;
  *((_DWORD *)this + 13) = v20;
  if ((*((_DWORD *)a2 + 15) & 0x1000) != 0)
  {
LABEL_19:
    char v6 = *((unsigned char *)a2 + 49);
    *((_DWORD *)this + 15) |= 0x1000u;
    *((unsigned char *)this + 49) = v6;
  }
}

void sub_18DF870A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::~DeviceStatus(CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus *this)
{
  *(void *)this = &unk_1EDD0B8D0;
  CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::~DeviceStatus(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus *)CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 3);
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = *((void *)this + 4);
    if (v4)
    {
      char v5 = *(void (**)(void))(*(void *)v4 + 8);
      v5();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 56) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::New(CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 60);
  if ((_BYTE)v1)
  {
    if (v1)
    {
      uint64_t v2 = *(void *)(this + 8);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 36))
        {
          *(void *)(v2 + 8) = 0;
          *(void *)(v2 + 16) = 0;
          *(void *)(v2 + 24) = 0;
        }
        *(_DWORD *)(v2 + 36) = 0;
        int v1 = *(_DWORD *)(this + 60);
      }
    }
    *(void *)(this + 16) = 0;
    if ((v1 & 8) != 0)
    {
      uint64_t v3 = *(void *)(this + 24);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 24))
        {
          *(_WORD *)(v3 + 16) = 0;
          *(void *)(v3 + 8) = 0;
        }
        *(_DWORD *)(v3 + 24) = 0;
        int v1 = *(_DWORD *)(this + 60);
      }
    }
    if ((v1 & 0x10) != 0)
    {
      uint64_t v4 = *(void *)(this + 32);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 32))
        {
          *(void *)(v4 + 8) = 0xBFF0000000000000;
          *(_WORD *)(v4 + 16) = 0;
          *(unsigned char *)(v4 + 18) = 0;
          *(_DWORD *)(v4 + 20) = 0;
          *(_DWORD *)(v4 + 24) = 0;
        }
        *(_DWORD *)(v4 + 32) = 0;
        int v1 = *(_DWORD *)(this + 60);
      }
    }
    *(_WORD *)(this + 40) = 0;
    *(unsigned char *)(this + 42) = 0;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_DWORD *)(this + 52) = 0;
    *(_DWORD *)(this + 43) = 0;
    *(_DWORD *)(this + 46) = 0;
  }
  *(_DWORD *)(this + 60) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (2)
  {
    uint64_t v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_37;
        }
        *((_DWORD *)this + 15) |= 1u;
        int v7 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
        if (!v7) {
          operator new();
        }
        unsigned int v62 = 0;
        int v8 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v62))return 0; {
        }
          }
        else
        {
          unsigned int v62 = *v8;
          *((void *)a2 + 1) = v8 + 1;
        }
        int v21 = *((_DWORD *)a2 + 14);
        int v22 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v21 + 1;
        if (v21 >= v22) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream(v7, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v23 = *((_DWORD *)a2 + 14);
        BOOL v24 = __OFSUB__(v23, 1);
        int v25 = v23 - 1;
        if (v25 < 0 == v24) {
          *((_DWORD *)a2 + 14) = v25;
        }
        int v26 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        if ((unint64_t)v26 >= v9 || *v26 != 16) {
          continue;
        }
        unsigned int v10 = v26 + 1;
        *((void *)a2 + 1) = v10;
        goto LABEL_50;
      case 2u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_37;
        }
        unsigned int v10 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
LABEL_50:
        unsigned int v62 = 0;
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v62);
          if (!result) {
            return result;
          }
          unsigned int v27 = v62;
          int v28 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v27 = *v10;
          int v28 = v10 + 1;
          *((void *)a2 + 1) = v28;
        }
        *((_DWORD *)this + 4) = v27;
        *((_DWORD *)this + 15) |= 2u;
        if ((unint64_t)v28 >= v9 || *v28 != 24) {
          continue;
        }
        unint64_t v11 = v28 + 1;
        *((void *)a2 + 1) = v11;
LABEL_58:
        unsigned int v62 = 0;
        if ((unint64_t)v11 >= v9 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v62);
          if (!result) {
            return result;
          }
          unsigned int v30 = v62;
        }
        else
        {
          unsigned int v30 = *v11;
          *((void *)a2 + 1) = v11 + 1;
        }
        if (v30 <= 0x13)
        {
          *((_DWORD *)this + 15) |= 4u;
          *((_DWORD *)this + 5) = v30;
        }
        int v31 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v31 >= *((void *)a2 + 2) || *v31 != 34) {
          continue;
        }
        *((void *)a2 + 1) = v31 + 1;
LABEL_68:
        *((_DWORD *)this + 15) |= 8u;
        int v32 = (CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState *)*((void *)this + 3);
        if (!v32) {
          operator new();
        }
        unsigned int v62 = 0;
        unsigned int v33 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v33 >= *((void *)a2 + 2) || *v33 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v62))return 0; {
        }
          }
        else
        {
          unsigned int v62 = *v33;
          *((void *)a2 + 1) = v33 + 1;
        }
        int v34 = *((_DWORD *)a2 + 14);
        int v35 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v34 + 1;
        if (v34 >= v35) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState::MergePartialFromCodedStream(v32, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v36 = *((_DWORD *)a2 + 14);
        BOOL v24 = __OFSUB__(v36, 1);
        int v37 = v36 - 1;
        if (v37 < 0 == v24) {
          *((_DWORD *)a2 + 14) = v37;
        }
        int v38 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v38 >= *((void *)a2 + 2) || *v38 != 42) {
          continue;
        }
        *((void *)a2 + 1) = v38 + 1;
LABEL_82:
        *((_DWORD *)this + 15) |= 0x10u;
        uint64_t v39 = (CoreNavigation::CLP::LogEntry::PrivateData::Battery *)*((void *)this + 4);
        if (!v39) {
          operator new();
        }
        unsigned int v62 = 0;
        int v40 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v40 >= *((void *)a2 + 2) || *v40 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v62))return 0; {
        }
          }
        else
        {
          unsigned int v62 = *v40;
          *((void *)a2 + 1) = v40 + 1;
        }
        int v41 = *((_DWORD *)a2 + 14);
        int v42 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v41 + 1;
        if (v41 < v42)
        {
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (CoreNavigation::CLP::LogEntry::PrivateData::Battery::MergePartialFromCodedStream(v39, a2))
          {
            if (*((unsigned char *)a2 + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
              int v43 = *((_DWORD *)a2 + 14);
              BOOL v24 = __OFSUB__(v43, 1);
              int v44 = v43 - 1;
              if (v44 < 0 == v24) {
                *((_DWORD *)a2 + 14) = v44;
              }
              signed int v45 = (unsigned char *)*((void *)a2 + 1);
              unint64_t v12 = *((void *)a2 + 2);
              if ((unint64_t)v45 < v12 && *v45 == 48)
              {
                int v13 = v45 + 1;
                *((void *)a2 + 1) = v13;
LABEL_96:
                unsigned int v62 = 0;
                if ((unint64_t)v13 >= v12 || *v13 < 0)
                {
                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v62);
                  if (!result) {
                    return result;
                  }
                  unsigned int v46 = v62;
                  int v47 = (unsigned char *)*((void *)a2 + 1);
                  unint64_t v12 = *((void *)a2 + 2);
                }
                else
                {
                  unsigned int v46 = *v13;
                  int v47 = v13 + 1;
                  *((void *)a2 + 1) = v47;
                }
                *((unsigned char *)this + 40) = v46 != 0;
                *((_DWORD *)this + 15) |= 0x20u;
                if ((unint64_t)v47 < v12 && *v47 == 56)
                {
                  unint64_t v14 = v47 + 1;
                  *((void *)a2 + 1) = v14;
LABEL_104:
                  unsigned int v62 = 0;
                  if ((unint64_t)v14 >= v12 || *v14 < 0)
                  {
                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v62);
                    if (!result) {
                      return result;
                    }
                    unsigned int v48 = v62;
                    int v49 = (unsigned char *)*((void *)a2 + 1);
                    unint64_t v12 = *((void *)a2 + 2);
                  }
                  else
                  {
                    unsigned int v48 = *v14;
                    int v49 = v14 + 1;
                    *((void *)a2 + 1) = v49;
                  }
                  *((unsigned char *)this + 41) = v48 != 0;
                  *((_DWORD *)this + 15) |= 0x40u;
                  if ((unint64_t)v49 < v12 && *v49 == 64)
                  {
                    char v15 = v49 + 1;
                    *((void *)a2 + 1) = v15;
LABEL_112:
                    unsigned int v62 = 0;
                    if ((unint64_t)v15 >= v12 || *v15 < 0)
                    {
                      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v62);
                      if (!result) {
                        return result;
                      }
                      unsigned int v50 = v62;
                      int v51 = (unsigned char *)*((void *)a2 + 1);
                      unint64_t v12 = *((void *)a2 + 2);
                    }
                    else
                    {
                      unsigned int v50 = *v15;
                      int v51 = v15 + 1;
                      *((void *)a2 + 1) = v51;
                    }
                    *((unsigned char *)this + 42) = v50 != 0;
                    *((_DWORD *)this + 15) |= 0x80u;
                    if ((unint64_t)v51 < v12 && *v51 == 72)
                    {
                      char v16 = v51 + 1;
                      *((void *)a2 + 1) = v16;
LABEL_120:
                      unsigned int v62 = 0;
                      if ((unint64_t)v16 >= v12 || *v16 < 0)
                      {
                        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v62);
                        if (!result) {
                          return result;
                        }
                        unsigned int v52 = v62;
                        int v53 = (unsigned char *)*((void *)a2 + 1);
                        unint64_t v12 = *((void *)a2 + 2);
                      }
                      else
                      {
                        unsigned int v52 = *v16;
                        int v53 = v16 + 1;
                        *((void *)a2 + 1) = v53;
                      }
                      *((unsigned char *)this + 43) = v52 != 0;
                      *((_DWORD *)this + 15) |= 0x100u;
                      if ((unint64_t)v53 < v12 && *v53 == 80)
                      {
                        char v17 = v53 + 1;
                        *((void *)a2 + 1) = v17;
LABEL_128:
                        unsigned int v62 = 0;
                        if ((unint64_t)v17 >= v12 || *v17 < 0)
                        {
                          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v62);
                          if (!result) {
                            return result;
                          }
                          unsigned int v54 = v62;
                          int v55 = (unsigned char *)*((void *)a2 + 1);
                          unint64_t v12 = *((void *)a2 + 2);
                        }
                        else
                        {
                          unsigned int v54 = *v17;
                          int v55 = v17 + 1;
                          *((void *)a2 + 1) = v55;
                        }
                        *((unsigned char *)this + 48) = v54 != 0;
                        *((_DWORD *)this + 15) |= 0x200u;
                        if ((unint64_t)v55 < v12 && *v55 == 88)
                        {
                          char v18 = v55 + 1;
                          *((void *)a2 + 1) = v18;
LABEL_136:
                          unsigned int v62 = 0;
                          if ((unint64_t)v18 >= v12 || *v18 < 0)
                          {
                            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v62);
                            if (!result) {
                              return result;
                            }
                            unsigned int v56 = v62;
                            int v57 = (unsigned char *)*((void *)a2 + 1);
                            unint64_t v12 = *((void *)a2 + 2);
                          }
                          else
                          {
                            unsigned int v56 = *v18;
                            int v57 = v18 + 1;
                            *((void *)a2 + 1) = v57;
                          }
                          *((_DWORD *)this + 11) = v56;
                          *((_DWORD *)this + 15) |= 0x400u;
                          if ((unint64_t)v57 < v12 && *v57 == 96)
                          {
                            int v19 = v57 + 1;
                            *((void *)a2 + 1) = v19;
LABEL_144:
                            unsigned int v62 = 0;
                            if ((unint64_t)v19 >= v12 || *v19 < 0)
                            {
                              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v62);
                              if (!result) {
                                return result;
                              }
                              unsigned int v58 = v62;
                              uint64_t v59 = (unsigned char *)*((void *)a2 + 1);
                              unint64_t v12 = *((void *)a2 + 2);
                            }
                            else
                            {
                              unsigned int v58 = *v19;
                              uint64_t v59 = v19 + 1;
                              *((void *)a2 + 1) = v59;
                            }
                            *((_DWORD *)this + 13) = v58;
                            *((_DWORD *)this + 15) |= 0x800u;
                            if ((unint64_t)v59 < v12 && *v59 == 104)
                            {
                              int v20 = v59 + 1;
                              *((void *)a2 + 1) = v20;
LABEL_152:
                              unsigned int v62 = 0;
                              if ((unint64_t)v20 >= v12 || *v20 < 0)
                              {
                                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v62);
                                if (!result) {
                                  return result;
                                }
                                unsigned int v60 = v62;
                                unsigned int v61 = (unsigned __int8 *)*((void *)a2 + 1);
                                unint64_t v12 = *((void *)a2 + 2);
                              }
                              else
                              {
                                unsigned int v60 = *v20;
                                unsigned int v61 = (unsigned __int8 *)(v20 + 1);
                                *((void *)a2 + 1) = v61;
                              }
                              *((unsigned char *)this + 49) = v60 != 0;
                              *((_DWORD *)this + 15) |= 0x1000u;
                              if (v61 == (unsigned __int8 *)v12
                                && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                              {
                                *((_DWORD *)a2 + 8) = 0;
                                uint64_t result = 1;
                                *((unsigned char *)a2 + 36) = 1;
                                return result;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_37;
        }
        unint64_t v11 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        goto LABEL_58;
      case 4u:
        int v6 = TagFallback & 7;
        if (v6 == 2) {
          goto LABEL_68;
        }
        goto LABEL_37;
      case 5u:
        int v6 = TagFallback & 7;
        if (v6 == 2) {
          goto LABEL_82;
        }
        goto LABEL_37;
      case 6u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_37;
        }
        int v13 = (char *)*((void *)a2 + 1);
        unint64_t v12 = *((void *)a2 + 2);
        goto LABEL_96;
      case 7u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_37;
        }
        unint64_t v14 = (char *)*((void *)a2 + 1);
        unint64_t v12 = *((void *)a2 + 2);
        goto LABEL_104;
      case 8u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_37;
        }
        char v15 = (char *)*((void *)a2 + 1);
        unint64_t v12 = *((void *)a2 + 2);
        goto LABEL_112;
      case 9u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_37;
        }
        char v16 = (char *)*((void *)a2 + 1);
        unint64_t v12 = *((void *)a2 + 2);
        goto LABEL_120;
      case 0xAu:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_37;
        }
        char v17 = (char *)*((void *)a2 + 1);
        unint64_t v12 = *((void *)a2 + 2);
        goto LABEL_128;
      case 0xBu:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_37;
        }
        char v18 = (char *)*((void *)a2 + 1);
        unint64_t v12 = *((void *)a2 + 2);
        goto LABEL_136;
      case 0xCu:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_37;
        }
        int v19 = (char *)*((void *)a2 + 1);
        unint64_t v12 = *((void *)a2 + 2);
        goto LABEL_144;
      case 0xDu:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_37;
        }
        int v20 = (char *)*((void *)a2 + 1);
        unint64_t v12 = *((void *)a2 + 2);
        goto LABEL_152;
      default:
        int v6 = TagFallback & 7;
LABEL_37:
        if (v6 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 60);
  if (v6)
  {
    uint64_t v7 = *(void *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 60);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_19;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 16), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_20;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 20), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_23;
  }
LABEL_20:
  uint64_t v8 = *(void *)(v5 + 24);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v8 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::default_instance_ + 24);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_26;
  }
LABEL_23:
  uint64_t v9 = *(void *)(v5 + 32);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v9 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::default_instance_ + 32);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v9, a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_27;
  }
LABEL_26:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned __int8 *)(v5 + 40), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_28;
  }
LABEL_27:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned __int8 *)(v5 + 41), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_29;
  }
LABEL_28:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned __int8 *)(v5 + 42), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_30;
  }
LABEL_29:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned __int8 *)(v5 + 43), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_31;
  }
LABEL_30:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned __int8 *)(v5 + 48), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
LABEL_32:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(unsigned int *)(v5 + 52), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 60) & 0x1000) == 0) {
      return this;
    }
    goto LABEL_33;
  }
LABEL_31:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(unsigned int *)(v5 + 44), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x800) != 0) {
    goto LABEL_32;
  }
LABEL_13:
  if ((v6 & 0x1000) == 0) {
    return this;
  }
LABEL_33:
  uint64_t v10 = *(unsigned __int8 *)(v5 + 49);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, v10, (uint64_t)a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus *this)
{
  int v2 = *((_DWORD *)this + 15);
  if (!(_BYTE)v2)
  {
    uint64_t result = 0;
    goto LABEL_50;
  }
  if ((v2 & 1) == 0)
  {
    int v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_21;
    }
    goto LABEL_15;
  }
  uint64_t v5 = *((void *)this + 1);
  if (!v5)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    uint64_t v5 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::default_instance_ + 8);
  }
  int v6 = *(unsigned __int8 *)(v5 + 36);
  if (*(unsigned char *)(v5 + 36))
  {
    int v7 = (v6 << 31 >> 31) & 9;
    if ((v6 & 2) != 0) {
      v7 += 9;
    }
    if ((v6 & 4) != 0) {
      int v6 = v7 + 9;
    }
    else {
      int v6 = v7;
    }
  }
  *(_DWORD *)(v5 + 32) = v6;
  int v3 = v6 + 2;
  int v2 = *((_DWORD *)this + 15);
  if ((v2 & 2) != 0)
  {
LABEL_15:
    uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if ((v8 & 0x80000000) != 0)
    {
      int v9 = 10;
    }
    else if (v8 >= 0x80)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
      int v2 = *((_DWORD *)this + 15);
    }
    else
    {
      int v9 = 1;
    }
    v3 += v9 + 1;
  }
LABEL_21:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_23;
    }
LABEL_31:
    unint64_t v12 = (CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState *)*((void *)this + 3);
    if (!v12)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(0);
      unint64_t v12 = *(CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState **)(CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::default_instance_
                                                                              + 24);
    }
    int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::ReachabilityState::ByteSize(v12);
    int v14 = (int)v13;
    if (v13 >= 0x80) {
      int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
    }
    else {
      int v15 = 1;
    }
    v3 += v14 + v15 + 1;
    int v2 = *((_DWORD *)this + 15);
    if ((v2 & 0x10) == 0) {
      goto LABEL_43;
    }
    goto LABEL_37;
  }
  uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
  if ((v10 & 0x80000000) != 0)
  {
    int v11 = 11;
  }
  else if (v10 >= 0x80)
  {
    int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10) + 1;
    int v2 = *((_DWORD *)this + 15);
  }
  else
  {
    int v11 = 2;
  }
  v3 += v11;
  if ((v2 & 8) != 0) {
    goto LABEL_31;
  }
LABEL_23:
  if ((v2 & 0x10) != 0)
  {
LABEL_37:
    char v16 = (CoreNavigation::CLP::LogEntry::PrivateData::Battery *)*((void *)this + 4);
    if (!v16)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(0);
      char v16 = *(CoreNavigation::CLP::LogEntry::PrivateData::Battery **)(CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::default_instance_
                                                                    + 32);
    }
    char v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::Battery::ByteSize(v16);
    int v18 = (int)v17;
    if (v17 >= 0x80) {
      int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17);
    }
    else {
      int v19 = 1;
    }
    v3 += v18 + v19 + 1;
    int v2 = *((_DWORD *)this + 15);
  }
LABEL_43:
  unsigned int v20 = v3 + 2;
  if ((v2 & 0x20) == 0) {
    unsigned int v20 = v3;
  }
  if ((v2 & 0x40) != 0) {
    v20 += 2;
  }
  if ((v2 & 0x80) != 0) {
    uint64_t result = v20 + 2;
  }
  else {
    uint64_t result = v20;
  }
LABEL_50:
  if ((v2 & 0xFF00) != 0)
  {
    unsigned int v21 = result + 2;
    if ((v2 & 0x100) == 0) {
      unsigned int v21 = result;
    }
    if ((v2 & 0x200) != 0) {
      unsigned int v22 = v21 + 2;
    }
    else {
      unsigned int v22 = v21;
    }
    if ((v2 & 0x400) != 0)
    {
      int v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
      if ((v23 & 0x80000000) != 0)
      {
        int v24 = 11;
      }
      else if (v23 >= 0x80)
      {
        int v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v23) + 1;
        int v2 = *((_DWORD *)this + 15);
      }
      else
      {
        int v24 = 2;
      }
      v22 += v24;
    }
    if ((v2 & 0x800) != 0)
    {
      int v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
      if ((v25 & 0x80000000) != 0)
      {
        int v26 = 11;
      }
      else if (v25 >= 0x80)
      {
        int v26 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25) + 1;
        int v2 = *((_DWORD *)this + 15);
      }
      else
      {
        int v26 = 2;
      }
      v22 += v26;
    }
    if ((v2 & 0x1000) != 0) {
      uint64_t result = v22 + 2;
    }
    else {
      uint64_t result = v22;
    }
  }
  *((_DWORD *)this + 14) = result;
  return result;
}

void CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus *this, const CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus *a2)
{
  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v2;
    uint64_t v3 = *(void *)(this + 24);
    *(void *)(this + 24) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v3;
    uint64_t v4 = *(void *)(this + 32);
    *(void *)(this + 32) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v4;
    LOBYTE(v4) = *(unsigned char *)(this + 40);
    *(unsigned char *)(this + 40) = *((unsigned char *)a2 + 40);
    *((unsigned char *)a2 + 40) = v4;
    LOBYTE(v4) = *(unsigned char *)(this + 41);
    *(unsigned char *)(this + 41) = *((unsigned char *)a2 + 41);
    *((unsigned char *)a2 + 41) = v4;
    LOBYTE(v4) = *(unsigned char *)(this + 42);
    *(unsigned char *)(this + 42) = *((unsigned char *)a2 + 42);
    *((unsigned char *)a2 + 42) = v4;
    LOBYTE(v4) = *(unsigned char *)(this + 43);
    *(unsigned char *)(this + 43) = *((unsigned char *)a2 + 43);
    *((unsigned char *)a2 + 43) = v4;
    LOBYTE(v4) = *(unsigned char *)(this + 48);
    *(unsigned char *)(this + 48) = *((unsigned char *)a2 + 48);
    *((unsigned char *)a2 + 48) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 44);
    *(_DWORD *)(this + 44) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 52);
    *(_DWORD *)(this + 52) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v4;
    LOBYTE(v4) = *(unsigned char *)(this + 49);
    *(unsigned char *)(this + 49) = *((unsigned char *)a2 + 49);
    *((unsigned char *)a2 + 49) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 60);
    *(_DWORD *)(this + 60) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 56);
    *(_DWORD *)(this + 56) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v4;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.DeviceStatus");
}

double CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment *this)
{
  *((void *)this + 1) = 0;
  double result = NAN;
  *((_OWORD *)this + 1) = xmmword_18E1F3630;
  *((_DWORD *)this + 8) = 0;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment *CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::SignalEnvironment(CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment *this, const CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment *a2)
{
  *(void *)this = &unk_1EDD0CF50;
  *((void *)this + 1) = 0;
  *((_OWORD *)this + 1) = xmmword_18E1F3630;
  *((_DWORD *)this + 8) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::MergeFrom(this, a2);
  return this;
}

void sub_18DF883C8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment *this, const CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 32))
    {
      *((_DWORD *)this + 8) |= 1u;
      uint64_t v5 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
      if (!v5) {
        operator new();
      }
      int v6 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)a2 + 1);
      if (!v6)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
        int v6 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::default_instance_
                                                                             + 8);
      }
      CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v5, v6);
      int v4 = *((_DWORD *)a2 + 8);
    }
    if ((v4 & 2) != 0)
    {
      int v7 = *((_DWORD *)a2 + 4);
      if ((v7 + 1) >= 8) {
        __assert_rtn("set_coarse_signal_environment", "CoreNavigationCLPPrivateDataShared.pb.h", 21923, "::CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment_SignalEnvironmentType_IsValid(value)");
      }
      *((_DWORD *)this + 8) |= 2u;
      *((_DWORD *)this + 4) = v7;
      int v4 = *((_DWORD *)a2 + 8);
    }
    if ((v4 & 4) != 0)
    {
      int v8 = *((_DWORD *)a2 + 5);
      if ((v8 + 1) >= 8) {
        __assert_rtn("set_high_resolution_signal_environment", "CoreNavigationCLPPrivateDataShared.pb.h", 21946, "::CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment_SignalEnvironmentType_IsValid(value)");
      }
      *((_DWORD *)this + 8) |= 4u;
      *((_DWORD *)this + 5) = v8;
      int v4 = *((_DWORD *)a2 + 8);
    }
    if ((v4 & 8) != 0)
    {
      int v9 = *((_DWORD *)a2 + 6);
      *((_DWORD *)this + 8) |= 8u;
      *((_DWORD *)this + 6) = v9;
    }
  }
}

void sub_18DF88588(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::~SignalEnvironment(CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment *this)
{
  *(void *)this = &unk_1EDD0CF50;
  CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::~SignalEnvironment(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment *)CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2)
    {
      uint64_t v3 = *(void (**)(void))(*(void *)v2 + 8);
      v3();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 28) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::New(CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 32))
  {
    if (*(unsigned char *)(this + 32))
    {
      uint64_t v1 = *(void *)(this + 8);
      if (v1)
      {
        if (*(unsigned char *)(v1 + 36))
        {
          *(void *)(v1 + 8) = 0;
          *(void *)(v1 + 16) = 0;
          *(void *)(v1 + 24) = 0;
        }
        *(_DWORD *)(v1 + 36) = 0;
      }
    }
    *(void *)(this + 16) = -1;
    *(_DWORD *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 32) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (2)
  {
    int v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_19;
        }
        *((_DWORD *)this + 8) |= 1u;
        int v7 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
        if (!v7) {
          operator new();
        }
        unsigned int v28 = 0;
        int v8 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v28))return 0; {
        }
          }
        else
        {
          unsigned int v28 = *v8;
          *((void *)a2 + 1) = v8 + 1;
        }
        int v15 = *((_DWORD *)a2 + 14);
        int v16 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v15 + 1;
        if (v15 >= v16) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream(v7, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v17 = *((_DWORD *)a2 + 14);
        BOOL v18 = __OFSUB__(v17, 1);
        int v19 = v17 - 1;
        if (v19 < 0 == v18) {
          *((_DWORD *)a2 + 14) = v19;
        }
        unsigned int v20 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        if ((unint64_t)v20 >= v9 || *v20 != 16) {
          continue;
        }
        uint64_t v10 = v20 + 1;
        *((void *)a2 + 1) = v10;
        goto LABEL_32;
      case 2u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        uint64_t v10 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
LABEL_32:
        unsigned int v28 = 0;
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v28);
          if (!result) {
            return result;
          }
          unsigned int v21 = v28;
        }
        else
        {
          unsigned int v21 = *v10;
          *((void *)a2 + 1) = v10 + 1;
        }
        if (v21 + 1 <= 7)
        {
          *((_DWORD *)this + 8) |= 2u;
          *((_DWORD *)this + 4) = v21;
        }
        int v23 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
        if ((unint64_t)v23 >= v11 || *v23 != 24) {
          continue;
        }
        unint64_t v12 = v23 + 1;
        *((void *)a2 + 1) = v12;
LABEL_42:
        unsigned int v28 = 0;
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v28);
          if (!result) {
            return result;
          }
          unsigned int v24 = v28;
        }
        else
        {
          unsigned int v24 = *v12;
          *((void *)a2 + 1) = v12 + 1;
        }
        if (v24 + 1 <= 7)
        {
          *((_DWORD *)this + 8) |= 4u;
          *((_DWORD *)this + 5) = v24;
        }
        int v25 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        if ((unint64_t)v25 >= v13 || *v25 != 32) {
          continue;
        }
        int v14 = v25 + 1;
        *((void *)a2 + 1) = v14;
LABEL_52:
        unsigned int v28 = 0;
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v28);
          if (!result) {
            return result;
          }
          unsigned int v26 = v28;
          unsigned int v27 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v13 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v26 = *v14;
          unsigned int v27 = (unsigned __int8 *)(v14 + 1);
          *((void *)a2 + 1) = v27;
        }
        *((_DWORD *)this + 6) = v26;
        *((_DWORD *)this + 8) |= 8u;
        if (v27 != (unsigned __int8 *)v13 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10)) {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        break;
      case 3u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        unint64_t v12 = (char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
        goto LABEL_42;
      case 4u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        int v14 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_52;
      default:
        int v6 = TagFallback & 7;
LABEL_19:
        if (v6 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = (unsigned int *)this;
  unsigned int v6 = *(_DWORD *)(this + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    unsigned int v6 = v5[8];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_10:
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[5], (uint64_t)a2, a4);
      if ((v5[8] & 8) == 0) {
        return this;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[4], (uint64_t)a2, a4);
  unsigned int v6 = v5[8];
  if ((v6 & 4) != 0) {
    goto LABEL_10;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return this;
  }
LABEL_11:
  uint64_t v8 = v5[6];

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v8, (uint64_t)a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 32);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_36;
  }
  if ((*((unsigned char *)this + 32) & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((*((unsigned char *)this + 32) & 2) == 0) {
      goto LABEL_21;
    }
    goto LABEL_15;
  }
  uint64_t v4 = *((void *)this + 1);
  if (!v4)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    uint64_t v4 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::default_instance_ + 8);
  }
  int v5 = *(unsigned __int8 *)(v4 + 36);
  if (*(unsigned char *)(v4 + 36))
  {
    int v6 = (v5 << 31 >> 31) & 9;
    if ((v5 & 2) != 0) {
      v6 += 9;
    }
    if ((v5 & 4) != 0) {
      int v5 = v6 + 9;
    }
    else {
      int v5 = v6;
    }
  }
  *(_DWORD *)(v4 + 32) = v5;
  uint64_t v3 = (v5 + 2);
  int v2 = *((_DWORD *)this + 8);
  if ((v2 & 2) != 0)
  {
LABEL_15:
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if ((v7 & 0x80000000) != 0)
    {
      int v8 = 11;
    }
    else if (v7 >= 0x80)
    {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7) + 1;
      int v2 = *((_DWORD *)this + 8);
    }
    else
    {
      int v8 = 2;
    }
    uint64_t v3 = (v8 + v3);
  }
LABEL_21:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_36;
    }
    goto LABEL_30;
  }
  unint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
  if ((v9 & 0x80000000) != 0)
  {
    int v10 = 11;
  }
  else if (v9 >= 0x80)
  {
    int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9) + 1;
    int v2 = *((_DWORD *)this + 8);
  }
  else
  {
    int v10 = 2;
  }
  uint64_t v3 = (v10 + v3);
  if ((v2 & 8) != 0)
  {
LABEL_30:
    unint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    if ((v11 & 0x80000000) != 0)
    {
      int v12 = 11;
    }
    else if (v11 >= 0x80)
    {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11) + 1;
    }
    else
    {
      int v12 = 2;
    }
    uint64_t v3 = (v12 + v3);
  }
LABEL_36:
  *((_DWORD *)this + 7) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment *this, const CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment *a2)
{
  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.SignalEnvironment");
}

double CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo *this)
{
  *(void *)&double result = 0xFFFFFFFFLL;
  *(_OWORD *)((char *)this + 8) = xmmword_18E1F3640;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo *CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo::SignalEnvironmentInfo(CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo *this, const CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo *a2)
{
  *(void *)this = &unk_1EDD0DBF8;
  *(_OWORD *)((char *)this + 8) = xmmword_18E1F3640;
  CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo::MergeFrom(this, a2);
  return this;
}

void sub_18DF88F10(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo *this, const CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 20);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 20))
    {
      int v5 = *((_DWORD *)a2 + 2);
      if ((v5 + 1) >= 8) {
        __assert_rtn("set_type", "CoreNavigationCLPPrivateDataShared.pb.h", 21995, "::CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment_SignalEnvironmentType_IsValid(value)");
      }
      *((_DWORD *)this + 5) |= 1u;
      *((_DWORD *)this + 2) = v5;
      int v4 = *((_DWORD *)a2 + 5);
    }
    if ((v4 & 2) != 0)
    {
      unsigned int v6 = *((_DWORD *)a2 + 3);
      if (v6 >= 4) {
        __assert_rtn("set_fidelity_level", "CoreNavigationCLPPrivateDataShared.pb.h", 22018, "::CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentFidelityLevel_IsValid(value)");
      }
      *((_DWORD *)this + 5) |= 2u;
      *((_DWORD *)this + 3) = v6;
    }
  }
}

void sub_18DF89024(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo::~SignalEnvironmentInfo(CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo *this)
{
  *(void *)this = &unk_1EDD0DBF8;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo::~SignalEnvironmentInfo(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 16) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo::New(CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 20)) {
    *(void *)(this + 8) = 0xFFFFFFFFLL;
  }
  *(_DWORD *)(this + 20) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (1)
  {
    while (1)
    {
      int v4 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v4;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v4 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v6 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_15;
      }
      unsigned int v15 = 0;
      unint64_t v9 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v9 >= *((void *)a2 + 2) || *v9 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v15);
        if (!result) {
          return result;
        }
        unsigned int v10 = v15;
      }
      else
      {
        unsigned int v10 = *v9;
        *((void *)a2 + 1) = v9 + 1;
      }
      if (v10 + 1 <= 7)
      {
        *((_DWORD *)this + 5) |= 1u;
        *((_DWORD *)this + 2) = v10;
      }
      unint64_t v11 = (unsigned char *)*((void *)a2 + 1);
      unint64_t v7 = *((void *)a2 + 2);
      if ((unint64_t)v11 < v7 && *v11 == 16)
      {
        int v8 = v11 + 1;
        *((void *)a2 + 1) = v8;
LABEL_25:
        unsigned int v14 = 0;
        if ((unint64_t)v8 >= v7 || *v8 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v14);
          if (!result) {
            return result;
          }
          unsigned int v12 = v14;
        }
        else
        {
          unsigned int v12 = *v8;
          *((void *)a2 + 1) = v8 + 1;
        }
        if (v12 <= 3)
        {
          *((_DWORD *)this + 5) |= 2u;
          *((_DWORD *)this + 3) = v12;
        }
        if (*((void *)a2 + 1) == *((void *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v6 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v8 = (char *)*((void *)a2 + 1);
        unint64_t v7 = *((void *)a2 + 2);
        goto LABEL_25;
      }
    }
    else
    {
      int v6 = TagFallback & 7;
    }
LABEL_15:
    if (v6 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 20);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
  {
    uint64_t v7 = *(unsigned int *)(v5 + 12);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, (uint64_t)a2, a4);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo *this)
{
  char v2 = *((unsigned char *)this + 20);
  if (v2)
  {
    if (*((unsigned char *)this + 20))
    {
      int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
      if ((v4 & 0x80000000) != 0)
      {
        uint64_t v3 = 11;
        if ((v2 & 2) == 0) {
          goto LABEL_19;
        }
      }
      else if (v4 >= 0x80)
      {
        uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
        if ((*((_DWORD *)this + 5) & 2) == 0) {
          goto LABEL_19;
        }
      }
      else
      {
        uint64_t v3 = 2;
        if ((v2 & 2) == 0) {
          goto LABEL_19;
        }
      }
    }
    else
    {
      uint64_t v3 = 0;
      if ((*((unsigned char *)this + 20) & 2) == 0) {
        goto LABEL_19;
      }
    }
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
    if ((v5 & 0x80000000) != 0)
    {
      int v6 = 11;
    }
    else if (v5 >= 0x80)
    {
      int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    }
    else
    {
      int v6 = 2;
    }
    uint64_t v3 = (v6 + v3);
  }
  else
  {
    uint64_t v3 = 0;
  }
LABEL_19:
  *((_DWORD *)this + 4) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo *this, const CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo *this)
{
  return 1;
}

CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo *CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo::Swap(CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo *this, CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo *a2)
{
  if (a2 != this)
  {
    int v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    int v3 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    int v4 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v4;
    int v5 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v5;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironmentInfo::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.SignalEnvironmentInfo");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MagSample::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(void *)(this + 24) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::MagSample *CoreNavigation::CLP::LogEntry::PrivateData::MagSample::MagSample(CoreNavigation::CLP::LogEntry::PrivateData::MagSample *this, const CoreNavigation::CLP::LogEntry::PrivateData::MagSample *a2)
{
  *(void *)this = &unk_1EDD0F020;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::MagSample::MergeFrom(this, a2);
  return this;
}

void sub_18DF89638(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

float CoreNavigation::CLP::LogEntry::PrivateData::MagSample::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::MagSample *this, const CoreNavigation::CLP::LogEntry::PrivateData::MagSample *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 32);
  if (!(_BYTE)v5) {
    return *(float *)&v4;
  }
  if (*((unsigned char *)a2 + 32))
  {
    *((_DWORD *)this + 8) |= 1u;
    int v6 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
    if (!v6) {
      operator new();
    }
    uint64_t v7 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)a2 + 1);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      uint64_t v7 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::MagSample::default_instance_
                                                                           + 8);
    }
    double v4 = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v6, v7);
    int v5 = *((_DWORD *)a2 + 8);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
LABEL_16:
      LODWORD(v4) = *((_DWORD *)a2 + 5);
      *((_DWORD *)this + 8) |= 4u;
      *((_DWORD *)this + 5) = LODWORD(v4);
      if ((*((_DWORD *)a2 + 8) & 8) != 0) {
        goto LABEL_8;
      }
      return *(float *)&v4;
    }
  }
  else if ((*((unsigned char *)a2 + 32) & 2) == 0)
  {
    goto LABEL_6;
  }
  LODWORD(v4) = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 8) |= 2u;
  *((_DWORD *)this + 4) = LODWORD(v4);
  int v5 = *((_DWORD *)a2 + 8);
  if ((v5 & 4) != 0) {
    goto LABEL_16;
  }
LABEL_7:
  if ((v5 & 8) != 0)
  {
LABEL_8:
    LODWORD(v4) = *((_DWORD *)a2 + 6);
    *((_DWORD *)this + 8) |= 8u;
    *((_DWORD *)this + 6) = LODWORD(v4);
  }
  return *(float *)&v4;
}

void sub_18DF897B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MagSample::~MagSample(CoreNavigation::CLP::LogEntry::PrivateData::MagSample *this)
{
  *(void *)this = &unk_1EDD0F020;
  CoreNavigation::CLP::LogEntry::PrivateData::MagSample::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::MagSample::~MagSample(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MagSample::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::MagSample *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::MagSample *)CoreNavigation::CLP::LogEntry::PrivateData::MagSample::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2)
    {
      int v3 = *(void (**)(void))(*(void *)v2 + 8);
      v3();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MagSample::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::MagSample *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::MagSample::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MagSample::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 28) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::MagSample::New(CoreNavigation::CLP::LogEntry::PrivateData::MagSample *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MagSample::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 32))
  {
    if (*(unsigned char *)(this + 32))
    {
      uint64_t v1 = *(void *)(this + 8);
      if (v1)
      {
        if (*(unsigned char *)(v1 + 36))
        {
          *(void *)(v1 + 8) = 0;
          *(void *)(v1 + 16) = 0;
          *(void *)(v1 + 24) = 0;
        }
        *(_DWORD *)(v1 + 36) = 0;
      }
    }
    *(void *)(this + 16) = 0;
    *(_DWORD *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 32) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MagSample::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::MagSample *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (2)
  {
    double v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_19;
        }
        *((_DWORD *)this + 8) |= 1u;
        uint64_t v7 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
        if (!v7) {
          operator new();
        }
        unsigned int v18 = 0;
        int v8 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v18))return 0; {
        }
          }
        else
        {
          unsigned int v18 = *v8;
          *((void *)a2 + 1) = v8 + 1;
        }
        int v9 = *((_DWORD *)a2 + 14);
        int v10 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v9 + 1;
        if (v9 >= v10) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream(v7, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v11 = *((_DWORD *)a2 + 14);
        BOOL v12 = __OFSUB__(v11, 1);
        int v13 = v11 - 1;
        if (v13 < 0 == v12) {
          *((_DWORD *)a2 + 14) = v13;
        }
        unsigned int v14 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v14 >= *((void *)a2 + 2) || *v14 != 21) {
          continue;
        }
        *((void *)a2 + 1) = v14 + 1;
        goto LABEL_31;
      case 2u:
        int v6 = TagFallback & 7;
        if (v6 != 5) {
          goto LABEL_19;
        }
LABEL_31:
        unsigned int v18 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v18) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 4) = v18;
        *((_DWORD *)this + 8) |= 2u;
        unsigned int v15 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v15 >= *((void *)a2 + 2) || *v15 != 29) {
          continue;
        }
        *((void *)a2 + 1) = v15 + 1;
LABEL_35:
        unsigned int v18 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v18) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 5) = v18;
        *((_DWORD *)this + 8) |= 4u;
        int v16 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v16 >= *((void *)a2 + 2) || *v16 != 37) {
          continue;
        }
        *((void *)a2 + 1) = v16 + 1;
LABEL_39:
        unsigned int v18 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v18))
        {
          *((_DWORD *)this + 6) = v18;
          *((_DWORD *)this + 8) |= 8u;
          if (*((void *)a2 + 1) == *((void *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        int v6 = TagFallback & 7;
        if (v6 == 5) {
          goto LABEL_35;
        }
        goto LABEL_19;
      case 4u:
        int v6 = TagFallback & 7;
        if (v6 != 5) {
          goto LABEL_19;
        }
        goto LABEL_39;
      default:
        int v6 = TagFallback & 7;
LABEL_19:
        if (v6 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MagSample::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 32);
  if (v6)
  {
    uint64_t v7 = *(void *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::MagSample::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 32);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_10:
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(float *)(v5 + 20), a3);
      if ((*(_DWORD *)(v5 + 32) & 8) == 0) {
        return this;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(float *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 4) != 0) {
    goto LABEL_10;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return this;
  }
LABEL_11:
  float v8 = *(float *)(v5 + 24);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, v8, a3);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MagSample::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::MagSample *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 32);
  if ((_BYTE)v2)
  {
    if (*((unsigned char *)this + 32))
    {
      uint64_t v5 = *((void *)this + 1);
      if (!v5)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
        uint64_t v5 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::MagSample::default_instance_ + 8);
      }
      int v6 = *(unsigned __int8 *)(v5 + 36);
      if (*(unsigned char *)(v5 + 36))
      {
        int v7 = (v6 << 31 >> 31) & 9;
        if ((v6 & 2) != 0) {
          v7 += 9;
        }
        if ((v6 & 4) != 0) {
          int v6 = v7 + 9;
        }
        else {
          int v6 = v7;
        }
      }
      *(_DWORD *)(v5 + 32) = v6;
      unsigned int v3 = v6 + 2;
      int v2 = *((_DWORD *)this + 8);
    }
    else
    {
      unsigned int v3 = 0;
    }
    if ((v2 & 2) != 0) {
      v3 += 5;
    }
    if ((v2 & 4) != 0) {
      v3 += 5;
    }
    if ((v2 & 8) != 0) {
      uint64_t result = v3 + 5;
    }
    else {
      uint64_t result = v3;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  *((_DWORD *)this + 7) = result;
  return result;
}

float CoreNavigation::CLP::LogEntry::PrivateData::MagSample::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::MagSample *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::MagSample::MergeFrom(this, lpsrc);
}

float CoreNavigation::CLP::LogEntry::PrivateData::MagSample::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::MagSample *this, const CoreNavigation::CLP::LogEntry::PrivateData::MagSample *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::MagSample *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::MagSample::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MagSample::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::MagSample *this)
{
  return 1;
}

float CoreNavigation::CLP::LogEntry::PrivateData::MagSample::Swap(CoreNavigation::CLP::LogEntry::PrivateData::MagSample *this, CoreNavigation::CLP::LogEntry::PrivateData::MagSample *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    int v3 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v3;
    int v4 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v4;
    float result = *((float *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((float *)a2 + 6) = result;
    LODWORD(v2) = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
    LODWORD(v2) = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::MagSample::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.MagSample");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 40) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer *CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::Magnetometer(CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer *this, const CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer *a2)
{
  *((void *)this + 5) = 0;
  *(void *)this = &unk_1EDD0B948;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::MergeFrom(this, a2);
  return this;
}

void sub_18DF8A028(_Unwind_Exception *a1)
{
  sub_18DF0C324(v1 + 2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer *this, const CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  int v4 = (CoreNavigation::CLP::LogEntry::PrivateData *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer *)((char *)this + 16));
  if (*((int *)a2 + 6) >= 1)
  {
    uint64_t v6 = 0;
    do
    {
      int v7 = *(const CoreNavigation::CLP::LogEntry::PrivateData::MagSample **)(*((void *)a2 + 2) + 8 * v6);
      int v8 = *((_DWORD *)this + 7);
      uint64_t v9 = *((int *)this + 6);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)this + 8))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer *)((char *)this + 16));
          int v8 = *((_DWORD *)this + 7);
        }
        *((_DWORD *)this + 7) = v8 + 1;
        operator new();
      }
      uint64_t v10 = *((void *)this + 2);
      *((_DWORD *)this + 6) = v9 + 1;
      *(float *)&double result = CoreNavigation::CLP::LogEntry::PrivateData::MagSample::MergeFrom(*(CoreNavigation::CLP::LogEntry::PrivateData::MagSample **)(v10 + 8 * v9), v7);
      ++v6;
    }
    while (v6 < *((int *)a2 + 6));
  }
  if (*((unsigned char *)a2 + 44))
  {
    *((_DWORD *)this + 11) |= 1u;
    int v11 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
    if (!v11) {
      operator new();
    }
    BOOL v12 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)a2 + 1);
    if (!v12)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(v4);
      BOOL v12 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::default_instance_
                                                                            + 8);
    }
    return CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v11, v12);
  }
  return result;
}

void sub_18DF8A22C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::~Magnetometer(CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer *this)
{
  *(void *)this = &unk_1EDD0B948;
  CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::SharedDtor(this);
  sub_18DF0C324((uint64_t *)this + 2);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::~Magnetometer(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer *)CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2)
    {
      int v3 = *(void (**)(void))(*(void *)v2 + 8);
      v3();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 40) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::New(CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::Clear(CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer *this)
{
  if (*((unsigned char *)this + 44))
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2)
    {
      if (*(unsigned char *)(v2 + 36))
      {
        *(void *)(v2 + 8) = 0;
        *(void *)(v2 + 16) = 0;
        *(void *)(v2 + 24) = 0;
      }
      *(_DWORD *)(v2 + 36) = 0;
    }
  }
  uint64_t result = sub_18DF0C208((uint64_t)this + 16);
  *((_DWORD *)this + 11) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v5;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((void *)a2 + 1) = v5 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_18;
        }
        *((_DWORD *)this + 11) |= 1u;
        int v8 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
        if (!v8) {
          operator new();
        }
        unsigned int v27 = 0;
        uint64_t v9 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v9 >= *((void *)a2 + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v27))return 0; {
        }
          }
        else
        {
          unsigned int v27 = *v9;
          *((void *)a2 + 1) = v9 + 1;
        }
        int v10 = *((_DWORD *)a2 + 14);
        int v11 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v10 + 1;
        if (v10 >= v11) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream(v8, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v12 = *((_DWORD *)a2 + 14);
        BOOL v13 = __OFSUB__(v12, 1);
        int v14 = v12 - 1;
        if (v14 < 0 == v13) {
          *((_DWORD *)a2 + 14) = v14;
        }
        unsigned int v15 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v15 < *((void *)a2 + 2) && *v15 == 18) {
          goto LABEL_29;
        }
      }
      if (TagFallback >> 3 != 2) {
        break;
      }
      int v7 = TagFallback & 7;
      if (v7 != 2) {
        goto LABEL_18;
      }
      while (1)
      {
        int v16 = *((_DWORD *)this + 7);
        uint64_t v17 = *((int *)this + 6);
        if ((int)v17 >= v16)
        {
          if (v16 == *((_DWORD *)this + 8))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
            int v16 = *((_DWORD *)this + 7);
          }
          *((_DWORD *)this + 7) = v16 + 1;
          operator new();
        }
        uint64_t v18 = *((void *)this + 2);
        *((_DWORD *)this + 6) = v17 + 1;
        int v19 = *(CoreNavigation::CLP::LogEntry::PrivateData::MagSample **)(v18 + 8 * v17);
        unsigned int v28 = 0;
        unsigned int v20 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v20 >= *((void *)a2 + 2) || *v20 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v28))return 0; {
        }
          }
        else
        {
          unsigned int v28 = *v20;
          *((void *)a2 + 1) = v20 + 1;
        }
        int v21 = *((_DWORD *)a2 + 14);
        int v22 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v21 + 1;
        if (v21 >= v22) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::MagSample::MergePartialFromCodedStream(v19, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v23 = *((_DWORD *)a2 + 14);
        BOOL v13 = __OFSUB__(v23, 1);
        int v24 = v23 - 1;
        if (v24 < 0 == v13) {
          *((_DWORD *)a2 + 14) = v24;
        }
        unsigned int v15 = (unsigned char *)*((void *)a2 + 1);
        int v25 = (unsigned char *)*((void *)a2 + 2);
        if (v15 >= v25 || *v15 != 18) {
          break;
        }
LABEL_29:
        *((void *)a2 + 1) = v15 + 1;
      }
      if (v15 == v25 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      }
    }
    int v7 = TagFallback & 7;
LABEL_18:
    if (v7 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(unsigned char *)(this + 44))
  {
    uint64_t v6 = *(void *)(this + 8);
    if (!v6)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      uint64_t v6 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
  }
  if (*(int *)(v5 + 24) >= 1)
  {
    uint64_t v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(*(void *)(v5 + 16) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 24));
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer *this)
{
  if (*((unsigned char *)this + 44))
  {
    uint64_t v3 = *((void *)this + 1);
    if (!v3)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      uint64_t v3 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::default_instance_ + 8);
    }
    int v4 = *(unsigned __int8 *)(v3 + 36);
    if (*(unsigned char *)(v3 + 36))
    {
      int v5 = (v4 << 31 >> 31) & 9;
      if ((v4 & 2) != 0) {
        v5 += 9;
      }
      if ((v4 & 4) != 0) {
        int v4 = v5 + 9;
      }
      else {
        int v4 = v5;
      }
    }
    *(_DWORD *)(v3 + 32) = v4;
    int v2 = v4 + 2;
  }
  else
  {
    int v2 = 0;
  }
  int v6 = *((_DWORD *)this + 6);
  uint64_t v7 = (v6 + v2);
  if (v6 >= 1)
  {
    uint64_t v8 = 0;
    do
      uint64_t v7 = v7
         + CoreNavigation::CLP::LogEntry::PrivateData::MagSample::ByteSize(*(CoreNavigation::CLP::LogEntry::PrivateData::MagSample **)(*((void *)this + 2) + 8 * v8++))
         + 1;
    while (v8 < *((int *)this + 6));
  }
  *((_DWORD *)this + 10) = v7;
  return v7;
}

double CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer *this, const CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer *this)
{
  return 1;
}

CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer *CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::Swap(CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer *this, CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer *a2)
{
  if (a2 != this)
  {
    uint64_t v3 = this;
    uint64_t v4 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v4;
    this = (CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    int v5 = *((_DWORD *)v3 + 11);
    *((_DWORD *)v3 + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v5;
    int v6 = *((_DWORD *)v3 + 10);
    *((_DWORD *)v3 + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v6;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.Magnetometer");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Reset::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::Reset *CoreNavigation::CLP::LogEntry::PrivateData::Reset::Reset(CoreNavigation::CLP::LogEntry::PrivateData::Reset *this, const CoreNavigation::CLP::LogEntry::PrivateData::Reset *a2)
{
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)this = &unk_1EDD0EBE8;
  CoreNavigation::CLP::LogEntry::PrivateData::Reset::MergeFrom(this, a2);
  return this;
}

void sub_18DF8AAE4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::Reset::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::Reset *this, const CoreNavigation::CLP::LogEntry::PrivateData::Reset *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (*((unsigned char *)a2 + 20))
  {
    *((_DWORD *)this + 5) |= 1u;
    int v5 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
    if (!v5) {
      operator new();
    }
    int v6 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)a2 + 1);
    if (!v6)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      int v6 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::Reset::default_instance_
                                                                           + 8);
    }
    return CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v5, v6);
  }
  return result;
}

void sub_18DF8ABF4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::Reset::~Reset(CoreNavigation::CLP::LogEntry::PrivateData::Reset *this)
{
  *(void *)this = &unk_1EDD0EBE8;
  CoreNavigation::CLP::LogEntry::PrivateData::Reset::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::Reset::~Reset(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::PrivateData::Reset::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::Reset *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::Reset *)CoreNavigation::CLP::LogEntry::PrivateData::Reset::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2)
    {
      uint64_t v3 = *(void (**)(void))(*(void *)v2 + 8);
      v3();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Reset::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::Reset *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::Reset::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Reset::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 16) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::Reset::New(CoreNavigation::CLP::LogEntry::PrivateData::Reset *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Reset::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 20))
  {
    uint64_t v1 = *(void *)(this + 8);
    if (v1)
    {
      if (*(unsigned char *)(v1 + 36))
      {
        *(void *)(v1 + 8) = 0;
        *(void *)(v1 + 16) = 0;
        *(void *)(v1 + 24) = 0;
      }
      *(_DWORD *)(v1 + 36) = 0;
    }
  }
  *(_DWORD *)(this + 20) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Reset::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::Reset *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (1)
  {
    while (1)
    {
      uint64_t v4 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
      }
      else
      {
        unint64_t TagFallback = *v4;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v4 + 1;
      }
      if (TagFallback != 10) {
        break;
      }
      *((_DWORD *)this + 5) |= 1u;
      int v6 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
      if (!v6) {
        operator new();
      }
      unsigned int v14 = 0;
      uint64_t v7 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v7 >= *((void *)a2 + 2) || *v7 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v14)) {
          return 0;
        }
      }
      else
      {
        unsigned int v14 = *v7;
        *((void *)a2 + 1) = v7 + 1;
      }
      int v8 = *((_DWORD *)a2 + 14);
      int v9 = *((_DWORD *)a2 + 15);
      *((_DWORD *)a2 + 14) = v8 + 1;
      if (v8 >= v9) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
      if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream(v6, a2)
        || !*((unsigned char *)a2 + 36))
      {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
      int v10 = *((_DWORD *)a2 + 14);
      BOOL v11 = __OFSUB__(v10, 1);
      int v12 = v10 - 1;
      if (v12 < 0 == v11) {
        *((_DWORD *)a2 + 14) = v12;
      }
      if (*((void *)a2 + 1) == *((void *)a2 + 2)
        && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      break;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Reset::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if (*(unsigned char *)(this + 20))
  {
    uint64_t v5 = *(void *)(this + 8);
    if (!v5)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      uint64_t v5 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::Reset::default_instance_ + 8);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v5, a2, a4);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Reset::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::Reset *this)
{
  if (*((unsigned char *)this + 20))
  {
    uint64_t v3 = *((void *)this + 1);
    if (!v3)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      uint64_t v3 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::Reset::default_instance_ + 8);
    }
    int v4 = *(unsigned __int8 *)(v3 + 36);
    if (*(unsigned char *)(v3 + 36))
    {
      int v5 = (v4 << 31 >> 31) & 9;
      if ((v4 & 2) != 0) {
        v5 += 9;
      }
      if ((v4 & 4) != 0) {
        int v4 = v5 + 9;
      }
      else {
        int v4 = v5;
      }
    }
    *(_DWORD *)(v3 + 32) = v4;
    uint64_t result = (v4 + 2);
  }
  else
  {
    uint64_t result = 0;
  }
  *((_DWORD *)this + 4) = result;
  return result;
}

double CoreNavigation::CLP::LogEntry::PrivateData::Reset::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::Reset *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::Reset::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::Reset::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::Reset *this, const CoreNavigation::CLP::LogEntry::PrivateData::Reset *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::Reset *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::Reset::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Reset::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::Reset *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Reset::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::Reset *a2)
{
  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::Reset *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::Reset::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.Reset");
}

double CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace *this)
{
  double result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace *CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace::AccelerometerPace(CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace *this, const CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace *a2)
{
  *(void *)this = &unk_1EDD0CA28;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace::MergeFrom(this, a2);
  return this;
}

void sub_18DF8B254(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace *this, const CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 36);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 36))
    {
      double result = *((double *)a2 + 1);
      *((_DWORD *)this + 9) |= 1u;
      *((double *)this + 1) = result;
      int v5 = *((_DWORD *)a2 + 9);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          return result;
        }
        goto LABEL_7;
      }
    }
    else if ((*((unsigned char *)a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    double result = *((double *)a2 + 2);
    *((_DWORD *)this + 9) |= 2u;
    *((double *)this + 2) = result;
    if ((*((_DWORD *)a2 + 9) & 4) == 0) {
      return result;
    }
LABEL_7:
    double result = *((double *)a2 + 3);
    *((_DWORD *)this + 9) |= 4u;
    *((double *)this + 3) = result;
  }
  return result;
}

void sub_18DF8B33C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace::~AccelerometerPace(CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace *this)
{
  *(void *)this = &unk_1EDD0CA28;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace::~AccelerometerPace(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 32) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace::New(CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 36))
  {
    *(void *)(this + 8) = 0;
    *(void *)(this + 16) = 0;
    *(void *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 36) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  do
  {
    while (1)
    {
      while (1)
      {
        int v4 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v4;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((void *)a2 + 1) = v4 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v6 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_27;
        }
        unint64_t v11 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0) {
          return 0;
        }
        *((void *)this + 1) = v11;
        *((_DWORD *)this + 9) |= 1u;
        int v8 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v8 < *((void *)a2 + 2) && *v8 == 17)
        {
          *((void *)a2 + 1) = v8 + 1;
LABEL_17:
          unint64_t v11 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0) {
            return 0;
          }
          *((void *)this + 2) = v11;
          *((_DWORD *)this + 9) |= 2u;
          int v9 = (unsigned char *)*((void *)a2 + 1);
          if ((unint64_t)v9 < *((void *)a2 + 2) && *v9 == 25)
          {
            *((void *)a2 + 1) = v9 + 1;
            goto LABEL_21;
          }
        }
      }
      if (v6 == 2)
      {
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_27;
        }
        goto LABEL_17;
      }
      if (v6 != 3)
      {
        int v7 = TagFallback & 7;
        goto LABEL_27;
      }
      int v7 = TagFallback & 7;
      if (v7 == 1) {
        break;
      }
LABEL_27:
      if (v7 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
    }
      }
LABEL_21:
    unint64_t v11 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0) {
      return 0;
    }
    *((void *)this + 3) = v11;
    *((_DWORD *)this + 9) |= 4u;
  }
  while (*((void *)a2 + 1) != *((void *)a2 + 2)
       || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10));
  *((_DWORD *)a2 + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)a2 + 36) = 1;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = this;
  int v5 = *(_DWORD *)(this + 36);
  if ((v5 & 1) == 0)
  {
    if ((v5 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v4 + 16), a3);
    if ((*(_DWORD *)(v4 + 36) & 4) == 0) {
      return this;
    }
    goto LABEL_7;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
  int v5 = *(_DWORD *)(v4 + 36);
  if ((v5 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 4) == 0) {
    return this;
  }
LABEL_7:
  double v6 = *(double *)(v4 + 24);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, v6, a3);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace *this)
{
  uint64_t v1 = *((unsigned __int8 *)this + 36);
  if (*((unsigned char *)this + 36))
  {
    unsigned int v2 = ((int)(v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0) {
      v2 += 9;
    }
    if ((v1 & 4) != 0) {
      uint64_t v1 = v2 + 9;
    }
    else {
      uint64_t v1 = v2;
    }
  }
  *((_DWORD *)this + 8) = v1;
  return v1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace *this, const CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace::Swap(CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace *this, CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    uint64_t v3 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    double result = *((double *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    *((double *)a2 + 3) = result;
    int v5 = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v5;
    int v6 = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v6;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.AccelerometerPace");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState *CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState::FalseStepDetectorState(CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState *this, const CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState *a2)
{
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)this = &unk_1EDD0DC70;
  CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState::MergeFrom(this, a2);
  return this;
}

void sub_18DF8B908(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState *this, const CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 20);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 20))
    {
      char v6 = *((unsigned char *)a2 + 8);
      *((_DWORD *)this + 5) |= 1u;
      *((unsigned char *)this + 8) = v6;
      int v4 = *((_DWORD *)a2 + 5);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_16;
      }
    }
    else if ((*((unsigned char *)a2 + 20) & 2) == 0)
    {
      goto LABEL_6;
    }
    char v7 = *((unsigned char *)a2 + 9);
    *((_DWORD *)this + 5) |= 2u;
    *((unsigned char *)this + 9) = v7;
    int v4 = *((_DWORD *)a2 + 5);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_17;
    }
LABEL_16:
    char v8 = *((unsigned char *)a2 + 10);
    *((_DWORD *)this + 5) |= 4u;
    *((unsigned char *)this + 10) = v8;
    int v4 = *((_DWORD *)a2 + 5);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_18;
    }
LABEL_17:
    char v9 = *((unsigned char *)a2 + 11);
    *((_DWORD *)this + 5) |= 8u;
    *((unsigned char *)this + 11) = v9;
    int v4 = *((_DWORD *)a2 + 5);
    if ((v4 & 0x10) == 0)
    {
LABEL_9:
      if ((v4 & 0x20) == 0) {
        goto LABEL_10;
      }
      goto LABEL_19;
    }
LABEL_18:
    char v10 = *((unsigned char *)a2 + 12);
    *((_DWORD *)this + 5) |= 0x10u;
    *((unsigned char *)this + 12) = v10;
    int v4 = *((_DWORD *)a2 + 5);
    if ((v4 & 0x20) == 0)
    {
LABEL_10:
      if ((v4 & 0x40) == 0) {
        goto LABEL_11;
      }
      goto LABEL_20;
    }
LABEL_19:
    char v11 = *((unsigned char *)a2 + 13);
    *((_DWORD *)this + 5) |= 0x20u;
    *((unsigned char *)this + 13) = v11;
    int v4 = *((_DWORD *)a2 + 5);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        return;
      }
      goto LABEL_12;
    }
LABEL_20:
    char v12 = *((unsigned char *)a2 + 14);
    *((_DWORD *)this + 5) |= 0x40u;
    *((unsigned char *)this + 14) = v12;
    if ((*((_DWORD *)a2 + 5) & 0x80) == 0) {
      return;
    }
LABEL_12:
    char v5 = *((unsigned char *)a2 + 15);
    *((_DWORD *)this + 5) |= 0x80u;
    *((unsigned char *)this + 15) = v5;
  }
}

void sub_18DF8BA90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState::~FalseStepDetectorState(CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState *this)
{
  *(void *)this = &unk_1EDD0DC70;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState::~FalseStepDetectorState(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 16) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState::New(CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 20)) {
    *(void *)(this + 8) = 0;
  }
  *(_DWORD *)(this + 20) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (2)
  {
    int v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        unsigned int v33 = 0;
        char v8 = (char *)*((void *)a2 + 1);
        unint64_t v7 = *((void *)a2 + 2);
        if ((unint64_t)v8 < v7 && (*v8 & 0x80000000) == 0)
        {
          unsigned int v9 = *v8;
          char v10 = v8 + 1;
          *((void *)a2 + 1) = v10;
LABEL_31:
          *((unsigned char *)this + 8) = v9 != 0;
          *((_DWORD *)this + 5) |= 1u;
          if ((unint64_t)v10 < v7 && *v10 == 16)
          {
            char v11 = v10 + 1;
            *((void *)a2 + 1) = v11;
            goto LABEL_34;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v33);
        if (result)
        {
          unsigned int v9 = v33;
          char v10 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v7 = *((void *)a2 + 2);
          goto LABEL_31;
        }
        break;
      case 2u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        char v11 = (char *)*((void *)a2 + 1);
        unint64_t v7 = *((void *)a2 + 2);
LABEL_34:
        unsigned int v33 = 0;
        if ((unint64_t)v11 >= v7 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v33);
          if (!result) {
            return result;
          }
          unsigned int v18 = v33;
          int v19 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v7 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v18 = *v11;
          int v19 = v11 + 1;
          *((void *)a2 + 1) = v19;
        }
        *((unsigned char *)this + 9) = v18 != 0;
        *((_DWORD *)this + 5) |= 2u;
        if ((unint64_t)v19 >= v7 || *v19 != 24) {
          continue;
        }
        char v12 = v19 + 1;
        *((void *)a2 + 1) = v12;
LABEL_42:
        unsigned int v33 = 0;
        if ((unint64_t)v12 >= v7 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v33);
          if (!result) {
            return result;
          }
          unsigned int v20 = v33;
          int v21 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v7 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v20 = *v12;
          int v21 = v12 + 1;
          *((void *)a2 + 1) = v21;
        }
        *((unsigned char *)this + 10) = v20 != 0;
        *((_DWORD *)this + 5) |= 4u;
        if ((unint64_t)v21 >= v7 || *v21 != 32) {
          continue;
        }
        BOOL v13 = v21 + 1;
        *((void *)a2 + 1) = v13;
LABEL_50:
        unsigned int v33 = 0;
        if ((unint64_t)v13 >= v7 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v33);
          if (!result) {
            return result;
          }
          unsigned int v22 = v33;
          int v23 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v7 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v22 = *v13;
          int v23 = v13 + 1;
          *((void *)a2 + 1) = v23;
        }
        *((unsigned char *)this + 11) = v22 != 0;
        *((_DWORD *)this + 5) |= 8u;
        if ((unint64_t)v23 >= v7 || *v23 != 40) {
          continue;
        }
        unsigned int v14 = v23 + 1;
        *((void *)a2 + 1) = v14;
LABEL_58:
        unsigned int v33 = 0;
        if ((unint64_t)v14 >= v7 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v33);
          if (!result) {
            return result;
          }
          unsigned int v24 = v33;
          int v25 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v7 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v24 = *v14;
          int v25 = v14 + 1;
          *((void *)a2 + 1) = v25;
        }
        *((unsigned char *)this + 12) = v24 != 0;
        *((_DWORD *)this + 5) |= 0x10u;
        if ((unint64_t)v25 >= v7 || *v25 != 48) {
          continue;
        }
        unsigned int v15 = v25 + 1;
        *((void *)a2 + 1) = v15;
LABEL_66:
        unsigned int v33 = 0;
        if ((unint64_t)v15 >= v7 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v33);
          if (!result) {
            return result;
          }
          unsigned int v26 = v33;
          unsigned int v27 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v7 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v26 = *v15;
          unsigned int v27 = v15 + 1;
          *((void *)a2 + 1) = v27;
        }
        *((unsigned char *)this + 13) = v26 != 0;
        *((_DWORD *)this + 5) |= 0x20u;
        if ((unint64_t)v27 >= v7 || *v27 != 56) {
          continue;
        }
        int v16 = v27 + 1;
        *((void *)a2 + 1) = v16;
LABEL_74:
        unsigned int v33 = 0;
        if ((unint64_t)v16 >= v7 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v33);
          if (!result) {
            return result;
          }
          unsigned int v28 = v33;
          int v29 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v7 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v28 = *v16;
          int v29 = v16 + 1;
          *((void *)a2 + 1) = v29;
        }
        *((unsigned char *)this + 14) = v28 != 0;
        *((_DWORD *)this + 5) |= 0x40u;
        if ((unint64_t)v29 >= v7 || *v29 != 64) {
          continue;
        }
        uint64_t v17 = v29 + 1;
        *((void *)a2 + 1) = v17;
LABEL_82:
        unsigned int v33 = 0;
        if ((unint64_t)v17 >= v7 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v33);
          if (!result) {
            return result;
          }
          unsigned int v30 = v33;
          int v31 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v7 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v30 = *v17;
          int v31 = (unsigned __int8 *)(v17 + 1);
          *((void *)a2 + 1) = v31;
        }
        *((unsigned char *)this + 15) = v30 != 0;
        *((_DWORD *)this + 5) |= 0x80u;
        if (v31 != (unsigned __int8 *)v7 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10)) {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      case 3u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        char v12 = (char *)*((void *)a2 + 1);
        unint64_t v7 = *((void *)a2 + 2);
        goto LABEL_42;
      case 4u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        BOOL v13 = (char *)*((void *)a2 + 1);
        unint64_t v7 = *((void *)a2 + 2);
        goto LABEL_50;
      case 5u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        unsigned int v14 = (char *)*((void *)a2 + 1);
        unint64_t v7 = *((void *)a2 + 2);
        goto LABEL_58;
      case 6u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        unsigned int v15 = (char *)*((void *)a2 + 1);
        unint64_t v7 = *((void *)a2 + 2);
        goto LABEL_66;
      case 7u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        int v16 = (char *)*((void *)a2 + 1);
        unint64_t v7 = *((void *)a2 + 2);
        goto LABEL_74;
      case 8u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        uint64_t v17 = (char *)*((void *)a2 + 1);
        unint64_t v7 = *((void *)a2 + 2);
        goto LABEL_82;
      default:
        int v6 = TagFallback & 7;
LABEL_25:
        if (v6 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 20);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 20);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 9), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 20);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 10), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 20);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_14;
  }
LABEL_13:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 11), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 20);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_15;
  }
LABEL_14:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned __int8 *)(v5 + 12), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 20);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
LABEL_16:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned __int8 *)(v5 + 14), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 20) & 0x80) == 0) {
      return this;
    }
    goto LABEL_17;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned __int8 *)(v5 + 13), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 20);
  if ((v6 & 0x40) != 0) {
    goto LABEL_16;
  }
LABEL_8:
  if ((v6 & 0x80) == 0) {
    return this;
  }
LABEL_17:
  uint64_t v7 = *(unsigned __int8 *)(v5 + 15);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v7, (uint64_t)a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState *this)
{
  int v1 = *((_DWORD *)this + 5);
  if ((_BYTE)v1)
  {
    unsigned int v2 = 2 * (v1 & 1);
    if ((v1 & 2) != 0) {
      v2 += 2;
    }
    if ((v1 & 4) != 0) {
      v2 += 2;
    }
    if ((v1 & 8) != 0) {
      v2 += 2;
    }
    if ((v1 & 0x10) != 0) {
      v2 += 2;
    }
    if ((v1 & 0x20) != 0) {
      v2 += 2;
    }
    if ((v1 & 0x40) != 0) {
      v2 += 2;
    }
    if ((v1 & 0x80) != 0) {
      uint64_t v3 = v2 + 2;
    }
    else {
      uint64_t v3 = v2;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  *((_DWORD *)this + 4) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState *this, const CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState *a2)
{
  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState *)this)
  {
    char v2 = *(unsigned char *)(this + 8);
    *(unsigned char *)(this + 8) = *((unsigned char *)a2 + 8);
    *((unsigned char *)a2 + 8) = v2;
    char v3 = *(unsigned char *)(this + 9);
    *(unsigned char *)(this + 9) = *((unsigned char *)a2 + 9);
    *((unsigned char *)a2 + 9) = v3;
    char v4 = *(unsigned char *)(this + 10);
    *(unsigned char *)(this + 10) = *((unsigned char *)a2 + 10);
    *((unsigned char *)a2 + 10) = v4;
    char v5 = *(unsigned char *)(this + 11);
    *(unsigned char *)(this + 11) = *((unsigned char *)a2 + 11);
    *((unsigned char *)a2 + 11) = v5;
    char v6 = *(unsigned char *)(this + 12);
    *(unsigned char *)(this + 12) = *((unsigned char *)a2 + 12);
    *((unsigned char *)a2 + 12) = v6;
    char v7 = *(unsigned char *)(this + 13);
    *(unsigned char *)(this + 13) = *((unsigned char *)a2 + 13);
    *((unsigned char *)a2 + 13) = v7;
    char v8 = *(unsigned char *)(this + 14);
    *(unsigned char *)(this + 14) = *((unsigned char *)a2 + 14);
    *((unsigned char *)a2 + 14) = v8;
    char v9 = *(unsigned char *)(this + 15);
    *(unsigned char *)(this + 15) = *((unsigned char *)a2 + 15);
    *((unsigned char *)a2 + 15) = v9;
    int v10 = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v10;
    int v11 = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v11;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.FalseStepDetectorState");
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry_DistanceSourceType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 6;
}

double CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry *this)
{
  double result = 0.0;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *((void *)this + 11) = MEMORY[0x1E4FBA920];
  *((_WORD *)this + 48) = 0;
  *((void *)this + 18) = 0;
  *(_OWORD *)((char *)this + 100) = 0u;
  *(_OWORD *)((char *)this + 116) = 0u;
  *((_OWORD *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry *CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::StepCountEntry(CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry *this, const CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry *a2)
{
  *(void *)this = &unk_1EDD0C0C8;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((void *)this + 11) = MEMORY[0x1E4FBA920];
  *((_WORD *)this + 48) = 0;
  *((void *)this + 18) = 0;
  *(_OWORD *)((char *)this + 100) = 0u;
  *(_OWORD *)((char *)this + 116) = 0u;
  *((_OWORD *)this + 8) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::MergeFrom(this, a2);
  return this;
}

void sub_18DF8C544(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry *this, const CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry *a2)
{
  char v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v35);
  }
  int v4 = *((_DWORD *)a2 + 37);
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    *((_DWORD *)v3 + 37) |= 1u;
    char v6 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)v3 + 1);
    if (!v6) {
      operator new();
    }
    char v7 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)a2 + 1);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      char v7 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::default_instance_
                                                                           + 8);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v6, v7);
    int v4 = *((_DWORD *)a2 + 37);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_33;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  *((_DWORD *)v3 + 37) |= 2u;
  char v8 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)v3 + 2);
  if (!v8) {
    operator new();
  }
  char v9 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)a2 + 2);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    char v9 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::default_instance_
                                                                         + 16);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v8, v9);
  int v4 = *((_DWORD *)a2 + 37);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_38;
  }
LABEL_33:
  *((_DWORD *)v3 + 37) |= 4u;
  int v10 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)v3 + 3);
  if (!v10) {
    operator new();
  }
  int v11 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)a2 + 3);
  if (!v11)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    int v11 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::default_instance_
                                                                          + 24);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v10, v11);
  int v4 = *((_DWORD *)a2 + 37);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_39;
  }
LABEL_38:
  int v12 = *((_DWORD *)a2 + 10);
  *((_DWORD *)v3 + 37) |= 8u;
  *((_DWORD *)v3 + 10) = v12;
  int v4 = *((_DWORD *)a2 + 37);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_40:
    uint64_t v14 = *((void *)a2 + 6);
    *((_DWORD *)v3 + 37) |= 0x20u;
    *((void *)v3 + 6) = v14;
    int v4 = *((_DWORD *)a2 + 37);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_41;
  }
LABEL_39:
  uint64_t v13 = *((void *)a2 + 4);
  *((_DWORD *)v3 + 37) |= 0x10u;
  *((void *)v3 + 4) = v13;
  int v4 = *((_DWORD *)a2 + 37);
  if ((v4 & 0x20) != 0) {
    goto LABEL_40;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_41:
  int v15 = *((_DWORD *)a2 + 11);
  *((_DWORD *)v3 + 37) |= 0x40u;
  *((_DWORD *)v3 + 11) = v15;
  int v4 = *((_DWORD *)a2 + 37);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    int v5 = *((_DWORD *)a2 + 18);
    *((_DWORD *)v3 + 37) |= 0x80u;
    *((_DWORD *)v3 + 18) = v5;
    int v4 = *((_DWORD *)a2 + 37);
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0) {
    goto LABEL_57;
  }
  if ((v4 & 0x100) != 0)
  {
    uint64_t v16 = *((void *)a2 + 7);
    *((_DWORD *)v3 + 37) |= 0x100u;
    *((void *)v3 + 7) = v16;
    int v4 = *((_DWORD *)a2 + 37);
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0) {
        goto LABEL_17;
      }
      goto LABEL_45;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  uint64_t v17 = *((void *)a2 + 8);
  *((_DWORD *)v3 + 37) |= 0x200u;
  *((void *)v3 + 8) = v17;
  int v4 = *((_DWORD *)a2 + 37);
  if ((v4 & 0x400) == 0)
  {
LABEL_17:
    if ((v4 & 0x800) == 0) {
      goto LABEL_18;
    }
    goto LABEL_46;
  }
LABEL_45:
  uint64_t v18 = *((void *)a2 + 10);
  *((_DWORD *)v3 + 37) |= 0x400u;
  *((void *)v3 + 10) = v18;
  int v4 = *((_DWORD *)a2 + 37);
  if ((v4 & 0x800) == 0)
  {
LABEL_18:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_47;
  }
LABEL_46:
  int v19 = *((_DWORD *)a2 + 19);
  *((_DWORD *)v3 + 37) |= 0x800u;
  *((_DWORD *)v3 + 19) = v19;
  int v4 = *((_DWORD *)a2 + 37);
  if ((v4 & 0x1000) == 0)
  {
LABEL_19:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_50;
  }
LABEL_47:
  unsigned int v20 = (const std::string *)*((void *)a2 + 11);
  *((_DWORD *)v3 + 37) |= 0x1000u;
  int v21 = (std::string *)*((void *)v3 + 11);
  if (v21 == (std::string *)MEMORY[0x1E4FBA920]) {
    operator new();
  }
  this = (CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry *)std::string::operator=(v21, v20);
  int v4 = *((_DWORD *)a2 + 37);
  if ((v4 & 0x2000) == 0)
  {
LABEL_20:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_51;
  }
LABEL_50:
  char v22 = *((unsigned char *)a2 + 96);
  *((_DWORD *)v3 + 37) |= 0x2000u;
  *((unsigned char *)v3 + 96) = v22;
  int v4 = *((_DWORD *)a2 + 37);
  if ((v4 & 0x4000) == 0)
  {
LABEL_21:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_57;
    }
    goto LABEL_52;
  }
LABEL_51:
  char v23 = *((unsigned char *)a2 + 97);
  *((_DWORD *)v3 + 37) |= 0x4000u;
  *((unsigned char *)v3 + 97) = v23;
  int v4 = *((_DWORD *)a2 + 37);
  if ((v4 & 0x8000) == 0) {
    goto LABEL_57;
  }
LABEL_52:
  *((_DWORD *)v3 + 37) |= 0x8000u;
  unsigned int v24 = (CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace *)*((void *)v3 + 13);
  if (!v24) {
    operator new();
  }
  int v25 = (const CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace *)*((void *)a2 + 13);
  if (!v25)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    int v25 = *(const CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace **)(CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::default_instance_
                                                                                  + 104);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace::MergeFrom(v24, v25);
  int v4 = *((_DWORD *)a2 + 37);
LABEL_57:
  if ((v4 & 0xFF0000) == 0) {
    return;
  }
  if ((v4 & 0x10000) != 0)
  {
    int v26 = *((_DWORD *)a2 + 25);
    *((_DWORD *)v3 + 37) |= 0x10000u;
    *((_DWORD *)v3 + 25) = v26;
    int v4 = *((_DWORD *)a2 + 37);
    if ((v4 & 0x20000) == 0)
    {
LABEL_60:
      if ((v4 & 0x40000) == 0) {
        goto LABEL_61;
      }
      goto LABEL_69;
    }
  }
  else if ((v4 & 0x20000) == 0)
  {
    goto LABEL_60;
  }
  int v27 = *((_DWORD *)a2 + 28);
  *((_DWORD *)v3 + 37) |= 0x20000u;
  *((_DWORD *)v3 + 28) = v27;
  int v4 = *((_DWORD *)a2 + 37);
  if ((v4 & 0x40000) == 0)
  {
LABEL_61:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_62;
    }
    goto LABEL_70;
  }
LABEL_69:
  int v28 = *((_DWORD *)a2 + 29);
  *((_DWORD *)v3 + 37) |= 0x40000u;
  *((_DWORD *)v3 + 29) = v28;
  int v4 = *((_DWORD *)a2 + 37);
  if ((v4 & 0x80000) == 0)
  {
LABEL_62:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_63;
    }
    goto LABEL_71;
  }
LABEL_70:
  int v29 = *((_DWORD *)a2 + 30);
  *((_DWORD *)v3 + 37) |= 0x80000u;
  *((_DWORD *)v3 + 30) = v29;
  int v4 = *((_DWORD *)a2 + 37);
  if ((v4 & 0x100000) == 0)
  {
LABEL_63:
    if ((v4 & 0x200000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_72;
  }
LABEL_71:
  int v30 = *((_DWORD *)a2 + 31);
  *((_DWORD *)v3 + 37) |= 0x100000u;
  *((_DWORD *)v3 + 31) = v30;
  int v4 = *((_DWORD *)a2 + 37);
  if ((v4 & 0x200000) == 0)
  {
LABEL_64:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_65;
    }
    goto LABEL_73;
  }
LABEL_72:
  int v31 = *((_DWORD *)a2 + 32);
  *((_DWORD *)v3 + 37) |= 0x200000u;
  *((_DWORD *)v3 + 32) = v31;
  int v4 = *((_DWORD *)a2 + 37);
  if ((v4 & 0x400000) == 0)
  {
LABEL_65:
    if ((v4 & 0x800000) == 0) {
      return;
    }
    goto LABEL_75;
  }
LABEL_73:
  unsigned int v32 = *((_DWORD *)a2 + 33);
  if (v32 >= 6) {
    __assert_rtn("set_distance_source", "CoreNavigationCLPPrivateDataShared.pb.h", 23136, "::CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry_DistanceSourceType_IsValid(value)");
  }
  *((_DWORD *)v3 + 37) |= 0x400000u;
  *((_DWORD *)v3 + 33) = v32;
  if ((*((_DWORD *)a2 + 37) & 0x800000) != 0)
  {
LABEL_75:
    *((_DWORD *)v3 + 37) |= 0x800000u;
    unsigned int v33 = (CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState *)*((void *)v3 + 17);
    if (!v33) {
      operator new();
    }
    int v34 = (const CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState *)*((void *)a2 + 17);
    if (!v34)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      int v34 = *(const CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState **)(CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::default_instance_
                                                                                         + 136);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState::MergeFrom(v33, v34);
  }
}

void sub_18DF8CB4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::~StepCountEntry(CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry *this)
{
  *(void *)this = &unk_1EDD0C0C8;
  CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::~StepCountEntry(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry *this)
{
  int v1 = this;
  uint64_t v2 = *((void *)this + 11);
  if (v2 != MEMORY[0x1E4FBA920] && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    this = (CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry *)MEMORY[0x192FA6240](v2, 0x1012C40EC159624);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry *)CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::default_instance_ != v1)
  {
    uint64_t v4 = *((void *)v1 + 1);
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = *((void *)v1 + 2);
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
    uint64_t v6 = *((void *)v1 + 3);
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    uint64_t v7 = *((void *)v1 + 13);
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
    uint64_t v8 = *((void *)v1 + 17);
    if (v8)
    {
      char v9 = *(void (**)(void))(*(void *)v8 + 8);
      v9();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 144) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::New(CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 148);
  if ((_BYTE)v1)
  {
    if (v1)
    {
      uint64_t v2 = *(void *)(this + 8);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 36))
        {
          *(void *)(v2 + 8) = 0;
          *(void *)(v2 + 16) = 0;
          *(void *)(v2 + 24) = 0;
        }
        *(_DWORD *)(v2 + 36) = 0;
        int v1 = *(_DWORD *)(this + 148);
      }
    }
    if ((v1 & 2) != 0)
    {
      uint64_t v3 = *(void *)(this + 16);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
          *(void *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        int v1 = *(_DWORD *)(this + 148);
      }
    }
    if ((v1 & 4) != 0)
    {
      uint64_t v4 = *(void *)(this + 24);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 36))
        {
          *(void *)(v4 + 8) = 0;
          *(void *)(v4 + 16) = 0;
          *(void *)(v4 + 24) = 0;
        }
        *(_DWORD *)(v4 + 36) = 0;
        int v1 = *(_DWORD *)(this + 148);
      }
    }
    *(_DWORD *)(this + 72) = 0;
    *(void *)(this + 40) = 0;
    *(void *)(this + 48) = 0;
    *(void *)(this + 32) = 0;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(void *)(this + 80) = 0;
    *(_DWORD *)(this + 76) = 0;
    *(void *)(this + 56) = 0;
    *(void *)(this + 64) = 0;
    if ((v1 & 0x1000) != 0)
    {
      uint64_t v5 = *(void *)(this + 88);
      if (v5 != MEMORY[0x1E4FBA920])
      {
        if (*(char *)(v5 + 23) < 0)
        {
          **(unsigned char **)uint64_t v5 = 0;
          *(void *)(v5 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v5 = 0;
          *(unsigned char *)(v5 + 23) = 0;
        }
      }
    }
    *(_WORD *)(this + 96) = 0;
    int v1 = *(_DWORD *)(this + 148);
    if ((v1 & 0x8000) != 0)
    {
      uint64_t v6 = *(void *)(this + 104);
      if (v6)
      {
        if (*(unsigned char *)(v6 + 36))
        {
          *(void *)(v6 + 8) = 0;
          *(void *)(v6 + 16) = 0;
          *(void *)(v6 + 24) = 0;
        }
        *(_DWORD *)(v6 + 36) = 0;
        int v1 = *(_DWORD *)(this + 148);
      }
    }
  }
  if ((v1 & 0xFF0000) != 0)
  {
    *(_DWORD *)(this + 100) = 0;
    *(void *)(this + 120) = 0;
    *(void *)(this + 128) = 0;
    *(void *)(this + 112) = 0;
    if ((v1 & 0x800000) != 0)
    {
      uint64_t v7 = *(void *)(this + 136);
      if (v7)
      {
        if (*(unsigned char *)(v7 + 20)) {
          *(void *)(v7 + 8) = 0;
        }
        *(_DWORD *)(v7 + 20) = 0;
      }
    }
  }
  *(_DWORD *)(this + 148) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4 = (unsigned int *)((char *)this + 40);
  uint64_t v5 = (unsigned int *)((char *)this + 44);
  uint64_t v6 = (unsigned int *)((char *)this + 72);
  uint64_t v7 = (unsigned int *)((char *)this + 100);
  uint64_t v93 = (unsigned int *)((char *)this + 116);
  int v94 = (unsigned int *)((char *)this + 112);
  int v92 = (unsigned int *)((char *)this + 120);
  uint64_t v8 = (unsigned int *)((char *)this + 124);
  char v9 = (unsigned int *)((char *)this + 128);
  while (2)
  {
    int v10 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v10;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v10 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_65;
        }
        *((_DWORD *)this + 37) |= 1u;
        uint64_t v13 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
        if (!v13) {
          operator new();
        }
        v95[0] = 0;
        uint64_t v14 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v14 >= *((void *)a2 + 2) || *v14 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v95))return 0; {
        }
          }
        else
        {
          v95[0] = *v14;
          *((void *)a2 + 1) = v14 + 1;
        }
        int v42 = *((_DWORD *)a2 + 14);
        int v43 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v42 + 1;
        if (v42 >= v43) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream(v13, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v44 = *((_DWORD *)a2 + 14);
        BOOL v40 = __OFSUB__(v44, 1);
        int v45 = v44 - 1;
        if (v45 < 0 == v40) {
          *((_DWORD *)a2 + 14) = v45;
        }
        unsigned int v46 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v46 >= *((void *)a2 + 2) || *v46 != 18) {
          continue;
        }
        *((void *)a2 + 1) = v46 + 1;
        goto LABEL_87;
      case 2u:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_65;
        }
LABEL_87:
        *((_DWORD *)this + 37) |= 2u;
        int v47 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 2);
        if (!v47) {
          operator new();
        }
        v95[0] = 0;
        unsigned int v48 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v48 >= *((void *)a2 + 2) || *v48 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v95))return 0; {
        }
          }
        else
        {
          v95[0] = *v48;
          *((void *)a2 + 1) = v48 + 1;
        }
        int v49 = *((_DWORD *)a2 + 14);
        int v50 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v49 + 1;
        if (v49 >= v50) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream(v47, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v51 = *((_DWORD *)a2 + 14);
        BOOL v40 = __OFSUB__(v51, 1);
        int v52 = v51 - 1;
        if (v52 < 0 == v40) {
          *((_DWORD *)a2 + 14) = v52;
        }
        int v53 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v53 >= *((void *)a2 + 2) || *v53 != 26) {
          continue;
        }
        *((void *)a2 + 1) = v53 + 1;
LABEL_101:
        *((_DWORD *)this + 37) |= 4u;
        unsigned int v54 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 3);
        if (!v54) {
          operator new();
        }
        v95[0] = 0;
        int v55 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v55 >= *((void *)a2 + 2) || *v55 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v95))return 0; {
        }
          }
        else
        {
          v95[0] = *v55;
          *((void *)a2 + 1) = v55 + 1;
        }
        int v56 = *((_DWORD *)a2 + 14);
        int v57 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v56 + 1;
        if (v56 >= v57) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream(v54, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v58 = *((_DWORD *)a2 + 14);
        BOOL v40 = __OFSUB__(v58, 1);
        int v59 = v58 - 1;
        if (v59 < 0 == v40) {
          *((_DWORD *)a2 + 14) = v59;
        }
        unsigned int v60 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        if ((unint64_t)v60 >= v15 || *v60 != 32) {
          continue;
        }
        uint64_t v16 = v60 + 1;
        *((void *)a2 + 1) = v16;
LABEL_115:
        if ((unint64_t)v16 >= v15 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!result) {
            return result;
          }
          unsigned int v61 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v4 = *v16;
          unsigned int v61 = v16 + 1;
          *((void *)a2 + 1) = v61;
        }
        *((_DWORD *)this + 37) |= 8u;
        if ((unint64_t)v61 >= v15 || *v61 != 41) {
          continue;
        }
        *((void *)a2 + 1) = v61 + 1;
LABEL_123:
        *(void *)int v95 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v95) & 1) == 0)return 0; {
        *((void *)this + 4) = *(void *)v95;
        }
        *((_DWORD *)this + 37) |= 0x10u;
        unsigned int v63 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v63 >= *((void *)a2 + 2) || *v63 != 49) {
          continue;
        }
        *((void *)a2 + 1) = v63 + 1;
LABEL_127:
        *(void *)int v95 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v95) & 1) == 0)return 0; {
        *((void *)this + 6) = *(void *)v95;
        }
        *((_DWORD *)this + 37) |= 0x20u;
        int v64 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v17 = *((void *)a2 + 2);
        if ((unint64_t)v64 >= v17 || *v64 != 56) {
          continue;
        }
        uint64_t v18 = v64 + 1;
        *((void *)a2 + 1) = v18;
LABEL_131:
        if ((unint64_t)v18 >= v17 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!result) {
            return result;
          }
          int v65 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v17 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v5 = *v18;
          int v65 = v18 + 1;
          *((void *)a2 + 1) = v65;
        }
        *((_DWORD *)this + 37) |= 0x40u;
        if ((unint64_t)v65 >= v17 || *v65 != 64) {
          continue;
        }
        int v19 = v65 + 1;
        *((void *)a2 + 1) = v19;
LABEL_139:
        if ((unint64_t)v19 >= v17 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
          if (!result) {
            return result;
          }
          BOOL v66 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v17 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v6 = *v19;
          BOOL v66 = v19 + 1;
          *((void *)a2 + 1) = v66;
        }
        *((_DWORD *)this + 37) |= 0x80u;
        if ((unint64_t)v66 >= v17 || *v66 != 73) {
          continue;
        }
        *((void *)a2 + 1) = v66 + 1;
LABEL_147:
        *(void *)int v95 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v95) & 1) == 0)return 0; {
        *((void *)this + 7) = *(void *)v95;
        }
        *((_DWORD *)this + 37) |= 0x100u;
        int v67 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v67 >= *((void *)a2 + 2) || *v67 != 81) {
          continue;
        }
        *((void *)a2 + 1) = v67 + 1;
LABEL_151:
        *(void *)int v95 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v95) & 1) == 0)return 0; {
        *((void *)this + 8) = *(void *)v95;
        }
        *((_DWORD *)this + 37) |= 0x200u;
        uint64_t v68 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v68 >= *((void *)a2 + 2) || *v68 != 89) {
          continue;
        }
        *((void *)a2 + 1) = v68 + 1;
LABEL_155:
        *(void *)int v95 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v95) & 1) == 0)return 0; {
        *((void *)this + 10) = *(void *)v95;
        }
        *((_DWORD *)this + 37) |= 0x400u;
        int v69 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v20 = *((void *)a2 + 2);
        if ((unint64_t)v69 >= v20 || *v69 != 96) {
          continue;
        }
        int v21 = v69 + 1;
        *((void *)a2 + 1) = v21;
LABEL_159:
        v95[0] = 0;
        if ((unint64_t)v21 >= v20 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v95);
          if (!result) {
            return result;
          }
          unsigned int v70 = v95[0];
          int v71 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v20 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v70 = *v21;
          int v71 = v21 + 1;
          *((void *)a2 + 1) = v71;
        }
        *((_DWORD *)this + 19) = v70;
        int v22 = *((_DWORD *)this + 37) | 0x800;
        *((_DWORD *)this + 37) = v22;
        if ((unint64_t)v71 >= v20 || *v71 != 106) {
          continue;
        }
        *((void *)a2 + 1) = v71 + 1;
LABEL_167:
        *((_DWORD *)this + 37) = v22 | 0x1000;
        if (*((void *)this + 11) == MEMORY[0x1E4FBA920]) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        int v72 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v23 = *((void *)a2 + 2);
        if ((unint64_t)v72 >= v23 || *v72 != 112) {
          continue;
        }
        unsigned int v24 = v72 + 1;
        *((void *)a2 + 1) = v24;
LABEL_173:
        v95[0] = 0;
        if ((unint64_t)v24 >= v23 || *v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v95);
          if (!result) {
            return result;
          }
          unsigned int v73 = v95[0];
          unsigned int v74 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v23 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v73 = *v24;
          unsigned int v74 = v24 + 1;
          *((void *)a2 + 1) = v74;
        }
        *((unsigned char *)this + 96) = v73 != 0;
        *((_DWORD *)this + 37) |= 0x2000u;
        if ((unint64_t)v74 >= v23 || *v74 != 120) {
          continue;
        }
        int v25 = v74 + 1;
        *((void *)a2 + 1) = v25;
LABEL_181:
        v95[0] = 0;
        if ((unint64_t)v25 >= v23 || (char)*v25 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v95);
          if (!result) {
            return result;
          }
          unsigned int v75 = v95[0];
          int v76 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v23 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v75 = *v25;
          int v76 = v25 + 1;
          *((void *)a2 + 1) = v76;
        }
        *((unsigned char *)this + 97) = v75 != 0;
        int v26 = *((_DWORD *)this + 37) | 0x4000;
        *((_DWORD *)this + 37) = v26;
        if ((int)v23 - (int)v76 < 2 || *v76 != 130 || v76[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v76 + 2;
LABEL_190:
        *((_DWORD *)this + 37) = v26 | 0x8000;
        uint64_t v77 = (CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace *)*((void *)this + 13);
        if (!v77) {
          operator new();
        }
        v95[0] = 0;
        int v78 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v78 >= *((void *)a2 + 2) || *v78 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v95))return 0; {
        }
          }
        else
        {
          v95[0] = *v78;
          *((void *)a2 + 1) = v78 + 1;
        }
        int v79 = *((_DWORD *)a2 + 14);
        int v80 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v79 + 1;
        if (v79 >= v80) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::AccelerometerPace::MergePartialFromCodedStream(v77, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v81 = *((_DWORD *)a2 + 14);
        BOOL v40 = __OFSUB__(v81, 1);
        int v82 = v81 - 1;
        if (v82 < 0 == v40) {
          *((_DWORD *)a2 + 14) = v82;
        }
        unsigned int v83 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v27 = *((void *)a2 + 2);
        if ((int)v27 - (int)v83 <= 1 || *v83 != 136 || v83[1] != 1) {
          continue;
        }
        int v28 = v83 + 2;
        *((void *)a2 + 1) = v28;
LABEL_205:
        if ((unint64_t)v28 >= v27 || (char)*v28 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v7);
          if (!result) {
            return result;
          }
          int v84 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v27 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v7 = *v28;
          int v84 = v28 + 1;
          *((void *)a2 + 1) = v84;
        }
        *((_DWORD *)this + 37) |= 0x10000u;
        if ((int)v27 - (int)v84 < 2 || *v84 != 144 || v84[1] != 1) {
          continue;
        }
        int v29 = v84 + 2;
        *((void *)a2 + 1) = v29;
LABEL_214:
        if ((unint64_t)v29 >= v27 || (char)*v29 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v94);
          if (!result) {
            return result;
          }
          int v85 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v27 = *((void *)a2 + 2);
        }
        else
        {
          *int v94 = *v29;
          int v85 = v29 + 1;
          *((void *)a2 + 1) = v85;
        }
        *((_DWORD *)this + 37) |= 0x20000u;
        if ((int)v27 - (int)v85 < 2 || *v85 != 152 || v85[1] != 1) {
          continue;
        }
        int v30 = v85 + 2;
        *((void *)a2 + 1) = v30;
LABEL_223:
        if ((unint64_t)v30 >= v27 || (char)*v30 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v93);
          if (!result) {
            return result;
          }
          int v86 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v27 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v93 = *v30;
          int v86 = v30 + 1;
          *((void *)a2 + 1) = v86;
        }
        *((_DWORD *)this + 37) |= 0x40000u;
        if ((int)v27 - (int)v86 < 2 || *v86 != 160 || v86[1] != 1) {
          continue;
        }
        int v31 = v86 + 2;
        *((void *)a2 + 1) = v31;
LABEL_232:
        if ((unint64_t)v31 >= v27 || (char)*v31 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v92);
          if (!result) {
            return result;
          }
          int v87 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v27 = *((void *)a2 + 2);
        }
        else
        {
          *int v92 = *v31;
          int v87 = v31 + 1;
          *((void *)a2 + 1) = v87;
        }
        *((_DWORD *)this + 37) |= 0x80000u;
        if ((int)v27 - (int)v87 < 2 || *v87 != 168 || v87[1] != 1) {
          continue;
        }
        unsigned int v32 = v87 + 2;
        *((void *)a2 + 1) = v32;
LABEL_241:
        if ((unint64_t)v32 >= v27 || (char)*v32 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v8);
          if (!result) {
            return result;
          }
          uint64_t v88 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v27 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v8 = *v32;
          uint64_t v88 = v32 + 1;
          *((void *)a2 + 1) = v88;
        }
        *((_DWORD *)this + 37) |= 0x100000u;
        if ((int)v27 - (int)v88 < 2 || *v88 != 176 || v88[1] != 1) {
          continue;
        }
        unsigned int v33 = v88 + 2;
        *((void *)a2 + 1) = v33;
LABEL_250:
        if ((unint64_t)v33 >= v27 || (char)*v33 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v9);
          if (!result) {
            return result;
          }
          unsigned int v89 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v27 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v9 = *v33;
          unsigned int v89 = v33 + 1;
          *((void *)a2 + 1) = v89;
        }
        *((_DWORD *)this + 37) |= 0x200000u;
        if ((int)v27 - (int)v89 < 2 || *v89 != 184 || v89[1] != 1) {
          continue;
        }
        int v34 = (char *)(v89 + 2);
        *((void *)a2 + 1) = v34;
LABEL_259:
        v95[0] = 0;
        if ((unint64_t)v34 >= v27 || *v34 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v95);
          if (!result) {
            return result;
          }
          unsigned int v90 = v95[0];
        }
        else
        {
          unsigned int v90 = *v34;
          *((void *)a2 + 1) = v34 + 1;
        }
        if (v90 <= 5)
        {
          *((_DWORD *)this + 37) |= 0x400000u;
          *((_DWORD *)this + 33) = v90;
        }
        int v91 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v91 < 2 || *v91 != 194 || v91[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v91 + 2;
LABEL_60:
        *((_DWORD *)this + 37) |= 0x800000u;
        int v35 = (CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState *)*((void *)this + 17);
        if (!v35) {
          operator new();
        }
        v95[0] = 0;
        int v36 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v36 >= *((void *)a2 + 2) || *v36 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v95))return 0; {
        }
          }
        else
        {
          v95[0] = *v36;
          *((void *)a2 + 1) = v36 + 1;
        }
        int v37 = *((_DWORD *)a2 + 14);
        int v38 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v37 + 1;
        if (v37 < v38)
        {
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState::MergePartialFromCodedStream(v35, a2))
          {
            if (*((unsigned char *)a2 + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
              int v39 = *((_DWORD *)a2 + 14);
              BOOL v40 = __OFSUB__(v39, 1);
              int v41 = v39 - 1;
              if (v41 < 0 == v40) {
                *((_DWORD *)a2 + 14) = v41;
              }
              if (*((void *)a2 + 1) == *((void *)a2 + 2)
                && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
              {
                *((_DWORD *)a2 + 8) = 0;
                uint64_t result = 1;
                *((unsigned char *)a2 + 36) = 1;
                return result;
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_101;
        }
        goto LABEL_65;
      case 4u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_65;
        }
        uint64_t v16 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_115;
      case 5u:
        int v12 = TagFallback & 7;
        if (v12 == 1) {
          goto LABEL_123;
        }
        goto LABEL_65;
      case 6u:
        int v12 = TagFallback & 7;
        if (v12 == 1) {
          goto LABEL_127;
        }
        goto LABEL_65;
      case 7u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_65;
        }
        uint64_t v18 = (char *)*((void *)a2 + 1);
        unint64_t v17 = *((void *)a2 + 2);
        goto LABEL_131;
      case 8u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_65;
        }
        int v19 = (char *)*((void *)a2 + 1);
        unint64_t v17 = *((void *)a2 + 2);
        goto LABEL_139;
      case 9u:
        int v12 = TagFallback & 7;
        if (v12 == 1) {
          goto LABEL_147;
        }
        goto LABEL_65;
      case 0xAu:
        int v12 = TagFallback & 7;
        if (v12 == 1) {
          goto LABEL_151;
        }
        goto LABEL_65;
      case 0xBu:
        int v12 = TagFallback & 7;
        if (v12 == 1) {
          goto LABEL_155;
        }
        goto LABEL_65;
      case 0xCu:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_65;
        }
        int v21 = (char *)*((void *)a2 + 1);
        unint64_t v20 = *((void *)a2 + 2);
        goto LABEL_159;
      case 0xDu:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_65;
        }
        int v22 = *((_DWORD *)this + 37);
        goto LABEL_167;
      case 0xEu:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_65;
        }
        unsigned int v24 = (char *)*((void *)a2 + 1);
        unint64_t v23 = *((void *)a2 + 2);
        goto LABEL_173;
      case 0xFu:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_65;
        }
        int v25 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v23 = *((void *)a2 + 2);
        goto LABEL_181;
      case 0x10u:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_65;
        }
        int v26 = *((_DWORD *)this + 37);
        goto LABEL_190;
      case 0x11u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_65;
        }
        int v28 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v27 = *((void *)a2 + 2);
        goto LABEL_205;
      case 0x12u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_65;
        }
        int v29 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v27 = *((void *)a2 + 2);
        goto LABEL_214;
      case 0x13u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_65;
        }
        int v30 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v27 = *((void *)a2 + 2);
        goto LABEL_223;
      case 0x14u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_65;
        }
        int v31 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v27 = *((void *)a2 + 2);
        goto LABEL_232;
      case 0x15u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_65;
        }
        unsigned int v32 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v27 = *((void *)a2 + 2);
        goto LABEL_241;
      case 0x16u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_65;
        }
        unsigned int v33 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v27 = *((void *)a2 + 2);
        goto LABEL_250;
      case 0x17u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_65;
        }
        int v34 = (char *)*((void *)a2 + 1);
        unint64_t v27 = *((void *)a2 + 2);
        goto LABEL_259;
      case 0x18u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_60;
        }
        goto LABEL_65;
      default:
        int v12 = TagFallback & 7;
LABEL_65:
        if (v12 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 148);
  if (v6)
  {
    uint64_t v7 = *(void *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 148);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_32;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v8 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::default_instance_ + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_35;
  }
LABEL_32:
  uint64_t v9 = *(void *)(v5 + 24);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v9 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::default_instance_ + 24);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v9, a2, a4);
  int v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_36;
  }
LABEL_35:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_37;
  }
LABEL_36:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_38;
  }
LABEL_37:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(double *)(v5 + 48), a3);
  int v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_39;
  }
LABEL_38:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned int *)(v5 + 44), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_40;
  }
LABEL_39:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned int *)(v5 + 72), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_41;
  }
LABEL_40:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (uint64_t)a2, *(double *)(v5 + 56), a3);
  int v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_42;
  }
LABEL_41:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (uint64_t)a2, *(double *)(v5 + 64), a3);
  int v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_43;
  }
LABEL_42:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, (uint64_t)a2, *(double *)(v5 + 80), a3);
  int v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_44;
  }
LABEL_43:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(unsigned int *)(v5 + 76), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_45;
  }
LABEL_44:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_46;
  }
LABEL_45:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, *(unsigned __int8 *)(v5 + 96), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_47;
  }
LABEL_46:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, *(unsigned __int8 *)(v5 + 97), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_50;
  }
LABEL_47:
  uint64_t v10 = *(void *)(v5 + 104);
  if (!v10)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v10 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::default_instance_ + 104);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, v10, a2, a4);
  int v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 0x10000) == 0)
  {
LABEL_18:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_51;
  }
LABEL_50:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, *(unsigned int *)(v5 + 100), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 0x20000) == 0)
  {
LABEL_19:
    if ((v6 & 0x40000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_52;
  }
LABEL_51:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, *(unsigned int *)(v5 + 112), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 0x40000) == 0)
  {
LABEL_20:
    if ((v6 & 0x80000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_53;
  }
LABEL_52:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, *(unsigned int *)(v5 + 116), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 0x80000) == 0)
  {
LABEL_21:
    if ((v6 & 0x100000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_54;
  }
LABEL_53:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14, *(unsigned int *)(v5 + 120), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 0x100000) == 0)
  {
LABEL_22:
    if ((v6 & 0x200000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_55;
  }
LABEL_54:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x15, *(unsigned int *)(v5 + 124), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 0x200000) == 0)
  {
LABEL_23:
    if ((v6 & 0x400000) == 0) {
      goto LABEL_24;
    }
LABEL_56:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x17, *(unsigned int *)(v5 + 132), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 148) & 0x800000) == 0) {
      return this;
    }
    goto LABEL_57;
  }
LABEL_55:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x16, *(unsigned int *)(v5 + 128), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 148);
  if ((v6 & 0x400000) != 0) {
    goto LABEL_56;
  }
LABEL_24:
  if ((v6 & 0x800000) == 0) {
    return this;
  }
LABEL_57:
  uint64_t v11 = *(void *)(v5 + 136);
  if (!v11)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v11 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::default_instance_ + 136);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x18, v11, a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::ByteSize(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 148);
  if (!(_BYTE)v2)
  {
    uint64_t v4 = 0;
    goto LABEL_55;
  }
  if ((v2 & 1) == 0)
  {
    int v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_24;
    }
    goto LABEL_15;
  }
  uint64_t v5 = *(void *)(this + 8);
  if (!v5)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v5 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::default_instance_ + 8);
  }
  int v6 = *(unsigned __int8 *)(v5 + 36);
  if (*(unsigned char *)(v5 + 36))
  {
    int v7 = (v6 << 31 >> 31) & 9;
    if ((v6 & 2) != 0) {
      v7 += 9;
    }
    if ((v6 & 4) != 0) {
      int v6 = v7 + 9;
    }
    else {
      int v6 = v7;
    }
  }
  *(_DWORD *)(v5 + 32) = v6;
  int v3 = v6 + 2;
  int v2 = *(_DWORD *)(v1 + 148);
  if ((v2 & 2) != 0)
  {
LABEL_15:
    uint64_t v8 = *(void *)(v1 + 16);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      uint64_t v8 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::default_instance_ + 16);
    }
    int v9 = *(unsigned __int8 *)(v8 + 36);
    if (*(unsigned char *)(v8 + 36))
    {
      int v10 = (v9 << 31 >> 31) & 9;
      if ((v9 & 2) != 0) {
        v10 += 9;
      }
      if ((v9 & 4) != 0) {
        int v9 = v10 + 9;
      }
      else {
        int v9 = v10;
      }
    }
    *(_DWORD *)(v8 + 32) = v9;
    v3 += v9 + 2;
    int v2 = *(_DWORD *)(v1 + 148);
  }
LABEL_24:
  if ((v2 & 4) != 0)
  {
    uint64_t v11 = *(void *)(v1 + 24);
    if (!v11)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      uint64_t v11 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::default_instance_ + 24);
    }
    int v12 = *(unsigned __int8 *)(v11 + 36);
    if (*(unsigned char *)(v11 + 36))
    {
      int v13 = (v12 << 31 >> 31) & 9;
      if ((v12 & 2) != 0) {
        v13 += 9;
      }
      if ((v12 & 4) != 0) {
        int v12 = v13 + 9;
      }
      else {
        int v12 = v13;
      }
    }
    *(_DWORD *)(v11 + 32) = v12;
    v3 += v12 + 2;
    int v2 = *(_DWORD *)(v1 + 148);
    if ((v2 & 8) == 0) {
      goto LABEL_40;
    }
    goto LABEL_36;
  }
  if ((v2 & 8) != 0)
  {
LABEL_36:
    uint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 40);
    if (v14 >= 0x80)
    {
      this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14);
      int v2 = *(_DWORD *)(v1 + 148);
    }
    else
    {
      this = 1;
    }
    v3 += this + 1;
  }
LABEL_40:
  unsigned int v15 = v3 + 9;
  if ((v2 & 0x10) == 0) {
    unsigned int v15 = v3;
  }
  if ((v2 & 0x20) != 0) {
    uint64_t v4 = v15 + 9;
  }
  else {
    uint64_t v4 = v15;
  }
  if ((v2 & 0x40) != 0)
  {
    uint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 44);
    if (v16 >= 0x80)
    {
      this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16);
      int v2 = *(_DWORD *)(v1 + 148);
    }
    else
    {
      this = 1;
    }
    uint64_t v4 = (v4 + this + 1);
  }
  if ((v2 & 0x80) != 0)
  {
    unint64_t v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 72);
    if (v17 >= 0x80)
    {
      this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17);
      int v2 = *(_DWORD *)(v1 + 148);
    }
    else
    {
      this = 1;
    }
    uint64_t v4 = (v4 + this + 1);
  }
LABEL_55:
  if ((v2 & 0xFF00) != 0)
  {
    unsigned int v18 = v4 + 9;
    if ((v2 & 0x100) == 0) {
      unsigned int v18 = v4;
    }
    if ((v2 & 0x200) != 0) {
      v18 += 9;
    }
    if ((v2 & 0x400) != 0) {
      unsigned int v19 = v18 + 9;
    }
    else {
      unsigned int v19 = v18;
    }
    if ((v2 & 0x800) != 0)
    {
      unint64_t v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 76);
      if ((v20 & 0x80000000) != 0)
      {
        this = 10;
      }
      else if (v20 >= 0x80)
      {
        this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20);
        int v2 = *(_DWORD *)(v1 + 148);
      }
      else
      {
        this = 1;
      }
      v19 += this + 1;
    }
    if ((v2 & 0x1000) != 0)
    {
      uint64_t v21 = *(void *)(v1 + 88);
      int v22 = *(unsigned __int8 *)(v21 + 23);
      char v23 = v22;
      uint64_t v24 = *(void *)(v21 + 8);
      if ((v22 & 0x80u) == 0) {
        unint64_t v25 = *(unsigned __int8 *)(v21 + 23);
      }
      else {
        unint64_t v25 = v24;
      }
      if (v25 >= 0x80)
      {
        this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v25);
        int v22 = *(unsigned __int8 *)(v21 + 23);
        uint64_t v24 = *(void *)(v21 + 8);
        int v2 = *(_DWORD *)(v1 + 148);
        char v23 = *(unsigned char *)(v21 + 23);
      }
      else
      {
        this = 1;
      }
      if (v23 < 0) {
        int v22 = v24;
      }
      v19 += this + v22 + 1;
    }
    unsigned int v26 = v19 + 2;
    if ((v2 & 0x2000) == 0) {
      unsigned int v26 = v19;
    }
    if ((v2 & 0x4000) != 0) {
      uint64_t v4 = v26 + 2;
    }
    else {
      uint64_t v4 = v26;
    }
    if ((v2 & 0x8000) != 0)
    {
      uint64_t v27 = *(void *)(v1 + 104);
      if (!v27)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
        uint64_t v27 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::default_instance_ + 104);
      }
      int v28 = *(unsigned __int8 *)(v27 + 36);
      int v29 = (v28 << 31 >> 31) & 9;
      if ((v28 & 2) != 0) {
        v29 += 9;
      }
      if ((v28 & 4) != 0) {
        v29 += 9;
      }
      if (*(unsigned char *)(v27 + 36)) {
        int v30 = v29;
      }
      else {
        int v30 = 0;
      }
      *(_DWORD *)(v27 + 32) = v30;
      uint64_t v4 = (v4 + v30 + 3);
      int v2 = *(_DWORD *)(v1 + 148);
    }
  }
  if ((v2 & 0xFF0000) != 0)
  {
    if ((v2 & 0x10000) != 0)
    {
      int v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 100);
      if (v31 >= 0x80)
      {
        int v32 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v31);
        int v2 = *(_DWORD *)(v1 + 148);
      }
      else
      {
        int v32 = 1;
      }
      uint64_t v4 = (v4 + v32 + 2);
      if ((v2 & 0x20000) == 0)
      {
LABEL_99:
        if ((v2 & 0x40000) == 0) {
          goto LABEL_100;
        }
        goto LABEL_114;
      }
    }
    else if ((v2 & 0x20000) == 0)
    {
      goto LABEL_99;
    }
    unsigned int v33 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 112);
    if (v33 >= 0x80)
    {
      int v34 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v33) + 2;
      int v2 = *(_DWORD *)(v1 + 148);
    }
    else
    {
      int v34 = 3;
    }
    uint64_t v4 = (v34 + v4);
    if ((v2 & 0x40000) == 0)
    {
LABEL_100:
      if ((v2 & 0x80000) == 0) {
        goto LABEL_101;
      }
      goto LABEL_118;
    }
LABEL_114:
    int v35 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 116);
    if (v35 >= 0x80)
    {
      int v36 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v35) + 2;
      int v2 = *(_DWORD *)(v1 + 148);
    }
    else
    {
      int v36 = 3;
    }
    uint64_t v4 = (v36 + v4);
    if ((v2 & 0x80000) == 0)
    {
LABEL_101:
      if ((v2 & 0x100000) == 0) {
        goto LABEL_102;
      }
      goto LABEL_122;
    }
LABEL_118:
    int v37 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 120);
    if (v37 >= 0x80)
    {
      int v38 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v37) + 2;
      int v2 = *(_DWORD *)(v1 + 148);
    }
    else
    {
      int v38 = 3;
    }
    uint64_t v4 = (v38 + v4);
    if ((v2 & 0x100000) == 0)
    {
LABEL_102:
      if ((v2 & 0x200000) == 0) {
        goto LABEL_103;
      }
      goto LABEL_126;
    }
LABEL_122:
    int v39 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 124);
    if (v39 >= 0x80)
    {
      int v40 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v39) + 2;
      int v2 = *(_DWORD *)(v1 + 148);
    }
    else
    {
      int v40 = 3;
    }
    uint64_t v4 = (v40 + v4);
    if ((v2 & 0x200000) == 0)
    {
LABEL_103:
      if ((v2 & 0x400000) == 0) {
        goto LABEL_104;
      }
      goto LABEL_130;
    }
LABEL_126:
    int v41 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 128);
    if (v41 >= 0x80)
    {
      int v42 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v41) + 2;
      int v2 = *(_DWORD *)(v1 + 148);
    }
    else
    {
      int v42 = 3;
    }
    uint64_t v4 = (v42 + v4);
    if ((v2 & 0x400000) == 0)
    {
LABEL_104:
      if ((v2 & 0x800000) == 0) {
        goto LABEL_139;
      }
LABEL_136:
      int v45 = *(CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState **)(v1 + 136);
      if (!v45)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(0);
        int v45 = *(CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState **)(CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::default_instance_
                                                                                     + 136);
      }
      uint64_t v4 = v4
         + CoreNavigation::CLP::LogEntry::PrivateData::FalseStepDetectorState::ByteSize(v45)
         + 3;
      goto LABEL_139;
    }
LABEL_130:
    int v43 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v1 + 132);
    if ((v43 & 0x80000000) != 0)
    {
      int v44 = 12;
    }
    else if (v43 >= 0x80)
    {
      int v44 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v43) + 2;
      int v2 = *(_DWORD *)(v1 + 148);
    }
    else
    {
      int v44 = 3;
    }
    uint64_t v4 = (v44 + v4);
    if ((v2 & 0x800000) == 0) {
      goto LABEL_139;
    }
    goto LABEL_136;
  }
LABEL_139:
  *(_DWORD *)(v1 + 144) = v4;
  return v4;
}

void CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry *this, const CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::Swap(CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry *this, CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    uint64_t v3 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    uint64_t v4 = *((void *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v4;
    LODWORD(v4) = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v4;
    uint64_t v5 = *((void *)this + 4);
    *((void *)this + 4) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v5;
    uint64_t v6 = *((void *)this + 6);
    *((void *)this + 6) = *((void *)a2 + 6);
    *((void *)a2 + 6) = v6;
    LODWORD(v4) = *((_DWORD *)this + 11);
    *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v4;
    LODWORD(v4) = *((_DWORD *)this + 18);
    *((_DWORD *)this + 18) = *((_DWORD *)a2 + 18);
    *((_DWORD *)a2 + 18) = v4;
    uint64_t v7 = *((void *)this + 7);
    *((void *)this + 7) = *((void *)a2 + 7);
    *((void *)a2 + 7) = v7;
    uint64_t v8 = *((void *)this + 8);
    *((void *)this + 8) = *((void *)a2 + 8);
    *((void *)a2 + 8) = v8;
    double result = *((double *)this + 10);
    *((void *)this + 10) = *((void *)a2 + 10);
    *((double *)a2 + 10) = result;
    LODWORD(v4) = *((_DWORD *)this + 19);
    *((_DWORD *)this + 19) = *((_DWORD *)a2 + 19);
    *((_DWORD *)a2 + 19) = v4;
    uint64_t v10 = *((void *)this + 11);
    *((void *)this + 11) = *((void *)a2 + 11);
    *((void *)a2 + 11) = v10;
    LOBYTE(v10) = *((unsigned char *)this + 96);
    *((unsigned char *)this + 96) = *((unsigned char *)a2 + 96);
    *((unsigned char *)a2 + 96) = v10;
    LOBYTE(v10) = *((unsigned char *)this + 97);
    *((unsigned char *)this + 97) = *((unsigned char *)a2 + 97);
    *((unsigned char *)a2 + 97) = v10;
    uint64_t v11 = *((void *)this + 13);
    *((void *)this + 13) = *((void *)a2 + 13);
    *((void *)a2 + 13) = v11;
    LODWORD(v11) = *((_DWORD *)this + 25);
    *((_DWORD *)this + 25) = *((_DWORD *)a2 + 25);
    *((_DWORD *)a2 + 25) = v11;
    LODWORD(v11) = *((_DWORD *)this + 28);
    *((_DWORD *)this + 28) = *((_DWORD *)a2 + 28);
    *((_DWORD *)a2 + 28) = v11;
    LODWORD(v11) = *((_DWORD *)this + 29);
    *((_DWORD *)this + 29) = *((_DWORD *)a2 + 29);
    *((_DWORD *)a2 + 29) = v11;
    LODWORD(v11) = *((_DWORD *)this + 30);
    *((_DWORD *)this + 30) = *((_DWORD *)a2 + 30);
    *((_DWORD *)a2 + 30) = v11;
    LODWORD(v11) = *((_DWORD *)this + 31);
    *((_DWORD *)this + 31) = *((_DWORD *)a2 + 31);
    *((_DWORD *)a2 + 31) = v11;
    LODWORD(v11) = *((_DWORD *)this + 32);
    *((_DWORD *)this + 32) = *((_DWORD *)a2 + 32);
    *((_DWORD *)a2 + 32) = v11;
    LODWORD(v11) = *((_DWORD *)this + 33);
    *((_DWORD *)this + 33) = *((_DWORD *)a2 + 33);
    *((_DWORD *)a2 + 33) = v11;
    uint64_t v12 = *((void *)this + 17);
    *((void *)this + 17) = *((void *)a2 + 17);
    *((void *)a2 + 17) = v12;
    LODWORD(v12) = *((_DWORD *)this + 37);
    *((_DWORD *)this + 37) = *((_DWORD *)a2 + 37);
    *((_DWORD *)a2 + 37) = v12;
    LODWORD(v12) = *((_DWORD *)this + 36);
    *((_DWORD *)this + 36) = *((_DWORD *)a2 + 36);
    *((_DWORD *)a2 + 36) = v12;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.StepCountEntry");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::StepCount::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(_DWORD *)(this + 32) = 0;
  *(void *)(this + 24) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::StepCount *CoreNavigation::CLP::LogEntry::PrivateData::StepCount::StepCount(CoreNavigation::CLP::LogEntry::PrivateData::StepCount *this, const CoreNavigation::CLP::LogEntry::PrivateData::StepCount *a2)
{
  *(void *)this = &unk_1EDD0F110;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::StepCount::MergeFrom(this, a2);
  return this;
}

void sub_18DF8EA44(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::StepCount::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::StepCount *this, const CoreNavigation::CLP::LogEntry::PrivateData::StepCount *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 32);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 32))
    {
      *((_DWORD *)this + 8) |= 1u;
      uint64_t v5 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
      if (!v5) {
        operator new();
      }
      uint64_t v6 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)a2 + 1);
      if (!v6)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
        uint64_t v6 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::StepCount::default_instance_
                                                                             + 8);
      }
      CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v5, v6);
      int v4 = *((_DWORD *)a2 + 8);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          return;
        }
        goto LABEL_14;
      }
    }
    else if ((*((unsigned char *)a2 + 32) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v7 = *((_DWORD *)a2 + 6);
    *((_DWORD *)this + 8) |= 2u;
    *((_DWORD *)this + 6) = v7;
    if ((*((_DWORD *)a2 + 8) & 4) == 0) {
      return;
    }
LABEL_14:
    *((_DWORD *)this + 8) |= 4u;
    uint64_t v8 = (CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry *)*((void *)this + 2);
    if (!v8) {
      operator new();
    }
    int v9 = (const CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry *)*((void *)a2 + 2);
    if (!v9)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      int v9 = *(const CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry **)(CoreNavigation::CLP::LogEntry::PrivateData::StepCount::default_instance_
                                                                                + 16);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::MergeFrom(v8, v9);
  }
}

void sub_18DF8EC30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::StepCount::~StepCount(CoreNavigation::CLP::LogEntry::PrivateData::StepCount *this)
{
  *(void *)this = &unk_1EDD0F110;
  CoreNavigation::CLP::LogEntry::PrivateData::StepCount::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::StepCount::~StepCount(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::PrivateData::StepCount::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::StepCount *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::StepCount *)CoreNavigation::CLP::LogEntry::PrivateData::StepCount::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 2);
    if (v3)
    {
      int v4 = *(void (**)(void))(*(void *)v3 + 8);
      v4();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::StepCount::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::StepCount *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::StepCount::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::StepCount::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 28) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::StepCount::New(CoreNavigation::CLP::LogEntry::PrivateData::StepCount *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::StepCount::Clear(uint64_t this)
{
  uint64_t v1 = this;
  LOBYTE(v2) = *(unsigned char *)(this + 32);
  if ((_BYTE)v2)
  {
    if (*(unsigned char *)(this + 32))
    {
      uint64_t v3 = *(void *)(this + 8);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
          *(void *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        int v2 = *(_DWORD *)(this + 32);
      }
    }
    *(_DWORD *)(this + 24) = 0;
    if ((v2 & 4) != 0)
    {
      this = *(void *)(this + 16);
      if (this) {
        this = CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::Clear(this);
      }
    }
  }
  *(_DWORD *)(v1 + 32) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::StepCount::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::StepCount *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (1)
  {
    do
    {
      while (1)
      {
        while (1)
        {
          int v4 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
          {
            unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
            *((_DWORD *)a2 + 8) = TagFallback;
            if (!TagFallback) {
              return 1;
            }
          }
          else
          {
            unint64_t TagFallback = *v4;
            *((_DWORD *)a2 + 8) = TagFallback;
            *((void *)a2 + 1) = v4 + 1;
            if (!TagFallback) {
              return 1;
            }
          }
          unsigned int v6 = TagFallback >> 3;
          if (TagFallback >> 3 != 1) {
            break;
          }
          int v7 = TagFallback & 7;
          if (v7 != 2) {
            goto LABEL_20;
          }
          *((_DWORD *)this + 8) |= 1u;
          int v9 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
          if (!v9) {
            operator new();
          }
          unsigned int v29 = 0;
          uint64_t v10 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v29))return 0; {
          }
            }
          else
          {
            unsigned int v29 = *v10;
            *((void *)a2 + 1) = v10 + 1;
          }
          int v13 = *((_DWORD *)a2 + 14);
          int v14 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v13 + 1;
          if (v13 >= v14) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream(v9, a2)
            || !*((unsigned char *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          int v15 = *((_DWORD *)a2 + 14);
          BOOL v16 = __OFSUB__(v15, 1);
          int v17 = v15 - 1;
          if (v17 < 0 == v16) {
            *((_DWORD *)a2 + 14) = v17;
          }
          unsigned int v18 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v11 = *((void *)a2 + 2);
          if ((unint64_t)v18 < v11 && *v18 == 16)
          {
            uint64_t v12 = v18 + 1;
            *((void *)a2 + 1) = v12;
            goto LABEL_32;
          }
        }
        if (v6 == 2) {
          break;
        }
        if (v6 == 3)
        {
          int v7 = TagFallback & 7;
          if (v7 == 2)
          {
            int v8 = *((_DWORD *)this + 8);
            goto LABEL_40;
          }
        }
        else
        {
          int v7 = TagFallback & 7;
        }
LABEL_20:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
      }
        }
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_20;
      }
      uint64_t v12 = (char *)*((void *)a2 + 1);
      unint64_t v11 = *((void *)a2 + 2);
LABEL_32:
      unsigned int v28 = 0;
      if ((unint64_t)v12 >= v11 || *v12 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v28);
        if (!result) {
          return result;
        }
        unsigned int v19 = v28;
        unint64_t v20 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
      }
      else
      {
        unsigned int v19 = *v12;
        unint64_t v20 = v12 + 1;
        *((void *)a2 + 1) = v20;
      }
      *((_DWORD *)this + 6) = v19;
      int v8 = *((_DWORD *)this + 8) | 2;
      *((_DWORD *)this + 8) = v8;
    }
    while ((unint64_t)v20 >= v11 || *v20 != 26);
    *((void *)a2 + 1) = v20 + 1;
LABEL_40:
    *((_DWORD *)this + 8) = v8 | 4;
    int v22 = (CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry *)*((void *)this + 2);
    if (!v22) {
      operator new();
    }
    unsigned int v30 = 0;
    char v23 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v23 >= *((void *)a2 + 2) || *v23 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30)) {
        return 0;
      }
    }
    else
    {
      unsigned int v30 = *v23;
      *((void *)a2 + 1) = v23 + 1;
    }
    int v24 = *((_DWORD *)a2 + 14);
    int v25 = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 14) = v24 + 1;
    if (v24 >= v25) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
    if (!CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::MergePartialFromCodedStream(v22, a2)
      || !*((unsigned char *)a2 + 36))
    {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
    int v26 = *((_DWORD *)a2 + 14);
    BOOL v16 = __OFSUB__(v26, 1);
    int v27 = v26 - 1;
    if (v27 < 0 == v16) {
      *((_DWORD *)a2 + 14) = v27;
    }
    if (*((void *)a2 + 1) == *((void *)a2 + 2)
      && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
    {
      *((_DWORD *)a2 + 8) = 0;
      uint64_t result = 1;
      *((unsigned char *)a2 + 36) = 1;
      return result;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::StepCount::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 32);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_8:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 32) & 4) == 0) {
      return this;
    }
    goto LABEL_9;
  }
  uint64_t v7 = *(void *)(this + 8);
  if (!v7)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::StepCount::default_instance_ + 8);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
  int v6 = *(_DWORD *)(v5 + 32);
  if ((v6 & 2) != 0) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return this;
  }
LABEL_9:
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v8 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::StepCount::default_instance_ + 16);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::StepCount::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::StepCount *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 32);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_28;
  }
  if (*((unsigned char *)this + 32))
  {
    uint64_t v4 = *((void *)this + 1);
    if (!v4)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      uint64_t v4 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::StepCount::default_instance_ + 8);
    }
    int v5 = *(unsigned __int8 *)(v4 + 36);
    if (*(unsigned char *)(v4 + 36))
    {
      int v6 = (v5 << 31 >> 31) & 9;
      if ((v5 & 2) != 0) {
        v6 += 9;
      }
      if ((v5 & 4) != 0) {
        int v5 = v6 + 9;
      }
      else {
        int v5 = v6;
      }
    }
    *(_DWORD *)(v4 + 32) = v5;
    uint64_t v3 = (v5 + 2);
    int v2 = *((_DWORD *)this + 8);
    if ((v2 & 2) == 0) {
      goto LABEL_21;
    }
  }
  else
  {
    uint64_t v3 = 0;
    if ((*((unsigned char *)this + 32) & 2) == 0) {
      goto LABEL_21;
    }
  }
  uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  if ((v7 & 0x80000000) != 0)
  {
    int v8 = 11;
  }
  else if (v7 >= 0x80)
  {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7) + 1;
    int v2 = *((_DWORD *)this + 8);
  }
  else
  {
    int v8 = 2;
  }
  uint64_t v3 = (v8 + v3);
LABEL_21:
  if ((v2 & 4) != 0)
  {
    uint64_t v9 = *((void *)this + 2);
    if (!v9)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(0);
      uint64_t v9 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::StepCount::default_instance_ + 16);
    }
    uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::StepCountEntry::ByteSize(v9);
    int v11 = (int)v10;
    if (v10 >= 0x80) {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
    }
    else {
      int v12 = 1;
    }
    uint64_t v3 = (v3 + v11 + v12 + 1);
  }
LABEL_28:
  *((_DWORD *)this + 7) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::PrivateData::StepCount::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::StepCount *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::StepCount::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::StepCount::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::StepCount *this, const CoreNavigation::CLP::LogEntry::PrivateData::StepCount *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::StepCount *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::StepCount::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::StepCount::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::StepCount *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::StepCount::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::StepCount *a2)
{
  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::StepCount *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    uint64_t v3 = *(void *)(this + 16);
    *(void *)(this + 16) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v3;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::StepCount::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.StepCount");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::MotionTypeVector3(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *this, const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *a2)
{
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)this = &unk_1EDD0CDE8;
  *((_DWORD *)this + 6) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::MergeFrom(this, a2);
  return this;
}

void sub_18DF8F5E8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

float CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *this, const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 24);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 24))
    {
      float result = *((float *)a2 + 2);
      *((_DWORD *)this + 6) |= 1u;
      *((float *)this + 2) = result;
      int v5 = *((_DWORD *)a2 + 6);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          return result;
        }
        goto LABEL_7;
      }
    }
    else if ((*((unsigned char *)a2 + 24) & 2) == 0)
    {
      goto LABEL_6;
    }
    float result = *((float *)a2 + 3);
    *((_DWORD *)this + 6) |= 2u;
    *((float *)this + 3) = result;
    if ((*((_DWORD *)a2 + 6) & 4) == 0) {
      return result;
    }
LABEL_7:
    float result = *((float *)a2 + 4);
    *((_DWORD *)this + 6) |= 4u;
    *((float *)this + 4) = result;
  }
  return result;
}

void sub_18DF8F6D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::~MotionTypeVector3(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *this)
{
  *(void *)this = &unk_1EDD0CDE8;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::~MotionTypeVector3(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::New(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 24))
  {
    *(void *)(this + 8) = 0;
    *(_DWORD *)(this + 16) = 0;
  }
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v4 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v4;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((void *)a2 + 1) = v4 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v6 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v7 = TagFallback & 7;
        if (v7 != 5) {
          goto LABEL_27;
        }
        unsigned int v13 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v13) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 2) = v13;
        *((_DWORD *)this + 6) |= 1u;
        int v8 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v8 < *((void *)a2 + 2) && *v8 == 21)
        {
          *((void *)a2 + 1) = v8 + 1;
LABEL_17:
          unsigned int v12 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v12) & 1) == 0) {
            return 0;
          }
          *((_DWORD *)this + 3) = v12;
          *((_DWORD *)this + 6) |= 2u;
          uint64_t v9 = (unsigned char *)*((void *)a2 + 1);
          if ((unint64_t)v9 < *((void *)a2 + 2) && *v9 == 29)
          {
            *((void *)a2 + 1) = v9 + 1;
            goto LABEL_21;
          }
        }
      }
      if (v6 == 2)
      {
        int v7 = TagFallback & 7;
        if (v7 != 5) {
          goto LABEL_27;
        }
        goto LABEL_17;
      }
      if (v6 != 3)
      {
        int v7 = TagFallback & 7;
        goto LABEL_27;
      }
      int v7 = TagFallback & 7;
      if (v7 == 5) {
        break;
      }
LABEL_27:
      if (v7 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
    }
      }
LABEL_21:
    unsigned int v11 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v11) & 1) == 0) {
      return 0;
    }
    *((_DWORD *)this + 4) = v11;
    *((_DWORD *)this + 6) |= 4u;
  }
  while (*((void *)a2 + 1) != *((void *)a2 + 2)
       || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10));
  *((_DWORD *)a2 + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)a2 + 36) = 1;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = this;
  int v5 = *(_DWORD *)(this + 24);
  if ((v5 & 1) == 0)
  {
    if ((v5 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(float *)(v4 + 12), a3);
    if ((*(_DWORD *)(v4 + 24) & 4) == 0) {
      return this;
    }
    goto LABEL_7;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(float *)(this + 8), a3);
  int v5 = *(_DWORD *)(v4 + 24);
  if ((v5 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 4) == 0) {
    return this;
  }
LABEL_7:
  float v6 = *(float *)(v4 + 16);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, v6, a3);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *this)
{
  uint64_t v1 = *((unsigned __int8 *)this + 24);
  if (*((unsigned char *)this + 24))
  {
    unsigned int v2 = ((int)(v1 << 31) >> 31) & 5;
    if ((v1 & 2) != 0) {
      v2 += 5;
    }
    if ((v1 & 4) != 0) {
      uint64_t v1 = v2 + 5;
    }
    else {
      uint64_t v1 = v2;
    }
  }
  *((_DWORD *)this + 5) = v1;
  return v1;
}

float CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::MergeFrom(this, lpsrc);
}

float CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *this, const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *this)
{
  return 1;
}

float CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::Swap(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *this, CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *a2)
{
  if (a2 != this)
  {
    int v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    int v3 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    float result = *((float *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((float *)a2 + 4) = result;
    int v5 = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v5;
    int v6 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v6;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.MotionTypeVector3");
}

double CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 *this)
{
  *((void *)this + 5) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 *CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::MotionTypeDoubleVector4(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 *this, const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 *a2)
{
  *(void *)this = &unk_1EDD0DE50;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((void *)this + 5) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::MergeFrom(this, a2);
  return this;
}

void sub_18DF8FCBC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 *this, const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 44);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 44))
    {
      double result = *((double *)a2 + 1);
      *((_DWORD *)this + 11) |= 1u;
      *((double *)this + 1) = result;
      int v5 = *((_DWORD *)a2 + 11);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_12;
      }
    }
    else if ((*((unsigned char *)a2 + 44) & 2) == 0)
    {
      goto LABEL_6;
    }
    double result = *((double *)a2 + 2);
    *((_DWORD *)this + 11) |= 2u;
    *((double *)this + 2) = result;
    int v5 = *((_DWORD *)a2 + 11);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        return result;
      }
      goto LABEL_8;
    }
LABEL_12:
    double result = *((double *)a2 + 3);
    *((_DWORD *)this + 11) |= 4u;
    *((double *)this + 3) = result;
    if ((*((_DWORD *)a2 + 11) & 8) == 0) {
      return result;
    }
LABEL_8:
    double result = *((double *)a2 + 4);
    *((_DWORD *)this + 11) |= 8u;
    *((double *)this + 4) = result;
  }
  return result;
}

void sub_18DF8FDC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::~MotionTypeDoubleVector4(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 *this)
{
  *(void *)this = &unk_1EDD0DE50;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::~MotionTypeDoubleVector4(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 40) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::New(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 44))
  {
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 8) = 0u;
  }
  *(_DWORD *)(this + 44) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (2)
  {
    uint64_t v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_29;
        }
        unint64_t v11 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0) {
          return 0;
        }
        *((void *)this + 1) = v11;
        *((_DWORD *)this + 11) |= 1u;
        int v7 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v7 >= *((void *)a2 + 2) || *v7 != 17) {
          continue;
        }
        *((void *)a2 + 1) = v7 + 1;
        goto LABEL_14;
      case 2u:
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_29;
        }
LABEL_14:
        unint64_t v11 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0) {
          return 0;
        }
        *((void *)this + 2) = v11;
        *((_DWORD *)this + 11) |= 2u;
        int v8 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 != 25) {
          continue;
        }
        *((void *)a2 + 1) = v8 + 1;
LABEL_19:
        unint64_t v11 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0) {
          return 0;
        }
        *((void *)this + 3) = v11;
        *((_DWORD *)this + 11) |= 4u;
        uint64_t v9 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v9 >= *((void *)a2 + 2) || *v9 != 33) {
          continue;
        }
        *((void *)a2 + 1) = v9 + 1;
LABEL_24:
        unint64_t v11 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0) {
          return 0;
        }
        *((void *)this + 4) = v11;
        *((_DWORD *)this + 11) |= 8u;
        if (*((void *)a2 + 1) != *((void *)a2 + 2)
          || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
        {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        break;
      case 3u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_19;
        }
        goto LABEL_29;
      case 4u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_24;
        }
        goto LABEL_29;
      default:
        int v6 = TagFallback & 7;
LABEL_29:
        if (v6 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
    return result;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = this;
  int v5 = *(_DWORD *)(this + 44);
  if (v5)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
    int v5 = *(_DWORD *)(v4 + 44);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v4 + 24), a3);
      if ((*(_DWORD *)(v4 + 44) & 8) == 0) {
        return this;
      }
      goto LABEL_9;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v4 + 16), a3);
  int v5 = *(_DWORD *)(v4 + 44);
  if ((v5 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v5 & 8) == 0) {
    return this;
  }
LABEL_9:
  double v6 = *(double *)(v4 + 32);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, v6, a3);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 *this)
{
  uint64_t v1 = *((unsigned __int8 *)this + 44);
  if (*((unsigned char *)this + 44))
  {
    unsigned int v2 = ((int)(v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0) {
      v2 += 9;
    }
    if ((v1 & 4) != 0) {
      v2 += 9;
    }
    if ((v1 & 8) != 0) {
      uint64_t v1 = v2 + 9;
    }
    else {
      uint64_t v1 = v2;
    }
  }
  *((_DWORD *)this + 10) = v1;
  return v1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 *this, const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 *))(*(void *)this
                                                                                                  + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::Swap(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 *this, CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    uint64_t v3 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    uint64_t v4 = *((void *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v4;
    double result = *((double *)this + 4);
    *((void *)this + 4) = *((void *)a2 + 4);
    *((double *)a2 + 4) = result;
    int v6 = *((_DWORD *)this + 11);
    *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v6;
    int v7 = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v7;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.MotionTypeDoubleVector4");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  *(void *)(this + 32) = 0xFFFFFFFF00000000;
  *(unsigned char *)(this + 40) = 0;
  *(void *)(this + 64) = 0;
  *(void *)(this + 52) = 0;
  *(void *)(this + 44) = 0;
  *(_DWORD *)(this + 60) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass *CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::MotionTypeCompass(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass *this, const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass *a2)
{
  *(void *)this = &unk_1EDD0CD70;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((void *)this + 4) = 0xFFFFFFFF00000000;
  *((unsigned char *)this + 40) = 0;
  *((void *)this + 8) = 0;
  *(void *)((char *)this + 52) = 0;
  *(void *)((char *)this + 44) = 0;
  *((_DWORD *)this + 15) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::MergeFrom(this, a2);
  return this;
}

void sub_18DF904A4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass *this, const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
  }
  int v5 = *((_DWORD *)a2 + 17);
  if ((_BYTE)v5)
  {
    if (v5)
    {
      *((_DWORD *)this + 17) |= 1u;
      int v7 = (CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *)*((void *)this + 1);
      if (!v7) {
        operator new();
      }
      int v8 = (const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *)*((void *)a2 + 1);
      if (!v8)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
        int v8 = *(const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 **)(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::default_instance_
                                                                                     + 8);
      }
      *(float *)&double result = CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::MergeFrom(v7, v8);
      int v5 = *((_DWORD *)a2 + 17);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_29;
      }
    }
    else if ((v5 & 2) == 0)
    {
      goto LABEL_6;
    }
    *((_DWORD *)this + 17) |= 2u;
    uint64_t v9 = (CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *)*((void *)this + 2);
    if (!v9) {
      operator new();
    }
    uint64_t v10 = (const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *)*((void *)a2 + 2);
    if (!v10)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      uint64_t v10 = *(const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 **)(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::default_instance_
                                                                                    + 16);
    }
    *(float *)&double result = CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::MergeFrom(v9, v10);
    int v5 = *((_DWORD *)a2 + 17);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_30;
    }
LABEL_29:
    LODWORD(result) = *((_DWORD *)a2 + 6);
    *((_DWORD *)this + 17) |= 4u;
    *((_DWORD *)this + 6) = LODWORD(result);
    int v5 = *((_DWORD *)a2 + 17);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_31;
    }
LABEL_30:
    LODWORD(result) = *((_DWORD *)a2 + 7);
    *((_DWORD *)this + 17) |= 8u;
    *((_DWORD *)this + 7) = LODWORD(result);
    int v5 = *((_DWORD *)a2 + 17);
    if ((v5 & 0x10) == 0)
    {
LABEL_9:
      if ((v5 & 0x20) == 0) {
        goto LABEL_10;
      }
      goto LABEL_32;
    }
LABEL_31:
    LODWORD(result) = *((_DWORD *)a2 + 8);
    *((_DWORD *)this + 17) |= 0x10u;
    *((_DWORD *)this + 8) = LODWORD(result);
    int v5 = *((_DWORD *)a2 + 17);
    if ((v5 & 0x20) == 0)
    {
LABEL_10:
      if ((v5 & 0x40) == 0) {
        goto LABEL_12;
      }
      goto LABEL_11;
    }
LABEL_32:
    int v11 = *((_DWORD *)a2 + 9);
    if ((v11 + 1) >= 8) {
      __assert_rtn("set_calibration_level", "CoreNavigationCLPPrivateDataShared.pb.h", 23627, "::CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompassCalibrationLevel_IsValid(value)");
    }
    *((_DWORD *)this + 17) |= 0x20u;
    *((_DWORD *)this + 9) = v11;
    int v5 = *((_DWORD *)a2 + 17);
    if ((v5 & 0x40) == 0) {
      goto LABEL_12;
    }
LABEL_11:
    char v6 = *((unsigned char *)a2 + 40);
    *((_DWORD *)this + 17) |= 0x40u;
    *((unsigned char *)this + 40) = v6;
    int v5 = *((_DWORD *)a2 + 17);
LABEL_12:
    if ((v5 & 0x80) != 0)
    {
      LODWORD(result) = *((_DWORD *)a2 + 11);
      *((_DWORD *)this + 17) |= 0x80u;
      *((_DWORD *)this + 11) = LODWORD(result);
      int v5 = *((_DWORD *)a2 + 17);
    }
  }
  if ((v5 & 0xFF00) == 0) {
    return result;
  }
  if ((v5 & 0x100) == 0)
  {
    if ((v5 & 0x200) == 0) {
      goto LABEL_17;
    }
LABEL_36:
    LODWORD(result) = *((_DWORD *)a2 + 13);
    *((_DWORD *)this + 17) |= 0x200u;
    *((_DWORD *)this + 13) = LODWORD(result);
    if ((*((_DWORD *)a2 + 17) & 0x400) == 0) {
      return result;
    }
    goto LABEL_37;
  }
  LODWORD(result) = *((_DWORD *)a2 + 12);
  *((_DWORD *)this + 17) |= 0x100u;
  *((_DWORD *)this + 12) = LODWORD(result);
  int v5 = *((_DWORD *)a2 + 17);
  if ((v5 & 0x200) != 0) {
    goto LABEL_36;
  }
LABEL_17:
  if ((v5 & 0x400) == 0) {
    return result;
  }
LABEL_37:
  *((_DWORD *)this + 17) |= 0x400u;
  unsigned int v12 = (CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 *)*((void *)this + 7);
  if (!v12) {
    operator new();
  }
  unsigned int v13 = (const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 *)*((void *)a2 + 7);
  if (!v13)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    unsigned int v13 = *(const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 **)(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::default_instance_
                                                                                        + 56);
  }
  return CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::MergeFrom(v12, v13);
}

void sub_18DF907FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::~MotionTypeCompass(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass *this)
{
  *(void *)this = &unk_1EDD0CD70;
  CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::~MotionTypeCompass(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass *)CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 2);
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = *((void *)this + 7);
    if (v4)
    {
      int v5 = *(void (**)(void))(*(void *)v4 + 8);
      v5();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 64) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::New(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 68);
  if ((_BYTE)v1)
  {
    if (v1)
    {
      uint64_t v2 = *(void *)(this + 8);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 24))
        {
          *(void *)(v2 + 8) = 0;
          *(_DWORD *)(v2 + 16) = 0;
        }
        *(_DWORD *)(v2 + 24) = 0;
        int v1 = *(_DWORD *)(this + 68);
      }
    }
    if ((v1 & 2) != 0)
    {
      uint64_t v3 = *(void *)(this + 16);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 24))
        {
          *(void *)(v3 + 8) = 0;
          *(_DWORD *)(v3 + 16) = 0;
        }
        *(_DWORD *)(v3 + 24) = 0;
        int v1 = *(_DWORD *)(this + 68);
      }
    }
    *(void *)(this + 24) = 0;
    *(void *)(this + 32) = 0xFFFFFFFF00000000;
    *(unsigned char *)(this + 40) = 0;
    *(_DWORD *)(this + 44) = 0;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(void *)(this + 48) = 0;
    if ((v1 & 0x400) != 0)
    {
      uint64_t v4 = *(void *)(this + 56);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 44))
        {
          *(_OWORD *)(v4 + 24) = 0u;
          *(_OWORD *)(v4 + 8) = 0u;
        }
        *(_DWORD *)(v4 + 44) = 0;
      }
    }
  }
  *(_DWORD *)(this + 68) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (2)
  {
    uint64_t v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_34;
        }
        *((_DWORD *)this + 17) |= 1u;
        int v7 = (CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *)*((void *)this + 1);
        if (!v7) {
          operator new();
        }
        unsigned int v44 = 0;
        int v8 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v44))return 0; {
        }
          }
        else
        {
          unsigned int v44 = *v8;
          *((void *)a2 + 1) = v8 + 1;
        }
        int v14 = *((_DWORD *)a2 + 14);
        int v15 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v14 + 1;
        if (v14 >= v15) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::MergePartialFromCodedStream(v7, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v16 = *((_DWORD *)a2 + 14);
        BOOL v17 = __OFSUB__(v16, 1);
        int v18 = v16 - 1;
        if (v18 < 0 == v17) {
          *((_DWORD *)a2 + 14) = v18;
        }
        unsigned int v19 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v19 >= *((void *)a2 + 2) || *v19 != 18) {
          continue;
        }
        *((void *)a2 + 1) = v19 + 1;
        goto LABEL_46;
      case 2u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_34;
        }
LABEL_46:
        *((_DWORD *)this + 17) |= 2u;
        unint64_t v20 = (CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *)*((void *)this + 2);
        if (!v20) {
          operator new();
        }
        unsigned int v44 = 0;
        uint64_t v21 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v21 >= *((void *)a2 + 2) || *v21 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v44))return 0; {
        }
          }
        else
        {
          unsigned int v44 = *v21;
          *((void *)a2 + 1) = v21 + 1;
        }
        int v22 = *((_DWORD *)a2 + 14);
        int v23 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v22 + 1;
        if (v22 >= v23) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::MergePartialFromCodedStream(v20, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v24 = *((_DWORD *)a2 + 14);
        BOOL v17 = __OFSUB__(v24, 1);
        int v25 = v24 - 1;
        if (v25 < 0 == v17) {
          *((_DWORD *)a2 + 14) = v25;
        }
        int v26 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v26 >= *((void *)a2 + 2) || *v26 != 29) {
          continue;
        }
        *((void *)a2 + 1) = v26 + 1;
LABEL_60:
        unsigned int v44 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v44) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 6) = v44;
        *((_DWORD *)this + 17) |= 4u;
        int v27 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v27 >= *((void *)a2 + 2) || *v27 != 37) {
          continue;
        }
        *((void *)a2 + 1) = v27 + 1;
LABEL_64:
        unsigned int v44 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v44) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 7) = v44;
        *((_DWORD *)this + 17) |= 8u;
        unsigned int v28 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v28 >= *((void *)a2 + 2) || *v28 != 45) {
          continue;
        }
        *((void *)a2 + 1) = v28 + 1;
LABEL_68:
        unsigned int v44 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v44) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 8) = v44;
        *((_DWORD *)this + 17) |= 0x10u;
        unsigned int v29 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        if ((unint64_t)v29 >= v9 || *v29 != 48) {
          continue;
        }
        uint64_t v10 = v29 + 1;
        *((void *)a2 + 1) = v10;
LABEL_72:
        unsigned int v44 = 0;
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v44);
          if (!result) {
            return result;
          }
          unsigned int v30 = v44;
        }
        else
        {
          unsigned int v30 = *v10;
          *((void *)a2 + 1) = v10 + 1;
        }
        if (v30 + 1 <= 7)
        {
          *((_DWORD *)this + 17) |= 0x20u;
          *((_DWORD *)this + 9) = v30;
        }
        int v32 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
        if ((unint64_t)v32 >= v11 || *v32 != 56) {
          continue;
        }
        unsigned int v12 = v32 + 1;
        *((void *)a2 + 1) = v12;
LABEL_82:
        unsigned int v44 = 0;
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v44);
          if (!result) {
            return result;
          }
          unsigned int v33 = v44;
          int v34 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v11 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v33 = *v12;
          int v34 = v12 + 1;
          *((void *)a2 + 1) = v34;
        }
        *((unsigned char *)this + 40) = v33 != 0;
        *((_DWORD *)this + 17) |= 0x40u;
        if ((unint64_t)v34 >= v11 || *v34 != 69) {
          continue;
        }
        *((void *)a2 + 1) = v34 + 1;
LABEL_90:
        unsigned int v44 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v44) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 11) = v44;
        *((_DWORD *)this + 17) |= 0x80u;
        int v35 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v35 >= *((void *)a2 + 2) || *v35 != 77) {
          continue;
        }
        *((void *)a2 + 1) = v35 + 1;
LABEL_94:
        unsigned int v44 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v44) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 12) = v44;
        *((_DWORD *)this + 17) |= 0x100u;
        int v36 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v36 >= *((void *)a2 + 2) || *v36 != 85) {
          continue;
        }
        *((void *)a2 + 1) = v36 + 1;
LABEL_98:
        unsigned int v44 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v44) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 13) = v44;
        int v13 = *((_DWORD *)this + 17) | 0x200;
        *((_DWORD *)this + 17) = v13;
        int v37 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v37 >= *((void *)a2 + 2) || *v37 != 90) {
          continue;
        }
        *((void *)a2 + 1) = v37 + 1;
LABEL_102:
        *((_DWORD *)this + 17) = v13 | 0x400;
        int v38 = (CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 *)*((void *)this + 7);
        if (!v38) {
          operator new();
        }
        unsigned int v44 = 0;
        int v39 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v39 >= *((void *)a2 + 2) || *v39 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v44))return 0; {
        }
          }
        else
        {
          unsigned int v44 = *v39;
          *((void *)a2 + 1) = v39 + 1;
        }
        int v40 = *((_DWORD *)a2 + 14);
        int v41 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v40 + 1;
        if (v40 < v41)
        {
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::MergePartialFromCodedStream(v38, a2))
          {
            if (*((unsigned char *)a2 + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
              int v42 = *((_DWORD *)a2 + 14);
              BOOL v17 = __OFSUB__(v42, 1);
              int v43 = v42 - 1;
              if (v43 < 0 == v17) {
                *((_DWORD *)a2 + 14) = v43;
              }
              if (*((void *)a2 + 1) == *((void *)a2 + 2)
                && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
              {
                *((_DWORD *)a2 + 8) = 0;
                uint64_t result = 1;
                *((unsigned char *)a2 + 36) = 1;
                return result;
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        int v6 = TagFallback & 7;
        if (v6 == 5) {
          goto LABEL_60;
        }
        goto LABEL_34;
      case 4u:
        int v6 = TagFallback & 7;
        if (v6 == 5) {
          goto LABEL_64;
        }
        goto LABEL_34;
      case 5u:
        int v6 = TagFallback & 7;
        if (v6 == 5) {
          goto LABEL_68;
        }
        goto LABEL_34;
      case 6u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        uint64_t v10 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        goto LABEL_72;
      case 7u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_34;
        }
        unsigned int v12 = (char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
        goto LABEL_82;
      case 8u:
        int v6 = TagFallback & 7;
        if (v6 == 5) {
          goto LABEL_90;
        }
        goto LABEL_34;
      case 9u:
        int v6 = TagFallback & 7;
        if (v6 == 5) {
          goto LABEL_94;
        }
        goto LABEL_34;
      case 0xAu:
        int v6 = TagFallback & 7;
        if (v6 == 5) {
          goto LABEL_98;
        }
        goto LABEL_34;
      case 0xBu:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_34;
        }
        int v13 = *((_DWORD *)this + 17);
        goto LABEL_102;
      default:
        int v6 = TagFallback & 7;
LABEL_34:
        if (v6 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 68);
  if (v6)
  {
    uint64_t v7 = *(void *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 68);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_19;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v8 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::default_instance_ + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_20;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(float *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(float *)(v5 + 28), a3);
  int v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_22;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(float *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_23;
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned int *)(v5 + 36), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_24;
  }
LABEL_23:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned __int8 *)(v5 + 40), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_25;
  }
LABEL_24:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (uint64_t)a2, *(float *)(v5 + 44), a3);
  int v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
LABEL_26:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (uint64_t)a2, *(float *)(v5 + 52), a3);
    if ((*(_DWORD *)(v5 + 68) & 0x400) == 0) {
      return this;
    }
    goto LABEL_27;
  }
LABEL_25:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (uint64_t)a2, *(float *)(v5 + 48), a3);
  int v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 0x200) != 0) {
    goto LABEL_26;
  }
LABEL_11:
  if ((v6 & 0x400) == 0) {
    return this;
  }
LABEL_27:
  uint64_t v9 = *(void *)(v5 + 56);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v9 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::default_instance_ + 56);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v9, a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass *this)
{
  int v2 = *((_DWORD *)this + 17);
  if (!(_BYTE)v2)
  {
    uint64_t v4 = 0;
    goto LABEL_43;
  }
  if (v2)
  {
    uint64_t v5 = *((void *)this + 1);
    if (!v5)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      uint64_t v5 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::default_instance_ + 8);
    }
    int v6 = *(unsigned __int8 *)(v5 + 24);
    if (*(unsigned char *)(v5 + 24))
    {
      int v7 = (v6 << 31 >> 31) & 5;
      if ((v6 & 2) != 0) {
        v7 += 5;
      }
      if ((v6 & 4) != 0) {
        int v6 = v7 + 5;
      }
      else {
        int v6 = v7;
      }
    }
    *(_DWORD *)(v5 + 20) = v6;
    int v3 = v6 + 2;
    int v2 = *((_DWORD *)this + 17);
    if ((v2 & 2) == 0) {
      goto LABEL_24;
    }
    goto LABEL_15;
  }
  int v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_15:
    uint64_t v8 = *((void *)this + 2);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      uint64_t v8 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::default_instance_ + 16);
    }
    int v9 = *(unsigned __int8 *)(v8 + 24);
    if (*(unsigned char *)(v8 + 24))
    {
      int v10 = (v9 << 31 >> 31) & 5;
      if ((v9 & 2) != 0) {
        v10 += 5;
      }
      if ((v9 & 4) != 0) {
        int v9 = v10 + 5;
      }
      else {
        int v9 = v10;
      }
    }
    *(_DWORD *)(v8 + 20) = v9;
    v3 += v9 + 2;
    int v2 = *((_DWORD *)this + 17);
  }
LABEL_24:
  int v11 = v3 + 5;
  if ((v2 & 4) == 0) {
    int v11 = v3;
  }
  if ((v2 & 8) != 0) {
    v11 += 5;
  }
  if ((v2 & 0x10) != 0) {
    unsigned int v12 = v11 + 5;
  }
  else {
    unsigned int v12 = v11;
  }
  if ((v2 & 0x20) != 0)
  {
    int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
    if ((v13 & 0x80000000) != 0)
    {
      int v14 = 11;
    }
    else if (v13 >= 0x80)
    {
      int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13) + 1;
      int v2 = *((_DWORD *)this + 17);
    }
    else
    {
      int v14 = 2;
    }
    v12 += v14;
  }
  unsigned int v15 = v12 + 2;
  if ((v2 & 0x40) == 0) {
    unsigned int v15 = v12;
  }
  if ((v2 & 0x80) != 0) {
    uint64_t v4 = v15 + 5;
  }
  else {
    uint64_t v4 = v15;
  }
LABEL_43:
  if ((v2 & 0xFF00) != 0)
  {
    unsigned int v16 = v4 + 5;
    if ((v2 & 0x100) == 0) {
      unsigned int v16 = v4;
    }
    if ((v2 & 0x200) != 0) {
      uint64_t v4 = v16 + 5;
    }
    else {
      uint64_t v4 = v16;
    }
    if ((v2 & 0x400) != 0)
    {
      BOOL v17 = (CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 *)*((void *)this + 7);
      if (!v17)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(0);
        BOOL v17 = *(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 **)(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::default_instance_
                                                                                      + 56);
      }
      uint64_t v4 = v4
         + CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::ByteSize(v17)
         + 2;
    }
  }
  *((_DWORD *)this + 16) = v4;
  return v4;
}

double CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass *this, const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass *this)
{
  return 1;
}

float CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::Swap(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass *this, CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    uint64_t v3 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    int v4 = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v4;
    int v5 = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v5;
    int v6 = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v6;
    LODWORD(v3) = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v3;
    LOBYTE(v3) = *((unsigned char *)this + 40);
    *((unsigned char *)this + 40) = *((unsigned char *)a2 + 40);
    *((unsigned char *)a2 + 40) = v3;
    int v7 = *((_DWORD *)this + 11);
    *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v7;
    int v8 = *((_DWORD *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v8;
    float result = *((float *)this + 13);
    *((_DWORD *)this + 13) = *((_DWORD *)a2 + 13);
    *((float *)a2 + 13) = result;
    uint64_t v10 = *((void *)this + 7);
    *((void *)this + 7) = *((void *)a2 + 7);
    *((void *)a2 + 7) = v10;
    LODWORD(v10) = *((_DWORD *)this + 17);
    *((_DWORD *)this + 17) = *((_DWORD *)a2 + 17);
    *((_DWORD *)a2 + 17) = v10;
    LODWORD(v10) = *((_DWORD *)this + 16);
    *((_DWORD *)this + 16) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v10;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.MotionTypeCompass");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::SharedCtor(uint64_t this)
{
  *(_DWORD *)(this + 36) = 0;
  *(_DWORD *)(this + 40) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  *(void *)(this + 8) = 0;
  *(unsigned char *)(this + 32) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample *CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::CompassTypeSample(CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample *this, const CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample *a2)
{
  *((_DWORD *)this + 9) = 0;
  *((_DWORD *)this + 10) = 0;
  *(void *)this = &unk_1EDD0CB90;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((unsigned char *)this + 32) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::MergeFrom(this, a2);
  return this;
}

void sub_18DF9180C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

float CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample *this, const CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 40);
  if (!(_BYTE)v5) {
    return *(float *)&v4;
  }
  if (*((unsigned char *)a2 + 40))
  {
    *((_DWORD *)this + 10) |= 1u;
    int v7 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
    if (!v7) {
      operator new();
    }
    int v8 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)a2 + 1);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      int v8 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::default_instance_
                                                                           + 8);
    }
    double v4 = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v7, v8);
    int v5 = *((_DWORD *)a2 + 10);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_21;
    }
  }
  else if ((*((unsigned char *)a2 + 40) & 2) == 0)
  {
    goto LABEL_6;
  }
  *((_DWORD *)this + 10) |= 2u;
  int v9 = (CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass *)*((void *)this + 2);
  if (!v9) {
    operator new();
  }
  uint64_t v10 = (const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass *)*((void *)a2 + 2);
  if (!v10)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    uint64_t v10 = *(const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass **)(CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::default_instance_
                                                                                  + 16);
  }
  double v4 = CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::MergeFrom(v9, v10);
  int v5 = *((_DWORD *)a2 + 10);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
LABEL_22:
    LODWORD(v4) = *((_DWORD *)a2 + 7);
    *((_DWORD *)this + 10) |= 8u;
    *((_DWORD *)this + 7) = LODWORD(v4);
    if ((*((_DWORD *)a2 + 10) & 0x10) != 0) {
      goto LABEL_9;
    }
    return *(float *)&v4;
  }
LABEL_21:
  LODWORD(v4) = *((_DWORD *)a2 + 6);
  *((_DWORD *)this + 10) |= 4u;
  *((_DWORD *)this + 6) = LODWORD(v4);
  int v5 = *((_DWORD *)a2 + 10);
  if ((v5 & 8) != 0) {
    goto LABEL_22;
  }
LABEL_8:
  if ((v5 & 0x10) != 0)
  {
LABEL_9:
    char v6 = *((unsigned char *)a2 + 32);
    *((_DWORD *)this + 10) |= 0x10u;
    *((unsigned char *)this + 32) = v6;
  }
  return *(float *)&v4;
}

void sub_18DF91A20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::~CompassTypeSample(CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample *this)
{
  *(void *)this = &unk_1EDD0CB90;
  CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::~CompassTypeSample(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample *)CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 2);
    if (v3)
    {
      double v4 = *(void (**)(void))(*(void *)v3 + 8);
      v4();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 36) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::New(CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::Clear(uint64_t this)
{
  uint64_t v1 = this;
  LOBYTE(v2) = *(unsigned char *)(this + 40);
  if ((_BYTE)v2)
  {
    if (*(unsigned char *)(this + 40))
    {
      uint64_t v3 = *(void *)(this + 8);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
          *(void *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        int v2 = *(_DWORD *)(this + 40);
      }
    }
    if ((v2 & 2) != 0)
    {
      this = *(void *)(this + 16);
      if (this) {
        this = CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::Clear(this);
      }
    }
    *(unsigned char *)(v1 + 32) = 0;
    *(void *)(v1 + 24) = 0;
  }
  *(_DWORD *)(v1 + 40) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (2)
  {
    double v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_21;
        }
        *((_DWORD *)this + 10) |= 1u;
        int v7 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
        if (!v7) {
          operator new();
        }
        unsigned int v29 = 0;
        int v8 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v29))return 0; {
        }
          }
        else
        {
          unsigned int v29 = *v8;
          *((void *)a2 + 1) = v8 + 1;
        }
        int v11 = *((_DWORD *)a2 + 14);
        int v12 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v11 + 1;
        if (v11 >= v12) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream(v7, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v13 = *((_DWORD *)a2 + 14);
        BOOL v14 = __OFSUB__(v13, 1);
        int v15 = v13 - 1;
        if (v15 < 0 == v14) {
          *((_DWORD *)a2 + 14) = v15;
        }
        unsigned int v16 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v16 >= *((void *)a2 + 2) || *v16 != 18) {
          continue;
        }
        *((void *)a2 + 1) = v16 + 1;
        goto LABEL_34;
      case 2u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_21;
        }
LABEL_34:
        *((_DWORD *)this + 10) |= 2u;
        BOOL v17 = (CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass *)*((void *)this + 2);
        if (!v17) {
          operator new();
        }
        unsigned int v29 = 0;
        int v18 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v18 >= *((void *)a2 + 2) || *v18 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v29))return 0; {
        }
          }
        else
        {
          unsigned int v29 = *v18;
          *((void *)a2 + 1) = v18 + 1;
        }
        int v19 = *((_DWORD *)a2 + 14);
        int v20 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v19 + 1;
        if (v19 >= v20) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::MergePartialFromCodedStream(v17, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v21 = *((_DWORD *)a2 + 14);
        BOOL v14 = __OFSUB__(v21, 1);
        int v22 = v21 - 1;
        if (v22 < 0 == v14) {
          *((_DWORD *)a2 + 14) = v22;
        }
        int v23 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v23 >= *((void *)a2 + 2) || *v23 != 29) {
          continue;
        }
        *((void *)a2 + 1) = v23 + 1;
LABEL_48:
        unsigned int v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v29) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 6) = v29;
        *((_DWORD *)this + 10) |= 4u;
        int v24 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v24 >= *((void *)a2 + 2) || *v24 != 37) {
          continue;
        }
        *((void *)a2 + 1) = v24 + 1;
LABEL_52:
        unsigned int v29 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v29))
        {
          *((_DWORD *)this + 7) = v29;
          *((_DWORD *)this + 10) |= 8u;
          int v25 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
          if ((unint64_t)v25 < v9 && *v25 == 40)
          {
            uint64_t v10 = v25 + 1;
            *((void *)a2 + 1) = v10;
LABEL_56:
            unsigned int v29 = 0;
            if ((unint64_t)v10 >= v9 || *v10 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v29);
              if (!result) {
                return result;
              }
              unsigned int v26 = v29;
              int v27 = (unsigned __int8 *)*((void *)a2 + 1);
              unint64_t v9 = *((void *)a2 + 2);
            }
            else
            {
              unsigned int v26 = *v10;
              int v27 = (unsigned __int8 *)(v10 + 1);
              *((void *)a2 + 1) = v27;
            }
            *((unsigned char *)this + 32) = v26 != 0;
            *((_DWORD *)this + 10) |= 0x10u;
            if (v27 == (unsigned __int8 *)v9 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
            {
              *((_DWORD *)a2 + 8) = 0;
              uint64_t result = 1;
              *((unsigned char *)a2 + 36) = 1;
              return result;
            }
          }
          continue;
        }
        return 0;
      case 3u:
        int v6 = TagFallback & 7;
        if (v6 == 5) {
          goto LABEL_48;
        }
        goto LABEL_21;
      case 4u:
        int v6 = TagFallback & 7;
        if (v6 == 5) {
          goto LABEL_52;
        }
        goto LABEL_21;
      case 5u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_21;
        }
        uint64_t v10 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        goto LABEL_56;
      default:
        int v6 = TagFallback & 7;
LABEL_21:
        if (v6 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 40);
  if (v6)
  {
    uint64_t v7 = *(void *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 40);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v8 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::default_instance_ + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_14:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(float *)(v5 + 28), a3);
    if ((*(_DWORD *)(v5 + 40) & 0x10) == 0) {
      return this;
    }
    goto LABEL_15;
  }
LABEL_13:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(float *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 8) != 0) {
    goto LABEL_14;
  }
LABEL_5:
  if ((v6 & 0x10) == 0) {
    return this;
  }
LABEL_15:
  uint64_t v9 = *(unsigned __int8 *)(v5 + 32);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v9, (uint64_t)a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 40);
  if (!(_BYTE)v2)
  {
    uint64_t result = 0;
    goto LABEL_28;
  }
  if (*((unsigned char *)this + 40))
  {
    uint64_t v5 = *((void *)this + 1);
    if (!v5)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      uint64_t v5 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::default_instance_ + 8);
    }
    int v6 = *(unsigned __int8 *)(v5 + 36);
    if (*(unsigned char *)(v5 + 36))
    {
      int v7 = (v6 << 31 >> 31) & 9;
      if ((v6 & 2) != 0) {
        v7 += 9;
      }
      if ((v6 & 4) != 0) {
        int v6 = v7 + 9;
      }
      else {
        int v6 = v7;
      }
    }
    *(_DWORD *)(v5 + 32) = v6;
    int v3 = v6 + 2;
    int v2 = *((_DWORD *)this + 10);
    if ((v2 & 2) == 0) {
      goto LABEL_21;
    }
    goto LABEL_15;
  }
  int v3 = 0;
  if ((*((unsigned char *)this + 40) & 2) != 0)
  {
LABEL_15:
    uint64_t v8 = (CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass *)*((void *)this + 2);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(0);
      uint64_t v8 = *(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass **)(CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::default_instance_
                                                                             + 16);
    }
    uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompass::ByteSize(v8);
    int v10 = (int)v9;
    if (v9 >= 0x80) {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9);
    }
    else {
      int v11 = 1;
    }
    v3 += v10 + v11 + 1;
    int v2 = *((_DWORD *)this + 10);
  }
LABEL_21:
  unsigned int v12 = v3 + 5;
  if ((v2 & 4) == 0) {
    unsigned int v12 = v3;
  }
  if ((v2 & 8) != 0) {
    v12 += 5;
  }
  if ((v2 & 0x10) != 0) {
    uint64_t result = v12 + 2;
  }
  else {
    uint64_t result = v12;
  }
LABEL_28:
  *((_DWORD *)this + 9) = result;
  return result;
}

float CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::MergeFrom(this, lpsrc);
}

float CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample *this, const CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample *this)
{
  return 1;
}

float CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::Swap(CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample *this, CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    uint64_t v3 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    int v4 = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v4;
    float result = *((float *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((float *)a2 + 7) = result;
    LOBYTE(v3) = *((unsigned char *)this + 32);
    *((unsigned char *)this + 32) = *((unsigned char *)a2 + 32);
    *((unsigned char *)a2 + 32) = v3;
    LODWORD(v3) = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v3;
    LODWORD(v3) = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v3;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.CompassTypeSample");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Compass::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 40) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::Compass *CoreNavigation::CLP::LogEntry::PrivateData::Compass::Compass(CoreNavigation::CLP::LogEntry::PrivateData::Compass *this, const CoreNavigation::CLP::LogEntry::PrivateData::Compass *a2)
{
  *((void *)this + 5) = 0;
  *(void *)this = &unk_1EDD0EE40;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::Compass::MergeFrom(this, a2);
  return this;
}

void sub_18DF924FC(_Unwind_Exception *a1)
{
  sub_18DF0C324(v1 + 2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::Compass::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::Compass *this, const CoreNavigation::CLP::LogEntry::PrivateData::Compass *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  int v4 = (CoreNavigation::CLP::LogEntry::PrivateData *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::Compass *)((char *)this + 16));
  if (*((int *)a2 + 6) >= 1)
  {
    uint64_t v6 = 0;
    do
    {
      int v7 = *(const CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample **)(*((void *)a2 + 2) + 8 * v6);
      int v8 = *((_DWORD *)this + 7);
      uint64_t v9 = *((int *)this + 6);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)this + 8))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::Compass *)((char *)this + 16));
          int v8 = *((_DWORD *)this + 7);
        }
        *((_DWORD *)this + 7) = v8 + 1;
        operator new();
      }
      uint64_t v10 = *((void *)this + 2);
      *((_DWORD *)this + 6) = v9 + 1;
      *(float *)&double result = CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::MergeFrom(*(CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample **)(v10 + 8 * v9), v7);
      ++v6;
    }
    while (v6 < *((int *)a2 + 6));
  }
  if (*((unsigned char *)a2 + 44))
  {
    *((_DWORD *)this + 11) |= 1u;
    int v11 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
    if (!v11) {
      operator new();
    }
    unsigned int v12 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)a2 + 1);
    if (!v12)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(v4);
      unsigned int v12 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::Compass::default_instance_
                                                                            + 8);
    }
    return CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v11, v12);
  }
  return result;
}

void sub_18DF92704(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::Compass::~Compass(CoreNavigation::CLP::LogEntry::PrivateData::Compass *this)
{
  *(void *)this = &unk_1EDD0EE40;
  CoreNavigation::CLP::LogEntry::PrivateData::Compass::SharedDtor(this);
  sub_18DF0C324((uint64_t *)this + 2);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::Compass::~Compass(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::PrivateData::Compass::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::Compass *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::Compass *)CoreNavigation::CLP::LogEntry::PrivateData::Compass::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2)
    {
      uint64_t v3 = *(void (**)(void))(*(void *)v2 + 8);
      v3();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Compass::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::Compass *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::Compass::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Compass::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 40) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::Compass::New(CoreNavigation::CLP::LogEntry::PrivateData::Compass *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Compass::Clear(CoreNavigation::CLP::LogEntry::PrivateData::Compass *this)
{
  if (*((unsigned char *)this + 44))
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2)
    {
      if (*(unsigned char *)(v2 + 36))
      {
        *(void *)(v2 + 8) = 0;
        *(void *)(v2 + 16) = 0;
        *(void *)(v2 + 24) = 0;
      }
      *(_DWORD *)(v2 + 36) = 0;
    }
  }
  uint64_t result = sub_18DF0C208((uint64_t)this + 16);
  *((_DWORD *)this + 11) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Compass::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::Compass *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (CoreNavigation::CLP::LogEntry::PrivateData::Compass *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v5;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((void *)a2 + 1) = v5 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_18;
        }
        *((_DWORD *)this + 11) |= 1u;
        int v8 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
        if (!v8) {
          operator new();
        }
        unsigned int v27 = 0;
        uint64_t v9 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v9 >= *((void *)a2 + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v27))return 0; {
        }
          }
        else
        {
          unsigned int v27 = *v9;
          *((void *)a2 + 1) = v9 + 1;
        }
        int v10 = *((_DWORD *)a2 + 14);
        int v11 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v10 + 1;
        if (v10 >= v11) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream(v8, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v12 = *((_DWORD *)a2 + 14);
        BOOL v13 = __OFSUB__(v12, 1);
        int v14 = v12 - 1;
        if (v14 < 0 == v13) {
          *((_DWORD *)a2 + 14) = v14;
        }
        int v15 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v15 < *((void *)a2 + 2) && *v15 == 18) {
          goto LABEL_29;
        }
      }
      if (TagFallback >> 3 != 2) {
        break;
      }
      int v7 = TagFallback & 7;
      if (v7 != 2) {
        goto LABEL_18;
      }
      while (1)
      {
        int v16 = *((_DWORD *)this + 7);
        uint64_t v17 = *((int *)this + 6);
        if ((int)v17 >= v16)
        {
          if (v16 == *((_DWORD *)this + 8))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
            int v16 = *((_DWORD *)this + 7);
          }
          *((_DWORD *)this + 7) = v16 + 1;
          operator new();
        }
        uint64_t v18 = *((void *)this + 2);
        *((_DWORD *)this + 6) = v17 + 1;
        int v19 = *(CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample **)(v18 + 8 * v17);
        unsigned int v28 = 0;
        int v20 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v20 >= *((void *)a2 + 2) || *v20 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v28))return 0; {
        }
          }
        else
        {
          unsigned int v28 = *v20;
          *((void *)a2 + 1) = v20 + 1;
        }
        int v21 = *((_DWORD *)a2 + 14);
        int v22 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v21 + 1;
        if (v21 >= v22) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::MergePartialFromCodedStream(v19, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v23 = *((_DWORD *)a2 + 14);
        BOOL v13 = __OFSUB__(v23, 1);
        int v24 = v23 - 1;
        if (v24 < 0 == v13) {
          *((_DWORD *)a2 + 14) = v24;
        }
        int v15 = (unsigned char *)*((void *)a2 + 1);
        int v25 = (unsigned char *)*((void *)a2 + 2);
        if (v15 >= v25 || *v15 != 18) {
          break;
        }
LABEL_29:
        *((void *)a2 + 1) = v15 + 1;
      }
      if (v15 == v25 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      }
    }
    int v7 = TagFallback & 7;
LABEL_18:
    if (v7 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Compass::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(unsigned char *)(this + 44))
  {
    uint64_t v6 = *(void *)(this + 8);
    if (!v6)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      uint64_t v6 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::Compass::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
  }
  if (*(int *)(v5 + 24) >= 1)
  {
    uint64_t v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(*(void *)(v5 + 16) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 24));
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Compass::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::Compass *this)
{
  if (*((unsigned char *)this + 44))
  {
    uint64_t v3 = *((void *)this + 1);
    if (!v3)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      uint64_t v3 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::Compass::default_instance_ + 8);
    }
    int v4 = *(unsigned __int8 *)(v3 + 36);
    if (*(unsigned char *)(v3 + 36))
    {
      int v5 = (v4 << 31 >> 31) & 9;
      if ((v4 & 2) != 0) {
        v5 += 9;
      }
      if ((v4 & 4) != 0) {
        int v4 = v5 + 9;
      }
      else {
        int v4 = v5;
      }
    }
    *(_DWORD *)(v3 + 32) = v4;
    int v2 = v4 + 2;
  }
  else
  {
    int v2 = 0;
  }
  int v6 = *((_DWORD *)this + 6);
  uint64_t v7 = (v6 + v2);
  if (v6 >= 1)
  {
    uint64_t v8 = 0;
    do
    {
      uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample::ByteSize(*(CoreNavigation::CLP::LogEntry::PrivateData::CompassTypeSample **)(*((void *)this + 2) + 8 * v8));
      int v10 = (int)v9;
      if (v9 >= 0x80) {
        int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9);
      }
      else {
        int v11 = 1;
      }
      uint64_t v7 = (v10 + v7 + v11);
      ++v8;
    }
    while (v8 < *((int *)this + 6));
  }
  *((_DWORD *)this + 10) = v7;
  return v7;
}

double CoreNavigation::CLP::LogEntry::PrivateData::Compass::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::Compass *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::Compass::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::Compass::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::Compass *this, const CoreNavigation::CLP::LogEntry::PrivateData::Compass *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::Compass *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::Compass::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::Compass::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::Compass *this)
{
  return 1;
}

CoreNavigation::CLP::LogEntry::PrivateData::Compass *CoreNavigation::CLP::LogEntry::PrivateData::Compass::Swap(CoreNavigation::CLP::LogEntry::PrivateData::Compass *this, CoreNavigation::CLP::LogEntry::PrivateData::Compass *a2)
{
  if (a2 != this)
  {
    uint64_t v3 = this;
    uint64_t v4 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v4;
    this = (CoreNavigation::CLP::LogEntry::PrivateData::Compass *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    int v5 = *((_DWORD *)v3 + 11);
    *((_DWORD *)v3 + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v5;
    int v6 = *((_DWORD *)v3 + 10);
    *((_DWORD *)v3 + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v6;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::Compass::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.Compass");
}

double CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion *this)
{
  double result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *((_DWORD *)this + 10) = -1;
  *((_WORD *)this + 22) = 0;
  *((unsigned char *)this + 46) = 0;
  *((_DWORD *)this + 14) = 0;
  *((void *)this + 6) = 0;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion *CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::MotionTypeDeviceMotion(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion *this, const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion *a2)
{
  *(void *)this = &unk_1EDD0DCE8;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = -1;
  *((_WORD *)this + 22) = 0;
  *((unsigned char *)this + 46) = 0;
  *((_DWORD *)this + 14) = 0;
  *((void *)this + 6) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::MergeFrom(this, a2);
  return this;
}

void sub_18DF9303C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

float CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion *this, const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v19);
  }
  int v5 = *((_DWORD *)a2 + 14);
  if (!(_BYTE)v5) {
    goto LABEL_13;
  }
  if (v5)
  {
    *((_DWORD *)this + 14) |= 1u;
    uint64_t v7 = (CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 *)*((void *)this + 1);
    if (!v7) {
      operator new();
    }
    uint64_t v8 = (const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 *)*((void *)a2 + 1);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      uint64_t v8 = *(const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 **)(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::default_instance_
                                                                                         + 8);
    }
    double v4 = CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::MergeFrom(v7, v8);
    int v5 = *((_DWORD *)a2 + 14);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_26;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }
  *((_DWORD *)this + 14) |= 2u;
  uint64_t v9 = (CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *)*((void *)this + 2);
  if (!v9) {
    operator new();
  }
  int v10 = (const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *)*((void *)a2 + 2);
  if (!v10)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    int v10 = *(const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 **)(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::default_instance_
                                                                                  + 16);
  }
  *(float *)&double v4 = CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::MergeFrom(v9, v10);
  int v5 = *((_DWORD *)a2 + 14);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_31;
  }
LABEL_26:
  *((_DWORD *)this + 14) |= 4u;
  int v11 = (CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *)*((void *)this + 3);
  if (!v11) {
    operator new();
  }
  int v12 = (const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *)*((void *)a2 + 3);
  if (!v12)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    int v12 = *(const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 **)(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::default_instance_
                                                                                  + 24);
  }
  *(float *)&double v4 = CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::MergeFrom(v11, v12);
  int v5 = *((_DWORD *)a2 + 14);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_36;
  }
LABEL_31:
  *((_DWORD *)this + 14) |= 8u;
  BOOL v13 = (CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *)*((void *)this + 4);
  if (!v13) {
    operator new();
  }
  int v14 = (const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *)*((void *)a2 + 4);
  if (!v14)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    int v14 = *(const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 **)(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::default_instance_
                                                                                  + 32);
  }
  *(float *)&double v4 = CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::MergeFrom(v13, v14);
  int v5 = *((_DWORD *)a2 + 14);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_38:
    char v16 = *((unsigned char *)a2 + 44);
    *((_DWORD *)this + 14) |= 0x20u;
    *((unsigned char *)this + 44) = v16;
    int v5 = *((_DWORD *)a2 + 14);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_39;
  }
LABEL_36:
  int v15 = *((_DWORD *)a2 + 10);
  if ((v15 + 1) >= 8) {
    __assert_rtn("set_magnetic_field_calibration_level", "CoreNavigationCLPPrivateDataShared.pb.h", 24177, "::CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeCompassCalibrationLevel_IsValid(value)");
  }
  *((_DWORD *)this + 14) |= 0x10u;
  *((_DWORD *)this + 10) = v15;
  int v5 = *((_DWORD *)a2 + 14);
  if ((v5 & 0x20) != 0) {
    goto LABEL_38;
  }
LABEL_10:
  if ((v5 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_39:
  char v17 = *((unsigned char *)a2 + 45);
  *((_DWORD *)this + 14) |= 0x40u;
  *((unsigned char *)this + 45) = v17;
  int v5 = *((_DWORD *)a2 + 14);
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    char v6 = *((unsigned char *)a2 + 46);
    *((_DWORD *)this + 14) |= 0x80u;
    *((unsigned char *)this + 46) = v6;
    int v5 = *((_DWORD *)a2 + 14);
  }
LABEL_13:
  if ((v5 & 0x100) != 0)
  {
    LODWORD(v4) = *((_DWORD *)a2 + 12);
    *((_DWORD *)this + 14) |= 0x100u;
    *((_DWORD *)this + 12) = LODWORD(v4);
  }
  return *(float *)&v4;
}

void sub_18DF933B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::~MotionTypeDeviceMotion(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion *this)
{
  *(void *)this = &unk_1EDD0DCE8;
  CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::~MotionTypeDeviceMotion(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion *)CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 2);
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = *((void *)this + 3);
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = *((void *)this + 4);
    if (v5)
    {
      char v6 = *(void (**)(void))(*(void *)v5 + 8);
      v6();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 52) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::New(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 56);
  if ((_BYTE)v1)
  {
    if (v1)
    {
      uint64_t v2 = *(void *)(this + 8);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 44))
        {
          *(_OWORD *)(v2 + 24) = 0u;
          *(_OWORD *)(v2 + 8) = 0u;
        }
        *(_DWORD *)(v2 + 44) = 0;
        int v1 = *(_DWORD *)(this + 56);
      }
    }
    if ((v1 & 2) != 0)
    {
      uint64_t v3 = *(void *)(this + 16);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 24))
        {
          *(void *)(v3 + 8) = 0;
          *(_DWORD *)(v3 + 16) = 0;
        }
        *(_DWORD *)(v3 + 24) = 0;
        int v1 = *(_DWORD *)(this + 56);
      }
    }
    if ((v1 & 4) != 0)
    {
      uint64_t v4 = *(void *)(this + 24);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 24))
        {
          *(void *)(v4 + 8) = 0;
          *(_DWORD *)(v4 + 16) = 0;
        }
        *(_DWORD *)(v4 + 24) = 0;
        int v1 = *(_DWORD *)(this + 56);
      }
    }
    if ((v1 & 8) != 0)
    {
      uint64_t v5 = *(void *)(this + 32);
      if (v5)
      {
        if (*(unsigned char *)(v5 + 24))
        {
          *(void *)(v5 + 8) = 0;
          *(_DWORD *)(v5 + 16) = 0;
        }
        *(_DWORD *)(v5 + 24) = 0;
        int v1 = *(_DWORD *)(this + 56);
      }
    }
    *(_DWORD *)(this + 40) = -1;
    *(_WORD *)(this + 44) = 0;
    *(unsigned char *)(this + 46) = 0;
  }
  if ((v1 & 0xFF00) != 0) {
    *(_DWORD *)(this + 48) = 0;
  }
  *(_DWORD *)(this + 56) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (2)
  {
    uint64_t v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_29;
        }
        *((_DWORD *)this + 14) |= 1u;
        uint64_t v7 = (CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 *)*((void *)this + 1);
        if (!v7) {
          operator new();
        }
        unsigned int v51 = 0;
        uint64_t v8 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v51))return 0; {
        }
          }
        else
        {
          unsigned int v51 = *v8;
          *((void *)a2 + 1) = v8 + 1;
        }
        int v15 = *((_DWORD *)a2 + 14);
        int v16 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v15 + 1;
        if (v15 >= v16) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::MergePartialFromCodedStream(v7, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v17 = *((_DWORD *)a2 + 14);
        BOOL v18 = __OFSUB__(v17, 1);
        int v19 = v17 - 1;
        if (v19 < 0 == v18) {
          *((_DWORD *)a2 + 14) = v19;
        }
        int v20 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v20 >= *((void *)a2 + 2) || *v20 != 18) {
          continue;
        }
        *((void *)a2 + 1) = v20 + 1;
        goto LABEL_41;
      case 2u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_29;
        }
LABEL_41:
        *((_DWORD *)this + 14) |= 2u;
        int v21 = (CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *)*((void *)this + 2);
        if (!v21) {
          operator new();
        }
        unsigned int v51 = 0;
        int v22 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v22 >= *((void *)a2 + 2) || *v22 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v51))return 0; {
        }
          }
        else
        {
          unsigned int v51 = *v22;
          *((void *)a2 + 1) = v22 + 1;
        }
        int v23 = *((_DWORD *)a2 + 14);
        int v24 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v23 + 1;
        if (v23 >= v24) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::MergePartialFromCodedStream(v21, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v25 = *((_DWORD *)a2 + 14);
        BOOL v18 = __OFSUB__(v25, 1);
        int v26 = v25 - 1;
        if (v26 < 0 == v18) {
          *((_DWORD *)a2 + 14) = v26;
        }
        unsigned int v27 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v27 >= *((void *)a2 + 2) || *v27 != 26) {
          continue;
        }
        *((void *)a2 + 1) = v27 + 1;
LABEL_55:
        *((_DWORD *)this + 14) |= 4u;
        unsigned int v28 = (CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *)*((void *)this + 3);
        if (!v28) {
          operator new();
        }
        unsigned int v51 = 0;
        unsigned int v29 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v29 >= *((void *)a2 + 2) || *v29 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v51))return 0; {
        }
          }
        else
        {
          unsigned int v51 = *v29;
          *((void *)a2 + 1) = v29 + 1;
        }
        int v30 = *((_DWORD *)a2 + 14);
        int v31 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v30 + 1;
        if (v30 >= v31) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::MergePartialFromCodedStream(v28, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v32 = *((_DWORD *)a2 + 14);
        BOOL v18 = __OFSUB__(v32, 1);
        int v33 = v32 - 1;
        if (v33 < 0 == v18) {
          *((_DWORD *)a2 + 14) = v33;
        }
        int v34 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v34 >= *((void *)a2 + 2) || *v34 != 34) {
          continue;
        }
        *((void *)a2 + 1) = v34 + 1;
LABEL_69:
        *((_DWORD *)this + 14) |= 8u;
        int v35 = (CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3 *)*((void *)this + 4);
        if (!v35) {
          operator new();
        }
        unsigned int v51 = 0;
        int v36 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v36 >= *((void *)a2 + 2) || *v36 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v51))return 0; {
        }
          }
        else
        {
          unsigned int v51 = *v36;
          *((void *)a2 + 1) = v36 + 1;
        }
        int v37 = *((_DWORD *)a2 + 14);
        int v38 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v37 + 1;
        if (v37 >= v38) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeVector3::MergePartialFromCodedStream(v35, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v39 = *((_DWORD *)a2 + 14);
        BOOL v18 = __OFSUB__(v39, 1);
        int v40 = v39 - 1;
        if (v40 < 0 == v18) {
          *((_DWORD *)a2 + 14) = v40;
        }
        int v41 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        if ((unint64_t)v41 >= v9 || *v41 != 40) {
          continue;
        }
        int v10 = v41 + 1;
        *((void *)a2 + 1) = v10;
LABEL_83:
        unsigned int v51 = 0;
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v51);
          if (!result) {
            return result;
          }
          unsigned int v42 = v51;
        }
        else
        {
          unsigned int v42 = *v10;
          *((void *)a2 + 1) = v10 + 1;
        }
        if (v42 + 1 <= 7)
        {
          *((_DWORD *)this + 14) |= 0x10u;
          *((_DWORD *)this + 10) = v42;
        }
        unsigned int v44 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
        if ((unint64_t)v44 >= v11 || *v44 != 48) {
          continue;
        }
        int v12 = v44 + 1;
        *((void *)a2 + 1) = v12;
LABEL_93:
        unsigned int v51 = 0;
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v51);
          if (!result) {
            return result;
          }
          unsigned int v45 = v51;
          unsigned int v46 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v11 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v45 = *v12;
          unsigned int v46 = v12 + 1;
          *((void *)a2 + 1) = v46;
        }
        *((unsigned char *)this + 44) = v45 != 0;
        *((_DWORD *)this + 14) |= 0x20u;
        if ((unint64_t)v46 >= v11 || *v46 != 56) {
          continue;
        }
        BOOL v13 = v46 + 1;
        *((void *)a2 + 1) = v13;
LABEL_101:
        unsigned int v51 = 0;
        if ((unint64_t)v13 >= v11 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v51);
          if (!result) {
            return result;
          }
          unsigned int v47 = v51;
          unsigned int v48 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v11 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v47 = *v13;
          unsigned int v48 = v13 + 1;
          *((void *)a2 + 1) = v48;
        }
        *((unsigned char *)this + 45) = v47 != 0;
        *((_DWORD *)this + 14) |= 0x40u;
        if ((unint64_t)v48 >= v11 || *v48 != 64) {
          continue;
        }
        int v14 = v48 + 1;
        *((void *)a2 + 1) = v14;
LABEL_109:
        unsigned int v51 = 0;
        if ((unint64_t)v14 >= v11 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v51);
          if (!result) {
            return result;
          }
          unsigned int v49 = v51;
          int v50 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v11 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v49 = *v14;
          int v50 = v14 + 1;
          *((void *)a2 + 1) = v50;
        }
        *((unsigned char *)this + 46) = v49 != 0;
        *((_DWORD *)this + 14) |= 0x80u;
        if ((unint64_t)v50 >= v11 || *v50 != 77) {
          continue;
        }
        *((void *)a2 + 1) = v50 + 1;
LABEL_117:
        unsigned int v51 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v51))
        {
          *((_DWORD *)this + 12) = v51;
          *((_DWORD *)this + 14) |= 0x100u;
          if (*((void *)a2 + 1) == *((void *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        int v6 = TagFallback & 7;
        if (v6 == 2) {
          goto LABEL_55;
        }
        goto LABEL_29;
      case 4u:
        int v6 = TagFallback & 7;
        if (v6 == 2) {
          goto LABEL_69;
        }
        goto LABEL_29;
      case 5u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_29;
        }
        int v10 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        goto LABEL_83;
      case 6u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_29;
        }
        int v12 = (char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
        goto LABEL_93;
      case 7u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_29;
        }
        BOOL v13 = (char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
        goto LABEL_101;
      case 8u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_29;
        }
        int v14 = (char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
        goto LABEL_109;
      case 9u:
        int v6 = TagFallback & 7;
        if (v6 != 5) {
          goto LABEL_29;
        }
        goto LABEL_117;
      default:
        int v6 = TagFallback & 7;
LABEL_29:
        if (v6 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 56);
  if (v6)
  {
    uint64_t v7 = *(void *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 56);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_17;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v8 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::default_instance_ + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_20;
  }
LABEL_17:
  uint64_t v9 = *(void *)(v5 + 24);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v9 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::default_instance_ + 24);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v9, a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_23;
  }
LABEL_20:
  uint64_t v10 = *(void *)(v5 + 32);
  if (!v10)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v10 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::default_instance_ + 32);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v10, a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_24;
  }
LABEL_23:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_25;
  }
LABEL_24:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned __int8 *)(v5 + 44), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
LABEL_26:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned __int8 *)(v5 + 46), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 56) & 0x100) == 0) {
      return this;
    }
    goto LABEL_27;
  }
LABEL_25:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned __int8 *)(v5 + 45), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x80) != 0) {
    goto LABEL_26;
  }
LABEL_9:
  if ((v6 & 0x100) == 0) {
    return this;
  }
LABEL_27:
  float v11 = *(float *)(v5 + 48);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (uint64_t)a2, v11, a3);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 **this)
{
  int v1 = (CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion *)this;
  int v2 = *((_DWORD *)this + 14);
  if (!(_BYTE)v2)
  {
    unsigned int v4 = 0;
    goto LABEL_52;
  }
  if ((v2 & 1) == 0)
  {
    int v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_9;
  }
  uint64_t v5 = this[1];
  if (!v5)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(0);
    uint64_t v5 = *(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 **)(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::default_instance_
                                                                                 + 8);
  }
  this = (CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 **)CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4::ByteSize(v5);
  int v3 = this + 2;
  int v2 = *((_DWORD *)v1 + 14);
  if ((v2 & 2) != 0)
  {
LABEL_9:
    uint64_t v6 = *((void *)v1 + 2);
    if (!v6)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      uint64_t v6 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::default_instance_ + 16);
    }
    int v7 = *(unsigned __int8 *)(v6 + 24);
    if (*(unsigned char *)(v6 + 24))
    {
      int v8 = (v7 << 31 >> 31) & 5;
      if ((v7 & 2) != 0) {
        v8 += 5;
      }
      if ((v7 & 4) != 0) {
        int v7 = v8 + 5;
      }
      else {
        int v7 = v8;
      }
    }
    *(_DWORD *)(v6 + 20) = v7;
    v3 += v7 + 2;
    int v2 = *((_DWORD *)v1 + 14);
  }
LABEL_18:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_20;
    }
LABEL_31:
    uint64_t v12 = *((void *)v1 + 4);
    if (!v12)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      uint64_t v12 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::default_instance_ + 32);
    }
    int v13 = *(unsigned __int8 *)(v12 + 24);
    if (*(unsigned char *)(v12 + 24))
    {
      int v14 = (v13 << 31 >> 31) & 5;
      if ((v13 & 2) != 0) {
        v14 += 5;
      }
      if ((v13 & 4) != 0) {
        int v13 = v14 + 5;
      }
      else {
        int v13 = v14;
      }
    }
    *(_DWORD *)(v12 + 20) = v13;
    v3 += v13 + 2;
    int v2 = *((_DWORD *)v1 + 14);
    if ((v2 & 0x10) == 0) {
      goto LABEL_46;
    }
    goto LABEL_40;
  }
  uint64_t v9 = *((void *)v1 + 3);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v9 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::default_instance_ + 24);
  }
  int v10 = *(unsigned __int8 *)(v9 + 24);
  if (*(unsigned char *)(v9 + 24))
  {
    int v11 = (v10 << 31 >> 31) & 5;
    if ((v10 & 2) != 0) {
      v11 += 5;
    }
    if ((v10 & 4) != 0) {
      int v10 = v11 + 5;
    }
    else {
      int v10 = v11;
    }
  }
  *(_DWORD *)(v9 + 20) = v10;
  v3 += v10 + 2;
  int v2 = *((_DWORD *)v1 + 14);
  if ((v2 & 8) != 0) {
    goto LABEL_31;
  }
LABEL_20:
  if ((v2 & 0x10) != 0)
  {
LABEL_40:
    int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)v1 + 10);
    if ((v15 & 0x80000000) != 0)
    {
      int v16 = 11;
    }
    else if (v15 >= 0x80)
    {
      int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15) + 1;
      int v2 = *((_DWORD *)v1 + 14);
    }
    else
    {
      int v16 = 2;
    }
    v3 += v16;
  }
LABEL_46:
  unsigned int v4 = v3 + 2;
  if ((v2 & 0x20) == 0) {
    unsigned int v4 = v3;
  }
  if ((v2 & 0x40) != 0) {
    v4 += 2;
  }
  if ((v2 & 0x80) != 0) {
    v4 += 2;
  }
LABEL_52:
  if ((v2 & 0x100) != 0) {
    uint64_t result = v4 + 5;
  }
  else {
    uint64_t result = v4;
  }
  *((_DWORD *)v1 + 13) = result;
  return result;
}

float CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::MergeFrom(this, lpsrc);
}

float CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion *this, const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion *this)
{
  return 1;
}

float CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::Swap(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion *this, CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    uint64_t v3 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    uint64_t v4 = *((void *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v4;
    uint64_t v5 = *((void *)this + 4);
    *((void *)this + 4) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v5;
    LODWORD(v5) = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v5;
    LOBYTE(v5) = *((unsigned char *)this + 44);
    *((unsigned char *)this + 44) = *((unsigned char *)a2 + 44);
    *((unsigned char *)a2 + 44) = v5;
    LOBYTE(v5) = *((unsigned char *)this + 45);
    *((unsigned char *)this + 45) = *((unsigned char *)a2 + 45);
    *((unsigned char *)a2 + 45) = v5;
    LOBYTE(v5) = *((unsigned char *)this + 46);
    *((unsigned char *)this + 46) = *((unsigned char *)a2 + 46);
    *((unsigned char *)a2 + 46) = v5;
    float result = *((float *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((float *)a2 + 12) = result;
    LODWORD(v5) = *((_DWORD *)this + 14);
    *((_DWORD *)this + 14) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v5;
    LODWORD(v5) = *((_DWORD *)this + 13);
    *((_DWORD *)this + 13) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v5;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.MotionTypeDeviceMotion");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(_DWORD *)(this + 16) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus *CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus::SensorFusionStatus(CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus *this, const CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus *a2)
{
  *(void *)this = &unk_1EDD0D400;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 4) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus::MergeFrom(this, a2);
  return this;
}

void sub_18DF9444C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus *this, const CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v5);
  }
  if (*((unsigned char *)a2 + 16))
  {
    int v4 = *((_DWORD *)a2 + 2);
    *((_DWORD *)this + 4) |= 1u;
    *((_DWORD *)this + 2) = v4;
  }
}

void sub_18DF944EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus::~SensorFusionStatus(CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus *this)
{
  *(void *)this = &unk_1EDD0D400;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus::~SensorFusionStatus(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 12) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus::New(CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 16)) {
    *(_DWORD *)(this + 8) = 0;
  }
  *(_DWORD *)(this + 16) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unsigned int *)((char *)this + 8);
  while (1)
  {
    while (1)
    {
      uint64_t v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v5 + 1;
      }
      if (TagFallback != 8) {
        break;
      }
      int v8 = (char *)*((void *)a2 + 1);
      unint64_t v7 = *((void *)a2 + 2);
      if ((unint64_t)v8 >= v7 || *v8 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
        if (!result) {
          return result;
        }
        uint64_t v9 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v7 = *((void *)a2 + 2);
      }
      else
      {
        unsigned int *v4 = *v8;
        uint64_t v9 = (unsigned __int8 *)(v8 + 1);
        *((void *)a2 + 1) = v9;
      }
      *((_DWORD *)this + 4) |= 1u;
      if (v9 == (unsigned __int8 *)v7 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      break;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if (*(unsigned char *)(this + 16)) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 8), (uint64_t)a2, a4);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus *this)
{
  if (*((unsigned char *)this + 16))
  {
    uint64_t v3 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
    if (v3 >= 0x80) {
      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v3) + 1;
    }
    else {
      uint64_t result = 2;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  *((_DWORD *)this + 3) = result;
  return result;
}

void CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus *this, const CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus *this)
{
  return 1;
}

CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus *CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus::Swap(CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus *this, CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus *a2)
{
  if (a2 != this)
  {
    int v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    int v3 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v3;
    int v4 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v4;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.SensorFusionStatus");
}

double CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample *this)
{
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((unsigned char *)this + 24) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 28) = 0u;
  *(_OWORD *)((char *)this + 44) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample *CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::DeviceMotionSample(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample *this, const CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample *a2)
{
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)this = &unk_1EDD0D0B8;
  *((unsigned char *)this + 24) = 0;
  *(_OWORD *)((char *)this + 28) = 0u;
  *(_OWORD *)((char *)this + 44) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::MergeFrom(this, a2);
  return this;
}

void sub_18DF949B0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

float CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample *this, const CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v16);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 56);
  if (!(_BYTE)v5) {
    return *(float *)&v4;
  }
  if (*((unsigned char *)a2 + 56))
  {
    *((_DWORD *)this + 14) |= 1u;
    uint64_t v6 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
    if (!v6) {
      operator new();
    }
    unint64_t v7 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)a2 + 1);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      unint64_t v7 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::default_instance_
                                                                           + 8);
    }
    double v4 = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v6, v7);
    int v5 = *((_DWORD *)a2 + 14);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_24;
    }
  }
  else if ((*((unsigned char *)a2 + 56) & 2) == 0)
  {
    goto LABEL_6;
  }
  *((_DWORD *)this + 14) |= 2u;
  int v8 = (CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion *)*((void *)this + 2);
  if (!v8) {
    operator new();
  }
  uint64_t v9 = (const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion *)*((void *)a2 + 2);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    uint64_t v9 = *(const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion **)(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::default_instance_
                                                                                      + 16);
  }
  *(float *)&double v4 = CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::MergeFrom(v8, v9);
  int v5 = *((_DWORD *)a2 + 14);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_25;
  }
LABEL_24:
  char v10 = *((unsigned char *)a2 + 24);
  *((_DWORD *)this + 14) |= 4u;
  *((unsigned char *)this + 24) = v10;
  int v5 = *((_DWORD *)a2 + 14);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_26;
  }
LABEL_25:
  int v11 = *((_DWORD *)a2 + 7);
  *((_DWORD *)this + 14) |= 8u;
  *((_DWORD *)this + 7) = v11;
  int v5 = *((_DWORD *)a2 + 14);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
    goto LABEL_28;
  }
LABEL_26:
  unsigned int v12 = *((_DWORD *)a2 + 10);
  if (v12 >= 5) {
    __assert_rtn("set_mode", "CoreNavigationCLPPrivateDataShared.pb.h", 24446, "::CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionMode_IsValid(value)");
  }
  *((_DWORD *)this + 14) |= 0x10u;
  *((_DWORD *)this + 10) = v12;
  int v5 = *((_DWORD *)a2 + 14);
  if ((v5 & 0x20) == 0)
  {
LABEL_10:
    if ((v5 & 0x40) == 0) {
      goto LABEL_11;
    }
LABEL_33:
    LODWORD(v4) = *((_DWORD *)a2 + 11);
    *((_DWORD *)this + 14) |= 0x40u;
    *((_DWORD *)this + 11) = LODWORD(v4);
    if ((*((_DWORD *)a2 + 14) & 0x80) == 0) {
      return *(float *)&v4;
    }
    goto LABEL_12;
  }
LABEL_28:
  *((_DWORD *)this + 14) |= 0x20u;
  int v13 = (CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus *)*((void *)this + 4);
  if (!v13) {
    operator new();
  }
  int v14 = (const CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus *)*((void *)a2 + 4);
  if (!v14)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    int v14 = *(const CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus **)(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::default_instance_
                                                                                   + 32);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus::MergeFrom(v13, v14);
  int v5 = *((_DWORD *)a2 + 14);
  if ((v5 & 0x40) != 0) {
    goto LABEL_33;
  }
LABEL_11:
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    LODWORD(v4) = *((_DWORD *)a2 + 12);
    *((_DWORD *)this + 14) |= 0x80u;
    *((_DWORD *)this + 12) = LODWORD(v4);
  }
  return *(float *)&v4;
}

void sub_18DF94CB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::~DeviceMotionSample(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample *this)
{
  *(void *)this = &unk_1EDD0D0B8;
  CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::~DeviceMotionSample(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample *)CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 2);
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = *((void *)this + 4);
    if (v4)
    {
      int v5 = *(void (**)(void))(*(void *)v4 + 8);
      v5();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 52) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::New(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::Clear(uint64_t this)
{
  uint64_t v1 = this;
  LOBYTE(v2) = *(unsigned char *)(this + 56);
  if ((_BYTE)v2)
  {
    if (*(unsigned char *)(this + 56))
    {
      uint64_t v3 = *(void *)(this + 8);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
          *(void *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        int v2 = *(_DWORD *)(this + 56);
      }
    }
    if ((v2 & 2) != 0)
    {
      this = *(void *)(this + 16);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::Clear(this);
        int v2 = *(_DWORD *)(v1 + 56);
      }
    }
    *(unsigned char *)(v1 + 24) = 0;
    *(_DWORD *)(v1 + 28) = 0;
    *(_DWORD *)(v1 + 40) = 0;
    if ((v2 & 0x20) != 0)
    {
      uint64_t v4 = *(void *)(v1 + 32);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 16)) {
          *(_DWORD *)(v4 + 8) = 0;
        }
        *(_DWORD *)(v4 + 16) = 0;
      }
    }
    *(_DWORD *)(v1 + 44) = 0;
    *(_DWORD *)(v1 + 48) = 0;
  }
  *(_DWORD *)(v1 + 56) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4 = (unsigned int *)((char *)this + 28);
  while (2)
  {
    int v5 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_28;
        }
        *((_DWORD *)this + 14) |= 1u;
        int v8 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
        if (!v8) {
          operator new();
        }
        unsigned int v41 = 0;
        uint64_t v9 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v9 >= *((void *)a2 + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v41))return 0; {
        }
          }
        else
        {
          unsigned int v41 = *v9;
          *((void *)a2 + 1) = v9 + 1;
        }
        int v14 = *((_DWORD *)a2 + 14);
        int v15 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v14 + 1;
        if (v14 >= v15) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream(v8, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v16 = *((_DWORD *)a2 + 14);
        BOOL v17 = __OFSUB__(v16, 1);
        int v18 = v16 - 1;
        if (v18 < 0 == v17) {
          *((_DWORD *)a2 + 14) = v18;
        }
        int v19 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v19 >= *((void *)a2 + 2) || *v19 != 18) {
          continue;
        }
        *((void *)a2 + 1) = v19 + 1;
        goto LABEL_40;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_28;
        }
LABEL_40:
        *((_DWORD *)this + 14) |= 2u;
        int v20 = (CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion *)*((void *)this + 2);
        if (!v20) {
          operator new();
        }
        unsigned int v41 = 0;
        int v21 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v21 >= *((void *)a2 + 2) || *v21 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v41))return 0; {
        }
          }
        else
        {
          unsigned int v41 = *v21;
          *((void *)a2 + 1) = v21 + 1;
        }
        int v22 = *((_DWORD *)a2 + 14);
        int v23 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v22 + 1;
        if (v22 >= v23) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::MergePartialFromCodedStream(v20, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v24 = *((_DWORD *)a2 + 14);
        BOOL v17 = __OFSUB__(v24, 1);
        int v25 = v24 - 1;
        if (v25 < 0 == v17) {
          *((_DWORD *)a2 + 14) = v25;
        }
        int v26 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
        if ((unint64_t)v26 >= v10 || *v26 != 24) {
          continue;
        }
        int v11 = v26 + 1;
        *((void *)a2 + 1) = v11;
LABEL_54:
        unsigned int v41 = 0;
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v41);
          if (!result) {
            return result;
          }
          unsigned int v27 = v41;
          unsigned int v28 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v10 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v27 = *v11;
          unsigned int v28 = v11 + 1;
          *((void *)a2 + 1) = v28;
        }
        *((unsigned char *)this + 24) = v27 != 0;
        *((_DWORD *)this + 14) |= 4u;
        if ((unint64_t)v28 >= v10 || *v28 != 32) {
          continue;
        }
        unsigned int v12 = v28 + 1;
        *((void *)a2 + 1) = v12;
LABEL_62:
        if ((unint64_t)v12 >= v10 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!result) {
            return result;
          }
          int v30 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v10 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v4 = *v12;
          int v30 = v12 + 1;
          *((void *)a2 + 1) = v30;
        }
        *((_DWORD *)this + 14) |= 8u;
        if ((unint64_t)v30 >= v10 || *v30 != 40) {
          continue;
        }
        int v13 = v30 + 1;
        *((void *)a2 + 1) = v13;
LABEL_70:
        unsigned int v41 = 0;
        if ((unint64_t)v13 >= v10 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v41);
          if (!result) {
            return result;
          }
          unsigned int v31 = v41;
        }
        else
        {
          unsigned int v31 = *v13;
          *((void *)a2 + 1) = v13 + 1;
        }
        if (v31 <= 4)
        {
          *((_DWORD *)this + 14) |= 0x10u;
          *((_DWORD *)this + 10) = v31;
        }
        int v32 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v32 >= *((void *)a2 + 2) || *v32 != 50) {
          continue;
        }
        *((void *)a2 + 1) = v32 + 1;
LABEL_80:
        *((_DWORD *)this + 14) |= 0x20u;
        int v33 = (CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus *)*((void *)this + 4);
        if (!v33) {
          operator new();
        }
        unsigned int v41 = 0;
        int v34 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v34 >= *((void *)a2 + 2) || *v34 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v41))return 0; {
        }
          }
        else
        {
          unsigned int v41 = *v34;
          *((void *)a2 + 1) = v34 + 1;
        }
        int v35 = *((_DWORD *)a2 + 14);
        int v36 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v35 + 1;
        if (v35 >= v36) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::SensorFusionStatus::MergePartialFromCodedStream(v33, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v37 = *((_DWORD *)a2 + 14);
        BOOL v17 = __OFSUB__(v37, 1);
        int v38 = v37 - 1;
        if (v38 < 0 == v17) {
          *((_DWORD *)a2 + 14) = v38;
        }
        int v39 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v39 >= *((void *)a2 + 2) || *v39 != 61) {
          continue;
        }
        *((void *)a2 + 1) = v39 + 1;
LABEL_94:
        unsigned int v41 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v41) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 11) = v41;
        *((_DWORD *)this + 14) |= 0x40u;
        int v40 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v40 >= *((void *)a2 + 2) || *v40 != 69) {
          continue;
        }
        *((void *)a2 + 1) = v40 + 1;
LABEL_98:
        unsigned int v41 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v41))
        {
          *((_DWORD *)this + 12) = v41;
          *((_DWORD *)this + 14) |= 0x80u;
          if (*((void *)a2 + 1) == *((void *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        int v11 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
        goto LABEL_54;
      case 4u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        unsigned int v12 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
        goto LABEL_62;
      case 5u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        int v13 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
        goto LABEL_70;
      case 6u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_80;
        }
        goto LABEL_28;
      case 7u:
        int v7 = TagFallback & 7;
        if (v7 == 5) {
          goto LABEL_94;
        }
        goto LABEL_28;
      case 8u:
        int v7 = TagFallback & 7;
        if (v7 != 5) {
          goto LABEL_28;
        }
        goto LABEL_98;
      default:
        int v7 = TagFallback & 7;
LABEL_28:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 56);
  if (v6)
  {
    uint64_t v7 = *(void *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 56);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v8 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::default_instance_ + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 24), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 28), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
LABEL_22:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (uint64_t)a2, *(float *)(v5 + 44), a3);
    if ((*(_DWORD *)(v5 + 56) & 0x80) == 0) {
      return this;
    }
    goto LABEL_23;
  }
LABEL_19:
  uint64_t v9 = *(void *)(v5 + 32);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v9 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::default_instance_ + 32);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v9, a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x40) != 0) {
    goto LABEL_22;
  }
LABEL_8:
  if ((v6 & 0x80) == 0) {
    return this;
  }
LABEL_23:
  float v10 = *(float *)(v5 + 48);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (uint64_t)a2, v10, a3);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::ByteSize(uint64_t this)
{
  uint64_t v1 = this;
  LOBYTE(v2) = *(unsigned char *)(this + 56);
  if (!(_BYTE)v2)
  {
    uint64_t result = 0;
    goto LABEL_51;
  }
  if ((*(unsigned char *)(this + 56) & 1) == 0)
  {
    int v3 = 0;
    if ((*(unsigned char *)(this + 56) & 2) == 0) {
      goto LABEL_21;
    }
    goto LABEL_15;
  }
  uint64_t v5 = *(void *)(this + 8);
  if (!v5)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v5 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::default_instance_ + 8);
  }
  int v6 = *(unsigned __int8 *)(v5 + 36);
  if (*(unsigned char *)(v5 + 36))
  {
    int v7 = (v6 << 31 >> 31) & 9;
    if ((v6 & 2) != 0) {
      v7 += 9;
    }
    if ((v6 & 4) != 0) {
      int v6 = v7 + 9;
    }
    else {
      int v6 = v7;
    }
  }
  *(_DWORD *)(v5 + 32) = v6;
  int v3 = v6 + 2;
  int v2 = *(_DWORD *)(v1 + 56);
  if ((v2 & 2) != 0)
  {
LABEL_15:
    uint64_t v8 = *(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 ***)(v1 + 16);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(0);
      uint64_t v8 = *(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDoubleVector4 ***)(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::default_instance_
                                                                                    + 16);
    }
    uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeDeviceMotion::ByteSize(v8);
    int v10 = (int)v9;
    if (v9 >= 0x80) {
      this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9);
    }
    else {
      this = 1;
    }
    v3 += v10 + this + 1;
    int v2 = *(_DWORD *)(v1 + 56);
  }
LABEL_21:
  if ((v2 & 4) != 0) {
    v3 += 2;
  }
  if ((v2 & 8) != 0)
  {
    this = *(unsigned int *)(v1 + 28);
    if (this >= 0x80)
    {
      this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)this);
      int v11 = this + 1;
      int v2 = *(_DWORD *)(v1 + 56);
    }
    else
    {
      int v11 = 2;
    }
    v3 += v11;
    if ((v2 & 0x10) == 0)
    {
LABEL_25:
      if ((v2 & 0x20) == 0) {
        goto LABEL_46;
      }
LABEL_37:
      uint64_t v13 = *(void *)(v1 + 32);
      if (!v13)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
        uint64_t v13 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::default_instance_ + 32);
      }
      if (*(unsigned char *)(v13 + 16))
      {
        int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(v13 + 8);
        if (v15 > 0x7F)
        {
          int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15);
          int v14 = v18 + 1;
          *(_DWORD *)(v13 + 12) = v18 + 1;
          if ((v18 + 1) >= 0x80)
          {
            int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v18 + 1));
            goto LABEL_45;
          }
LABEL_44:
          int v16 = 1;
LABEL_45:
          v3 += v14 + v16 + 1;
          int v2 = *(_DWORD *)(v1 + 56);
          goto LABEL_46;
        }
        int v14 = 2;
      }
      else
      {
        int v14 = 0;
      }
      *(_DWORD *)(v13 + 12) = v14;
      goto LABEL_44;
    }
  }
  else if ((v2 & 0x10) == 0)
  {
    goto LABEL_25;
  }
  this = *(unsigned int *)(v1 + 40);
  if ((this & 0x80000000) != 0)
  {
    int v12 = 11;
  }
  else if (this >= 0x80)
  {
    this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)this);
    int v12 = this + 1;
    int v2 = *(_DWORD *)(v1 + 56);
  }
  else
  {
    int v12 = 2;
  }
  v3 += v12;
  if ((v2 & 0x20) != 0) {
    goto LABEL_37;
  }
LABEL_46:
  unsigned int v17 = v3 + 5;
  if ((v2 & 0x40) == 0) {
    unsigned int v17 = v3;
  }
  if ((v2 & 0x80) != 0) {
    uint64_t result = v17 + 5;
  }
  else {
    uint64_t result = v17;
  }
LABEL_51:
  *(_DWORD *)(v1 + 52) = result;
  return result;
}

float CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::MergeFrom(this, lpsrc);
}

float CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample *this, const CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample *this)
{
  return 1;
}

float CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::Swap(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample *this, CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    uint64_t v3 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    LOBYTE(v3) = *((unsigned char *)this + 24);
    *((unsigned char *)this + 24) = *((unsigned char *)a2 + 24);
    *((unsigned char *)a2 + 24) = v3;
    LODWORD(v3) = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v3;
    LODWORD(v3) = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v3;
    uint64_t v4 = *((void *)this + 4);
    *((void *)this + 4) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v4;
    int v5 = *((_DWORD *)this + 11);
    *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v5;
    float result = *((float *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((float *)a2 + 12) = result;
    LODWORD(v4) = *((_DWORD *)this + 14);
    *((_DWORD *)this + 14) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v4;
    LODWORD(v4) = *((_DWORD *)this + 13);
    *((_DWORD *)this + 13) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v4;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.DeviceMotionSample");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 40) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion *CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::DeviceMotion(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion *this, const CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion *a2)
{
  *((void *)this + 5) = 0;
  *(void *)this = &unk_1EDD0B858;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::MergeFrom(this, a2);
  return this;
}

void sub_18DF95B74(_Unwind_Exception *a1)
{
  sub_18DF0C324(v1 + 2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion *this, const CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  uint64_t v4 = (CoreNavigation::CLP::LogEntry::PrivateData *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion *)((char *)this + 16));
  if (*((int *)a2 + 6) >= 1)
  {
    uint64_t v6 = 0;
    do
    {
      int v7 = *(const CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample **)(*((void *)a2 + 2) + 8 * v6);
      int v8 = *((_DWORD *)this + 7);
      uint64_t v9 = *((int *)this + 6);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)this + 8))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion *)((char *)this + 16));
          int v8 = *((_DWORD *)this + 7);
        }
        *((_DWORD *)this + 7) = v8 + 1;
        operator new();
      }
      uint64_t v10 = *((void *)this + 2);
      *((_DWORD *)this + 6) = v9 + 1;
      *(float *)&double result = CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::MergeFrom(*(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample **)(v10 + 8 * v9), v7);
      ++v6;
    }
    while (v6 < *((int *)a2 + 6));
  }
  if (*((unsigned char *)a2 + 44))
  {
    *((_DWORD *)this + 11) |= 1u;
    int v11 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
    if (!v11) {
      operator new();
    }
    int v12 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)a2 + 1);
    if (!v12)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(v4);
      int v12 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::default_instance_
                                                                            + 8);
    }
    return CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v11, v12);
  }
  return result;
}

void sub_18DF95D84(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::~DeviceMotion(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion *this)
{
  *(void *)this = &unk_1EDD0B858;
  CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::SharedDtor(this);
  sub_18DF0C324((uint64_t *)this + 2);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::~DeviceMotion(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion *)CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2)
    {
      uint64_t v3 = *(void (**)(void))(*(void *)v2 + 8);
      v3();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 40) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::New(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::Clear(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion *this)
{
  if (*((unsigned char *)this + 44))
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2)
    {
      if (*(unsigned char *)(v2 + 36))
      {
        *(void *)(v2 + 8) = 0;
        *(void *)(v2 + 16) = 0;
        *(void *)(v2 + 24) = 0;
      }
      *(_DWORD *)(v2 + 36) = 0;
    }
  }
  uint64_t result = sub_18DF0C208((uint64_t)this + 16);
  *((_DWORD *)this + 11) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4 = (CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        int v5 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v5;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((void *)a2 + 1) = v5 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_18;
        }
        *((_DWORD *)this + 11) |= 1u;
        int v8 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
        if (!v8) {
          operator new();
        }
        unsigned int v27 = 0;
        uint64_t v9 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v9 >= *((void *)a2 + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v27))return 0; {
        }
          }
        else
        {
          unsigned int v27 = *v9;
          *((void *)a2 + 1) = v9 + 1;
        }
        int v10 = *((_DWORD *)a2 + 14);
        int v11 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v10 + 1;
        if (v10 >= v11) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream(v8, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v12 = *((_DWORD *)a2 + 14);
        BOOL v13 = __OFSUB__(v12, 1);
        int v14 = v12 - 1;
        if (v14 < 0 == v13) {
          *((_DWORD *)a2 + 14) = v14;
        }
        int v15 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v15 < *((void *)a2 + 2) && *v15 == 18) {
          goto LABEL_29;
        }
      }
      if (TagFallback >> 3 != 2) {
        break;
      }
      int v7 = TagFallback & 7;
      if (v7 != 2) {
        goto LABEL_18;
      }
      while (1)
      {
        int v16 = *((_DWORD *)this + 7);
        uint64_t v17 = *((int *)this + 6);
        if ((int)v17 >= v16)
        {
          if (v16 == *((_DWORD *)this + 8))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
            int v16 = *((_DWORD *)this + 7);
          }
          *((_DWORD *)this + 7) = v16 + 1;
          operator new();
        }
        uint64_t v18 = *((void *)this + 2);
        *((_DWORD *)this + 6) = v17 + 1;
        int v19 = *(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample **)(v18 + 8 * v17);
        unsigned int v28 = 0;
        int v20 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v20 >= *((void *)a2 + 2) || *v20 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v28))return 0; {
        }
          }
        else
        {
          unsigned int v28 = *v20;
          *((void *)a2 + 1) = v20 + 1;
        }
        int v21 = *((_DWORD *)a2 + 14);
        int v22 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v21 + 1;
        if (v21 >= v22) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::MergePartialFromCodedStream(v19, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v23 = *((_DWORD *)a2 + 14);
        BOOL v13 = __OFSUB__(v23, 1);
        int v24 = v23 - 1;
        if (v24 < 0 == v13) {
          *((_DWORD *)a2 + 14) = v24;
        }
        int v15 = (unsigned char *)*((void *)a2 + 1);
        int v25 = (unsigned char *)*((void *)a2 + 2);
        if (v15 >= v25 || *v15 != 18) {
          break;
        }
LABEL_29:
        *((void *)a2 + 1) = v15 + 1;
      }
      if (v15 == v25 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      }
    }
    int v7 = TagFallback & 7;
LABEL_18:
    if (v7 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(unsigned char *)(this + 44))
  {
    uint64_t v6 = *(void *)(this + 8);
    if (!v6)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      uint64_t v6 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
  }
  if (*(int *)(v5 + 24) >= 1)
  {
    uint64_t v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(*(void *)(v5 + 16) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 24));
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion *this)
{
  if (*((unsigned char *)this + 44))
  {
    uint64_t v3 = *((void *)this + 1);
    if (!v3)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      uint64_t v3 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::default_instance_ + 8);
    }
    int v4 = *(unsigned __int8 *)(v3 + 36);
    if (*(unsigned char *)(v3 + 36))
    {
      int v5 = (v4 << 31 >> 31) & 9;
      if ((v4 & 2) != 0) {
        v5 += 9;
      }
      if ((v4 & 4) != 0) {
        int v4 = v5 + 9;
      }
      else {
        int v4 = v5;
      }
    }
    *(_DWORD *)(v3 + 32) = v4;
    int v2 = v4 + 2;
  }
  else
  {
    int v2 = 0;
  }
  int v6 = *((_DWORD *)this + 6);
  uint64_t v7 = (v6 + v2);
  if (v6 >= 1)
  {
    uint64_t v8 = 0;
    do
    {
      uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::ByteSize(*(void *)(*((void *)this + 2) + 8 * v8));
      int v10 = (int)v9;
      if (v9 >= 0x80) {
        int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9);
      }
      else {
        int v11 = 1;
      }
      uint64_t v7 = (v10 + v7 + v11);
      ++v8;
    }
    while (v8 < *((int *)this + 6));
  }
  *((_DWORD *)this + 10) = v7;
  return v7;
}

double CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion *this, const CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion *this)
{
  return 1;
}

CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion *CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::Swap(CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion *this, CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion *a2)
{
  if (a2 != this)
  {
    uint64_t v3 = this;
    uint64_t v4 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v4;
    this = (CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    int v5 = *((_DWORD *)v3 + 11);
    *((_DWORD *)v3 + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v5;
    int v6 = *((_DWORD *)v3 + 10);
    *((_DWORD *)v3 + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v6;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.DeviceMotion");
}

double CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData *this)
{
  *((void *)this + 9) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData *CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::MotionTypeGeomagneticModelData(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData *this, const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData *a2)
{
  *(void *)this = &unk_1EDD0E5D0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *((void *)this + 9) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::MergeFrom(this, a2);
  return this;
}

void sub_18DF966A0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData *this, const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 76);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 76))
    {
      double result = *((double *)a2 + 1);
      *((_DWORD *)this + 19) |= 1u;
      *((double *)this + 1) = result;
      int v5 = *((_DWORD *)a2 + 19);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_15;
      }
    }
    else if ((*((unsigned char *)a2 + 76) & 2) == 0)
    {
      goto LABEL_6;
    }
    double result = *((double *)a2 + 2);
    *((_DWORD *)this + 19) |= 2u;
    *((double *)this + 2) = result;
    int v5 = *((_DWORD *)a2 + 19);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_16;
    }
LABEL_15:
    double result = *((double *)a2 + 3);
    *((_DWORD *)this + 19) |= 4u;
    *((double *)this + 3) = result;
    int v5 = *((_DWORD *)a2 + 19);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_17;
    }
LABEL_16:
    double result = *((double *)a2 + 4);
    *((_DWORD *)this + 19) |= 8u;
    *((double *)this + 4) = result;
    int v5 = *((_DWORD *)a2 + 19);
    if ((v5 & 0x10) == 0)
    {
LABEL_9:
      if ((v5 & 0x20) == 0) {
        goto LABEL_10;
      }
      goto LABEL_18;
    }
LABEL_17:
    double result = *((double *)a2 + 5);
    *((_DWORD *)this + 19) |= 0x10u;
    *((double *)this + 5) = result;
    int v5 = *((_DWORD *)a2 + 19);
    if ((v5 & 0x20) == 0)
    {
LABEL_10:
      if ((v5 & 0x40) == 0) {
        goto LABEL_11;
      }
      goto LABEL_19;
    }
LABEL_18:
    double result = *((double *)a2 + 6);
    *((_DWORD *)this + 19) |= 0x20u;
    *((double *)this + 6) = result;
    int v5 = *((_DWORD *)a2 + 19);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0) {
        return result;
      }
      goto LABEL_20;
    }
LABEL_19:
    double result = *((double *)a2 + 7);
    *((_DWORD *)this + 19) |= 0x40u;
    *((double *)this + 7) = result;
    if ((*((_DWORD *)a2 + 19) & 0x80) == 0) {
      return result;
    }
LABEL_20:
    *((_DWORD *)this + 19) |= 0x80u;
    int v6 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 8);
    if (!v6) {
      operator new();
    }
    uint64_t v7 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)a2 + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      uint64_t v7 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::default_instance_
                                                                           + 64);
    }
    return CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v6, v7);
  }
  return result;
}

void sub_18DF96898(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::~MotionTypeGeomagneticModelData(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData *this)
{
  *(void *)this = &unk_1EDD0E5D0;
  CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::~MotionTypeGeomagneticModelData(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData *)CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 8);
    if (v2)
    {
      uint64_t v3 = *(void (**)(void))(*(void *)v2 + 8);
      v3();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 72) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::New(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::Clear(uint64_t this)
{
  char v1 = *(unsigned char *)(this + 76);
  if (v1)
  {
    *(void *)(this + 56) = 0;
    *(_OWORD *)(this + 40) = 0u;
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 8) = 0u;
    if (v1 < 0)
    {
      uint64_t v2 = *(void *)(this + 64);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 36))
        {
          *(void *)(v2 + 8) = 0;
          *(void *)(v2 + 16) = 0;
          *(void *)(v2 + 24) = 0;
        }
        *(_DWORD *)(v2 + 36) = 0;
      }
    }
  }
  *(_DWORD *)(this + 76) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (2)
  {
    uint64_t v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_50;
        }
        *(void *)int v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v23) & 1) == 0)return 0; {
        *((void *)this + 1) = *(void *)v23;
        }
        *((_DWORD *)this + 19) |= 1u;
        uint64_t v7 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v7 >= *((void *)a2 + 2) || *v7 != 17) {
          continue;
        }
        *((void *)a2 + 1) = v7 + 1;
        goto LABEL_14;
      case 2u:
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_50;
        }
LABEL_14:
        *(void *)int v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v23) & 1) == 0)return 0; {
        *((void *)this + 2) = *(void *)v23;
        }
        *((_DWORD *)this + 19) |= 2u;
        uint64_t v8 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 != 25) {
          continue;
        }
        *((void *)a2 + 1) = v8 + 1;
LABEL_19:
        *(void *)int v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v23) & 1) == 0)return 0; {
        *((void *)this + 3) = *(void *)v23;
        }
        *((_DWORD *)this + 19) |= 4u;
        uint64_t v9 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v9 >= *((void *)a2 + 2) || *v9 != 33) {
          continue;
        }
        *((void *)a2 + 1) = v9 + 1;
LABEL_24:
        *(void *)int v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v23) & 1) == 0)return 0; {
        *((void *)this + 4) = *(void *)v23;
        }
        *((_DWORD *)this + 19) |= 8u;
        int v10 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 != 41) {
          continue;
        }
        *((void *)a2 + 1) = v10 + 1;
LABEL_29:
        *(void *)int v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v23) & 1) == 0)return 0; {
        *((void *)this + 5) = *(void *)v23;
        }
        *((_DWORD *)this + 19) |= 0x10u;
        int v11 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v11 >= *((void *)a2 + 2) || *v11 != 49) {
          continue;
        }
        *((void *)a2 + 1) = v11 + 1;
LABEL_34:
        *(void *)int v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v23) & 1) == 0)return 0; {
        *((void *)this + 6) = *(void *)v23;
        }
        *((_DWORD *)this + 19) |= 0x20u;
        int v12 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v12 >= *((void *)a2 + 2) || *v12 != 57) {
          continue;
        }
        *((void *)a2 + 1) = v12 + 1;
LABEL_39:
        *(void *)int v23 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v23) & 1) == 0)return 0; {
        *((void *)this + 7) = *(void *)v23;
        }
        int v13 = *((_DWORD *)this + 19) | 0x40;
        *((_DWORD *)this + 19) = v13;
        int v14 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v14 >= *((void *)a2 + 2) || *v14 != 66) {
          continue;
        }
        *((void *)a2 + 1) = v14 + 1;
LABEL_45:
        *((_DWORD *)this + 19) = v13 | 0x80;
        int v15 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 8);
        if (!v15) {
          operator new();
        }
        v23[0] = 0;
        int v16 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v16 >= *((void *)a2 + 2) || *v16 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v23))return 0; {
        }
          }
        else
        {
          v23[0] = *v16;
          *((void *)a2 + 1) = v16 + 1;
        }
        int v17 = *((_DWORD *)a2 + 14);
        int v18 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v17 + 1;
        if (v17 < v18)
        {
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream(v15, a2))
          {
            if (*((unsigned char *)a2 + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
              int v19 = *((_DWORD *)a2 + 14);
              BOOL v20 = __OFSUB__(v19, 1);
              int v21 = v19 - 1;
              if (v21 < 0 == v20) {
                *((_DWORD *)a2 + 14) = v21;
              }
              if (*((void *)a2 + 1) == *((void *)a2 + 2)
                && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
              {
                *((_DWORD *)a2 + 8) = 0;
                uint64_t result = 1;
                *((unsigned char *)a2 + 36) = 1;
                return result;
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_19;
        }
        goto LABEL_50;
      case 4u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_24;
        }
        goto LABEL_50;
      case 5u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_29;
        }
        goto LABEL_50;
      case 6u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_34;
        }
        goto LABEL_50;
      case 7u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_39;
        }
        goto LABEL_50;
      case 8u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_50;
        }
        int v13 = *((_DWORD *)this + 19);
        goto LABEL_45;
      default:
        int v6 = TagFallback & 7;
LABEL_50:
        if (v6 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 76);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
    int v6 = *(_DWORD *)(v5 + 76);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_14;
  }
LABEL_13:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_15;
  }
LABEL_14:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(v5 + 40), a3);
  int v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
LABEL_16:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (uint64_t)a2, *(double *)(v5 + 56), a3);
    if ((*(_DWORD *)(v5 + 76) & 0x80) == 0) {
      return this;
    }
    goto LABEL_17;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(double *)(v5 + 48), a3);
  int v6 = *(_DWORD *)(v5 + 76);
  if ((v6 & 0x40) != 0) {
    goto LABEL_16;
  }
LABEL_8:
  if ((v6 & 0x80) == 0) {
    return this;
  }
LABEL_17:
  uint64_t v7 = *(void *)(v5 + 64);
  if (!v7)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::default_instance_ + 64);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v7, a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData *this)
{
  int v2 = *((unsigned __int8 *)this + 76);
  if (*((unsigned char *)this + 76))
  {
    unsigned int v3 = (v2 << 31 >> 31) & 9;
    if ((v2 & 2) != 0) {
      v3 += 9;
    }
    if ((v2 & 4) != 0) {
      v3 += 9;
    }
    if ((v2 & 8) != 0) {
      v3 += 9;
    }
    if ((v2 & 0x10) != 0) {
      v3 += 9;
    }
    if ((v2 & 0x20) != 0) {
      v3 += 9;
    }
    if ((v2 & 0x40) != 0) {
      uint64_t v4 = v3 + 9;
    }
    else {
      uint64_t v4 = v3;
    }
    if ((v2 & 0x80) != 0)
    {
      uint64_t v5 = *((void *)this + 8);
      if (!v5)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
        uint64_t v5 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::default_instance_
                       + 64);
      }
      int v6 = *(unsigned __int8 *)(v5 + 36);
      int v7 = (v6 << 31 >> 31) & 9;
      if ((v6 & 2) != 0) {
        v7 += 9;
      }
      if ((v6 & 4) != 0) {
        v7 += 9;
      }
      if (*(unsigned char *)(v5 + 36)) {
        int v8 = v7;
      }
      else {
        int v8 = 0;
      }
      *(_DWORD *)(v5 + 32) = v8;
      uint64_t v4 = (v4 + v8 + 2);
    }
  }
  else
  {
    uint64_t v4 = 0;
  }
  *((_DWORD *)this + 18) = v4;
  return v4;
}

double CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData *this, const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::Swap(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData *this, CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    uint64_t v3 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    uint64_t v4 = *((void *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v4;
    uint64_t v5 = *((void *)this + 4);
    *((void *)this + 4) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v5;
    uint64_t v6 = *((void *)this + 5);
    *((void *)this + 5) = *((void *)a2 + 5);
    *((void *)a2 + 5) = v6;
    uint64_t v7 = *((void *)this + 6);
    *((void *)this + 6) = *((void *)a2 + 6);
    *((void *)a2 + 6) = v7;
    double result = *((double *)this + 7);
    *((void *)this + 7) = *((void *)a2 + 7);
    *((double *)a2 + 7) = result;
    uint64_t v9 = *((void *)this + 8);
    *((void *)this + 8) = *((void *)a2 + 8);
    *((void *)a2 + 8) = v9;
    LODWORD(v9) = *((_DWORD *)this + 19);
    *((_DWORD *)this + 19) = *((_DWORD *)a2 + 19);
    *((_DWORD *)a2 + 19) = v9;
    LODWORD(v9) = *((_DWORD *)this + 18);
    *((_DWORD *)this + 18) = *((_DWORD *)a2 + 18);
    *((_DWORD *)a2 + 18) = v9;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.MotionTypeGeomagneticModelData");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData *CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData::GeomagneticModelData(CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData *this, const CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData *a2)
{
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)this = &unk_1EDD0D7C0;
  CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData::MergeFrom(this, a2);
  return this;
}

void sub_18DF9736C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData *this, const CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  if (*((unsigned char *)a2 + 20))
  {
    *((_DWORD *)this + 5) |= 1u;
    uint64_t v5 = (CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData *)*((void *)this + 1);
    if (!v5) {
      operator new();
    }
    uint64_t v6 = (const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData *)*((void *)a2 + 1);
    if (!v6)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      uint64_t v6 = *(const CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData **)(CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData::default_instance_
                                                                                                + 8);
    }
    return CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::MergeFrom(v5, v6);
  }
  return result;
}

void sub_18DF97488(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData::~GeomagneticModelData(CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData *this)
{
  *(void *)this = &unk_1EDD0D7C0;
  CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData::~GeomagneticModelData(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData *)CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2)
    {
      uint64_t v3 = *(void (**)(void))(*(void *)v2 + 8);
      v3();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 16) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData::New(CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData::Clear(uint64_t this)
{
  uint64_t v1 = this;
  if (*(unsigned char *)(this + 20))
  {
    this = *(void *)(this + 8);
    if (this) {
      this = CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::Clear(this);
    }
  }
  *(_DWORD *)(v1 + 20) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (1)
  {
    while (1)
    {
      uint64_t v4 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
      }
      else
      {
        unint64_t TagFallback = *v4;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v4 + 1;
      }
      if (TagFallback != 10) {
        break;
      }
      *((_DWORD *)this + 5) |= 1u;
      uint64_t v6 = (CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData *)*((void *)this + 1);
      if (!v6) {
        operator new();
      }
      unsigned int v14 = 0;
      uint64_t v7 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v7 >= *((void *)a2 + 2) || *v7 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v14)) {
          return 0;
        }
      }
      else
      {
        unsigned int v14 = *v7;
        *((void *)a2 + 1) = v7 + 1;
      }
      int v8 = *((_DWORD *)a2 + 14);
      int v9 = *((_DWORD *)a2 + 15);
      *((_DWORD *)a2 + 14) = v8 + 1;
      if (v8 >= v9) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
      if (!CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::MergePartialFromCodedStream(v6, a2)|| !*((unsigned char *)a2 + 36))
      {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
      int v10 = *((_DWORD *)a2 + 14);
      BOOL v11 = __OFSUB__(v10, 1);
      int v12 = v10 - 1;
      if (v12 < 0 == v11) {
        *((_DWORD *)a2 + 14) = v12;
      }
      if (*((void *)a2 + 1) == *((void *)a2 + 2)
        && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      break;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if (*(unsigned char *)(this + 20))
  {
    uint64_t v5 = *(void *)(this + 8);
    if (!v5)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      uint64_t v5 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData::default_instance_ + 8);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v5, a2, a4);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData *this)
{
  if (*((unsigned char *)this + 20))
  {
    uint64_t v3 = (CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData *)*((void *)this + 1);
    if (!v3)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(0);
      uint64_t v3 = *(CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData **)(CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData::default_instance_
                                                                                          + 8);
    }
    uint64_t result = CoreNavigation::CLP::LogEntry::PrivateData::MotionTypeGeomagneticModelData::ByteSize(v3) + 2;
  }
  else
  {
    uint64_t result = 0;
  }
  *((_DWORD *)this + 4) = result;
  return result;
}

double CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData *this, const CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData *a2)
{
  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::GeomagneticModelData::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.GeomagneticModelData");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::SharedCtor(uint64_t this)
{
  uint64_t v1 = MEMORY[0x1E4FBA920];
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = v1;
  *(_DWORD *)(this + 56) = 0;
  *(void *)(this + 48) = 0;
  *(_DWORD *)(this + 44) = 0;
  *(void *)(this + 24) = 0;
  *(void *)(this + 32) = 0;
  *(_WORD *)(this + 40) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint *CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::WifiAccessPoint(CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint *this, const CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint *a2)
{
  *(void *)this = &unk_1EDD0C668;
  *((void *)this + 1) = 0;
  uint64_t v3 = MEMORY[0x1E4FBA920];
  *((_DWORD *)this + 14) = 0;
  *((void *)this + 6) = 0;
  *((_DWORD *)this + 11) = 0;
  *((void *)this + 3) = 0;
  *((void *)this + 4) = 0;
  *((void *)this + 2) = v3;
  *((_WORD *)this + 20) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::MergeFrom(this, a2);
  return this;
}

void sub_18DF97B10(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint *this, const CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v16);
  }
  int v4 = *((_DWORD *)a2 + 14);
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    uint64_t v8 = *((void *)a2 + 1);
    *((_DWORD *)this + 14) |= 1u;
    *((void *)this + 1) = v8;
    int v4 = *((_DWORD *)a2 + 14);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_24;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  int v9 = (const std::string *)*((void *)a2 + 2);
  *((_DWORD *)this + 14) |= 2u;
  int v10 = (std::string *)*((void *)this + 2);
  if (v10 == (std::string *)MEMORY[0x1E4FBA920]) {
    operator new();
  }
  std::string::operator=(v10, v9);
  int v4 = *((_DWORD *)a2 + 14);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_25;
  }
LABEL_24:
  int v11 = *((_DWORD *)a2 + 6);
  *((_DWORD *)this + 14) |= 4u;
  *((_DWORD *)this + 6) = v11;
  int v4 = *((_DWORD *)a2 + 14);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_27;
  }
LABEL_25:
  unsigned int v12 = *((_DWORD *)a2 + 7);
  if (v12 >= 4) {
    __assert_rtn("set_mode", "CoreNavigationCLPPrivateDataShared.pb.h", 24990, "::CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPointMode_IsValid(value)");
  }
  *((_DWORD *)this + 14) |= 8u;
  *((_DWORD *)this + 7) = v12;
  int v4 = *((_DWORD *)a2 + 14);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_28:
    int v14 = *((_DWORD *)a2 + 9);
    *((_DWORD *)this + 14) |= 0x20u;
    *((_DWORD *)this + 9) = v14;
    int v4 = *((_DWORD *)a2 + 14);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_29;
  }
LABEL_27:
  int v13 = *((_DWORD *)a2 + 8);
  *((_DWORD *)this + 14) |= 0x10u;
  *((_DWORD *)this + 8) = v13;
  int v4 = *((_DWORD *)a2 + 14);
  if ((v4 & 0x20) != 0) {
    goto LABEL_28;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_29:
  char v15 = *((unsigned char *)a2 + 40);
  *((_DWORD *)this + 14) |= 0x40u;
  *((unsigned char *)this + 40) = v15;
  int v4 = *((_DWORD *)a2 + 14);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    char v5 = *((unsigned char *)a2 + 41);
    *((_DWORD *)this + 14) |= 0x80u;
    *((unsigned char *)this + 41) = v5;
    int v4 = *((_DWORD *)a2 + 14);
  }
LABEL_13:
  if ((v4 & 0xFF00) != 0)
  {
    if ((v4 & 0x100) != 0)
    {
      unsigned int v6 = *((_DWORD *)a2 + 11);
      if (v6 >= 4) {
        __assert_rtn("set_band", "CoreNavigationCLPPrivateDataShared.pb.h", 25101, "::CoreNavigation::CLP::LogEntry::PrivateData::WifiRfBand_IsValid(value)");
      }
      *((_DWORD *)this + 14) |= 0x100u;
      *((_DWORD *)this + 11) = v6;
      int v4 = *((_DWORD *)a2 + 14);
    }
    if ((v4 & 0x200) != 0)
    {
      int v7 = *((_DWORD *)a2 + 12);
      *((_DWORD *)this + 14) |= 0x200u;
      *((_DWORD *)this + 12) = v7;
    }
  }
}

void sub_18DF97D70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::~WifiAccessPoint(CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint *this)
{
  *(void *)this = &unk_1EDD0C668;
  CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::~WifiAccessPoint(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint *this)
{
  uint64_t v1 = *((void *)this + 2);
  if (v1 != MEMORY[0x1E4FBA920] && v1 != 0)
  {
    if (*(char *)(v1 + 23) < 0) {
      operator delete(*(void **)v1);
    }
    this = (CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint *)MEMORY[0x192FA6240](v1, 0x1012C40EC159624);
  }

  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 52) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::New(CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 56);
  if ((_BYTE)v1)
  {
    *(void *)(this + 8) = 0;
    if ((v1 & 2) != 0)
    {
      uint64_t v2 = *(void *)(this + 16);
      if (v2 != MEMORY[0x1E4FBA920])
      {
        if (*(char *)(v2 + 23) < 0)
        {
          **(unsigned char **)uint64_t v2 = 0;
          *(void *)(v2 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v2 = 0;
          *(unsigned char *)(v2 + 23) = 0;
        }
      }
    }
    *(void *)(this + 24) = 0;
    *(void *)(this + 32) = 0;
    *(_WORD *)(this + 40) = 0;
    int v1 = *(_DWORD *)(this + 56);
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(_DWORD *)(this + 44) = 0;
    *(_DWORD *)(this + 48) = 0;
  }
  *(_DWORD *)(this + 56) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unint64_t *)((char *)this + 8);
  uint64_t v5 = MEMORY[0x1E4FBA920];
  while (2)
  {
    unsigned int v6 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v6 >= *((void *)a2 + 2) || *v6 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v6;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v6 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        if (v8 != 1) {
          goto LABEL_40;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, v4);
        if (result)
        {
          int v10 = *((_DWORD *)this + 14) | 1;
          *((_DWORD *)this + 14) = v10;
          int v11 = (unsigned char *)*((void *)a2 + 1);
          if ((unint64_t)v11 < *((void *)a2 + 2) && *v11 == 18)
          {
            *((void *)a2 + 1) = v11 + 1;
            goto LABEL_16;
          }
          continue;
        }
        return result;
      case 2u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_40;
        }
        int v10 = *((_DWORD *)this + 14);
LABEL_16:
        *((_DWORD *)this + 14) = v10 | 2;
        if (*((void *)this + 2) == v5) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (result)
        {
          int v13 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v12 = *((void *)a2 + 2);
          if ((unint64_t)v13 < v12 && *v13 == 24)
          {
            int v14 = v13 + 1;
            *((void *)a2 + 1) = v14;
            goto LABEL_24;
          }
          continue;
        }
        return result;
      case 3u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_40;
        }
        int v14 = (char *)*((void *)a2 + 1);
        unint64_t v12 = *((void *)a2 + 2);
LABEL_24:
        unsigned int v39 = 0;
        if ((unint64_t)v14 >= v12 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v39);
          if (!result) {
            return result;
          }
          unsigned int v15 = v39;
          int v16 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v12 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v15 = *v14;
          int v16 = v14 + 1;
          *((void *)a2 + 1) = v16;
        }
        *((_DWORD *)this + 6) = -(v15 & 1) ^ (v15 >> 1);
        *((_DWORD *)this + 14) |= 4u;
        if ((unint64_t)v16 < v12 && *v16 == 32)
        {
          int v17 = v16 + 1;
          *((void *)a2 + 1) = v17;
          goto LABEL_49;
        }
        continue;
      case 4u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_40;
        }
        int v17 = (char *)*((void *)a2 + 1);
        unint64_t v12 = *((void *)a2 + 2);
LABEL_49:
        unsigned int v39 = 0;
        if ((unint64_t)v17 >= v12 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v39);
          if (!result) {
            return result;
          }
          unsigned int v26 = v39;
        }
        else
        {
          unsigned int v26 = *v17;
          *((void *)a2 + 1) = v17 + 1;
        }
        if (v26 <= 3)
        {
          *((_DWORD *)this + 14) |= 8u;
          *((_DWORD *)this + 7) = v26;
        }
        unsigned int v27 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v18 = *((void *)a2 + 2);
        if ((unint64_t)v27 >= v18 || *v27 != 40) {
          continue;
        }
        int v19 = v27 + 1;
        *((void *)a2 + 1) = v19;
LABEL_59:
        unsigned int v39 = 0;
        if ((unint64_t)v19 >= v18 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v39);
          if (!result) {
            return result;
          }
          unsigned int v28 = v39;
          unsigned int v29 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v18 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v28 = *v19;
          unsigned int v29 = v19 + 1;
          *((void *)a2 + 1) = v29;
        }
        *((_DWORD *)this + 8) = v28;
        *((_DWORD *)this + 14) |= 0x10u;
        if ((unint64_t)v29 >= v18 || *v29 != 53) {
          continue;
        }
        *((void *)a2 + 1) = v29 + 1;
LABEL_67:
        unsigned int v39 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v39))
        {
          *((_DWORD *)this + 9) = v39;
          *((_DWORD *)this + 14) |= 0x20u;
          int v30 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v20 = *((void *)a2 + 2);
          if ((unint64_t)v30 < v20 && *v30 == 56)
          {
            int v21 = v30 + 1;
            *((void *)a2 + 1) = v21;
LABEL_71:
            unsigned int v39 = 0;
            if ((unint64_t)v21 >= v20 || *v21 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v39);
              if (!result) {
                return result;
              }
              unsigned int v31 = v39;
              int v32 = (unsigned char *)*((void *)a2 + 1);
              unint64_t v20 = *((void *)a2 + 2);
            }
            else
            {
              unsigned int v31 = *v21;
              int v32 = v21 + 1;
              *((void *)a2 + 1) = v32;
            }
            *((unsigned char *)this + 40) = v31 != 0;
            *((_DWORD *)this + 14) |= 0x40u;
            if ((unint64_t)v32 < v20 && *v32 == 64)
            {
              int v22 = v32 + 1;
              *((void *)a2 + 1) = v22;
LABEL_79:
              unsigned int v39 = 0;
              if ((unint64_t)v22 >= v20 || *v22 < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v39);
                if (!result) {
                  return result;
                }
                unsigned int v33 = v39;
                int v34 = (unsigned char *)*((void *)a2 + 1);
                unint64_t v20 = *((void *)a2 + 2);
              }
              else
              {
                unsigned int v33 = *v22;
                int v34 = v22 + 1;
                *((void *)a2 + 1) = v34;
              }
              *((unsigned char *)this + 41) = v33 != 0;
              *((_DWORD *)this + 14) |= 0x80u;
              if ((unint64_t)v34 < v20 && *v34 == 72)
              {
                int v23 = v34 + 1;
                *((void *)a2 + 1) = v23;
LABEL_87:
                unsigned int v39 = 0;
                if ((unint64_t)v23 >= v20 || *v23 < 0)
                {
                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v39);
                  if (!result) {
                    return result;
                  }
                  unsigned int v35 = v39;
                }
                else
                {
                  unsigned int v35 = *v23;
                  *((void *)a2 + 1) = v23 + 1;
                }
                if (v35 <= 3)
                {
                  *((_DWORD *)this + 14) |= 0x100u;
                  *((_DWORD *)this + 11) = v35;
                }
                int v36 = (unsigned char *)*((void *)a2 + 1);
                unint64_t v24 = *((void *)a2 + 2);
                if ((unint64_t)v36 < v24 && *v36 == 80)
                {
                  int v25 = v36 + 1;
                  *((void *)a2 + 1) = v25;
LABEL_97:
                  unsigned int v39 = 0;
                  if ((unint64_t)v25 >= v24 || *v25 < 0)
                  {
                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v39);
                    if (!result) {
                      return result;
                    }
                    unsigned int v37 = v39;
                    int v38 = (unsigned __int8 *)*((void *)a2 + 1);
                    unint64_t v24 = *((void *)a2 + 2);
                  }
                  else
                  {
                    unsigned int v37 = *v25;
                    int v38 = (unsigned __int8 *)(v25 + 1);
                    *((void *)a2 + 1) = v38;
                  }
                  *((_DWORD *)this + 12) = v37;
                  *((_DWORD *)this + 14) |= 0x200u;
                  if (v38 == (unsigned __int8 *)v24
                    && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                  {
                    *((_DWORD *)a2 + 8) = 0;
                    uint64_t result = 1;
                    *((unsigned char *)a2 + 36) = 1;
                    return result;
                  }
                }
              }
            }
          }
          continue;
        }
        return 0;
      case 5u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_40;
        }
        int v19 = (char *)*((void *)a2 + 1);
        unint64_t v18 = *((void *)a2 + 2);
        goto LABEL_59;
      case 6u:
        int v8 = TagFallback & 7;
        if (v8 == 5) {
          goto LABEL_67;
        }
        goto LABEL_40;
      case 7u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_40;
        }
        int v21 = (char *)*((void *)a2 + 1);
        unint64_t v20 = *((void *)a2 + 2);
        goto LABEL_71;
      case 8u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_40;
        }
        int v22 = (char *)*((void *)a2 + 1);
        unint64_t v20 = *((void *)a2 + 2);
        goto LABEL_79;
      case 9u:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_40;
        }
        int v23 = (char *)*((void *)a2 + 1);
        unint64_t v20 = *((void *)a2 + 2);
        goto LABEL_87;
      case 0xAu:
        int v8 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_40;
        }
        int v25 = (char *)*((void *)a2 + 1);
        unint64_t v24 = *((void *)a2 + 2);
        goto LABEL_97;
      default:
        int v8 = TagFallback & 7;
LABEL_40:
        if (v8 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 56);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFixed64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 56);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_14:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteSInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 28), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_17;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 32), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_18;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(float *)(v5 + 36), a3);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_19;
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned __int8 *)(v5 + 40), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
LABEL_20:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned int *)(v5 + 44), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 56) & 0x200) == 0) {
      return this;
    }
    goto LABEL_21;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned __int8 *)(v5 + 41), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x100) != 0) {
    goto LABEL_20;
  }
LABEL_10:
  if ((v6 & 0x200) == 0) {
    return this;
  }
LABEL_21:
  uint64_t v7 = *(unsigned int *)(v5 + 48);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v7, (uint64_t)a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint *this)
{
  int v2 = *((_DWORD *)this + 14);
  if (!(_BYTE)v2)
  {
    uint64_t v4 = 0;
    goto LABEL_40;
  }
  int v3 = (v2 << 31 >> 31) & 9;
  if ((v2 & 2) != 0)
  {
    uint64_t v5 = *((void *)this + 2);
    int v6 = *(unsigned __int8 *)(v5 + 23);
    char v7 = v6;
    uint64_t v8 = *(void *)(v5 + 8);
    if ((v6 & 0x80u) == 0) {
      unint64_t v9 = *(unsigned __int8 *)(v5 + 23);
    }
    else {
      unint64_t v9 = v8;
    }
    if (v9 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v9);
      int v6 = *(unsigned __int8 *)(v5 + 23);
      uint64_t v8 = *(void *)(v5 + 8);
      int v2 = *((_DWORD *)this + 14);
      char v7 = *(unsigned char *)(v5 + 23);
    }
    else
    {
      int v10 = 1;
    }
    if (v7 < 0) {
      int v6 = v8;
    }
    v3 += v10 + v6 + 1;
    if ((v2 & 4) == 0)
    {
LABEL_4:
      if ((v2 & 8) == 0) {
        goto LABEL_5;
      }
LABEL_21:
      int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
      if ((v13 & 0x80000000) != 0)
      {
        int v14 = 11;
      }
      else if (v13 >= 0x80)
      {
        int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13) + 1;
        int v2 = *((_DWORD *)this + 14);
      }
      else
      {
        int v14 = 2;
      }
      v3 += v14;
      if ((v2 & 0x10) == 0) {
        goto LABEL_33;
      }
      goto LABEL_27;
    }
  }
  else if ((v2 & 4) == 0)
  {
    goto LABEL_4;
  }
  int v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((2 * *((_DWORD *)this + 6)) ^ (*((int *)this + 6) >> 31));
  if (v11 >= 0x80)
  {
    int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11) + 1;
    int v2 = *((_DWORD *)this + 14);
  }
  else
  {
    int v12 = 2;
  }
  v3 += v12;
  if ((v2 & 8) != 0) {
    goto LABEL_21;
  }
LABEL_5:
  if ((v2 & 0x10) != 0)
  {
LABEL_27:
    unsigned int v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    if ((v15 & 0x80000000) != 0)
    {
      int v16 = 11;
    }
    else if (v15 >= 0x80)
    {
      int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15) + 1;
      int v2 = *((_DWORD *)this + 14);
    }
    else
    {
      int v16 = 2;
    }
    v3 += v16;
  }
LABEL_33:
  unsigned int v17 = v3 + 5;
  if ((v2 & 0x20) == 0) {
    unsigned int v17 = v3;
  }
  if ((v2 & 0x40) != 0) {
    v17 += 2;
  }
  if ((v2 & 0x80) != 0) {
    uint64_t v4 = v17 + 2;
  }
  else {
    uint64_t v4 = v17;
  }
LABEL_40:
  if ((v2 & 0xFF00) != 0)
  {
    if ((v2 & 0x100) != 0)
    {
      unint64_t v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
      if ((v18 & 0x80000000) != 0)
      {
        int v19 = 11;
      }
      else if (v18 >= 0x80)
      {
        int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18) + 1;
        int v2 = *((_DWORD *)this + 14);
      }
      else
      {
        int v19 = 2;
      }
      uint64_t v4 = (v19 + v4);
    }
    if ((v2 & 0x200) != 0)
    {
      unint64_t v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
      if ((v20 & 0x80000000) != 0)
      {
        int v21 = 11;
      }
      else if (v20 >= 0x80)
      {
        int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20) + 1;
      }
      else
      {
        int v21 = 2;
      }
      uint64_t v4 = (v21 + v4);
    }
  }
  *((_DWORD *)this + 13) = v4;
  return v4;
}

void CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint *this, const CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint *this)
{
  return 1;
}

float CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::Swap(CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint *this, CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    uint64_t v3 = *((void *)this + 2);
    uint64_t v4 = *((void *)a2 + 2);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)this + 2) = v4;
    *((void *)a2 + 1) = v2;
    *((void *)a2 + 2) = v3;
    LODWORD(v2) = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    LODWORD(v2) = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LODWORD(v2) = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
    float result = *((float *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((float *)a2 + 9) = result;
    LOBYTE(v2) = *((unsigned char *)this + 40);
    *((unsigned char *)this + 40) = *((unsigned char *)a2 + 40);
    *((unsigned char *)a2 + 40) = v2;
    LOBYTE(v2) = *((unsigned char *)this + 41);
    *((unsigned char *)this + 41) = *((unsigned char *)a2 + 41);
    *((unsigned char *)a2 + 41) = v2;
    LODWORD(v2) = *((_DWORD *)this + 11);
    *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v2;
    LODWORD(v2) = *((_DWORD *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v2;
    LODWORD(v2) = *((_DWORD *)this + 14);
    *((_DWORD *)this + 14) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v2;
    LODWORD(v2) = *((_DWORD *)this + 13);
    *((_DWORD *)this + 13) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v2;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.WifiAccessPoint");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::SharedCtor(uint64_t this)
{
  *(unsigned char *)(this + 16) = 0;
  *(void *)(this + 8) = 0;
  *(_DWORD *)(this + 20) = 0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState *CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::WifiAssociationState(CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState *this, const CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState *a2)
{
  *((unsigned char *)this + 16) = 0;
  *(void *)this = &unk_1EDD0D9A0;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 5) = 0;
  *((_DWORD *)this + 6) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::MergeFrom(this, a2);
  return this;
}

void sub_18DF98AC4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState *this, const CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 24);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 24))
    {
      char v5 = *((unsigned char *)a2 + 16);
      *((_DWORD *)this + 6) |= 1u;
      *((unsigned char *)this + 16) = v5;
      int v4 = *((_DWORD *)a2 + 6);
    }
    if ((v4 & 2) != 0)
    {
      *((_DWORD *)this + 6) |= 2u;
      int v6 = (CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint *)*((void *)this + 1);
      if (!v6) {
        operator new();
      }
      char v7 = (const CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint *)*((void *)a2 + 1);
      if (!v7)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
        char v7 = *(const CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint **)(CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::default_instance_
                                                                                   + 8);
      }
      CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::MergeFrom(v6, v7);
    }
  }
}

void sub_18DF98C08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::~WifiAssociationState(CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState *this)
{
  *(void *)this = &unk_1EDD0D9A0;
  CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::~WifiAssociationState(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState *)CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2)
    {
      uint64_t v3 = *(void (**)(void))(*(void *)v2 + 8);
      v3();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::New(CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::Clear(uint64_t this)
{
  uint64_t v1 = this;
  char v2 = *(unsigned char *)(this + 24);
  if (v2)
  {
    *(unsigned char *)(this + 16) = 0;
    if ((v2 & 2) != 0)
    {
      this = *(void *)(this + 8);
      if (this) {
        this = CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::Clear(this);
      }
    }
  }
  *(_DWORD *)(v1 + 24) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (1)
  {
    do
    {
      while (1)
      {
        int v4 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v4;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((void *)a2 + 1) = v4 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 == 1) {
          break;
        }
        if (TagFallback >> 3 == 2)
        {
          int v6 = TagFallback & 7;
          if (v6 == 2)
          {
            int v7 = *((_DWORD *)this + 6);
            goto LABEL_23;
          }
        }
        else
        {
          int v6 = TagFallback & 7;
        }
LABEL_15:
        if (v6 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
      }
        }
      int v6 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_15;
      }
      unsigned int v20 = 0;
      unint64_t v9 = (char *)*((void *)a2 + 1);
      unint64_t v8 = *((void *)a2 + 2);
      if ((unint64_t)v9 >= v8 || *v9 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v20);
        if (!result) {
          return result;
        }
        unsigned int v10 = v20;
        int v11 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v8 = *((void *)a2 + 2);
      }
      else
      {
        unsigned int v10 = *v9;
        int v11 = v9 + 1;
        *((void *)a2 + 1) = v11;
      }
      *((unsigned char *)this + 16) = v10 != 0;
      int v7 = *((_DWORD *)this + 6) | 1;
      *((_DWORD *)this + 6) = v7;
    }
    while ((unint64_t)v11 >= v8 || *v11 != 18);
    *((void *)a2 + 1) = v11 + 1;
LABEL_23:
    *((_DWORD *)this + 6) = v7 | 2;
    int v13 = (CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint *)*((void *)this + 1);
    if (!v13) {
      operator new();
    }
    unsigned int v21 = 0;
    int v14 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v14 >= *((void *)a2 + 2) || *v14 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v21)) {
        return 0;
      }
    }
    else
    {
      unsigned int v21 = *v14;
      *((void *)a2 + 1) = v14 + 1;
    }
    int v15 = *((_DWORD *)a2 + 14);
    int v16 = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 14) = v15 + 1;
    if (v15 >= v16) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
    if (!CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::MergePartialFromCodedStream(v13, a2)|| !*((unsigned char *)a2 + 36))
    {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
    int v17 = *((_DWORD *)a2 + 14);
    BOOL v18 = __OFSUB__(v17, 1);
    int v19 = v17 - 1;
    if (v19 < 0 == v18) {
      *((_DWORD *)a2 + 14) = v19;
    }
    if (*((void *)a2 + 1) == *((void *)a2 + 2)
      && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
    {
      *((_DWORD *)a2 + 8) = 0;
      uint64_t result = 1;
      *((unsigned char *)a2 + 36) = 1;
      return result;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 24);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(this + 16), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 24) & 2) == 0) {
      return this;
    }
  }
  else if ((v6 & 2) == 0)
  {
    return this;
  }
  uint64_t v7 = *(void *)(v5 + 8);
  if (!v7)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::default_instance_ + 8);
  }

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState *this)
{
  int v2 = *((_DWORD *)this + 6);
  if ((_BYTE)v2)
  {
    uint64_t v3 = 2 * (v2 & 1u);
    if ((v2 & 2) != 0)
    {
      int v4 = (CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint *)*((void *)this + 1);
      if (!v4)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(0);
        int v4 = *(CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint **)(CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::default_instance_
                                                                             + 8);
      }
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::ByteSize(v4);
      int v6 = (int)v5;
      if (v5 >= 0x80) {
        int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
      }
      else {
        int v7 = 1;
      }
      uint64_t v3 = (v3 | 1) + v6 + v7;
    }
  }
  else
  {
    uint64_t v3 = 0;
  }
  *((_DWORD *)this + 5) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState *this, const CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState *a2)
{
  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState *)this)
  {
    char v2 = *(unsigned char *)(this + 16);
    *(unsigned char *)(this + 16) = *((unsigned char *)a2 + 16);
    *((unsigned char *)a2 + 16) = v2;
    uint64_t v3 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v3;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.WifiAssociationState");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 40) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult *CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::WifiScanResult(CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult *this, const CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult *a2)
{
  *((void *)this + 5) = 0;
  *(void *)this = &unk_1EDD0C230;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::MergeFrom(this, a2);
  return this;
}

void sub_18DF99374(_Unwind_Exception *a1)
{
  sub_18DF0C324(v1 + 2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult *this, const CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  int v4 = (CoreNavigation::CLP::LogEntry::PrivateData *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult *)((char *)this + 16));
  if (*((int *)a2 + 6) >= 1)
  {
    uint64_t v6 = 0;
    do
    {
      int v7 = *(const CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint **)(*((void *)a2 + 2) + 8 * v6);
      int v8 = *((_DWORD *)this + 7);
      uint64_t v9 = *((int *)this + 6);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)this + 8))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult *)((char *)this + 16));
          int v8 = *((_DWORD *)this + 7);
        }
        *((_DWORD *)this + 7) = v8 + 1;
        operator new();
      }
      uint64_t v10 = *((void *)this + 2);
      *((_DWORD *)this + 6) = v9 + 1;
      CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::MergeFrom(*(CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint **)(v10 + 8 * v9), v7);
      ++v6;
    }
    while (v6 < *((int *)a2 + 6));
  }
  if (*((unsigned char *)a2 + 44))
  {
    *((_DWORD *)this + 11) |= 1u;
    int v11 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
    if (!v11) {
      operator new();
    }
    int v12 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)a2 + 1);
    if (!v12)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(v4);
      int v12 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::default_instance_
                                                                            + 8);
    }
    return CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v11, v12);
  }
  return result;
}

void sub_18DF99590(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::~WifiScanResult(CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult *this)
{
  *(void *)this = &unk_1EDD0C230;
  CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::SharedDtor(this);
  sub_18DF0C324((uint64_t *)this + 2);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::~WifiScanResult(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult *)CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2)
    {
      uint64_t v3 = *(void (**)(void))(*(void *)v2 + 8);
      v3();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 40) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::New(CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::Clear(CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult *this)
{
  if (*((unsigned char *)this + 44))
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2)
    {
      if (*(unsigned char *)(v2 + 36))
      {
        *(void *)(v2 + 8) = 0;
        *(void *)(v2 + 16) = 0;
        *(void *)(v2 + 24) = 0;
      }
      *(_DWORD *)(v2 + 36) = 0;
    }
  }
  uint64_t result = sub_18DF0C208((uint64_t)this + 16);
  *((_DWORD *)this + 11) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v5;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((void *)a2 + 1) = v5 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_18;
        }
        *((_DWORD *)this + 11) |= 1u;
        int v8 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
        if (!v8) {
          operator new();
        }
        unsigned int v27 = 0;
        uint64_t v9 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v9 >= *((void *)a2 + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v27))return 0; {
        }
          }
        else
        {
          unsigned int v27 = *v9;
          *((void *)a2 + 1) = v9 + 1;
        }
        int v10 = *((_DWORD *)a2 + 14);
        int v11 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v10 + 1;
        if (v10 >= v11) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream(v8, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v12 = *((_DWORD *)a2 + 14);
        BOOL v13 = __OFSUB__(v12, 1);
        int v14 = v12 - 1;
        if (v14 < 0 == v13) {
          *((_DWORD *)a2 + 14) = v14;
        }
        int v15 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v15 < *((void *)a2 + 2) && *v15 == 18) {
          goto LABEL_29;
        }
      }
      if (TagFallback >> 3 != 2) {
        break;
      }
      int v7 = TagFallback & 7;
      if (v7 != 2) {
        goto LABEL_18;
      }
      while (1)
      {
        int v16 = *((_DWORD *)this + 7);
        uint64_t v17 = *((int *)this + 6);
        if ((int)v17 >= v16)
        {
          if (v16 == *((_DWORD *)this + 8))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
            int v16 = *((_DWORD *)this + 7);
          }
          *((_DWORD *)this + 7) = v16 + 1;
          operator new();
        }
        uint64_t v18 = *((void *)this + 2);
        *((_DWORD *)this + 6) = v17 + 1;
        int v19 = *(CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint **)(v18 + 8 * v17);
        unsigned int v28 = 0;
        unsigned int v20 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v20 >= *((void *)a2 + 2) || *v20 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v28))return 0; {
        }
          }
        else
        {
          unsigned int v28 = *v20;
          *((void *)a2 + 1) = v20 + 1;
        }
        int v21 = *((_DWORD *)a2 + 14);
        int v22 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v21 + 1;
        if (v21 >= v22) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::MergePartialFromCodedStream(v19, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v23 = *((_DWORD *)a2 + 14);
        BOOL v13 = __OFSUB__(v23, 1);
        int v24 = v23 - 1;
        if (v24 < 0 == v13) {
          *((_DWORD *)a2 + 14) = v24;
        }
        int v15 = (unsigned char *)*((void *)a2 + 1);
        int v25 = (unsigned char *)*((void *)a2 + 2);
        if (v15 >= v25 || *v15 != 18) {
          break;
        }
LABEL_29:
        *((void *)a2 + 1) = v15 + 1;
      }
      if (v15 == v25 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      }
    }
    int v7 = TagFallback & 7;
LABEL_18:
    if (v7 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(unsigned char *)(this + 44))
  {
    uint64_t v6 = *(void *)(this + 8);
    if (!v6)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      uint64_t v6 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
  }
  if (*(int *)(v5 + 24) >= 1)
  {
    uint64_t v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(*(void *)(v5 + 16) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 24));
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult *this)
{
  if (*((unsigned char *)this + 44))
  {
    uint64_t v3 = *((void *)this + 1);
    if (!v3)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      uint64_t v3 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::default_instance_ + 8);
    }
    int v4 = *(unsigned __int8 *)(v3 + 36);
    if (*(unsigned char *)(v3 + 36))
    {
      int v5 = (v4 << 31 >> 31) & 9;
      if ((v4 & 2) != 0) {
        v5 += 9;
      }
      if ((v4 & 4) != 0) {
        int v4 = v5 + 9;
      }
      else {
        int v4 = v5;
      }
    }
    *(_DWORD *)(v3 + 32) = v4;
    int v2 = v4 + 2;
  }
  else
  {
    int v2 = 0;
  }
  int v6 = *((_DWORD *)this + 6);
  uint64_t v7 = (v6 + v2);
  if (v6 >= 1)
  {
    uint64_t v8 = 0;
    do
    {
      uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint::ByteSize(*(CoreNavigation::CLP::LogEntry::PrivateData::WifiAccessPoint **)(*((void *)this + 2) + 8 * v8));
      int v10 = (int)v9;
      if (v9 >= 0x80) {
        int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9);
      }
      else {
        int v11 = 1;
      }
      uint64_t v7 = (v10 + v7 + v11);
      ++v8;
    }
    while (v8 < *((int *)this + 6));
  }
  *((_DWORD *)this + 10) = v7;
  return v7;
}

double CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult *this, const CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult *this)
{
  return 1;
}

CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult *CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::Swap(CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult *this, CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult *a2)
{
  if (a2 != this)
  {
    uint64_t v3 = this;
    uint64_t v4 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v4;
    this = (CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    int v5 = *((_DWORD *)v3 + 11);
    *((_DWORD *)v3 + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v5;
    int v6 = *((_DWORD *)v3 + 10);
    *((_DWORD *)v3 + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v6;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.WifiScanResult");
}

double CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification *this)
{
  *((_DWORD *)this + 13) = 0;
  *((_DWORD *)this + 14) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 33) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification *CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::WifiNotification(CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification *this, const CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification *a2)
{
  *(void *)this = &unk_1EDD0C9B0;
  *((_DWORD *)this + 13) = 0;
  *((_DWORD *)this + 14) = 0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 33) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::MergeFrom(this, a2);
  return this;
}

void sub_18DF99EAC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification *this, const CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v19);
  }
  int v4 = *((_DWORD *)a2 + 14);
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    *((_DWORD *)this + 14) |= 1u;
    uint64_t v7 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
    if (!v7) {
      operator new();
    }
    uint64_t v8 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)a2 + 1);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      uint64_t v8 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::default_instance_
                                                                           + 8);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v7, v8);
    int v4 = *((_DWORD *)a2 + 14);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_25;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  int v9 = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 14) |= 2u;
  *((_DWORD *)this + 4) = v9;
  int v4 = *((_DWORD *)a2 + 14);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_27;
  }
LABEL_25:
  unsigned int v10 = *((_DWORD *)a2 + 5);
  if (v10 >= 0xF) {
    __assert_rtn("set_type", "CoreNavigationCLPPrivateDataShared.pb.h", 25353, "::CoreNavigation::CLP::LogEntry::PrivateData::WifiNotificationType_IsValid(value)");
  }
  *((_DWORD *)this + 14) |= 4u;
  *((_DWORD *)this + 5) = v10;
  int v4 = *((_DWORD *)a2 + 14);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_29;
  }
LABEL_27:
  unsigned int v11 = *((_DWORD *)a2 + 10);
  if (v11 >= 0xF) {
    __assert_rtn("set_scan_type", "CoreNavigationCLPPrivateDataShared.pb.h", 25376, "::CoreNavigation::CLP::LogEntry::PrivateData::WifiScanType_IsValid(value)");
  }
  *((_DWORD *)this + 14) |= 8u;
  *((_DWORD *)this + 10) = v11;
  int v4 = *((_DWORD *)a2 + 14);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_30:
    *((_DWORD *)this + 14) |= 0x20u;
    BOOL v13 = (CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState *)*((void *)this + 3);
    if (!v13) {
      operator new();
    }
    int v14 = (const CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState *)*((void *)a2 + 3);
    if (!v14)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      int v14 = *(const CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState **)(CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::default_instance_
                                                                                       + 24);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::MergeFrom(v13, v14);
    int v4 = *((_DWORD *)a2 + 14);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_35;
  }
LABEL_29:
  char v12 = *((unsigned char *)a2 + 44);
  *((_DWORD *)this + 14) |= 0x10u;
  *((unsigned char *)this + 44) = v12;
  int v4 = *((_DWORD *)a2 + 14);
  if ((v4 & 0x20) != 0) {
    goto LABEL_30;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_35:
  *((_DWORD *)this + 14) |= 0x40u;
  int v15 = (CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult *)*((void *)this + 4);
  if (!v15) {
    operator new();
  }
  int v16 = (const CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult *)*((void *)a2 + 4);
  if (!v16)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    int v16 = *(const CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult **)(CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::default_instance_
                                                                               + 32);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::MergeFrom(v15, v16);
  int v4 = *((_DWORD *)a2 + 14);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    char v5 = *((unsigned char *)a2 + 45);
    *((_DWORD *)this + 14) |= 0x80u;
    *((unsigned char *)this + 45) = v5;
    int v4 = *((_DWORD *)a2 + 14);
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0) {
    return;
  }
  if ((v4 & 0x100) != 0)
  {
    char v17 = *((unsigned char *)a2 + 46);
    *((_DWORD *)this + 14) |= 0x100u;
    *((unsigned char *)this + 46) = v17;
    int v4 = *((_DWORD *)a2 + 14);
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0) {
        return;
      }
      goto LABEL_17;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  char v18 = *((unsigned char *)a2 + 47);
  *((_DWORD *)this + 14) |= 0x200u;
  *((unsigned char *)this + 47) = v18;
  if ((*((_DWORD *)a2 + 14) & 0x400) != 0)
  {
LABEL_17:
    char v6 = *((unsigned char *)a2 + 48);
    *((_DWORD *)this + 14) |= 0x400u;
    *((unsigned char *)this + 48) = v6;
  }
}

void sub_18DF9A22C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::~WifiNotification(CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification *this)
{
  *(void *)this = &unk_1EDD0C9B0;
  CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::~WifiNotification(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification *)CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 3);
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = *((void *)this + 4);
    if (v4)
    {
      char v5 = *(void (**)(void))(*(void *)v4 + 8);
      v5();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 52) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::New(CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::Clear(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 56);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      uint64_t v3 = *(void *)(this + 8);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
          *(void *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        int v2 = *(_DWORD *)(this + 56);
      }
    }
    *(void *)(this + 16) = 0;
    *(_DWORD *)(this + 40) = 0;
    *(unsigned char *)(this + 44) = 0;
    if ((v2 & 0x20) != 0)
    {
      this = *(void *)(this + 24);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::Clear(this);
        int v2 = *(_DWORD *)(v1 + 56);
      }
    }
    if ((v2 & 0x40) != 0)
    {
      this = *(void *)(v1 + 32);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::Clear((CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult *)this);
        int v2 = *(_DWORD *)(v1 + 56);
      }
    }
    *(unsigned char *)(v1 + 45) = 0;
  }
  if ((v2 & 0xFF00) != 0)
  {
    *(_WORD *)(v1 + 46) = 0;
    *(unsigned char *)(v1 + 48) = 0;
  }
  *(_DWORD *)(v1 + 56) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (2)
  {
    uint64_t v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_33;
        }
        *((_DWORD *)this + 14) |= 1u;
        uint64_t v7 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
        if (!v7) {
          operator new();
        }
        unsigned int v59 = 0;
        uint64_t v8 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v59))return 0; {
        }
          }
        else
        {
          unsigned int v59 = *v8;
          *((void *)a2 + 1) = v8 + 1;
        }
        int v22 = *((_DWORD *)a2 + 14);
        int v23 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v22 + 1;
        if (v22 >= v23) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream(v7, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v24 = *((_DWORD *)a2 + 14);
        BOOL v25 = __OFSUB__(v24, 1);
        int v26 = v24 - 1;
        if (v26 < 0 == v25) {
          *((_DWORD *)a2 + 14) = v26;
        }
        unsigned int v27 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        if ((unint64_t)v27 >= v9 || *v27 != 16) {
          continue;
        }
        unsigned int v10 = v27 + 1;
        *((void *)a2 + 1) = v10;
        goto LABEL_46;
      case 2u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_33;
        }
        unsigned int v10 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
LABEL_46:
        unsigned int v59 = 0;
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v59);
          if (!result) {
            return result;
          }
          unsigned int v28 = v59;
          unsigned int v29 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v28 = *v10;
          unsigned int v29 = v10 + 1;
          *((void *)a2 + 1) = v29;
        }
        *((_DWORD *)this + 4) = v28;
        *((_DWORD *)this + 14) |= 2u;
        if ((unint64_t)v29 >= v9 || *v29 != 24) {
          continue;
        }
        unsigned int v11 = v29 + 1;
        *((void *)a2 + 1) = v11;
LABEL_54:
        unsigned int v59 = 0;
        if ((unint64_t)v11 >= v9 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v59);
          if (!result) {
            return result;
          }
          unsigned int v31 = v59;
        }
        else
        {
          unsigned int v31 = *v11;
          *((void *)a2 + 1) = v11 + 1;
        }
        if (v31 <= 0xE)
        {
          *((_DWORD *)this + 14) |= 4u;
          *((_DWORD *)this + 5) = v31;
        }
        int v32 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v12 = *((void *)a2 + 2);
        if ((unint64_t)v32 >= v12 || *v32 != 32) {
          continue;
        }
        BOOL v13 = v32 + 1;
        *((void *)a2 + 1) = v13;
LABEL_64:
        unsigned int v59 = 0;
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v59);
          if (!result) {
            return result;
          }
          unsigned int v33 = v59;
        }
        else
        {
          unsigned int v33 = *v13;
          *((void *)a2 + 1) = v13 + 1;
        }
        if (v33 <= 0xE)
        {
          *((_DWORD *)this + 14) |= 8u;
          *((_DWORD *)this + 10) = v33;
        }
        int v34 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        if ((unint64_t)v34 >= v14 || *v34 != 40) {
          continue;
        }
        int v15 = v34 + 1;
        *((void *)a2 + 1) = v15;
LABEL_74:
        unsigned int v59 = 0;
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v59);
          if (!result) {
            return result;
          }
          unsigned int v35 = v59;
          int v36 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v14 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v35 = *v15;
          int v36 = v15 + 1;
          *((void *)a2 + 1) = v36;
        }
        *((unsigned char *)this + 44) = v35 != 0;
        int v16 = *((_DWORD *)this + 14) | 0x10;
        *((_DWORD *)this + 14) = v16;
        if ((unint64_t)v36 >= v14 || *v36 != 50) {
          continue;
        }
        *((void *)a2 + 1) = v36 + 1;
LABEL_82:
        *((_DWORD *)this + 14) = v16 | 0x20;
        unsigned int v37 = (CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState *)*((void *)this + 3);
        if (!v37) {
          operator new();
        }
        unsigned int v59 = 0;
        int v38 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v38 >= *((void *)a2 + 2) || *v38 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v59))return 0; {
        }
          }
        else
        {
          unsigned int v59 = *v38;
          *((void *)a2 + 1) = v38 + 1;
        }
        int v39 = *((_DWORD *)a2 + 14);
        int v40 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v39 + 1;
        if (v39 >= v40) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::MergePartialFromCodedStream(v37, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v41 = *((_DWORD *)a2 + 14);
        BOOL v25 = __OFSUB__(v41, 1);
        int v42 = v41 - 1;
        if (v42 < 0 == v25) {
          *((_DWORD *)a2 + 14) = v42;
        }
        int v43 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v43 >= *((void *)a2 + 2) || *v43 != 58) {
          continue;
        }
        *((void *)a2 + 1) = v43 + 1;
LABEL_96:
        *((_DWORD *)this + 14) |= 0x40u;
        unsigned int v44 = (CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult *)*((void *)this + 4);
        if (!v44) {
          operator new();
        }
        unsigned int v59 = 0;
        unsigned int v45 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v45 >= *((void *)a2 + 2) || *v45 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v59))return 0; {
        }
          }
        else
        {
          unsigned int v59 = *v45;
          *((void *)a2 + 1) = v45 + 1;
        }
        int v46 = *((_DWORD *)a2 + 14);
        int v47 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v46 + 1;
        if (v46 < v47)
        {
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::MergePartialFromCodedStream(v44, a2))
          {
            if (*((unsigned char *)a2 + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
              int v48 = *((_DWORD *)a2 + 14);
              BOOL v25 = __OFSUB__(v48, 1);
              int v49 = v48 - 1;
              if (v49 < 0 == v25) {
                *((_DWORD *)a2 + 14) = v49;
              }
              int v50 = (unsigned char *)*((void *)a2 + 1);
              unint64_t v17 = *((void *)a2 + 2);
              if ((unint64_t)v50 < v17 && *v50 == 64)
              {
                char v18 = v50 + 1;
                *((void *)a2 + 1) = v18;
LABEL_110:
                unsigned int v59 = 0;
                if ((unint64_t)v18 >= v17 || *v18 < 0)
                {
                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v59);
                  if (!result) {
                    return result;
                  }
                  unsigned int v51 = v59;
                  int v52 = (unsigned char *)*((void *)a2 + 1);
                  unint64_t v17 = *((void *)a2 + 2);
                }
                else
                {
                  unsigned int v51 = *v18;
                  int v52 = v18 + 1;
                  *((void *)a2 + 1) = v52;
                }
                *((unsigned char *)this + 45) = v51 != 0;
                *((_DWORD *)this + 14) |= 0x80u;
                if ((unint64_t)v52 < v17 && *v52 == 72)
                {
                  int v19 = v52 + 1;
                  *((void *)a2 + 1) = v19;
LABEL_118:
                  unsigned int v59 = 0;
                  if ((unint64_t)v19 >= v17 || *v19 < 0)
                  {
                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v59);
                    if (!result) {
                      return result;
                    }
                    unsigned int v53 = v59;
                    unsigned int v54 = (unsigned char *)*((void *)a2 + 1);
                    unint64_t v17 = *((void *)a2 + 2);
                  }
                  else
                  {
                    unsigned int v53 = *v19;
                    unsigned int v54 = v19 + 1;
                    *((void *)a2 + 1) = v54;
                  }
                  *((unsigned char *)this + 46) = v53 != 0;
                  *((_DWORD *)this + 14) |= 0x100u;
                  if ((unint64_t)v54 < v17 && *v54 == 80)
                  {
                    unsigned int v20 = v54 + 1;
                    *((void *)a2 + 1) = v20;
LABEL_126:
                    unsigned int v59 = 0;
                    if ((unint64_t)v20 >= v17 || *v20 < 0)
                    {
                      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v59);
                      if (!result) {
                        return result;
                      }
                      unsigned int v55 = v59;
                      int v56 = (unsigned char *)*((void *)a2 + 1);
                      unint64_t v17 = *((void *)a2 + 2);
                    }
                    else
                    {
                      unsigned int v55 = *v20;
                      int v56 = v20 + 1;
                      *((void *)a2 + 1) = v56;
                    }
                    *((unsigned char *)this + 47) = v55 != 0;
                    *((_DWORD *)this + 14) |= 0x200u;
                    if ((unint64_t)v56 < v17 && *v56 == 88)
                    {
                      int v21 = v56 + 1;
                      *((void *)a2 + 1) = v21;
LABEL_134:
                      unsigned int v59 = 0;
                      if ((unint64_t)v21 >= v17 || *v21 < 0)
                      {
                        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v59);
                        if (!result) {
                          return result;
                        }
                        unsigned int v57 = v59;
                        int v58 = (unsigned __int8 *)*((void *)a2 + 1);
                        unint64_t v17 = *((void *)a2 + 2);
                      }
                      else
                      {
                        unsigned int v57 = *v21;
                        int v58 = (unsigned __int8 *)(v21 + 1);
                        *((void *)a2 + 1) = v58;
                      }
                      *((unsigned char *)this + 48) = v57 != 0;
                      *((_DWORD *)this + 14) |= 0x400u;
                      if (v58 == (unsigned __int8 *)v17
                        && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                      {
                        *((_DWORD *)a2 + 8) = 0;
                        uint64_t result = 1;
                        *((unsigned char *)a2 + 36) = 1;
                        return result;
                      }
                    }
                  }
                }
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_33;
        }
        unsigned int v11 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        goto LABEL_54;
      case 4u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_33;
        }
        BOOL v13 = (char *)*((void *)a2 + 1);
        unint64_t v12 = *((void *)a2 + 2);
        goto LABEL_64;
      case 5u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_33;
        }
        int v15 = (char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        goto LABEL_74;
      case 6u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_33;
        }
        int v16 = *((_DWORD *)this + 14);
        goto LABEL_82;
      case 7u:
        int v6 = TagFallback & 7;
        if (v6 == 2) {
          goto LABEL_96;
        }
        goto LABEL_33;
      case 8u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_33;
        }
        char v18 = (char *)*((void *)a2 + 1);
        unint64_t v17 = *((void *)a2 + 2);
        goto LABEL_110;
      case 9u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_33;
        }
        int v19 = (char *)*((void *)a2 + 1);
        unint64_t v17 = *((void *)a2 + 2);
        goto LABEL_118;
      case 0xAu:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_33;
        }
        unsigned int v20 = (char *)*((void *)a2 + 1);
        unint64_t v17 = *((void *)a2 + 2);
        goto LABEL_126;
      case 0xBu:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_33;
        }
        int v21 = (char *)*((void *)a2 + 1);
        unint64_t v17 = *((void *)a2 + 2);
        goto LABEL_134;
      default:
        int v6 = TagFallback & 7;
LABEL_33:
        if (v6 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 56);
  if (v6)
  {
    uint64_t v7 = *(void *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 56);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_17;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 16), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 20), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_19;
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_20;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned __int8 *)(v5 + 44), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_23;
  }
LABEL_20:
  uint64_t v8 = *(void *)(v5 + 24);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v8 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::default_instance_ + 24);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_26;
  }
LABEL_23:
  uint64_t v9 = *(void *)(v5 + 32);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v9 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::default_instance_ + 32);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v9, a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_27;
  }
LABEL_26:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned __int8 *)(v5 + 45), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
LABEL_28:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned __int8 *)(v5 + 47), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 56) & 0x400) == 0) {
      return this;
    }
    goto LABEL_29;
  }
LABEL_27:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned __int8 *)(v5 + 46), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x200) != 0) {
    goto LABEL_28;
  }
LABEL_11:
  if ((v6 & 0x400) == 0) {
    return this;
  }
LABEL_29:
  uint64_t v10 = *(unsigned __int8 *)(v5 + 48);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v10, (uint64_t)a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification *this)
{
  int v2 = *((_DWORD *)this + 14);
  if (!(_BYTE)v2)
  {
    unsigned int v4 = 0;
    goto LABEL_55;
  }
  if ((v2 & 1) == 0)
  {
    int v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_21;
    }
    goto LABEL_15;
  }
  uint64_t v5 = *((void *)this + 1);
  if (!v5)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    uint64_t v5 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::default_instance_ + 8);
  }
  int v6 = *(unsigned __int8 *)(v5 + 36);
  if (*(unsigned char *)(v5 + 36))
  {
    int v7 = (v6 << 31 >> 31) & 9;
    if ((v6 & 2) != 0) {
      v7 += 9;
    }
    if ((v6 & 4) != 0) {
      int v6 = v7 + 9;
    }
    else {
      int v6 = v7;
    }
  }
  *(_DWORD *)(v5 + 32) = v6;
  int v3 = v6 + 2;
  int v2 = *((_DWORD *)this + 14);
  if ((v2 & 2) != 0)
  {
LABEL_15:
    uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if ((v8 & 0x80000000) != 0)
    {
      int v9 = 11;
    }
    else if (v8 >= 0x80)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8) + 1;
      int v2 = *((_DWORD *)this + 14);
    }
    else
    {
      int v9 = 2;
    }
    v3 += v9;
  }
LABEL_21:
  if ((v2 & 4) != 0)
  {
    uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
    if ((v10 & 0x80000000) != 0)
    {
      int v11 = 11;
    }
    else if (v10 >= 0x80)
    {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10) + 1;
      int v2 = *((_DWORD *)this + 14);
    }
    else
    {
      int v11 = 2;
    }
    v3 += v11;
    if ((v2 & 8) == 0) {
      goto LABEL_36;
    }
    goto LABEL_30;
  }
  if ((v2 & 8) != 0)
  {
LABEL_30:
    unint64_t v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    if ((v12 & 0x80000000) != 0)
    {
      int v13 = 11;
    }
    else if (v12 >= 0x80)
    {
      int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12) + 1;
      int v2 = *((_DWORD *)this + 14);
    }
    else
    {
      int v13 = 2;
    }
    v3 += v13;
  }
LABEL_36:
  if ((v2 & 0x10) != 0) {
    int v14 = v3 + 2;
  }
  else {
    int v14 = v3;
  }
  if ((v2 & 0x20) != 0)
  {
    int v15 = (CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState *)*((void *)this + 3);
    if (!v15)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(0);
      int v15 = *(CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState **)(CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::default_instance_
                                                                                 + 24);
    }
    int v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::WifiAssociationState::ByteSize(v15);
    int v17 = (int)v16;
    if (v16 >= 0x80) {
      int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16);
    }
    else {
      int v18 = 1;
    }
    v14 += v17 + v18 + 1;
    int v2 = *((_DWORD *)this + 14);
  }
  if ((v2 & 0x40) != 0)
  {
    int v19 = (CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult *)*((void *)this + 4);
    if (!v19)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(0);
      int v19 = *(CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult **)(CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::default_instance_
                                                                           + 32);
    }
    unsigned int v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::WifiScanResult::ByteSize(v19);
    int v21 = (int)v20;
    if (v20 >= 0x80) {
      int v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20);
    }
    else {
      int v22 = 1;
    }
    v14 += v21 + v22 + 1;
    int v2 = *((_DWORD *)this + 14);
  }
  unsigned int v4 = v14 + 2;
  if ((v2 & 0x80) == 0) {
    unsigned int v4 = v14;
  }
LABEL_55:
  unsigned int v23 = v4 + 2;
  if ((v2 & 0x100) == 0) {
    unsigned int v23 = v4;
  }
  if ((v2 & 0x200) != 0) {
    v23 += 2;
  }
  if ((v2 & 0x400) != 0) {
    v23 += 2;
  }
  if ((v2 & 0xFF00) != 0) {
    uint64_t result = v23;
  }
  else {
    uint64_t result = v4;
  }
  *((_DWORD *)this + 13) = result;
  return result;
}

void CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification *this, const CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification *a2)
{
  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v2;
    LOBYTE(v2) = *(unsigned char *)(this + 44);
    *(unsigned char *)(this + 44) = *((unsigned char *)a2 + 44);
    *((unsigned char *)a2 + 44) = v2;
    uint64_t v3 = *(void *)(this + 24);
    *(void *)(this + 24) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v3;
    uint64_t v4 = *(void *)(this + 32);
    *(void *)(this + 32) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v4;
    LOBYTE(v4) = *(unsigned char *)(this + 45);
    *(unsigned char *)(this + 45) = *((unsigned char *)a2 + 45);
    *((unsigned char *)a2 + 45) = v4;
    LOBYTE(v4) = *(unsigned char *)(this + 46);
    *(unsigned char *)(this + 46) = *((unsigned char *)a2 + 46);
    *((unsigned char *)a2 + 46) = v4;
    LOBYTE(v4) = *(unsigned char *)(this + 47);
    *(unsigned char *)(this + 47) = *((unsigned char *)a2 + 47);
    *((unsigned char *)a2 + 47) = v4;
    LOBYTE(v4) = *(unsigned char *)(this + 48);
    *(unsigned char *)(this + 48) = *((unsigned char *)a2 + 48);
    *((unsigned char *)a2 + 48) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 56);
    *(_DWORD *)(this + 56) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 52);
    *(_DWORD *)(this + 52) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v4;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.WifiNotification");
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction_GnssAvailability_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 4;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction_MeasurementSource_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 4;
}

double CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction *this)
{
  double result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction *CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction::GnssAvailabilityPrediction(CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction *this, const CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction *a2)
{
  *(void *)this = &unk_1EDD0E3F0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction::MergeFrom(this, a2);
  return this;
}

void sub_18DF9B39C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction *this, const CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 36);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 36))
    {
      *((_DWORD *)this + 9) |= 1u;
      uint64_t v5 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
      if (!v5) {
        operator new();
      }
      int v6 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)a2 + 1);
      if (!v6)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
        int v6 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction::default_instance_
                                                                             + 8);
      }
      CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v5, v6);
      int v4 = *((_DWORD *)a2 + 9);
    }
    if ((v4 & 2) != 0)
    {
      unsigned int v7 = *((_DWORD *)a2 + 6);
      if (v7 >= 4) {
        __assert_rtn("set_state", "CoreNavigationCLPPrivateDataShared.pb.h", 25639, "::CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction_GnssAvailability_IsValid(value)");
      }
      *((_DWORD *)this + 9) |= 2u;
      *((_DWORD *)this + 6) = v7;
      int v4 = *((_DWORD *)a2 + 9);
    }
    if ((v4 & 4) != 0)
    {
      uint64_t v8 = *((void *)a2 + 2);
      *((_DWORD *)this + 9) |= 4u;
      *((void *)this + 2) = v8;
      int v4 = *((_DWORD *)a2 + 9);
    }
    if ((v4 & 8) != 0)
    {
      unsigned int v9 = *((_DWORD *)a2 + 7);
      if (v9 >= 4) {
        __assert_rtn("set_measurement_source", "CoreNavigationCLPPrivateDataShared.pb.h", 25684, "::CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction_MeasurementSource_IsValid(value)");
      }
      *((_DWORD *)this + 9) |= 8u;
      *((_DWORD *)this + 7) = v9;
    }
  }
}

void sub_18DF9B554(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction::~GnssAvailabilityPrediction(CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction *this)
{
  *(void *)this = &unk_1EDD0E3F0;
  CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction::~GnssAvailabilityPrediction(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction *)CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2)
    {
      uint64_t v3 = *(void (**)(void))(*(void *)v2 + 8);
      v3();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 32) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction::New(CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 36))
  {
    if (*(unsigned char *)(this + 36))
    {
      uint64_t v1 = *(void *)(this + 8);
      if (v1)
      {
        if (*(unsigned char *)(v1 + 36))
        {
          *(void *)(v1 + 8) = 0;
          *(void *)(v1 + 16) = 0;
          *(void *)(v1 + 24) = 0;
        }
        *(_DWORD *)(v1 + 36) = 0;
      }
    }
    *(void *)(this + 16) = 0;
    *(void *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 36) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (2)
  {
    int v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_19;
        }
        *((_DWORD *)this + 9) |= 1u;
        unsigned int v7 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
        if (!v7) {
          operator new();
        }
        v24[0] = 0;
        uint64_t v8 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v24))return 0; {
        }
          }
        else
        {
          v24[0] = *v8;
          *((void *)a2 + 1) = v8 + 1;
        }
        int v13 = *((_DWORD *)a2 + 14);
        int v14 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v13 + 1;
        if (v13 >= v14) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream(v7, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v15 = *((_DWORD *)a2 + 14);
        BOOL v16 = __OFSUB__(v15, 1);
        int v17 = v15 - 1;
        if (v17 < 0 == v16) {
          *((_DWORD *)a2 + 14) = v17;
        }
        int v18 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        if ((unint64_t)v18 >= v9 || *v18 != 16) {
          continue;
        }
        uint64_t v10 = v18 + 1;
        *((void *)a2 + 1) = v10;
        goto LABEL_32;
      case 2u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        uint64_t v10 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
LABEL_32:
        v24[0] = 0;
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v24);
          if (!result) {
            return result;
          }
          unsigned int v19 = v24[0];
        }
        else
        {
          unsigned int v19 = *v10;
          *((void *)a2 + 1) = v10 + 1;
        }
        if (v19 <= 3)
        {
          *((_DWORD *)this + 9) |= 2u;
          *((_DWORD *)this + 6) = v19;
        }
        int v21 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v21 >= *((void *)a2 + 2) || *v21 != 25) {
          continue;
        }
        *((void *)a2 + 1) = v21 + 1;
LABEL_42:
        *(void *)int v24 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24))
        {
          *((void *)this + 2) = *(void *)v24;
          *((_DWORD *)this + 9) |= 4u;
          int v22 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v11 = *((void *)a2 + 2);
          if ((unint64_t)v22 < v11 && *v22 == 32)
          {
            unint64_t v12 = v22 + 1;
            *((void *)a2 + 1) = v12;
LABEL_46:
            v24[0] = 0;
            if ((unint64_t)v12 >= v11 || *v12 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v24);
              if (!result) {
                return result;
              }
              unsigned int v23 = v24[0];
            }
            else
            {
              unsigned int v23 = *v12;
              *((void *)a2 + 1) = v12 + 1;
            }
            if (v23 <= 3)
            {
              *((_DWORD *)this + 9) |= 8u;
              *((_DWORD *)this + 7) = v23;
            }
            if (*((void *)a2 + 1) == *((void *)a2 + 2)
              && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
            {
              *((_DWORD *)a2 + 8) = 0;
              uint64_t result = 1;
              *((unsigned char *)a2 + 36) = 1;
              return result;
            }
          }
          continue;
        }
        return 0;
      case 3u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_42;
        }
        goto LABEL_19;
      case 4u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        unint64_t v12 = (char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
        goto LABEL_46;
      default:
        int v6 = TagFallback & 7;
LABEL_19:
        if (v6 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 36);
  if (v6)
  {
    uint64_t v7 = *(void *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 36);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_10:
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 16), a3);
      if ((*(_DWORD *)(v5 + 36) & 8) == 0) {
        return this;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 4) != 0) {
    goto LABEL_10;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return this;
  }
LABEL_11:
  uint64_t v8 = *(unsigned int *)(v5 + 28);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v8, (uint64_t)a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 36);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_31;
  }
  if (*((unsigned char *)this + 36))
  {
    uint64_t v4 = *((void *)this + 1);
    if (!v4)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      uint64_t v4 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction::default_instance_ + 8);
    }
    int v5 = *(unsigned __int8 *)(v4 + 36);
    if (*(unsigned char *)(v4 + 36))
    {
      int v6 = (v5 << 31 >> 31) & 9;
      if ((v5 & 2) != 0) {
        v6 += 9;
      }
      if ((v5 & 4) != 0) {
        int v5 = v6 + 9;
      }
      else {
        int v5 = v6;
      }
    }
    *(_DWORD *)(v4 + 32) = v5;
    LODWORD(v3) = v5 + 2;
    int v2 = *((_DWORD *)this + 9);
    if ((v2 & 2) == 0) {
      goto LABEL_21;
    }
  }
  else
  {
    LODWORD(v3) = 0;
    if ((*((unsigned char *)this + 36) & 2) == 0) {
      goto LABEL_21;
    }
  }
  uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  if ((v7 & 0x80000000) != 0)
  {
    int v8 = 11;
  }
  else if (v7 >= 0x80)
  {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7) + 1;
    int v2 = *((_DWORD *)this + 9);
  }
  else
  {
    int v8 = 2;
  }
  LODWORD(v3) = v8 + v3;
LABEL_21:
  if ((v2 & 4) != 0) {
    uint64_t v3 = (v3 + 9);
  }
  else {
    uint64_t v3 = v3;
  }
  if ((v2 & 8) != 0)
  {
    unint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
    if ((v9 & 0x80000000) != 0)
    {
      int v10 = 11;
    }
    else if (v9 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9) + 1;
    }
    else
    {
      int v10 = 2;
    }
    uint64_t v3 = (v10 + v3);
  }
LABEL_31:
  *((_DWORD *)this + 8) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction *this, const CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction::Swap(CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction *this, CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    LODWORD(v2) = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    double result = *((double *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((double *)a2 + 2) = result;
    LODWORD(v2) = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LODWORD(v2) = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v2;
    LODWORD(v2) = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.GnssAvailabilityPrediction");
}

void *CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::SharedCtor(void *this)
{
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D *CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::GEOLocationCoordinate2D(CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D *this, const CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D *a2)
{
  *(void *)this = &unk_1EDD0DDD8;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::MergeFrom(this, a2);
  return this;
}

void sub_18DF9BE64(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D *this, const CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 28);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 28))
    {
      double result = *((double *)a2 + 1);
      *((_DWORD *)this + 7) |= 1u;
      *((double *)this + 1) = result;
      int v5 = *((_DWORD *)a2 + 7);
    }
    if ((v5 & 2) != 0)
    {
      double result = *((double *)a2 + 2);
      *((_DWORD *)this + 7) |= 2u;
      *((double *)this + 2) = result;
    }
  }
  return result;
}

void sub_18DF9BF24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::~GEOLocationCoordinate2D(CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D *this)
{
  *(void *)this = &unk_1EDD0DDD8;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::~GEOLocationCoordinate2D(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 24) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::New(CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 28))
  {
    *(void *)(this + 8) = 0;
    *(void *)(this + 16) = 0;
  }
  *(_DWORD *)(this + 28) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v4 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v4;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((void *)a2 + 1) = v4 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_21;
        }
        unint64_t v9 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v9) & 1) == 0) {
          return 0;
        }
        *((void *)this + 1) = v9;
        *((_DWORD *)this + 7) |= 1u;
        uint64_t v7 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v7 < *((void *)a2 + 2) && *v7 == 17)
        {
          *((void *)a2 + 1) = v7 + 1;
          goto LABEL_15;
        }
      }
      if (TagFallback >> 3 != 2)
      {
        int v6 = TagFallback & 7;
        goto LABEL_21;
      }
      int v6 = TagFallback & 7;
      if (v6 == 1) {
        break;
      }
LABEL_21:
      if (v6 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
    }
      }
LABEL_15:
    unint64_t v9 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v9) & 1) == 0) {
      return 0;
    }
    *((void *)this + 2) = v9;
    *((_DWORD *)this + 7) |= 2u;
  }
  while (*((void *)a2 + 1) != *((void *)a2 + 2)
       || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10));
  *((_DWORD *)a2 + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)a2 + 36) = 1;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = this;
  int v5 = *(_DWORD *)(this + 28);
  if (v5)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
    int v5 = *(_DWORD *)(v4 + 28);
  }
  if ((v5 & 2) != 0)
  {
    double v6 = *(double *)(v4 + 16);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, v6, a3);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D *this)
{
  uint64_t v1 = *((unsigned __int8 *)this + 28);
  if (*((unsigned char *)this + 28))
  {
    unsigned int v2 = ((int)(v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0) {
      uint64_t v1 = v2 + 9;
    }
    else {
      uint64_t v1 = v2;
    }
  }
  *((_DWORD *)this + 6) = v1;
  return v1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D *this, const CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D *))(*(void *)this
                                                                                                  + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::Swap(CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D *this, CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    double result = *((double *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((double *)a2 + 2) = result;
    int v4 = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v4;
    int v5 = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v5;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.GEOLocationCoordinate2D");
}

double CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection *this)
{
  *((_DWORD *)this + 21) = 0;
  *((_DWORD *)this + 22) = 0;
  double result = 0.0;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 4) = 0u;
  *((unsigned char *)this + 80) = 0;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection *CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection::GEOMapFeatureBuildingSection(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection *this, const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection *a2)
{
  *(void *)this = &unk_1EDD0E4E0;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  *((_DWORD *)this + 21) = 0;
  *((_DWORD *)this + 22) = 0;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 4) = 0u;
  *((unsigned char *)this + 80) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection::MergeFrom(this, a2);
  return this;
}

void sub_18DF9C498(_Unwind_Exception *a1)
{
  sub_18DF0C324(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection *this, const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection *)((char *)this + 8));
  if (*((int *)a2 + 4) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      double v6 = *(const CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D **)(*((void *)a2 + 1) + 8 * v5);
      int v7 = *((_DWORD *)this + 5);
      uint64_t v8 = *((int *)this + 4);
      if ((int)v8 >= v7)
      {
        if (v7 == *((_DWORD *)this + 6))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection *)((char *)this + 8));
          int v7 = *((_DWORD *)this + 5);
        }
        *((_DWORD *)this + 5) = v7 + 1;
        operator new();
      }
      uint64_t v9 = *((void *)this + 1);
      *((_DWORD *)this + 4) = v8 + 1;
      double result = CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::MergeFrom(*(CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D **)(v9 + 8 * v8), v6);
      ++v5;
    }
    while (v5 < *((int *)a2 + 4));
  }
  int v10 = *((_DWORD *)a2 + 22);
  if ((v10 & 0x1FE) != 0)
  {
    if ((v10 & 2) != 0)
    {
      double result = *((double *)a2 + 4);
      *((_DWORD *)this + 22) |= 2u;
      *((double *)this + 4) = result;
      int v10 = *((_DWORD *)a2 + 22);
      if ((v10 & 4) == 0)
      {
LABEL_14:
        if ((v10 & 8) == 0) {
          goto LABEL_15;
        }
        goto LABEL_23;
      }
    }
    else if ((v10 & 4) == 0)
    {
      goto LABEL_14;
    }
    double result = *((double *)a2 + 5);
    *((_DWORD *)this + 22) |= 4u;
    *((double *)this + 5) = result;
    int v10 = *((_DWORD *)a2 + 22);
    if ((v10 & 8) == 0)
    {
LABEL_15:
      if ((v10 & 0x10) == 0) {
        goto LABEL_16;
      }
      goto LABEL_24;
    }
LABEL_23:
    char v11 = *((unsigned char *)a2 + 80);
    *((_DWORD *)this + 22) |= 8u;
    *((unsigned char *)this + 80) = v11;
    int v10 = *((_DWORD *)a2 + 22);
    if ((v10 & 0x10) == 0)
    {
LABEL_16:
      if ((v10 & 0x20) == 0) {
        goto LABEL_17;
      }
      goto LABEL_25;
    }
LABEL_24:
    double result = *((double *)a2 + 6);
    *((_DWORD *)this + 22) |= 0x10u;
    *((double *)this + 6) = result;
    int v10 = *((_DWORD *)a2 + 22);
    if ((v10 & 0x20) == 0)
    {
LABEL_17:
      if ((v10 & 0x40) == 0) {
        goto LABEL_18;
      }
      goto LABEL_26;
    }
LABEL_25:
    double result = *((double *)a2 + 7);
    *((_DWORD *)this + 22) |= 0x20u;
    *((double *)this + 7) = result;
    int v10 = *((_DWORD *)a2 + 22);
    if ((v10 & 0x40) == 0)
    {
LABEL_18:
      if ((v10 & 0x80) == 0) {
        return result;
      }
      goto LABEL_19;
    }
LABEL_26:
    double result = *((double *)a2 + 8);
    *((_DWORD *)this + 22) |= 0x40u;
    *((double *)this + 8) = result;
    if ((*((_DWORD *)a2 + 22) & 0x80) == 0) {
      return result;
    }
LABEL_19:
    double result = *((double *)a2 + 9);
    *((_DWORD *)this + 22) |= 0x80u;
    *((double *)this + 9) = result;
  }
  return result;
}

void sub_18DF9C6FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection::~GEOMapFeatureBuildingSection(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection *this)
{
  *(void *)this = &unk_1EDD0E4E0;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  sub_18DF0C324((uint64_t *)this + 1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection::~GEOMapFeatureBuildingSection(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 84) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection::New(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection::Clear(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection *this)
{
  if ((*((_WORD *)this + 44) & 0x1FE) != 0)
  {
    *((unsigned char *)this + 80) = 0;
    *((_OWORD *)this + 3) = 0u;
    *((_OWORD *)this + 4) = 0u;
    *((_OWORD *)this + 2) = 0u;
  }
  uint64_t result = sub_18DF0C208((uint64_t)this + 8);
  *((_DWORD *)this + 22) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection *)((char *)this + 8);
LABEL_2:
  while (2)
  {
    uint64_t v5 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_49;
        }
        while (1)
        {
          int v8 = *((_DWORD *)this + 5);
          uint64_t v9 = *((int *)this + 4);
          if ((int)v9 >= v8)
          {
            if (v8 == *((_DWORD *)this + 6))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
              int v8 = *((_DWORD *)this + 5);
            }
            *((_DWORD *)this + 5) = v8 + 1;
            operator new();
          }
          uint64_t v10 = *((void *)this + 1);
          *((_DWORD *)this + 4) = v9 + 1;
          char v11 = *(CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D **)(v10 + 8 * v9);
          v30[0] = 0;
          unint64_t v12 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v12 >= *((void *)a2 + 2) || *v12 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v30))return 0; {
          }
            }
          else
          {
            v30[0] = *v12;
            *((void *)a2 + 1) = v12 + 1;
          }
          int v13 = *((_DWORD *)a2 + 14);
          int v14 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v13 + 1;
          if (v13 >= v14) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::MergePartialFromCodedStream(v11, a2)|| !*((unsigned char *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          int v15 = *((_DWORD *)a2 + 14);
          BOOL v16 = __OFSUB__(v15, 1);
          int v17 = v15 - 1;
          if (v17 < 0 == v16) {
            *((_DWORD *)a2 + 14) = v17;
          }
          int v18 = (unsigned __int8 *)*((void *)a2 + 1);
          if ((unint64_t)v18 >= *((void *)a2 + 2)) {
            goto LABEL_2;
          }
          int v19 = *v18;
          if (v19 != 10) {
            break;
          }
          *((void *)a2 + 1) = v18 + 1;
        }
        if (v19 != 17) {
          continue;
        }
        *((void *)a2 + 1) = v18 + 1;
        goto LABEL_28;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_49;
        }
LABEL_28:
        *(void *)int v30 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v30) & 1) == 0)return 0; {
        *((void *)this + 4) = *(void *)v30;
        }
        *((_DWORD *)this + 22) |= 2u;
        unsigned int v20 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v20 >= *((void *)a2 + 2) || *v20 != 25) {
          continue;
        }
        *((void *)a2 + 1) = v20 + 1;
LABEL_33:
        *(void *)int v30 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v30) & 1) == 0)return 0; {
        *((void *)this + 5) = *(void *)v30;
        }
        *((_DWORD *)this + 22) |= 4u;
        int v22 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v21 = *((void *)a2 + 2);
        if ((unint64_t)v22 >= v21 || *v22 != 32) {
          continue;
        }
        unsigned int v23 = v22 + 1;
        *((void *)a2 + 1) = v23;
LABEL_39:
        v30[0] = 0;
        if ((unint64_t)v23 >= v21 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v30);
          if (!result) {
            return result;
          }
          unsigned int v24 = v30[0];
          BOOL v25 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v21 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v24 = *v23;
          BOOL v25 = v23 + 1;
          *((void *)a2 + 1) = v25;
        }
        *((unsigned char *)this + 80) = v24 != 0;
        *((_DWORD *)this + 22) |= 8u;
        if ((unint64_t)v25 >= v21 || *v25 != 41) {
          continue;
        }
        *((void *)a2 + 1) = v25 + 1;
LABEL_57:
        *(void *)int v30 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v30) & 1) == 0)return 0; {
        *((void *)this + 6) = *(void *)v30;
        }
        *((_DWORD *)this + 22) |= 0x10u;
        unsigned int v27 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v27 >= *((void *)a2 + 2) || *v27 != 49) {
          continue;
        }
        *((void *)a2 + 1) = v27 + 1;
LABEL_61:
        *(void *)int v30 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v30) & 1) == 0)return 0; {
        *((void *)this + 7) = *(void *)v30;
        }
        *((_DWORD *)this + 22) |= 0x20u;
        unsigned int v28 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v28 >= *((void *)a2 + 2) || *v28 != 57) {
          continue;
        }
        *((void *)a2 + 1) = v28 + 1;
LABEL_65:
        *(void *)int v30 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v30) & 1) == 0)return 0; {
        *((void *)this + 8) = *(void *)v30;
        }
        *((_DWORD *)this + 22) |= 0x40u;
        unsigned int v29 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v29 >= *((void *)a2 + 2) || *v29 != 65) {
          continue;
        }
        *((void *)a2 + 1) = v29 + 1;
LABEL_69:
        *(void *)int v30 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v30) & 1) == 0)return 0; {
        *((void *)this + 9) = *(void *)v30;
        }
        *((_DWORD *)this + 22) |= 0x80u;
        if (*((void *)a2 + 1) != *((void *)a2 + 2)
          || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
        {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        break;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_33;
        }
        goto LABEL_49;
      case 4u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_49;
        }
        unsigned int v23 = (char *)*((void *)a2 + 1);
        unint64_t v21 = *((void *)a2 + 2);
        goto LABEL_39;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_57;
        }
        goto LABEL_49;
      case 6u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_61;
        }
        goto LABEL_49;
      case 7u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_65;
        }
        goto LABEL_49;
      case 8u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_49;
        }
        goto LABEL_69;
      default:
        int v7 = TagFallback & 7;
LABEL_49:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
    return result;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(int *)(this + 16) >= 1)
  {
    uint64_t v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(*(void *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  int v7 = *(_DWORD *)(v5 + 88);
  if ((v7 & 2) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 32), a3);
    int v7 = *(_DWORD *)(v5 + 88);
    if ((v7 & 4) == 0)
    {
LABEL_6:
      if ((v7 & 8) == 0) {
        goto LABEL_7;
      }
      goto LABEL_14;
    }
  }
  else if ((v7 & 4) == 0)
  {
    goto LABEL_6;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 40), a3);
  int v7 = *(_DWORD *)(v5 + 88);
  if ((v7 & 8) == 0)
  {
LABEL_7:
    if ((v7 & 0x10) == 0) {
      goto LABEL_8;
    }
    goto LABEL_15;
  }
LABEL_14:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 80), (uint64_t)a2, a4);
  int v7 = *(_DWORD *)(v5 + 88);
  if ((v7 & 0x10) == 0)
  {
LABEL_8:
    if ((v7 & 0x20) == 0) {
      goto LABEL_9;
    }
    goto LABEL_16;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(v5 + 48), a3);
  int v7 = *(_DWORD *)(v5 + 88);
  if ((v7 & 0x20) == 0)
  {
LABEL_9:
    if ((v7 & 0x40) == 0) {
      goto LABEL_10;
    }
LABEL_17:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (uint64_t)a2, *(double *)(v5 + 64), a3);
    if ((*(_DWORD *)(v5 + 88) & 0x80) == 0) {
      return this;
    }
    goto LABEL_18;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(double *)(v5 + 56), a3);
  int v7 = *(_DWORD *)(v5 + 88);
  if ((v7 & 0x40) != 0) {
    goto LABEL_17;
  }
LABEL_10:
  if ((v7 & 0x80) == 0) {
    return this;
  }
LABEL_18:
  double v8 = *(double *)(v5 + 72);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (uint64_t)a2, v8, a3);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection *this)
{
  int v1 = *((_DWORD *)this + 22);
  if ((v1 & 0x1FE) != 0)
  {
    int v2 = (v1 << 30 >> 31) & 9;
    if ((v1 & 4) != 0) {
      v2 += 9;
    }
    if ((v1 & 8) != 0) {
      v2 += 2;
    }
    if ((v1 & 0x10) != 0) {
      v2 += 9;
    }
    if ((v1 & 0x20) != 0) {
      v2 += 9;
    }
    if ((v1 & 0x40) != 0) {
      v2 += 9;
    }
    if ((v1 & 0x80) != 0) {
      int v3 = v2 + 9;
    }
    else {
      int v3 = v2;
    }
  }
  else
  {
    int v3 = 0;
  }
  uint64_t v4 = *((unsigned int *)this + 4);
  uint64_t v5 = (v4 + v3);
  if ((int)v4 >= 1)
  {
    uint64_t v6 = *((void *)this + 1);
    do
    {
      int v7 = *(unsigned __int8 *)(*(void *)v6 + 28);
      if (*(unsigned char *)(*(void *)v6 + 28))
      {
        if ((v7 & 2) != 0) {
          int v7 = ((v7 << 31 >> 31) & 9) + 9;
        }
        else {
          int v7 = (v7 << 31 >> 31) & 9;
        }
      }
      *(_DWORD *)(*(void *)v6 + 24) = v7;
      uint64_t v5 = (v5 + v7 + 1);
      v6 += 8;
      --v4;
    }
    while (v4);
  }
  *((_DWORD *)this + 21) = v5;
  return v5;
}

double CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection *this, const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection::Swap(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection *this, CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection *a2)
{
  if (a2 != this)
  {
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    uint64_t v4 = *((void *)this + 4);
    *((void *)this + 4) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v4;
    uint64_t v5 = *((void *)this + 5);
    *((void *)this + 5) = *((void *)a2 + 5);
    *((void *)a2 + 5) = v5;
    char v6 = *((unsigned char *)this + 80);
    *((unsigned char *)this + 80) = *((unsigned char *)a2 + 80);
    *((unsigned char *)a2 + 80) = v6;
    uint64_t v7 = *((void *)this + 6);
    *((void *)this + 6) = *((void *)a2 + 6);
    *((void *)a2 + 6) = v7;
    uint64_t v8 = *((void *)this + 7);
    *((void *)this + 7) = *((void *)a2 + 7);
    *((void *)a2 + 7) = v8;
    uint64_t v9 = *((void *)this + 8);
    *((void *)this + 8) = *((void *)a2 + 8);
    *((void *)a2 + 8) = v9;
    double result = *((double *)this + 9);
    *((void *)this + 9) = *((void *)a2 + 9);
    *((double *)a2 + 9) = result;
    int v11 = *((_DWORD *)this + 22);
    *((_DWORD *)this + 22) = *((_DWORD *)a2 + 22);
    *((_DWORD *)a2 + 22) = v11;
    int v12 = *((_DWORD *)this + 21);
    *((_DWORD *)this + 21) = *((_DWORD *)a2 + 21);
    *((_DWORD *)a2 + 21) = v12;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.GEOMapFeatureBuildingSection");
}

void *CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding::SharedCtor(void *this)
{
  this[4] = 0;
  this[5] = 0;
  this[6] = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding *CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding::GEOMapFeatureBuilding(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding *this, const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding *a2)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1EDD0DB08;
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  *((void *)this + 4) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding::MergeFrom(this, a2);
  return this;
}

void sub_18DF9D230(_Unwind_Exception *a1)
{
  sub_18DF0C324(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding *this, const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding *)((char *)this + 8));
  if (*((int *)a2 + 4) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection **)(*((void *)a2 + 1)
                                                                                              + 8 * v4);
      int v6 = *((_DWORD *)this + 5);
      uint64_t v7 = *((int *)this + 4);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 6))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding *)((char *)this + 8));
          int v6 = *((_DWORD *)this + 5);
        }
        *((_DWORD *)this + 5) = v6 + 1;
        operator new();
      }
      uint64_t v8 = *((void *)this + 1);
      *((_DWORD *)this + 4) = v7 + 1;
      CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection::MergeFrom(*(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 4));
  }
  int v9 = *((_DWORD *)a2 + 13);
  if ((v9 & 0x1FE) != 0)
  {
    if ((v9 & 2) != 0)
    {
      uint64_t v10 = *((void *)a2 + 4);
      *((_DWORD *)this + 13) |= 2u;
      *((void *)this + 4) = v10;
      int v9 = *((_DWORD *)a2 + 13);
    }
    if ((v9 & 4) != 0)
    {
      uint64_t v11 = *((void *)a2 + 5);
      *((_DWORD *)this + 13) |= 4u;
      *((void *)this + 5) = v11;
    }
  }
}

void sub_18DF9D404(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding::~GEOMapFeatureBuilding(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding *this)
{
  *(void *)this = &unk_1EDD0DB08;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  sub_18DF0C324((uint64_t *)this + 1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding::~GEOMapFeatureBuilding(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 48) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding::New(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding::Clear(uint64_t this)
{
  uint64_t v1 = this;
  if ((*(_WORD *)(this + 52) & 0x1FE) != 0)
  {
    *(void *)(this + 32) = 0;
    *(void *)(this + 40) = 0;
  }
  if (*(int *)(this + 16) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      uint64_t v3 = *(void *)(*(void *)(v1 + 8) + 8 * v2);
      this = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 32))(v3);
      ++v2;
    }
    while (v2 < *(int *)(v1 + 16));
  }
  *(_DWORD *)(v1 + 16) = 0;
  *(_DWORD *)(v1 + 52) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4 = (CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding *)((char *)this + 8);
  uint64_t v5 = (unint64_t *)((char *)this + 32);
  int v6 = (unint64_t *)((char *)this + 40);
  while (1)
  {
    while (1)
    {
LABEL_2:
      uint64_t v7 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v7 >= *((void *)a2 + 2) || *v7 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v7;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v7 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      unsigned int v9 = TagFallback >> 3;
      if (TagFallback >> 3 == 1)
      {
        int v10 = TagFallback & 7;
        if (v10 == 2)
        {
          while (1)
          {
            int v13 = *((_DWORD *)this + 5);
            uint64_t v14 = *((int *)this + 4);
            if ((int)v14 >= v13)
            {
              if (v13 == *((_DWORD *)this + 6))
              {
                wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
                int v13 = *((_DWORD *)this + 5);
              }
              *((_DWORD *)this + 5) = v13 + 1;
              operator new();
            }
            uint64_t v15 = *((void *)this + 1);
            *((_DWORD *)this + 4) = v14 + 1;
            BOOL v16 = *(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection **)(v15 + 8 * v14);
            unsigned int v29 = 0;
            int v17 = (char *)*((void *)a2 + 1);
            if ((unint64_t)v17 >= *((void *)a2 + 2) || *v17 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v29))return 0; {
            }
              }
            else
            {
              unsigned int v29 = *v17;
              *((void *)a2 + 1) = v17 + 1;
            }
            int v18 = *((_DWORD *)a2 + 14);
            int v19 = *((_DWORD *)a2 + 15);
            *((_DWORD *)a2 + 14) = v18 + 1;
            if (v18 >= v19) {
              return 0;
            }
            wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
            if (!CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection::MergePartialFromCodedStream(v16, a2)|| !*((unsigned char *)a2 + 36))
            {
              return 0;
            }
            wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
            int v20 = *((_DWORD *)a2 + 14);
            BOOL v21 = __OFSUB__(v20, 1);
            int v22 = v20 - 1;
            if (v22 < 0 == v21) {
              *((_DWORD *)a2 + 14) = v22;
            }
            unsigned int v23 = (unsigned __int8 *)*((void *)a2 + 1);
            unint64_t v11 = *((void *)a2 + 2);
            if ((unint64_t)v23 >= v11) {
              goto LABEL_2;
            }
            int v24 = *v23;
            if (v24 != 10)
            {
              if (v24 != 16) {
                goto LABEL_2;
              }
              BOOL v25 = (char *)(v23 + 1);
              *((void *)a2 + 1) = v25;
              goto LABEL_32;
            }
            *((void *)a2 + 1) = v23 + 1;
          }
        }
        goto LABEL_36;
      }
      if (v9 != 2) {
        break;
      }
      int v10 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_36;
      }
      BOOL v25 = (char *)*((void *)a2 + 1);
      unint64_t v11 = *((void *)a2 + 2);
LABEL_32:
      if ((unint64_t)v25 >= v11 || *v25 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v5);
        if (!result) {
          return result;
        }
        int v26 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
      }
      else
      {
        *uint64_t v5 = *v25;
        int v26 = v25 + 1;
        *((void *)a2 + 1) = v26;
      }
      *((_DWORD *)this + 13) |= 2u;
      if ((unint64_t)v26 < v11 && *v26 == 24)
      {
        int v12 = v26 + 1;
        *((void *)a2 + 1) = v12;
LABEL_46:
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v6);
          if (!result) {
            return result;
          }
          unsigned int v28 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v11 = *((void *)a2 + 2);
        }
        else
        {
          *int v6 = *v12;
          unsigned int v28 = (unsigned __int8 *)(v12 + 1);
          *((void *)a2 + 1) = v28;
        }
        *((_DWORD *)this + 13) |= 4u;
        if (v28 == (unsigned __int8 *)v11 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (v9 == 3)
    {
      int v10 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v12 = (char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
        goto LABEL_46;
      }
    }
    else
    {
      int v10 = TagFallback & 7;
    }
LABEL_36:
    if (v10 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(int *)(this + 16) >= 1)
  {
    uint64_t v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(*(void *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  int v7 = *(_DWORD *)(v5 + 52);
  if ((v7 & 2) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(v5 + 32), (uint64_t)a2, a4);
    int v7 = *(_DWORD *)(v5 + 52);
  }
  if ((v7 & 4) != 0)
  {
    uint64_t v8 = *(void *)(v5 + 40);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, (uint64_t)a2, a4);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding *this)
{
  int v2 = *((_DWORD *)this + 13);
  if ((v2 & 0x1FE) == 0)
  {
    int v3 = 0;
    goto LABEL_8;
  }
  if ((v2 & 2) != 0)
  {
    int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                     + 4))
       + 1;
    if ((*((_DWORD *)this + 13) & 4) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  int v3 = 0;
  if ((v2 & 4) != 0) {
LABEL_7:
  }
    v3 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 5))
        + 1;
LABEL_8:
  int v4 = *((_DWORD *)this + 4);
  uint64_t v5 = (v4 + v3);
  if (v4 >= 1)
  {
    uint64_t v6 = 0;
    do
    {
      int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection::ByteSize(*(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuildingSection **)(*((void *)this + 1) + 8 * v6));
      int v8 = (int)v7;
      if (v7 >= 0x80) {
        int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7);
      }
      else {
        int v9 = 1;
      }
      uint64_t v5 = (v8 + v5 + v9);
      ++v6;
    }
    while (v6 < *((int *)this + 4));
  }
  *((_DWORD *)this + 12) = v5;
  return v5;
}

void CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding *this, const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding *this)
{
  return 1;
}

CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding *CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding::Swap(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding *this, CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding *a2)
{
  if (a2 != this)
  {
    int v3 = this;
    this = (CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    uint64_t v4 = *((void *)v3 + 4);
    *((void *)v3 + 4) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v4;
    uint64_t v5 = *((void *)v3 + 5);
    *((void *)v3 + 5) = *((void *)a2 + 5);
    *((void *)a2 + 5) = v5;
    LODWORD(v5) = *((_DWORD *)v3 + 13);
    *((_DWORD *)v3 + 13) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v5;
    LODWORD(v5) = *((_DWORD *)v3 + 12);
    *((_DWORD *)v3 + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v5;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.GEOMapFeatureBuilding");
}

void *CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::SharedCtor(void *this)
{
  this[1] = 0;
  this[7] = 0;
  this[8] = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData *CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::GEOMapBuildingData(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData *this, const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData *a2)
{
  *((void *)this + 2) = 0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(void *)this = &unk_1EDD0D130;
  *((void *)this + 1) = 0;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  *(_OWORD *)((char *)this + 56) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::MergeFrom(this, a2);
  return this;
}

void sub_18DF9DCDC(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;
  if (*v4) {
    MEMORY[0x192FA6220](*v4, 0x1000C8000313F17);
  }
  sub_18DF0C324(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData *this, const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v17);
  }
  uint64_t v4 = (CoreNavigation::CLP::LogEntry::PrivateData *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData *)((char *)this + 16));
  if (*((int *)a2 + 6) >= 1)
  {
    uint64_t v6 = 0;
    do
    {
      int v7 = *(const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding **)(*((void *)a2 + 2) + 8 * v6);
      int v8 = *((_DWORD *)this + 7);
      uint64_t v9 = *((int *)this + 6);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)this + 8))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData *)((char *)this + 16));
          int v8 = *((_DWORD *)this + 7);
        }
        *((_DWORD *)this + 7) = v8 + 1;
        operator new();
      }
      uint64_t v10 = *((void *)this + 2);
      *((_DWORD *)this + 6) = v9 + 1;
      CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding::MergeFrom(*(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding **)(v10 + 8 * v9), v7);
      ++v6;
    }
    while (v6 < *((int *)a2 + 6));
  }
  int v11 = *((_DWORD *)a2 + 12);
  if (v11)
  {
    sub_18DF0C278((uint64_t)this + 40, *((_DWORD *)this + 12) + v11);
    uint64_t v4 = (CoreNavigation::CLP::LogEntry::PrivateData *)memcpy((void *)(*((void *)this + 5) + 8 * *((int *)this + 12)), *((const void **)a2 + 5), 8 * *((int *)a2 + 12));
    *((_DWORD *)this + 12) += *((_DWORD *)a2 + 12);
  }
  LOBYTE(v12) = *((unsigned char *)a2 + 68);
  if ((_BYTE)v12)
  {
    if (*((unsigned char *)a2 + 68))
    {
      *((_DWORD *)this + 17) |= 1u;
      int v13 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
      if (!v13) {
        operator new();
      }
      uint64_t v14 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)a2 + 1);
      if (!v14)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(v4);
        uint64_t v14 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::default_instance_
                                                                              + 8);
      }
      double result = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v13, v14);
      int v12 = *((_DWORD *)a2 + 17);
    }
    if ((v12 & 8) != 0)
    {
      *((_DWORD *)this + 17) |= 8u;
      uint64_t v15 = (CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D *)*((void *)this + 7);
      if (!v15) {
        operator new();
      }
      BOOL v16 = (const CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D *)*((void *)a2 + 7);
      if (!v16)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(v4);
        BOOL v16 = *(const CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D **)(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::default_instance_
                                                                                            + 56);
      }
      return CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::MergeFrom(v15, v16);
    }
  }
  return result;
}

void sub_18DF9DFCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::~GEOMapBuildingData(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData *this)
{
  *(void *)this = &unk_1EDD0D130;
  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::SharedDtor(this);
  uint64_t v2 = *((void *)this + 5);
  if (v2) {
    MEMORY[0x192FA6220](v2, 0x1000C8000313F17);
  }
  sub_18DF0C324((uint64_t *)this + 2);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::~GEOMapBuildingData(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData *)CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 7);
    if (v3)
    {
      uint64_t v4 = *(void (**)(void))(*(void *)v3 + 8);
      v4();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 64) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::New(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::Clear(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 68);
  if ((_BYTE)v2)
  {
    if (*((unsigned char *)this + 68))
    {
      uint64_t v3 = *((void *)this + 1);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
          *(void *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        int v2 = *((_DWORD *)this + 17);
      }
    }
    if ((v2 & 8) != 0)
    {
      uint64_t v4 = *((void *)this + 7);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 28))
        {
          *(void *)(v4 + 8) = 0;
          *(void *)(v4 + 16) = 0;
        }
        *(_DWORD *)(v4 + 28) = 0;
      }
    }
  }
  uint64_t result = sub_18DF0C208((uint64_t)this + 16);
  *((_DWORD *)this + 12) = 0;
  *((_DWORD *)this + 17) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4 = (char *)this + 40;
  uint64_t v5 = (CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData *)((char *)this + 16);
LABEL_2:
  while (2)
  {
    uint64_t v6 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v6 >= *((void *)a2 + 2) || *v6 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v6;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v6 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_21;
        }
        *((_DWORD *)this + 17) |= 1u;
        uint64_t v9 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
        if (!v9) {
          operator new();
        }
        v52[0] = 0;
        uint64_t v10 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v52))return 0; {
        }
          }
        else
        {
          v52[0] = *v10;
          *((void *)a2 + 1) = v10 + 1;
        }
        int v14 = *((_DWORD *)a2 + 14);
        int v15 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v14 + 1;
        if (v14 >= v15) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream(v9, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v16 = *((_DWORD *)a2 + 14);
        BOOL v17 = __OFSUB__(v16, 1);
        int v18 = v16 - 1;
        if (v18 < 0 == v17) {
          *((_DWORD *)a2 + 14) = v18;
        }
        int v19 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v19 >= *((void *)a2 + 2) || *v19 != 18) {
          continue;
        }
        goto LABEL_47;
      case 2u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_21;
        }
        while (2)
        {
          int v24 = *((_DWORD *)this + 7);
          uint64_t v25 = *((int *)this + 6);
          if ((int)v25 >= v24)
          {
            if (v24 == *((_DWORD *)this + 8))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5);
              int v24 = *((_DWORD *)this + 7);
            }
            *((_DWORD *)this + 7) = v24 + 1;
            operator new();
          }
          uint64_t v26 = *((void *)this + 2);
          *((_DWORD *)this + 6) = v25 + 1;
          unsigned int v27 = *(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding **)(v26 + 8 * v25);
          v52[0] = 0;
          unsigned int v28 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v28 >= *((void *)a2 + 2) || *v28 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v52))return 0; {
          }
            }
          else
          {
            v52[0] = *v28;
            *((void *)a2 + 1) = v28 + 1;
          }
          int v29 = *((_DWORD *)a2 + 14);
          int v30 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v29 + 1;
          if (v29 >= v30) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding::MergePartialFromCodedStream(v27, a2)|| !*((unsigned char *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          int v31 = *((_DWORD *)a2 + 14);
          BOOL v17 = __OFSUB__(v31, 1);
          int v32 = v31 - 1;
          if (v32 < 0 == v17) {
            *((_DWORD *)a2 + 14) = v32;
          }
          int v19 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v11 = *((void *)a2 + 2);
          if ((unint64_t)v19 < v11)
          {
            int v33 = *v19;
            if (v33 == 18)
            {
LABEL_47:
              *((void *)a2 + 1) = v19 + 1;
              continue;
            }
            goto LABEL_64;
          }
          goto LABEL_2;
        }
      case 3u:
        int v8 = TagFallback & 7;
        if (v8 == 2)
        {
          v51[0] = 0;
          int v13 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v13 >= *((void *)a2 + 2) || *v13 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)v51))return 0; {
          }
            }
          else
          {
            v51[0] = *v13;
            *((void *)a2 + 1) = v13 + 1;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(a2) >= 1)
          {
            *(void *)int v52 = 0;
            int v20 = (char *)*((void *)a2 + 1);
            if ((unint64_t)v20 >= *((void *)a2 + 2) || *v20 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)v52))return 0; {
            }
              }
            else
            {
              *(void *)int v52 = *v20;
              *((void *)a2 + 1) = v20 + 1;
            }
            int v21 = *((_DWORD *)this + 12);
            if (v21 == *((_DWORD *)this + 13))
            {
              sub_18DF0C278((uint64_t)v4, v21 + 1);
              int v21 = *((_DWORD *)this + 12);
            }
            uint64_t v22 = *(void *)v52;
            uint64_t v23 = *((void *)this + 5);
            *((_DWORD *)this + 12) = v21 + 1;
            *(void *)(v23 + 8 * v21) = v22;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          while (1)
          {
            int v19 = (unsigned char *)*((void *)a2 + 1);
            unint64_t v11 = *((void *)a2 + 2);
            if ((unint64_t)v19 >= v11) {
              goto LABEL_2;
            }
            int v33 = *v19;
            if (v33 == 34) {
              break;
            }
LABEL_64:
            if (v33 != 24) {
              goto LABEL_2;
            }
            int v12 = v19 + 1;
            *((void *)a2 + 1) = v12;
LABEL_66:
            *(void *)unsigned int v51 = 0;
            if ((unint64_t)v12 >= v11 || *v12 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)v51))return 0; {
            }
              }
            else
            {
              *(void *)unsigned int v51 = *v12;
              *((void *)a2 + 1) = v12 + 1;
            }
            int v34 = *((_DWORD *)this + 12);
            int v35 = *((_DWORD *)this + 13);
            if (v34 == v35)
            {
              sub_18DF0C278((uint64_t)v4, v34 + 1);
              int v34 = *((_DWORD *)this + 12);
              int v35 = *((_DWORD *)this + 13);
            }
            uint64_t v36 = *(void *)v51;
            uint64_t v37 = *((void *)this + 5);
            int v38 = v34 + 1;
            *((_DWORD *)this + 12) = v34 + 1;
            *(void *)(v37 + 8 * v34) = v36;
            if (v35 - (v34 + 1) >= 1)
            {
              int v39 = v35 - v34;
              do
              {
                int v40 = (unsigned char *)*((void *)a2 + 1);
                unint64_t v41 = *((void *)a2 + 2);
                if ((unint64_t)v40 >= v41 || *v40 != 24) {
                  break;
                }
                *((void *)a2 + 1) = v40 + 1;
                if ((unint64_t)(v40 + 1) >= v41 || (char)v40[1] < 0)
                {
                  if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)v51))return 0; {
                  int v38 = *((_DWORD *)this + 12);
                  }
                }
                else
                {
                  *(void *)unsigned int v51 = v40[1];
                  *((void *)a2 + 1) = v40 + 2;
                }
                if (v38 >= *((_DWORD *)this + 13))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v52);
                  int v38 = *((_DWORD *)this + 12);
                }
                uint64_t v42 = *(void *)v51;
                uint64_t v43 = *((void *)this + 5);
                *((_DWORD *)this + 12) = v38 + 1;
                *(void *)(v43 + 8 * v38) = v42;
                --v39;
                ++v38;
              }
              while (v39 > 1);
            }
          }
          *((void *)a2 + 1) = v19 + 1;
LABEL_87:
          *((_DWORD *)this + 17) |= 8u;
          unsigned int v44 = (CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D *)*((void *)this + 7);
          if (!v44) {
            operator new();
          }
          v52[0] = 0;
          unsigned int v45 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v45 >= *((void *)a2 + 2) || *v45 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v52))return 0; {
          }
            }
          else
          {
            v52[0] = *v45;
            *((void *)a2 + 1) = v45 + 1;
          }
          int v46 = *((_DWORD *)a2 + 14);
          int v47 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v46 + 1;
          if (v46 >= v47) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::MergePartialFromCodedStream(v44, a2)|| !*((unsigned char *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          int v48 = *((_DWORD *)a2 + 14);
          BOOL v17 = __OFSUB__(v48, 1);
          int v49 = v48 - 1;
          if (v49 < 0 == v17) {
            *((_DWORD *)a2 + 14) = v49;
          }
          if (*((void *)a2 + 1) == *((void *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        if ((TagFallback & 7) == 0)
        {
          int v12 = (char *)*((void *)a2 + 1);
          unint64_t v11 = *((void *)a2 + 2);
          goto LABEL_66;
        }
LABEL_21:
        if (v8 != 4)
        {
          if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
          continue;
          }
        }
        return 1;
      case 4u:
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_21;
        }
        goto LABEL_87;
      default:
        int v8 = TagFallback & 7;
        goto LABEL_21;
    }
  }
}

void sub_18DF9E940(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(unsigned char *)(this + 68))
  {
    uint64_t v6 = *(void *)(this + 8);
    if (!v6)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      uint64_t v6 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
  }
  if (*(int *)(v5 + 24) >= 1)
  {
    uint64_t v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(*(void *)(v5 + 16) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 24));
  }
  if (*(int *)(v5 + 48) >= 1)
  {
    uint64_t v8 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(void *)(*(void *)(v5 + 40) + 8 * v8++), (uint64_t)a2, a4);
    while (v8 < *(int *)(v5 + 48));
  }
  if ((*(unsigned char *)(v5 + 68) & 8) != 0)
  {
    uint64_t v9 = *(void *)(v5 + 56);
    if (!v9)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      uint64_t v9 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::default_instance_ + 56);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v9, a2, a4);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData *this)
{
  if (!*((unsigned char *)this + 68))
  {
    int v2 = 0;
    goto LABEL_22;
  }
  if ((*((unsigned char *)this + 68) & 1) == 0)
  {
    int v2 = 0;
    if ((*((unsigned char *)this + 68) & 8) == 0) {
      goto LABEL_22;
    }
    goto LABEL_15;
  }
  uint64_t v3 = *((void *)this + 1);
  if (!v3)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    uint64_t v3 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::default_instance_ + 8);
  }
  int v4 = *(unsigned __int8 *)(v3 + 36);
  if (*(unsigned char *)(v3 + 36))
  {
    int v5 = (v4 << 31 >> 31) & 9;
    if ((v4 & 2) != 0) {
      v5 += 9;
    }
    if ((v4 & 4) != 0) {
      int v4 = v5 + 9;
    }
    else {
      int v4 = v5;
    }
  }
  *(_DWORD *)(v3 + 32) = v4;
  int v2 = v4 + 2;
  if ((*((_DWORD *)this + 17) & 8) != 0)
  {
LABEL_15:
    uint64_t v6 = *((void *)this + 7);
    if (!v6)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      uint64_t v6 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::default_instance_ + 56);
    }
    int v7 = *(unsigned __int8 *)(v6 + 28);
    if (*(unsigned char *)(v6 + 28))
    {
      if ((v7 & 2) != 0) {
        int v7 = ((v7 << 31 >> 31) & 9) + 9;
      }
      else {
        int v7 = (v7 << 31 >> 31) & 9;
      }
    }
    *(_DWORD *)(v6 + 24) = v7;
    v2 += v7 + 2;
  }
LABEL_22:
  int v8 = *((_DWORD *)this + 6);
  int v9 = v8 + v2;
  if (v8 >= 1)
  {
    uint64_t v10 = 0;
    do
    {
      unint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding::ByteSize(*(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureBuilding **)(*((void *)this + 2) + 8 * v10));
      int v12 = (int)v11;
      if (v11 >= 0x80) {
        int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11);
      }
      else {
        int v13 = 1;
      }
      v9 += v12 + v13;
      ++v10;
    }
    while (v10 < *((int *)this + 6));
  }
  LODWORD(v14) = *((_DWORD *)this + 12);
  if ((int)v14 < 1)
  {
    int v16 = 0;
  }
  else
  {
    uint64_t v15 = 0;
    int v16 = 0;
    do
    {
      v16 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(*((void *)this + 5) + 8 * v15++));
      uint64_t v14 = *((int *)this + 12);
    }
    while (v15 < v14);
  }
  uint64_t result = (v16 + v9 + v14);
  *((_DWORD *)this + 16) = result;
  return result;
}

double CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData *this, const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::Swap(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData *this, CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData *a2)
{
  if (a2 != this)
  {
    uint64_t v4 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v4;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    uint64_t v5 = *((void *)this + 5);
    *((void *)this + 5) = *((void *)a2 + 5);
    double result = *((double *)a2 + 6);
    *((void *)a2 + 5) = v5;
    uint64_t v7 = *((void *)this + 6);
    *((double *)this + 6) = result;
    *((void *)a2 + 6) = v7;
    uint64_t v8 = *((void *)this + 7);
    *((void *)this + 7) = *((void *)a2 + 7);
    *((void *)a2 + 7) = v8;
    LODWORD(v8) = *((_DWORD *)this + 17);
    *((_DWORD *)this + 17) = *((_DWORD *)a2 + 17);
    *((_DWORD *)a2 + 17) = v8;
    LODWORD(v8) = *((_DWORD *)this + 16);
    *((_DWORD *)this + 16) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v8;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.GEOMapBuildingData");
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch_BranchType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 4;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch::SharedCtor(void *this)
{
  this[4] = 0;
  this[5] = 0;
  this[6] = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch *CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch::GEOMapFeatureTropicalSavannaBranch(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch *this, const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch *a2)
{
  *((void *)this + 1) = 0;
  *(void *)this = &unk_1EDD0E828;
  *((void *)this + 2) = 0;
  *((_DWORD *)this + 6) = 0;
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  *((void *)this + 4) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch::MergeFrom(this, a2);
  return this;
}

void sub_18DF9EE5C(_Unwind_Exception *a1)
{
  sub_18DF0C324(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch *this, const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch *)((char *)this + 8));
  if (*((int *)a2 + 4) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(const CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D **)(*((void *)a2 + 1) + 8 * v4);
      int v6 = *((_DWORD *)this + 5);
      uint64_t v7 = *((int *)this + 4);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 6))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch *)((char *)this + 8));
          int v6 = *((_DWORD *)this + 5);
        }
        *((_DWORD *)this + 5) = v6 + 1;
        operator new();
      }
      uint64_t v8 = *((void *)this + 1);
      *((_DWORD *)this + 4) = v7 + 1;
      CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::MergeFrom(*(CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 4));
  }
  int v9 = *((_DWORD *)a2 + 13);
  if ((v9 & 0x1FE) != 0)
  {
    if ((v9 & 2) != 0)
    {
      unsigned int v10 = *((_DWORD *)a2 + 8);
      if (v10 >= 4) {
        __assert_rtn("set_branch_type", "CoreNavigationCLPPrivateDataShared.pb.h", 26178, "::CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch_BranchType_IsValid(value)");
      }
      *((_DWORD *)this + 13) |= 2u;
      *((_DWORD *)this + 8) = v10;
      int v9 = *((_DWORD *)a2 + 13);
    }
    if ((v9 & 4) != 0)
    {
      int v12 = *((_DWORD *)a2 + 9);
      *((_DWORD *)this + 13) |= 4u;
      *((_DWORD *)this + 9) = v12;
      int v9 = *((_DWORD *)a2 + 13);
      if ((v9 & 8) == 0)
      {
LABEL_17:
        if ((v9 & 0x10) == 0) {
          return;
        }
        goto LABEL_18;
      }
    }
    else if ((v9 & 8) == 0)
    {
      goto LABEL_17;
    }
    int v13 = *((_DWORD *)a2 + 10);
    *((_DWORD *)this + 13) |= 8u;
    *((_DWORD *)this + 10) = v13;
    if ((*((_DWORD *)a2 + 13) & 0x10) != 0)
    {
LABEL_18:
      int v11 = *((_DWORD *)a2 + 11);
      *((_DWORD *)this + 13) |= 0x10u;
      *((_DWORD *)this + 11) = v11;
    }
  }
}

void sub_18DF9F084(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch::~GEOMapFeatureTropicalSavannaBranch(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch *this)
{
  *(void *)this = &unk_1EDD0E828;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  sub_18DF0C324((uint64_t *)this + 1);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch::~GEOMapFeatureTropicalSavannaBranch(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 48) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch::New(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch::Clear(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch *this)
{
  if ((*((_WORD *)this + 26) & 0x1FE) != 0)
  {
    *((void *)this + 4) = 0;
    *((void *)this + 5) = 0;
  }
  uint64_t result = sub_18DF0C208((uint64_t)this + 8);
  *((_DWORD *)this + 13) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4 = (CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch *)((char *)this + 8);
  uint64_t v5 = (unsigned int *)((char *)this + 36);
  int v6 = (unsigned int *)((char *)this + 40);
  uint64_t v7 = (unsigned int *)((char *)this + 44);
LABEL_2:
  while (2)
  {
    uint64_t v8 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v8;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v8 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_37;
        }
        while (1)
        {
          int v11 = *((_DWORD *)this + 5);
          uint64_t v12 = *((int *)this + 4);
          if ((int)v12 >= v11)
          {
            if (v11 == *((_DWORD *)this + 6))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
              int v11 = *((_DWORD *)this + 5);
            }
            *((_DWORD *)this + 5) = v11 + 1;
            operator new();
          }
          uint64_t v13 = *((void *)this + 1);
          *((_DWORD *)this + 4) = v12 + 1;
          uint64_t v14 = *(CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D **)(v13 + 8 * v12);
          unsigned int v36 = 0;
          uint64_t v15 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v15 >= *((void *)a2 + 2) || *v15 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v36))return 0; {
          }
            }
          else
          {
            unsigned int v36 = *v15;
            *((void *)a2 + 1) = v15 + 1;
          }
          int v16 = *((_DWORD *)a2 + 14);
          int v17 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v16 + 1;
          if (v16 >= v17) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::MergePartialFromCodedStream(v14, a2)|| !*((unsigned char *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          int v18 = *((_DWORD *)a2 + 14);
          BOOL v19 = __OFSUB__(v18, 1);
          int v20 = v18 - 1;
          if (v20 < 0 == v19) {
            *((_DWORD *)a2 + 14) = v20;
          }
          uint64_t v22 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v21 = *((void *)a2 + 2);
          if ((unint64_t)v22 >= v21) {
            goto LABEL_2;
          }
          int v23 = *v22;
          if (v23 != 10) {
            break;
          }
          *((void *)a2 + 1) = v22 + 1;
        }
        if (v23 != 16) {
          continue;
        }
        int v24 = (char *)(v22 + 1);
        *((void *)a2 + 1) = v24;
        goto LABEL_29;
      case 2u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_37;
        }
        int v24 = (char *)*((void *)a2 + 1);
        unint64_t v21 = *((void *)a2 + 2);
LABEL_29:
        unsigned int v35 = 0;
        if ((unint64_t)v24 >= v21 || *v24 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v35);
          if (!result) {
            return result;
          }
          unsigned int v25 = v35;
        }
        else
        {
          unsigned int v25 = *v24;
          *((void *)a2 + 1) = v24 + 1;
        }
        if (v25 <= 3)
        {
          *((_DWORD *)this + 13) |= 2u;
          *((_DWORD *)this + 8) = v25;
        }
        int v31 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v26 = *((void *)a2 + 2);
        if ((unint64_t)v31 >= v26 || *v31 != 24) {
          continue;
        }
        unsigned int v27 = v31 + 1;
        *((void *)a2 + 1) = v27;
LABEL_50:
        if ((unint64_t)v27 >= v26 || *v27 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!result) {
            return result;
          }
          int v32 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v26 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v5 = *v27;
          int v32 = v27 + 1;
          *((void *)a2 + 1) = v32;
        }
        *((_DWORD *)this + 13) |= 4u;
        if ((unint64_t)v32 >= v26 || *v32 != 32) {
          continue;
        }
        unsigned int v28 = v32 + 1;
        *((void *)a2 + 1) = v28;
LABEL_58:
        if ((unint64_t)v28 >= v26 || *v28 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
          if (!result) {
            return result;
          }
          int v33 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v26 = *((void *)a2 + 2);
        }
        else
        {
          *int v6 = *v28;
          int v33 = v28 + 1;
          *((void *)a2 + 1) = v33;
        }
        *((_DWORD *)this + 13) |= 8u;
        if ((unint64_t)v33 >= v26 || *v33 != 40) {
          continue;
        }
        int v29 = v33 + 1;
        *((void *)a2 + 1) = v29;
LABEL_66:
        if ((unint64_t)v29 >= v26 || *v29 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v7);
          if (!result) {
            return result;
          }
          int v34 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v26 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v7 = *v29;
          int v34 = (unsigned __int8 *)(v29 + 1);
          *((void *)a2 + 1) = v34;
        }
        *((_DWORD *)this + 13) |= 0x10u;
        if (v34 != (unsigned __int8 *)v26 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10)) {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        break;
      case 3u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_37;
        }
        unsigned int v27 = (char *)*((void *)a2 + 1);
        unint64_t v26 = *((void *)a2 + 2);
        goto LABEL_50;
      case 4u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_37;
        }
        unsigned int v28 = (char *)*((void *)a2 + 1);
        unint64_t v26 = *((void *)a2 + 2);
        goto LABEL_58;
      case 5u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_37;
        }
        int v29 = (char *)*((void *)a2 + 1);
        unint64_t v26 = *((void *)a2 + 2);
        goto LABEL_66;
      default:
        int v10 = TagFallback & 7;
LABEL_37:
        if (v10 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(int *)(this + 16) >= 1)
  {
    uint64_t v6 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(*(void *)(v5 + 8) + 8 * v6++), a2, a4);
    while (v6 < *(int *)(v5 + 16));
  }
  int v7 = *(_DWORD *)(v5 + 52);
  if ((v7 & 2) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 32), (uint64_t)a2, a4);
    int v7 = *(_DWORD *)(v5 + 52);
    if ((v7 & 4) == 0)
    {
LABEL_6:
      if ((v7 & 8) == 0) {
        goto LABEL_7;
      }
LABEL_11:
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
      if ((*(_DWORD *)(v5 + 52) & 0x10) == 0) {
        return this;
      }
      goto LABEL_12;
    }
  }
  else if ((v7 & 4) == 0)
  {
    goto LABEL_6;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 36), (uint64_t)a2, a4);
  int v7 = *(_DWORD *)(v5 + 52);
  if ((v7 & 8) != 0) {
    goto LABEL_11;
  }
LABEL_7:
  if ((v7 & 0x10) == 0) {
    return this;
  }
LABEL_12:
  uint64_t v8 = *(unsigned int *)(v5 + 44);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v8, (uint64_t)a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch *this)
{
  int v2 = *((_DWORD *)this + 13);
  if ((v2 & 0x1FE) == 0)
  {
    int v3 = 0;
    goto LABEL_28;
  }
  if ((v2 & 2) != 0)
  {
    uint64_t v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    if ((v4 & 0x80000000) != 0)
    {
      int v3 = 11;
      if ((v2 & 4) == 0) {
        goto LABEL_17;
      }
    }
    else if (v4 >= 0x80)
    {
      int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      int v2 = *((_DWORD *)this + 13);
      if ((v2 & 4) == 0) {
        goto LABEL_17;
      }
    }
    else
    {
      int v3 = 2;
      if ((v2 & 4) == 0) {
        goto LABEL_17;
      }
    }
  }
  else
  {
    int v3 = 0;
    if ((v2 & 4) == 0) {
      goto LABEL_17;
    }
  }
  uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
  if (v5 >= 0x80)
  {
    int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    int v2 = *((_DWORD *)this + 13);
  }
  else
  {
    int v6 = 2;
  }
  v3 += v6;
LABEL_17:
  if ((v2 & 8) == 0)
  {
    if ((v2 & 0x10) == 0) {
      goto LABEL_28;
    }
    goto LABEL_24;
  }
  int v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
  if (v7 >= 0x80)
  {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7) + 1;
    int v2 = *((_DWORD *)this + 13);
  }
  else
  {
    int v8 = 2;
  }
  v3 += v8;
  if ((v2 & 0x10) != 0)
  {
LABEL_24:
    int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
    if (v9 >= 0x80) {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9) + 1;
    }
    else {
      int v10 = 2;
    }
    v3 += v10;
  }
LABEL_28:
  uint64_t v11 = *((unsigned int *)this + 4);
  uint64_t result = (v11 + v3);
  if ((int)v11 >= 1)
  {
    uint64_t v13 = *((void *)this + 1);
    do
    {
      int v14 = *(unsigned __int8 *)(*(void *)v13 + 28);
      if (*(unsigned char *)(*(void *)v13 + 28))
      {
        if ((v14 & 2) != 0) {
          int v14 = ((v14 << 31 >> 31) & 9) + 9;
        }
        else {
          int v14 = (v14 << 31 >> 31) & 9;
        }
      }
      *(_DWORD *)(*(void *)v13 + 24) = v14;
      uint64_t result = (result + v14 + 1);
      v13 += 8;
      --v11;
    }
    while (v11);
  }
  *((_DWORD *)this + 12) = result;
  return result;
}

void CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch *this, const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch *this)
{
  return 1;
}

CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch *CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch::Swap(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch *this, CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch *a2)
{
  if (a2 != this)
  {
    int v3 = this;
    this = (CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    int v4 = *((_DWORD *)v3 + 8);
    *((_DWORD *)v3 + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v4;
    int v5 = *((_DWORD *)v3 + 9);
    *((_DWORD *)v3 + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v5;
    int v6 = *((_DWORD *)v3 + 10);
    *((_DWORD *)v3 + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v6;
    int v7 = *((_DWORD *)v3 + 11);
    *((_DWORD *)v3 + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v7;
    int v8 = *((_DWORD *)v3 + 13);
    *((_DWORD *)v3 + 13) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v8;
    int v9 = *((_DWORD *)v3 + 12);
    *((_DWORD *)v3 + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v9;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.GEOMapFeatureTropicalSavannaBranch");
}

double CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox *this)
{
  *((void *)this + 8) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox *CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox::GEOMapFeatureTropicalSavannaBoundingBox(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox *this, const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox *a2)
{
  *(void *)this = &unk_1EDD0E8A0;
  *((void *)this + 8) = 0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((_DWORD *)this + 14) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox::MergeFrom(this, a2);
  return this;
}

void sub_18DF9FAF0(_Unwind_Exception *a1)
{
  sub_18DF0C324(v1 + 5);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox *this, const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox *)((char *)this + 40));
  if (*((int *)a2 + 12) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      int v6 = *(const CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D **)(*((void *)a2 + 5) + 8 * v5);
      int v7 = *((_DWORD *)this + 13);
      uint64_t v8 = *((int *)this + 12);
      if ((int)v8 >= v7)
      {
        if (v7 == *((_DWORD *)this + 14))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox *)((char *)this + 40));
          int v7 = *((_DWORD *)this + 13);
        }
        *((_DWORD *)this + 13) = v7 + 1;
        operator new();
      }
      uint64_t v9 = *((void *)this + 5);
      *((_DWORD *)this + 12) = v8 + 1;
      double result = CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::MergeFrom(*(CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D **)(v9 + 8 * v8), v6);
      ++v5;
    }
    while (v5 < *((int *)a2 + 12));
  }
  LOBYTE(v10) = *((unsigned char *)a2 + 68);
  if ((_BYTE)v10)
  {
    if (*((unsigned char *)a2 + 68))
    {
      double result = *((double *)a2 + 1);
      *((_DWORD *)this + 17) |= 1u;
      *((double *)this + 1) = result;
      int v10 = *((_DWORD *)a2 + 17);
      if ((v10 & 2) == 0)
      {
LABEL_14:
        if ((v10 & 4) == 0) {
          goto LABEL_15;
        }
        goto LABEL_20;
      }
    }
    else if ((*((unsigned char *)a2 + 68) & 2) == 0)
    {
      goto LABEL_14;
    }
    double result = *((double *)a2 + 2);
    *((_DWORD *)this + 17) |= 2u;
    *((double *)this + 2) = result;
    int v10 = *((_DWORD *)a2 + 17);
    if ((v10 & 4) == 0)
    {
LABEL_15:
      if ((v10 & 8) == 0) {
        return result;
      }
      goto LABEL_16;
    }
LABEL_20:
    double result = *((double *)a2 + 3);
    *((_DWORD *)this + 17) |= 4u;
    *((double *)this + 3) = result;
    if ((*((_DWORD *)a2 + 17) & 8) == 0) {
      return result;
    }
LABEL_16:
    double result = *((double *)a2 + 4);
    *((_DWORD *)this + 17) |= 8u;
    *((double *)this + 4) = result;
  }
  return result;
}

void sub_18DF9FCF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox::~GEOMapFeatureTropicalSavannaBoundingBox(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox *this)
{
  *(void *)this = &unk_1EDD0E8A0;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  sub_18DF0C324((uint64_t *)this + 5);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox::~GEOMapFeatureTropicalSavannaBoundingBox(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 64) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox::New(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox::Clear(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox *this)
{
  if (*((unsigned char *)this + 68))
  {
    *(_OWORD *)((char *)this + 24) = 0u;
    *(_OWORD *)((char *)this + 8) = 0u;
  }
  uint64_t result = sub_18DF0C208((uint64_t)this + 40);
  *((_DWORD *)this + 17) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox *)((char *)this + 40);
  while (1)
  {
    uint64_t v5 = (unsigned __int8 *)*((void *)a2 + 1);
    if ((unint64_t)v5 >= *((void *)a2 + 2) || (char)*v5 < 0) {
      break;
    }
    unint64_t TagFallback = *v5;
    *((_DWORD *)a2 + 8) = TagFallback;
    *((void *)a2 + 1) = v5 + 1;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_30;
        }
        *(void *)int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0; {
        *((void *)this + 1) = *(void *)v24;
        }
        *((_DWORD *)this + 17) |= 1u;
        uint64_t v8 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 != 17) {
          continue;
        }
        *((void *)a2 + 1) = v8 + 1;
        goto LABEL_15;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_30;
        }
LABEL_15:
        *(void *)int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0; {
        *((void *)this + 2) = *(void *)v24;
        }
        *((_DWORD *)this + 17) |= 2u;
        uint64_t v9 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v9 >= *((void *)a2 + 2) || *v9 != 25) {
          continue;
        }
        *((void *)a2 + 1) = v9 + 1;
LABEL_20:
        *(void *)int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0; {
        *((void *)this + 3) = *(void *)v24;
        }
        *((_DWORD *)this + 17) |= 4u;
        int v10 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 != 33) {
          continue;
        }
        *((void *)a2 + 1) = v10 + 1;
LABEL_25:
        *(void *)int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0; {
        *((void *)this + 4) = *(void *)v24;
        }
        *((_DWORD *)this + 17) |= 8u;
        uint64_t v11 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v11 >= *((void *)a2 + 2) || *v11 != 42) {
          continue;
        }
        break;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_20;
        }
        goto LABEL_30;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_25;
        }
        goto LABEL_30;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_30;
        }
        goto LABEL_34;
      default:
        int v7 = TagFallback & 7;
LABEL_30:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
    do
    {
      *((void *)a2 + 1) = v11 + 1;
LABEL_34:
      int v12 = *((_DWORD *)this + 13);
      uint64_t v13 = *((int *)this + 12);
      if ((int)v13 >= v12)
      {
        if (v12 == *((_DWORD *)this + 14))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
          int v12 = *((_DWORD *)this + 13);
        }
        *((_DWORD *)this + 13) = v12 + 1;
        operator new();
      }
      uint64_t v14 = *((void *)this + 5);
      *((_DWORD *)this + 12) = v13 + 1;
      uint64_t v15 = *(CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D **)(v14 + 8 * v13);
      v24[0] = 0;
      int v16 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v16 >= *((void *)a2 + 2) || *v16 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v24)) {
          return 0;
        }
      }
      else
      {
        v24[0] = *v16;
        *((void *)a2 + 1) = v16 + 1;
      }
      int v17 = *((_DWORD *)a2 + 14);
      int v18 = *((_DWORD *)a2 + 15);
      *((_DWORD *)a2 + 14) = v17 + 1;
      if (v17 >= v18) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
      if (!CoreNavigation::CLP::LogEntry::PrivateData::GEOLocationCoordinate2D::MergePartialFromCodedStream(v15, a2)|| !*((unsigned char *)a2 + 36))
      {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
      int v19 = *((_DWORD *)a2 + 14);
      BOOL v20 = __OFSUB__(v19, 1);
      int v21 = v19 - 1;
      if (v21 < 0 == v20) {
        *((_DWORD *)a2 + 14) = v21;
      }
      uint64_t v11 = (unsigned char *)*((void *)a2 + 1);
      uint64_t v22 = (unsigned char *)*((void *)a2 + 2);
    }
    while (v11 < v22 && *v11 == 42);
    if (v11 == v22 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
    {
      *((_DWORD *)a2 + 8) = 0;
      uint64_t result = 1;
      *((unsigned char *)a2 + 36) = 1;
      return result;
    }
  }
  unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
  *((_DWORD *)a2 + 8) = TagFallback;
  if (TagFallback) {
    goto LABEL_7;
  }
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 68);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
    int v6 = *(_DWORD *)(v5 + 68);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_12:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 24), a3);
  if ((*(_DWORD *)(v5 + 68) & 8) != 0) {
LABEL_5:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(double *)(v5 + 32), a3);
LABEL_6:
  if (*(int *)(v5 + 48) >= 1)
  {
    uint64_t v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(void *)(*(void *)(v5 + 40) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 48));
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox *this)
{
  int v1 = *((unsigned __int8 *)this + 68);
  if (*((unsigned char *)this + 68))
  {
    int v2 = (v1 << 31 >> 31) & 9;
    if ((v1 & 2) != 0) {
      v2 += 9;
    }
    if ((v1 & 4) != 0) {
      v2 += 9;
    }
    if ((v1 & 8) != 0) {
      int v1 = v2 + 9;
    }
    else {
      int v1 = v2;
    }
  }
  uint64_t v3 = *((unsigned int *)this + 12);
  uint64_t v4 = (v3 + v1);
  if ((int)v3 >= 1)
  {
    uint64_t v5 = *((void *)this + 5);
    do
    {
      int v6 = *(unsigned __int8 *)(*(void *)v5 + 28);
      if (*(unsigned char *)(*(void *)v5 + 28))
      {
        if ((v6 & 2) != 0) {
          int v6 = ((v6 << 31 >> 31) & 9) + 9;
        }
        else {
          int v6 = (v6 << 31 >> 31) & 9;
        }
      }
      *(_DWORD *)(*(void *)v5 + 24) = v6;
      uint64_t v4 = (v4 + v6 + 1);
      v5 += 8;
      --v3;
    }
    while (v3);
  }
  *((_DWORD *)this + 16) = v4;
  return v4;
}

double CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox *this, const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox *this)
{
  return 1;
}

CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox *CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox::Swap(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox *this, CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox *a2)
{
  if (a2 != this)
  {
    uint64_t v3 = this;
    uint64_t v4 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v4;
    uint64_t v5 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v5;
    uint64_t v6 = *((void *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v6;
    uint64_t v7 = *((void *)this + 4);
    *((void *)this + 4) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v7;
    this = (CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    int v8 = *((_DWORD *)v3 + 17);
    *((_DWORD *)v3 + 17) = *((_DWORD *)a2 + 17);
    *((_DWORD *)a2 + 17) = v8;
    int v9 = *((_DWORD *)v3 + 16);
    *((_DWORD *)v3 + 16) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v9;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.GEOMapFeatureTropicalSavannaBoundingBox");
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 4;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures::SharedCtor(uint64_t this)
{
  *(_WORD *)(this + 8) = 0;
  *(_DWORD *)(this + 12) = 0;
  *(_DWORD *)(this + 16) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures *CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures::GEOMapFeatureTropicalSavanna_TreeFeatures(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures *this, const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures *a2)
{
  *(void *)this = &unk_1EDD0E918;
  *((_WORD *)this + 4) = 0;
  *((_DWORD *)this + 3) = 0;
  *((_DWORD *)this + 4) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures::MergeFrom(this, a2);
  return this;
}

void sub_18DFA05FC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures *this, const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 16);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 16))
    {
      char v5 = *((unsigned char *)a2 + 8);
      *((_DWORD *)this + 4) |= 1u;
      *((unsigned char *)this + 8) = v5;
      int v4 = *((_DWORD *)a2 + 4);
    }
    if ((v4 & 2) != 0)
    {
      char v6 = *((unsigned char *)a2 + 9);
      *((_DWORD *)this + 4) |= 2u;
      *((unsigned char *)this + 9) = v6;
    }
  }
}

void sub_18DFA06BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures::~GEOMapFeatureTropicalSavanna_TreeFeatures(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures *this)
{
  *(void *)this = &unk_1EDD0E918;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures::~GEOMapFeatureTropicalSavanna_TreeFeatures(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 12) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures::New(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 16)) {
    *(_WORD *)(this + 8) = 0;
  }
  *(_DWORD *)(this + 16) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (1)
  {
    while (1)
    {
      int v4 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v4;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v4 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v6 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_15;
      }
      unsigned int v16 = 0;
      int v9 = (char *)*((void *)a2 + 1);
      unint64_t v7 = *((void *)a2 + 2);
      if ((unint64_t)v9 >= v7 || *v9 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v16);
        if (!result) {
          return result;
        }
        unsigned int v10 = v16;
        uint64_t v11 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v7 = *((void *)a2 + 2);
      }
      else
      {
        unsigned int v10 = *v9;
        uint64_t v11 = v9 + 1;
        *((void *)a2 + 1) = v11;
      }
      *((unsigned char *)this + 8) = v10 != 0;
      *((_DWORD *)this + 4) |= 1u;
      if ((unint64_t)v11 < v7 && *v11 == 16)
      {
        int v8 = v11 + 1;
        *((void *)a2 + 1) = v8;
LABEL_23:
        unsigned int v15 = 0;
        if ((unint64_t)v8 >= v7 || *v8 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v15);
          if (!result) {
            return result;
          }
          unsigned int v12 = v15;
          uint64_t v13 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v7 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v12 = *v8;
          uint64_t v13 = (unsigned __int8 *)(v8 + 1);
          *((void *)a2 + 1) = v13;
        }
        *((unsigned char *)this + 9) = v12 != 0;
        *((_DWORD *)this + 4) |= 2u;
        if (v13 == (unsigned __int8 *)v7 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v6 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v8 = (char *)*((void *)a2 + 1);
        unint64_t v7 = *((void *)a2 + 2);
        goto LABEL_23;
      }
    }
    else
    {
      int v6 = TagFallback & 7;
    }
LABEL_15:
    if (v6 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 16);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned __int8 *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 16);
  }
  if ((v6 & 2) != 0)
  {
    uint64_t v7 = *(unsigned __int8 *)(v5 + 9);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, (uint64_t)a2, a4);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures *this)
{
  unsigned int v1 = 2 * (*((_DWORD *)this + 4) & 1);
  if ((*((_DWORD *)this + 4) & 2) != 0) {
    v1 += 2;
  }
  if (*((_DWORD *)this + 4)) {
    uint64_t v2 = v1;
  }
  else {
    uint64_t v2 = 0;
  }
  *((_DWORD *)this + 3) = v2;
  return v2;
}

void CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures *this, const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures *a2)
{
  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures *)this)
  {
    char v2 = *(unsigned char *)(this + 8);
    *(unsigned char *)(this + 8) = *((unsigned char *)a2 + 8);
    *((unsigned char *)a2 + 8) = v2;
    char v3 = *(unsigned char *)(this + 9);
    *(unsigned char *)(this + 9) = *((unsigned char *)a2 + 9);
    *((unsigned char *)a2 + 9) = v3;
    int v4 = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v4;
    int v5 = *(_DWORD *)(this + 12);
    *(_DWORD *)(this + 12) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v5;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.GEOMapFeatureTropicalSavanna.TreeFeatures");
}

double CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna *this)
{
  *((void *)this + 1) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *((void *)this + 9) = 0;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna *CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::GEOMapFeatureTropicalSavanna(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna *this, const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna *a2)
{
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *((void *)this + 9) = 0;
  *(void *)this = &unk_1EDD0E558;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::MergeFrom(this, a2);
  return this;
}

void sub_18DFA0C68(_Unwind_Exception *a1)
{
  sub_18DF0C324(v1 + 2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna *this, const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v19);
  }
  int v4 = (CoreNavigation::CLP::LogEntry::PrivateData *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna *)((char *)this + 16));
  if (*((int *)a2 + 6) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      int v6 = *(const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch **)(*((void *)a2 + 2) + 8 * v5);
      int v7 = *((_DWORD *)this + 7);
      uint64_t v8 = *((int *)this + 6);
      if ((int)v8 >= v7)
      {
        if (v7 == *((_DWORD *)this + 8))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna *)((char *)this + 16));
          int v7 = *((_DWORD *)this + 7);
        }
        *((_DWORD *)this + 7) = v7 + 1;
        operator new();
      }
      uint64_t v9 = *((void *)this + 2);
      *((_DWORD *)this + 6) = v8 + 1;
      CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch::MergeFrom(*(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch **)(v9 + 8 * v8), v6);
      ++v5;
    }
    while (v5 < *((int *)a2 + 6));
  }
  LOBYTE(v10) = *((unsigned char *)a2 + 76);
  if (!(_BYTE)v10) {
    return;
  }
  if (*((unsigned char *)a2 + 76))
  {
    *((_DWORD *)this + 19) |= 1u;
    unsigned int v12 = (CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox *)*((void *)this + 1);
    if (!v12) {
      operator new();
    }
    uint64_t v13 = (const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox *)*((void *)a2 + 1);
    if (!v13)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(v4);
      uint64_t v13 = *(const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox **)(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::default_instance_ + 8);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox::MergeFrom(v12, v13);
    int v10 = *((_DWORD *)a2 + 19);
    if ((v10 & 4) == 0)
    {
LABEL_14:
      if ((v10 & 8) == 0) {
        goto LABEL_15;
      }
      goto LABEL_26;
    }
  }
  else if ((*((unsigned char *)a2 + 76) & 4) == 0)
  {
    goto LABEL_14;
  }
  uint64_t v14 = *((void *)a2 + 5);
  *((_DWORD *)this + 19) |= 4u;
  *((void *)this + 5) = v14;
  int v10 = *((_DWORD *)a2 + 19);
  if ((v10 & 8) == 0)
  {
LABEL_15:
    if ((v10 & 0x10) == 0) {
      goto LABEL_16;
    }
LABEL_28:
    int v16 = *((_DWORD *)a2 + 13);
    *((_DWORD *)this + 19) |= 0x10u;
    *((_DWORD *)this + 13) = v16;
    int v10 = *((_DWORD *)a2 + 19);
    if ((v10 & 0x20) == 0)
    {
LABEL_17:
      if ((v10 & 0x40) == 0) {
        return;
      }
      goto LABEL_18;
    }
    goto LABEL_29;
  }
LABEL_26:
  unsigned int v15 = *((_DWORD *)a2 + 12);
  if (v15 >= 4) {
    __assert_rtn("set_tree_type", "CoreNavigationCLPPrivateDataShared.pb.h", 26525, "::CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeType_IsValid(value)");
  }
  *((_DWORD *)this + 19) |= 8u;
  *((_DWORD *)this + 12) = v15;
  int v10 = *((_DWORD *)a2 + 19);
  if ((v10 & 0x10) != 0) {
    goto LABEL_28;
  }
LABEL_16:
  if ((v10 & 0x20) == 0) {
    goto LABEL_17;
  }
LABEL_29:
  *((_DWORD *)this + 19) |= 0x20u;
  int v17 = (CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures *)*((void *)this + 7);
  if (!v17) {
    operator new();
  }
  int v18 = (const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures *)*((void *)a2 + 7);
  if (!v18)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(v4);
    int v18 = *(const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures **)(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::default_instance_ + 56);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures::MergeFrom(v17, v18);
  if ((*((_DWORD *)a2 + 19) & 0x40) != 0)
  {
LABEL_18:
    uint64_t v11 = *((void *)a2 + 8);
    *((_DWORD *)this + 19) |= 0x40u;
    *((void *)this + 8) = v11;
  }
}

void sub_18DFA0FB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::~GEOMapFeatureTropicalSavanna(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna *this)
{
  *(void *)this = &unk_1EDD0E558;
  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::SharedDtor(this);
  sub_18DF0C324((uint64_t *)this + 2);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::~GEOMapFeatureTropicalSavanna(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna *)CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 7);
    if (v3)
    {
      int v4 = *(void (**)(void))(*(void *)v3 + 8);
      v4();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 72) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::New(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::Clear(uint64_t this)
{
  uint64_t v1 = this;
  LOBYTE(v2) = *(unsigned char *)(this + 76);
  if ((_BYTE)v2)
  {
    if (*(unsigned char *)(this + 76))
    {
      uint64_t v3 = *(void *)(this + 8);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 68))
        {
          *(_OWORD *)(v3 + 24) = 0u;
          *(_OWORD *)(v3 + 8) = 0u;
        }
        this = sub_18DF0C208(v3 + 40);
        *(_DWORD *)(v3 + 68) = 0;
        int v2 = *(_DWORD *)(v1 + 76);
      }
    }
    *(void *)(v1 + 40) = 0;
    *(void *)(v1 + 48) = 0;
    if ((v2 & 0x20) != 0)
    {
      uint64_t v4 = *(void *)(v1 + 56);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 16)) {
          *(_WORD *)(v4 + 8) = 0;
        }
        *(_DWORD *)(v4 + 16) = 0;
      }
    }
    *(void *)(v1 + 64) = 0;
  }
  if (*(int *)(v1 + 24) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v6 = *(void *)(*(void *)(v1 + 16) + 8 * v5);
      this = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 32))(v6);
      ++v5;
    }
    while (v5 < *(int *)(v1 + 24));
  }
  *(_DWORD *)(v1 + 24) = 0;
  *(_DWORD *)(v1 + 76) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4 = (CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna *)((char *)this + 16);
  uint64_t v5 = (unint64_t *)((char *)this + 40);
  uint64_t v6 = (unsigned int *)((char *)this + 52);
  int v7 = (unint64_t *)((char *)this + 64);
  while (1)
  {
LABEL_2:
    uint64_t v8 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v8 < *((void *)a2 + 2) && (*v8 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v8;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v8 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_7;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_26;
        }
        *((_DWORD *)this + 19) |= 1u;
        uint64_t v11 = (CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox *)*((void *)this + 1);
        if (!v11) {
          operator new();
        }
        unsigned int v50 = 0;
        unsigned int v12 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v12 >= *((void *)a2 + 2) || *v12 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v50))return 0; {
        }
          }
        else
        {
          unsigned int v50 = *v12;
          *((void *)a2 + 1) = v12 + 1;
        }
        int v21 = *((_DWORD *)a2 + 14);
        int v22 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v21 + 1;
        if (v21 >= v22) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox::MergePartialFromCodedStream(v11, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v23 = *((_DWORD *)a2 + 14);
        BOOL v24 = __OFSUB__(v23, 1);
        int v25 = v23 - 1;
        if (v25 < 0 == v24) {
          *((_DWORD *)a2 + 14) = v25;
        }
        unint64_t v26 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v26 >= *((void *)a2 + 2) || *v26 != 18) {
          continue;
        }
        goto LABEL_38;
      case 2u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_26;
        }
        break;
      case 3u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        uint64_t v14 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_57;
      case 4u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        unsigned int v15 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_65;
      case 5u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v17 = (char *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
        goto LABEL_75;
      case 6u:
        int v10 = TagFallback & 7;
        if (v10 != 2) {
          goto LABEL_26;
        }
        int v18 = *((_DWORD *)this + 19);
        goto LABEL_83;
      case 7u:
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        BOOL v20 = (char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        goto LABEL_97;
      default:
        int v10 = TagFallback & 7;
LABEL_26:
        if (v10 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
    while (1)
    {
      int v27 = *((_DWORD *)this + 7);
      uint64_t v28 = *((int *)this + 6);
      if ((int)v28 >= v27)
      {
        if (v27 == *((_DWORD *)this + 8))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
          int v27 = *((_DWORD *)this + 7);
        }
        *((_DWORD *)this + 7) = v27 + 1;
        operator new();
      }
      uint64_t v29 = *((void *)this + 2);
      *((_DWORD *)this + 6) = v28 + 1;
      int v30 = *(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch **)(v29 + 8 * v28);
      unsigned int v50 = 0;
      int v31 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v31 >= *((void *)a2 + 2) || *v31 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v50)) {
          return 0;
        }
      }
      else
      {
        unsigned int v50 = *v31;
        *((void *)a2 + 1) = v31 + 1;
      }
      int v32 = *((_DWORD *)a2 + 14);
      int v33 = *((_DWORD *)a2 + 15);
      *((_DWORD *)a2 + 14) = v32 + 1;
      if (v32 >= v33) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
      if (!CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch::MergePartialFromCodedStream(v30, a2)|| !*((unsigned char *)a2 + 36))
      {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
      int v34 = *((_DWORD *)a2 + 14);
      BOOL v24 = __OFSUB__(v34, 1);
      int v35 = v34 - 1;
      if (v35 < 0 == v24) {
        *((_DWORD *)a2 + 14) = v35;
      }
      unint64_t v26 = (unsigned char *)*((void *)a2 + 1);
      unint64_t v13 = *((void *)a2 + 2);
      if ((unint64_t)v26 >= v13) {
        goto LABEL_2;
      }
      int v36 = *v26;
      if (v36 != 18) {
        break;
      }
LABEL_38:
      *((void *)a2 + 1) = v26 + 1;
    }
    if (v36 != 24) {
      continue;
    }
    uint64_t v14 = v26 + 1;
    *((void *)a2 + 1) = v14;
LABEL_57:
    if ((unint64_t)v14 >= v13 || *v14 < 0)
    {
      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v5);
      if (!result) {
        return result;
      }
      uint64_t v37 = (unsigned char *)*((void *)a2 + 1);
      unint64_t v13 = *((void *)a2 + 2);
    }
    else
    {
      *uint64_t v5 = *v14;
      uint64_t v37 = v14 + 1;
      *((void *)a2 + 1) = v37;
    }
    *((_DWORD *)this + 19) |= 4u;
    if ((unint64_t)v37 < v13 && *v37 == 32)
    {
      unsigned int v15 = v37 + 1;
      *((void *)a2 + 1) = v15;
LABEL_65:
      unsigned int v50 = 0;
      if ((unint64_t)v15 >= v13 || *v15 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v50);
        if (!result) {
          return result;
        }
        unsigned int v39 = v50;
      }
      else
      {
        unsigned int v39 = *v15;
        *((void *)a2 + 1) = v15 + 1;
      }
      if (v39 <= 3)
      {
        *((_DWORD *)this + 19) |= 8u;
        *((_DWORD *)this + 12) = v39;
      }
      int v40 = (unsigned char *)*((void *)a2 + 1);
      unint64_t v16 = *((void *)a2 + 2);
      if ((unint64_t)v40 < v16 && *v40 == 40)
      {
        int v17 = v40 + 1;
        *((void *)a2 + 1) = v17;
LABEL_75:
        if ((unint64_t)v17 >= v16 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
          if (!result) {
            return result;
          }
          unint64_t v41 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v16 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v6 = *v17;
          unint64_t v41 = v17 + 1;
          *((void *)a2 + 1) = v41;
        }
        int v18 = *((_DWORD *)this + 19) | 0x10;
        *((_DWORD *)this + 19) = v18;
        if ((unint64_t)v41 < v16 && *v41 == 50)
        {
          *((void *)a2 + 1) = v41 + 1;
LABEL_83:
          *((_DWORD *)this + 19) = v18 | 0x20;
          uint64_t v42 = (CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures *)*((void *)this + 7);
          if (!v42) {
            operator new();
          }
          unsigned int v50 = 0;
          uint64_t v43 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v43 >= *((void *)a2 + 2) || *v43 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v50))return 0; {
          }
            }
          else
          {
            unsigned int v50 = *v43;
            *((void *)a2 + 1) = v43 + 1;
          }
          int v44 = *((_DWORD *)a2 + 14);
          int v45 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v44 + 1;
          if (v44 >= v45) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna_TreeFeatures::MergePartialFromCodedStream(v42, a2)|| !*((unsigned char *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          int v46 = *((_DWORD *)a2 + 14);
          BOOL v24 = __OFSUB__(v46, 1);
          int v47 = v46 - 1;
          if (v47 < 0 == v24) {
            *((_DWORD *)a2 + 14) = v47;
          }
          int v48 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v19 = *((void *)a2 + 2);
          if ((unint64_t)v48 < v19 && *v48 == 56)
          {
            BOOL v20 = v48 + 1;
            *((void *)a2 + 1) = v20;
LABEL_97:
            if ((unint64_t)v20 >= v19 || *v20 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v7);
              if (!result) {
                return result;
              }
              int v49 = (unsigned __int8 *)*((void *)a2 + 1);
              unint64_t v19 = *((void *)a2 + 2);
            }
            else
            {
              *int v7 = *v20;
              int v49 = (unsigned __int8 *)(v20 + 1);
              *((void *)a2 + 1) = v49;
            }
            *((_DWORD *)this + 19) |= 0x40u;
            if (v49 == (unsigned __int8 *)v19 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
            {
              *((_DWORD *)a2 + 8) = 0;
              uint64_t result = 1;
              *((unsigned char *)a2 + 36) = 1;
              return result;
            }
          }
        }
      }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(unsigned char *)(this + 76))
  {
    uint64_t v6 = *(void *)(this + 8);
    if (!v6)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      uint64_t v6 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
  }
  if (*(int *)(v5 + 24) >= 1)
  {
    uint64_t v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(*(void *)(v5 + 16) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 24));
  }
  int v8 = *(_DWORD *)(v5 + 76);
  if ((v8 & 4) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(void *)(v5 + 40), (uint64_t)a2, a4);
    int v8 = *(_DWORD *)(v5 + 76);
    if ((v8 & 8) == 0)
    {
LABEL_10:
      if ((v8 & 0x10) == 0) {
        goto LABEL_11;
      }
      goto LABEL_16;
    }
  }
  else if ((v8 & 8) == 0)
  {
    goto LABEL_10;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 48), (uint64_t)a2, a4);
  int v8 = *(_DWORD *)(v5 + 76);
  if ((v8 & 0x10) == 0)
  {
LABEL_11:
    if ((v8 & 0x20) == 0) {
      goto LABEL_12;
    }
    goto LABEL_17;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned int *)(v5 + 52), (uint64_t)a2, a4);
  int v8 = *(_DWORD *)(v5 + 76);
  if ((v8 & 0x20) == 0)
  {
LABEL_12:
    if ((v8 & 0x40) == 0) {
      return this;
    }
    goto LABEL_20;
  }
LABEL_17:
  uint64_t v9 = *(void *)(v5 + 56);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v9 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::default_instance_ + 56);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v9, a2, a4);
  if ((*(_DWORD *)(v5 + 76) & 0x40) != 0)
  {
LABEL_20:
    uint64_t v10 = *(void *)(v5 + 64);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v10, (uint64_t)a2, a4);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::ByteSize(uint64_t this)
{
  uint64_t v1 = this;
  LOBYTE(v2) = *(unsigned char *)(this + 76);
  if (!(_BYTE)v2)
  {
    int v3 = 0;
    goto LABEL_18;
  }
  if ((*(unsigned char *)(this + 76) & 1) == 0)
  {
    int v3 = 0;
    if ((*(unsigned char *)(this + 76) & 4) == 0) {
      goto LABEL_13;
    }
LABEL_12:
    this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v1 + 40));
    v3 += this + 1;
    int v2 = *(_DWORD *)(v1 + 76);
    goto LABEL_13;
  }
  uint64_t v4 = *(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox **)(this + 8);
  if (!v4)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(0);
    uint64_t v4 = *(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox **)(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::default_instance_
                                                                                                 + 8);
  }
  uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBoundingBox::ByteSize(v4);
  int v6 = (int)v5;
  if (v5 >= 0x80) {
    this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
  }
  else {
    this = 1;
  }
  int v3 = v6 + this + 1;
  int v2 = *(_DWORD *)(v1 + 76);
  if ((v2 & 4) != 0) {
    goto LABEL_12;
  }
LABEL_13:
  if ((v2 & 8) != 0)
  {
    this = *(unsigned int *)(v1 + 48);
    if ((this & 0x80000000) != 0)
    {
      int v14 = 11;
    }
    else if (this >= 0x80)
    {
      this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)this);
      int v14 = this + 1;
      int v2 = *(_DWORD *)(v1 + 76);
    }
    else
    {
      int v14 = 2;
    }
    v3 += v14;
    if ((v2 & 0x10) == 0)
    {
LABEL_15:
      if ((v2 & 0x20) == 0) {
        goto LABEL_16;
      }
      goto LABEL_35;
    }
  }
  else if ((v2 & 0x10) == 0)
  {
    goto LABEL_15;
  }
  this = *(unsigned int *)(v1 + 52);
  if (this >= 0x80)
  {
    this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)this);
    int v15 = this + 1;
    int v2 = *(_DWORD *)(v1 + 76);
  }
  else
  {
    int v15 = 2;
  }
  v3 += v15;
  if ((v2 & 0x20) == 0)
  {
LABEL_16:
    if ((v2 & 0x40) == 0) {
      goto LABEL_18;
    }
    goto LABEL_17;
  }
LABEL_35:
  uint64_t v16 = *(void *)(v1 + 56);
  if (!v16)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v16 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::default_instance_ + 56);
  }
  int v17 = 2 * (*(_DWORD *)(v16 + 16) & 1);
  if ((*(_DWORD *)(v16 + 16) & 2) != 0) {
    v17 += 2;
  }
  if (*(_DWORD *)(v16 + 16)) {
    int v18 = v17;
  }
  else {
    int v18 = 0;
  }
  *(_DWORD *)(v16 + 12) = v18;
  v3 += v18 + 2;
  if ((*(_DWORD *)(v1 + 76) & 0x40) != 0) {
LABEL_17:
  }
    v3 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(v1 + 64))
        + 1;
LABEL_18:
  int v7 = *(_DWORD *)(v1 + 24);
  uint64_t v8 = (v7 + v3);
  if (v7 >= 1)
  {
    uint64_t v9 = 0;
    do
    {
      uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch::ByteSize(*(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavannaBranch **)(*(void *)(v1 + 16) + 8 * v9));
      int v11 = (int)v10;
      if (v10 >= 0x80) {
        int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
      }
      else {
        int v12 = 1;
      }
      uint64_t v8 = (v11 + v8 + v12);
      ++v9;
    }
    while (v9 < *(int *)(v1 + 24));
  }
  *(_DWORD *)(v1 + 72) = v8;
  return v8;
}

void CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna *this, const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna *this)
{
  return 1;
}

CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna *CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::Swap(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna *this, CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna *a2)
{
  if (a2 != this)
  {
    int v3 = this;
    uint64_t v4 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v4;
    this = (CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    uint64_t v5 = *((void *)v3 + 5);
    *((void *)v3 + 5) = *((void *)a2 + 5);
    *((void *)a2 + 5) = v5;
    LODWORD(v5) = *((_DWORD *)v3 + 12);
    *((_DWORD *)v3 + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v5;
    LODWORD(v5) = *((_DWORD *)v3 + 13);
    *((_DWORD *)v3 + 13) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v5;
    uint64_t v6 = *((void *)v3 + 7);
    uint64_t v7 = *((void *)v3 + 8);
    uint64_t v8 = *((void *)a2 + 8);
    *((void *)v3 + 7) = *((void *)a2 + 7);
    *((void *)v3 + 8) = v8;
    *((void *)a2 + 7) = v6;
    *((void *)a2 + 8) = v7;
    LODWORD(v6) = *((_DWORD *)v3 + 19);
    *((_DWORD *)v3 + 19) = *((_DWORD *)a2 + 19);
    *((_DWORD *)a2 + 19) = v6;
    LODWORD(v6) = *((_DWORD *)v3 + 18);
    *((_DWORD *)v3 + 18) = *((_DWORD *)a2 + 18);
    *((_DWORD *)a2 + 18) = v6;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.GEOMapFeatureTropicalSavanna");
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(unsigned char *)(this + 40) = 0;
  *(_DWORD *)(this + 44) = 0;
  *(_DWORD *)(this + 48) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData *CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::GEOMapTropicalSavannaData(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData *this, const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData *a2)
{
  *((unsigned char *)this + 40) = 0;
  *((_DWORD *)this + 11) = 0;
  *((_DWORD *)this + 12) = 0;
  *(void *)this = &unk_1EDD0E288;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((_DWORD *)this + 8) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::MergeFrom(this, a2);
  return this;
}

void sub_18DFA1E84(_Unwind_Exception *a1)
{
  sub_18DF0C324(v1 + 2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData *this, const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
  }
  uint64_t v4 = (CoreNavigation::CLP::LogEntry::PrivateData *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData *)((char *)this + 16));
  if (*((int *)a2 + 6) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v6 = *(const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna **)(*((void *)a2 + 2)
                                                                                              + 8 * v5);
      int v7 = *((_DWORD *)this + 7);
      uint64_t v8 = *((int *)this + 6);
      if ((int)v8 >= v7)
      {
        if (v7 == *((_DWORD *)this + 8))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData *)((char *)this + 16));
          int v7 = *((_DWORD *)this + 7);
        }
        *((_DWORD *)this + 7) = v7 + 1;
        operator new();
      }
      uint64_t v9 = *((void *)this + 2);
      *((_DWORD *)this + 6) = v8 + 1;
      CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::MergeFrom(*(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna **)(v9 + 8 * v8), v6);
      ++v5;
    }
    while (v5 < *((int *)a2 + 6));
  }
  LOBYTE(v10) = *((unsigned char *)a2 + 48);
  if ((_BYTE)v10)
  {
    if (*((unsigned char *)a2 + 48))
    {
      *((_DWORD *)this + 12) |= 1u;
      int v11 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
      if (!v11) {
        operator new();
      }
      int v12 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)a2 + 1);
      if (!v12)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(v4);
        int v12 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::default_instance_
                                                                              + 8);
      }
      CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v11, v12);
      int v10 = *((_DWORD *)a2 + 12);
    }
    if ((v10 & 4) != 0)
    {
      char v13 = *((unsigned char *)a2 + 40);
      *((_DWORD *)this + 12) |= 4u;
      *((unsigned char *)this + 40) = v13;
    }
  }
}

void sub_18DFA20B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::~GEOMapTropicalSavannaData(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData *this)
{
  *(void *)this = &unk_1EDD0E288;
  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::SharedDtor(this);
  sub_18DF0C324((uint64_t *)this + 2);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::~GEOMapTropicalSavannaData(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData *)CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2)
    {
      int v3 = *(void (**)(void))(*(void *)v2 + 8);
      v3();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 44) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::New(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::Clear(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData *this)
{
  if (*((unsigned char *)this + 48))
  {
    if (*((unsigned char *)this + 48))
    {
      uint64_t v2 = *((void *)this + 1);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 36))
        {
          *(void *)(v2 + 8) = 0;
          *(void *)(v2 + 16) = 0;
          *(void *)(v2 + 24) = 0;
        }
        *(_DWORD *)(v2 + 36) = 0;
      }
    }
    *((unsigned char *)this + 40) = 0;
  }
  uint64_t result = sub_18DF0C208((uint64_t)this + 16);
  *((_DWORD *)this + 12) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4 = (CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData *)((char *)this + 16);
  while (1)
  {
    while (1)
    {
LABEL_2:
      uint64_t v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v5 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      unsigned int v7 = TagFallback >> 3;
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v8 = TagFallback & 7;
      if (v8 != 2) {
        goto LABEL_21;
      }
      *((_DWORD *)this + 12) |= 1u;
      int v11 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
      if (!v11) {
        operator new();
      }
      unsigned int v33 = 0;
      int v12 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v12 >= *((void *)a2 + 2) || *v12 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v33)) {
          return 0;
        }
      }
      else
      {
        unsigned int v33 = *v12;
        *((void *)a2 + 1) = v12 + 1;
      }
      int v13 = *((_DWORD *)a2 + 14);
      int v14 = *((_DWORD *)a2 + 15);
      *((_DWORD *)a2 + 14) = v13 + 1;
      if (v13 >= v14) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
      if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream(v11, a2)
        || !*((unsigned char *)a2 + 36))
      {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
      int v15 = *((_DWORD *)a2 + 14);
      BOOL v16 = __OFSUB__(v15, 1);
      int v17 = v15 - 1;
      if (v17 < 0 == v16) {
        *((_DWORD *)a2 + 14) = v17;
      }
      int v18 = (unsigned char *)*((void *)a2 + 1);
      if ((unint64_t)v18 < *((void *)a2 + 2) && *v18 == 18)
      {
        while (1)
        {
          *((void *)a2 + 1) = v18 + 1;
LABEL_33:
          int v19 = *((_DWORD *)this + 7);
          uint64_t v20 = *((int *)this + 6);
          if ((int)v20 >= v19)
          {
            if (v19 == *((_DWORD *)this + 8))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
              int v19 = *((_DWORD *)this + 7);
            }
            *((_DWORD *)this + 7) = v19 + 1;
            operator new();
          }
          uint64_t v21 = *((void *)this + 2);
          *((_DWORD *)this + 6) = v20 + 1;
          int v22 = *(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna **)(v21 + 8 * v20);
          unsigned int v34 = 0;
          int v23 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v23 >= *((void *)a2 + 2) || *v23 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v34))return 0; {
          }
            }
          else
          {
            unsigned int v34 = *v23;
            *((void *)a2 + 1) = v23 + 1;
          }
          int v24 = *((_DWORD *)a2 + 14);
          int v25 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v24 + 1;
          if (v24 >= v25) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::MergePartialFromCodedStream(v22, a2)|| !*((unsigned char *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          int v26 = *((_DWORD *)a2 + 14);
          BOOL v16 = __OFSUB__(v26, 1);
          int v27 = v26 - 1;
          if (v27 < 0 == v16) {
            *((_DWORD *)a2 + 14) = v27;
          }
          int v18 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
          if ((unint64_t)v18 >= v9) {
            break;
          }
          int v28 = *v18;
          if (v28 != 18)
          {
            if (v28 == 24)
            {
              int v10 = v18 + 1;
              *((void *)a2 + 1) = v10;
LABEL_51:
              unsigned int v32 = 0;
              if ((unint64_t)v10 >= v9 || *v10 < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v32);
                if (!result) {
                  return result;
                }
                unsigned int v29 = v32;
                int v30 = (unsigned __int8 *)*((void *)a2 + 1);
                unint64_t v9 = *((void *)a2 + 2);
              }
              else
              {
                unsigned int v29 = *v10;
                int v30 = (unsigned __int8 *)(v10 + 1);
                *((void *)a2 + 1) = v30;
              }
              *((unsigned char *)this + 40) = v29 != 0;
              *((_DWORD *)this + 12) |= 4u;
              if (v30 == (unsigned __int8 *)v9 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
              {
                *((_DWORD *)a2 + 8) = 0;
                uint64_t result = 1;
                *((unsigned char *)a2 + 36) = 1;
                return result;
              }
            }
            goto LABEL_2;
          }
        }
      }
    }
    if (v7 == 2)
    {
      int v8 = TagFallback & 7;
      if (v8 != 2) {
        goto LABEL_21;
      }
      goto LABEL_33;
    }
    if (v7 == 3)
    {
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v10 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        goto LABEL_51;
      }
    }
    else
    {
      int v8 = TagFallback & 7;
    }
LABEL_21:
    if (v8 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(unsigned char *)(this + 48))
  {
    uint64_t v6 = *(void *)(this + 8);
    if (!v6)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      uint64_t v6 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
  }
  if (*(int *)(v5 + 24) >= 1)
  {
    uint64_t v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(*(void *)(v5 + 16) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 24));
  }
  if ((*(unsigned char *)(v5 + 48) & 4) != 0)
  {
    uint64_t v8 = *(unsigned __int8 *)(v5 + 40);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, (uint64_t)a2, a4);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData *this)
{
  int v2 = *((unsigned __int8 *)this + 48);
  if (*((unsigned char *)this + 48))
  {
    if (v2)
    {
      uint64_t v4 = *((void *)this + 1);
      if (!v4)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
        uint64_t v4 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::default_instance_ + 8);
      }
      int v5 = *(unsigned __int8 *)(v4 + 36);
      if (*(unsigned char *)(v4 + 36))
      {
        int v6 = (v5 << 31 >> 31) & 9;
        if ((v5 & 2) != 0) {
          v6 += 9;
        }
        if ((v5 & 4) != 0) {
          int v5 = v6 + 9;
        }
        else {
          int v5 = v6;
        }
      }
      *(_DWORD *)(v4 + 32) = v5;
      int v3 = v5 + 2;
      int v2 = *((_DWORD *)this + 12);
    }
    else
    {
      int v3 = 0;
    }
    if ((v2 & 4) != 0) {
      int v2 = v3 + 2;
    }
    else {
      int v2 = v3;
    }
  }
  int v7 = *((_DWORD *)this + 6);
  uint64_t v8 = (v7 + v2);
  if (v7 >= 1)
  {
    uint64_t v9 = 0;
    do
    {
      int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::GEOMapFeatureTropicalSavanna::ByteSize(*(void *)(*((void *)this + 2) + 8 * v9));
      int v11 = (int)v10;
      if (v10 >= 0x80) {
        int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
      }
      else {
        int v12 = 1;
      }
      uint64_t v8 = (v11 + v8 + v12);
      ++v9;
    }
    while (v9 < *((int *)this + 6));
  }
  *((_DWORD *)this + 11) = v8;
  return v8;
}

void CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData *this, const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData *this)
{
  return 1;
}

CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData *CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::Swap(CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData *this, CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData *a2)
{
  if (a2 != this)
  {
    int v3 = this;
    uint64_t v4 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v4;
    this = (CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    char v5 = *((unsigned char *)v3 + 40);
    *((unsigned char *)v3 + 40) = *((unsigned char *)a2 + 40);
    *((unsigned char *)a2 + 40) = v5;
    int v6 = *((_DWORD *)v3 + 12);
    *((_DWORD *)v3 + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v6;
    int v7 = *((_DWORD *)v3 + 11);
    *((_DWORD *)v3 + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v7;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.GEOMapTropicalSavannaData");
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation_WatchOrientationType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 4;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation *CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation::WatchOrientation(CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation *this, const CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation *a2)
{
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)this = &unk_1EDD0C938;
  CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation::MergeFrom(this, a2);
  return this;
}

void sub_18DFA2A88(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation *this, const CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 20);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 20))
    {
      unsigned int v5 = *((_DWORD *)a2 + 2);
      if (v5 >= 4) {
        __assert_rtn("set_wrist_orientation", "CoreNavigationCLPPrivateDataShared.pb.h", 26731, "::CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation_WatchOrientationType_IsValid(value)");
      }
      *((_DWORD *)this + 5) |= 1u;
      *((_DWORD *)this + 2) = v5;
      int v4 = *((_DWORD *)a2 + 5);
    }
    if ((v4 & 2) != 0)
    {
      unsigned int v6 = *((_DWORD *)a2 + 3);
      if (v6 >= 4) {
        __assert_rtn("set_crown_orientation", "CoreNavigationCLPPrivateDataShared.pb.h", 26754, "::CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation_WatchOrientationType_IsValid(value)");
      }
      *((_DWORD *)this + 5) |= 2u;
      *((_DWORD *)this + 3) = v6;
    }
  }
}

void sub_18DFA2B98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation::~WatchOrientation(CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation *this)
{
  *(void *)this = &unk_1EDD0C938;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation::~WatchOrientation(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 16) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation::New(CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 20)) {
    *(void *)(this + 8) = 0;
  }
  *(_DWORD *)(this + 20) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (1)
  {
    while (1)
    {
      int v4 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v4;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v4 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v6 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_15;
      }
      unsigned int v15 = 0;
      uint64_t v9 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v9 >= *((void *)a2 + 2) || *v9 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v15);
        if (!result) {
          return result;
        }
        unsigned int v10 = v15;
      }
      else
      {
        unsigned int v10 = *v9;
        *((void *)a2 + 1) = v9 + 1;
      }
      if (v10 <= 3)
      {
        *((_DWORD *)this + 5) |= 1u;
        *((_DWORD *)this + 2) = v10;
      }
      int v11 = (unsigned char *)*((void *)a2 + 1);
      unint64_t v7 = *((void *)a2 + 2);
      if ((unint64_t)v11 < v7 && *v11 == 16)
      {
        uint64_t v8 = v11 + 1;
        *((void *)a2 + 1) = v8;
LABEL_25:
        unsigned int v14 = 0;
        if ((unint64_t)v8 >= v7 || *v8 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v14);
          if (!result) {
            return result;
          }
          unsigned int v12 = v14;
        }
        else
        {
          unsigned int v12 = *v8;
          *((void *)a2 + 1) = v8 + 1;
        }
        if (v12 <= 3)
        {
          *((_DWORD *)this + 5) |= 2u;
          *((_DWORD *)this + 3) = v12;
        }
        if (*((void *)a2 + 1) == *((void *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v6 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        uint64_t v8 = (char *)*((void *)a2 + 1);
        unint64_t v7 = *((void *)a2 + 2);
        goto LABEL_25;
      }
    }
    else
    {
      int v6 = TagFallback & 7;
    }
LABEL_15:
    if (v6 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 20);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
  {
    uint64_t v7 = *(unsigned int *)(v5 + 12);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, (uint64_t)a2, a4);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation *this)
{
  char v2 = *((unsigned char *)this + 20);
  if (v2)
  {
    if (*((unsigned char *)this + 20))
    {
      int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
      if ((v4 & 0x80000000) != 0)
      {
        uint64_t v3 = 11;
        if ((v2 & 2) == 0) {
          goto LABEL_19;
        }
      }
      else if (v4 >= 0x80)
      {
        uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
        if ((*((_DWORD *)this + 5) & 2) == 0) {
          goto LABEL_19;
        }
      }
      else
      {
        uint64_t v3 = 2;
        if ((v2 & 2) == 0) {
          goto LABEL_19;
        }
      }
    }
    else
    {
      uint64_t v3 = 0;
      if ((*((unsigned char *)this + 20) & 2) == 0) {
        goto LABEL_19;
      }
    }
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
    if ((v5 & 0x80000000) != 0)
    {
      int v6 = 11;
    }
    else if (v5 >= 0x80)
    {
      int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    }
    else
    {
      int v6 = 2;
    }
    uint64_t v3 = (v6 + v3);
  }
  else
  {
    uint64_t v3 = 0;
  }
LABEL_19:
  *((_DWORD *)this + 4) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation *this, const CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation *this)
{
  return 1;
}

CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation *CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation::Swap(CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation *this, CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation *a2)
{
  if (a2 != this)
  {
    int v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    int v3 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    int v4 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v4;
    int v5 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v5;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.WatchOrientation");
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::WristState_WristStateType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 4;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::WristState_WristStateConfidenceType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 4;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::WristState::SharedCtor(void *this)
{
  this[4] = 0;
  this[1] = 0;
  this[2] = 0;
  *(void *)((char *)this + 23) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::PrivateData::WristState *CoreNavigation::CLP::LogEntry::PrivateData::WristState::WristState(CoreNavigation::CLP::LogEntry::PrivateData::WristState *this, const CoreNavigation::CLP::LogEntry::PrivateData::WristState *a2)
{
  *((void *)this + 4) = 0;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)this = &unk_1EDD0B510;
  *(void *)((char *)this + 23) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::WristState::MergeFrom(this, a2);
  return this;
}

void sub_18DFA31BC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WristState::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::WristState *this, const CoreNavigation::CLP::LogEntry::PrivateData::WristState *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v13);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 36);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 36))
    {
      *((_DWORD *)this + 9) |= 1u;
      int v5 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
      if (!v5) {
        operator new();
      }
      int v6 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)a2 + 1);
      if (!v6)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
        int v6 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::WristState::default_instance_
                                                                             + 8);
      }
      CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v5, v6);
      int v4 = *((_DWORD *)a2 + 9);
    }
    if ((v4 & 2) != 0)
    {
      unsigned int v7 = *((_DWORD *)a2 + 4);
      if (v7 >= 4) {
        __assert_rtn("set_on_wrist", "CoreNavigationCLPPrivateDataShared.pb.h", 26823, "::CoreNavigation::CLP::LogEntry::PrivateData::WristState_WristStateType_IsValid(value)");
      }
      *((_DWORD *)this + 9) |= 2u;
      *((_DWORD *)this + 4) = v7;
      int v4 = *((_DWORD *)a2 + 9);
    }
    if ((v4 & 4) != 0)
    {
      unsigned int v8 = *((_DWORD *)a2 + 5);
      if (v8 >= 4) {
        __assert_rtn("set_on_wrist_sensor", "CoreNavigationCLPPrivateDataShared.pb.h", 26846, "::CoreNavigation::CLP::LogEntry::PrivateData::WristState_WristStateType_IsValid(value)");
      }
      *((_DWORD *)this + 9) |= 4u;
      *((_DWORD *)this + 5) = v8;
      int v4 = *((_DWORD *)a2 + 9);
    }
    if ((v4 & 8) != 0)
    {
      unsigned int v9 = *((_DWORD *)a2 + 6);
      if (v9 >= 4) {
        __assert_rtn("set_on_wrist_confidence", "CoreNavigationCLPPrivateDataShared.pb.h", 26869, "::CoreNavigation::CLP::LogEntry::PrivateData::WristState_WristStateConfidenceType_IsValid(value)");
      }
      *((_DWORD *)this + 9) |= 8u;
      *((_DWORD *)this + 6) = v9;
      int v4 = *((_DWORD *)a2 + 9);
    }
    if ((v4 & 0x10) != 0)
    {
      char v11 = *((unsigned char *)a2 + 28);
      *((_DWORD *)this + 9) |= 0x10u;
      *((unsigned char *)this + 28) = v11;
      int v4 = *((_DWORD *)a2 + 9);
      if ((v4 & 0x20) == 0)
      {
LABEL_21:
        if ((v4 & 0x40) == 0) {
          return;
        }
        goto LABEL_22;
      }
    }
    else if ((v4 & 0x20) == 0)
    {
      goto LABEL_21;
    }
    char v12 = *((unsigned char *)a2 + 29);
    *((_DWORD *)this + 9) |= 0x20u;
    *((unsigned char *)this + 29) = v12;
    if ((*((_DWORD *)a2 + 9) & 0x40) != 0)
    {
LABEL_22:
      char v10 = *((unsigned char *)a2 + 30);
      *((_DWORD *)this + 9) |= 0x40u;
      *((unsigned char *)this + 30) = v10;
    }
  }
}

void sub_18DFA33FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WristState::~WristState(CoreNavigation::CLP::LogEntry::PrivateData::WristState *this)
{
  *(void *)this = &unk_1EDD0B510;
  CoreNavigation::CLP::LogEntry::PrivateData::WristState::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::WristState::~WristState(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WristState::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::WristState *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::WristState *)CoreNavigation::CLP::LogEntry::PrivateData::WristState::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2)
    {
      int v3 = *(void (**)(void))(*(void *)v2 + 8);
      v3();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WristState::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::WristState *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::WristState::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WristState::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 32) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::WristState::New(CoreNavigation::CLP::LogEntry::PrivateData::WristState *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WristState::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 36))
  {
    if (*(unsigned char *)(this + 36))
    {
      uint64_t v1 = *(void *)(this + 8);
      if (v1)
      {
        if (*(unsigned char *)(v1 + 36))
        {
          *(void *)(v1 + 8) = 0;
          *(void *)(v1 + 16) = 0;
          *(void *)(v1 + 24) = 0;
        }
        *(_DWORD *)(v1 + 36) = 0;
      }
    }
    *(void *)(this + 23) = 0;
    *(void *)(this + 16) = 0;
  }
  *(_DWORD *)(this + 36) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WristState::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::WristState *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (2)
  {
    int v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_25;
        }
        *((_DWORD *)this + 9) |= 1u;
        unsigned int v7 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
        if (!v7) {
          operator new();
        }
        unsigned int v38 = 0;
        unsigned int v8 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v38))return 0; {
        }
          }
        else
        {
          unsigned int v38 = *v8;
          *((void *)a2 + 1) = v8 + 1;
        }
        int v19 = *((_DWORD *)a2 + 14);
        int v20 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v19 + 1;
        if (v19 >= v20) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream(v7, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v21 = *((_DWORD *)a2 + 14);
        BOOL v22 = __OFSUB__(v21, 1);
        int v23 = v21 - 1;
        if (v23 < 0 == v22) {
          *((_DWORD *)a2 + 14) = v23;
        }
        int v24 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        if ((unint64_t)v24 >= v9 || *v24 != 16) {
          continue;
        }
        char v10 = v24 + 1;
        *((void *)a2 + 1) = v10;
        goto LABEL_38;
      case 2u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        char v10 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
LABEL_38:
        unsigned int v38 = 0;
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v38);
          if (!result) {
            return result;
          }
          unsigned int v25 = v38;
        }
        else
        {
          unsigned int v25 = *v10;
          *((void *)a2 + 1) = v10 + 1;
        }
        if (v25 <= 3)
        {
          *((_DWORD *)this + 9) |= 2u;
          *((_DWORD *)this + 4) = v25;
        }
        int v27 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
        if ((unint64_t)v27 >= v11 || *v27 != 24) {
          continue;
        }
        char v12 = v27 + 1;
        *((void *)a2 + 1) = v12;
LABEL_48:
        unsigned int v38 = 0;
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v38);
          if (!result) {
            return result;
          }
          unsigned int v28 = v38;
        }
        else
        {
          unsigned int v28 = *v12;
          *((void *)a2 + 1) = v12 + 1;
        }
        if (v28 <= 3)
        {
          *((_DWORD *)this + 9) |= 4u;
          *((_DWORD *)this + 5) = v28;
        }
        unsigned int v29 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        if ((unint64_t)v29 >= v13 || *v29 != 32) {
          continue;
        }
        unsigned int v14 = v29 + 1;
        *((void *)a2 + 1) = v14;
LABEL_58:
        unsigned int v38 = 0;
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v38);
          if (!result) {
            return result;
          }
          unsigned int v30 = v38;
        }
        else
        {
          unsigned int v30 = *v14;
          *((void *)a2 + 1) = v14 + 1;
        }
        if (v30 <= 3)
        {
          *((_DWORD *)this + 9) |= 8u;
          *((_DWORD *)this + 6) = v30;
        }
        int v31 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        if ((unint64_t)v31 >= v15 || *v31 != 40) {
          continue;
        }
        BOOL v16 = v31 + 1;
        *((void *)a2 + 1) = v16;
LABEL_68:
        unsigned int v38 = 0;
        if ((unint64_t)v16 >= v15 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v38);
          if (!result) {
            return result;
          }
          unsigned int v32 = v38;
          unsigned int v33 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v32 = *v16;
          unsigned int v33 = v16 + 1;
          *((void *)a2 + 1) = v33;
        }
        *((unsigned char *)this + 28) = v32 != 0;
        *((_DWORD *)this + 9) |= 0x10u;
        if ((unint64_t)v33 >= v15 || *v33 != 48) {
          continue;
        }
        int v17 = v33 + 1;
        *((void *)a2 + 1) = v17;
LABEL_76:
        unsigned int v38 = 0;
        if ((unint64_t)v17 >= v15 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v38);
          if (!result) {
            return result;
          }
          unsigned int v34 = v38;
          int v35 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v34 = *v17;
          int v35 = v17 + 1;
          *((void *)a2 + 1) = v35;
        }
        *((unsigned char *)this + 29) = v34 != 0;
        *((_DWORD *)this + 9) |= 0x20u;
        if ((unint64_t)v35 >= v15 || *v35 != 56) {
          continue;
        }
        int v18 = v35 + 1;
        *((void *)a2 + 1) = v18;
LABEL_84:
        unsigned int v38 = 0;
        if ((unint64_t)v18 >= v15 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v38);
          if (!result) {
            return result;
          }
          unsigned int v36 = v38;
          uint64_t v37 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v36 = *v18;
          uint64_t v37 = (unsigned __int8 *)(v18 + 1);
          *((void *)a2 + 1) = v37;
        }
        *((unsigned char *)this + 30) = v36 != 0;
        *((_DWORD *)this + 9) |= 0x40u;
        if (v37 != (unsigned __int8 *)v15 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10)) {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        break;
      case 3u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        char v12 = (char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
        goto LABEL_48;
      case 4u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        unsigned int v14 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_58;
      case 5u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        BOOL v16 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_68;
      case 6u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        int v17 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_76;
      case 7u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_25;
        }
        int v18 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_84;
      default:
        int v6 = TagFallback & 7;
LABEL_25:
        if (v6 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WristState::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 36);
  if (v6)
  {
    uint64_t v7 = *(void *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::WristState::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 36);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 16), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 20), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
LABEL_16:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned __int8 *)(v5 + 29), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 36) & 0x40) == 0) {
      return this;
    }
    goto LABEL_17;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned __int8 *)(v5 + 28), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 0x20) != 0) {
    goto LABEL_16;
  }
LABEL_7:
  if ((v6 & 0x40) == 0) {
    return this;
  }
LABEL_17:
  uint64_t v8 = *(unsigned __int8 *)(v5 + 30);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v8, (uint64_t)a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WristState::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::WristState *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 36);
  if (!(_BYTE)v2)
  {
    uint64_t result = 0;
    goto LABEL_43;
  }
  if ((*((unsigned char *)this + 36) & 1) == 0)
  {
    int v3 = 0;
    if ((*((unsigned char *)this + 36) & 2) == 0) {
      goto LABEL_21;
    }
    goto LABEL_15;
  }
  uint64_t v5 = *((void *)this + 1);
  if (!v5)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    uint64_t v5 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::WristState::default_instance_ + 8);
  }
  int v6 = *(unsigned __int8 *)(v5 + 36);
  if (*(unsigned char *)(v5 + 36))
  {
    int v7 = (v6 << 31 >> 31) & 9;
    if ((v6 & 2) != 0) {
      v7 += 9;
    }
    if ((v6 & 4) != 0) {
      int v6 = v7 + 9;
    }
    else {
      int v6 = v7;
    }
  }
  *(_DWORD *)(v5 + 32) = v6;
  int v3 = v6 + 2;
  int v2 = *((_DWORD *)this + 9);
  if ((v2 & 2) != 0)
  {
LABEL_15:
    uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if ((v8 & 0x80000000) != 0)
    {
      int v9 = 11;
    }
    else if (v8 >= 0x80)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8) + 1;
      int v2 = *((_DWORD *)this + 9);
    }
    else
    {
      int v9 = 2;
    }
    v3 += v9;
  }
LABEL_21:
  if ((v2 & 4) != 0)
  {
    char v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
    if ((v10 & 0x80000000) != 0)
    {
      int v11 = 11;
    }
    else if (v10 >= 0x80)
    {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10) + 1;
      int v2 = *((_DWORD *)this + 9);
    }
    else
    {
      int v11 = 2;
    }
    v3 += v11;
    if ((v2 & 8) == 0) {
      goto LABEL_36;
    }
    goto LABEL_30;
  }
  if ((v2 & 8) != 0)
  {
LABEL_30:
    char v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    if ((v12 & 0x80000000) != 0)
    {
      int v13 = 11;
    }
    else if (v12 >= 0x80)
    {
      int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12) + 1;
      int v2 = *((_DWORD *)this + 9);
    }
    else
    {
      int v13 = 2;
    }
    v3 += v13;
  }
LABEL_36:
  unsigned int v14 = v3 + 2;
  if ((v2 & 0x10) == 0) {
    unsigned int v14 = v3;
  }
  if ((v2 & 0x20) != 0) {
    v14 += 2;
  }
  if ((v2 & 0x40) != 0) {
    uint64_t result = v14 + 2;
  }
  else {
    uint64_t result = v14;
  }
LABEL_43:
  *((_DWORD *)this + 8) = result;
  return result;
}

void CoreNavigation::CLP::LogEntry::PrivateData::WristState::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::WristState *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::WristState::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WristState::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::WristState *this, const CoreNavigation::CLP::LogEntry::PrivateData::WristState *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::WristState *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::WristState::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WristState::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::WristState *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WristState::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::WristState *a2)
{
  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::WristState *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    LOBYTE(v2) = *(unsigned char *)(this + 28);
    *(unsigned char *)(this + 28) = *((unsigned char *)a2 + 28);
    *((unsigned char *)a2 + 28) = v2;
    LOBYTE(v2) = *(unsigned char *)(this + 29);
    *(unsigned char *)(this + 29) = *((unsigned char *)a2 + 29);
    *((unsigned char *)a2 + 29) = v2;
    LOBYTE(v2) = *(unsigned char *)(this + 30);
    *(unsigned char *)(this + 30) = *((unsigned char *)a2 + 30);
    *((unsigned char *)a2 + 30) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::WristState::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.WristState");
}

double CoreNavigation::CLP::LogEntry::PrivateData::WatchState::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::WatchState *this)
{
  *((_DWORD *)this + 10) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::WatchState *CoreNavigation::CLP::LogEntry::PrivateData::WatchState::WatchState(CoreNavigation::CLP::LogEntry::PrivateData::WatchState *this, const CoreNavigation::CLP::LogEntry::PrivateData::WatchState *a2)
{
  *(void *)this = &unk_1EDD0B498;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::WatchState::MergeFrom(this, a2);
  return this;
}

void sub_18DFA3FBC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WatchState::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::WatchState *this, const CoreNavigation::CLP::LogEntry::PrivateData::WatchState *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 40);
  if (!(_BYTE)v4) {
    return;
  }
  if ((*((unsigned char *)a2 + 40) & 1) == 0)
  {
    if ((*((unsigned char *)a2 + 40) & 2) == 0) {
      goto LABEL_6;
    }
LABEL_14:
    int v7 = *((_DWORD *)a2 + 8);
    *((_DWORD *)this + 10) |= 2u;
    *((_DWORD *)this + 8) = v7;
    int v4 = *((_DWORD *)a2 + 10);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        return;
      }
      goto LABEL_20;
    }
    goto LABEL_15;
  }
  *((_DWORD *)this + 10) |= 1u;
  uint64_t v5 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
  if (!v5) {
    operator new();
  }
  int v6 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)a2 + 1);
  if (!v6)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    int v6 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::WatchState::default_instance_
                                                                         + 8);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v5, v6);
  int v4 = *((_DWORD *)a2 + 10);
  if ((v4 & 2) != 0) {
    goto LABEL_14;
  }
LABEL_6:
  if ((v4 & 4) == 0) {
    goto LABEL_7;
  }
LABEL_15:
  *((_DWORD *)this + 10) |= 4u;
  uint64_t v8 = (CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation *)*((void *)this + 2);
  if (!v8) {
    operator new();
  }
  int v9 = (const CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation *)*((void *)a2 + 2);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    int v9 = *(const CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation **)(CoreNavigation::CLP::LogEntry::PrivateData::WatchState::default_instance_
                                                                                + 16);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation::MergeFrom(v8, v9);
  if ((*((_DWORD *)a2 + 10) & 8) != 0)
  {
LABEL_20:
    *((_DWORD *)this + 10) |= 8u;
    char v10 = (CoreNavigation::CLP::LogEntry::PrivateData::WristState *)*((void *)this + 3);
    if (!v10) {
      operator new();
    }
    int v11 = (const CoreNavigation::CLP::LogEntry::PrivateData::WristState *)*((void *)a2 + 3);
    if (!v11)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      int v11 = *(const CoreNavigation::CLP::LogEntry::PrivateData::WristState **)(CoreNavigation::CLP::LogEntry::PrivateData::WatchState::default_instance_
                                                                             + 24);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::WristState::MergeFrom(v10, v11);
  }
}

void sub_18DFA41FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WatchState::~WatchState(CoreNavigation::CLP::LogEntry::PrivateData::WatchState *this)
{
  *(void *)this = &unk_1EDD0B498;
  CoreNavigation::CLP::LogEntry::PrivateData::WatchState::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::WatchState::~WatchState(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WatchState::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::WatchState *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::WatchState *)CoreNavigation::CLP::LogEntry::PrivateData::WatchState::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 2);
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = *((void *)this + 3);
    if (v4)
    {
      uint64_t v5 = *(void (**)(void))(*(void *)v4 + 8);
      v5();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WatchState::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::WatchState *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::WatchState::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WatchState::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 36) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::WatchState::New(CoreNavigation::CLP::LogEntry::PrivateData::WatchState *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WatchState::Clear(uint64_t this)
{
  uint64_t v1 = this;
  LOBYTE(v2) = *(unsigned char *)(this + 40);
  if ((_BYTE)v2)
  {
    if (*(unsigned char *)(this + 40))
    {
      uint64_t v3 = *(void *)(this + 8);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
          *(void *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        int v2 = *(_DWORD *)(this + 40);
      }
    }
    *(_DWORD *)(this + 32) = 0;
    if ((v2 & 4) != 0)
    {
      uint64_t v4 = *(void *)(this + 16);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 20)) {
          *(void *)(v4 + 8) = 0;
        }
        *(_DWORD *)(v4 + 20) = 0;
        int v2 = *(_DWORD *)(this + 40);
      }
    }
    if ((v2 & 8) != 0)
    {
      this = *(void *)(this + 24);
      if (this) {
        this = CoreNavigation::CLP::LogEntry::PrivateData::WristState::Clear(this);
      }
    }
  }
  *(_DWORD *)(v1 + 40) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WatchState::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::WatchState *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (1)
  {
    uint64_t v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 < *((void *)a2 + 2) && (*v4 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_6;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_6:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_19;
        }
        *((_DWORD *)this + 10) |= 1u;
        int v7 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
        if (!v7) {
          operator new();
        }
        unsigned int v34 = 0;
        uint64_t v8 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v34))return 0; {
        }
          }
        else
        {
          unsigned int v34 = *v8;
          *((void *)a2 + 1) = v8 + 1;
        }
        int v12 = *((_DWORD *)a2 + 14);
        int v13 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v12 + 1;
        if (v12 >= v13) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream(v7, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v14 = *((_DWORD *)a2 + 14);
        BOOL v15 = __OFSUB__(v14, 1);
        int v16 = v14 - 1;
        if (v16 < 0 == v15) {
          *((_DWORD *)a2 + 14) = v16;
        }
        int v17 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        if ((unint64_t)v17 >= v9 || *v17 != 16) {
          continue;
        }
        char v10 = v17 + 1;
        *((void *)a2 + 1) = v10;
        goto LABEL_31;
      case 2u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_19;
        }
        char v10 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
LABEL_31:
        unsigned int v34 = 0;
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v34);
          if (!result) {
            return result;
          }
          unsigned int v18 = v34;
          int v19 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v18 = *v10;
          int v19 = v10 + 1;
          *((void *)a2 + 1) = v19;
        }
        *((_DWORD *)this + 8) = v18;
        int v11 = *((_DWORD *)this + 10) | 2;
        *((_DWORD *)this + 10) = v11;
        if ((unint64_t)v19 >= v9 || *v19 != 26) {
          continue;
        }
        *((void *)a2 + 1) = v19 + 1;
LABEL_39:
        *((_DWORD *)this + 10) = v11 | 4;
        int v21 = (CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation *)*((void *)this + 2);
        if (!v21) {
          operator new();
        }
        unsigned int v34 = 0;
        BOOL v22 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v22 >= *((void *)a2 + 2) || *v22 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v34))return 0; {
        }
          }
        else
        {
          unsigned int v34 = *v22;
          *((void *)a2 + 1) = v22 + 1;
        }
        int v23 = *((_DWORD *)a2 + 14);
        int v24 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v23 + 1;
        if (v23 >= v24) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation::MergePartialFromCodedStream(v21, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v25 = *((_DWORD *)a2 + 14);
        BOOL v15 = __OFSUB__(v25, 1);
        int v26 = v25 - 1;
        if (v26 < 0 == v15) {
          *((_DWORD *)a2 + 14) = v26;
        }
        int v27 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v27 >= *((void *)a2 + 2) || *v27 != 34) {
          continue;
        }
        *((void *)a2 + 1) = v27 + 1;
LABEL_53:
        *((_DWORD *)this + 10) |= 8u;
        unsigned int v28 = (CoreNavigation::CLP::LogEntry::PrivateData::WristState *)*((void *)this + 3);
        if (!v28) {
          operator new();
        }
        unsigned int v34 = 0;
        unsigned int v29 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v29 >= *((void *)a2 + 2) || *v29 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v34))return 0; {
        }
          }
        else
        {
          unsigned int v34 = *v29;
          *((void *)a2 + 1) = v29 + 1;
        }
        int v30 = *((_DWORD *)a2 + 14);
        int v31 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v30 + 1;
        if (v30 >= v31) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::WristState::MergePartialFromCodedStream(v28, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v32 = *((_DWORD *)a2 + 14);
        BOOL v15 = __OFSUB__(v32, 1);
        int v33 = v32 - 1;
        if (v33 < 0 == v15) {
          *((_DWORD *)a2 + 14) = v33;
        }
        if (*((void *)a2 + 1) == *((void *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
        break;
      case 3u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_19;
        }
        int v11 = *((_DWORD *)this + 10);
        goto LABEL_39;
      case 4u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_19;
        }
        goto LABEL_53;
      default:
        int v6 = TagFallback & 7;
LABEL_19:
        if (v6 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WatchState::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 40);
  if (v6)
  {
    uint64_t v7 = *(void *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::WatchState::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 40);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 32), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      return this;
    }
    goto LABEL_13;
  }
LABEL_10:
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v8 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::WatchState::default_instance_ + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
  if ((*(_DWORD *)(v5 + 40) & 8) != 0)
  {
LABEL_13:
    uint64_t v9 = *(void *)(v5 + 24);
    if (!v9)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      uint64_t v9 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::WatchState::default_instance_ + 24);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v9, a2, a4);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WatchState::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::WatchState *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 40);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_36;
  }
  if ((*((unsigned char *)this + 40) & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((*((unsigned char *)this + 40) & 2) == 0) {
      goto LABEL_21;
    }
    goto LABEL_15;
  }
  uint64_t v4 = *((void *)this + 1);
  if (!v4)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    uint64_t v4 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::WatchState::default_instance_ + 8);
  }
  int v5 = *(unsigned __int8 *)(v4 + 36);
  if (*(unsigned char *)(v4 + 36))
  {
    int v6 = (v5 << 31 >> 31) & 9;
    if ((v5 & 2) != 0) {
      v6 += 9;
    }
    if ((v5 & 4) != 0) {
      int v5 = v6 + 9;
    }
    else {
      int v5 = v6;
    }
  }
  *(_DWORD *)(v4 + 32) = v5;
  uint64_t v3 = (v5 + 2);
  int v2 = *((_DWORD *)this + 10);
  if ((v2 & 2) != 0)
  {
LABEL_15:
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    if ((v7 & 0x80000000) != 0)
    {
      int v8 = 11;
    }
    else if (v7 >= 0x80)
    {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7) + 1;
      int v2 = *((_DWORD *)this + 10);
    }
    else
    {
      int v8 = 2;
    }
    uint64_t v3 = (v8 + v3);
  }
LABEL_21:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_36;
    }
    goto LABEL_30;
  }
  uint64_t v9 = (CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation *)*((void *)this + 2);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(0);
    uint64_t v9 = *(CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation **)(CoreNavigation::CLP::LogEntry::PrivateData::WatchState::default_instance_
                                                                          + 16);
  }
  char v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::WatchOrientation::ByteSize(v9);
  int v11 = (int)v10;
  if (v10 >= 0x80) {
    int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
  }
  else {
    int v12 = 1;
  }
  uint64_t v3 = (v3 + v11 + v12 + 1);
  if ((*((_DWORD *)this + 10) & 8) != 0)
  {
LABEL_30:
    int v13 = (CoreNavigation::CLP::LogEntry::PrivateData::WristState *)*((void *)this + 3);
    if (!v13)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(0);
      int v13 = *(CoreNavigation::CLP::LogEntry::PrivateData::WristState **)(CoreNavigation::CLP::LogEntry::PrivateData::WatchState::default_instance_
                                                                       + 24);
    }
    int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::WristState::ByteSize(v13);
    int v15 = (int)v14;
    if (v14 >= 0x80) {
      int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14);
    }
    else {
      int v16 = 1;
    }
    uint64_t v3 = (v3 + v15 + v16 + 1);
  }
LABEL_36:
  *((_DWORD *)this + 9) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::PrivateData::WatchState::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::WatchState *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::WatchState::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::WatchState::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::WatchState *this, const CoreNavigation::CLP::LogEntry::PrivateData::WatchState *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::WatchState *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::WatchState::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WatchState::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::WatchState *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::WatchState::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::WatchState *a2)
{
  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::WatchState *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
    uint64_t v3 = *(void *)(this + 16);
    *(void *)(this + 16) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    uint64_t v4 = *(void *)(this + 24);
    *(void *)(this + 24) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v4;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::WatchState::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.WatchState");
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference_UserSpecificPlaceType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 5;
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference_PlaceInferencePlaceType_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 3;
}

double CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference *this)
{
  double result = 0.0;
  *((void *)this + 1) = 0;
  uint64_t v2 = MEMORY[0x1E4FBA920];
  *((void *)this + 2) = MEMORY[0x1E4FBA920];
  *((void *)this + 3) = v2;
  *((void *)this + 4) = 0;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference *CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference::PlaceInference(CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference *this, const CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference *a2)
{
  *(void *)this = &unk_1EDD0BFD8;
  *((void *)this + 1) = 0;
  uint64_t v3 = MEMORY[0x1E4FBA920];
  *((void *)this + 2) = MEMORY[0x1E4FBA920];
  *((void *)this + 3) = v3;
  *((void *)this + 4) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference::MergeFrom(this, a2);
  return this;
}

void sub_18DFA4DEC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference *this, const CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 36);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 36))
    {
      unsigned int v5 = *((_DWORD *)a2 + 2);
      if (v5 >= 5) {
        __assert_rtn("set_user_specific_place_type", "CoreNavigationCLPPrivateDataShared.pb.h", 27114, "::CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference_UserSpecificPlaceType_IsValid(value)");
      }
      *((_DWORD *)this + 9) |= 1u;
      *((_DWORD *)this + 2) = v5;
      int v4 = *((_DWORD *)a2 + 9);
    }
    if ((v4 & 2) != 0)
    {
      unsigned int v6 = *((_DWORD *)a2 + 3);
      if (v6 >= 3) {
        __assert_rtn("set_place_type", "CoreNavigationCLPPrivateDataShared.pb.h", 27137, "::CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference_PlaceInferencePlaceType_IsValid(value)");
      }
      *((_DWORD *)this + 9) |= 2u;
      *((_DWORD *)this + 3) = v6;
      int v4 = *((_DWORD *)a2 + 9);
    }
    uint64_t v7 = (std::string *)MEMORY[0x1E4FBA920];
    if ((v4 & 4) != 0)
    {
      int v8 = (const std::string *)*((void *)a2 + 2);
      *((_DWORD *)this + 9) |= 4u;
      uint64_t v9 = (std::string *)*((void *)this + 2);
      if (v9 == v7) {
        operator new();
      }
      std::string::operator=(v9, v8);
      int v4 = *((_DWORD *)a2 + 9);
    }
    if ((v4 & 8) != 0)
    {
      char v10 = (const std::string *)*((void *)a2 + 3);
      *((_DWORD *)this + 9) |= 8u;
      int v11 = (std::string *)*((void *)this + 3);
      if (v11 == v7) {
        operator new();
      }
      std::string::operator=(v11, v10);
    }
  }
}

void sub_18DFA4FAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference::~PlaceInference(CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference *this)
{
  *(void *)this = &unk_1EDD0BFD8;
  CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference::~PlaceInference(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference *this)
{
  uint64_t v1 = this;
  uint64_t v2 = *((void *)this + 2);
  uint64_t v3 = MEMORY[0x1E4FBA920];
  if (v2 != MEMORY[0x1E4FBA920] && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    this = (CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference *)MEMORY[0x192FA6240](v2, 0x1012C40EC159624);
  }
  uint64_t v5 = *((void *)v1 + 3);
  if (v5 != v3 && v5 != 0)
  {
    if (*(char *)(v5 + 23) < 0) {
      operator delete(*(void **)v5);
    }
    this = (CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference *)MEMORY[0x192FA6240](v5, 0x1012C40EC159624);
  }

  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 32) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference::New(CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference::Clear(uint64_t this)
{
  char v1 = *(unsigned char *)(this + 36);
  if (v1)
  {
    *(void *)(this + 8) = 0;
    uint64_t v2 = MEMORY[0x1E4FBA920];
    if ((v1 & 4) != 0)
    {
      uint64_t v3 = *(void *)(this + 16);
      if (v3 != MEMORY[0x1E4FBA920])
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(unsigned char **)uint64_t v3 = 0;
          *(void *)(v3 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v3 = 0;
          *(unsigned char *)(v3 + 23) = 0;
        }
      }
    }
    if ((*(unsigned char *)(this + 36) & 8) != 0)
    {
      uint64_t v4 = *(void *)(this + 24);
      if (v4 != v2)
      {
        if (*(char *)(v4 + 23) < 0)
        {
          **(unsigned char **)uint64_t v4 = 0;
          *(void *)(v4 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v4 = 0;
          *(unsigned char *)(v4 + 23) = 0;
        }
      }
    }
  }
  *(_DWORD *)(this + 36) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4 = MEMORY[0x1E4FBA920];
  while (2)
  {
    uint64_t v5 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        unsigned int v18 = 0;
        int v8 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v8 < *((void *)a2 + 2) && (*v8 & 0x80000000) == 0)
        {
          unsigned int v9 = *v8;
          *((void *)a2 + 1) = v8 + 1;
          goto LABEL_23;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v18);
        if (result)
        {
          unsigned int v9 = v18;
LABEL_23:
          if (v9 <= 4)
          {
            *((_DWORD *)this + 9) |= 1u;
            *((_DWORD *)this + 2) = v9;
          }
          int v12 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v10 = *((void *)a2 + 2);
          if ((unint64_t)v12 < v10 && *v12 == 16)
          {
            int v11 = v12 + 1;
            *((void *)a2 + 1) = v11;
            goto LABEL_28;
          }
          continue;
        }
        break;
      case 2u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        int v11 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
LABEL_28:
        unsigned int v17 = 0;
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v17);
          if (!result) {
            return result;
          }
          unsigned int v13 = v17;
        }
        else
        {
          unsigned int v13 = *v11;
          *((void *)a2 + 1) = v11 + 1;
        }
        if (v13 <= 2)
        {
          *((_DWORD *)this + 9) |= 2u;
          *((_DWORD *)this + 3) = v13;
        }
        int v14 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v14 >= *((void *)a2 + 2) || *v14 != 26) {
          continue;
        }
        *((void *)a2 + 1) = v14 + 1;
LABEL_38:
        *((_DWORD *)this + 9) |= 4u;
        if (*((void *)this + 2) == v4) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        int v15 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v15 >= *((void *)a2 + 2) || *v15 != 34) {
          continue;
        }
        *((void *)a2 + 1) = v15 + 1;
LABEL_44:
        *((_DWORD *)this + 9) |= 8u;
        if (*((void *)this + 3) == v4) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        if (*((void *)a2 + 1) != *((void *)a2 + 2)
          || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
        {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_38;
        }
        goto LABEL_18;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_18;
        }
        goto LABEL_44;
      default:
        int v7 = TagFallback & 7;
LABEL_18:
        if (v7 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 36);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 36);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
      if ((*(_DWORD *)(v5 + 36) & 8) == 0) {
        return this;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 12), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return this;
  }
LABEL_9:

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 36);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_40;
  }
  if (*((unsigned char *)this + 36))
  {
    uint64_t v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
    if ((v4 & 0x80000000) != 0)
    {
      uint64_t v3 = 11;
      if ((v2 & 2) == 0) {
        goto LABEL_19;
      }
    }
    else if (v4 >= 0x80)
    {
      uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      int v2 = *((_DWORD *)this + 9);
      if ((v2 & 2) == 0) {
        goto LABEL_19;
      }
    }
    else
    {
      uint64_t v3 = 2;
      if ((v2 & 2) == 0) {
        goto LABEL_19;
      }
    }
  }
  else
  {
    uint64_t v3 = 0;
    if ((*((unsigned char *)this + 36) & 2) == 0) {
      goto LABEL_19;
    }
  }
  uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
  if ((v5 & 0x80000000) != 0)
  {
    int v6 = 11;
  }
  else if (v5 >= 0x80)
  {
    int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    int v2 = *((_DWORD *)this + 9);
  }
  else
  {
    int v6 = 2;
  }
  uint64_t v3 = (v6 + v3);
LABEL_19:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_40;
    }
    goto LABEL_31;
  }
  uint64_t v7 = *((void *)this + 2);
  int v8 = *(unsigned __int8 *)(v7 + 23);
  char v9 = v8;
  uint64_t v10 = *(void *)(v7 + 8);
  if ((v8 & 0x80u) == 0) {
    unint64_t v11 = *(unsigned __int8 *)(v7 + 23);
  }
  else {
    unint64_t v11 = v10;
  }
  if (v11 >= 0x80)
  {
    int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v11);
    int v8 = *(unsigned __int8 *)(v7 + 23);
    uint64_t v10 = *(void *)(v7 + 8);
    int v2 = *((_DWORD *)this + 9);
    char v9 = *(unsigned char *)(v7 + 23);
  }
  else
  {
    int v12 = 1;
  }
  if (v9 < 0) {
    int v8 = v10;
  }
  uint64_t v3 = (v3 + v12 + v8 + 1);
  if ((v2 & 8) != 0)
  {
LABEL_31:
    uint64_t v13 = *((void *)this + 3);
    int v14 = *(unsigned __int8 *)(v13 + 23);
    char v15 = v14;
    uint64_t v16 = *(void *)(v13 + 8);
    if ((v14 & 0x80u) == 0) {
      unint64_t v17 = *(unsigned __int8 *)(v13 + 23);
    }
    else {
      unint64_t v17 = v16;
    }
    if (v17 >= 0x80)
    {
      int v18 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v17);
      int v14 = *(unsigned __int8 *)(v13 + 23);
      uint64_t v16 = *(void *)(v13 + 8);
      char v15 = *(unsigned char *)(v13 + 23);
    }
    else
    {
      int v18 = 1;
    }
    if (v15 < 0) {
      int v14 = v16;
    }
    uint64_t v3 = (v3 + v18 + v14 + 1);
  }
LABEL_40:
  *((_DWORD *)this + 8) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference *this, const CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference *a2)
{
  if (a2 != (CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference *)this)
  {
    int v2 = *(_DWORD *)(this + 8);
    *(_DWORD *)(this + 8) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    int v3 = *(_DWORD *)(this + 12);
    *(_DWORD *)(this + 12) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    uint64_t v4 = *(void *)(this + 16);
    *(void *)(this + 16) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v4;
    uint64_t v5 = *(void *)(this + 24);
    *(void *)(this + 24) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v5;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.PlaceInference");
}

double CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit *this)
{
  double result = 0.0;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit *CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::RoutineVisit(CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit *this, const CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit *a2)
{
  *(void *)this = &unk_1EDD0B9C0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::MergeFrom(this, a2);
  return this;
}

void sub_18DFA594C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit *this, const CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v18);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 68);
  if (!(_BYTE)v5) {
    return result;
  }
  if (*((unsigned char *)a2 + 68))
  {
    *((_DWORD *)this + 17) |= 1u;
    int v6 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
    if (!v6) {
      operator new();
    }
    uint64_t v7 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)a2 + 1);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      uint64_t v7 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::default_instance_
                                                                           + 8);
    }
    double result = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v6, v7);
    int v5 = *((_DWORD *)a2 + 17);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_23;
    }
  }
  else if ((*((unsigned char *)a2 + 68) & 2) == 0)
  {
    goto LABEL_6;
  }
  *((_DWORD *)this + 17) |= 2u;
  int v8 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 2);
  if (!v8) {
    operator new();
  }
  char v9 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)a2 + 2);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    char v9 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::default_instance_
                                                                         + 16);
  }
  double result = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v8, v9);
  int v5 = *((_DWORD *)a2 + 17);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_28;
  }
LABEL_23:
  *((_DWORD *)this + 17) |= 4u;
  uint64_t v10 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 3);
  if (!v10) {
    operator new();
  }
  unint64_t v11 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)a2 + 3);
  if (!v11)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    unint64_t v11 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::default_instance_
                                                                          + 24);
  }
  double result = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v10, v11);
  int v5 = *((_DWORD *)a2 + 17);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
LABEL_33:
    *((_DWORD *)this + 17) |= 0x10u;
    int v14 = (CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference *)*((void *)this + 5);
    if (!v14) {
      operator new();
    }
    char v15 = (const CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference *)*((void *)a2 + 5);
    if (!v15)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
      char v15 = *(const CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference **)(CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::default_instance_
                                                                                 + 40);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference::MergeFrom(v14, v15);
    int v5 = *((_DWORD *)a2 + 17);
    if ((v5 & 0x20) == 0)
    {
LABEL_10:
      if ((v5 & 0x40) == 0) {
        return result;
      }
      goto LABEL_11;
    }
    goto LABEL_38;
  }
LABEL_28:
  *((_DWORD *)this + 17) |= 8u;
  int v12 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 4);
  if (!v12) {
    operator new();
  }
  uint64_t v13 = (const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)a2 + 4);
  if (!v13)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    uint64_t v13 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp **)(CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::default_instance_
                                                                          + 32);
  }
  double result = CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergeFrom(v12, v13);
  int v5 = *((_DWORD *)a2 + 17);
  if ((v5 & 0x10) != 0) {
    goto LABEL_33;
  }
LABEL_9:
  if ((v5 & 0x20) == 0) {
    goto LABEL_10;
  }
LABEL_38:
  *((_DWORD *)this + 17) |= 0x20u;
  uint64_t v16 = (CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *)*((void *)this + 6);
  if (!v16) {
    operator new();
  }
  unint64_t v17 = (const CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *)*((void *)a2 + 6);
  if (!v17)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
    unint64_t v17 = *(const CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate **)(CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::default_instance_
                                                                                         + 48);
  }
  double result = CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::MergeFrom(v16, v17);
  if ((*((_DWORD *)a2 + 17) & 0x40) != 0)
  {
LABEL_11:
    double result = *((double *)a2 + 7);
    *((_DWORD *)this + 17) |= 0x40u;
    *((double *)this + 7) = result;
  }
  return result;
}

void sub_18DFA5D30(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::~RoutineVisit(CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit *this)
{
  *(void *)this = &unk_1EDD0B9C0;
  CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::~RoutineVisit(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit *)CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 2);
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = *((void *)this + 3);
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = *((void *)this + 4);
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
    uint64_t v6 = *((void *)this + 5);
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    uint64_t v7 = *((void *)this + 6);
    if (v7)
    {
      int v8 = *(void (**)(void))(*(void *)v7 + 8);
      v8();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 64) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::New(CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::Clear(uint64_t this)
{
  uint64_t v1 = this;
  LOBYTE(v2) = *(unsigned char *)(this + 68);
  if ((_BYTE)v2)
  {
    if (*(unsigned char *)(this + 68))
    {
      uint64_t v3 = *(void *)(this + 8);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
          *(void *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        int v2 = *(_DWORD *)(this + 68);
      }
    }
    if ((v2 & 2) != 0)
    {
      uint64_t v4 = *(void *)(this + 16);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 36))
        {
          *(void *)(v4 + 8) = 0;
          *(void *)(v4 + 16) = 0;
          *(void *)(v4 + 24) = 0;
        }
        *(_DWORD *)(v4 + 36) = 0;
        int v2 = *(_DWORD *)(this + 68);
      }
    }
    if ((v2 & 4) != 0)
    {
      uint64_t v5 = *(void *)(this + 24);
      if (v5)
      {
        if (*(unsigned char *)(v5 + 36))
        {
          *(void *)(v5 + 8) = 0;
          *(void *)(v5 + 16) = 0;
          *(void *)(v5 + 24) = 0;
        }
        *(_DWORD *)(v5 + 36) = 0;
        int v2 = *(_DWORD *)(this + 68);
      }
    }
    if ((v2 & 8) != 0)
    {
      uint64_t v6 = *(void *)(this + 32);
      if (v6)
      {
        if (*(unsigned char *)(v6 + 36))
        {
          *(void *)(v6 + 8) = 0;
          *(void *)(v6 + 16) = 0;
          *(void *)(v6 + 24) = 0;
        }
        *(_DWORD *)(v6 + 36) = 0;
        int v2 = *(_DWORD *)(this + 68);
      }
    }
    if ((v2 & 0x10) != 0)
    {
      this = *(void *)(this + 40);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference::Clear(this);
        int v2 = *(_DWORD *)(v1 + 68);
      }
    }
    if ((v2 & 0x20) != 0)
    {
      uint64_t v7 = *(void *)(v1 + 48);
      if (v7)
      {
        if (*(unsigned char *)(v7 + 28))
        {
          *(void *)(v7 + 8) = 0;
          *(void *)(v7 + 16) = 0;
        }
        *(_DWORD *)(v7 + 28) = 0;
      }
    }
    *(void *)(v1 + 56) = 0;
  }
  *(_DWORD *)(v1 + 68) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (1)
  {
    uint64_t v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 < *((void *)a2 + 2) && (*v4 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_6;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_6:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_25;
        }
        *((_DWORD *)this + 17) |= 1u;
        uint64_t v7 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 1);
        if (!v7) {
          operator new();
        }
        v51[0] = 0;
        int v8 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v51))return 0; {
        }
          }
        else
        {
          v51[0] = *v8;
          *((void *)a2 + 1) = v8 + 1;
        }
        int v9 = *((_DWORD *)a2 + 14);
        int v10 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v9 + 1;
        if (v9 >= v10) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream(v7, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v11 = *((_DWORD *)a2 + 14);
        BOOL v12 = __OFSUB__(v11, 1);
        int v13 = v11 - 1;
        if (v13 < 0 == v12) {
          *((_DWORD *)a2 + 14) = v13;
        }
        int v14 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v14 >= *((void *)a2 + 2) || *v14 != 18) {
          continue;
        }
        *((void *)a2 + 1) = v14 + 1;
        goto LABEL_37;
      case 2u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_25;
        }
LABEL_37:
        *((_DWORD *)this + 17) |= 2u;
        char v15 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 2);
        if (!v15) {
          operator new();
        }
        v51[0] = 0;
        uint64_t v16 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v16 >= *((void *)a2 + 2) || *v16 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v51))return 0; {
        }
          }
        else
        {
          v51[0] = *v16;
          *((void *)a2 + 1) = v16 + 1;
        }
        int v17 = *((_DWORD *)a2 + 14);
        int v18 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v17 + 1;
        if (v17 >= v18) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream(v15, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v19 = *((_DWORD *)a2 + 14);
        BOOL v12 = __OFSUB__(v19, 1);
        int v20 = v19 - 1;
        if (v20 < 0 == v12) {
          *((_DWORD *)a2 + 14) = v20;
        }
        int v21 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v21 >= *((void *)a2 + 2) || *v21 != 26) {
          continue;
        }
        *((void *)a2 + 1) = v21 + 1;
LABEL_51:
        *((_DWORD *)this + 17) |= 4u;
        BOOL v22 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 3);
        if (!v22) {
          operator new();
        }
        v51[0] = 0;
        int v23 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v23 >= *((void *)a2 + 2) || *v23 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v51))return 0; {
        }
          }
        else
        {
          v51[0] = *v23;
          *((void *)a2 + 1) = v23 + 1;
        }
        int v24 = *((_DWORD *)a2 + 14);
        int v25 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v24 + 1;
        if (v24 >= v25) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream(v22, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v26 = *((_DWORD *)a2 + 14);
        BOOL v12 = __OFSUB__(v26, 1);
        int v27 = v26 - 1;
        if (v27 < 0 == v12) {
          *((_DWORD *)a2 + 14) = v27;
        }
        unsigned int v28 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v28 >= *((void *)a2 + 2) || *v28 != 34) {
          continue;
        }
        *((void *)a2 + 1) = v28 + 1;
LABEL_65:
        *((_DWORD *)this + 17) |= 8u;
        unsigned int v29 = (CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp *)*((void *)this + 4);
        if (!v29) {
          operator new();
        }
        v51[0] = 0;
        int v30 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v30 >= *((void *)a2 + 2) || *v30 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v51))return 0; {
        }
          }
        else
        {
          v51[0] = *v30;
          *((void *)a2 + 1) = v30 + 1;
        }
        int v31 = *((_DWORD *)a2 + 14);
        int v32 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v31 + 1;
        if (v31 >= v32) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TimeStamp::MergePartialFromCodedStream(v29, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v33 = *((_DWORD *)a2 + 14);
        BOOL v12 = __OFSUB__(v33, 1);
        int v34 = v33 - 1;
        if (v34 < 0 == v12) {
          *((_DWORD *)a2 + 14) = v34;
        }
        int v35 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v35 >= *((void *)a2 + 2) || *v35 != 42) {
          continue;
        }
        *((void *)a2 + 1) = v35 + 1;
LABEL_79:
        *((_DWORD *)this + 17) |= 0x10u;
        unsigned int v36 = (CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference *)*((void *)this + 5);
        if (!v36) {
          operator new();
        }
        v51[0] = 0;
        uint64_t v37 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v37 >= *((void *)a2 + 2) || *v37 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v51))return 0; {
        }
          }
        else
        {
          v51[0] = *v37;
          *((void *)a2 + 1) = v37 + 1;
        }
        int v38 = *((_DWORD *)a2 + 14);
        int v39 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v38 + 1;
        if (v38 >= v39) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference::MergePartialFromCodedStream(v36, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v40 = *((_DWORD *)a2 + 14);
        BOOL v12 = __OFSUB__(v40, 1);
        int v41 = v40 - 1;
        if (v41 < 0 == v12) {
          *((_DWORD *)a2 + 14) = v41;
        }
        uint64_t v42 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v42 >= *((void *)a2 + 2) || *v42 != 50) {
          continue;
        }
        *((void *)a2 + 1) = v42 + 1;
LABEL_93:
        *((_DWORD *)this + 17) |= 0x20u;
        uint64_t v43 = (CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate *)*((void *)this + 6);
        if (!v43) {
          operator new();
        }
        v51[0] = 0;
        int v44 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v44 >= *((void *)a2 + 2) || *v44 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v51))return 0; {
        }
          }
        else
        {
          v51[0] = *v44;
          *((void *)a2 + 1) = v44 + 1;
        }
        int v45 = *((_DWORD *)a2 + 14);
        int v46 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v45 + 1;
        if (v45 >= v46) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::ClientLocationCoordinate::MergePartialFromCodedStream(v43, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v47 = *((_DWORD *)a2 + 14);
        BOOL v12 = __OFSUB__(v47, 1);
        int v48 = v47 - 1;
        if (v48 < 0 == v12) {
          *((_DWORD *)a2 + 14) = v48;
        }
        int v49 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v49 >= *((void *)a2 + 2) || *v49 != 57) {
          continue;
        }
        *((void *)a2 + 1) = v49 + 1;
LABEL_107:
        *(void *)unsigned int v51 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v51) & 1) == 0)return 0; {
        *((void *)this + 7) = *(void *)v51;
        }
        *((_DWORD *)this + 17) |= 0x40u;
        if (*((void *)a2 + 1) == *((void *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
        break;
      case 3u:
        int v6 = TagFallback & 7;
        if (v6 == 2) {
          goto LABEL_51;
        }
        goto LABEL_25;
      case 4u:
        int v6 = TagFallback & 7;
        if (v6 == 2) {
          goto LABEL_65;
        }
        goto LABEL_25;
      case 5u:
        int v6 = TagFallback & 7;
        if (v6 == 2) {
          goto LABEL_79;
        }
        goto LABEL_25;
      case 6u:
        int v6 = TagFallback & 7;
        if (v6 == 2) {
          goto LABEL_93;
        }
        goto LABEL_25;
      case 7u:
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_25;
        }
        goto LABEL_107;
      default:
        int v6 = TagFallback & 7;
LABEL_25:
        if (v6 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 68);
  if (v6)
  {
    uint64_t v7 = *(void *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 68);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v8 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::default_instance_ + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
LABEL_15:
  uint64_t v9 = *(void *)(v5 + 24);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v9 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::default_instance_ + 24);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v9, a2, a4);
  int v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_21;
  }
LABEL_18:
  uint64_t v10 = *(void *)(v5 + 32);
  if (!v10)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v10 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::default_instance_ + 32);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v10, a2, a4);
  int v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_24;
  }
LABEL_21:
  uint64_t v11 = *(void *)(v5 + 40);
  if (!v11)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v11 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::default_instance_ + 40);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v11, a2, a4);
  int v6 = *(_DWORD *)(v5 + 68);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      return this;
    }
    goto LABEL_27;
  }
LABEL_24:
  uint64_t v12 = *(void *)(v5 + 48);
  if (!v12)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v12 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::default_instance_ + 48);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v12, a2, a4);
  if ((*(_DWORD *)(v5 + 68) & 0x40) != 0)
  {
LABEL_27:
    double v13 = *(double *)(v5 + 56);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (uint64_t)a2, v13, a3);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::ByteSize(uint64_t this)
{
  uint64_t v1 = this;
  LOBYTE(v2) = *(unsigned char *)(this + 68);
  if (!(_BYTE)v2)
  {
    uint64_t result = 0;
    goto LABEL_63;
  }
  if ((*(unsigned char *)(this + 68) & 1) == 0)
  {
    unsigned int v3 = 0;
    if ((*(unsigned char *)(this + 68) & 2) == 0) {
      goto LABEL_24;
    }
    goto LABEL_15;
  }
  uint64_t v5 = *(void *)(this + 8);
  if (!v5)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v5 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::default_instance_ + 8);
  }
  int v6 = *(unsigned __int8 *)(v5 + 36);
  if (*(unsigned char *)(v5 + 36))
  {
    int v7 = (v6 << 31 >> 31) & 9;
    if ((v6 & 2) != 0) {
      v7 += 9;
    }
    if ((v6 & 4) != 0) {
      int v6 = v7 + 9;
    }
    else {
      int v6 = v7;
    }
  }
  *(_DWORD *)(v5 + 32) = v6;
  unsigned int v3 = v6 + 2;
  int v2 = *(_DWORD *)(v1 + 68);
  if ((v2 & 2) != 0)
  {
LABEL_15:
    uint64_t v8 = *(void *)(v1 + 16);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      uint64_t v8 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::default_instance_ + 16);
    }
    int v9 = *(unsigned __int8 *)(v8 + 36);
    if (*(unsigned char *)(v8 + 36))
    {
      int v10 = (v9 << 31 >> 31) & 9;
      if ((v9 & 2) != 0) {
        v10 += 9;
      }
      if ((v9 & 4) != 0) {
        int v9 = v10 + 9;
      }
      else {
        int v9 = v10;
      }
    }
    *(_DWORD *)(v8 + 32) = v9;
    v3 += v9 + 2;
    int v2 = *(_DWORD *)(v1 + 68);
  }
LABEL_24:
  if ((v2 & 4) != 0)
  {
    uint64_t v11 = *(void *)(v1 + 24);
    if (!v11)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      uint64_t v11 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::default_instance_ + 24);
    }
    int v12 = *(unsigned __int8 *)(v11 + 36);
    if (*(unsigned char *)(v11 + 36))
    {
      int v13 = (v12 << 31 >> 31) & 9;
      if ((v12 & 2) != 0) {
        v13 += 9;
      }
      if ((v12 & 4) != 0) {
        int v12 = v13 + 9;
      }
      else {
        int v12 = v13;
      }
    }
    *(_DWORD *)(v11 + 32) = v12;
    v3 += v12 + 2;
    int v2 = *(_DWORD *)(v1 + 68);
    if ((v2 & 8) == 0)
    {
LABEL_26:
      if ((v2 & 0x10) == 0) {
        goto LABEL_27;
      }
LABEL_47:
      int v17 = *(CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference **)(v1 + 40);
      if (!v17)
      {
        CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(0);
        int v17 = *(CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference **)(CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::default_instance_
                                                                             + 40);
      }
      int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::PlaceInference::ByteSize(v17);
      int v19 = (int)v18;
      if (v18 >= 0x80) {
        this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18);
      }
      else {
        this = 1;
      }
      v3 += v19 + this + 1;
      int v2 = *(_DWORD *)(v1 + 68);
      if ((v2 & 0x20) == 0) {
        goto LABEL_60;
      }
      goto LABEL_53;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_26;
  }
  uint64_t v14 = *(void *)(v1 + 32);
  if (!v14)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
    uint64_t v14 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::default_instance_ + 32);
  }
  int v15 = *(unsigned __int8 *)(v14 + 36);
  if (*(unsigned char *)(v14 + 36))
  {
    int v16 = (v15 << 31 >> 31) & 9;
    if ((v15 & 2) != 0) {
      v16 += 9;
    }
    if ((v15 & 4) != 0) {
      int v15 = v16 + 9;
    }
    else {
      int v15 = v16;
    }
  }
  *(_DWORD *)(v14 + 32) = v15;
  v3 += v15 + 2;
  int v2 = *(_DWORD *)(v1 + 68);
  if ((v2 & 0x10) != 0) {
    goto LABEL_47;
  }
LABEL_27:
  if ((v2 & 0x20) != 0)
  {
LABEL_53:
    uint64_t v20 = *(void *)(v1 + 48);
    if (!v20)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto((CoreNavigation::CLP::LogEntry::PrivateData *)this);
      uint64_t v20 = *(void *)(CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::default_instance_ + 48);
    }
    int v21 = *(unsigned __int8 *)(v20 + 28);
    if (*(unsigned char *)(v20 + 28))
    {
      if ((v21 & 2) != 0) {
        int v21 = ((v21 << 31 >> 31) & 9) + 9;
      }
      else {
        int v21 = (v21 << 31 >> 31) & 9;
      }
    }
    *(_DWORD *)(v20 + 24) = v21;
    v3 += v21 + 2;
    int v2 = *(_DWORD *)(v1 + 68);
  }
LABEL_60:
  if ((v2 & 0x40) != 0) {
    uint64_t result = v3 + 9;
  }
  else {
    uint64_t result = v3;
  }
LABEL_63:
  *(_DWORD *)(v1 + 64) = result;
  return result;
}

double CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit *this, const CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::Swap(CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit *this, CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    uint64_t v3 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    uint64_t v4 = *((void *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v4;
    uint64_t v5 = *((void *)this + 4);
    *((void *)this + 4) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v5;
    uint64_t v6 = *((void *)this + 5);
    *((void *)this + 5) = *((void *)a2 + 5);
    *((void *)a2 + 5) = v6;
    uint64_t v7 = *((void *)this + 6);
    *((void *)this + 6) = *((void *)a2 + 6);
    *((void *)a2 + 6) = v7;
    double result = *((double *)this + 7);
    *((void *)this + 7) = *((void *)a2 + 7);
    *((double *)a2 + 7) = result;
    LODWORD(v7) = *((_DWORD *)this + 17);
    *((_DWORD *)this + 17) = *((_DWORD *)a2 + 17);
    *((_DWORD *)a2 + 17) = v7;
    LODWORD(v7) = *((_DWORD *)this + 16);
    *((_DWORD *)this + 16) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v7;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.RoutineVisit");
}

double CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate *this)
{
  *((_DWORD *)this + 14) = 0;
  *((void *)this + 6) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(void *)((char *)this + 37) = 0;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate *CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate::OutdoorUpdate(CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate *this, const CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate *a2)
{
  *(void *)this = &unk_1EDD024E8;
  *((_DWORD *)this + 14) = 0;
  *((void *)this + 6) = 0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(void *)((char *)this + 37) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate::MergeFrom(this, a2);
  return this;
}

void sub_18DFA6F04(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

float CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate *this, const CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 56);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 56))
    {
      uint64_t v4 = *((void *)a2 + 1);
      *((_DWORD *)this + 14) |= 1u;
      *((void *)this + 1) = v4;
      int v5 = *((_DWORD *)a2 + 14);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_20;
      }
    }
    else if ((*((unsigned char *)a2 + 56) & 2) == 0)
    {
      goto LABEL_6;
    }
    uint64_t v4 = *((void *)a2 + 2);
    *((_DWORD *)this + 14) |= 2u;
    *((void *)this + 2) = v4;
    int v5 = *((_DWORD *)a2 + 14);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_22;
    }
LABEL_20:
    unsigned int v8 = *((_DWORD *)a2 + 6);
    if (v8 >= 3) {
      __assert_rtn("set_type", "CoreNavigationCLPPrivateDataShared.pb.h", 27626, "::CoreNavigation::CLP::LogEntry::PrivateData::IndoorOutdoorType_IsValid(value)");
    }
    *((_DWORD *)this + 14) |= 4u;
    *((_DWORD *)this + 6) = v8;
    int v5 = *((_DWORD *)a2 + 14);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0)
      {
LABEL_10:
        if ((v5 & 0x20) != 0)
        {
          unsigned int v6 = *((_DWORD *)a2 + 10);
          if (v6 >= 4) {
            __assert_rtn("set_daylight_confidence", "CoreNavigationCLPPrivateDataShared.pb.h", 27694, "::CoreNavigation::CLP::LogEntry::PrivateData::IndoorOutdoorConfidence_IsValid(value)");
          }
          *((_DWORD *)this + 14) |= 0x20u;
          *((_DWORD *)this + 10) = v6;
          int v5 = *((_DWORD *)a2 + 14);
        }
        if ((v5 & 0x40) != 0)
        {
          char v7 = *((unsigned char *)a2 + 44);
          *((_DWORD *)this + 14) |= 0x40u;
          *((unsigned char *)this + 44) = v7;
          int v5 = *((_DWORD *)a2 + 14);
        }
        if ((v5 & 0x80) != 0)
        {
          LODWORD(v4) = *((_DWORD *)a2 + 12);
          *((_DWORD *)this + 14) |= 0x80u;
          *((_DWORD *)this + 12) = v4;
        }
        return *(float *)&v4;
      }
LABEL_9:
      uint64_t v4 = *((void *)a2 + 4);
      *((_DWORD *)this + 14) |= 0x10u;
      *((void *)this + 4) = v4;
      int v5 = *((_DWORD *)a2 + 14);
      goto LABEL_10;
    }
LABEL_22:
    unsigned int v9 = *((_DWORD *)a2 + 7);
    if (v9 >= 4) {
      __assert_rtn("set_confidence", "CoreNavigationCLPPrivateDataShared.pb.h", 27649, "::CoreNavigation::CLP::LogEntry::PrivateData::IndoorOutdoorConfidence_IsValid(value)");
    }
    *((_DWORD *)this + 14) |= 8u;
    *((_DWORD *)this + 7) = v9;
    int v5 = *((_DWORD *)a2 + 14);
    if ((v5 & 0x10) == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  return *(float *)&v4;
}

void sub_18DFA70F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate::~OutdoorUpdate(CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate *this)
{
  *(void *)this = &unk_1EDD024E8;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate::~OutdoorUpdate(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 52) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate::New(CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 56))
  {
    *(_DWORD *)(this + 48) = 0;
    *(_OWORD *)(this + 8) = 0u;
    *(_OWORD *)(this + 24) = 0u;
    *(void *)(this + 37) = 0;
  }
  *(_DWORD *)(this + 56) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (2)
  {
    uint64_t v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_32;
        }
        *(void *)int v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v27) & 1) == 0)return 0; {
        *((void *)this + 1) = *(void *)v27;
        }
        *((_DWORD *)this + 14) |= 1u;
        char v7 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v7 >= *((void *)a2 + 2) || *v7 != 17) {
          continue;
        }
        *((void *)a2 + 1) = v7 + 1;
        goto LABEL_14;
      case 2u:
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_32;
        }
LABEL_14:
        *(void *)int v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v27) & 1) == 0)return 0; {
        *((void *)this + 2) = *(void *)v27;
        }
        *((_DWORD *)this + 14) |= 2u;
        unsigned int v9 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v8 = *((void *)a2 + 2);
        if ((unint64_t)v9 >= v8 || *v9 != 24) {
          continue;
        }
        int v10 = v9 + 1;
        *((void *)a2 + 1) = v10;
LABEL_20:
        v27[0] = 0;
        if ((unint64_t)v10 >= v8 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v27);
          if (!result) {
            return result;
          }
          unsigned int v11 = v27[0];
        }
        else
        {
          unsigned int v11 = *v10;
          *((void *)a2 + 1) = v10 + 1;
        }
        if (v11 <= 2)
        {
          *((_DWORD *)this + 14) |= 4u;
          *((_DWORD *)this + 6) = v11;
        }
        int v19 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v12 = *((void *)a2 + 2);
        if ((unint64_t)v19 >= v12 || *v19 != 32) {
          continue;
        }
        int v13 = v19 + 1;
        *((void *)a2 + 1) = v13;
LABEL_42:
        v27[0] = 0;
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v27);
          if (!result) {
            return result;
          }
          unsigned int v20 = v27[0];
        }
        else
        {
          unsigned int v20 = *v13;
          *((void *)a2 + 1) = v13 + 1;
        }
        if (v20 <= 3)
        {
          *((_DWORD *)this + 14) |= 8u;
          *((_DWORD *)this + 7) = v20;
        }
        int v21 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v21 >= *((void *)a2 + 2) || *v21 != 41) {
          continue;
        }
        *((void *)a2 + 1) = v21 + 1;
LABEL_52:
        *(void *)int v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v27) & 1) == 0)return 0; {
        *((void *)this + 4) = *(void *)v27;
        }
        *((_DWORD *)this + 14) |= 0x10u;
        BOOL v22 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        if ((unint64_t)v22 >= v14 || *v22 != 48) {
          continue;
        }
        int v15 = v22 + 1;
        *((void *)a2 + 1) = v15;
LABEL_56:
        v27[0] = 0;
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v27);
          if (!result) {
            return result;
          }
          unsigned int v23 = v27[0];
        }
        else
        {
          unsigned int v23 = *v15;
          *((void *)a2 + 1) = v15 + 1;
        }
        if (v23 <= 3)
        {
          *((_DWORD *)this + 14) |= 0x20u;
          *((_DWORD *)this + 10) = v23;
        }
        int v24 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
        if ((unint64_t)v24 >= v16 || *v24 != 56) {
          continue;
        }
        int v17 = v24 + 1;
        *((void *)a2 + 1) = v17;
LABEL_66:
        v27[0] = 0;
        if ((unint64_t)v17 >= v16 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v27);
          if (!result) {
            return result;
          }
          unsigned int v25 = v27[0];
          int v26 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v16 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v25 = *v17;
          int v26 = v17 + 1;
          *((void *)a2 + 1) = v26;
        }
        *((unsigned char *)this + 44) = v25 != 0;
        *((_DWORD *)this + 14) |= 0x40u;
        if ((unint64_t)v26 >= v16 || *v26 != 69) {
          continue;
        }
        *((void *)a2 + 1) = v26 + 1;
LABEL_74:
        v27[0] = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v27))
        {
          *((_DWORD *)this + 12) = v27[0];
          *((_DWORD *)this + 14) |= 0x80u;
          if (*((void *)a2 + 1) == *((void *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        int v10 = (char *)*((void *)a2 + 1);
        unint64_t v8 = *((void *)a2 + 2);
        goto LABEL_20;
      case 4u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        int v13 = (char *)*((void *)a2 + 1);
        unint64_t v12 = *((void *)a2 + 2);
        goto LABEL_42;
      case 5u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_52;
        }
        goto LABEL_32;
      case 6u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        int v15 = (char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        goto LABEL_56;
      case 7u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_32;
        }
        int v17 = (char *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
        goto LABEL_66;
      case 8u:
        int v6 = TagFallback & 7;
        if (v6 != 5) {
          goto LABEL_32;
        }
        goto LABEL_74;
      default:
        int v6 = TagFallback & 7;
LABEL_32:
        if (v6 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 56);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
    int v6 = *(_DWORD *)(v5 + 56);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_14;
  }
LABEL_13:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 28), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_15;
  }
LABEL_14:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
LABEL_16:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned __int8 *)(v5 + 44), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 56) & 0x80) == 0) {
      return this;
    }
    goto LABEL_17;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 56);
  if ((v6 & 0x40) != 0) {
    goto LABEL_16;
  }
LABEL_8:
  if ((v6 & 0x80) == 0) {
    return this;
  }
LABEL_17:
  float v7 = *(float *)(v5 + 48);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (uint64_t)a2, v7, a3);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate *this)
{
  int v2 = *((unsigned __int8 *)this + 56);
  if (*((unsigned char *)this + 56))
  {
    if ((v2 & 2) != 0) {
      int v3 = ((v2 << 31 >> 31) & 9) + 9;
    }
    else {
      int v3 = (v2 << 31 >> 31) & 9;
    }
    if ((v2 & 4) != 0)
    {
      uint64_t v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
      if ((v4 & 0x80000000) != 0)
      {
        int v5 = 11;
      }
      else if (v4 >= 0x80)
      {
        int v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
        int v2 = *((_DWORD *)this + 14);
      }
      else
      {
        int v5 = 2;
      }
      v3 += v5;
    }
    if ((v2 & 8) != 0)
    {
      float v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
      if ((v7 & 0x80000000) != 0)
      {
        int v8 = 11;
      }
      else if (v7 >= 0x80)
      {
        int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7) + 1;
        int v2 = *((_DWORD *)this + 14);
      }
      else
      {
        int v8 = 2;
      }
      v3 += v8;
    }
    if ((v2 & 0x10) != 0) {
      v3 += 9;
    }
    if ((v2 & 0x20) != 0)
    {
      unsigned int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
      if ((v9 & 0x80000000) != 0)
      {
        int v10 = 11;
      }
      else if (v9 >= 0x80)
      {
        int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9) + 1;
        int v2 = *((_DWORD *)this + 14);
      }
      else
      {
        int v10 = 2;
      }
      v3 += v10;
    }
    unsigned int v11 = v3 + 2;
    if ((v2 & 0x40) == 0) {
      unsigned int v11 = v3;
    }
    if ((v2 & 0x80) != 0) {
      uint64_t result = v11 + 5;
    }
    else {
      uint64_t result = v11;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  *((_DWORD *)this + 13) = result;
  return result;
}

float CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate::MergeFrom(this, lpsrc);
}

float CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate *this, const CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate *this)
{
  return 1;
}

float CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate::Swap(CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate *this, CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    uint64_t v3 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    int v4 = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v4;
    int v5 = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v5;
    uint64_t v6 = *((void *)this + 4);
    *((void *)this + 4) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v6;
    int v7 = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v7;
    LOBYTE(v7) = *((unsigned char *)this + 44);
    *((unsigned char *)this + 44) = *((unsigned char *)a2 + 44);
    *((unsigned char *)a2 + 44) = v7;
    float result = *((float *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((float *)a2 + 12) = result;
    int v9 = *((_DWORD *)this + 14);
    *((_DWORD *)this + 14) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v9;
    int v10 = *((_DWORD *)this + 13);
    *((_DWORD *)this + 13) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v10;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.OutdoorUpdate");
}

BOOL CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample_ReferenceFrame_IsValid(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  return this < 3;
}

double CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample *this)
{
  *((_DWORD *)this + 19) = 0;
  *((_DWORD *)this + 20) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_DWORD *)((char *)this + 71) = 0;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample *CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample::InertialOdometrySample(CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample *this, const CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample *a2)
{
  *(void *)this = &unk_1EDD02560;
  *((_DWORD *)this + 19) = 0;
  *((_DWORD *)this + 20) = 0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_DWORD *)((char *)this + 71) = 0;
  CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample::MergeFrom(this, a2);
  return this;
}

void sub_18DFA7B6C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample *this, const CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v22);
  }
  int v4 = *((_DWORD *)a2 + 20);
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    uint64_t v9 = *((void *)a2 + 1);
    *((_DWORD *)this + 20) |= 1u;
    *((void *)this + 1) = v9;
    int v4 = *((_DWORD *)a2 + 20);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_29;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  uint64_t v10 = *((void *)a2 + 2);
  *((_DWORD *)this + 20) |= 2u;
  *((void *)this + 2) = v10;
  int v4 = *((_DWORD *)a2 + 20);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_30;
  }
LABEL_29:
  int v11 = *((_DWORD *)a2 + 6);
  *((_DWORD *)this + 20) |= 4u;
  *((_DWORD *)this + 6) = v11;
  int v4 = *((_DWORD *)a2 + 20);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_31;
  }
LABEL_30:
  int v12 = *((_DWORD *)a2 + 7);
  *((_DWORD *)this + 20) |= 8u;
  *((_DWORD *)this + 7) = v12;
  int v4 = *((_DWORD *)a2 + 20);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_32:
    int v14 = *((_DWORD *)a2 + 9);
    *((_DWORD *)this + 20) |= 0x20u;
    *((_DWORD *)this + 9) = v14;
    int v4 = *((_DWORD *)a2 + 20);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_33;
  }
LABEL_31:
  int v13 = *((_DWORD *)a2 + 8);
  *((_DWORD *)this + 20) |= 0x10u;
  *((_DWORD *)this + 8) = v13;
  int v4 = *((_DWORD *)a2 + 20);
  if ((v4 & 0x20) != 0) {
    goto LABEL_32;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_33:
  int v15 = *((_DWORD *)a2 + 10);
  *((_DWORD *)this + 20) |= 0x40u;
  *((_DWORD *)this + 10) = v15;
  int v4 = *((_DWORD *)a2 + 20);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    int v5 = *((_DWORD *)a2 + 11);
    *((_DWORD *)this + 20) |= 0x80u;
    *((_DWORD *)this + 11) = v5;
    int v4 = *((_DWORD *)a2 + 20);
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0) {
    goto LABEL_24;
  }
  if ((v4 & 0x100) != 0)
  {
    int v16 = *((_DWORD *)a2 + 12);
    *((_DWORD *)this + 20) |= 0x100u;
    *((_DWORD *)this + 12) = v16;
    int v4 = *((_DWORD *)a2 + 20);
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0) {
        goto LABEL_17;
      }
      goto LABEL_37;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  int v17 = *((_DWORD *)a2 + 13);
  *((_DWORD *)this + 20) |= 0x200u;
  *((_DWORD *)this + 13) = v17;
  int v4 = *((_DWORD *)a2 + 20);
  if ((v4 & 0x400) == 0)
  {
LABEL_17:
    if ((v4 & 0x800) == 0) {
      goto LABEL_18;
    }
    goto LABEL_38;
  }
LABEL_37:
  int v18 = *((_DWORD *)a2 + 14);
  *((_DWORD *)this + 20) |= 0x400u;
  *((_DWORD *)this + 14) = v18;
  int v4 = *((_DWORD *)a2 + 20);
  if ((v4 & 0x800) == 0)
  {
LABEL_18:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_39;
  }
LABEL_38:
  int v19 = *((_DWORD *)a2 + 15);
  *((_DWORD *)this + 20) |= 0x800u;
  *((_DWORD *)this + 15) = v19;
  int v4 = *((_DWORD *)a2 + 20);
  if ((v4 & 0x1000) == 0)
  {
LABEL_19:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_40;
  }
LABEL_39:
  int v20 = *((_DWORD *)a2 + 16);
  *((_DWORD *)this + 20) |= 0x1000u;
  *((_DWORD *)this + 16) = v20;
  int v4 = *((_DWORD *)a2 + 20);
  if ((v4 & 0x2000) == 0)
  {
LABEL_20:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_21;
  }
LABEL_40:
  unsigned int v21 = *((_DWORD *)a2 + 17);
  if (v21 >= 3) {
    __assert_rtn("set_reference_frame", "CoreNavigationCLPPrivateDataShared.pb.h", 28051, "::CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample_ReferenceFrame_IsValid(value)");
  }
  *((_DWORD *)this + 20) |= 0x2000u;
  *((_DWORD *)this + 17) = v21;
  int v4 = *((_DWORD *)a2 + 20);
  if ((v4 & 0x4000) == 0) {
    goto LABEL_22;
  }
LABEL_21:
  char v6 = *((unsigned char *)a2 + 72);
  *((_DWORD *)this + 20) |= 0x4000u;
  *((unsigned char *)this + 72) = v6;
  int v4 = *((_DWORD *)a2 + 20);
LABEL_22:
  if ((v4 & 0x8000) != 0)
  {
    char v7 = *((unsigned char *)a2 + 73);
    *((_DWORD *)this + 20) |= 0x8000u;
    *((unsigned char *)this + 73) = v7;
    int v4 = *((_DWORD *)a2 + 20);
  }
LABEL_24:
  if ((v4 & 0x10000) != 0)
  {
    char v8 = *((unsigned char *)a2 + 74);
    *((_DWORD *)this + 20) |= 0x10000u;
    *((unsigned char *)this + 74) = v8;
  }
}

void sub_18DFA7E40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample::~InertialOdometrySample(CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample *this)
{
  *(void *)this = &unk_1EDD02560;
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample::~InertialOdometrySample(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 76) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample::New(CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 80);
  if ((_BYTE)v1)
  {
    *(void *)(this + 40) = 0;
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 8) = 0u;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(void *)(this + 48) = 0;
    *(void *)(this + 56) = 0;
    *(_WORD *)(this + 72) = 0;
    *(void *)(this + 64) = 0;
  }
  if ((v1 & 0xFF0000) != 0) {
    *(unsigned char *)(this + 74) = 0;
  }
  *(_DWORD *)(this + 80) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (2)
  {
    int v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_83;
        }
        *(void *)int v35 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v35) & 1) == 0)return 0; {
        *((void *)this + 1) = *(void *)v35;
        }
        *((_DWORD *)this + 20) |= 1u;
        char v7 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v7 >= *((void *)a2 + 2) || *v7 != 17) {
          continue;
        }
        *((void *)a2 + 1) = v7 + 1;
        goto LABEL_14;
      case 2u:
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_83;
        }
LABEL_14:
        *(void *)int v35 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v35) & 1) == 0)return 0; {
        *((void *)this + 2) = *(void *)v35;
        }
        *((_DWORD *)this + 20) |= 2u;
        char v8 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 != 29) {
          continue;
        }
        *((void *)a2 + 1) = v8 + 1;
LABEL_19:
        v35[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v35) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 6) = v35[0];
        *((_DWORD *)this + 20) |= 4u;
        uint64_t v9 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v9 >= *((void *)a2 + 2) || *v9 != 37) {
          continue;
        }
        *((void *)a2 + 1) = v9 + 1;
LABEL_24:
        v35[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v35) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 7) = v35[0];
        *((_DWORD *)this + 20) |= 8u;
        uint64_t v10 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 != 45) {
          continue;
        }
        *((void *)a2 + 1) = v10 + 1;
LABEL_29:
        v35[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v35) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 8) = v35[0];
        *((_DWORD *)this + 20) |= 0x10u;
        int v11 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v11 >= *((void *)a2 + 2) || *v11 != 53) {
          continue;
        }
        *((void *)a2 + 1) = v11 + 1;
LABEL_34:
        v35[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v35) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 9) = v35[0];
        *((_DWORD *)this + 20) |= 0x20u;
        int v12 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v12 >= *((void *)a2 + 2) || *v12 != 61) {
          continue;
        }
        *((void *)a2 + 1) = v12 + 1;
LABEL_39:
        v35[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v35) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 10) = v35[0];
        *((_DWORD *)this + 20) |= 0x40u;
        int v13 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v13 >= *((void *)a2 + 2) || *v13 != 69) {
          continue;
        }
        *((void *)a2 + 1) = v13 + 1;
LABEL_44:
        v35[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v35) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 11) = v35[0];
        *((_DWORD *)this + 20) |= 0x80u;
        int v14 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v14 >= *((void *)a2 + 2) || *v14 != 77) {
          continue;
        }
        *((void *)a2 + 1) = v14 + 1;
LABEL_49:
        v35[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v35) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 12) = v35[0];
        *((_DWORD *)this + 20) |= 0x100u;
        int v15 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v15 >= *((void *)a2 + 2) || *v15 != 85) {
          continue;
        }
        *((void *)a2 + 1) = v15 + 1;
LABEL_54:
        v35[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v35) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 13) = v35[0];
        *((_DWORD *)this + 20) |= 0x200u;
        int v16 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v16 >= *((void *)a2 + 2) || *v16 != 93) {
          continue;
        }
        *((void *)a2 + 1) = v16 + 1;
LABEL_59:
        v35[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v35) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 14) = v35[0];
        *((_DWORD *)this + 20) |= 0x400u;
        int v17 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v17 >= *((void *)a2 + 2) || *v17 != 101) {
          continue;
        }
        *((void *)a2 + 1) = v17 + 1;
LABEL_64:
        v35[0] = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v35) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 15) = v35[0];
        *((_DWORD *)this + 20) |= 0x800u;
        int v18 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v18 >= *((void *)a2 + 2) || *v18 != 109) {
          continue;
        }
        *((void *)a2 + 1) = v18 + 1;
LABEL_69:
        v35[0] = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, v35))
        {
          *((_DWORD *)this + 16) = v35[0];
          *((_DWORD *)this + 20) |= 0x1000u;
          int v20 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v19 = *((void *)a2 + 2);
          if ((unint64_t)v20 < v19 && *v20 == 112)
          {
            unsigned int v21 = v20 + 1;
            *((void *)a2 + 1) = v21;
LABEL_75:
            v35[0] = 0;
            if ((unint64_t)v21 >= v19 || *v21 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v35);
              if (!result) {
                return result;
              }
              unsigned int v22 = v35[0];
            }
            else
            {
              unsigned int v22 = *v21;
              *((void *)a2 + 1) = v21 + 1;
            }
            if (v22 <= 2)
            {
              *((_DWORD *)this + 20) |= 0x2000u;
              *((_DWORD *)this + 17) = v22;
            }
            unsigned int v28 = (unsigned char *)*((void *)a2 + 1);
            unint64_t v23 = *((void *)a2 + 2);
            if ((unint64_t)v28 < v23 && *v28 == 120)
            {
              int v24 = v28 + 1;
              *((void *)a2 + 1) = v24;
LABEL_94:
              v35[0] = 0;
              if ((unint64_t)v24 >= v23 || (char)*v24 < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v35);
                if (!result) {
                  return result;
                }
                unsigned int v29 = v35[0];
                int v30 = (unsigned __int8 *)*((void *)a2 + 1);
                unint64_t v23 = *((void *)a2 + 2);
              }
              else
              {
                unsigned int v29 = *v24;
                int v30 = v24 + 1;
                *((void *)a2 + 1) = v30;
              }
              *((unsigned char *)this + 72) = v29 != 0;
              *((_DWORD *)this + 20) |= 0x4000u;
              if ((int)v23 - (int)v30 >= 2 && *v30 == 128 && v30[1] == 1)
              {
                unsigned int v25 = v30 + 2;
                *((void *)a2 + 1) = v25;
LABEL_103:
                v35[0] = 0;
                if ((unint64_t)v25 >= v23 || (char)*v25 < 0)
                {
                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v35);
                  if (!result) {
                    return result;
                  }
                  unsigned int v31 = v35[0];
                  int v32 = (unsigned __int8 *)*((void *)a2 + 1);
                  unint64_t v23 = *((void *)a2 + 2);
                }
                else
                {
                  unsigned int v31 = *v25;
                  int v32 = v25 + 1;
                  *((void *)a2 + 1) = v32;
                }
                *((unsigned char *)this + 73) = v31 != 0;
                *((_DWORD *)this + 20) |= 0x8000u;
                if ((int)v23 - (int)v32 >= 2 && *v32 == 136 && v32[1] == 1)
                {
                  int v26 = (char *)(v32 + 2);
                  *((void *)a2 + 1) = v26;
LABEL_112:
                  v35[0] = 0;
                  if ((unint64_t)v26 >= v23 || *v26 < 0)
                  {
                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v35);
                    if (!result) {
                      return result;
                    }
                    unsigned int v33 = v35[0];
                    int v34 = (unsigned __int8 *)*((void *)a2 + 1);
                    unint64_t v23 = *((void *)a2 + 2);
                  }
                  else
                  {
                    unsigned int v33 = *v26;
                    int v34 = (unsigned __int8 *)(v26 + 1);
                    *((void *)a2 + 1) = v34;
                  }
                  *((unsigned char *)this + 74) = v33 != 0;
                  *((_DWORD *)this + 20) |= 0x10000u;
                  if (v34 == (unsigned __int8 *)v23
                    && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                  {
                    *((_DWORD *)a2 + 8) = 0;
                    uint64_t result = 1;
                    *((unsigned char *)a2 + 36) = 1;
                    return result;
                  }
                }
              }
            }
          }
          continue;
        }
        return 0;
      case 3u:
        int v6 = TagFallback & 7;
        if (v6 == 5) {
          goto LABEL_19;
        }
        goto LABEL_83;
      case 4u:
        int v6 = TagFallback & 7;
        if (v6 == 5) {
          goto LABEL_24;
        }
        goto LABEL_83;
      case 5u:
        int v6 = TagFallback & 7;
        if (v6 == 5) {
          goto LABEL_29;
        }
        goto LABEL_83;
      case 6u:
        int v6 = TagFallback & 7;
        if (v6 == 5) {
          goto LABEL_34;
        }
        goto LABEL_83;
      case 7u:
        int v6 = TagFallback & 7;
        if (v6 == 5) {
          goto LABEL_39;
        }
        goto LABEL_83;
      case 8u:
        int v6 = TagFallback & 7;
        if (v6 == 5) {
          goto LABEL_44;
        }
        goto LABEL_83;
      case 9u:
        int v6 = TagFallback & 7;
        if (v6 == 5) {
          goto LABEL_49;
        }
        goto LABEL_83;
      case 0xAu:
        int v6 = TagFallback & 7;
        if (v6 == 5) {
          goto LABEL_54;
        }
        goto LABEL_83;
      case 0xBu:
        int v6 = TagFallback & 7;
        if (v6 == 5) {
          goto LABEL_59;
        }
        goto LABEL_83;
      case 0xCu:
        int v6 = TagFallback & 7;
        if (v6 == 5) {
          goto LABEL_64;
        }
        goto LABEL_83;
      case 0xDu:
        int v6 = TagFallback & 7;
        if (v6 == 5) {
          goto LABEL_69;
        }
        goto LABEL_83;
      case 0xEu:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_83;
        }
        unsigned int v21 = (char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        goto LABEL_75;
      case 0xFu:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_83;
        }
        int v24 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v23 = *((void *)a2 + 2);
        goto LABEL_94;
      case 0x10u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_83;
        }
        unsigned int v25 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v23 = *((void *)a2 + 2);
        goto LABEL_103;
      case 0x11u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_83;
        }
        int v26 = (char *)*((void *)a2 + 1);
        unint64_t v23 = *((void *)a2 + 2);
        goto LABEL_112;
      default:
        int v6 = TagFallback & 7;
LABEL_83:
        if (v6 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 80);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
    int v6 = *(_DWORD *)(v5 + 80);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_21;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_22;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(float *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_23;
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(float *)(v5 + 28), a3);
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_24;
  }
LABEL_23:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(float *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_25;
  }
LABEL_24:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(float *)(v5 + 36), a3);
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_26;
  }
LABEL_25:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (uint64_t)a2, *(float *)(v5 + 40), a3);
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_27;
  }
LABEL_26:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (uint64_t)a2, *(float *)(v5 + 44), a3);
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_28;
  }
LABEL_27:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (uint64_t)a2, *(float *)(v5 + 48), a3);
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_29;
  }
LABEL_28:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (uint64_t)a2, *(float *)(v5 + 52), a3);
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_30;
  }
LABEL_29:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, (uint64_t)a2, *(float *)(v5 + 56), a3);
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_31;
  }
LABEL_30:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, (uint64_t)a2, *(float *)(v5 + 60), a3);
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_32;
  }
LABEL_31:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, (uint64_t)a2, *(float *)(v5 + 64), a3);
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_33;
  }
LABEL_32:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, *(unsigned int *)(v5 + 68), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_17;
    }
LABEL_34:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, *(unsigned __int8 *)(v5 + 73), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 80) & 0x10000) == 0) {
      return this;
    }
    goto LABEL_35;
  }
LABEL_33:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, *(unsigned __int8 *)(v5 + 72), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x8000) != 0) {
    goto LABEL_34;
  }
LABEL_17:
  if ((v6 & 0x10000) == 0) {
    return this;
  }
LABEL_35:
  uint64_t v7 = *(unsigned __int8 *)(v5 + 74);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, v7, (uint64_t)a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample::ByteSize(CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample *this)
{
  int v2 = *((_DWORD *)this + 20);
  if ((_BYTE)v2)
  {
    unsigned int v3 = (v2 << 31 >> 31) & 9;
    if ((v2 & 2) != 0) {
      v3 += 9;
    }
    if ((v2 & 4) != 0) {
      v3 += 5;
    }
    if ((v2 & 8) != 0) {
      v3 += 5;
    }
    if ((v2 & 0x10) != 0) {
      v3 += 5;
    }
    if ((v2 & 0x20) != 0) {
      v3 += 5;
    }
    if ((v2 & 0x40) != 0) {
      v3 += 5;
    }
    if ((v2 & 0x80) != 0) {
      v3 += 5;
    }
  }
  else
  {
    unsigned int v3 = 0;
  }
  if ((v2 & 0xFF00) != 0)
  {
    if ((v2 & 0x100) != 0) {
      v3 += 5;
    }
    if ((v2 & 0x200) != 0) {
      v3 += 5;
    }
    if ((v2 & 0x400) != 0) {
      v3 += 5;
    }
    if ((v2 & 0x800) != 0) {
      v3 += 5;
    }
    if ((v2 & 0x1000) != 0) {
      unsigned int v4 = v3 + 5;
    }
    else {
      unsigned int v4 = v3;
    }
    if ((v2 & 0x2000) != 0)
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 17);
      if ((v5 & 0x80000000) != 0)
      {
        int v6 = 11;
      }
      else if (v5 >= 0x80)
      {
        int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
        int v2 = *((_DWORD *)this + 20);
      }
      else
      {
        int v6 = 2;
      }
      v4 += v6;
    }
    unsigned int v3 = v4 + 2;
    if ((v2 & 0x4000) == 0) {
      unsigned int v3 = v4;
    }
    if ((v2 & 0x8000) != 0) {
      v3 += 3;
    }
  }
  if ((v2 & 0x10000) != 0) {
    uint64_t result = v3 + 3;
  }
  else {
    uint64_t result = v3;
  }
  *((_DWORD *)this + 19) = result;
  return result;
}

void CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample::CopyFrom(CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample *this, const CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample::IsInitialized(CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample *this)
{
  return 1;
}

float CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample::Swap(CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample *this, CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    uint64_t v3 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    LODWORD(v3) = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v3;
    LODWORD(v3) = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v3;
    LODWORD(v3) = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v3;
    LODWORD(v3) = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v3;
    LODWORD(v3) = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v3;
    LODWORD(v3) = *((_DWORD *)this + 11);
    *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v3;
    LODWORD(v3) = *((_DWORD *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v3;
    LODWORD(v3) = *((_DWORD *)this + 13);
    *((_DWORD *)this + 13) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v3;
    LODWORD(v3) = *((_DWORD *)this + 14);
    *((_DWORD *)this + 14) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v3;
    LODWORD(v3) = *((_DWORD *)this + 15);
    *((_DWORD *)this + 15) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v3;
    float result = *((float *)this + 16);
    *((_DWORD *)this + 16) = *((_DWORD *)a2 + 16);
    *((float *)a2 + 16) = result;
    int v5 = *((_DWORD *)this + 17);
    *((_DWORD *)this + 17) = *((_DWORD *)a2 + 17);
    *((_DWORD *)a2 + 17) = v5;
    LOBYTE(v5) = *((unsigned char *)this + 72);
    *((unsigned char *)this + 72) = *((unsigned char *)a2 + 72);
    *((unsigned char *)a2 + 72) = v5;
    LOBYTE(v5) = *((unsigned char *)this + 73);
    *((unsigned char *)this + 73) = *((unsigned char *)a2 + 73);
    *((unsigned char *)a2 + 73) = v5;
    LOBYTE(v5) = *((unsigned char *)this + 74);
    *((unsigned char *)this + 74) = *((unsigned char *)a2 + 74);
    *((unsigned char *)a2 + 74) = v5;
    int v6 = *((_DWORD *)this + 20);
    *((_DWORD *)this + 20) = *((_DWORD *)a2 + 20);
    *((_DWORD *)a2 + 20) = v6;
    int v7 = *((_DWORD *)this + 19);
    *((_DWORD *)this + 19) = *((_DWORD *)a2 + 19);
    *((_DWORD *)a2 + 19) = v7;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::InertialOdometrySample::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.PrivateData.InertialOdometrySample");
}

uint64_t sub_18DFA8D24(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_18DFA8D2C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_18DFA8D34(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_18DFA8D3C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_18DFA8D44(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_18DFA8D4C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_18DFA8D54(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_18DFA8D5C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_18DFA8D64(uint64_t a1)
{
  return *(unsigned int *)(a1 + 148);
}

uint64_t sub_18DFA8D6C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_18DFA8D74(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_18DFA8D7C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_18DFA8D84(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_18DFA8D8C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 356);
}

uint64_t sub_18DFA8D94(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_18DFA8D9C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_18DFA8DA4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_18DFA8DAC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_18DFA8DB4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_18DFA8DBC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 96);
}

uint64_t sub_18DFA8DC4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 56);
}

uint64_t sub_18DFA8DCC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_18DFA8DD4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 12);
}

uint64_t sub_18DFA8DDC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 88);
}

uint64_t sub_18DFA8DE4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_18DFA8DEC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_18DFA8DF4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_18DFA8DFC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_18DFA8E04(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

uint64_t sub_18DFA8E0C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_18DFA8E14(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_18DFA8E1C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 52);
}

uint64_t sub_18DFA8E24(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_18DFA8E2C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_18DFA8E34(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_18DFA8E3C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 92);
}

uint64_t sub_18DFA8E44(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_18DFA8E4C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

uint64_t sub_18DFA8E54(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_18DFA8E5C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 120);
}

uint64_t sub_18DFA8E64(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_18DFA8E6C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_18DFA8E74(uint64_t a1)
{
  return *(unsigned int *)(a1 + 56);
}

uint64_t sub_18DFA8E7C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 76);
}

uint64_t sub_18DFA8E84(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_18DFA8E8C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_18DFA8E94(uint64_t a1)
{
  return *(unsigned int *)(a1 + 56);
}

uint64_t sub_18DFA8E9C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_18DFA8EA4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_18DFA8EAC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_18DFA8EB4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_18DFA8EBC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_18DFA8EC4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_18DFA8ECC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_18DFA8ED4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 144);
}

uint64_t sub_18DFA8EDC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 28);
}

uint64_t sub_18DFA8EE4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_18DFA8EEC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_18DFA8EF4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

uint64_t sub_18DFA8EFC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_18DFA8F04(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_18DFA8F0C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 52);
}

uint64_t sub_18DFA8F14(uint64_t a1)
{
  return *(unsigned int *)(a1 + 12);
}

uint64_t sub_18DFA8F1C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 52);
}

uint64_t sub_18DFA8F24(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_18DFA8F2C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 72);
}

uint64_t sub_18DFA8F34(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_18DFA8F3C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 52);
}

uint64_t sub_18DFA8F44(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_18DFA8F4C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_18DFA8F54(uint64_t a1)
{
  return *(unsigned int *)(a1 + 52);
}

uint64_t sub_18DFA8F5C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_18DFA8F64(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_18DFA8F6C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 84);
}

uint64_t sub_18DFA8F74(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_18DFA8F7C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

uint64_t sub_18DFA8F84(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_18DFA8F8C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

uint64_t sub_18DFA8F94(uint64_t a1)
{
  return *(unsigned int *)(a1 + 12);
}

uint64_t sub_18DFA8F9C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 72);
}

uint64_t sub_18DFA8FA4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

uint64_t sub_18DFA8FAC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_18DFA8FB4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_18DFA8FBC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_18DFA8FC4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_18DFA8FCC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 64);
}

uint64_t sub_18DFA8FD4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 52);
}

uint64_t sub_18DFA8FDC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 76);
}

void sub_18DFA8FE4()
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::protobuf_ShutdownFile_CoreNavigationCLPPrivateDataCapture_2eproto(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  uint64_t result = CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_;
  if (CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_) {
    return (*(uint64_t (**)(void))(*(void *)CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
  }
                                + 8))();
  return result;
}

void CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto_impl(CoreNavigation::CLP::LogEntry::PrivateData *this, uint64_t a2, uint64_t a3, const char *a4)
{
  unsigned int v4 = (CoreNavigation::CLP::LogEntry::PrivateData *)wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/CoreNavigation/shared/cnprotobuf/CoreNavigationCLPPrivateDataCapture.pb.cc", a4);
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataShared_2eproto(v4);
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(v5);
  CoreNavigation::CLP::LogEntry::InternalToolData::protobuf_AddDesc_CoreNavigationCLPInternalToolData_2eproto(v6);
  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenLogEntry_2eproto(v7);
  CoreNavigation::CLP::LogEntry::RayTracingTileData::protobuf_AddDesc_CoreNavigationCLPRayTracingTileData_2eproto(v8);
  CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::protobuf_AddDesc_CoreNavigationCLPRayTracingTilesAvailability_2eproto(v9);
  CoreNavigation::CLP::LogEntry::Vision::protobuf_AddDesc_CoreNavigationCLPVisionLogEntry_2eproto(v10);
  CoreNavigation::CLP::LogEntry::TropicalSavanna::protobuf_AddDesc_CoreNavigationCLPTropicalSavannaLogEntry_2eproto(v11);
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::protobuf_AddDesc_CoreNavigationCLPRavenGnssAssistanceFile_2eproto(v12);
  operator new();
}

double CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::PrivateDataCapture(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *this)
{
  *(void *)this = &unk_1EDD0D310;
  double result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 152) = 0u;
  *(_OWORD *)((char *)this + 168) = 0u;
  *(_OWORD *)((char *)this + 184) = 0u;
  *(_OWORD *)((char *)this + 200) = 0u;
  *(_OWORD *)((char *)this + 216) = 0u;
  *(_OWORD *)((char *)this + 232) = 0u;
  *(_OWORD *)((char *)this + 248) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 264) = 0u;
  *(_OWORD *)((char *)this + 280) = 0u;
  *(_OWORD *)((char *)this + 296) = 0u;
  *(_OWORD *)((char *)this + 308) = 0u;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD0D310;
  double result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 152) = 0u;
  *(_OWORD *)((char *)this + 168) = 0u;
  *(_OWORD *)((char *)this + 184) = 0u;
  *(_OWORD *)((char *)this + 200) = 0u;
  *(_OWORD *)((char *)this + 216) = 0u;
  *(_OWORD *)((char *)this + 232) = 0u;
  *(_OWORD *)((char *)this + 248) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 264) = 0u;
  *(_OWORD *)((char *)this + 280) = 0u;
  *(_OWORD *)((char *)this + 296) = 0u;
  *(_OWORD *)((char *)this + 308) = 0u;
  return result;
}

void *CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::InitAsDefaultInstance(void *this)
{
  uint64_t v1 = CoreNavigation::CLP::LogEntry::PrivateData::Gyro::default_instance_;
  this[1] = CoreNavigation::CLP::LogEntry::PrivateData::Accel::default_instance_;
  this[2] = v1;
  uint64_t v2 = CoreNavigation::CLP::LogEntry::PrivateData::Location::default_instance_;
  this[3] = CoreNavigation::CLP::LogEntry::PrivateData::Baro::default_instance_;
  this[4] = v2;
  uint64_t v3 = CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::default_instance_;
  this[5] = CoreNavigation::CLP::LogEntry::PrivateData::MotionState::default_instance_;
  this[6] = v3;
  uint64_t v4 = CoreNavigation::CLP::LogEntry::PrivateData::Timer::default_instance_;
  this[7] = CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::default_instance_;
  this[8] = v4;
  uint64_t v5 = CoreNavigation::CLP::LogEntry::PrivateData::MapVector::default_instance_;
  this[9] = CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::default_instance_;
  this[10] = v5;
  uint64_t v6 = CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::default_instance_;
  this[11] = CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::default_instance_;
  this[12] = v6;
  uint64_t v7 = CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::default_instance_;
  this[13] = CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReportCallbackContents::default_instance_;
  this[14] = v7;
  uint64_t v8 = CoreNavigation::CLP::LogEntry::PrivateData::StepCount::default_instance_;
  this[15] = CoreNavigation::CLP::LogEntry::PrivateData::Reset::default_instance_;
  this[16] = v8;
  uint64_t v9 = CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::default_instance_;
  this[17] = CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::default_instance_;
  this[18] = v9;
  uint64_t v10 = CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::default_instance_;
  this[19] = CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::default_instance_;
  this[20] = v10;
  uint64_t v11 = CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::default_instance_;
  this[21] = CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::default_instance_;
  this[22] = v11;
  uint64_t v12 = CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::default_instance_;
  this[23] = CoreNavigation::CLP::LogEntry::PrivateData::Compass::default_instance_;
  this[24] = v12;
  uint64_t v13 = CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::default_instance_;
  this[25] = CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction::default_instance_;
  this[26] = v13;
  uint64_t v14 = CoreNavigation::CLP::LogEntry::PrivateData::WatchState::default_instance_;
  this[27] = CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::default_instance_;
  this[28] = v14;
  uint64_t v15 = CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::default_instance_;
  this[29] = CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::default_instance_;
  this[30] = v15;
  uint64_t v16 = CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate::default_instance_;
  this[31] = CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents::default_instance_;
  this[32] = v16;
  uint64_t v17 = CoreNavigation::CLP::LogEntry::Raven::LogEntry::default_instance_;
  this[33] = CoreNavigation::CLP::LogEntry::InternalToolData::InternalToolDataCapture::default_instance_;
  this[34] = v17;
  uint64_t v18 = CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::default_instance_;
  this[35] = CoreNavigation::CLP::LogEntry::Vision::LogEntry::default_instance_;
  this[36] = v18;
  uint64_t v19 = CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::default_instance_;
  this[37] = CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry::default_instance_;
  this[38] = v19;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(CoreNavigation::CLP::LogEntry::PrivateData *this)
{
  uint64_t v1 = CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto_once_;
  __dmb(0xBu);
  if (v1 != 2)
  {
    v2[0] = MEMORY[0x1E4FBA938] + 16;
    v2[1] = CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto_impl;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
}

void sub_18DFA94F4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

_OWORD *CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::SharedCtor(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *this)
{
  *(_OWORD *)((char *)this + 8) = 0u;
  double result = (_OWORD *)((char *)this + 8);
  result[17] = 0u;
  result[18] = 0u;
  result[15] = 0u;
  result[16] = 0u;
  result[13] = 0u;
  result[14] = 0u;
  result[11] = 0u;
  result[12] = 0u;
  result[9] = 0u;
  result[10] = 0u;
  result[7] = 0u;
  result[8] = 0u;
  result[5] = 0u;
  result[6] = 0u;
  result[3] = 0u;
  result[4] = 0u;
  result[1] = 0u;
  result[2] = 0u;
  *(_OWORD *)((char *)result + 300) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::PrivateDataCapture(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *this, const CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *a2)
{
  *(void *)this = &unk_1EDD0D310;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 152) = 0u;
  *(_OWORD *)((char *)this + 168) = 0u;
  *(_OWORD *)((char *)this + 184) = 0u;
  *(_OWORD *)((char *)this + 200) = 0u;
  *(_OWORD *)((char *)this + 216) = 0u;
  *(_OWORD *)((char *)this + 232) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 248) = 0u;
  *(_OWORD *)((char *)this + 264) = 0u;
  *(_OWORD *)((char *)this + 280) = 0u;
  *(_OWORD *)((char *)this + 296) = 0u;
  *(_OWORD *)((char *)this + 308) = 0u;
  CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::MergeFrom(this, a2);
  return this;
}

void sub_18DFA9654(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::MergeFrom(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *this, const CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v82);
  }
  unsigned int v4 = *((_DWORD *)a2 + 79);
  if (!(_BYTE)v4) {
    goto LABEL_53;
  }
  if (v4)
  {
    *((_DWORD *)this + 79) |= 1u;
    uint64_t v5 = (CoreNavigation::CLP::LogEntry::PrivateData::Accel *)*((void *)this + 1);
    if (!v5) {
      operator new();
    }
    uint64_t v6 = (const CoreNavigation::CLP::LogEntry::PrivateData::Accel *)*((void *)a2 + 1);
    if (!v6)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
      uint64_t v6 = *(const CoreNavigation::CLP::LogEntry::PrivateData::Accel **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                       + 8);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::Accel::MergeFrom(v5, v6);
    unsigned int v4 = *((_DWORD *)a2 + 79);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_23;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  *((_DWORD *)this + 79) |= 2u;
  uint64_t v7 = (CoreNavigation::CLP::LogEntry::PrivateData::Gyro *)*((void *)this + 2);
  if (!v7) {
    operator new();
  }
  uint64_t v8 = (const CoreNavigation::CLP::LogEntry::PrivateData::Gyro *)*((void *)a2 + 2);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
    uint64_t v8 = *(const CoreNavigation::CLP::LogEntry::PrivateData::Gyro **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                    + 16);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::Gyro::MergeFrom(v7, v8);
  unsigned int v4 = *((_DWORD *)a2 + 79);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_28;
  }
LABEL_23:
  *((_DWORD *)this + 79) |= 4u;
  uint64_t v9 = (CoreNavigation::CLP::LogEntry::PrivateData::Baro *)*((void *)this + 3);
  if (!v9) {
    operator new();
  }
  uint64_t v10 = (const CoreNavigation::CLP::LogEntry::PrivateData::Baro *)*((void *)a2 + 3);
  if (!v10)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
    uint64_t v10 = *(const CoreNavigation::CLP::LogEntry::PrivateData::Baro **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                     + 24);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::Baro::MergeFrom(v9, v10);
  unsigned int v4 = *((_DWORD *)a2 + 79);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_33;
  }
LABEL_28:
  *((_DWORD *)this + 79) |= 8u;
  uint64_t v11 = (CoreNavigation::CLP::LogEntry::PrivateData::Location *)*((void *)this + 4);
  if (!v11) {
    operator new();
  }
  uint64_t v12 = (const CoreNavigation::CLP::LogEntry::PrivateData::Location *)*((void *)a2 + 4);
  if (!v12)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
    uint64_t v12 = *(const CoreNavigation::CLP::LogEntry::PrivateData::Location **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                         + 32);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::Location::MergeFrom(v11, v12);
  unsigned int v4 = *((_DWORD *)a2 + 79);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_38:
    *((_DWORD *)this + 79) |= 0x20u;
    uint64_t v15 = (CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver *)*((void *)this + 6);
    if (!v15) {
      operator new();
    }
    uint64_t v16 = (const CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver *)*((void *)a2 + 6);
    if (!v16)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
      uint64_t v16 = *(const CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                                      + 48);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::MergeFrom(v15, v16);
    unsigned int v4 = *((_DWORD *)a2 + 79);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_53;
      }
      goto LABEL_48;
    }
    goto LABEL_43;
  }
LABEL_33:
  *((_DWORD *)this + 79) |= 0x10u;
  uint64_t v13 = (CoreNavigation::CLP::LogEntry::PrivateData::MotionState *)*((void *)this + 5);
  if (!v13) {
    operator new();
  }
  uint64_t v14 = (const CoreNavigation::CLP::LogEntry::PrivateData::MotionState *)*((void *)a2 + 5);
  if (!v14)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
    uint64_t v14 = *(const CoreNavigation::CLP::LogEntry::PrivateData::MotionState **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                            + 40);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::MotionState::MergeFrom(v13, v14);
  unsigned int v4 = *((_DWORD *)a2 + 79);
  if ((v4 & 0x20) != 0) {
    goto LABEL_38;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_43:
  *((_DWORD *)this + 79) |= 0x40u;
  uint64_t v17 = (CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry *)*((void *)this + 7);
  if (!v17) {
    operator new();
  }
  uint64_t v18 = (const CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry *)*((void *)a2 + 7);
  if (!v18)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
    uint64_t v18 = *(const CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                            + 56);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::MergeFrom(v17, v18);
  unsigned int v4 = *((_DWORD *)a2 + 79);
  if ((v4 & 0x80) != 0)
  {
LABEL_48:
    *((_DWORD *)this + 79) |= 0x80u;
    uint64_t v19 = (CoreNavigation::CLP::LogEntry::PrivateData::Timer *)*((void *)this + 8);
    if (!v19) {
      operator new();
    }
    int v20 = (const CoreNavigation::CLP::LogEntry::PrivateData::Timer *)*((void *)a2 + 8);
    if (!v20)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
      int v20 = *(const CoreNavigation::CLP::LogEntry::PrivateData::Timer **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                        + 64);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::Timer::MergeFrom(v19, v20);
    unsigned int v4 = *((_DWORD *)a2 + 79);
  }
LABEL_53:
  if ((v4 & 0xFF00) == 0) {
    goto LABEL_103;
  }
  if ((v4 & 0x100) != 0)
  {
    *((_DWORD *)this + 79) |= 0x100u;
    unsigned int v21 = (CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel *)*((void *)this + 9);
    if (!v21) {
      operator new();
    }
    unsigned int v22 = (const CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel *)*((void *)a2 + 9);
    if (!v22)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
      unsigned int v22 = *(const CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                                        + 72);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::MergeFrom(v21, v22);
    unsigned int v4 = *((_DWORD *)a2 + 79);
    if ((v4 & 0x200) == 0)
    {
LABEL_56:
      if ((v4 & 0x400) == 0) {
        goto LABEL_57;
      }
      goto LABEL_73;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_56;
  }
  *((_DWORD *)this + 79) |= 0x200u;
  unint64_t v23 = (CoreNavigation::CLP::LogEntry::PrivateData::MapVector *)*((void *)this + 10);
  if (!v23) {
    operator new();
  }
  int v24 = (const CoreNavigation::CLP::LogEntry::PrivateData::MapVector *)*((void *)a2 + 10);
  if (!v24)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
    int v24 = *(const CoreNavigation::CLP::LogEntry::PrivateData::MapVector **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                          + 80);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::MapVector::MergeFrom(v23, v24);
  unsigned int v4 = *((_DWORD *)a2 + 79);
  if ((v4 & 0x400) == 0)
  {
LABEL_57:
    if ((v4 & 0x800) == 0) {
      goto LABEL_58;
    }
    goto LABEL_78;
  }
LABEL_73:
  *((_DWORD *)this + 79) |= 0x400u;
  unsigned int v25 = (CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus *)*((void *)this + 11);
  if (!v25) {
    operator new();
  }
  int v26 = (const CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus *)*((void *)a2 + 11);
  if (!v26)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
    int v26 = *(const CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                             + 88);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::MergeFrom(v25, v26);
  unsigned int v4 = *((_DWORD *)a2 + 79);
  if ((v4 & 0x800) == 0)
  {
LABEL_58:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_59;
    }
    goto LABEL_83;
  }
LABEL_78:
  *((_DWORD *)this + 79) |= 0x800u;
  int v27 = (CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment *)*((void *)this + 12);
  if (!v27) {
    operator new();
  }
  unsigned int v28 = (const CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment *)*((void *)a2 + 12);
  if (!v28)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
    unsigned int v28 = *(const CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                                  + 96);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::MergeFrom(v27, v28);
  unsigned int v4 = *((_DWORD *)a2 + 79);
  if ((v4 & 0x1000) == 0)
  {
LABEL_59:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_60;
    }
    goto LABEL_88;
  }
LABEL_83:
  *((_DWORD *)this + 79) |= 0x1000u;
  unsigned int v29 = (CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReportCallbackContents *)*((void *)this + 13);
  if (!v29) {
    operator new();
  }
  int v30 = (const CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReportCallbackContents *)*((void *)a2 + 13);
  if (!v30)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
    int v30 = *(const CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReportCallbackContents **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                                                  + 104);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReportCallbackContents::MergeFrom(v29, v30);
  unsigned int v4 = *((_DWORD *)a2 + 79);
  if ((v4 & 0x2000) == 0)
  {
LABEL_60:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_61;
    }
    goto LABEL_93;
  }
LABEL_88:
  *((_DWORD *)this + 79) |= 0x2000u;
  unsigned int v31 = (CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer *)*((void *)this + 14);
  if (!v31) {
    operator new();
  }
  int v32 = (const CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer *)*((void *)a2 + 14);
  if (!v32)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
    int v32 = *(const CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                             + 112);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::MergeFrom(v31, v32);
  unsigned int v4 = *((_DWORD *)a2 + 79);
  if ((v4 & 0x4000) == 0)
  {
LABEL_61:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_103;
    }
    goto LABEL_98;
  }
LABEL_93:
  *((_DWORD *)this + 79) |= 0x4000u;
  unsigned int v33 = (CoreNavigation::CLP::LogEntry::PrivateData::Reset *)*((void *)this + 15);
  if (!v33) {
    operator new();
  }
  int v34 = (const CoreNavigation::CLP::LogEntry::PrivateData::Reset *)*((void *)a2 + 15);
  if (!v34)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
    int v34 = *(const CoreNavigation::CLP::LogEntry::PrivateData::Reset **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                      + 120);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::Reset::MergeFrom(v33, v34);
  unsigned int v4 = *((_DWORD *)a2 + 79);
  if ((v4 & 0x8000) != 0)
  {
LABEL_98:
    *((_DWORD *)this + 79) |= 0x8000u;
    int v35 = (CoreNavigation::CLP::LogEntry::PrivateData::StepCount *)*((void *)this + 16);
    if (!v35) {
      operator new();
    }
    unsigned int v36 = (const CoreNavigation::CLP::LogEntry::PrivateData::StepCount *)*((void *)a2 + 16);
    if (!v36)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
      unsigned int v36 = *(const CoreNavigation::CLP::LogEntry::PrivateData::StepCount **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                            + 128);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::StepCount::MergeFrom(v35, v36);
    unsigned int v4 = *((_DWORD *)a2 + 79);
  }
LABEL_103:
  if ((v4 & 0xFF0000) == 0) {
    goto LABEL_153;
  }
  if ((v4 & 0x10000) != 0)
  {
    *((_DWORD *)this + 79) |= 0x10000u;
    uint64_t v37 = (CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample *)*((void *)this + 17);
    if (!v37) {
      operator new();
    }
    int v38 = (const CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample *)*((void *)a2 + 17);
    if (!v38)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
      int v38 = *(const CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                                     + 136);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::MergeFrom(v37, v38);
    unsigned int v4 = *((_DWORD *)a2 + 79);
    if ((v4 & 0x20000) == 0)
    {
LABEL_106:
      if ((v4 & 0x40000) == 0) {
        goto LABEL_107;
      }
      goto LABEL_123;
    }
  }
  else if ((v4 & 0x20000) == 0)
  {
    goto LABEL_106;
  }
  *((_DWORD *)this + 79) |= 0x20000u;
  int v39 = (CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification *)*((void *)this + 18);
  if (!v39) {
    operator new();
  }
  int v40 = (const CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification *)*((void *)a2 + 18);
  if (!v40)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
    int v40 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                                         + 144);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::MergeFrom(v39, v40);
  unsigned int v4 = *((_DWORD *)a2 + 79);
  if ((v4 & 0x40000) == 0)
  {
LABEL_107:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_108;
    }
    goto LABEL_128;
  }
LABEL_123:
  *((_DWORD *)this + 79) |= 0x40000u;
  int v41 = (CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification *)*((void *)this + 19);
  if (!v41) {
    operator new();
  }
  uint64_t v42 = (const CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification *)*((void *)a2 + 19);
  if (!v42)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
    uint64_t v42 = *(const CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                                 + 152);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::MergeFrom(v41, v42);
  unsigned int v4 = *((_DWORD *)a2 + 79);
  if ((v4 & 0x80000) == 0)
  {
LABEL_108:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_109;
    }
    goto LABEL_133;
  }
LABEL_128:
  *((_DWORD *)this + 79) |= 0x80000u;
  uint64_t v43 = (CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint *)*((void *)this + 20);
  if (!v43) {
    operator new();
  }
  int v44 = (const CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint *)*((void *)a2 + 20);
  if (!v44)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
    int v44 = *(const CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                               + 160);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::MergeFrom(v43, v44);
  unsigned int v4 = *((_DWORD *)a2 + 79);
  if ((v4 & 0x100000) == 0)
  {
LABEL_109:
    if ((v4 & 0x200000) == 0) {
      goto LABEL_110;
    }
    goto LABEL_138;
  }
LABEL_133:
  *((_DWORD *)this + 79) |= 0x100000u;
  int v45 = (CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification *)*((void *)this + 21);
  if (!v45) {
    operator new();
  }
  int v46 = (const CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification *)*((void *)a2 + 21);
  if (!v46)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
    int v46 = *(const CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                                                  + 168);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::MergeFrom(v45, v46);
  unsigned int v4 = *((_DWORD *)a2 + 79);
  if ((v4 & 0x200000) == 0)
  {
LABEL_110:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_111;
    }
    goto LABEL_143;
  }
LABEL_138:
  *((_DWORD *)this + 79) |= 0x200000u;
  int v47 = (CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint *)*((void *)this + 22);
  if (!v47) {
    operator new();
  }
  int v48 = (const CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint *)*((void *)a2 + 22);
  if (!v48)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
    int v48 = *(const CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                                     + 176);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::MergeFrom(v47, v48);
  unsigned int v4 = *((_DWORD *)a2 + 79);
  if ((v4 & 0x400000) == 0)
  {
LABEL_111:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_153;
    }
    goto LABEL_148;
  }
LABEL_143:
  *((_DWORD *)this + 79) |= 0x400000u;
  int v49 = (CoreNavigation::CLP::LogEntry::PrivateData::Compass *)*((void *)this + 23);
  if (!v49) {
    operator new();
  }
  unsigned int v50 = (const CoreNavigation::CLP::LogEntry::PrivateData::Compass *)*((void *)a2 + 23);
  if (!v50)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
    unsigned int v50 = *(const CoreNavigation::CLP::LogEntry::PrivateData::Compass **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                        + 184);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::Compass::MergeFrom(v49, v50);
  unsigned int v4 = *((_DWORD *)a2 + 79);
  if ((v4 & 0x800000) != 0)
  {
LABEL_148:
    *((_DWORD *)this + 79) |= 0x800000u;
    unsigned int v51 = (CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion *)*((void *)this + 24);
    if (!v51) {
      operator new();
    }
    int v52 = (const CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion *)*((void *)a2 + 24);
    if (!v52)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
      int v52 = *(const CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                               + 192);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::MergeFrom(v51, v52);
    unsigned int v4 = *((_DWORD *)a2 + 79);
  }
LABEL_153:
  if (!HIBYTE(v4)) {
    goto LABEL_203;
  }
  if ((v4 & 0x1000000) != 0)
  {
    *((_DWORD *)this + 79) |= 0x1000000u;
    unsigned int v53 = (CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction *)*((void *)this + 25);
    if (!v53) {
      operator new();
    }
    unsigned int v54 = (const CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction *)*((void *)a2 + 25);
    if (!v54)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
      unsigned int v54 = *(const CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                                             + 200);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction::MergeFrom(v53, v54);
    unsigned int v4 = *((_DWORD *)a2 + 79);
    if ((v4 & 0x2000000) == 0)
    {
LABEL_156:
      if ((v4 & 0x4000000) == 0) {
        goto LABEL_157;
      }
      goto LABEL_173;
    }
  }
  else if ((v4 & 0x2000000) == 0)
  {
    goto LABEL_156;
  }
  *((_DWORD *)this + 79) |= 0x2000000u;
  unsigned int v55 = (CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData *)*((void *)this + 26);
  if (!v55) {
    operator new();
  }
  int v56 = (const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData *)*((void *)a2 + 26);
  if (!v56)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
    int v56 = *(const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                                   + 208);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::MergeFrom(v55, v56);
  unsigned int v4 = *((_DWORD *)a2 + 79);
  if ((v4 & 0x4000000) == 0)
  {
LABEL_157:
    if ((v4 & 0x8000000) == 0) {
      goto LABEL_158;
    }
    goto LABEL_178;
  }
LABEL_173:
  *((_DWORD *)this + 79) |= 0x4000000u;
  unsigned int v57 = (CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData *)*((void *)this + 27);
  if (!v57) {
    operator new();
  }
  int v58 = (const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData *)*((void *)a2 + 27);
  if (!v58)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
    int v58 = *(const CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                                          + 216);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::MergeFrom(v57, v58);
  unsigned int v4 = *((_DWORD *)a2 + 79);
  if ((v4 & 0x8000000) == 0)
  {
LABEL_158:
    if ((v4 & 0x10000000) == 0) {
      goto LABEL_159;
    }
    goto LABEL_183;
  }
LABEL_178:
  *((_DWORD *)this + 79) |= 0x8000000u;
  unsigned int v59 = (CoreNavigation::CLP::LogEntry::PrivateData::WatchState *)*((void *)this + 28);
  if (!v59) {
    operator new();
  }
  unsigned int v60 = (const CoreNavigation::CLP::LogEntry::PrivateData::WatchState *)*((void *)a2 + 28);
  if (!v60)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
    unsigned int v60 = *(const CoreNavigation::CLP::LogEntry::PrivateData::WatchState **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                           + 224);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::WatchState::MergeFrom(v59, v60);
  unsigned int v4 = *((_DWORD *)a2 + 79);
  if ((v4 & 0x10000000) == 0)
  {
LABEL_159:
    if ((v4 & 0x20000000) == 0) {
      goto LABEL_160;
    }
    goto LABEL_188;
  }
LABEL_183:
  *((_DWORD *)this + 79) |= 0x10000000u;
  unsigned int v61 = (CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator *)*((void *)this + 29);
  if (!v61) {
    operator new();
  }
  unsigned int v62 = (const CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator *)*((void *)a2 + 29);
  if (!v62)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
    unsigned int v62 = *(const CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                                    + 232);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::MergeFrom(v61, v62);
  unsigned int v4 = *((_DWORD *)a2 + 79);
  if ((v4 & 0x20000000) == 0)
  {
LABEL_160:
    if ((v4 & 0x40000000) == 0) {
      goto LABEL_161;
    }
    goto LABEL_193;
  }
LABEL_188:
  *((_DWORD *)this + 79) |= 0x20000000u;
  unsigned int v63 = (CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit *)*((void *)this + 30);
  if (!v63) {
    operator new();
  }
  int v64 = (const CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit *)*((void *)a2 + 30);
  if (!v64)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
    int v64 = *(const CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                             + 240);
  }
  CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::MergeFrom(v63, v64);
  unsigned int v4 = *((_DWORD *)a2 + 79);
  if ((v4 & 0x40000000) == 0)
  {
LABEL_161:
    if ((v4 & 0x80000000) == 0) {
      goto LABEL_203;
    }
    goto LABEL_198;
  }
LABEL_193:
  *((_DWORD *)this + 79) |= 0x40000000u;
  int v65 = (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents *)*((void *)this + 31);
  if (!v65) {
    operator new();
  }
  BOOL v66 = (const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents *)*((void *)a2 + 31);
  if (!v66)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
    BOOL v66 = *(const CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_ + 248);
  }
  CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents::MergeFrom(v65, v66);
  if ((*((_DWORD *)a2 + 79) & 0x80000000) != 0)
  {
LABEL_198:
    *((_DWORD *)this + 79) |= 0x80000000;
    int v67 = (CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate *)*((void *)this + 32);
    if (!v67) {
      operator new();
    }
    uint64_t v68 = (const CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate *)*((void *)a2 + 32);
    if (!v68)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
      uint64_t v68 = *(const CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                                + 256);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate::MergeFrom(v67, v68);
  }
LABEL_203:
  LOBYTE(v69) = *((unsigned char *)a2 + 320);
  if (!(_BYTE)v69) {
    return;
  }
  if (*((unsigned char *)a2 + 320))
  {
    *((_DWORD *)this + 80) |= 1u;
    unsigned int v70 = (CoreNavigation::CLP::LogEntry::InternalToolData::InternalToolDataCapture *)*((void *)this + 33);
    if (!v70) {
      operator new();
    }
    int v71 = (const CoreNavigation::CLP::LogEntry::InternalToolData::InternalToolDataCapture *)*((void *)a2 + 33);
    if (!v71)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
      int v71 = *(const CoreNavigation::CLP::LogEntry::InternalToolData::InternalToolDataCapture **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                                               + 264);
    }
    CoreNavigation::CLP::LogEntry::InternalToolData::InternalToolDataCapture::MergeFrom(v70, v71);
    int v69 = *((_DWORD *)a2 + 80);
    if ((v69 & 2) == 0)
    {
LABEL_206:
      if ((v69 & 4) == 0) {
        goto LABEL_207;
      }
      goto LABEL_221;
    }
  }
  else if ((*((unsigned char *)a2 + 320) & 2) == 0)
  {
    goto LABEL_206;
  }
  *((_DWORD *)this + 80) |= 2u;
  int v72 = (CoreNavigation::CLP::LogEntry::Raven::LogEntry *)*((void *)this + 34);
  if (!v72) {
    operator new();
  }
  unsigned int v73 = (const CoreNavigation::CLP::LogEntry::Raven::LogEntry *)*((void *)a2 + 34);
  if (!v73)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
    unsigned int v73 = *(const CoreNavigation::CLP::LogEntry::Raven::LogEntry **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                   + 272);
  }
  CoreNavigation::CLP::LogEntry::Raven::LogEntry::MergeFrom(v72, v73);
  int v69 = *((_DWORD *)a2 + 80);
  if ((v69 & 4) == 0)
  {
LABEL_207:
    if ((v69 & 8) == 0) {
      goto LABEL_208;
    }
    goto LABEL_226;
  }
LABEL_221:
  *((_DWORD *)this + 80) |= 4u;
  unsigned int v74 = (CoreNavigation::CLP::LogEntry::Vision::LogEntry *)*((void *)this + 35);
  if (!v74) {
    operator new();
  }
  unsigned int v75 = (const CoreNavigation::CLP::LogEntry::Vision::LogEntry *)*((void *)a2 + 35);
  if (!v75)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
    unsigned int v75 = *(const CoreNavigation::CLP::LogEntry::Vision::LogEntry **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                    + 280);
  }
  CoreNavigation::CLP::LogEntry::Vision::LogEntry::MergeFrom(v74, v75);
  int v69 = *((_DWORD *)a2 + 80);
  if ((v69 & 8) == 0)
  {
LABEL_208:
    if ((v69 & 0x10) == 0) {
      goto LABEL_209;
    }
    goto LABEL_231;
  }
LABEL_226:
  *((_DWORD *)this + 80) |= 8u;
  int v76 = (CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry *)*((void *)this + 36);
  if (!v76) {
    operator new();
  }
  uint64_t v77 = (const CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry *)*((void *)a2 + 36);
  if (!v77)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
    uint64_t v77 = *(const CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                             + 288);
  }
  CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::MergeFrom(v76, v77);
  int v69 = *((_DWORD *)a2 + 80);
  if ((v69 & 0x10) == 0)
  {
LABEL_209:
    if ((v69 & 0x20) == 0) {
      return;
    }
    goto LABEL_236;
  }
LABEL_231:
  *((_DWORD *)this + 80) |= 0x10u;
  int v78 = (CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry *)*((void *)this + 37);
  if (!v78) {
    operator new();
  }
  int v79 = (const CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry *)*((void *)a2 + 37);
  if (!v79)
  {
    CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
    int v79 = *(const CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                                         + 296);
  }
  CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry::MergeFrom(v78, v79);
  if ((*((_DWORD *)a2 + 80) & 0x20) != 0)
  {
LABEL_236:
    *((_DWORD *)this + 80) |= 0x20u;
    int v80 = (CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry *)*((void *)this + 38);
    if (!v80) {
      operator new();
    }
    int v81 = (const CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry *)*((void *)a2 + 38);
    if (!v81)
    {
      CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
      int v81 = *(const CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry **)(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_
                                                                                  + 304);
    }
    CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::MergeFrom(v80, v81);
  }
}

void sub_18DFAAB8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::~PrivateDataCapture(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *this)
{
  *(void *)this = &unk_1EDD0D310;
  CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::~PrivateDataCapture(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::SharedDtor(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *this)
{
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPPrivateDataCapture_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *)CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 2);
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = *((void *)this + 3);
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = *((void *)this + 4);
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
    uint64_t v6 = *((void *)this + 5);
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    uint64_t v7 = *((void *)this + 6);
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
    uint64_t v8 = *((void *)this + 7);
    if (v8) {
      (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
    }
    uint64_t v9 = *((void *)this + 8);
    if (v9) {
      (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
    }
    uint64_t v10 = *((void *)this + 9);
    if (v10) {
      (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
    }
    uint64_t v11 = *((void *)this + 10);
    if (v11) {
      (*(void (**)(uint64_t))(*(void *)v11 + 8))(v11);
    }
    uint64_t v12 = *((void *)this + 11);
    if (v12) {
      (*(void (**)(uint64_t))(*(void *)v12 + 8))(v12);
    }
    uint64_t v13 = *((void *)this + 12);
    if (v13) {
      (*(void (**)(uint64_t))(*(void *)v13 + 8))(v13);
    }
    uint64_t v14 = *((void *)this + 13);
    if (v14) {
      (*(void (**)(uint64_t))(*(void *)v14 + 8))(v14);
    }
    uint64_t v15 = *((void *)this + 14);
    if (v15) {
      (*(void (**)(uint64_t))(*(void *)v15 + 8))(v15);
    }
    uint64_t v16 = *((void *)this + 15);
    if (v16) {
      (*(void (**)(uint64_t))(*(void *)v16 + 8))(v16);
    }
    uint64_t v17 = *((void *)this + 16);
    if (v17) {
      (*(void (**)(uint64_t))(*(void *)v17 + 8))(v17);
    }
    uint64_t v18 = *((void *)this + 17);
    if (v18) {
      (*(void (**)(uint64_t))(*(void *)v18 + 8))(v18);
    }
    uint64_t v19 = *((void *)this + 18);
    if (v19) {
      (*(void (**)(uint64_t))(*(void *)v19 + 8))(v19);
    }
    uint64_t v20 = *((void *)this + 19);
    if (v20) {
      (*(void (**)(uint64_t))(*(void *)v20 + 8))(v20);
    }
    uint64_t v21 = *((void *)this + 20);
    if (v21) {
      (*(void (**)(uint64_t))(*(void *)v21 + 8))(v21);
    }
    uint64_t v22 = *((void *)this + 21);
    if (v22) {
      (*(void (**)(uint64_t))(*(void *)v22 + 8))(v22);
    }
    uint64_t v23 = *((void *)this + 22);
    if (v23) {
      (*(void (**)(uint64_t))(*(void *)v23 + 8))(v23);
    }
    uint64_t v24 = *((void *)this + 23);
    if (v24) {
      (*(void (**)(uint64_t))(*(void *)v24 + 8))(v24);
    }
    uint64_t v25 = *((void *)this + 24);
    if (v25) {
      (*(void (**)(uint64_t))(*(void *)v25 + 8))(v25);
    }
    uint64_t v26 = *((void *)this + 25);
    if (v26) {
      (*(void (**)(uint64_t))(*(void *)v26 + 8))(v26);
    }
    uint64_t v27 = *((void *)this + 26);
    if (v27) {
      (*(void (**)(uint64_t))(*(void *)v27 + 8))(v27);
    }
    uint64_t v28 = *((void *)this + 27);
    if (v28) {
      (*(void (**)(uint64_t))(*(void *)v28 + 8))(v28);
    }
    uint64_t v29 = *((void *)this + 28);
    if (v29) {
      (*(void (**)(uint64_t))(*(void *)v29 + 8))(v29);
    }
    uint64_t v30 = *((void *)this + 29);
    if (v30) {
      (*(void (**)(uint64_t))(*(void *)v30 + 8))(v30);
    }
    uint64_t v31 = *((void *)this + 30);
    if (v31) {
      (*(void (**)(uint64_t))(*(void *)v31 + 8))(v31);
    }
    uint64_t v32 = *((void *)this + 31);
    if (v32) {
      (*(void (**)(uint64_t))(*(void *)v32 + 8))(v32);
    }
    uint64_t v33 = *((void *)this + 32);
    if (v33) {
      (*(void (**)(uint64_t))(*(void *)v33 + 8))(v33);
    }
    uint64_t v34 = *((void *)this + 33);
    if (v34) {
      (*(void (**)(uint64_t))(*(void *)v34 + 8))(v34);
    }
    uint64_t v35 = *((void *)this + 34);
    if (v35) {
      (*(void (**)(uint64_t))(*(void *)v35 + 8))(v35);
    }
    uint64_t v36 = *((void *)this + 35);
    if (v36) {
      (*(void (**)(uint64_t))(*(void *)v36 + 8))(v36);
    }
    uint64_t v37 = *((void *)this + 36);
    if (v37) {
      (*(void (**)(uint64_t))(*(void *)v37 + 8))(v37);
    }
    uint64_t v38 = *((void *)this + 37);
    if (v38) {
      (*(void (**)(uint64_t))(*(void *)v38 + 8))(v38);
    }
    uint64_t v39 = *((void *)this + 38);
    if (v39)
    {
      int v40 = *(void (**)(void))(*(void *)v39 + 8);
      v40();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *this)
{
  return CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 312) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::New(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::Clear(uint64_t this)
{
  uint64_t v1 = this;
  uint64_t v2 = (unsigned int *)(this + 316);
  unsigned int v3 = *(_DWORD *)(this + 316);
  if ((_BYTE)v3)
  {
    if (v3)
    {
      this = *(void *)(this + 8);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::Accel::Clear((CoreNavigation::CLP::LogEntry::PrivateData::Accel *)this);
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 2) != 0)
    {
      this = *(void *)(v1 + 16);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::Gyro::Clear((CoreNavigation::CLP::LogEntry::PrivateData::Gyro *)this);
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 4) != 0)
    {
      this = *(void *)(v1 + 24);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::Baro::Clear((CoreNavigation::CLP::LogEntry::PrivateData::Baro *)this);
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 8) != 0)
    {
      this = *(void *)(v1 + 32);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::Location::Clear(this);
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x10) != 0)
    {
      this = *(void *)(v1 + 40);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::MotionState::Clear(this);
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x20) != 0)
    {
      this = *(void *)(v1 + 48);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::Clear(this);
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x40) != 0)
    {
      this = *(void *)(v1 + 56);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::Clear(this);
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x80) != 0)
    {
      uint64_t v4 = *(void *)(v1 + 64);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 20))
        {
          uint64_t v5 = *(void *)(v4 + 8);
          if (v5)
          {
            if (*(unsigned char *)(v5 + 36))
            {
              *(void *)(v5 + 8) = 0;
              *(void *)(v5 + 16) = 0;
              *(void *)(v5 + 24) = 0;
            }
            *(_DWORD *)(v5 + 36) = 0;
          }
        }
        *(_DWORD *)(v4 + 20) = 0;
        unsigned int v3 = *v2;
      }
    }
  }
  if ((v3 & 0xFF00) != 0)
  {
    if ((v3 & 0x100) != 0)
    {
      this = *(void *)(v1 + 72);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::Clear(this);
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x200) != 0)
    {
      this = *(void *)(v1 + 80);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::MapVector::Clear(this);
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x400) != 0)
    {
      this = *(void *)(v1 + 88);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::Clear(this);
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x800) != 0)
    {
      this = *(void *)(v1 + 96);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::Clear(this);
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x1000) != 0)
    {
      this = *(void *)(v1 + 104);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReportCallbackContents::Clear((CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReportCallbackContents *)this);
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x2000) != 0)
    {
      this = *(void *)(v1 + 112);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::Clear((CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer *)this);
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x4000) != 0)
    {
      uint64_t v6 = *(void *)(v1 + 120);
      if (v6)
      {
        if (*(unsigned char *)(v6 + 20))
        {
          uint64_t v7 = *(void *)(v6 + 8);
          if (v7)
          {
            if (*(unsigned char *)(v7 + 36))
            {
              *(void *)(v7 + 8) = 0;
              *(void *)(v7 + 16) = 0;
              *(void *)(v7 + 24) = 0;
            }
            *(_DWORD *)(v7 + 36) = 0;
          }
        }
        *(_DWORD *)(v6 + 20) = 0;
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x8000) != 0)
    {
      this = *(void *)(v1 + 128);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::StepCount::Clear(this);
        unsigned int v3 = *v2;
      }
    }
  }
  if ((v3 & 0xFF0000) != 0)
  {
    if ((v3 & 0x10000) != 0)
    {
      this = *(void *)(v1 + 136);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::Clear(this);
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x20000) != 0)
    {
      this = *(void *)(v1 + 144);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::Clear(this);
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x40000) != 0)
    {
      this = *(void *)(v1 + 152);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::Clear(this);
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x80000) != 0)
    {
      this = *(void *)(v1 + 160);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::Clear(this);
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x100000) != 0)
    {
      this = *(void *)(v1 + 168);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::Clear(this);
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x200000) != 0)
    {
      this = *(void *)(v1 + 176);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::Clear((CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint *)this);
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x400000) != 0)
    {
      this = *(void *)(v1 + 184);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::Compass::Clear((CoreNavigation::CLP::LogEntry::PrivateData::Compass *)this);
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x800000) != 0)
    {
      this = *(void *)(v1 + 192);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::Clear((CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion *)this);
        unsigned int v3 = *v2;
      }
    }
  }
  if (HIBYTE(v3))
  {
    if ((v3 & 0x1000000) != 0)
    {
      this = *(void *)(v1 + 200);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction::Clear(this);
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x2000000) != 0)
    {
      this = *(void *)(v1 + 208);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::Clear((CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData *)this);
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x4000000) != 0)
    {
      this = *(void *)(v1 + 216);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::Clear((CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData *)this);
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x8000000) != 0)
    {
      this = *(void *)(v1 + 224);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::WatchState::Clear(this);
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x10000000) != 0)
    {
      this = *(void *)(v1 + 232);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::Clear(this);
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x20000000) != 0)
    {
      this = *(void *)(v1 + 240);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::Clear(this);
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x40000000) != 0)
    {
      this = *(void *)(v1 + 248);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents::Clear((CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents *)this);
        unsigned int v3 = *v2;
      }
    }
    if ((v3 & 0x80000000) != 0)
    {
      uint64_t v8 = *(void *)(v1 + 256);
      if (v8)
      {
        if (*(unsigned char *)(v8 + 56))
        {
          *(_DWORD *)(v8 + 48) = 0;
          *(_OWORD *)(v8 + 8) = 0u;
          *(_OWORD *)(v8 + 24) = 0u;
          *(void *)(v8 + 37) = 0;
        }
        *(_DWORD *)(v8 + 56) = 0;
      }
    }
  }
  LOBYTE(v9) = *(unsigned char *)(v1 + 320);
  if ((_BYTE)v9)
  {
    if (*(unsigned char *)(v1 + 320))
    {
      uint64_t v10 = *(void *)(v1 + 264);
      if (v10)
      {
        if (*(unsigned char *)(v10 + 20))
        {
          this = *(void *)(v10 + 8);
          if (this) {
            this = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::Clear((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *)this);
          }
        }
        *(_DWORD *)(v10 + 20) = 0;
        int v9 = *(_DWORD *)(v1 + 320);
      }
    }
    if ((v9 & 2) != 0)
    {
      this = *(void *)(v1 + 272);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::Raven::LogEntry::Clear(this);
        int v9 = *(_DWORD *)(v1 + 320);
      }
    }
    if ((v9 & 4) != 0)
    {
      this = *(void *)(v1 + 280);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::Vision::LogEntry::Clear(this);
        int v9 = *(_DWORD *)(v1 + 320);
      }
    }
    if ((v9 & 8) != 0)
    {
      uint64_t v11 = *(void *)(v1 + 288);
      if (v11)
      {
        if (*(unsigned char *)(v11 + 20))
        {
          this = *(void *)(v11 + 8);
          if (this) {
            this = CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::Clear(this);
          }
        }
        *(_DWORD *)(v11 + 20) = 0;
        int v9 = *(_DWORD *)(v1 + 320);
      }
    }
    if ((v9 & 0x10) != 0)
    {
      uint64_t v12 = *(void *)(v1 + 296);
      if (v12)
      {
        if (*(unsigned char *)(v12 + 20))
        {
          this = *(void *)(v12 + 8);
          if (this) {
            this = CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData::Clear((CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData *)this);
          }
        }
        *(_DWORD *)(v12 + 20) = 0;
        int v9 = *(_DWORD *)(v1 + 320);
      }
    }
    if ((v9 & 0x20) != 0)
    {
      this = *(void *)(v1 + 304);
      if (this) {
        this = CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::Clear(this);
      }
    }
  }
  *(void *)uint64_t v2 = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::PrivateData::PrivateDataCapture *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (2)
  {
    uint64_t v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    unsigned int v6 = TagFallback >> 3;
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_93;
        }
        *((_DWORD *)this + 79) |= 1u;
        uint64_t v8 = (CoreNavigation::CLP::LogEntry::PrivateData::Accel *)*((void *)this + 1);
        if (!v8) {
          operator new();
        }
        unsigned int v275 = 0;
        int v9 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v9 >= *((void *)a2 + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v275))return 0; {
        }
          }
        else
        {
          unsigned int v275 = *v9;
          *((void *)a2 + 1) = v9 + 1;
        }
        int v45 = *((_DWORD *)a2 + 14);
        int v46 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v45 + 1;
        if (v45 >= v46) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::Accel::MergePartialFromCodedStream(v8, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v47 = *((_DWORD *)a2 + 14);
        BOOL v15 = __OFSUB__(v47, 1);
        int v48 = v47 - 1;
        if (v48 < 0 == v15) {
          *((_DWORD *)a2 + 14) = v48;
        }
        int v49 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v49 >= *((void *)a2 + 2) || *v49 != 18) {
          continue;
        }
        *((void *)a2 + 1) = v49 + 1;
LABEL_175:
        *((_DWORD *)this + 79) |= 2u;
        unsigned int v50 = (CoreNavigation::CLP::LogEntry::PrivateData::Gyro *)*((void *)this + 2);
        if (!v50) {
          operator new();
        }
        unsigned int v275 = 0;
        unsigned int v51 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v51 >= *((void *)a2 + 2) || *v51 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v275))return 0; {
        }
          }
        else
        {
          unsigned int v275 = *v51;
          *((void *)a2 + 1) = v51 + 1;
        }
        int v52 = *((_DWORD *)a2 + 14);
        int v53 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v52 + 1;
        if (v52 >= v53) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::Gyro::MergePartialFromCodedStream(v50, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v54 = *((_DWORD *)a2 + 14);
        BOOL v15 = __OFSUB__(v54, 1);
        int v55 = v54 - 1;
        if (v55 < 0 == v15) {
          *((_DWORD *)a2 + 14) = v55;
        }
        int v56 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v56 >= *((void *)a2 + 2) || *v56 != 26) {
          continue;
        }
        *((void *)a2 + 1) = v56 + 1;
LABEL_189:
        *((_DWORD *)this + 79) |= 4u;
        unsigned int v57 = (CoreNavigation::CLP::LogEntry::PrivateData::Baro *)*((void *)this + 3);
        if (!v57) {
          operator new();
        }
        unsigned int v275 = 0;
        int v58 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v58 >= *((void *)a2 + 2) || *v58 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v275))return 0; {
        }
          }
        else
        {
          unsigned int v275 = *v58;
          *((void *)a2 + 1) = v58 + 1;
        }
        int v59 = *((_DWORD *)a2 + 14);
        int v60 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v59 + 1;
        if (v59 >= v60) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::Baro::MergePartialFromCodedStream(v57, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v61 = *((_DWORD *)a2 + 14);
        BOOL v15 = __OFSUB__(v61, 1);
        int v62 = v61 - 1;
        if (v62 < 0 == v15) {
          *((_DWORD *)a2 + 14) = v62;
        }
        unsigned int v63 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v63 >= *((void *)a2 + 2) || *v63 != 34) {
          continue;
        }
        *((void *)a2 + 1) = v63 + 1;
LABEL_203:
        *((_DWORD *)this + 79) |= 8u;
        int v64 = (CoreNavigation::CLP::LogEntry::PrivateData::Location *)*((void *)this + 4);
        if (!v64) {
          operator new();
        }
        unsigned int v275 = 0;
        int v65 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v65 >= *((void *)a2 + 2) || *v65 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v275))return 0; {
        }
          }
        else
        {
          unsigned int v275 = *v65;
          *((void *)a2 + 1) = v65 + 1;
        }
        int v66 = *((_DWORD *)a2 + 14);
        int v67 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v66 + 1;
        if (v66 >= v67) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::Location::MergePartialFromCodedStream(v64, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v68 = *((_DWORD *)a2 + 14);
        BOOL v15 = __OFSUB__(v68, 1);
        int v69 = v68 - 1;
        if (v69 < 0 == v15) {
          *((_DWORD *)a2 + 14) = v69;
        }
        unsigned int v70 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v70 >= *((void *)a2 + 2) || *v70 != 42) {
          continue;
        }
        *((void *)a2 + 1) = v70 + 1;
LABEL_217:
        *((_DWORD *)this + 79) |= 0x10u;
        int v71 = (CoreNavigation::CLP::LogEntry::PrivateData::MotionState *)*((void *)this + 5);
        if (!v71) {
          operator new();
        }
        unsigned int v275 = 0;
        int v72 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v72 >= *((void *)a2 + 2) || *v72 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v275))return 0; {
        }
          }
        else
        {
          unsigned int v275 = *v72;
          *((void *)a2 + 1) = v72 + 1;
        }
        int v73 = *((_DWORD *)a2 + 14);
        int v74 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v73 + 1;
        if (v73 >= v74) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::MotionState::MergePartialFromCodedStream(v71, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v75 = *((_DWORD *)a2 + 14);
        BOOL v15 = __OFSUB__(v75, 1);
        int v76 = v75 - 1;
        if (v76 < 0 == v15) {
          *((_DWORD *)a2 + 14) = v76;
        }
        uint64_t v77 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v77 >= *((void *)a2 + 2) || *v77 != 50) {
          continue;
        }
        *((void *)a2 + 1) = v77 + 1;
LABEL_231:
        *((_DWORD *)this + 79) |= 0x20u;
        int v78 = (CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver *)*((void *)this + 6);
        if (!v78) {
          operator new();
        }
        unsigned int v275 = 0;
        int v79 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v79 >= *((void *)a2 + 2) || *v79 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v275))return 0; {
        }
          }
        else
        {
          unsigned int v275 = *v79;
          *((void *)a2 + 1) = v79 + 1;
        }
        int v80 = *((_DWORD *)a2 + 14);
        int v81 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v80 + 1;
        if (v80 >= v81) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::MotionStateObserver::MergePartialFromCodedStream(v78, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v82 = *((_DWORD *)a2 + 14);
        BOOL v15 = __OFSUB__(v82, 1);
        int v83 = v82 - 1;
        if (v83 < 0 == v15) {
          *((_DWORD *)a2 + 14) = v83;
        }
        int v84 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v84 >= *((void *)a2 + 2) || *v84 != 58) {
          continue;
        }
        *((void *)a2 + 1) = v84 + 1;
LABEL_245:
        *((_DWORD *)this + 79) |= 0x40u;
        int v85 = (CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry *)*((void *)this + 7);
        if (!v85) {
          operator new();
        }
        unsigned int v275 = 0;
        int v86 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v86 >= *((void *)a2 + 2) || *v86 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v275))return 0; {
        }
          }
        else
        {
          unsigned int v275 = *v86;
          *((void *)a2 + 1) = v86 + 1;
        }
        int v87 = *((_DWORD *)a2 + 14);
        int v88 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v87 + 1;
        if (v87 >= v88) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::Natalimetry::MergePartialFromCodedStream(v85, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v89 = *((_DWORD *)a2 + 14);
        BOOL v15 = __OFSUB__(v89, 1);
        int v90 = v89 - 1;
        if (v90 < 0 == v15) {
          *((_DWORD *)a2 + 14) = v90;
        }
        int v91 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v91 >= *((void *)a2 + 2) || *v91 != 66) {
          continue;
        }
        *((void *)a2 + 1) = v91 + 1;
LABEL_259:
        *((_DWORD *)this + 79) |= 0x80u;
        int v92 = (CoreNavigation::CLP::LogEntry::PrivateData::Timer *)*((void *)this + 8);
        if (!v92) {
          operator new();
        }
        unsigned int v275 = 0;
        uint64_t v93 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v93 >= *((void *)a2 + 2) || *v93 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v275))return 0; {
        }
          }
        else
        {
          unsigned int v275 = *v93;
          *((void *)a2 + 1) = v93 + 1;
        }
        int v94 = *((_DWORD *)a2 + 14);
        int v95 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v94 + 1;
        if (v94 >= v95) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::Timer::MergePartialFromCodedStream(v92, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v96 = *((_DWORD *)a2 + 14);
        BOOL v15 = __OFSUB__(v96, 1);
        int v97 = v96 - 1;
        if (v97 < 0 == v15) {
          *((_DWORD *)a2 + 14) = v97;
        }
        int v98 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v98 >= *((void *)a2 + 2) || *v98 != 74) {
          continue;
        }
        *((void *)a2 + 1) = v98 + 1;
LABEL_273:
        *((_DWORD *)this + 79) |= 0x100u;
        int v99 = (CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel *)*((void *)this + 9);
        if (!v99) {
          operator new();
        }
        unsigned int v275 = 0;
        v100 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v100 >= *((void *)a2 + 2) || *v100 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v275))return 0; {
        }
          }
        else
        {
          unsigned int v275 = *v100;
          *((void *)a2 + 1) = v100 + 1;
        }
        int v101 = *((_DWORD *)a2 + 14);
        int v102 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v101 + 1;
        if (v101 >= v102) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::DigitalElevationModel::MergePartialFromCodedStream(v99, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v103 = *((_DWORD *)a2 + 14);
        BOOL v15 = __OFSUB__(v103, 1);
        int v104 = v103 - 1;
        if (v104 < 0 == v15) {
          *((_DWORD *)a2 + 14) = v104;
        }
        int v105 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v105 >= *((void *)a2 + 2) || *v105 != 82) {
          continue;
        }
        *((void *)a2 + 1) = v105 + 1;
LABEL_287:
        *((_DWORD *)this + 79) |= 0x200u;
        uint64_t v106 = (CoreNavigation::CLP::LogEntry::PrivateData::MapVector *)*((void *)this + 10);
        if (!v106) {
          operator new();
        }
        unsigned int v275 = 0;
        int v107 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v107 >= *((void *)a2 + 2) || *v107 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v275))return 0; {
        }
          }
        else
        {
          unsigned int v275 = *v107;
          *((void *)a2 + 1) = v107 + 1;
        }
        int v108 = *((_DWORD *)a2 + 14);
        int v109 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v108 + 1;
        if (v108 >= v109) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::MapVector::MergePartialFromCodedStream(v106, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v110 = *((_DWORD *)a2 + 14);
        BOOL v15 = __OFSUB__(v110, 1);
        int v111 = v110 - 1;
        if (v111 < 0 == v15) {
          *((_DWORD *)a2 + 14) = v111;
        }
        signed int v112 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v112 >= *((void *)a2 + 2) || *v112 != 90) {
          continue;
        }
        *((void *)a2 + 1) = v112 + 1;
LABEL_301:
        *((_DWORD *)this + 79) |= 0x400u;
        int v113 = (CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus *)*((void *)this + 11);
        if (!v113) {
          operator new();
        }
        unsigned int v275 = 0;
        int v114 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v114 >= *((void *)a2 + 2) || *v114 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v275))return 0; {
        }
          }
        else
        {
          unsigned int v275 = *v114;
          *((void *)a2 + 1) = v114 + 1;
        }
        int v115 = *((_DWORD *)a2 + 14);
        int v116 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v115 + 1;
        if (v115 >= v116) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::DeviceStatus::MergePartialFromCodedStream(v113, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v117 = *((_DWORD *)a2 + 14);
        BOOL v15 = __OFSUB__(v117, 1);
        int v118 = v117 - 1;
        if (v118 < 0 == v15) {
          *((_DWORD *)a2 + 14) = v118;
        }
        int v119 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v119 >= *((void *)a2 + 2) || *v119 != 98) {
          continue;
        }
        *((void *)a2 + 1) = v119 + 1;
LABEL_315:
        *((_DWORD *)this + 79) |= 0x800u;
        uint64_t v120 = (CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment *)*((void *)this + 12);
        if (!v120) {
          operator new();
        }
        unsigned int v275 = 0;
        int v121 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v121 >= *((void *)a2 + 2) || *v121 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v275))return 0; {
        }
          }
        else
        {
          unsigned int v275 = *v121;
          *((void *)a2 + 1) = v121 + 1;
        }
        int v122 = *((_DWORD *)a2 + 14);
        int v123 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v122 + 1;
        if (v122 >= v123) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::SignalEnvironment::MergePartialFromCodedStream(v120, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v124 = *((_DWORD *)a2 + 14);
        BOOL v15 = __OFSUB__(v124, 1);
        int v125 = v124 - 1;
        if (v125 < 0 == v15) {
          *((_DWORD *)a2 + 14) = v125;
        }
        int v126 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v126 >= *((void *)a2 + 2) || *v126 != 106) {
          continue;
        }
        *((void *)a2 + 1) = v126 + 1;
LABEL_329:
        *((_DWORD *)this + 79) |= 0x1000u;
        v127 = (CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReportCallbackContents *)*((void *)this + 13);
        if (!v127) {
          operator new();
        }
        unsigned int v275 = 0;
        v128 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v128 >= *((void *)a2 + 2) || *v128 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v275))return 0; {
        }
          }
        else
        {
          unsigned int v275 = *v128;
          *((void *)a2 + 1) = v128 + 1;
        }
        int v129 = *((_DWORD *)a2 + 14);
        int v130 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v129 + 1;
        if (v129 >= v130) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::MeasurementReportCallbackContents::MergePartialFromCodedStream(v127, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v131 = *((_DWORD *)a2 + 14);
        BOOL v15 = __OFSUB__(v131, 1);
        int v132 = v131 - 1;
        if (v132 < 0 == v15) {
          *((_DWORD *)a2 + 14) = v132;
        }
        int v133 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v133 >= *((void *)a2 + 2) || *v133 != 114) {
          continue;
        }
        *((void *)a2 + 1) = v133 + 1;
LABEL_343:
        *((_DWORD *)this + 79) |= 0x2000u;
        int v134 = (CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer *)*((void *)this + 14);
        if (!v134) {
          operator new();
        }
        unsigned int v275 = 0;
        int v135 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v135 >= *((void *)a2 + 2) || *v135 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v275))return 0; {
        }
          }
        else
        {
          unsigned int v275 = *v135;
          *((void *)a2 + 1) = v135 + 1;
        }
        int v136 = *((_DWORD *)a2 + 14);
        int v137 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v136 + 1;
        if (v136 >= v137) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::Magnetometer::MergePartialFromCodedStream(v134, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v138 = *((_DWORD *)a2 + 14);
        BOOL v15 = __OFSUB__(v138, 1);
        int v139 = v138 - 1;
        if (v139 < 0 == v15) {
          *((_DWORD *)a2 + 14) = v139;
        }
        int v140 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v140 >= *((void *)a2 + 2) || *v140 != 122) {
          continue;
        }
        *((void *)a2 + 1) = v140 + 1;
LABEL_357:
        *((_DWORD *)this + 79) |= 0x4000u;
        unsigned int v141 = (CoreNavigation::CLP::LogEntry::PrivateData::Reset *)*((void *)this + 15);
        if (!v141) {
          operator new();
        }
        unsigned int v275 = 0;
        int v142 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v142 >= *((void *)a2 + 2) || *v142 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v275))return 0; {
        }
          }
        else
        {
          unsigned int v275 = *v142;
          *((void *)a2 + 1) = v142 + 1;
        }
        int v143 = *((_DWORD *)a2 + 14);
        int v144 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v143 + 1;
        if (v143 >= v144) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::Reset::MergePartialFromCodedStream(v141, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v145 = *((_DWORD *)a2 + 14);
        BOOL v15 = __OFSUB__(v145, 1);
        int v146 = v145 - 1;
        if (v146 < 0 == v15) {
          *((_DWORD *)a2 + 14) = v146;
        }
        signed int v147 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v147 <= 1 || *v147 != 130 || v147[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v147 + 2;
LABEL_372:
        *((_DWORD *)this + 79) |= 0x8000u;
        int v148 = (CoreNavigation::CLP::LogEntry::PrivateData::StepCount *)*((void *)this + 16);
        if (!v148) {
          operator new();
        }
        unsigned int v275 = 0;
        int v149 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v149 >= *((void *)a2 + 2) || *v149 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v275))return 0; {
        }
          }
        else
        {
          unsigned int v275 = *v149;
          *((void *)a2 + 1) = v149 + 1;
        }
        int v150 = *((_DWORD *)a2 + 14);
        int v151 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v150 + 1;
        if (v150 >= v151) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::StepCount::MergePartialFromCodedStream(v148, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v152 = *((_DWORD *)a2 + 14);
        BOOL v15 = __OFSUB__(v152, 1);
        int v153 = v152 - 1;
        if (v153 < 0 == v15) {
          *((_DWORD *)a2 + 14) = v153;
        }
        unsigned int v154 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v154 <= 1 || *v154 != 154 || v154[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v154 + 2;
LABEL_387:
        *((_DWORD *)this + 79) |= 0x10000u;
        int v155 = (CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample *)*((void *)this + 17);
        if (!v155) {
          operator new();
        }
        unsigned int v275 = 0;
        uint64_t v156 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v156 >= *((void *)a2 + 2) || *v156 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v275))return 0; {
        }
          }
        else
        {
          unsigned int v275 = *v156;
          *((void *)a2 + 1) = v156 + 1;
        }
        int v157 = *((_DWORD *)a2 + 14);
        int v158 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v157 + 1;
        if (v157 >= v158) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotionSample::MergePartialFromCodedStream(v155, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v159 = *((_DWORD *)a2 + 14);
        BOOL v15 = __OFSUB__(v159, 1);
        int v160 = v159 - 1;
        if (v160 < 0 == v15) {
          *((_DWORD *)a2 + 14) = v160;
        }
        int v161 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v161 <= 1 || *v161 != 170 || v161[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v161 + 2;
LABEL_402:
        *((_DWORD *)this + 79) |= 0x20000u;
        int v162 = (CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification *)*((void *)this + 18);
        if (!v162) {
          operator new();
        }
        unsigned int v275 = 0;
        int v163 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v163 >= *((void *)a2 + 2) || *v163 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v275))return 0; {
        }
          }
        else
        {
          unsigned int v275 = *v163;
          *((void *)a2 + 1) = v163 + 1;
        }
        int v164 = *((_DWORD *)a2 + 14);
        int v165 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v164 + 1;
        if (v164 >= v165) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TunnelBridgeNotification::MergePartialFromCodedStream(v162, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v166 = *((_DWORD *)a2 + 14);
        BOOL v15 = __OFSUB__(v166, 1);
        int v167 = v166 - 1;
        if (v167 < 0 == v15) {
          *((_DWORD *)a2 + 14) = v167;
        }
        uint64_t v168 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v168 <= 1 || *v168 != 178 || v168[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v168 + 2;
LABEL_417:
        *((_DWORD *)this + 79) |= 0x40000u;
        int v169 = (CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification *)*((void *)this + 19);
        if (!v169) {
          operator new();
        }
        unsigned int v275 = 0;
        signed int v170 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v170 >= *((void *)a2 + 2) || *v170 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v275))return 0; {
        }
          }
        else
        {
          unsigned int v275 = *v170;
          *((void *)a2 + 1) = v170 + 1;
        }
        int v171 = *((_DWORD *)a2 + 14);
        int v172 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v171 + 1;
        if (v171 >= v172) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::WifiNotification::MergePartialFromCodedStream(v169, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v173 = *((_DWORD *)a2 + 14);
        BOOL v15 = __OFSUB__(v173, 1);
        int v174 = v173 - 1;
        if (v174 < 0 == v15) {
          *((_DWORD *)a2 + 14) = v174;
        }
        int v175 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v175 <= 1 || *v175 != 186 || v175[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v175 + 2;
LABEL_432:
        *((_DWORD *)this + 79) |= 0x80000u;
        unsigned int v176 = (CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint *)*((void *)this + 20);
        if (!v176) {
          operator new();
        }
        unsigned int v275 = 0;
        int v177 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v177 >= *((void *)a2 + 2) || *v177 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v275))return 0; {
        }
          }
        else
        {
          unsigned int v275 = *v177;
          *((void *)a2 + 1) = v177 + 1;
        }
        int v178 = *((_DWORD *)a2 + 14);
        int v179 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v178 + 1;
        if (v178 >= v179) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::TunnelEndPoint::MergePartialFromCodedStream(v176, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v180 = *((_DWORD *)a2 + 14);
        BOOL v15 = __OFSUB__(v180, 1);
        int v181 = v180 - 1;
        if (v181 < 0 == v15) {
          *((_DWORD *)a2 + 14) = v181;
        }
        signed int v182 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v182 <= 1 || *v182 != 194 || v182[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v182 + 2;
LABEL_447:
        *((_DWORD *)this + 79) |= 0x100000u;
        int v183 = (CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification *)*((void *)this + 21);
        if (!v183) {
          operator new();
        }
        unsigned int v275 = 0;
        int v184 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v184 >= *((void *)a2 + 2) || *v184 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v275))return 0; {
        }
          }
        else
        {
          unsigned int v275 = *v184;
          *((void *)a2 + 1) = v184 + 1;
        }
        int v185 = *((_DWORD *)a2 + 14);
        int v186 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v185 + 1;
        if (v185 >= v186) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::AccessoryVehicleSpeedNotification::MergePartialFromCodedStream(v183, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v187 = *((_DWORD *)a2 + 14);
        BOOL v15 = __OFSUB__(v187, 1);
        int v188 = v187 - 1;
        if (v188 < 0 == v15) {
          *((_DWORD *)a2 + 14) = v188;
        }
        v189 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v189 <= 1 || *v189 != 202 || v189[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v189 + 2;
LABEL_462:
        *((_DWORD *)this + 79) |= 0x200000u;
        v190 = (CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint *)*((void *)this + 22);
        if (!v190) {
          operator new();
        }
        unsigned int v275 = 0;
        v191 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v191 >= *((void *)a2 + 2) || *v191 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v275))return 0; {
        }
          }
        else
        {
          unsigned int v275 = *v191;
          *((void *)a2 + 1) = v191 + 1;
        }
        int v192 = *((_DWORD *)a2 + 14);
        int v193 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v192 + 1;
        if (v192 >= v193) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::MapMatchingRouteHint::MergePartialFromCodedStream(v190, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v194 = *((_DWORD *)a2 + 14);
        BOOL v15 = __OFSUB__(v194, 1);
        int v195 = v194 - 1;
        if (v195 < 0 == v15) {
          *((_DWORD *)a2 + 14) = v195;
        }
        v196 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v196 <= 1 || *v196 != 210 || v196[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v196 + 2;
LABEL_477:
        *((_DWORD *)this + 79) |= 0x400000u;
        v197 = (CoreNavigation::CLP::LogEntry::PrivateData::Compass *)*((void *)this + 23);
        if (!v197) {
          operator new();
        }
        unsigned int v275 = 0;
        v198 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v198 >= *((void *)a2 + 2) || *v198 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v275))return 0; {
        }
          }
        else
        {
          unsigned int v275 = *v198;
          *((void *)a2 + 1) = v198 + 1;
        }
        int v199 = *((_DWORD *)a2 + 14);
        int v200 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v199 + 1;
        if (v199 >= v200) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::Compass::MergePartialFromCodedStream(v197, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v201 = *((_DWORD *)a2 + 14);
        BOOL v15 = __OFSUB__(v201, 1);
        int v202 = v201 - 1;
        if (v202 < 0 == v15) {
          *((_DWORD *)a2 + 14) = v202;
        }
        v203 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v203 <= 1 || *v203 != 218 || v203[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v203 + 2;
LABEL_492:
        *((_DWORD *)this + 79) |= 0x800000u;
        v204 = (CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion *)*((void *)this + 24);
        if (!v204) {
          operator new();
        }
        unsigned int v275 = 0;
        v205 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v205 >= *((void *)a2 + 2) || *v205 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v275))return 0; {
        }
          }
        else
        {
          unsigned int v275 = *v205;
          *((void *)a2 + 1) = v205 + 1;
        }
        int v206 = *((_DWORD *)a2 + 14);
        int v207 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v206 + 1;
        if (v206 >= v207) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::DeviceMotion::MergePartialFromCodedStream(v204, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v208 = *((_DWORD *)a2 + 14);
        BOOL v15 = __OFSUB__(v208, 1);
        int v209 = v208 - 1;
        if (v209 < 0 == v15) {
          *((_DWORD *)a2 + 14) = v209;
        }
        v210 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v210 <= 1 || *v210 != 226 || v210[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v210 + 2;
LABEL_507:
        *((_DWORD *)this + 79) |= 0x1000000u;
        v211 = (CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction *)*((void *)this + 25);
        if (!v211) {
          operator new();
        }
        unsigned int v275 = 0;
        v212 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v212 >= *((void *)a2 + 2) || *v212 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v275))return 0; {
        }
          }
        else
        {
          unsigned int v275 = *v212;
          *((void *)a2 + 1) = v212 + 1;
        }
        int v213 = *((_DWORD *)a2 + 14);
        int v214 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v213 + 1;
        if (v213 >= v214) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::GnssAvailabilityPrediction::MergePartialFromCodedStream(v211, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v215 = *((_DWORD *)a2 + 14);
        BOOL v15 = __OFSUB__(v215, 1);
        int v216 = v215 - 1;
        if (v216 < 0 == v15) {
          *((_DWORD *)a2 + 14) = v216;
        }
        v217 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v217 <= 1 || *v217 != 234 || v217[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v217 + 2;
LABEL_522:
        *((_DWORD *)this + 79) |= 0x2000000u;
        v218 = (CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData *)*((void *)this + 26);
        if (!v218) {
          operator new();
        }
        unsigned int v275 = 0;
        v219 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v219 >= *((void *)a2 + 2) || *v219 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v275))return 0; {
        }
          }
        else
        {
          unsigned int v275 = *v219;
          *((void *)a2 + 1) = v219 + 1;
        }
        int v220 = *((_DWORD *)a2 + 14);
        int v221 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v220 + 1;
        if (v220 >= v221) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::GEOMapBuildingData::MergePartialFromCodedStream(v218, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v222 = *((_DWORD *)a2 + 14);
        BOOL v15 = __OFSUB__(v222, 1);
        int v223 = v222 - 1;
        if (v223 < 0 == v15) {
          *((_DWORD *)a2 + 14) = v223;
        }
        v224 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v224 <= 1 || *v224 != 242 || v224[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v224 + 2;
LABEL_537:
        *((_DWORD *)this + 79) |= 0x4000000u;
        v225 = (CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData *)*((void *)this + 27);
        if (!v225) {
          operator new();
        }
        unsigned int v275 = 0;
        v226 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v226 >= *((void *)a2 + 2) || *v226 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v275))return 0; {
        }
          }
        else
        {
          unsigned int v275 = *v226;
          *((void *)a2 + 1) = v226 + 1;
        }
        int v227 = *((_DWORD *)a2 + 14);
        int v228 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v227 + 1;
        if (v227 >= v228) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::GEOMapTropicalSavannaData::MergePartialFromCodedStream(v225, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v229 = *((_DWORD *)a2 + 14);
        BOOL v15 = __OFSUB__(v229, 1);
        int v230 = v229 - 1;
        if (v230 < 0 == v15) {
          *((_DWORD *)a2 + 14) = v230;
        }
        v231 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v231 <= 1 || *v231 != 250 || v231[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v231 + 2;
LABEL_552:
        *((_DWORD *)this + 79) |= 0x8000000u;
        v232 = (CoreNavigation::CLP::LogEntry::PrivateData::WatchState *)*((void *)this + 28);
        if (!v232) {
          operator new();
        }
        unsigned int v275 = 0;
        v233 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v233 >= *((void *)a2 + 2) || *v233 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v275))return 0; {
        }
          }
        else
        {
          unsigned int v275 = *v233;
          *((void *)a2 + 1) = v233 + 1;
        }
        int v234 = *((_DWORD *)a2 + 14);
        int v235 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v234 + 1;
        if (v234 >= v235) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::WatchState::MergePartialFromCodedStream(v232, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v236 = *((_DWORD *)a2 + 14);
        BOOL v15 = __OFSUB__(v236, 1);
        int v237 = v236 - 1;
        if (v237 < 0 == v15) {
          *((_DWORD *)a2 + 14) = v237;
        }
        v238 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v238 <= 1 || *v238 != 130 || v238[1] != 2) {
          continue;
        }
        *((void *)a2 + 1) = v238 + 2;
LABEL_567:
        *((_DWORD *)this + 79) |= 0x10000000u;
        v239 = (CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator *)*((void *)this + 29);
        if (!v239) {
          operator new();
        }
        unsigned int v275 = 0;
        v240 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v240 >= *((void *)a2 + 2) || *v240 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v275))return 0; {
        }
          }
        else
        {
          unsigned int v275 = *v240;
          *((void *)a2 + 1) = v240 + 1;
        }
        int v241 = *((_DWORD *)a2 + 14);
        int v242 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v241 + 1;
        if (v241 >= v242) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::MotionStateMediator::MergePartialFromCodedStream(v239, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v243 = *((_DWORD *)a2 + 14);
        BOOL v15 = __OFSUB__(v243, 1);
        int v244 = v243 - 1;
        if (v244 < 0 == v15) {
          *((_DWORD *)a2 + 14) = v244;
        }
        v245 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v245 <= 1 || *v245 != 138 || v245[1] != 2) {
          continue;
        }
        *((void *)a2 + 1) = v245 + 2;
LABEL_582:
        *((_DWORD *)this + 79) |= 0x20000000u;
        v246 = (CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit *)*((void *)this + 30);
        if (!v246) {
          operator new();
        }
        unsigned int v275 = 0;
        v247 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v247 >= *((void *)a2 + 2) || *v247 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v275))return 0; {
        }
          }
        else
        {
          unsigned int v275 = *v247;
          *((void *)a2 + 1) = v247 + 1;
        }
        int v248 = *((_DWORD *)a2 + 14);
        int v249 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v248 + 1;
        if (v248 >= v249) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::RoutineVisit::MergePartialFromCodedStream(v246, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v250 = *((_DWORD *)a2 + 14);
        BOOL v15 = __OFSUB__(v250, 1);
        int v251 = v250 - 1;
        if (v251 < 0 == v15) {
          *((_DWORD *)a2 + 14) = v251;
        }
        v252 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v252 <= 1 || *v252 != 146 || v252[1] != 2) {
          continue;
        }
        *((void *)a2 + 1) = v252 + 2;
LABEL_597:
        *((_DWORD *)this + 79) |= 0x40000000u;
        v253 = (CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents *)*((void *)this + 31);
        if (!v253) {
          operator new();
        }
        unsigned int v275 = 0;
        v254 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v254 >= *((void *)a2 + 2) || *v254 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v275))return 0; {
        }
          }
        else
        {
          unsigned int v275 = *v254;
          *((void *)a2 + 1) = v254 + 1;
        }
        int v255 = *((_DWORD *)a2 + 14);
        int v256 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v255 + 1;
        if (v255 >= v256) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::RavenGnssAssistanceFile::AssistanceFileContents::MergePartialFromCodedStream(v253, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v257 = *((_DWORD *)a2 + 14);
        BOOL v15 = __OFSUB__(v257, 1);
        int v258 = v257 - 1;
        if (v258 < 0 == v15) {
          *((_DWORD *)a2 + 14) = v258;
        }
        v259 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v259 <= 1 || *v259 != 154 || v259[1] != 2) {
          continue;
        }
        *((void *)a2 + 1) = v259 + 2;
LABEL_612:
        *((_DWORD *)this + 79) |= 0x80000000;
        v260 = (CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate *)*((void *)this + 32);
        if (!v260) {
          operator new();
        }
        unsigned int v275 = 0;
        v261 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v261 >= *((void *)a2 + 2) || *v261 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v275))return 0; {
        }
          }
        else
        {
          unsigned int v275 = *v261;
          *((void *)a2 + 1) = v261 + 1;
        }
        int v262 = *((_DWORD *)a2 + 14);
        int v263 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v262 + 1;
        if (v262 >= v263) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::OutdoorUpdate::MergePartialFromCodedStream(v260, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v264 = *((_DWORD *)a2 + 14);
        BOOL v15 = __OFSUB__(v264, 1);
        int v265 = v264 - 1;
        if (v265 < 0 == v15) {
          *((_DWORD *)a2 + 14) = v265;
        }
        v266 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v266 <= 1 || *v266 != 194 || v266[1] != 62) {
          continue;
        }
        *((void *)a2 + 1) = v266 + 2;
LABEL_627:
        *((_DWORD *)this + 80) |= 1u;
        v267 = (CoreNavigation::CLP::LogEntry::InternalToolData::InternalToolDataCapture *)*((void *)this + 33);
        if (!v267) {
          operator new();
        }
        unsigned int v275 = 0;
        v268 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v268 >= *((void *)a2 + 2) || *v268 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v275))return 0; {
        }
          }
        else
        {
          unsigned int v275 = *v268;
          *((void *)a2 + 1) = v268 + 1;
        }
        int v269 = *((_DWORD *)a2 + 14);
        int v270 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v269 + 1;
        if (v269 >= v270) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolData::InternalToolDataCapture::MergePartialFromCodedStream(v267, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v271 = *((_DWORD *)a2 + 14);
        BOOL v15 = __OFSUB__(v271, 1);
        int v272 = v271 - 1;
        if (v272 < 0 == v15) {
          *((_DWORD *)a2 + 14) = v272;
        }
        v273 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v273 <= 1 || *v273 != 242 || v273[1] != 62) {
          continue;
        }
        *((void *)a2 + 1) = v273 + 2;
LABEL_15:
        *((_DWORD *)this + 80) |= 2u;
        uint64_t v10 = (CoreNavigation::CLP::LogEntry::Raven::LogEntry *)*((void *)this + 34);
        if (!v10) {
          operator new();
        }
        unsigned int v275 = 0;
        uint64_t v11 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v11 >= *((void *)a2 + 2) || *v11 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v275))return 0; {
        }
          }
        else
        {
          unsigned int v275 = *v11;
          *((void *)a2 + 1) = v11 + 1;
        }
        int v12 = *((_DWORD *)a2 + 14);
        int v13 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v12 + 1;
        if (v12 >= v13) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::LogEntry::MergePartialFromCodedStream(v10, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v14 = *((_DWORD *)a2 + 14);
        BOOL v15 = __OFSUB__(v14, 1);
        int v16 = v14 - 1;
        if (v16 < 0 == v15) {
          *((_DWORD *)a2 + 14) = v16;
        }
        uint64_t v17 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v17 <= 1 || *v17 != 250 || v17[1] != 62) {
          continue;
        }
        *((void *)a2 + 1) = v17 + 2;
LABEL_106:
        *((_DWORD *)this + 80) |= 4u;
        uint64_t v18 = (CoreNavigation::CLP::LogEntry::Vision::LogEntry *)*((void *)this + 35);
        if (!v18) {
          operator new();
        }
        unsigned int v275 = 0;
        uint64_t v19 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v19 >= *((void *)a2 + 2) || *v19 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v275))return 0; {
        }
          }
        else
        {
          unsigned int v275 = *v19;
          *((void *)a2 + 1) = v19 + 1;
        }
        int v20 = *((_DWORD *)a2 + 14);
        int v21 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v20 + 1;
        if (v20 >= v21) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Vision::LogEntry::MergePartialFromCodedStream(v18, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v22 = *((_DWORD *)a2 + 14);
        BOOL v15 = __OFSUB__(v22, 1);
        int v23 = v22 - 1;
        if (v23 < 0 == v15) {
          *((_DWORD *)a2 + 14) = v23;
        }
        uint64_t v24 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v24 <= 1 || *v24 != 146 || v24[1] != 63) {
          continue;
        }
        *((void *)a2 + 1) = v24 + 2;
LABEL_121:
        *((_DWORD *)this + 80) |= 8u;
        uint64_t v25 = (CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry *)*((void *)this + 36);
        if (!v25) {
          operator new();
        }
        unsigned int v275 = 0;
        uint64_t v26 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v26 >= *((void *)a2 + 2) || *v26 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v275))return 0; {
        }
          }
        else
        {
          unsigned int v275 = *v26;
          *((void *)a2 + 1) = v26 + 1;
        }
        int v27 = *((_DWORD *)a2 + 14);
        int v28 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v27 + 1;
        if (v27 >= v28) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::MergePartialFromCodedStream(v25, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v29 = *((_DWORD *)a2 + 14);
        BOOL v15 = __OFSUB__(v29, 1);
        int v30 = v29 - 1;
        if (v30 < 0 == v15) {
          *((_DWORD *)a2 + 14) = v30;
        }
        uint64_t v31 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v31 <= 1 || *v31 != 178 || v31[1] != 63) {
          continue;
        }
        *((void *)a2 + 1) = v31 + 2;
LABEL_136:
        *((_DWORD *)this + 80) |= 0x10u;
        uint64_t v32 = (CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry *)*((void *)this + 37);
        if (!v32) {
          operator new();
        }
        unsigned int v275 = 0;
        uint64_t v33 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v33 >= *((void *)a2 + 2) || *v33 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v275))return 0; {
        }
          }
        else
        {
          unsigned int v275 = *v33;
          *((void *)a2 + 1) = v33 + 1;
        }
        int v34 = *((_DWORD *)a2 + 14);
        int v35 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v34 + 1;
        if (v34 >= v35) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry::MergePartialFromCodedStream(v32, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v36 = *((_DWORD *)a2 + 14);
        BOOL v15 = __OFSUB__(v36, 1);
        int v37 = v36 - 1;
        if (v37 < 0 == v15) {
          *((_DWORD *)a2 + 14) = v37;
        }
        uint64_t v38 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v38 <= 1 || *v38 != 194 || v38[1] != 63) {
          continue;
        }
        *((void *)a2 + 1) = v38 + 2;
LABEL_151:
        *((_DWORD *)this + 80) |= 0x20u;
        uint64_t v39 = (CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry *)*((void *)this + 38);
        if (!v39) {
          operator new();
        }
        unsigned int v275 = 0;
        int v40 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v40 >= *((void *)a2 + 2) || *v40 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v275))return 0; {
        }
          }
        else
        {
          unsigned int v275 = *v40;
          *((void *)a2 + 1) = v40 + 1;
        }
        int v41 = *((_DWORD *)a2 + 14);
        int v42 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v41 + 1;
        if (v41 >= v42) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::MergePartialFromCodedStream(v39, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v43 = *((_DWORD *)a2 + 14);
        BOOL v15 = __OFSUB__(v43, 1);
        int v44 = v43 - 1;
        if (v44 < 0 == v15) {
          *((_DWORD *)a2 + 14) = v44;
        }
        if (*((void *)a2 + 1) != *((void *)a2 + 2)
          || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
        {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        break;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_175;
        }
        goto LABEL_93;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_189;
        }
        goto LABEL_93;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_203;
        }
        goto LABEL_93;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_217;
        }
        goto LABEL_93;
      case 6u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_231;
        }
        goto LABEL_93;
      case 7u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_245;
        }
        goto LABEL_93;
      case 8u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_259;
        }
        goto LABEL_93;
      case 9u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_273;
        }
        goto LABEL_93;
      case 0xAu:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_287;
        }
        goto LABEL_93;
      case 0xBu:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_301;
        }
        goto LABEL_93;
      case 0xCu:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_315;
        }
        goto LABEL_93;
      case 0xDu:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_329;
        }
        goto LABEL_93;
      case 0xEu:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_343;
        }
        goto LABEL_93;
      case 0xFu:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_357;
        }
        goto LABEL_93;
      case 0x10u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_372;
        }
        goto LABEL_93;
      case 0x11u:
      case 0x12u:
      case 0x14u:
LABEL_23:
        int v7 = TagFallback & 7;
        goto LABEL_93;
      case 0x13u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_387;
        }
        goto LABEL_93;
      case 0x15u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_402;
        }
        goto LABEL_93;
      case 0x16u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_417;
        }
        goto LABEL_93;
      case 0x17u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_432;
        }
        goto LABEL_93;
      case 0x18u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_447;
        }
        goto LABEL_93;
      case 0x19u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_462;
        }
        goto LABEL_93;
      case 0x1Au:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_477;
        }
        goto LABEL_93;
      case 0x1Bu:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_492;
        }
        goto LABEL_93;
      case 0x1Cu:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_507;
        }
        goto LABEL_93;
      case 0x1Du:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_522;
        }
        goto LABEL_93;
      case 0x1Eu:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_537;
        }
        goto LABEL_93;
      case 0x1Fu:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_552;
        }
        goto LABEL_93;
      case 0x20u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_567;
        }
        goto LABEL_93;
      case 0x21u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_582;
        }
        goto LABEL_93;
      case 0x22u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_597;
        }
        goto LABEL_93;
      case 0x23u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_612;
        }
LABEL_93:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
      default:
        switch(v6)
        {
          case 0x3EEu:
            int v7 = TagFallback & 7;
            if (v7 == 2) {
              goto LABEL_15;
            }
            goto LABEL_93;
          case 0x3EFu:
            int v7 = TagFallback & 7;
            if (v7 == 2) {
              goto LABEL_106;
            }
            goto LABEL_93;
          case 0x3F0u:
          case 0x3F1u:
          case 0x3F3u:
          case 0x3F4u:
          case 0x3F5u:
          case 0x3F7u:
            goto LABEL_23;
          case 0x3F2u:
            int v7 = TagFallback & 7;
            if (v7 == 2) {
              goto LABEL_121;
            }
            goto LABEL_93;
          case 0x3F6u:
            int v7 = TagFallback & 7;
            if (v7 == 2) {
              goto LABEL_136;
            }
            goto LABEL_93;
          case 0x3F8u:
            int v7 = TagFallback & 7;
            if (v7 == 2) {
              goto LABEL_151;
            }
            goto LABEL_93;
          default:
            if (v6 != 1000) {
              goto LABEL_23;
            }
            int v7 = TagFallback & 7;
            if (v7 == 2) {
              goto LABEL_627;
            }
            goto LABEL_93;
        }
    }
    return result;
  }
}