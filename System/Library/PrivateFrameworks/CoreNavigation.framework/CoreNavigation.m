uint64_t cnlogging::details::CNProtobufStreamChecksum::adler32(void *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v3;
  unsigned __int8 *v4;
  unsigned int v5;
  int v6;

  if (!a3) {
    return 1;
  }
  v3 = 0;
  v4 = (unsigned __int8 *)(*a1 + a2);
  v5 = 1;
  do
  {
    v6 = *v4++;
    v5 = (v5 + v6) % 0xFFF1;
    v3 = (v5 + v3) % 0xFFF1;
    --a3;
  }
  while (a3);
  return v5 | (v3 << 16);
}

cntransformation::CNRigidTransformation *cntransformation::CNRigidTransformation::CNRigidTransformation(cntransformation::CNRigidTransformation *this)
{
  *(void *)this = 0;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0x3FF0000000000000;
  v2 = (char *)this + 32;
  *((void *)this + 7) = 0x100000003;
  *((void *)this + 4) = &unk_1EDD18D98;
  *((void *)this + 8) = (char *)this + 72;
  *(_OWORD *)((char *)this + 40) = xmmword_18E1F6F60;
  sub_18DFE2CC8((uint64_t)this + 32, 0.0);
  *((void *)this + 15) = 0x300000003;
  *((void *)this + 12) = &unk_1EDD18EE8;
  *((void *)this + 16) = (char *)this + 136;
  *(_OWORD *)((char *)this + 104) = xmmword_18E1F0010;
  sub_18DFE2CC8((uint64_t)this + 96, 0.0);
  *((void *)this + 29) = 0x300000003;
  *((void *)this + 26) = &unk_1EDD18EE8;
  *((void *)this + 30) = (char *)this + 248;
  *(_OWORD *)((char *)this + 216) = xmmword_18E1F0010;
  sub_18DFE2CC8((uint64_t)this + 208, 0.0);
  *((void *)this + 43) = 0x300000003;
  *((void *)this + 40) = &unk_1EDD18EE8;
  *((void *)this + 44) = (char *)this + 360;
  *(_OWORD *)((char *)this + 328) = xmmword_18E1F0010;
  sub_18DFE2CC8((uint64_t)this + 320, 0.0);
  *((unsigned char *)this + 432) = 0;
  *(void *)this = 0;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0x3FF0000000000000;
  uint64_t v6 = 0x100000003;
  v4 = &unk_1EDD18D98;
  v7 = v8;
  long long v5 = xmmword_18E1F6F60;
  sub_18DFE2CC8((uint64_t)&v4, 0.0);
  sub_18DFE2F24((uint64_t)v2, (uint64_t)&v4);
  uint64_t v6 = 0x300000003;
  v4 = &unk_1EDD18EE8;
  v7 = v8;
  long long v5 = xmmword_18E1F0010;
  sub_18DFE2CC8((uint64_t)&v4, 0.0);
  sub_18DFE2F24((uint64_t)this + 96, (uint64_t)&v4);
  uint64_t v6 = 0x300000003;
  v4 = &unk_1EDD18EE8;
  v7 = v8;
  long long v5 = xmmword_18E1F0010;
  sub_18DFE2CC8((uint64_t)&v4, 0.0);
  sub_18DFE2F24((uint64_t)this + 208, (uint64_t)&v4);
  uint64_t v6 = 0x300000003;
  v4 = &unk_1EDD18EE8;
  v7 = v8;
  long long v5 = xmmword_18E1F0010;
  sub_18DFE2CC8((uint64_t)&v4, 0.0);
  sub_18DFE2F24((uint64_t)this + 320, (uint64_t)&v4);
  *((unsigned char *)this + 432) = 0;
  return this;
}

void sub_18DEDC18C(_Unwind_Exception *a1)
{
  void *v4 = &unk_1EDD17478;
  void *v3 = &unk_1EDD17478;
  void *v2 = &unk_1EDD17478;
  void *v1 = &unk_1EDD17478;
  _Unwind_Resume(a1);
}

uint64_t *CNTimeSpan::SetTimeSpan(uint64_t *this, uint64_t a2, int8x16_t a3, int8x16_t a4)
{
  if ((a3.i64[0] & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000 && fabs(*(double *)a3.i64) == INFINITY)
  {
    if (a2 == 0x8000000000000000 && *(double *)a3.i64 > 0.0 || a2 == 0x7FFFFFFFFFFFFFFFLL && *(double *)a3.i64 < 0.0)
    {
      *this = 0;
      this[1] = 0x7FF8000000000000;
      return this;
    }
    *this = 0;
    goto LABEL_25;
  }
  if (*(double *)a3.i64 < -9.22337204e18 || *(double *)a3.i64 > 9.22337204e18)
  {
    *this = 0;
    a4.i64[0] = 0x7FF0000000000000;
    v5.f64[0] = NAN;
    v5.f64[1] = NAN;
    a3.i64[0] = vbslq_s8((int8x16_t)vnegq_f64(v5), a4, a3).u64[0];
LABEL_25:
    this[1] = a3.i64[0];
    return this;
  }
  *(double *)a4.i64 = (double)(uint64_t)trunc(*(double *)a3.i64);
  uint64_t v6 = a2 + (uint64_t)*(double *)a3.i64;
  *this = v6;
  if (__OFADD__(a2, (uint64_t)*(double *)a3.i64))
  {
    *this = 0;
    a3.i64[0] = 0x7FF0000000000000;
    v7.f64[0] = NAN;
    v7.f64[1] = NAN;
    a3.i64[0] = vbslq_s8((int8x16_t)vnegq_f64(v7), a3, a4).u64[0];
    goto LABEL_25;
  }
  double v8 = *(double *)a3.i64 - *(double *)a4.i64;
  *((double *)this + 1) = v8;
  if (v6 >= 1 && v8 < 0.0)
  {
    *this = v6 - 1;
    double v9 = 1.0;
LABEL_22:
    *((double *)this + 1) = v8 + v9;
    return this;
  }
  if (v6 < 0 && v8 > 0.0)
  {
    *this = v6 + 1;
    double v9 = -1.0;
    goto LABEL_22;
  }
  return this;
}

{
  BOOL v4;
  double v5;
  uint64_t v6;

  if ((a2 & 0x8000000000000000) == 0) {
    return CNTimeSpan::SetTimeSpan(this, a2, a3, a4);
  }
  v4 = *(double *)a3.i64 < 0.0;
  float64x2_t v5 = fabs(*(double *)a3.i64);
  uint64_t v6 = 0x7FF0000000000000;
  if (v4 && v5 == INFINITY) {
    uint64_t v6 = 0x7FF8000000000000;
  }
  *this = 0;
  this[1] = v6;
  return this;
}

std::chrono::steady_clock::time_point *cnconsole::ProgressBar::ProgressBar(std::chrono::steady_clock::time_point *this)
{
  this[4].__d_.__rep_ = 0;
  this[1].__d_.__rep_ = 0;
  this[2].__d_.__rep_ = 0;
  this->__d_.__rep_ = 0;
  v2.__d_.__rep_ = std::chrono::steady_clock::now().__d_.__rep_;
  this->__d_.__rep_ = v2.__d_.__rep_;
  this[1].__d_.__rep_ = v2.__d_.__rep_;
  this[2].__d_.__rep_ = v2.__d_.__rep_;
  return this;
}

{
  std::chrono::steady_clock::time_point v2;

  this[4].__d_.__rep_ = 0;
  this[1].__d_.__rep_ = 0;
  this[2].__d_.__rep_ = 0;
  this->__d_.__rep_ = 0;
  v2.__d_.__rep_ = std::chrono::steady_clock::now().__d_.__rep_;
  this->__d_.__rep_ = v2.__d_.__rep_;
  this[1].__d_.__rep_ = v2.__d_.__rep_;
  this[2].__d_.__rep_ = v2.__d_.__rep_;
  return this;
}

std::chrono::steady_clock::time_point *cnconsole::ProgressBar::ProgressBar(std::chrono::steady_clock::time_point *this, double *a2)
{
  this->__d_.__rep_ = 0;
  this[1].__d_.__rep_ = 0;
  this[2].__d_.__rep_ = 0;
  this[4].__d_.__rep_ = *(std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep *)a2;
  v3.__d_.__rep_ = std::chrono::steady_clock::now().__d_.__rep_;
  this->__d_.__rep_ = v3.__d_.__rep_;
  this[1].__d_.__rep_ = v3.__d_.__rep_;
  this[2].__d_.__rep_ = v3.__d_.__rep_;
  return this;
}

{
  std::chrono::steady_clock::time_point v3;

  this->__d_.__rep_ = 0;
  this[1].__d_.__rep_ = 0;
  this[2].__d_.__rep_ = 0;
  this[4].__d_.__rep_ = *(std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep *)a2;
  v3.__d_.__rep_ = std::chrono::steady_clock::now().__d_.__rep_;
  this->__d_.__rep_ = v3.__d_.__rep_;
  this[1].__d_.__rep_ = v3.__d_.__rep_;
  this[2].__d_.__rep_ = v3.__d_.__rep_;
  return this;
}

std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep cnconsole::ProgressBar::Display(cnconsole::ProgressBar *this, uint64_t *a2, uint64_t *a3, char a4)
{
  std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep result = std::chrono::steady_clock::now().__d_.__rep_;
  *((void *)this + 1) = result;
  double v9 = *((double *)this + 4);
  if (v9 == 0.0 || (a4 & 1) != 0 || v9 > 0.0 && v9 <= (double)((result - *((void *)this + 2)) / 1000000000))
  {
    *((void *)this + 2) = result;
    sub_18DEDC798((uint64_t)v25);
    cnconsole::ProgressBar::DisplayElapsedTime(this, &__p);
    if ((v24 & 0x80u) == 0) {
      p_p = &__p;
    }
    else {
      p_p = __p;
    }
    if ((v24 & 0x80u) == 0) {
      uint64_t v11 = v24;
    }
    else {
      uint64_t v11 = v23;
    }
    sub_18DEDD538(&v26, (uint64_t)p_p, v11);
    if ((char)v24 < 0) {
      operator delete(__p);
    }
    cnconsole::ProgressBar::DisplayPercentage(&__p);
    if ((v24 & 0x80u) == 0) {
      v12 = &__p;
    }
    else {
      v12 = __p;
    }
    if ((v24 & 0x80u) == 0) {
      uint64_t v13 = v24;
    }
    else {
      uint64_t v13 = v23;
    }
    sub_18DEDD538(&v26, (uint64_t)v12, v13);
    if ((char)v24 < 0) {
      operator delete(__p);
    }
    cnconsole::ProgressBar::DisplayProgressBar(a2, a3, &__p);
    if ((v24 & 0x80u) == 0) {
      v14 = &__p;
    }
    else {
      v14 = __p;
    }
    if ((v24 & 0x80u) == 0) {
      uint64_t v15 = v24;
    }
    else {
      uint64_t v15 = v23;
    }
    sub_18DEDD538(&v26, (uint64_t)v14, v15);
    if ((char)v24 < 0) {
      operator delete(__p);
    }
    cnconsole::ProgressBar::DisplayBytesProcessed(&__p);
    if ((v24 & 0x80u) == 0) {
      v16 = &__p;
    }
    else {
      v16 = __p;
    }
    if ((v24 & 0x80u) == 0) {
      uint64_t v17 = v24;
    }
    else {
      uint64_t v17 = v23;
    }
    sub_18DEDD538(&v26, (uint64_t)v16, v17);
    if ((char)v24 < 0) {
      operator delete(__p);
    }
    sub_18DEDD9B8((uint64_t)v27, &__p);
    if ((v24 & 0x80u) == 0) {
      v18 = &__p;
    }
    else {
      v18 = __p;
    }
    if ((v24 & 0x80u) == 0) {
      uint64_t v19 = v24;
    }
    else {
      uint64_t v19 = v23;
    }
    v20 = sub_18DEDD538(MEMORY[0x1E4FBA250], (uint64_t)v18, v19);
    sub_18DEDD538(v20, (uint64_t)"\n", 1);
    if ((char)v24 < 0) {
      operator delete(__p);
    }
    v25[0] = *MEMORY[0x1E4FBA408];
    uint64_t v21 = *(void *)(MEMORY[0x1E4FBA408] + 72);
    *(void *)((char *)v25 + *(void *)(v25[0] - 24)) = *(void *)(MEMORY[0x1E4FBA408] + 64);
    uint64_t v26 = v21;
    v27[0] = MEMORY[0x1E4FBA470] + 16;
    if (v28 < 0) {
      operator delete((void *)v27[8]);
    }
    std::streambuf::~streambuf();
    std::iostream::~basic_iostream();
    return MEMORY[0x192FA6190](&v29);
  }
  return result;
}

void sub_18DEDC74C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, char a16)
{
}

uint64_t sub_18DEDC798(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x1E4FBA488] + 104;
  *(void *)(a1 + 128) = MEMORY[0x1E4FBA488] + 104;
  uint64_t v3 = a1 + 16;
  uint64_t v4 = MEMORY[0x1E4FBA488] + 64;
  *(void *)(a1 + 16) = MEMORY[0x1E4FBA488] + 64;
  float64x2_t v5 = (void *)MEMORY[0x1E4FBA408];
  uint64_t v6 = *(void *)(MEMORY[0x1E4FBA408] + 24);
  uint64_t v7 = *(void *)(MEMORY[0x1E4FBA408] + 16);
  *(void *)a1 = v7;
  *(void *)(a1 + *(void *)(v7 - 24)) = v6;
  *(void *)(a1 + 8) = 0;
  double v8 = (std::ios_base *)(a1 + *(void *)(*(void *)a1 - 24));
  std::ios_base::init(v8, (void *)(a1 + 24));
  uint64_t v9 = MEMORY[0x1E4FBA488] + 24;
  v8[1].__vftable = 0;
  v8[1].__fmtflags_ = -1;
  uint64_t v10 = v5[5];
  uint64_t v11 = v5[4];
  *(void *)(a1 + 16) = v11;
  *(void *)(v3 + *(void *)(v11 - 24)) = v10;
  uint64_t v12 = v5[1];
  *(void *)a1 = v12;
  *(void *)(a1 + *(void *)(v12 - 24)) = v5[6];
  *(void *)a1 = v9;
  *(void *)(a1 + 128) = v2;
  *(void *)(a1 + 16) = v4;
  std::streambuf::basic_streambuf();
  *(void *)(a1 + 24) = MEMORY[0x1E4FBA470] + 16;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_DWORD *)(a1 + 120) = 24;
  return a1;
}

void sub_18DEDCA48(_Unwind_Exception *a1)
{
  std::iostream::~basic_iostream();
  MEMORY[0x192FA6190](v1);
  _Unwind_Resume(a1);
}

uint64_t cnconsole::ProgressBar::DisplayElapsedTime@<X0>(cnconsole::ProgressBar *this@<X0>, void *a2@<X8>)
{
  sub_18DEDC798((uint64_t)v8);
  *((double *)this + 3) = (double)((*((void *)this + 1) - *(void *)this) / 1000000000);
  *(void *)((char *)&v8[3] + *(void *)(v8[0] - 24)) = 4;
  uint64_t v4 = (void *)std::ostream::operator<<();
  sub_18DEDD538(v4, (uint64_t)"m", 1);
  *(void *)((char *)&v8[3] + *(void *)(v8[0] - 24)) = 3;
  float64x2_t v5 = (void *)std::ostream::operator<<();
  sub_18DEDD538(v5, (uint64_t)"s", 1);
  sub_18DEDD9B8((uint64_t)v9, a2);
  v8[0] = *MEMORY[0x1E4FBA408];
  uint64_t v6 = *(void *)(MEMORY[0x1E4FBA408] + 72);
  *(void *)((char *)v8 + *(void *)(v8[0] - 24)) = *(void *)(MEMORY[0x1E4FBA408] + 64);
  v8[2] = v6;
  v9[0] = MEMORY[0x1E4FBA470] + 16;
  if (v10 < 0) {
    operator delete((void *)v9[8]);
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  return MEMORY[0x192FA6190](&v11);
}

void sub_18DEDCCA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t cnconsole::ProgressBar::DisplayPercentage@<X0>(void *a1@<X8>)
{
  sub_18DEDC798((uint64_t)v9);
  uint64_t v5 = v9[0];
  *(void *)((char *)&v9[3] + *(void *)(v9[0] - 24)) = 6;
  *(void *)((char *)&v9[2] + *(void *)(v5 - 24)) = 1;
  *(_DWORD *)((char *)&v9[1] + *(void *)(v5 - 24)) |= 4u;
  uint64_t v6 = (void *)std::ostream::operator<<();
  sub_18DEDD538(v6, (uint64_t)"%", 1);
  sub_18DEDD9B8((uint64_t)v10, a1);
  v9[0] = *MEMORY[0x1E4FBA408];
  uint64_t v7 = *(void *)(MEMORY[0x1E4FBA408] + 72);
  *(void *)((char *)v9 + *(void *)(v9[0] - 24)) = *(void *)(MEMORY[0x1E4FBA408] + 64);
  v9[2] = v7;
  v10[0] = MEMORY[0x1E4FBA470] + 16;
  if (v11 < 0) {
    operator delete((void *)v10[8]);
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  return MEMORY[0x192FA6190](&v12);
}

void sub_18DEDCED0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t cnconsole::ProgressBar::DisplayProgressBar@<X0>(uint64_t *a1@<X1>, uint64_t *a2@<X2>, void *a3@<X8>)
{
  sub_18DEDC798((uint64_t)v23);
  int v7 = ioctl(1, 0x40087468uLL, v21);
  int v8 = v22;
  if (v7 == -1 || v22 - 1001 > 0xFFFFFC17)
  {
    if ((byte_1E91C9740 & 1) == 0)
    {
      uint64_t v9 = *a1;
      uint64_t v10 = *a2;
      *(void *)((char *)v25 + *(void *)(v23[0] - 24)) = 3;
      sub_18DEDD538(&v24, (uint64_t)"[", 1);
      double v11 = (double)v9 / (double)v10;
      double v12 = (double)(v8 - 40);
      double v13 = round(v11 * v12);
      if (v13 > 0.0)
      {
        int v14 = 1;
        do
        {
          sub_18DEDD538(&v24, (uint64_t)"=", 1);
          double v15 = (double)v14++;
        }
        while (v13 > v15);
      }
      double v16 = v12 - v13;
      if (v16 > 0.0)
      {
        int v17 = 1;
        do
        {
          sub_18DEDD538(&v24, (uint64_t)".", 1);
          double v18 = (double)v17++;
        }
        while (v16 > v18);
      }
      sub_18DEDD538(&v24, (uint64_t)"]", 1);
    }
  }
  else
  {
    byte_1E91C9740 = 1;
  }
  sub_18DEDD9B8((uint64_t)v25, a3);
  v23[0] = *MEMORY[0x1E4FBA408];
  uint64_t v19 = *(void *)(MEMORY[0x1E4FBA408] + 72);
  *(void *)((char *)v23 + *(void *)(v23[0] - 24)) = *(void *)(MEMORY[0x1E4FBA408] + 64);
  uint64_t v24 = v19;
  v25[0] = MEMORY[0x1E4FBA470] + 16;
  if (v26 < 0) {
    operator delete((void *)v25[8]);
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  return MEMORY[0x192FA6190](&v27);
}

void sub_18DEDD184(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  sub_18DEDD3EC((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t cnconsole::ProgressBar::DisplayBytesProcessed@<X0>(void *a1@<X8>)
{
  sub_18DEDC798((uint64_t)v10);
  uint64_t v5 = v10[0];
  *(void *)((char *)&v10[3] + *(void *)(v10[0] - 24)) = 6;
  *(void *)((char *)&v10[2] + *(void *)(v5 - 24)) = 1;
  *(_DWORD *)((char *)&v10[1] + *(void *)(v5 - 24)) |= 4u;
  uint64_t v6 = (void *)std::ostream::operator<<();
  sub_18DEDD538(v6, (uint64_t)" / ", 3);
  int v7 = (void *)std::ostream::operator<<();
  sub_18DEDD538(v7, (uint64_t)" MB", 3);
  sub_18DEDD9B8((uint64_t)v11, a1);
  v10[0] = *MEMORY[0x1E4FBA408];
  uint64_t v8 = *(void *)(MEMORY[0x1E4FBA408] + 72);
  *(void *)((char *)v10 + *(void *)(v10[0] - 24)) = *(void *)(MEMORY[0x1E4FBA408] + 64);
  v10[2] = v8;
  v11[0] = MEMORY[0x1E4FBA470] + 16;
  if (v12 < 0) {
    operator delete((void *)v11[8]);
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  return MEMORY[0x192FA6190](&v13);
}

void sub_18DEDD3D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t sub_18DEDD3EC(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x1E4FBA408];
  uint64_t v3 = *MEMORY[0x1E4FBA408];
  *(void *)a1 = *MEMORY[0x1E4FBA408];
  uint64_t v4 = *(void *)(v2 + 72);
  *(void *)(a1 + *(void *)(v3 - 24)) = *(void *)(v2 + 64);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = MEMORY[0x1E4FBA470] + 16;
  if (*(char *)(a1 + 111) < 0) {
    operator delete(*(void **)(a1 + 88));
  }
  std::streambuf::~streambuf();
  std::iostream::~basic_iostream();
  MEMORY[0x192FA6190](a1 + 128);
  return a1;
}

void sub_18DEDD524(void *a1)
{
}

void *sub_18DEDD538(void *a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x192FA5E30](v13, a1);
  if (v13[0])
  {
    uint64_t v6 = (uint64_t)a1 + *(void *)(*a1 - 24);
    uint64_t v7 = *(void *)(v6 + 40);
    int v8 = *(_DWORD *)(v6 + 8);
    int v9 = *(_DWORD *)(v6 + 144);
    if (v9 == -1)
    {
      std::ios_base::getloc((const std::ios_base *)((char *)a1 + *(void *)(*a1 - 24)));
      uint64_t v10 = std::locale::use_facet(&v14, MEMORY[0x1E4FBA258]);
      int v9 = ((uint64_t (*)(const std::locale::facet *, uint64_t))v10->__vftable[2].~facet_0)(v10, 32);
      std::locale::~locale(&v14);
      *(_DWORD *)(v6 + 144) = v9;
    }
    if ((v8 & 0xB0) == 0x20) {
      uint64_t v11 = a2 + a3;
    }
    else {
      uint64_t v11 = a2;
    }
    if (!sub_18DEDD6DC(v7, a2, v11, a2 + a3, v6, (char)v9)) {
      std::ios_base::clear((std::ios_base *)((char *)a1 + *(void *)(*a1 - 24)), *(_DWORD *)((char *)a1 + *(void *)(*a1 - 24) + 32) | 5);
    }
  }
  MEMORY[0x192FA5E40](v13);
  return a1;
}

void sub_18DEDD674(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, std::locale a12)
{
  MEMORY[0x192FA5E40](&a10);
  __cxa_begin_catch(a1);
  std::ios_base::__set_badbit_and_consider_rethrow((std::ios_base *)((char *)v12 + *(void *)(*v12 - 24)));
  __cxa_end_catch();
  JUMPOUT(0x18DEDD654);
}

void sub_18DEDD6C8(_Unwind_Exception *a1)
{
}

uint64_t sub_18DEDD6DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int __c)
{
  uint64_t v6 = a1;
  if (a1)
  {
    uint64_t v11 = *(void *)(a5 + 24);
    if (v11 <= a4 - a2) {
      int64_t v12 = 0;
    }
    else {
      int64_t v12 = v11 - (a4 - a2);
    }
    if (a3 - a2 >= 1 && (*(uint64_t (**)(uint64_t))(*(void *)a1 + 96))(a1) != a3 - a2) {
      return 0;
    }
    if (v12 >= 1)
    {
      sub_18DEDD864(__p, v12, __c);
      uint64_t v13 = v18 >= 0 ? __p : (void **)__p[0];
      uint64_t v14 = (*(uint64_t (**)(uint64_t, void **, int64_t))(*(void *)v6 + 96))(v6, v13, v12);
      if (v18 < 0) {
        operator delete(__p[0]);
      }
      if (v14 != v12) {
        return 0;
      }
    }
    uint64_t v15 = a4 - a3;
    if (v15 < 1 || (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v6 + 96))(v6, a3, v15) == v15) {
      *(void *)(a5 + 24) = 0;
    }
    else {
      return 0;
    }
  }
  return v6;
}

void sub_18DEDD848(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *sub_18DEDD864(void *__b, size_t __len, int __c)
{
  if (__len >= 0x7FFFFFFFFFFFFFF8) {
    sub_18DEDD910();
  }
  if (__len >= 0x17)
  {
    size_t v7 = (__len & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((__len | 7) != 0x17) {
      size_t v7 = __len | 7;
    }
    size_t v8 = v7 + 1;
    uint64_t v6 = operator new(v7 + 1);
    __b[1] = __len;
    __b[2] = v8 | 0x8000000000000000;
    *__b = v6;
  }
  else
  {
    *((unsigned char *)__b + 23) = __len;
    uint64_t v6 = __b;
    if (!__len) {
      goto LABEL_9;
    }
  }
  memset(v6, __c, __len);
LABEL_9:
  *((unsigned char *)v6 + __len) = 0;
  return __b;
}

void sub_18DEDD910()
{
}

void sub_18DEDD928(const char *a1)
{
  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  sub_18DEDD984(exception, a1);
  __cxa_throw(exception, (struct type_info *)off_1E55B9778, MEMORY[0x1E4FBA1C8]);
}

void sub_18DEDD970(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *sub_18DEDD984(std::logic_error *a1, const char *a2)
{
  std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep result = std::logic_error::logic_error(a1, a2);
  result->__vftable = (std::logic_error_vtbl *)(MEMORY[0x1E4FBA4D0] + 16);
  return result;
}

uint64_t sub_18DEDD9B8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_18DEDDA58(a1);
  if (v4 >= 0x7FFFFFFFFFFFFFF8) {
    sub_18DEDD910();
  }
  uint64_t v5 = (const void *)result;
  size_t v6 = v4;
  if (v4 >= 0x17)
  {
    uint64_t v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17) {
      uint64_t v7 = v4 | 7;
    }
    uint64_t v8 = v7 + 1;
    int v9 = operator new(v7 + 1);
    a2[1] = v6;
    a2[2] = v8 | 0x8000000000000000;
    *a2 = v9;
    a2 = v9;
  }
  else
  {
    *((unsigned char *)a2 + 23) = v4;
    if (!v4) {
      goto LABEL_9;
    }
  }
  uint64_t result = (uint64_t)memmove(a2, v5, v6);
LABEL_9:
  *((unsigned char *)a2 + v6) = 0;
  return result;
}

uint64_t sub_18DEDDA58(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 96);
  if ((v1 & 0x10) != 0)
  {
    unint64_t v3 = *(void *)(a1 + 48);
    if (*(void *)(a1 + 88) < v3) {
      *(void *)(a1 + 88) = v3;
    }
    return *(void *)(a1 + 40);
  }
  else if ((v1 & 8) != 0)
  {
    return *(void *)(a1 + 16);
  }
  else
  {
    return 0;
  }
}

void cnconsole::filesystem::absolute(void **a1@<X0>, std::string *a2@<X8>)
{
  v39[2] = *MEMORY[0x1E4F143B8];
  if (*((char *)a1 + 23) < 0) {
    sub_18DEDE668(&__str, *a1, (unint64_t)a1[1]);
  }
  else {
    std::string __str = *(std::string *)a1;
  }
  char v4 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
  std::string::size_type v5 = __str.__r_.__value_.__r.__words[0];
  if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_str = &__str;
  }
  else {
    p_str = (std::string *)__str.__r_.__value_.__r.__words[0];
  }
  if (p_str->__r_.__value_.__s.__data_[0] != 126)
  {
LABEL_38:
    bzero(&__dst, 0x400uLL);
    if (v4 >= 0) {
      uint64_t v24 = &__str;
    }
    else {
      uint64_t v24 = (std::string *)v5;
    }
    realpath_DARWIN_EXTSN((const char *)v24, (char *)&__dst);
    sub_18DEDE7B0(&__p, (char *)&__dst);
    LOWORD(v33.__r_.__value_.__l.__data_) = 0;
    LOBYTE(v39[0]) = 2;
    if (*((char *)a1 + 23) >= 0) {
      LOBYTE(v30) = (_BYTE)a1;
    }
    else {
      v30 = *a1;
    }
    cnprint::CNPrinter::Print((cnprint::CNPrinter *)&v33, (unsigned __int8 *)v39, "Resolved '%s' to '%s'", v25, v26, v27, v28, v29, (char)v30);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    {
      sub_18DEDE668(a2, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
      int v31 = SHIBYTE(__p.__r_.__value_.__r.__words[2]);
      a2[1].__r_.__value_.__s.__data_[0] = 1;
      if (v31 < 0) {
        operator delete(__p.__r_.__value_.__l.__data_);
      }
    }
    else
    {
      *a2 = __p;
      a2[1].__r_.__value_.__s.__data_[0] = 1;
    }
    char v4 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
    goto LABEL_49;
  }
  cnconsole::filesystem::getUserHomeDirectory((uint64_t)&__dst);
  if (v38) {
    std::string __p = __dst;
  }
  else {
    sub_18DEDE7B0(&__p, "");
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = __p.__r_.__value_.__l.__size_;
  }
  if (size)
  {
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      sub_18DEDE668(&__dst, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    }
    else {
      std::string __dst = __p;
    }
    std::string::basic_string(&v33, &__str, 1uLL, 0xFFFFFFFFFFFFFFFFLL, (std::allocator<char> *)&v36);
    if ((v33.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      uint64_t v19 = &v33;
    }
    else {
      uint64_t v19 = (std::string *)v33.__r_.__value_.__r.__words[0];
    }
    if ((v33.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v20 = HIBYTE(v33.__r_.__value_.__r.__words[2]);
    }
    else {
      std::string::size_type v20 = v33.__r_.__value_.__l.__size_;
    }
    uint64_t v21 = std::string::append(&__dst, (const std::string::value_type *)v19, v20);
    std::string::size_type v22 = v21->__r_.__value_.__r.__words[0];
    v39[0] = v21->__r_.__value_.__l.__size_;
    *(void *)((char *)v39 + 7) = *(std::string::size_type *)((char *)&v21->__r_.__value_.__r.__words[1] + 7);
    char v23 = HIBYTE(v21->__r_.__value_.__r.__words[2]);
    v21->__r_.__value_.__l.__size_ = 0;
    v21->__r_.__value_.__r.__words[2] = 0;
    v21->__r_.__value_.__r.__words[0] = 0;
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__str.__r_.__value_.__l.__data_);
    }
    __str.__r_.__value_.__r.__words[0] = v22;
    __str.__r_.__value_.__l.__size_ = v39[0];
    *(std::string::size_type *)((char *)&__str.__r_.__value_.__r.__words[1] + 7) = *(void *)((char *)v39 + 7);
    *((unsigned char *)&__str.__r_.__value_.__s + 23) = v23;
    if (SHIBYTE(v33.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v33.__r_.__value_.__l.__data_);
    }
    if (SHIBYTE(__dst.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__dst.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    LOWORD(__dst.__r_.__value_.__l.__data_) = 0;
    v33.__r_.__value_.__s.__data_[0] = 4;
    cnprint::CNPrinter::Print((cnprint::CNPrinter *)&__dst, (unsigned __int8 *)&v33, "Failed to deduce user home directory", v7, v8, v9, v10, v11, v32);
    LOWORD(__dst.__r_.__value_.__l.__data_) = 0;
    v33.__r_.__value_.__s.__data_[0] = 4;
    if (*((char *)a1 + 23) >= 0) {
      LOBYTE(v18) = (_BYTE)a1;
    }
    else {
      char v18 = *a1;
    }
    cnprint::CNPrinter::Print((cnprint::CNPrinter *)&__dst, (unsigned __int8 *)&v33, "Failed to convert relative path to absolute path: %s", v13, v14, v15, v16, v17, (char)v18);
    a2->__r_.__value_.__s.__data_[0] = 0;
    a2[1].__r_.__value_.__s.__data_[0] = 0;
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  char v4 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
  if (size)
  {
    std::string::size_type v5 = __str.__r_.__value_.__r.__words[0];
    goto LABEL_38;
  }
LABEL_49:
  if (v4 < 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
}

void sub_18DEDDDB0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37)
{
  if (a23 < 0) {
    operator delete(__p);
  }
  if (a30 < 0) {
    operator delete(a25);
  }
  _Unwind_Resume(exception_object);
}

passwd *cnconsole::filesystem::getUserHomeDirectory@<X0>(uint64_t a1@<X8>)
{
  pw_dir = getenv("HOME");
  if (pw_dir || (v4 = getuid(), uint64_t result = getpwuid(v4), (pw_dir = result->pw_dir) != 0))
  {
    uint64_t result = (passwd *)sub_18DEDE7B0(&v6, pw_dir);
    *(_OWORD *)a1 = v6;
    *(void *)(a1 + 16) = v7;
    *(unsigned char *)(a1 + 24) = 1;
  }
  else
  {
    *(unsigned char *)a1 = 0;
    *(unsigned char *)(a1 + 24) = 0;
  }
  return result;
}

BOOL cnconsole::filesystem::exists(const char *a1)
{
  memset(&v2, 0, sizeof(v2));
  if (a1[23] < 0) {
    a1 = *(const char **)a1;
  }
  return stat(a1, &v2) == 0;
}

BOOL cnconsole::filesystem::isFileWriteable(uint64_t a1)
{
  v9[19] = *MEMORY[0x1E4F143B8];
  BOOL isFileReadable = cnconsole::filesystem::isFileReadable();
  sub_18DEDE218(&v7);
  int v3 = *(_DWORD *)&v8[*(void *)(v7 - 24) + 24];
  if (!v3)
  {
    if (!std::filebuf::close()) {
      std::ios_base::clear((std::ios_base *)&v8[*(void *)(v7 - 24) - 8], *(_DWORD *)&v8[*(void *)(v7 - 24) + 24] | 4);
    }
    if (!isFileReadable)
    {
      if (*(char *)(a1 + 23) >= 0) {
        std::string::size_type v5 = (const std::__fs::filesystem::path *)a1;
      }
      else {
        std::string::size_type v5 = *(const std::__fs::filesystem::path **)a1;
      }
      remove(v5, v4);
    }
  }
  uint64_t v7 = *MEMORY[0x1E4FBA400];
  *(void *)&v8[*(void *)(v7 - 24) - 8] = *(void *)(MEMORY[0x1E4FBA400] + 24);
  MEMORY[0x192FA5DA0](v8);
  std::ostream::~ostream();
  MEMORY[0x192FA6190](v9);
  return v3 == 0;
}

void sub_18DEDE0B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

BOOL cnconsole::filesystem::isFileReadable()
{
  v4[19] = *MEMORY[0x1E4F143B8];
  sub_18DEDE4A4(v2);
  BOOL v0 = *(_DWORD *)&v3[*(void *)(v2[0] - 24) + 16] == 0;
  v2[0] = *MEMORY[0x1E4FBA3F8];
  *(uint64_t *)((char *)v2 + *(void *)(v2[0] - 24)) = *(void *)(MEMORY[0x1E4FBA3F8] + 24);
  MEMORY[0x192FA5DA0](v3);
  std::istream::~istream();
  MEMORY[0x192FA6190](v4);
  return v0;
}

uint64_t *sub_18DEDE218(uint64_t *a1)
{
  uint64_t v2 = MEMORY[0x1E4FBA468] + 64;
  a1[52] = MEMORY[0x1E4FBA468] + 64;
  int v3 = a1 + 1;
  uint64_t v4 = *(void *)(MEMORY[0x1E4FBA400] + 16);
  uint64_t v5 = *(void *)(MEMORY[0x1E4FBA400] + 8);
  *a1 = v5;
  *(uint64_t *)((char *)a1 + *(void *)(v5 - 24)) = v4;
  long long v6 = (std::ios_base *)((char *)a1 + *(void *)(*a1 - 24));
  std::ios_base::init(v6, a1 + 1);
  uint64_t v7 = MEMORY[0x1E4FBA468] + 24;
  v6[1].__vftable = 0;
  v6[1].__fmtflags_ = -1;
  *a1 = v7;
  a1[52] = v2;
  MEMORY[0x192FA5D90](v3);
  if (!std::filebuf::open()) {
    std::ios_base::clear((std::ios_base *)((char *)a1 + *(void *)(*a1 - 24)), *(_DWORD *)((char *)a1 + *(void *)(*a1 - 24) + 32) | 4);
  }
  return a1;
}

void sub_18DEDE3A0(_Unwind_Exception *a1)
{
  std::ostream::~ostream();
  MEMORY[0x192FA6190](v1);
  _Unwind_Resume(a1);
}

void *sub_18DEDE3D8(void *a1)
{
  uint64_t v2 = MEMORY[0x1E4FBA400];
  uint64_t v3 = *MEMORY[0x1E4FBA400];
  *a1 = *MEMORY[0x1E4FBA400];
  *(void *)((char *)a1 + *(void *)(v3 - 24)) = *(void *)(v2 + 24);
  MEMORY[0x192FA5DA0](a1 + 1);
  std::ostream::~ostream();
  MEMORY[0x192FA6190](a1 + 52);
  return a1;
}

uint64_t *sub_18DEDE4A4(uint64_t *a1)
{
  uint64_t v2 = MEMORY[0x1E4FBA460] + 64;
  a1[53] = MEMORY[0x1E4FBA460] + 64;
  uint64_t v3 = a1 + 2;
  uint64_t v4 = *(void *)(MEMORY[0x1E4FBA3F8] + 16);
  uint64_t v5 = *(void *)(MEMORY[0x1E4FBA3F8] + 8);
  *a1 = v5;
  *(uint64_t *)((char *)a1 + *(void *)(v5 - 24)) = v4;
  a1[1] = 0;
  long long v6 = (std::ios_base *)((char *)a1 + *(void *)(*a1 - 24));
  std::ios_base::init(v6, a1 + 2);
  uint64_t v7 = MEMORY[0x1E4FBA460] + 24;
  v6[1].__vftable = 0;
  v6[1].__fmtflags_ = -1;
  *a1 = v7;
  a1[53] = v2;
  MEMORY[0x192FA5D90](v3);
  if (!std::filebuf::open()) {
    std::ios_base::clear((std::ios_base *)((char *)a1 + *(void *)(*a1 - 24)), *(_DWORD *)((char *)a1 + *(void *)(*a1 - 24) + 32) | 4);
  }
  return a1;
}

void sub_18DEDE630(_Unwind_Exception *a1)
{
  std::istream::~istream();
  MEMORY[0x192FA6190](v1);
  _Unwind_Resume(a1);
}

void *sub_18DEDE668(unsigned char *__dst, void *__src, unint64_t a3)
{
  uint64_t v5 = __dst;
  if (a3 > 0x16)
  {
    if (a3 >= 0x7FFFFFFFFFFFFFF8) {
      sub_18DEDD910();
    }
    uint64_t v6 = (a3 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((a3 | 7) != 0x17) {
      uint64_t v6 = a3 | 7;
    }
    uint64_t v7 = v6 + 1;
    uint64_t v8 = operator new(v6 + 1);
    v5[1] = a3;
    v5[2] = v7 | 0x8000000000000000;
    *uint64_t v5 = v8;
    uint64_t v5 = v8;
  }
  else
  {
    __dst[23] = a3;
  }

  return memmove(v5, __src, a3 + 1);
}

void sub_18DEDE708()
{
}

void sub_18DEDE720(const char *a1)
{
  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  sub_18DEDE77C(exception, a1);
  __cxa_throw(exception, (struct type_info *)off_1E55B9780, MEMORY[0x1E4FBA1D0]);
}

void sub_18DEDE768(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *sub_18DEDE77C(std::logic_error *a1, const char *a2)
{
  uint64_t result = std::logic_error::logic_error(a1, a2);
  result->__vftable = (std::logic_error_vtbl *)(MEMORY[0x1E4FBA4D8] + 16);
  return result;
}

void *sub_18DEDE7B0(void *a1, char *__s)
{
  size_t v4 = strlen(__s);
  if (v4 >= 0x7FFFFFFFFFFFFFF8) {
    sub_18DEDD910();
  }
  size_t v5 = v4;
  if (v4 >= 0x17)
  {
    uint64_t v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17) {
      uint64_t v7 = v4 | 7;
    }
    uint64_t v8 = v7 + 1;
    uint64_t v6 = operator new(v7 + 1);
    a1[1] = v5;
    a1[2] = v8 | 0x8000000000000000;
    *a1 = v6;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v4;
    uint64_t v6 = a1;
    if (!v4) {
      goto LABEL_9;
    }
  }
  memmove(v6, __s, v5);
LABEL_9:
  *((unsigned char *)v6 + v5) = 0;
  return a1;
}

double cndft::SlidingDFT::SlidingDFT(cndft::SlidingDFT *this)
{
  *(unsigned char *)this = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 136) = 0u;
  return result;
}

{
  double result;

  *(unsigned char *)this = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 136) = 0u;
  return result;
}

uint64_t cndft::SlidingDFT::GetConfiguration(uint64_t a1, _OWORD *a2)
{
  if (!*(unsigned char *)a1) {
    return 0xFFFFFFFFLL;
  }
  uint64_t result = 0;
  *a2 = *(_OWORD *)(a1 + 8);
  return result;
}

uint64_t cndft::SlidingDFT::IsConfigured(cndft::SlidingDFT *this)
{
  return *(unsigned __int8 *)this;
}

uint64_t cndft::SlidingDFT::SetConfiguration(uint64_t a1, uint64_t a2, double a3, double a4, double a5)
{
  uint64_t result = 0xFFFFFFFFLL;
  if ((*(void *)a2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL && *(double *)a2 > 0.0)
  {
    unsigned int v7 = *(_DWORD *)(a2 + 8);
    if (v7)
    {
      unsigned int v8 = *(_DWORD *)(a2 + 12);
      if (v8)
      {
        if (v8 < v7 >> 1)
        {
          *(unsigned char *)a1 = 0;
          *(_OWORD *)(a1 + 8) = *(_OWORD *)a2;
          unint64_t v9 = 1.0;
          double v10 = 1.0 / *(double *)(a1 + 8);
          LODWORD(a5) = *(_DWORD *)(a1 + 16);
          LODWORD(v9) = *(_DWORD *)(a1 + 20);
          double v11 = (double)v9;
          double v12 = (double)*(unint64_t *)&a5;
          *(double *)(a1 + 24) = v10;
          *(double *)(a1 + 32) = v10 * v11 / v12;
          v15[0] = 0.0 / v12;
          v15[1] = v11 * 6.28318531 / v12;
          sub_18DEDEF80(v15);
          *(void *)(a1 + 40) = v13;
          *(void *)(a1 + 48) = v14;
          *(unsigned char *)a1 = 1;
          cndft::SlidingDFT::ResetDFT((cndft::SlidingDFT *)a1);
          return 0;
        }
      }
    }
  }
  return result;
}

void cndft::SlidingDFT::ResetDFT(cndft::SlidingDFT *this)
{
  if (!*(unsigned char *)this) {
    return;
  }
  uint64_t v2 = (void **)*((void *)this + 8);
  uint64_t v3 = *((void *)this + 9);
  *((void *)this + 12) = 0;
  unint64_t v4 = v3 - (void)v2;
  if (v4 >= 0x11)
  {
    do
    {
      operator delete(*v2);
      uint64_t v5 = *((void *)this + 9);
      uint64_t v2 = (void **)(*((void *)this + 8) + 8);
      *((void *)this + 8) = v2;
      unint64_t v4 = v5 - (void)v2;
    }
    while (v4 > 0x10);
  }
  if (v4 >> 3 == 1)
  {
    uint64_t v6 = 256;
    goto LABEL_8;
  }
  if (v4 >> 3 == 2)
  {
    uint64_t v6 = 512;
LABEL_8:
    *((void *)this + 11) = v6;
  }
  unsigned int v7 = (void **)*((void *)this + 14);
  uint64_t v8 = *((void *)this + 15);
  *((void *)this + 18) = 0;
  unint64_t v9 = v8 - (void)v7;
  if (v9 >= 0x11)
  {
    do
    {
      operator delete(*v7);
      uint64_t v10 = *((void *)this + 15);
      unsigned int v7 = (void **)(*((void *)this + 14) + 8);
      *((void *)this + 14) = v7;
      unint64_t v9 = v10 - (void)v7;
    }
    while (v9 > 0x10);
  }
  if (v9 >> 3 == 1)
  {
    uint64_t v11 = 128;
  }
  else
  {
    if (v9 >> 3 != 2) {
      return;
    }
    uint64_t v11 = 256;
  }
  *((void *)this + 17) = v11;
}

BOOL cndft::SlidingDFT::IsValid(cndft::SlidingDFT *this)
{
  return *(unsigned char *)this && *((void *)this + 18) >= (unint64_t)*((unsigned int *)this + 4);
}

uint64_t cndft::SlidingDFT::AddSample(cndft::SlidingDFT *this, double a2)
{
  double v14 = a2;
  if (!*(unsigned char *)this) {
    return 0xFFFFFFFFLL;
  }
  uint64_t v3 = (void *)((char *)this + 104);
  uint64_t v4 = *((void *)this + 18);
  double v5 = 0.0;
  double v6 = 0.0;
  double v7 = 0.0;
  if (v4)
  {
    uint64_t v8 = (double *)(*(void *)(*((void *)this + 14)
                              + (((unint64_t)(v4 + *((void *)this + 17) - 1) >> 5) & 0x7FFFFFFFFFFFFF8))
                  + 16 * (v4 + *((unsigned char *)this + 136) - 1));
    double v6 = *v8;
    double v7 = v8[1] + 0.0;
  }
  if (*((void *)this + 12) >= (unint64_t)*((unsigned int *)this + 4)) {
    double v5 = *(double *)(*(void *)(*((void *)this + 8) + ((*((void *)this + 11) >> 6) & 0x3FFFFFFFFFFFFF8))
  }
                   + 8 * (*((void *)this + 11) & 0x1FFLL));
  sub_18DEDEC14((void *)this + 7, &v14);
  v12[0] = v6 - v5 + v14;
  v12[1] = v7;
  v13.n128_u64[0] = sub_18DEDED28(v12, (double *)this + 5);
  v13.n128_u64[1] = v9;
  sub_18DEDEC9C(v3, &v13);
  unint64_t v10 = *((void *)this + 12);
  if (v10 != *((void *)this + 18))
  {
    cndft::SlidingDFT::ResetDFT(this);
    return 0xFFFFFFFFLL;
  }
  if (v10 > *((unsigned int *)this + 4))
  {
    ++*((void *)this + 11);
    *((void *)this + 12) = v10 - 1;
    sub_18DEDFB58((uint64_t)this + 56, 1);
    *(int64x2_t *)((char *)this + 136) = vaddq_s64(*(int64x2_t *)((char *)this + 136), (int64x2_t)xmmword_18E1EF670);
    sub_18DEDFBB8((uint64_t)v3, 1);
  }
  return 0;
}

double sub_18DEDEC14(void *a1, double *a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[1];
  if (v4 == v5) {
    uint64_t v6 = 0;
  }
  else {
    uint64_t v6 = ((v4 - v5) << 6) - 1;
  }
  uint64_t v7 = a1[5];
  unint64_t v8 = v7 + a1[4];
  if (v6 == v8)
  {
    sub_18DEDF050(a1);
    uint64_t v5 = a1[1];
    uint64_t v7 = a1[5];
    unint64_t v8 = a1[4] + v7;
  }
  double result = *a2;
  *(double *)(*(void *)(v5 + ((v8 >> 6) & 0x3FFFFFFFFFFFFF8)) + 8 * (v8 & 0x1FF)) = *a2;
  a1[5] = v7 + 1;
  return result;
}

__n128 sub_18DEDEC9C(void *a1, __n128 *a2)
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[1];
  uint64_t v6 = 32 * (v4 - v5) - 1;
  if (v4 == v5) {
    uint64_t v6 = 0;
  }
  unint64_t v7 = a1[5] + a1[4];
  if (v6 == v7)
  {
    sub_18DEDF840(a1);
    uint64_t v5 = a1[1];
    unint64_t v7 = a1[5] + a1[4];
  }
  __n128 result = *a2;
  *(__n128 *)(*(void *)(v5 + ((v7 >> 5) & 0x7FFFFFFFFFFFFF8)) + 16 * v7) = *a2;
  ++a1[5];
  return result;
}

double sub_18DEDED28(double *a1, double *a2)
{
  return *a1 * *a2 - a1[1] * a2[1];
}

uint64_t cndft::SlidingDFT::Length(cndft::SlidingDFT *this)
{
  return *((unsigned int *)this + 36);
}

double cndft::SlidingDFT::GetDFTFrequency(cndft::SlidingDFT *this)
{
  if (*(unsigned char *)this) {
    return *((double *)this + 4);
  }
  else {
    return NAN;
  }
}

double cndft::SlidingDFT::operator[](uint64_t a1, unsigned int a2)
{
  if (!*(unsigned char *)a1) {
    return 0.0;
  }
  double result = 0.0;
  if (*(void *)(a1 + 144) > (unint64_t)a2) {
    return *(double *)(*(void *)(*(void *)(a1 + 112)
  }
                                 + (((*(void *)(a1 + 136) + (unint64_t)a2) >> 5) & 0x7FFFFFFFFFFFFF8))
                     + 16 * (*(unsigned char *)(a1 + 136) + a2));
  return result;
}

void sub_18DEDEF80(double *a1)
{
  long double v1 = *a1;
  double v2 = a1[1];
  if (v2 == 0.0)
  {
    exp(v1);
    return;
  }
  if (fabs(v1) == INFINITY)
  {
    if (v1 >= 0.0)
    {
      if ((*(void *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000) {
        return;
      }
    }
    else if ((*(void *)&v2 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
      double v2 = 1.0;
    }
  }
  double v3 = v2;
  exp(v1);
  __sincos_stret(v3);
}

void sub_18DEDF050(void *a1)
{
  unint64_t v2 = a1[4];
  BOOL v3 = v2 >= 0x200;
  unint64_t v4 = v2 - 512;
  if (v3)
  {
    uint64_t v5 = (uint64_t)(a1 + 3);
    uint64_t v6 = (char *)a1[3];
    a1[4] = v4;
    unint64_t v7 = (void *)a1[1];
    unint64_t v8 = (char *)a1[2];
    uint64_t v11 = *v7;
    unint64_t v9 = (char *)(v7 + 1);
    uint64_t v10 = v11;
    a1[1] = v9;
    if (v8 != v6)
    {
LABEL_33:
      *(void *)unint64_t v8 = v10;
      a1[2] += 8;
      return;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v33 = 1;
      }
      else {
        unint64_t v33 = (uint64_t)&v8[-*a1] >> 2;
      }
      v34 = (char *)sub_18DEDF808(v5, v33);
      v35 = &v34[8 * (v33 >> 2)];
      v37 = &v34[8 * v36];
      char v38 = (uint64_t *)a1[1];
      unint64_t v8 = v35;
      uint64_t v39 = a1[2] - (void)v38;
      if (v39)
      {
        unint64_t v8 = &v35[v39 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v40 = 8 * (v39 >> 3);
        v41 = &v34[8 * (v33 >> 2)];
        do
        {
          uint64_t v42 = *v38++;
          *(void *)v41 = v42;
          v41 += 8;
          v40 -= 8;
        }
        while (v40);
      }
      goto LABEL_30;
    }
LABEL_5:
    uint64_t v13 = v12 >> 3;
    BOOL v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    uint64_t v19 = &v9[-8 * v18];
    int64_t v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      unint64_t v9 = (char *)a1[1];
    }
    unint64_t v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }
  uint64_t v21 = a1[2];
  unint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&long long v54 = operator new(0x1000uLL);
      sub_18DEDF368(a1, &v54);
      return;
    }
    *(void *)&long long v54 = operator new(0x1000uLL);
    sub_18DEDF480((uint64_t)a1, &v54);
    v44 = (void *)a1[1];
    unint64_t v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    unint64_t v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    if (v8 != (char *)a1[3]) {
      goto LABEL_33;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v46 = 1;
      }
      else {
        unint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      v34 = (char *)sub_18DEDF808((uint64_t)(a1 + 3), v46);
      v35 = &v34[8 * (v46 >> 2)];
      v37 = &v34[8 * v47];
      v48 = (uint64_t *)a1[1];
      unint64_t v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        unint64_t v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v50 = 8 * (v49 >> 3);
        v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)v51 = v52;
          v51 += 8;
          v50 -= 8;
        }
        while (v50);
      }
LABEL_30:
      v43 = (char *)*a1;
      *a1 = v34;
      a1[1] = v35;
      a1[2] = v8;
      a1[3] = v37;
      if (v43)
      {
        operator delete(v43);
        unint64_t v8 = (char *)a1[2];
      }
      goto LABEL_33;
    }
    goto LABEL_5;
  }
  if (v23 == *a1) {
    unint64_t v25 = 1;
  }
  else {
    unint64_t v25 = v24 >> 2;
  }
  v56 = a1 + 3;
  *(void *)&long long v54 = sub_18DEDF808((uint64_t)(a1 + 3), v25);
  *((void *)&v54 + 1) = v54 + 8 * v22;
  *(void *)&long long v55 = *((void *)&v54 + 1);
  *((void *)&v55 + 1) = v54 + 8 * v26;
  v53 = operator new(0x1000uLL);
  sub_18DEDF5A0(&v54, &v53);
  uint64_t v27 = (void *)a1[2];
  uint64_t v28 = -7 - (void)v27;
  while (v27 != (void *)a1[1])
  {
    --v27;
    v28 += 8;
    sub_18DEDF6B8((uint64_t)&v54, v27);
  }
  uint64_t v29 = (char *)*a1;
  long long v30 = v54;
  long long v31 = v55;
  *(void *)&long long v54 = *a1;
  *((void *)&v54 + 1) = v27;
  long long v32 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a1 = v30;
  *((_OWORD *)a1 + 1) = v31;
  long long v55 = v32;
  if (v27 != (void *)v32) {
    *(void *)&long long v55 = v32 + (-(v32 + v28) & 0xFFFFFFFFFFFFFFF8);
  }
  if (v29) {
    operator delete(v29);
  }
}

void sub_18DEDF31C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  operator delete(v13);
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void sub_18DEDF368(void *a1, void *a2)
{
  uint64_t v5 = (char *)a1[3];
  uint64_t v4 = (uint64_t)(a1 + 3);
  uint64_t v6 = *(char **)(v4 - 8);
  if (v6 == v5)
  {
    unint64_t v7 = (char *)a1[1];
    uint64_t v8 = (uint64_t)&v7[-*a1];
    if ((unint64_t)v7 <= *a1)
    {
      if (v6 == (char *)*a1) {
        unint64_t v18 = 1;
      }
      else {
        unint64_t v18 = (uint64_t)&v6[-*a1] >> 2;
      }
      uint64_t v19 = (char *)sub_18DEDF808(v4, v18);
      uint64_t v21 = &v19[8 * (v18 >> 2)];
      unint64_t v22 = (uint64_t *)a1[1];
      uint64_t v6 = v21;
      uint64_t v23 = a1[2] - (void)v22;
      if (v23)
      {
        uint64_t v6 = &v21[v23 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v24 = 8 * (v23 >> 3);
        unint64_t v25 = &v19[8 * (v18 >> 2)];
        do
        {
          uint64_t v26 = *v22++;
          *(void *)unint64_t v25 = v26;
          v25 += 8;
          v24 -= 8;
        }
        while (v24);
      }
      uint64_t v27 = (char *)*a1;
      *a1 = v19;
      a1[1] = v21;
      a1[2] = v6;
      a1[3] = &v19[8 * v20];
      if (v27)
      {
        operator delete(v27);
        uint64_t v6 = (char *)a1[2];
      }
    }
    else
    {
      uint64_t v9 = v8 >> 3;
      BOOL v10 = v8 >> 3 < -1;
      uint64_t v11 = (v8 >> 3) + 2;
      if (v10) {
        uint64_t v12 = v11;
      }
      else {
        uint64_t v12 = v9 + 1;
      }
      uint64_t v13 = -(v12 >> 1);
      uint64_t v14 = v12 >> 1;
      uint64_t v15 = &v7[-8 * v14];
      int64_t v16 = v6 - v7;
      if (v6 != v7)
      {
        memmove(&v7[-8 * v14], v7, v6 - v7);
        uint64_t v6 = (char *)a1[1];
      }
      uint64_t v17 = &v6[8 * v13];
      uint64_t v6 = &v15[v16];
      a1[1] = v17;
      a1[2] = &v15[v16];
    }
  }
  *(void *)uint64_t v6 = *a2;
  a1[2] += 8;
}

void sub_18DEDF480(uint64_t a1, void *a2)
{
  uint64_t v4 = *(char **)(a1 + 8);
  if (v4 == *(char **)a1)
  {
    uint64_t v6 = a1 + 24;
    unint64_t v7 = *(unsigned char **)(a1 + 24);
    uint64_t v8 = *(unsigned char **)(a1 + 16);
    if (v8 >= v7)
    {
      if (v7 == v4) {
        unint64_t v12 = 1;
      }
      else {
        unint64_t v12 = (v7 - v4) >> 2;
      }
      uint64_t v13 = 2 * v12;
      uint64_t v14 = (char *)sub_18DEDF808(v6, v12);
      uint64_t v5 = &v14[(v13 + 6) & 0xFFFFFFFFFFFFFFF8];
      int64_t v16 = *(uint64_t **)(a1 + 8);
      uint64_t v17 = v5;
      uint64_t v18 = *(void *)(a1 + 16) - (void)v16;
      if (v18)
      {
        uint64_t v17 = &v5[v18 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v19 = 8 * (v18 >> 3);
        uint64_t v20 = v5;
        do
        {
          uint64_t v21 = *v16++;
          *(void *)uint64_t v20 = v21;
          v20 += 8;
          v19 -= 8;
        }
        while (v19);
      }
      unint64_t v22 = *(char **)a1;
      *(void *)a1 = v14;
      *(void *)(a1 + 8) = v5;
      *(void *)(a1 + 16) = v17;
      *(void *)(a1 + 24) = &v14[8 * v15];
      if (v22)
      {
        operator delete(v22);
        uint64_t v5 = *(char **)(a1 + 8);
      }
    }
    else
    {
      uint64_t v9 = (v7 - v8) >> 3;
      if (v9 >= -1) {
        uint64_t v10 = v9 + 1;
      }
      else {
        uint64_t v10 = v9 + 2;
      }
      uint64_t v11 = v10 >> 1;
      uint64_t v5 = &v4[8 * (v10 >> 1)];
      if (v8 != v4)
      {
        memmove(&v4[8 * (v10 >> 1)], v4, v8 - v4);
        uint64_t v4 = *(char **)(a1 + 16);
      }
      *(void *)(a1 + 8) = v5;
      *(void *)(a1 + 16) = &v4[8 * v11];
    }
  }
  else
  {
    uint64_t v5 = *(char **)(a1 + 8);
  }
  *((void *)v5 - 1) = *a2;
  *(void *)(a1 + 8) -= 8;
}

void sub_18DEDF5A0(void *a1, void *a2)
{
  uint64_t v4 = (char *)a1[2];
  if (v4 == (char *)a1[3])
  {
    uint64_t v5 = (char *)a1[1];
    uint64_t v6 = (uint64_t)&v5[-*a1];
    if ((unint64_t)v5 <= *a1)
    {
      if (v4 == (char *)*a1) {
        unint64_t v16 = 1;
      }
      else {
        unint64_t v16 = (uint64_t)&v4[-*a1] >> 2;
      }
      uint64_t v17 = (char *)sub_18DEDF808(a1[4], v16);
      uint64_t v19 = &v17[8 * (v16 >> 2)];
      uint64_t v20 = (uint64_t *)a1[1];
      uint64_t v4 = v19;
      uint64_t v21 = a1[2] - (void)v20;
      if (v21)
      {
        uint64_t v4 = &v19[v21 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v22 = 8 * (v21 >> 3);
        uint64_t v23 = &v17[8 * (v16 >> 2)];
        do
        {
          uint64_t v24 = *v20++;
          *(void *)uint64_t v23 = v24;
          v23 += 8;
          v22 -= 8;
        }
        while (v22);
      }
      unint64_t v25 = (char *)*a1;
      *a1 = v17;
      a1[1] = v19;
      a1[2] = v4;
      a1[3] = &v17[8 * v18];
      if (v25)
      {
        operator delete(v25);
        uint64_t v4 = (char *)a1[2];
      }
    }
    else
    {
      uint64_t v7 = v6 >> 3;
      BOOL v8 = v6 >> 3 < -1;
      uint64_t v9 = (v6 >> 3) + 2;
      if (v8) {
        uint64_t v10 = v9;
      }
      else {
        uint64_t v10 = v7 + 1;
      }
      uint64_t v11 = -(v10 >> 1);
      uint64_t v12 = v10 >> 1;
      uint64_t v13 = &v5[-8 * v12];
      int64_t v14 = v4 - v5;
      if (v4 != v5)
      {
        memmove(&v5[-8 * v12], v5, v4 - v5);
        uint64_t v4 = (char *)a1[1];
      }
      uint64_t v15 = &v4[8 * v11];
      uint64_t v4 = &v13[v14];
      a1[1] = v15;
      a1[2] = &v13[v14];
    }
  }
  *(void *)uint64_t v4 = *a2;
  a1[2] += 8;
}

void sub_18DEDF6B8(uint64_t a1, void *a2)
{
  uint64_t v4 = *(char **)(a1 + 8);
  if (v4 == *(char **)a1)
  {
    uint64_t v6 = *(unsigned char **)(a1 + 16);
    uint64_t v7 = *(unsigned char **)(a1 + 24);
    if (v6 >= v7)
    {
      if (v7 == v4) {
        unint64_t v11 = 1;
      }
      else {
        unint64_t v11 = (v7 - v4) >> 2;
      }
      uint64_t v12 = 2 * v11;
      uint64_t v13 = (char *)sub_18DEDF808(*(void *)(a1 + 32), v11);
      uint64_t v5 = &v13[(v12 + 6) & 0xFFFFFFFFFFFFFFF8];
      uint64_t v15 = *(uint64_t **)(a1 + 8);
      unint64_t v16 = v5;
      uint64_t v17 = *(void *)(a1 + 16) - (void)v15;
      if (v17)
      {
        unint64_t v16 = &v5[v17 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v18 = 8 * (v17 >> 3);
        uint64_t v19 = v5;
        do
        {
          uint64_t v20 = *v15++;
          *(void *)uint64_t v19 = v20;
          v19 += 8;
          v18 -= 8;
        }
        while (v18);
      }
      uint64_t v21 = *(char **)a1;
      *(void *)a1 = v13;
      *(void *)(a1 + 8) = v5;
      *(void *)(a1 + 16) = v16;
      *(void *)(a1 + 24) = &v13[8 * v14];
      if (v21)
      {
        operator delete(v21);
        uint64_t v5 = *(char **)(a1 + 8);
      }
    }
    else
    {
      uint64_t v8 = (v7 - v6) >> 3;
      if (v8 >= -1) {
        uint64_t v9 = v8 + 1;
      }
      else {
        uint64_t v9 = v8 + 2;
      }
      uint64_t v10 = v9 >> 1;
      uint64_t v5 = &v4[8 * (v9 >> 1)];
      if (v6 != v4)
      {
        memmove(&v4[8 * (v9 >> 1)], v4, v6 - v4);
        uint64_t v4 = *(char **)(a1 + 16);
      }
      *(void *)(a1 + 8) = v5;
      *(void *)(a1 + 16) = &v4[8 * v10];
    }
  }
  else
  {
    uint64_t v5 = *(char **)(a1 + 8);
  }
  *((void *)v5 - 1) = *a2;
  *(void *)(a1 + 8) -= 8;
}

void sub_18DEDF7D4()
{
  exception = (std::bad_array_new_length *)__cxa_allocate_exception(8uLL);
  long double v1 = std::bad_array_new_length::bad_array_new_length(exception);
  __cxa_throw(v1, MEMORY[0x1E4FBA350], MEMORY[0x1E4FBA1F8]);
}

void *sub_18DEDF808(uint64_t a1, unint64_t a2)
{
  if (a2 >> 61) {
    sub_18DEDF7D4();
  }
  return operator new(8 * a2);
}

void sub_18DEDF840(void *a1)
{
  unint64_t v2 = a1[4];
  BOOL v3 = v2 >= 0x100;
  unint64_t v4 = v2 - 256;
  if (v3)
  {
    uint64_t v5 = (uint64_t)(a1 + 3);
    uint64_t v6 = (char *)a1[3];
    a1[4] = v4;
    uint64_t v7 = (void *)a1[1];
    uint64_t v8 = (char *)a1[2];
    uint64_t v11 = *v7;
    uint64_t v9 = (char *)(v7 + 1);
    uint64_t v10 = v11;
    a1[1] = v9;
    if (v8 != v6)
    {
LABEL_33:
      *(void *)uint64_t v8 = v10;
      a1[2] += 8;
      return;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v33 = 1;
      }
      else {
        unint64_t v33 = (uint64_t)&v8[-*a1] >> 2;
      }
      v34 = (char *)sub_18DEDF808(v5, v33);
      v35 = &v34[8 * (v33 >> 2)];
      v37 = &v34[8 * v36];
      char v38 = (uint64_t *)a1[1];
      uint64_t v8 = v35;
      uint64_t v39 = a1[2] - (void)v38;
      if (v39)
      {
        uint64_t v8 = &v35[v39 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v40 = 8 * (v39 >> 3);
        v41 = &v34[8 * (v33 >> 2)];
        do
        {
          uint64_t v42 = *v38++;
          *(void *)v41 = v42;
          v41 += 8;
          v40 -= 8;
        }
        while (v40);
      }
      goto LABEL_30;
    }
LABEL_5:
    uint64_t v13 = v12 >> 3;
    BOOL v14 = v12 >> 3 < -1;
    uint64_t v15 = (v12 >> 3) + 2;
    if (v14) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = v13 + 1;
    }
    uint64_t v17 = -(v16 >> 1);
    uint64_t v18 = v16 >> 1;
    uint64_t v19 = &v9[-8 * v18];
    int64_t v20 = v8 - v9;
    if (v8 != v9)
    {
      memmove(&v9[-8 * v18], v9, v8 - v9);
      uint64_t v9 = (char *)a1[1];
    }
    uint64_t v8 = &v19[v20];
    a1[1] = &v9[8 * v17];
    a1[2] = &v19[v20];
    goto LABEL_33;
  }
  uint64_t v21 = a1[2];
  unint64_t v22 = (v21 - a1[1]) >> 3;
  uint64_t v23 = a1[3];
  uint64_t v24 = v23 - *a1;
  if (v22 < v24 >> 3)
  {
    if (v23 != v21)
    {
      *(void *)&long long v54 = operator new(0x1000uLL);
      sub_18DEDF368(a1, &v54);
      return;
    }
    *(void *)&long long v54 = operator new(0x1000uLL);
    sub_18DEDF480((uint64_t)a1, &v54);
    v44 = (void *)a1[1];
    uint64_t v8 = (char *)a1[2];
    uint64_t v45 = *v44;
    uint64_t v9 = (char *)(v44 + 1);
    uint64_t v10 = v45;
    a1[1] = v9;
    if (v8 != (char *)a1[3]) {
      goto LABEL_33;
    }
    uint64_t v12 = (uint64_t)&v9[-*a1];
    if ((unint64_t)v9 <= *a1)
    {
      if (v8 == (char *)*a1) {
        unint64_t v46 = 1;
      }
      else {
        unint64_t v46 = (uint64_t)&v8[-*a1] >> 2;
      }
      v34 = (char *)sub_18DEDF808((uint64_t)(a1 + 3), v46);
      v35 = &v34[8 * (v46 >> 2)];
      v37 = &v34[8 * v47];
      v48 = (uint64_t *)a1[1];
      uint64_t v8 = v35;
      uint64_t v49 = a1[2] - (void)v48;
      if (v49)
      {
        uint64_t v8 = &v35[v49 & 0xFFFFFFFFFFFFFFF8];
        uint64_t v50 = 8 * (v49 >> 3);
        v51 = &v34[8 * (v46 >> 2)];
        do
        {
          uint64_t v52 = *v48++;
          *(void *)v51 = v52;
          v51 += 8;
          v50 -= 8;
        }
        while (v50);
      }
LABEL_30:
      v43 = (char *)*a1;
      *a1 = v34;
      a1[1] = v35;
      a1[2] = v8;
      a1[3] = v37;
      if (v43)
      {
        operator delete(v43);
        uint64_t v8 = (char *)a1[2];
      }
      goto LABEL_33;
    }
    goto LABEL_5;
  }
  if (v23 == *a1) {
    unint64_t v25 = 1;
  }
  else {
    unint64_t v25 = v24 >> 2;
  }
  v56 = a1 + 3;
  *(void *)&long long v54 = sub_18DEDF808((uint64_t)(a1 + 3), v25);
  *((void *)&v54 + 1) = v54 + 8 * v22;
  *(void *)&long long v55 = *((void *)&v54 + 1);
  *((void *)&v55 + 1) = v54 + 8 * v26;
  v53 = operator new(0x1000uLL);
  sub_18DEDF5A0(&v54, &v53);
  uint64_t v27 = (void *)a1[2];
  uint64_t v28 = -7 - (void)v27;
  while (v27 != (void *)a1[1])
  {
    --v27;
    v28 += 8;
    sub_18DEDF6B8((uint64_t)&v54, v27);
  }
  uint64_t v29 = (char *)*a1;
  long long v30 = v54;
  long long v31 = v55;
  *(void *)&long long v54 = *a1;
  *((void *)&v54 + 1) = v27;
  long long v32 = *((_OWORD *)a1 + 1);
  *(_OWORD *)a1 = v30;
  *((_OWORD *)a1 + 1) = v31;
  long long v55 = v32;
  if (v27 != (void *)v32) {
    *(void *)&long long v55 = v32 + (-(v32 + v28) & 0xFFFFFFFFFFFFFFF8);
  }
  if (v29) {
    operator delete(v29);
  }
}

void sub_18DEDFB0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, uint64_t a13)
{
  operator delete(v13);
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

uint64_t sub_18DEDFB58(uint64_t a1, int a2)
{
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 < 0x200) {
    a2 = 1;
  }
  if (v2 < 0x400) {
    int v4 = a2;
  }
  else {
    int v4 = 0;
  }
  if ((v4 & 1) == 0)
  {
    operator delete(**(void ***)(a1 + 8));
    *(void *)(a1 + 8) += 8;
    *(void *)(a1 + 32) -= 512;
  }
  return v4 ^ 1u;
}

uint64_t sub_18DEDFBB8(uint64_t a1, int a2)
{
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 < 0x100) {
    a2 = 1;
  }
  if (v2 < 0x200) {
    int v4 = a2;
  }
  else {
    int v4 = 0;
  }
  if ((v4 & 1) == 0)
  {
    operator delete(**(void ***)(a1 + 8));
    *(void *)(a1 + 8) += 8;
    *(void *)(a1 + 32) -= 256;
  }
  return v4 ^ 1u;
}

uint64_t cnestimation::PeriodicityTracker::DFTPoint::DFTPoint(uint64_t a1, double a2, long double a3, long double a4)
{
  *(unsigned char *)a1 = 0;
  int64x2_t v5 = vdupq_n_s64(0x7FF8000000000000uLL);
  *(int64x2_t *)(a1 + 8) = v5;
  *(int64x2_t *)(a1 + 24) = v5;
  if ((*(uint64_t *)&a2 > -1 && ((*(void *)&a2 & 0x7FFFFFFFFFFFFFFFuLL) - 0x10000000000000) >> 53 < 0x3FF
     || (unint64_t)(*(void *)&a2 - 1) < 0xFFFFFFFFFFFFFLL
     || (*(void *)&a2 & 0x7FFFFFFFFFFFFFFFLL) == 0)
    && (*(void *)&a3 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && (*(void *)&a4 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL)
  {
    *(double *)(a1 + 8) = a2;
    *(long double *)(a1 + 16) = a3;
    *(long double *)(a1 + 24) = a4;
    double v12 = hypot(a3, a4);
    *(double *)(a1 + 32) = v12;
    if ((*(void *)&v12 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL && v12 >= 0.0) {
      *(unsigned char *)a1 = 1;
    }
  }
  return a1;
}

double cnestimation::PeriodicityTracker::DFTPoint::DFTFrequency(cnestimation::PeriodicityTracker::DFTPoint *this)
{
  return *((double *)this + 1);
}

double cnestimation::PeriodicityTracker::DFTPoint::DFTMagnitude(cnestimation::PeriodicityTracker::DFTPoint *this)
{
  return *((double *)this + 4);
}

double cnestimation::PeriodicityTracker::DFTPoint::DFTValue(cnestimation::PeriodicityTracker::DFTPoint *this)
{
  return *((double *)this + 2);
}

uint64_t cnestimation::PeriodicityTracker::DFTPoint::IsValid(cnestimation::PeriodicityTracker::DFTPoint *this)
{
  return *(unsigned __int8 *)this;
}

cnestimation::PeriodicityTracker *cnestimation::PeriodicityTracker::PeriodicityTracker(cnestimation::PeriodicityTracker *this)
{
  int64x2_t v2 = vdupq_n_s64(0x7FF8000000000000uLL);
  *(int64x2_t *)((char *)this + 8) = v2;
  *(int64x2_t *)((char *)this + 24) = v2;
  *(int64x2_t *)((char *)this + 40) = v2;
  *((_DWORD *)this + 14) = 0;
  *((_WORD *)this + 36) = 0;
  *((void *)this + 10) = 0x7FF8000000000000;
  *((_DWORD *)this + 22) = 0x80000000;
  *(unsigned char *)this = 0;
  *(_OWORD *)((char *)this + 92) = 0u;
  *(_OWORD *)((char *)this + 108) = 0u;
  *(_OWORD *)((char *)this + 124) = 0u;
  *(_OWORD *)((char *)this + 140) = 0u;
  *(_OWORD *)((char *)this + 156) = 0u;
  *(_OWORD *)((char *)this + 172) = 0u;
  *((_DWORD *)this + 47) = 0;
  cnestimation::PeriodicityTracker::Reset(this);
  return this;
}

{
  int64x2_t v2;

  int64x2_t v2 = vdupq_n_s64(0x7FF8000000000000uLL);
  *(int64x2_t *)((char *)this + 8) = v2;
  *(int64x2_t *)((char *)this + 24) = v2;
  *(int64x2_t *)((char *)this + 40) = v2;
  *((_DWORD *)this + 14) = 0;
  *((_WORD *)this + 36) = 0;
  *((void *)this + 10) = 0x7FF8000000000000;
  *((_DWORD *)this + 22) = 0x80000000;
  *(unsigned char *)this = 0;
  *(_OWORD *)((char *)this + 92) = 0u;
  *(_OWORD *)((char *)this + 108) = 0u;
  *(_OWORD *)((char *)this + 124) = 0u;
  *(_OWORD *)((char *)this + 140) = 0u;
  *(_OWORD *)((char *)this + 156) = 0u;
  *(_OWORD *)((char *)this + 172) = 0u;
  *((_DWORD *)this + 47) = 0;
  cnestimation::PeriodicityTracker::Reset(this);
  return this;
}

void cnestimation::PeriodicityTracker::Reset(cnestimation::PeriodicityTracker *this)
{
  *((_WORD *)this + 36) = 0;
  *((void *)this + 10) = 0x7FF8000000000000;
  *((_DWORD *)this + 22) = 0x80000000;
  int64x2_t v2 = (void **)*((void *)this + 13);
  uint64_t v3 = *((void *)this + 14);
  *((void *)this + 17) = 0;
  unint64_t v4 = v3 - (void)v2;
  if (v4 >= 0x11)
  {
    do
    {
      operator delete(*v2);
      uint64_t v5 = *((void *)this + 14);
      int64x2_t v2 = (void **)(*((void *)this + 13) + 8);
      *((void *)this + 13) = v2;
      unint64_t v4 = v5 - (void)v2;
    }
    while (v4 > 0x10);
  }
  if (v4 >> 3 == 1)
  {
    uint64_t v6 = 256;
  }
  else
  {
    if (v4 >> 3 != 2) {
      goto LABEL_8;
    }
    uint64_t v6 = 512;
  }
  *((void *)this + 16) = v6;
LABEL_8:
  uint64_t v7 = *((void *)this + 19);
  if (*((void *)this + 20) != v7)
  {
    unint64_t v8 = *((void *)this + 22);
    uint64_t v9 = *((void *)this + 23);
    uint64_t v10 = (void *)(v7 + 8 * (v8 / 0x1A));
    uint64_t v11 = (cndft::SlidingDFT *)(*v10 + 152 * (v8 % 0x1A));
    unint64_t v12 = *(void *)(v7 + 8 * ((v9 + v8) / 0x1A)) + 152 * ((v9 + v8) % 0x1A);
    while (v11 != (cndft::SlidingDFT *)v12)
    {
      cndft::SlidingDFT::ResetDFT(v11);
      uint64_t v11 = (cndft::SlidingDFT *)((char *)v11 + 152);
      if ((cndft::SlidingDFT *)((char *)v11 - *v10) == (cndft::SlidingDFT *)3952)
      {
        uint64_t v13 = (cndft::SlidingDFT *)v10[1];
        ++v10;
        uint64_t v11 = v13;
      }
    }
  }
}

uint64_t cnestimation::PeriodicityTracker::Configure(uint64_t a1, double *a2)
{
  uint64_t result = 0xFFFFFFFFLL;
  if ((*(void *)a2 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && *a2 > 0.0
    && ((void)a2[1] & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
    && a2[1] > 0.0)
  {
    double v5 = a2[2];
    if ((*(void *)&v5 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL && v5 > 0.0)
    {
      double v6 = a2[3];
      if ((*(void *)&v6 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL && v6 > 0.0 && v5 < v6)
      {
        double v7 = a2[4];
        if ((*(void *)&v7 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
          && v7 > 0.0
          && v7 < 1.0
          && ((void)a2[5] & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
          && a2[5] > 0.0
          && *((_DWORD *)a2 + 12))
        {
          *(unsigned char *)a1 = 0;
          long long v8 = *(_OWORD *)a2;
          long long v9 = *((_OWORD *)a2 + 1);
          long long v10 = *((_OWORD *)a2 + 2);
          *(_DWORD *)(a1 + 56) = *((_DWORD *)a2 + 12);
          *(_OWORD *)(a1 + 40) = v10;
          *(_OWORD *)(a1 + 24) = v9;
          *(_OWORD *)(a1 + 8) = v8;
          unsigned int v11 = vcvtpd_u64_f64(a2[1] / *a2);
          if (v11 <= 1) {
            unsigned int v12 = 1;
          }
          else {
            unsigned int v12 = v11;
          }
          *(_DWORD *)(a1 + 92) = v12;
          double v13 = a2[5] * sqrt((double)v12);
          *(double *)(a1 + 64) = cnstatistics::InverseNormal((cnstatistics *)0xFFFFFFFFLL, 1.0 - a2[4], v13 * 1.25331414, v13);
          double v24 = *a2;
          unsigned int v25 = v12;
          double v14 = v24 * (double)v12;
          double v15 = a2[3];
          double v16 = v14 * a2[2];
          unsigned int v17 = vcvtmd_u64_f64(v16);
          unsigned int v18 = vcvtpd_u64_f64(v14 * v15);
          unsigned int v19 = v18 - v17;
          if (v18 < v17)
          {
LABEL_25:
            if (*(void *)(a1 + 184) == v19 + 1)
            {
              cnestimation::PeriodicityTracker::Reset((cnestimation::PeriodicityTracker *)a1);
              uint64_t result = 0;
              *(unsigned char *)a1 = 1;
              return result;
            }
            cnestimation::PeriodicityTracker::Reset((cnestimation::PeriodicityTracker *)a1);
          }
          else
          {
            while (1)
            {
              unsigned int v26 = v17;
              LOBYTE(v21[0]) = 0;
              *(_OWORD *)&v21[5] = 0u;
              memset(v22, 0, sizeof(v22));
              memset(v23, 0, sizeof(v23));
              int v20 = cndft::SlidingDFT::SetConfiguration((uint64_t)v21, (uint64_t)&v24, 0.0, v16, v15);
              if (v20) {
                cnestimation::PeriodicityTracker::Reset((cnestimation::PeriodicityTracker *)a1);
              }
              else {
                sub_18DEE017C((void *)(a1 + 144), (long long *)v21);
              }
              sub_18DEE1ED0(v23);
              sub_18DEE2DB8(v22);
              if (v20) {
                break;
              }
              if (++v17 > v18) {
                goto LABEL_25;
              }
            }
          }
          return 0xFFFFFFFFLL;
        }
      }
    }
  }
  return result;
}

void sub_18DEE0160(_Unwind_Exception *a1)
{
  sub_18DEE1ED0(v2);
  sub_18DEE2DB8(v1);
  _Unwind_Resume(a1);
}

void sub_18DEE017C(void *a1, long long *a2)
{
  unint64_t v4 = (char *)a1[1];
  double v5 = (char *)a1[2];
  unint64_t v6 = (v5 - v4) >> 3;
  if (v5 == v4) {
    uint64_t v7 = 0;
  }
  else {
    uint64_t v7 = 26 * v6 - 1;
  }
  unint64_t v8 = a1[4];
  if (v7 != a1[5] + v8) {
    goto LABEL_38;
  }
  BOOL v9 = v8 >= 0x1A;
  unint64_t v10 = v8 - 26;
  if (v9)
  {
    a1[4] = v10;
    uint64_t v13 = *(void *)v4;
    unsigned int v11 = v4 + 8;
    uint64_t v12 = v13;
    a1[1] = v11;
    if (v5 == (char *)a1[3])
    {
      uint64_t v14 = (uint64_t)&v11[-*a1];
      if ((unint64_t)v11 <= *a1)
      {
        if (v5 == (char *)*a1) {
          unint64_t v40 = 1;
        }
        else {
          unint64_t v40 = (uint64_t)&v5[-*a1] >> 2;
        }
        v41 = (char *)sub_18DEE2FBC(v40);
        v43 = &v41[8 * (v40 >> 2)];
        v44 = (uint64_t *)a1[1];
        double v5 = v43;
        uint64_t v45 = a1[2] - (void)v44;
        if (v45)
        {
          double v5 = &v43[v45 & 0xFFFFFFFFFFFFFFF8];
          uint64_t v46 = 8 * (v45 >> 3);
          uint64_t v47 = &v41[8 * (v40 >> 2)];
          do
          {
            uint64_t v48 = *v44++;
            *(void *)uint64_t v47 = v48;
            v47 += 8;
            v46 -= 8;
          }
          while (v46);
        }
        uint64_t v49 = (char *)*a1;
        *a1 = v41;
        a1[1] = v43;
        a1[2] = v5;
        a1[3] = &v41[8 * v42];
        if (v49)
        {
          operator delete(v49);
          double v5 = (char *)a1[2];
        }
      }
      else
      {
        uint64_t v15 = v14 >> 3;
        BOOL v16 = v14 >> 3 < -1;
        uint64_t v17 = (v14 >> 3) + 2;
        if (v16) {
          uint64_t v18 = v17;
        }
        else {
          uint64_t v18 = v15 + 1;
        }
        uint64_t v19 = -(v18 >> 1);
        uint64_t v20 = v18 >> 1;
        uint64_t v21 = &v11[-8 * v20];
        int64_t v22 = v5 - v11;
        if (v5 != v11)
        {
          memmove(&v11[-8 * v20], v11, v5 - v11);
          double v5 = (char *)a1[1];
        }
        uint64_t v23 = &v5[8 * v19];
        double v5 = &v21[v22];
        a1[1] = v23;
        a1[2] = &v21[v22];
      }
    }
    *(void *)double v5 = v12;
  }
  else
  {
    double v24 = (char *)a1[3];
    unsigned int v25 = (char *)*a1;
    uint64_t v26 = (uint64_t)&v24[-*a1];
    if (v6 >= v26 >> 3)
    {
      uint64_t v29 = v26 >> 2;
      if (v24 == v25) {
        unint64_t v30 = 1;
      }
      else {
        unint64_t v30 = v29;
      }
      long long v31 = (char *)sub_18DEE2FBC(v30);
      uint64_t v33 = v32;
      v34 = operator new(0xF70uLL);
      v35 = &v31[8 * v6];
      uint64_t v36 = &v31[8 * v33];
      if (v6 == v33)
      {
        uint64_t v37 = 8 * v6;
        if (v5 - v4 < 1)
        {
          v148 = v34;
          uint64_t v149 = v37 >> 2;
          if (v5 == v4) {
            unint64_t v150 = 1;
          }
          else {
            unint64_t v150 = v149;
          }
          v151 = (char *)sub_18DEE2FBC(v150);
          v35 = &v151[8 * (v150 >> 2)];
          uint64_t v36 = &v151[8 * v152];
          if (v31) {
            operator delete(v31);
          }
          long long v31 = v151;
          v34 = v148;
        }
        else
        {
          uint64_t v38 = v37 >> 3;
          if (v38 >= -1) {
            unint64_t v39 = v38 + 1;
          }
          else {
            unint64_t v39 = v38 + 2;
          }
          v35 -= 8 * (v39 >> 1);
        }
      }
      *(void *)v35 = v34;
      double v5 = v35 + 8;
      for (uint64_t i = a1[2]; i != a1[1]; i -= 8)
      {
        if (v35 == v31)
        {
          if (v5 >= v36)
          {
            if (v36 == v31) {
              unint64_t v158 = 1;
            }
            else {
              unint64_t v158 = (v36 - v31) >> 2;
            }
            v159 = (char *)sub_18DEE2FBC(v158);
            v161 = v159;
            v35 = &v159[(2 * v158 + 6) & 0xFFFFFFFFFFFFFFF8];
            uint64_t v163 = v5 - v31;
            BOOL v162 = v5 == v31;
            double v5 = v35;
            if (!v162)
            {
              double v5 = &v35[v163 & 0xFFFFFFFFFFFFFFF8];
              uint64_t v164 = 8 * (v163 >> 3);
              v165 = v35;
              v166 = v31;
              do
              {
                uint64_t v167 = *(void *)v166;
                v166 += 8;
                *(void *)v165 = v167;
                v165 += 8;
                v164 -= 8;
              }
              while (v164);
            }
            uint64_t v36 = &v159[8 * v160];
            if (v31) {
              operator delete(v31);
            }
            long long v31 = v161;
          }
          else
          {
            uint64_t v154 = (v36 - v5) >> 3;
            if (v154 >= -1) {
              uint64_t v155 = v154 + 1;
            }
            else {
              uint64_t v155 = v154 + 2;
            }
            uint64_t v156 = v155 >> 1;
            v35 = &v31[8 * (v155 >> 1)];
            v157 = v31;
            if (v5 != v31)
            {
              memmove(v35, v31, v5 - v31);
              v157 = v5;
            }
            double v5 = &v157[8 * v156];
          }
        }
        uint64_t v168 = *(void *)(i - 8);
        *((void *)v35 - 1) = v168;
        v35 -= 8;
      }
      v169 = (char *)*a1;
      *a1 = v31;
      a1[1] = v35;
      a1[2] = v5;
      a1[3] = v36;
      if (v169)
      {
        operator delete(v169);
        double v5 = (char *)a1[2];
      }
      goto LABEL_37;
    }
    uint64_t v27 = operator new(0xF70uLL);
    uint64_t v28 = v27;
    if (v24 == v5)
    {
      if (v4 == v25)
      {
        if (v5 == v4) {
          unint64_t v126 = 1;
        }
        else {
          unint64_t v126 = (v24 - v4) >> 2;
        }
        uint64_t v127 = 2 * v126;
        v128 = (char *)sub_18DEE2FBC(v126);
        unint64_t v4 = &v128[(v127 + 6) & 0xFFFFFFFFFFFFFFF8];
        v130 = (uint64_t *)a1[1];
        v131 = v4;
        uint64_t v132 = a1[2] - (void)v130;
        if (v132)
        {
          v131 = &v4[v132 & 0xFFFFFFFFFFFFFFF8];
          uint64_t v133 = 8 * (v132 >> 3);
          v134 = &v128[(v127 + 6) & 0xFFFFFFFFFFFFFFF8];
          do
          {
            uint64_t v135 = *v130++;
            *(void *)v134 = v135;
            v134 += 8;
            v133 -= 8;
          }
          while (v133);
        }
        v136 = (char *)*a1;
        *a1 = v128;
        a1[1] = v4;
        a1[2] = v131;
        a1[3] = &v128[8 * v129];
        if (v136)
        {
          operator delete(v136);
          unint64_t v4 = (char *)a1[1];
        }
      }
      *((void *)v4 - 1) = v28;
      v137 = (char *)a1[1];
      v138 = (char *)a1[2];
      a1[1] = v137 - 8;
      uint64_t v139 = *((void *)v137 - 1);
      a1[1] = v137;
      if (v138 == (char *)a1[3])
      {
        uint64_t v140 = (uint64_t)&v137[-*a1];
        if ((unint64_t)v137 <= *a1)
        {
          if (v138 == (char *)*a1) {
            unint64_t v170 = 1;
          }
          else {
            unint64_t v170 = (uint64_t)&v138[-*a1] >> 2;
          }
          v171 = (char *)sub_18DEE2FBC(v170);
          v173 = &v171[8 * (v170 >> 2)];
          v174 = (uint64_t *)a1[1];
          v138 = v173;
          uint64_t v175 = a1[2] - (void)v174;
          if (v175)
          {
            v138 = &v173[v175 & 0xFFFFFFFFFFFFFFF8];
            uint64_t v176 = 8 * (v175 >> 3);
            v177 = &v171[8 * (v170 >> 2)];
            do
            {
              uint64_t v178 = *v174++;
              *(void *)v177 = v178;
              v177 += 8;
              v176 -= 8;
            }
            while (v176);
          }
          v179 = (char *)*a1;
          *a1 = v171;
          a1[1] = v173;
          a1[2] = v138;
          a1[3] = &v171[8 * v172];
          if (v179)
          {
            operator delete(v179);
            v138 = (char *)a1[2];
          }
        }
        else
        {
          uint64_t v141 = v140 >> 3;
          BOOL v16 = v140 >> 3 < -1;
          uint64_t v142 = (v140 >> 3) + 2;
          if (v16) {
            uint64_t v143 = v142;
          }
          else {
            uint64_t v143 = v141 + 1;
          }
          uint64_t v144 = -(v143 >> 1);
          uint64_t v145 = v143 >> 1;
          v146 = &v137[-8 * v145];
          int64_t v147 = v138 - v137;
          if (v138 != v137)
          {
            memmove(&v137[-8 * v145], v137, v138 - v137);
            v137 = (char *)a1[1];
          }
          v138 = &v146[v147];
          a1[1] = &v137[8 * v144];
          a1[2] = &v146[v147];
        }
      }
      *(void *)v138 = v139;
    }
    else
    {
      *(void *)double v5 = v27;
    }
  }
  double v5 = (char *)(a1[2] + 8);
  a1[2] = v5;
LABEL_37:
  unint64_t v4 = (char *)a1[1];
LABEL_38:
  if (v5 == v4)
  {
    unint64_t v51 = 0;
  }
  else
  {
    unint64_t v50 = a1[5] + a1[4];
    unint64_t v51 = *(void *)&v4[8 * (v50 / 0x1A)] + 152 * (v50 % 0x1A);
  }
  long long v52 = *a2;
  long long v53 = a2[1];
  long long v54 = a2[2];
  *(void *)(v51 + 48) = *((void *)a2 + 6);
  *(_OWORD *)(v51 + 16) = v53;
  *(_OWORD *)(v51 + 32) = v54;
  *(_OWORD *)unint64_t v51 = v52;
  *(_OWORD *)(v51 + 56) = 0u;
  *(_OWORD *)(v51 + 72) = 0u;
  *(_OWORD *)(v51 + 88) = 0u;
  unint64_t v55 = *((void *)a2 + 11);
  uint64_t v56 = *((void *)a2 + 8);
  v57 = (char *)(v56 + 8 * (v55 >> 9));
  if (*((void *)a2 + 9) == v56)
  {
    v58 = 0;
    uint64_t v61 = 0;
    v60 = (char *)(v56 + 8 * ((*((void *)a2 + 12) + v55) >> 9));
  }
  else
  {
    v58 = (char *)(*(void *)v57 + 8 * (*((void *)a2 + 11) & 0x1FFLL));
    unint64_t v59 = *((void *)a2 + 12) + v55;
    v60 = (char *)(v56 + 8 * (v59 >> 9));
    uint64_t v61 = *(void *)v60 + 8 * (v59 & 0x1FF);
  }
  if ((char *)v61 != v58)
  {
    uint64_t v62 = ((v61 - *(void *)v60) >> 3) + ((v60 - v57) << 6);
    uint64_t v63 = (uint64_t)&v58[-*(void *)v57];
    uint64_t v64 = v62 - (v63 >> 3);
    if (v62 != v63 >> 3)
    {
      if (((v64 + 1) & 0x1FF) != 0) {
        unint64_t v65 = ((unint64_t)(v64 + 1) >> 9) + 1;
      }
      else {
        unint64_t v65 = (unint64_t)(v64 + 1) >> 9;
      }
      if (v65)
      {
        unint64_t v184 = v51 + 80;
        v181 = (char *)sub_18DEDF808(v51 + 80, v65);
        v182 = v181;
        *(void *)&long long v183 = v181;
        *((void *)&v183 + 1) = &v181[8 * v66];
        uint64_t v67 = -(uint64_t)v65;
        do
        {
          v180 = operator new(0x1000uLL);
          sub_18DEDF5A0(&v181, &v180);
          BOOL v9 = __CFADD__(v67++, 1);
        }
        while (!v9);
        v68 = *(void **)(v51 + 72);
        uint64_t v69 = -7 - (void)v68;
        while (v68 != *(void **)(v51 + 64))
        {
          --v68;
          v69 += 8;
          sub_18DEDF6B8((uint64_t)&v181, v68);
        }
        v70 = *(char **)(v51 + 56);
        v71 = v182;
        *(void *)(v51 + 56) = v181;
        *(void *)(v51 + 64) = v71;
        v181 = v70;
        v182 = v68;
        v72 = (void *)v183;
        long long v73 = *(_OWORD *)(v51 + 72);
        *(_OWORD *)(v51 + 72) = v183;
        long long v183 = v73;
        if (v68 != (void *)v73) {
          *(void *)&long long v183 = v73 + (-(v73 + v69) & 0xFFFFFFFFFFFFFFF8);
        }
        if (v70)
        {
          operator delete(v70);
          uint64_t v74 = *(void *)(v51 + 88);
          v71 = *(void **)(v51 + 64);
          v75 = *(void **)(v51 + 72);
        }
        else
        {
          uint64_t v74 = *(void *)(v51 + 88);
          v75 = v72;
        }
        uint64_t v77 = *(void *)(v51 + 96);
        __int16 v79 = v77 + v74;
        v78 = &v71[(unint64_t)(v77 + v74) >> 9];
        if (v75 == v71) {
          uint64_t v76 = 0;
        }
        else {
          uint64_t v76 = *v78 + 8 * (v79 & 0x1FF);
        }
      }
      else
      {
        uint64_t v76 = 0;
        uint64_t v77 = 0;
        v78 = 0;
      }
      uint64_t v80 = *v78;
      uint64_t v81 = v64 + ((v76 - *v78) >> 3);
      if (v81 < 1)
      {
        unint64_t v83 = 511 - v81;
        LOWORD(v81) = ~(511 - v81);
        v82 = &v78[-(v83 >> 9)];
      }
      else
      {
        v82 = &v78[(unint64_t)v81 >> 9];
      }
      uint64_t v84 = *v82 + 8 * (v81 & 0x1FF);
      if (v76 != v84)
      {
        do
        {
          v85 = (void *)(v80 + 4096);
          if (v78 == v82) {
            v85 = (void *)v84;
          }
          if ((void *)v76 == v85)
          {
            v85 = (void *)v76;
          }
          else
          {
            v86 = *(char **)v57;
            v87 = (void *)v76;
            do
            {
              uint64_t v88 = *(void *)v58;
              v58 += 8;
              *v87++ = v88;
              if (v58 - v86 == 4096)
              {
                v89 = (char *)*((void *)v57 + 1);
                v57 += 8;
                v86 = v89;
                v58 = v89;
              }
            }
            while (v87 != v85);
          }
          v77 += ((uint64_t)v85 - v76) >> 3;
          if (v78 == v82) {
            break;
          }
          uint64_t v90 = v78[1];
          ++v78;
          uint64_t v80 = v90;
          uint64_t v76 = v90;
        }
        while (v90 != v84);
        *(void *)(v51 + 96) = v77;
      }
    }
  }
  *(_OWORD *)(v51 + 104) = 0u;
  *(_OWORD *)(v51 + 120) = 0u;
  *(_OWORD *)(v51 + 136) = 0u;
  unint64_t v91 = *((void *)a2 + 17);
  uint64_t v92 = *((void *)a2 + 14);
  v93 = (char *)(v92 + 8 * (v91 >> 8));
  if (*((void *)a2 + 15) == v92)
  {
    v94 = 0;
    uint64_t v97 = 0;
    v96 = (char *)(v92 + 8 * ((*((void *)a2 + 18) + v91) >> 8));
  }
  else
  {
    v94 = (long long *)(*(void *)v93 + 16 * v91);
    unint64_t v95 = *((void *)a2 + 18) + v91;
    v96 = (char *)(v92 + 8 * (v95 >> 8));
    uint64_t v97 = *(void *)v96 + 16 * v95;
  }
  if ((long long *)v97 != v94)
  {
    uint64_t v98 = ((v97 - *(void *)v96) >> 4) + 32 * (v96 - v93);
    uint64_t v99 = (uint64_t)v94 - *(void *)v93;
    uint64_t v100 = v98 - (v99 >> 4);
    if (v98 != v99 >> 4)
    {
      if ((_BYTE)v100 == 0xFF) {
        unint64_t v101 = (unint64_t)(v100 + 1) >> 8;
      }
      else {
        unint64_t v101 = ((unint64_t)(v100 + 1) >> 8) + 1;
      }
      if (v101)
      {
        unint64_t v184 = v51 + 128;
        v181 = (char *)sub_18DEDF808(v51 + 128, v101);
        v182 = v181;
        *(void *)&long long v183 = v181;
        *((void *)&v183 + 1) = &v181[8 * v102];
        uint64_t v103 = -(uint64_t)v101;
        do
        {
          v180 = operator new(0x1000uLL);
          sub_18DEDF5A0(&v181, &v180);
          BOOL v9 = __CFADD__(v103++, 1);
        }
        while (!v9);
        v104 = *(void **)(v51 + 120);
        uint64_t v105 = -7 - (void)v104;
        while (v104 != *(void **)(v51 + 112))
        {
          --v104;
          v105 += 8;
          sub_18DEDF6B8((uint64_t)&v181, v104);
        }
        v106 = *(char **)(v51 + 104);
        v107 = v182;
        *(void *)(v51 + 104) = v181;
        *(void *)(v51 + 112) = v107;
        v181 = v106;
        v182 = v104;
        v108 = (void *)v183;
        long long v109 = *(_OWORD *)(v51 + 120);
        *(_OWORD *)(v51 + 120) = v183;
        long long v183 = v109;
        if (v104 != (void *)v109) {
          *(void *)&long long v183 = v109 + (-(v109 + v105) & 0xFFFFFFFFFFFFFFF8);
        }
        if (v106)
        {
          operator delete(v106);
          uint64_t v110 = *(void *)(v51 + 136);
          v107 = *(void **)(v51 + 112);
          v111 = *(void **)(v51 + 120);
        }
        else
        {
          uint64_t v110 = *(void *)(v51 + 136);
          v111 = v108;
        }
        uint64_t v113 = *(void *)(v51 + 144);
        unsigned __int8 v115 = v113 + v110;
        v114 = &v107[(unint64_t)(v113 + v110) >> 8];
        if (v111 == v107) {
          uint64_t v112 = 0;
        }
        else {
          uint64_t v112 = *v114 + 16 * v115;
        }
      }
      else
      {
        uint64_t v112 = 0;
        uint64_t v113 = 0;
        v114 = 0;
      }
      uint64_t v116 = *v114;
      uint64_t v117 = v100 + ((v112 - *v114) >> 4);
      if (v117 < 1)
      {
        unint64_t v119 = 255 - v117;
        LOBYTE(v117) = ~(-1 - v117);
        v118 = &v114[-(v119 >> 8)];
      }
      else
      {
        v118 = &v114[(unint64_t)v117 >> 8];
      }
      uint64_t v120 = *v118 + 16 * v117;
      if (v112 != v120)
      {
        do
        {
          v121 = (_OWORD *)(v116 + 4096);
          if (v114 == v118) {
            v121 = (_OWORD *)v120;
          }
          if ((_OWORD *)v112 == v121)
          {
            v121 = (_OWORD *)v112;
          }
          else
          {
            v122 = (_OWORD *)v112;
            do
            {
              long long v123 = *v94++;
              _OWORD *v122 = v123;
              if ((long long *)((char *)v94 - *(void *)v93) == (long long *)4096)
              {
                v124 = (long long *)*((void *)v93 + 1);
                v93 += 8;
                v94 = v124;
              }
              ++v122;
            }
            while (v122 != v121);
            uint64_t v113 = *(void *)(v51 + 144);
          }
          v113 += ((uint64_t)v121 - v112) >> 4;
          *(void *)(v51 + 144) = v113;
          if (v114 == v118) {
            break;
          }
          uint64_t v125 = v114[1];
          ++v114;
          uint64_t v116 = v125;
          uint64_t v112 = v125;
        }
        while (v125 != v120);
      }
    }
  }
  ++a1[5];
}

void sub_18DEE0B58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12)
{
  operator delete(v13);
  if (v12) {
    operator delete(v12);
  }
  _Unwind_Resume(a1);
}

uint64_t cnestimation::PeriodicityTracker::IsConfigured(cnestimation::PeriodicityTracker *this)
{
  return *(unsigned __int8 *)this;
}

BOOL cnestimation::PeriodicityTracker::IsValid(cnestimation::PeriodicityTracker *this)
{
  if (!*(unsigned char *)this) {
    return 0;
  }
  LODWORD(v1) = vcvtpd_u64_f64(*((double *)this + 2) / *((double *)this + 1));
  if (v1 <= 1) {
    unint64_t v1 = 1;
  }
  else {
    unint64_t v1 = v1;
  }
  return *((void *)this + 17) >= v1;
}

uint64_t cnestimation::PeriodicityTracker::AddSignalSample(cnestimation::PeriodicityTracker *this, double a2)
{
  v165[0] = a2;
  if (!*(unsigned char *)this) {
    return 0xFFFFFFFFLL;
  }
  if ((*(void *)&a2 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
  {
LABEL_18:
    cnestimation::PeriodicityTracker::Reset(this);
    return 0xFFFFFFFFLL;
  }
  sub_18DEDEC14((void *)this + 12, v165);
  unint64_t v3 = *((void *)this + 17);
  if (v3 > *((unsigned int *)this + 23))
  {
    ++*((void *)this + 16);
    *((void *)this + 17) = v3 - 1;
    sub_18DEDFB58((uint64_t)this + 96, 1);
  }
  uint64_t v4 = *((void *)this + 19);
  if (*((void *)this + 20) == v4)
  {
    double v5 = (unint64_t *)((char *)this + 184);
  }
  else
  {
    double v5 = (unint64_t *)((char *)this + 184);
    unint64_t v6 = *((void *)this + 22);
    uint64_t v7 = (void *)(v4 + 8 * (v6 / 0x1A));
    unint64_t v8 = *v7 + 152 * (v6 % 0x1A);
    unint64_t v9 = *(void *)(v4 + 8 * ((*((void *)this + 23) + v6) / 0x1A)) + 152 * ((*((void *)this + 23) + v6) % 0x1A);
    if (v8 != v9)
    {
      int v10 = 1;
      do
      {
        if (cndft::SlidingDFT::AddSample((cndft::SlidingDFT *)v8, v165[0])) {
          goto LABEL_18;
        }
        unint64_t v11 = *(void *)(v8 + 144);
        if (*((void *)this + 17) != v11) {
          goto LABEL_18;
        }
        if (*(unsigned char *)v8) {
          BOOL v12 = v11 >= *(unsigned int *)(v8 + 16);
        }
        else {
          BOOL v12 = 0;
        }
        v8 += 152;
        if (v8 - *v7 == 3952)
        {
          unint64_t v13 = v7[1];
          ++v7;
          unint64_t v8 = v13;
        }
        v10 &= v12;
      }
      while (v8 != v9);
      if (!v10) {
        return 0;
      }
    }
  }
  unint64_t v16 = *v5;
  if (*v5 < 3) {
    return 0;
  }
  if (v16 > 0x666666666666666) {
    sub_18DEE1FC8();
  }
  uint64_t v17 = (char *)sub_18DEE1FE0(v16);
  uint64_t v19 = v17;
  unint64_t v20 = (*((_DWORD *)this + 34) - 1);
  uint64_t v21 = *((void *)this + 19);
  if (*((void *)this + 20) != v21)
  {
    unint64_t v22 = *((void *)this + 22);
    uint64_t v23 = (void *)(v21 + 8 * (v22 / 0x1A));
    unint64_t v24 = *v23 + 152 * (v22 % 0x1A);
    unint64_t v25 = *(void *)(v21 + 8 * ((*((void *)this + 23) + v22) / 0x1A)) + 152 * ((*((void *)this + 23) + v22) % 0x1A);
    if (v24 != v25)
    {
      uint64_t v26 = &v17[40 * v18];
      unint64_t v27 = (unint64_t)v17;
      while (1)
      {
        long double v28 = 0.0;
        if (!*(unsigned char *)v24) {
          break;
        }
        uint64_t v29 = *(void *)(v24 + 32);
        if (*(void *)(v24 + 144) <= v20)
        {
          unint64_t v30 = v20;
          goto LABEL_33;
        }
        unint64_t v30 = v20;
        long long v31 = (void *)(*(void *)(*(void *)(v24 + 112)
                                   + (((*(void *)(v24 + 136) + v20) >> 5) & 0x7FFFFFFFFFFFFF8))
                       + 16 * (*(unsigned char *)(v24 + 136) + v20));
        long double v32 = *(double *)v31;
        long double v28 = *((double *)v31 + 1);
LABEL_34:
        if ((v29 <= -1 || ((v29 & 0x7FFFFFFFFFFFFFFFuLL) - 0x10000000000000) >> 53 >= 0x3FF)
          && (unint64_t)(v29 - 1) >= 0xFFFFFFFFFFFFFLL
          && (v29 & 0x7FFFFFFFFFFFFFFFLL) != 0
          || (*(void *)&v32 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL
          || (*(void *)&v28 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL)
        {
          goto LABEL_135;
        }
        double v38 = hypot(v32, v28);
        double v39 = v38;
        if ((*(void *)&v38 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL || v38 < 0.0) {
          goto LABEL_135;
        }
        if (v27 >= (unint64_t)v26)
        {
          unint64_t v41 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v27 - (void)v19) >> 3) + 1;
          if (v41 > 0x666666666666666) {
            sub_18DEE1FC8();
          }
          if (0x999999999999999ALL * ((v26 - v19) >> 3) > v41) {
            unint64_t v41 = 0x999999999999999ALL * ((v26 - v19) >> 3);
          }
          if (0xCCCCCCCCCCCCCCCDLL * ((v26 - v19) >> 3) >= 0x333333333333333) {
            unint64_t v42 = 0x666666666666666;
          }
          else {
            unint64_t v42 = v41;
          }
          if (v42) {
            unint64_t v42 = (unint64_t)sub_18DEE1FE0(v42);
          }
          else {
            uint64_t v43 = 0;
          }
          unint64_t v44 = v42 + 8 * ((uint64_t)(v27 - (void)v19) >> 3);
          *(unsigned char *)unint64_t v44 = 1;
          *(void *)(v44 + 8) = v29;
          *(long double *)(v44 + 16) = v32;
          *(long double *)(v44 + 24) = v28;
          *(double *)(v44 + 32) = v39;
          if ((char *)v27 == v19)
          {
            uint64_t v48 = (char *)(v42 + 8 * ((uint64_t)(v27 - (void)v19) >> 3));
          }
          else
          {
            unint64_t v45 = v42 + 8 * ((uint64_t)(v27 - (void)v19) >> 3);
            do
            {
              long long v46 = *(_OWORD *)(v27 - 40);
              long long v47 = *(_OWORD *)(v27 - 24);
              uint64_t v48 = (char *)(v45 - 40);
              *(void *)(v45 - 8) = *(void *)(v27 - 8);
              *(_OWORD *)(v45 - 24) = v47;
              *(_OWORD *)(v45 - 40) = v46;
              v27 -= 40;
              v45 -= 40;
            }
            while ((char *)v27 != v19);
          }
          uint64_t v26 = (char *)(v42 + 40 * v43);
          unint64_t v27 = v44 + 40;
          if (v19) {
            operator delete(v19);
          }
          uint64_t v19 = v48;
          unint64_t v20 = v30;
        }
        else
        {
          *(unsigned char *)unint64_t v27 = 1;
          int v40 = v151;
          *(_DWORD *)(v27 + 4) = *(_DWORD *)((char *)&v151 + 3);
          *(_DWORD *)(v27 + 1) = v40;
          *(void *)(v27 + 8) = v29;
          *(long double *)(v27 + 16) = v32;
          *(long double *)(v27 + 24) = v28;
          *(double *)(v27 + 32) = v38;
          v27 += 40;
          unint64_t v20 = v30;
        }
        v24 += 152;
        if (v24 - *v23 == 3952)
        {
          unint64_t v49 = v23[1];
          ++v23;
          unint64_t v24 = v49;
        }
        if (v24 == v25) {
          goto LABEL_77;
        }
      }
      unint64_t v30 = v20;
      uint64_t v29 = 0x7FF8000000000000;
LABEL_33:
      long double v32 = 0.0;
      goto LABEL_34;
    }
  }
  unint64_t v27 = (unint64_t)v17;
LABEL_77:
  unint64_t v50 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(v27 - (void)v19) >> 3);
  unint64_t v51 = 126 - 2 * __clz(v50);
  if ((char *)v27 == v19) {
    uint64_t v52 = 0;
  }
  else {
    uint64_t v52 = v51;
  }
  sub_18DEE2028((unint64_t)v19, v27, v52, 1);
  if (v50)
  {
    unsigned int v57 = v50 - 1;
    if (((v50 - 1) & 2) == 0)
    {
      double v53 = 0.5;
      double v54 = (*(double *)&v19[40 * (v57 >> 2) - 8] + *(double *)&v19[40 * (v57 >> 2) + 32]) * 0.5;
      double v55 = *(double *)&v19[40 * (v57 - (v57 >> 2)) + 32];
      uint64_t v56 = &v19[40 * (v50 - (v57 >> 2))];
      goto LABEL_85;
    }
    unsigned int v61 = (v57 >> 1) - 1;
    double v54 = *(double *)&v19[40 * (v61 >> 1) + 32];
    v60 = &v19[40 * (v57 - (v61 >> 1))];
LABEL_88:
    double v58 = *((double *)v60 + 4);
    goto LABEL_89;
  }
  if ((v50 & 2) != 0)
  {
    unsigned int v59 = (v50 >> 1) - 1;
    double v54 = *(double *)&v19[40 * (v59 >> 1) + 32];
    v60 = &v19[40 * (~(v59 >> 1) - 858993459 * ((uint64_t)(v27 - (void)v19) >> 3))];
    goto LABEL_88;
  }
  double v53 = 0.5;
  double v54 = (*(double *)&v19[40 * (v50 >> 2) - 8] + *(double *)&v19[40 * (v50 >> 2) + 32]) * 0.5;
  double v55 = *(double *)&v19[40
                      * (~((-858993459 * ((uint64_t)(v27 - (void)v19) >> 3)) >> 2)
                       - 858993459 * ((uint64_t)(v27 - (void)v19) >> 3))
                      + 32];
  uint64_t v56 = &v19[40 * (v50 - (v50 >> 2))];
LABEL_85:
  double v58 = (v55 + *((double *)v56 + 4)) * v53;
LABEL_89:
  double v62 = v58 + (v58 - v54) * 1.5;
  double v64 = nextafter(1.0, INFINITY) + -1.0;
  int64x2_t v65 = vdupq_n_s64(0x7FF8000000000000uLL);
  uint64_t v161 = 0x7FF8000000000000;
  uint64_t v156 = 0x7FF8000000000000;
  if (v62 > v64) {
    double v64 = v62;
  }
  double v66 = v64;
  v162[0] = 0;
  int64x2_t v163 = v65;
  int64x2_t v164 = v65;
  v157[0] = 0;
  LOBYTE(v155[0]) = 0;
  uint64_t v67 = *((void *)this + 19);
  if (*((void *)this + 20) == v67
    || (unint64_t v68 = *((void *)this + 22),
        unint64_t v69 = *(void *)(v67 + 8 * (v68 / 0x1A)) + 152 * (v68 % 0x1A),
        unint64_t v70 = *(void *)(v67 + 8 * ((*v5 + v68) / 0x1A)) + 152 * ((*v5 + v68) % 0x1A),
        v69 == v70))
  {
LABEL_138:
    uint64_t v14 = 0;
    *((void *)this + 10) = 0x7FF8000000000000;
    *((_WORD *)this + 36) = 0;
    *((_DWORD *)this + 22) = 0x80000000;
    if (!v19) {
      return v14;
    }
    goto LABEL_139;
  }
  BOOL v71 = 0;
  char v72 = 0;
  char v73 = 0;
  BOOL v74 = 0;
  double v75 = *((double *)this + 8);
  double v76 = v75 + v75;
  uint64_t v77 = (void *)(v67 + 8 * (v68 / 0x1A));
  uint64_t v78 = 0x7FF8000000000000;
  uint64_t v79 = 0x7FF8000000000000;
  uint64_t v80 = 0x7FF8000000000000;
  uint64_t v81 = 0x7FF8000000000000;
  uint64_t v82 = 0x7FF8000000000000;
  uint64_t v83 = 0x7FF8000000000000;
  double v84 = NAN;
  uint64_t v85 = 0x7FF8000000000000;
  uint64_t v86 = 0x7FF8000000000000;
  uint64_t v87 = 0x7FF8000000000000;
  uint64_t v88 = 0x7FF8000000000000;
  uint64_t v89 = 0x7FF8000000000000;
  uint64_t v90 = 0x7FF8000000000000;
  uint64_t v91 = 0x7FF8000000000000;
  double v139 = v64;
  do
  {
    long double v92 = 0.0;
    if (*(unsigned char *)v69)
    {
      uint64_t v93 = *(void *)(v69 + 32);
      if (*(void *)(v69 + 144) > v20)
      {
        v94 = (void *)(*(void *)(*(void *)(v69 + 112)
                                   + (((*(void *)(v69 + 136) + v20) >> 5) & 0x7FFFFFFFFFFFFF8))
                       + 16 * (*(unsigned char *)(v69 + 136) + v20));
        long double v95 = *(double *)v94;
        long double v92 = *((double *)v94 + 1);
        goto LABEL_99;
      }
    }
    else
    {
      uint64_t v93 = 0x7FF8000000000000;
    }
    long double v95 = 0.0;
LABEL_99:
    BOOL v98 = v93 > -1 && ((v93 & 0x7FFFFFFFFFFFFFFFuLL) - 0x10000000000000) >> 53 < 0x3FF
       || (unint64_t)(v93 - 1) < 0xFFFFFFFFFFFFFLL
       || (v93 & 0x7FFFFFFFFFFFFFFFLL) == 0;
    if (v98
      && (*(void *)&v95 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
      && (*(void *)&v92 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL)
    {
      uint64_t v148 = v79;
      uint64_t v149 = v78;
      uint64_t v146 = v81;
      uint64_t v147 = v80;
      uint64_t v144 = v83;
      uint64_t v145 = v82;
      double v142 = v84;
      uint64_t v143 = v85;
      uint64_t v140 = v87;
      uint64_t v141 = v86;
      double v99 = hypot(v95, v92);
      uint64_t v87 = v140;
      uint64_t v86 = v141;
      double v84 = v142;
      uint64_t v85 = v143;
      uint64_t v83 = v144;
      uint64_t v82 = v145;
      uint64_t v81 = v146;
      uint64_t v80 = v147;
      uint64_t v79 = v148;
      uint64_t v78 = v149;
      double v76 = v75 + v75;
      double v66 = v139;
      BOOL v101 = v99 >= 0.0 && (*(void *)&v99 & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000;
      if ((v72 & 1) == 0) {
        goto LABEL_122;
      }
    }
    else
    {
      BOOL v101 = 0;
      double v99 = NAN;
      long double v92 = NAN;
      long double v95 = NAN;
      uint64_t v93 = 0x7FF8000000000000;
      if ((v72 & 1) == 0) {
        goto LABEL_122;
      }
    }
    LOBYTE(v155[0]) = v101;
    uint64_t v156 = *(void *)&v99;
    uint64_t v85 = *(void *)&v92;
    uint64_t v86 = *(void *)&v95;
    uint64_t v87 = v93;
LABEL_122:
    if (v71 && v84 - v99 > v76) {
      break;
    }
    char v72 = 0;
    if (v99 > v66 && v99 > v75)
    {
      if (v71 && v99 <= v84)
      {
        char v72 = 0;
        char v73 = 1;
      }
      else
      {
        char v73 = 1;
        v155[0] = 0;
        uint64_t v156 = 0x7FF8000000000000;
        uint64_t v85 = 0x7FF8000000000000;
        uint64_t v78 = *(void *)&v92;
        uint64_t v79 = *(void *)&v95;
        uint64_t v80 = v93;
        v162[0] = v74;
        v164.i64[1] = v88;
        uint64_t v81 = v89;
        uint64_t v82 = v90;
        uint64_t v83 = v91;
        double v84 = v99;
        v157[0] = v101;
        uint64_t v161 = *(void *)&v99;
        BOOL v71 = v101;
        uint64_t v86 = 0x7FF8000000000000;
        uint64_t v87 = 0x7FF8000000000000;
        char v72 = 1;
      }
    }
    v69 += 152;
    if (v69 - *v77 == 3952)
    {
      unint64_t v102 = v77[1];
      ++v77;
      unint64_t v69 = v102;
    }
    uint64_t v88 = *(void *)&v99;
    uint64_t v89 = *(void *)&v92;
    uint64_t v90 = *(void *)&v95;
    uint64_t v91 = v93;
    BOOL v74 = v101;
  }
  while (v69 != v70);
  v155[1] = v87;
  v155[2] = v86;
  v155[3] = v85;
  v163.i64[0] = v83;
  v163.i64[1] = v82;
  v164.i64[0] = v81;
  uint64_t v158 = v80;
  uint64_t v159 = v79;
  uint64_t v160 = v78;
  *(double *)&uint64_t v154 = NAN;
  if ((v73 & 1) == 0) {
    goto LABEL_138;
  }
  if (cnestimation::PeriodicityTracker::InterpolateDFTPeak((cnestimation::PeriodicityTracker *)v162, (const cnestimation::PeriodicityTracker::DFTPoint *)v157, (const cnestimation::PeriodicityTracker::DFTPoint *)v155, (const cnestimation::PeriodicityTracker::DFTPoint *)&v154, v63))goto LABEL_135; {
  double v103 = *(double *)&v154;
  }
  *((double *)this + 10) = *(double *)&v154;
  *((_WORD *)this + 36) = 256;
  int v104 = *((_DWORD *)this + 22);
  if (v104 <= 0)
  {
    *((_DWORD *)this + 22) = 0x80000000;
  }
  else
  {
    int v105 = v104 - 1;
    *((_DWORD *)this + 22) = v105;
    if (v105) {
      goto LABEL_142;
    }
    *((unsigned char *)this + 72) = 1;
  }
  if (fabs(v103) < 2.22044605e-16) {
    goto LABEL_135;
  }
  double v106 = 1.0 / *((double *)this + 1);
  if (v106 * 0.5 <= v103) {
    goto LABEL_135;
  }
  unsigned int v107 = vcvtpd_u64_f64(1.0 / v103 * v106);
  if (!v107) {
    goto LABEL_135;
  }
  double v108 = v103 + v103;
  BOOL v109 = v108 < 0.0 || ((*(void *)&v108 & 0x7FFFFFFFFFFFFFFFuLL) - 0x10000000000000) >> 53 > 0x3FE;
  BOOL v110 = v109 && (unint64_t)(*(void *)&v108 - 1) > 0xFFFFFFFFFFFFELL;
  if (v110
    || ((unint64_t v111 = (unint64_t)(COERCE__INT64(fabs(1.0 / *((double *)this + 1))) - 0x10000000000000) >> 53,
         *(uint64_t *)&v106 > -1)
      ? (BOOL v112 = v111 >= 0x3FF)
      : (BOOL v112 = 1),
        v112 ? (BOOL v113 = (unint64_t)(*(void *)&v106 - 1) >= 0xFFFFFFFFFFFFFLL) : (BOOL v113 = 0),
        v113))
  {
LABEL_135:
    cnestimation::PeriodicityTracker::Reset(this);
    goto LABEL_136;
  }
  double v114 = 1.0 / v106 / (1.0 / (v108 * 6.28318531) + 1.0 / v106);
  long long v152 = 0u;
  long long v153 = 0u;
  long long v151 = 0u;
  uint64_t v115 = *((void *)this + 13);
  if (*((void *)this + 14) == v115
    || (unint64_t v116 = *((void *)this + 16) + *((void *)this + 17),
        uint64_t v117 = (uint64_t *)(v115 + 8 * (v116 >> 9)),
        uint64_t v118 = *v117,
        uint64_t v119 = *v117 + 8 * (v116 & 0x1FF),
        uint64_t v120 = *(void *)(v115 + ((*((void *)this + 16) >> 6) & 0x3FFFFFFFFFFFFF8))
             + 8 * (*((void *)this + 16) & 0x1FFLL),
        v119 == v120))
  {
    uint64_t v126 = 0;
  }
  else
  {
    unsigned int v121 = v107 + 1;
    double v122 = 0.0;
    char v123 = 1;
    do
    {
      uint64_t v124 = v119;
      if (v119 == v118) {
        uint64_t v124 = *(v117 - 1) + 4096;
      }
      if (!--v121) {
        break;
      }
      if (v123) {
        double v122 = *(double *)(v124 - 8);
      }
      else {
        double v122 = (1.0 - v114) * v122 + v114 * *(double *)(v124 - 8);
      }
      double v150 = v122;
      sub_18DEE1AB4((uint64_t)&v151, &v150);
      uint64_t v118 = *v117;
      if (v119 == *v117)
      {
        uint64_t v125 = *--v117;
        uint64_t v118 = v125;
        uint64_t v119 = v125 + 4096;
      }
      char v123 = 0;
      v119 -= 8;
    }
    while (v119 != v120);
    uint64_t v126 = *((void *)&v153 + 1);
  }
  if (v126 != v107 || (int v127 = *((_DWORD *)this + 14)) == 0)
  {
    cnestimation::PeriodicityTracker::Reset(this);
    sub_18DEE2DB8(&v151);
LABEL_136:
    uint64_t v14 = 0xFFFFFFFFLL;
    if (!v19) {
      return v14;
    }
    goto LABEL_139;
  }
  if (v127 == 2)
  {
    *(double *)&unint64_t v128 = -INFINITY;
  }
  else if (v127 == 1)
  {
    *(double *)&unint64_t v128 = INFINITY;
  }
  else
  {
    *(double *)&unint64_t v128 = NAN;
  }
  double v129 = *(double *)&v128;
  if ((void)v152 != *((void *)&v151 + 1))
  {
    v130 = (double **)(*((void *)&v151 + 1) + 8 * ((unint64_t)v153 >> 9));
    v131 = *v130;
    uint64_t v132 = &(*v130)[v153 & 0x1FF];
    uint64_t v133 = *(void *)(*((void *)&v151 + 1) + (((unint64_t)(v153 + v126) >> 6) & 0x3FFFFFFFFFFFFF8))
         + 8 * ((v153 + v126) & 0x1FF);
    if (v132 != (double *)v133)
    {
      double v134 = 0.0;
      int v135 = 1;
      char v136 = 1;
      do
      {
        double v134 = (1.0 - v114) * v134 + v114 * *v132;
        if (v136) {
          double v134 = *v132;
        }
        if (v127 == 1)
        {
          if (v129 < v134) {
            goto LABEL_194;
          }
        }
        else if (v127 != 2 || v129 > v134)
        {
          goto LABEL_194;
        }
        *((_DWORD *)this + 22) = v135;
        double v129 = v134;
LABEL_194:
        if ((char *)++v132 - (char *)v131 == 4096)
        {
          v137 = v130[1];
          ++v130;
          v131 = v137;
          uint64_t v132 = v137;
        }
        char v136 = 0;
        ++v135;
      }
      while (v132 != (double *)v133);
    }
  }
  if (*((unsigned char *)this + 72))
  {
    signed int v138 = *((_DWORD *)this + 22);
    if (v138 < (int)vcvtpd_s64_f64((double)v107 * 0.75)) {
      *((_DWORD *)this + 22) = v138 + v107;
    }
  }
  sub_18DEE2DB8(&v151);
LABEL_142:
  uint64_t v14 = 0;
  if (v19) {
LABEL_139:
  }
    operator delete(v19);
  return v14;
}

void sub_18DEE192C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  sub_18DEE2DB8((uint64_t *)va);
  if (v15) {
    operator delete(v15);
  }
  _Unwind_Resume(a1);
}

uint64_t cnestimation::PeriodicityTracker::InterpolateDFTPeak(cnestimation::PeriodicityTracker *this, const cnestimation::PeriodicityTracker::DFTPoint *a2, const cnestimation::PeriodicityTracker::DFTPoint *a3, const cnestimation::PeriodicityTracker::DFTPoint *a4, double *a5)
{
  if (*(unsigned char *)this) {
    BOOL v5 = *(unsigned char *)a2 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  if (v5 || *(unsigned char *)a3 == 0) {
    return 0xFFFFFFFFLL;
  }
  double v9 = *((double *)a2 + 1);
  if (*((double *)this + 1) >= v9 || v9 >= *((double *)a3 + 1)) {
    return 0xFFFFFFFFLL;
  }
  double v12 = -*((double *)a2 + 3);
  v21[0] = *((double *)a2 + 2);
  v21[1] = v12;
  long long v20 = *((_OWORD *)this + 1);
  double v13 = sub_18DEDED28((double *)&v20, v21);
  long long v20 = *((_OWORD *)a2 + 1);
  double v14 = sub_18DEDED28((double *)&v20, v21);
  long long v20 = *((_OWORD *)a3 + 1);
  double v15 = sub_18DEDED28((double *)&v20, v21);
  double v16 = (v13 - v15) / (v13 + v14 * 2.0 + v15);
  double v17 = fabs(v16);
  if ((*(void *)&v16 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL || v17 < 2.22044605e-16) {
    return 0xFFFFFFFFLL;
  }
  uint64_t result = 0;
  *(double *)a4 = *((double *)a2 + 1)
                + (sqrt(v16 * 8.0 * v16 + 1.0) + -1.0)
                / (v16
                 * 4.0)
                * 0.5
                * (*((double *)a3 + 1) - *((double *)this + 1));
  return result;
}

double sub_18DEE1AB4(uint64_t a1, double *a2)
{
  unint64_t v4 = *(void *)(a1 + 32);
  if (!v4)
  {
    sub_18DEE2FF4((void **)a1);
    unint64_t v4 = *(void *)(a1 + 32);
  }
  uint64_t v5 = *(void *)(a1 + 8);
  unint64_t v6 = (void *)(v5 + 8 * (v4 >> 9));
  if (*(void *)(a1 + 16) == v5) {
    uint64_t v7 = 0;
  }
  else {
    uint64_t v7 = *v6 + 8 * (v4 & 0x1FF);
  }
  if (v7 == *v6) {
    uint64_t v7 = *(v6 - 1) + 4096;
  }
  double result = *a2;
  *(double *)(v7 - 8) = *a2;
  uint64_t v9 = *(void *)(a1 + 40) + 1;
  *(void *)(a1 + 32) = v4 - 1;
  *(void *)(a1 + 40) = v9;
  return result;
}

uint64_t cnestimation::PeriodicityTracker::IsFeatureObservedInRecentTimeHistory(cnestimation::PeriodicityTracker *this, double a2, double *a3)
{
  if (*(unsigned char *)this && *((unsigned char *)this + 73))
  {
    char v4 = LOBYTE(a2);
    if (*(uint64_t *)&a2 > -1 && ((*(void *)&a2 & 0x7FFFFFFFFFFFFFFFuLL) - 0x10000000000000) >> 53 < 0x3FF
      || (unint64_t)(*(void *)&a2 - 1) < 0xFFFFFFFFFFFFFLL
      || (*(void *)&a2 & 0x7FFFFFFFFFFFFFFFLL) == 0)
    {
      unsigned int v9 = vcvtpd_u64_f64(a2 / *((double *)this + 1));
      if (v9 >= *((_DWORD *)this + 34)) {
        unsigned int v10 = *((_DWORD *)this + 34);
      }
      else {
        unsigned int v10 = v9;
      }
      unint64_t ObservedFeatureInRecentSamples = cnestimation::PeriodicityTracker::NumberOfSamplesToLastObservedFeatureInRecentSamples(this, v10);
      if (HIDWORD(ObservedFeatureInRecentSamples))
      {
        *a3 = -((double)(int)ObservedFeatureInRecentSamples * *((double *)this + 1));
        return 1;
      }
    }
    else
    {
      unsigned int LogLevel = cnprint::CNPrinter::GetLogLevel(this);
      if (LogLevel <= 1)
      {
        __int16 v20 = 2;
        unsigned __int8 v19 = 1;
        cnprint::CNPrinter::Print((cnprint::CNPrinter *)&v20, &v19, "PeriodicityTracker - invalid time interval for feature search,%.3lf", v14, v15, v16, v17, v18, v4);
      }
    }
  }
  return 0;
}

uint64_t cnestimation::PeriodicityTracker::IsSignalPeriodic(cnestimation::PeriodicityTracker *this)
{
  return *((unsigned __int8 *)this + 73);
}

uint64_t cnestimation::PeriodicityTracker::NumberOfSamplesToLastObservedFeatureInRecentSamples(cnestimation::PeriodicityTracker *this, unsigned int a2)
{
  char v2 = a2;
  uint64_t v3 = *((void *)this + 17);
  if (v3 < a2)
  {
    if (cnprint::CNPrinter::GetLogLevel(this) <= 1)
    {
      __int16 v34 = 2;
      unsigned __int8 v33 = 1;
      cnprint::CNPrinter::Print((cnprint::CNPrinter *)&v34, &v33, "WARNING: PeriodicityTracker search range exceeds signal length,num_samples,%u,length,%u", v4, v5, v6, v7, v8, v2);
    }
    goto LABEL_35;
  }
  if (a2 < 3)
  {
LABEL_35:
    uint64_t v20 = 0;
    uint64_t v26 = 0;
LABEL_36:
    uint64_t v27 = 0;
    return v26 | v20 | v27;
  }
  unint64_t v9 = *((void *)this + 16) + v3;
  uint64_t v10 = *((void *)this + 13);
  unint64_t v11 = (char *)(v10 + 8 * (v9 >> 9));
  uint64_t v12 = *(void *)v11 + 8 * (v9 & 0x1FF);
  if (*((void *)this + 14) == v10) {
    double v13 = 0;
  }
  else {
    double v13 = (double *)v12;
  }
  uint64_t v14 = ((uint64_t)v13 - *(void *)v11) >> 3;
  uint64_t v15 = v14 - (int)a2;
  if (v15 < 1)
  {
    unint64_t v17 = 511 - v15;
    LOWORD(v15) = ~(511 - v15);
    uint64_t v16 = &v11[-8 * (v17 >> 9)];
  }
  else
  {
    uint64_t v16 = &v11[8 * ((unint64_t)v15 >> 9)];
  }
  uint64_t v18 = *(double **)v16;
  uint64_t v19 = *(void *)v16 + 8 * (v15 & 0x1FF);
  uint64_t v20 = *((unsigned int *)this + 14);
  if (v20)
  {
    if (v20 == 2)
    {
      if ((double *)v19 != v13)
      {
        uint64_t v21 = v16;
        unint64_t v22 = (double *)v19;
        long double v28 = (double *)v19;
        uint64_t v29 = v16;
        while (1)
        {
          if ((char *)++v28 - (char *)v18 == 4096)
          {
            unint64_t v30 = (double *)*((void *)v29 + 1);
            v29 += 8;
            uint64_t v18 = v30;
            long double v28 = v30;
          }
          if (v28 == v13) {
            break;
          }
          if (*v22 < *v28)
          {
            uint64_t v21 = v29;
            unint64_t v22 = v28;
          }
        }
LABEL_33:
        if ((double *)v19 != v22)
        {
          uint64_t v31 = ((uint64_t)v22 - *(void *)v21) >> 3;
          if (v31 + ((v21 - v16) << 6) != (v19 - *(void *)v16) >> 3)
          {
            if (v13 == v22)
            {
              LODWORD(v26) = -1;
            }
            else
            {
              uint64_t v26 = ~v31 + ((v11 - v21) << 6) + v14;
              if (!v26)
              {
                uint64_t v20 = 0;
                goto LABEL_36;
              }
            }
            uint64_t v27 = v26 & 0xFFFFFF00;
            uint64_t v26 = v26;
            uint64_t v20 = 0x100000000;
            return v26 | v20 | v27;
          }
        }
        goto LABEL_35;
      }
    }
    else
    {
      if (v20 != 1)
      {
        uint64_t v21 = v11;
        unint64_t v22 = v13;
        goto LABEL_33;
      }
      if ((double *)v19 != v13)
      {
        uint64_t v21 = v16;
        unint64_t v22 = (double *)v19;
        uint64_t v23 = (double *)v19;
        unint64_t v24 = v16;
        while (1)
        {
          if ((char *)++v23 - (char *)v18 == 4096)
          {
            unint64_t v25 = (double *)*((void *)v24 + 1);
            v24 += 8;
            uint64_t v18 = v25;
            uint64_t v23 = v25;
          }
          if (v23 == v13) {
            break;
          }
          if (*v23 < *v22)
          {
            uint64_t v21 = v24;
            unint64_t v22 = v23;
          }
        }
        goto LABEL_33;
      }
    }
    uint64_t v21 = v16;
    unint64_t v22 = (double *)v19;
    goto LABEL_33;
  }
  uint64_t v26 = *((unsigned int *)this + 14);
  uint64_t v27 = v26;
  return v26 | v20 | v27;
}

BOOL cnestimation::PeriodicityTracker::IsSecondLastSampleAnObservedFeature(cnestimation::PeriodicityTracker *this)
{
  return *(unsigned char *)this
      && *((unsigned char *)this + 73)
      && (unint64_t)cnestimation::PeriodicityTracker::NumberOfSamplesToLastObservedFeatureInRecentSamples(this, 3u) >> 32 != 0;
}

uint64_t cnestimation::PeriodicityTracker::IsLatestSampleAPredictedFeature(cnestimation::PeriodicityTracker *this)
{
  return *((unsigned __int8 *)this + 72);
}

double cnestimation::PeriodicityTracker::SignalFundamentalFrequency(cnestimation::PeriodicityTracker *this)
{
  if (*((unsigned char *)this + 73)) {
    return *((double *)this + 10);
  }
  else {
    return NAN;
  }
}

double cnestimation::PeriodicityTracker::SignalSamplingPeriod(cnestimation::PeriodicityTracker *this)
{
  return *((double *)this + 1);
}

uint64_t sub_18DEE1ED0(void *a1)
{
  char v2 = (void **)a1[1];
  uint64_t v3 = (void **)a1[2];
  a1[5] = 0;
  unint64_t v4 = (char *)v3 - (char *)v2;
  if ((unint64_t)((char *)v3 - (char *)v2) >= 0x11)
  {
    do
    {
      operator delete(*v2);
      uint64_t v3 = (void **)a1[2];
      char v2 = (void **)(a1[1] + 8);
      a1[1] = v2;
      unint64_t v4 = (char *)v3 - (char *)v2;
    }
    while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
  }
  unint64_t v5 = v4 >> 3;
  if (v5 == 1)
  {
    uint64_t v6 = 128;
  }
  else
  {
    if (v5 != 2) {
      goto LABEL_9;
    }
    uint64_t v6 = 256;
  }
  a1[4] = v6;
LABEL_9:
  while (v2 != v3)
  {
    uint64_t v7 = *v2++;
    operator delete(v7);
  }

  return sub_18DEE1F78((uint64_t)a1);
}

uint64_t sub_18DEE1F78(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != v3) {
    *(void *)(a1 + 16) = v2 + ((v3 - v2 + 7) & 0xFFFFFFFFFFFFFFF8);
  }
  unint64_t v4 = *(void **)a1;
  if (*(void *)a1) {
    operator delete(v4);
  }
  return a1;
}

void sub_18DEE1FC8()
{
}

void *sub_18DEE1FE0(unint64_t a1)
{
  if (a1 >= 0x666666666666667) {
    sub_18DEDF7D4();
  }
  return operator new(40 * a1);
}

void sub_18DEE2028(unint64_t a1, unint64_t a2, uint64_t a3, char a4)
{
  while (2)
  {
    unint64_t v10 = a1;
    while (1)
    {
      while (1)
      {
        while (1)
        {
          a1 = v10;
          uint64_t v11 = a2 - v10;
          unint64_t v12 = 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(a2 - v10) >> 3);
          if (v5 || !v4)
          {
            switch(v12)
            {
              case 0uLL:
              case 1uLL:
                return;
              case 2uLL:
                if (*(double *)(a2 - 8) < *(double *)(v10 + 32))
                {
                  uint64_t v144 = *(void *)(v10 + 32);
                  long long v125 = *(_OWORD *)v10;
                  long long v134 = *(_OWORD *)(v10 + 16);
                  long long v52 = *(_OWORD *)(a2 - 40);
                  long long v53 = *(_OWORD *)(a2 - 24);
                  *(void *)(v10 + 32) = *(void *)(a2 - 8);
                  *(_OWORD *)unint64_t v10 = v52;
                  *(_OWORD *)(v10 + 16) = v53;
                  *(void *)(a2 - 8) = v144;
                  *(_OWORD *)(a2 - 24) = v134;
                  *(_OWORD *)(a2 - 40) = v125;
                }
                break;
              case 3uLL:
                sub_18DEE2940((long long *)v10, (double *)(v10 + 40), (double *)(a2 - 40));
                break;
              case 4uLL:
                sub_18DEE2CE8(v10, v10 + 40, v10 + 80, a2 - 40);
                break;
              case 5uLL:
                double v54 = (long long *)(v10 + 40);
                double v55 = (long long *)(v10 + 80);
                uint64_t v56 = (long long *)(v10 + 120);
                sub_18DEE2CE8(v10, v10 + 40, v10 + 80, v10 + 120);
                if (*(double *)(a2 - 8) < *(double *)(v10 + 152))
                {
                  long long v57 = *v56;
                  long long v135 = *(_OWORD *)(v10 + 136);
                  uint64_t v58 = *(void *)(v10 + 152);
                  long long v59 = *(_OWORD *)(a2 - 24);
                  long long v60 = *(_OWORD *)(a2 - 40);
                  *(void *)(v10 + 152) = *(void *)(a2 - 8);
                  long long *v56 = v60;
                  *(_OWORD *)(v10 + 136) = v59;
                  *(_OWORD *)(a2 - 24) = v135;
                  *(void *)(a2 - 8) = v58;
                  *(_OWORD *)(a2 - 40) = v57;
                  if (*(double *)(v10 + 152) < *(double *)(v10 + 112))
                  {
                    uint64_t v61 = *(void *)(v10 + 112);
                    long long v63 = *v55;
                    long long v62 = *(_OWORD *)(v10 + 96);
                    long long v64 = *(_OWORD *)(v10 + 136);
                    *double v55 = *v56;
                    *(_OWORD *)(v10 + 96) = v64;
                    *(void *)(v10 + 112) = *(void *)(v10 + 152);
                    long long *v56 = v63;
                    *(_OWORD *)(v10 + 136) = v62;
                    *(void *)(v10 + 152) = v61;
                    if (*(double *)(v10 + 112) < *(double *)(v10 + 72))
                    {
                      uint64_t v65 = *(void *)(v10 + 72);
                      long long v67 = *v54;
                      long long v66 = *(_OWORD *)(v10 + 56);
                      long long v68 = *(_OWORD *)(v10 + 96);
                      *double v54 = *v55;
                      *(_OWORD *)(v10 + 56) = v68;
                      *(void *)(v10 + 72) = *(void *)(v10 + 112);
                      *double v55 = v67;
                      *(_OWORD *)(v10 + 96) = v66;
                      *(void *)(v10 + 112) = v65;
                      if (*(double *)(v10 + 72) < *(double *)(v10 + 32))
                      {
                        uint64_t v145 = *(void *)(v10 + 32);
                        long long v126 = *(_OWORD *)v10;
                        long long v136 = *(_OWORD *)(v10 + 16);
                        long long v69 = *(_OWORD *)(v10 + 56);
                        *(_OWORD *)unint64_t v10 = *v54;
                        *(_OWORD *)(v10 + 16) = v69;
                        *(void *)(v10 + 32) = *(void *)(v10 + 72);
                        *double v54 = v126;
                        *(_OWORD *)(v10 + 56) = v136;
                        *(void *)(v10 + 72) = v145;
                      }
                    }
                  }
                }
                break;
              default:
                JUMPOUT(0);
            }
            return;
          }
          if (v11 <= 959)
          {
            unint64_t v70 = (_OWORD *)(v10 + 40);
            BOOL v72 = v10 == a2 || v70 == (_OWORD *)a2;
            if (a4)
            {
              if (!v72)
              {
                uint64_t v73 = 0;
                BOOL v74 = (_OWORD *)v10;
                do
                {
                  double v75 = *((double *)v74 + 9);
                  double v76 = *((double *)v74 + 4);
                  BOOL v74 = v70;
                  if (v75 < v76)
                  {
                    long long v127 = *v70;
                    long long v137 = v70[1];
                    uint64_t v77 = v73;
                    while (1)
                    {
                      uint64_t v78 = v10 + v77;
                      long long v79 = *(_OWORD *)(v10 + v77 + 16);
                      *(_OWORD *)(v78 + 40) = *(_OWORD *)(v10 + v77);
                      *(_OWORD *)(v78 + 56) = v79;
                      *(void *)(v78 + 72) = *(void *)(v10 + v77 + 32);
                      if (!v77) {
                        break;
                      }
                      v77 -= 40;
                      if (v75 >= *(double *)(v78 - 8))
                      {
                        uint64_t v80 = v10 + v77 + 40;
                        goto LABEL_83;
                      }
                    }
                    uint64_t v80 = v10;
LABEL_83:
                    *(_OWORD *)uint64_t v80 = v127;
                    *(_OWORD *)(v80 + 16) = v137;
                    *(double *)(v80 + 32) = v75;
                  }
                  unint64_t v70 = (_OWORD *)((char *)v74 + 40);
                  v73 += 40;
                }
                while ((_OWORD *)((char *)v74 + 40) != (_OWORD *)a2);
              }
            }
            else if (!v72)
            {
              do
              {
                double v111 = *(double *)(a1 + 72);
                double v112 = *(double *)(a1 + 32);
                a1 = (unint64_t)v70;
                if (v111 < v112)
                {
                  long long v130 = *v70;
                  long long v140 = v70[1];
                  BOOL v113 = v70;
                  do
                  {
                    long long v114 = *(_OWORD *)((char *)v113 - 24);
                    *BOOL v113 = *(_OWORD *)((char *)v113 - 40);
                    v113[1] = v114;
                    *((void *)v113 + 4) = *((void *)v113 - 1);
                    double v115 = *((double *)v113 - 6);
                    BOOL v113 = (_OWORD *)((char *)v113 - 40);
                  }
                  while (v111 < v115);
                  *BOOL v113 = v130;
                  v113[1] = v140;
                  *((double *)v113 + 4) = v111;
                }
                unint64_t v70 = (_OWORD *)((char *)v70 + 40);
              }
              while (a1 + 40 != a2);
            }
            return;
          }
          if (!a3)
          {
            if (v10 != a2)
            {
              int64_t v81 = (v12 - 2) >> 1;
              int64_t v82 = v81;
              do
              {
                int64_t v83 = v82;
                if (v81 >= v82)
                {
                  uint64_t v84 = (2 * v82) | 1;
                  unint64_t v85 = v10 + 40 * v84;
                  if (2 * v83 + 2 < (uint64_t)v12 && *(double *)(v10 + 40 * v84 + 32) < *(double *)(v85 + 72))
                  {
                    v85 += 40;
                    uint64_t v84 = 2 * v83 + 2;
                  }
                  double v86 = *(double *)(v10 + 40 * v83 + 32);
                  if (*(double *)(v85 + 32) >= v86)
                  {
                    unint64_t v87 = v10 + 40 * v83;
                    long long v128 = *(_OWORD *)v87;
                    long long v138 = *(_OWORD *)(v87 + 16);
                    do
                    {
                      unint64_t v88 = v87;
                      unint64_t v87 = v85;
                      long long v89 = *(_OWORD *)v85;
                      long long v90 = *(_OWORD *)(v85 + 16);
                      *(void *)(v88 + 32) = *(void *)(v85 + 32);
                      *(_OWORD *)unint64_t v88 = v89;
                      *(_OWORD *)(v88 + 16) = v90;
                      if (v81 < v84) {
                        break;
                      }
                      uint64_t v91 = (2 * v84) | 1;
                      unint64_t v85 = v10 + 40 * v91;
                      uint64_t v92 = 2 * v84 + 2;
                      if (v92 < (uint64_t)v12 && *(double *)(v10 + 40 * v91 + 32) < *(double *)(v85 + 72))
                      {
                        v85 += 40;
                        uint64_t v91 = v92;
                      }
                      uint64_t v84 = v91;
                    }
                    while (*(double *)(v85 + 32) >= v86);
                    *(_OWORD *)unint64_t v87 = v128;
                    *(_OWORD *)(v87 + 16) = v138;
                    *(double *)(v87 + 32) = v86;
                  }
                }
                int64_t v82 = v83 - 1;
              }
              while (v83);
              int64_t v93 = v11 / 0x28uLL;
              do
              {
                uint64_t v94 = 0;
                uint64_t v146 = *(void *)(v10 + 32);
                long long v129 = *(_OWORD *)v10;
                long long v139 = *(_OWORD *)(v10 + 16);
                unint64_t v95 = v10;
                do
                {
                  unint64_t v96 = v95;
                  uint64_t v97 = v94 + 1;
                  v95 += 40 * (v94 + 1);
                  uint64_t v98 = 2 * v94;
                  uint64_t v94 = (2 * v94) | 1;
                  int64_t v99 = v98 + 2;
                  if (v99 < v93 && *(double *)(v96 + 40 * v97 + 32) < *(double *)(v95 + 72))
                  {
                    v95 += 40;
                    uint64_t v94 = v99;
                  }
                  long long v100 = *(_OWORD *)v95;
                  long long v101 = *(_OWORD *)(v95 + 16);
                  *(void *)(v96 + 32) = *(void *)(v95 + 32);
                  *(_OWORD *)unint64_t v96 = v100;
                  *(_OWORD *)(v96 + 16) = v101;
                }
                while (v94 <= (uint64_t)((unint64_t)(v93 - 2) >> 1));
                a2 -= 40;
                if (v95 == a2)
                {
                  *(void *)(v95 + 32) = v146;
                  *(_OWORD *)unint64_t v95 = v129;
                  *(_OWORD *)(v95 + 16) = v139;
                }
                else
                {
                  long long v102 = *(_OWORD *)a2;
                  long long v103 = *(_OWORD *)(a2 + 16);
                  *(void *)(v95 + 32) = *(void *)(a2 + 32);
                  *(_OWORD *)unint64_t v95 = v102;
                  *(_OWORD *)(v95 + 16) = v103;
                  *(void *)(a2 + 32) = v146;
                  *(_OWORD *)a2 = v129;
                  *(_OWORD *)(a2 + 16) = v139;
                  uint64_t v104 = v95 - v10 + 40;
                  if (v104 >= 41)
                  {
                    unint64_t v105 = (v104 / 0x28uLL - 2) >> 1;
                    double v106 = *(double *)(v95 + 32);
                    if (*(double *)(v10 + 40 * v105 + 32) < v106)
                    {
                      long long v118 = *(_OWORD *)v95;
                      long long v121 = *(_OWORD *)(v95 + 16);
                      do
                      {
                        unint64_t v107 = v95;
                        unint64_t v95 = v10 + 40 * v105;
                        long long v108 = *(_OWORD *)v95;
                        long long v109 = *(_OWORD *)(v95 + 16);
                        *(void *)(v107 + 32) = *(void *)(v95 + 32);
                        *(_OWORD *)unint64_t v107 = v108;
                        *(_OWORD *)(v107 + 16) = v109;
                        if (!v105) {
                          break;
                        }
                        unint64_t v105 = (v105 - 1) >> 1;
                      }
                      while (*(double *)(v10 + 40 * v105 + 32) < v106);
                      *(_OWORD *)unint64_t v95 = v118;
                      *(_OWORD *)(v95 + 16) = v121;
                      *(double *)(v95 + 32) = v106;
                    }
                  }
                }
              }
              while (v93-- > 2);
            }
            return;
          }
          unint64_t v13 = v12 >> 1;
          unint64_t v14 = v10 + 40 * (v12 >> 1);
          if ((unint64_t)v11 >= 0x1401)
          {
            sub_18DEE2940((long long *)a1, (double *)(a1 + 40 * (v12 >> 1)), (double *)(a2 - 40));
            uint64_t v15 = 5 * v13;
            uint64_t v16 = (double *)(a1 + 40 * v13 - 40);
            sub_18DEE2940((long long *)(a1 + 40), v16, (double *)(a2 - 80));
            unint64_t v17 = (double *)(a1 + 40 + 8 * v15);
            sub_18DEE2940((long long *)(a1 + 80), v17, (double *)(a2 - 120));
            sub_18DEE2940((long long *)v16, (double *)v14, v17);
            uint64_t v141 = *(void *)(a1 + 32);
            long long v122 = *(_OWORD *)a1;
            long long v131 = *(_OWORD *)(a1 + 16);
            long long v18 = *(_OWORD *)v14;
            long long v19 = *(_OWORD *)(v14 + 16);
            *(void *)(a1 + 32) = *(void *)(v14 + 32);
            *(_OWORD *)a1 = v18;
            *(_OWORD *)(a1 + 16) = v19;
            *(void *)(v14 + 32) = v141;
            *(_OWORD *)unint64_t v14 = v122;
            *(_OWORD *)(v14 + 16) = v131;
          }
          else
          {
            sub_18DEE2940((long long *)(a1 + 40 * (v12 >> 1)), (double *)a1, (double *)(a2 - 40));
          }
          --a3;
          if (a4) {
            break;
          }
          double v20 = *(double *)(a1 + 32);
          if (*(double *)(a1 - 8) < v20) {
            goto LABEL_12;
          }
          long long v117 = *(_OWORD *)a1;
          long long v120 = *(_OWORD *)(a1 + 16);
          if (v20 >= *(double *)(a2 - 8))
          {
            unint64_t v40 = a1 + 40;
            do
            {
              unint64_t v10 = v40;
              if (v40 >= a2) {
                break;
              }
              double v41 = *(double *)(v40 + 32);
              v40 += 40;
            }
            while (v20 >= v41);
          }
          else
          {
            unint64_t v38 = a1;
            do
            {
              unint64_t v10 = v38 + 40;
              double v39 = *(double *)(v38 + 72);
              v38 += 40;
            }
            while (v20 >= v39);
          }
          unint64_t v42 = a2;
          if (v10 < a2)
          {
            unint64_t v43 = a2;
            do
            {
              unint64_t v42 = v43 - 40;
              double v44 = *(double *)(v43 - 8);
              v43 -= 40;
            }
            while (v20 < v44);
          }
          while (v10 < v42)
          {
            uint64_t v143 = *(void *)(v10 + 32);
            long long v124 = *(_OWORD *)v10;
            long long v133 = *(_OWORD *)(v10 + 16);
            long long v45 = *(_OWORD *)v42;
            long long v46 = *(_OWORD *)(v42 + 16);
            *(void *)(v10 + 32) = *(void *)(v42 + 32);
            *(_OWORD *)unint64_t v10 = v45;
            *(_OWORD *)(v10 + 16) = v46;
            *(void *)(v42 + 32) = v143;
            *(_OWORD *)unint64_t v42 = v124;
            *(_OWORD *)(v42 + 16) = v133;
            do
            {
              double v47 = *(double *)(v10 + 72);
              v10 += 40;
            }
            while (v20 >= v47);
            do
            {
              double v48 = *(double *)(v42 - 8);
              v42 -= 40;
            }
            while (v20 < v48);
          }
          unint64_t v49 = (long long *)(v10 - 40);
          BOOL v4 = v10 - 40 >= a1;
          BOOL v5 = v10 - 40 == a1;
          if (v10 - 40 != a1)
          {
            long long v50 = *v49;
            long long v51 = *(_OWORD *)(v10 - 24);
            *(void *)(a1 + 32) = *(void *)(v10 - 8);
            *(_OWORD *)a1 = v50;
            *(_OWORD *)(a1 + 16) = v51;
          }
          a4 = 0;
          *unint64_t v49 = v117;
          *(_OWORD *)(v10 - 24) = v120;
          *(double *)(v10 - 8) = v20;
        }
        double v20 = *(double *)(a1 + 32);
LABEL_12:
        uint64_t v21 = 0;
        long long v116 = *(_OWORD *)a1;
        long long v119 = *(_OWORD *)(a1 + 16);
        do
        {
          double v22 = *(double *)(a1 + v21 + 72);
          v21 += 40;
        }
        while (v22 < v20);
        unint64_t v23 = a1 + v21;
        unint64_t v24 = a2;
        if (v21 == 40)
        {
          unint64_t v27 = a2;
          while (v23 < v27)
          {
            unint64_t v25 = v27 - 40;
            double v28 = *(double *)(v27 - 8);
            v27 -= 40;
            if (v28 < v20) {
              goto LABEL_22;
            }
          }
          unint64_t v25 = v27;
        }
        else
        {
          do
          {
            unint64_t v25 = v24 - 40;
            double v26 = *(double *)(v24 - 8);
            v24 -= 40;
          }
          while (v26 >= v20);
        }
LABEL_22:
        unint64_t v10 = v23;
        if (v23 < v25)
        {
          unint64_t v29 = v25;
          do
          {
            uint64_t v142 = *(void *)(v10 + 32);
            long long v123 = *(_OWORD *)v10;
            long long v132 = *(_OWORD *)(v10 + 16);
            long long v30 = *(_OWORD *)v29;
            long long v31 = *(_OWORD *)(v29 + 16);
            *(void *)(v10 + 32) = *(void *)(v29 + 32);
            *(_OWORD *)unint64_t v10 = v30;
            *(_OWORD *)(v10 + 16) = v31;
            *(void *)(v29 + 32) = v142;
            *(_OWORD *)unint64_t v29 = v123;
            *(_OWORD *)(v29 + 16) = v132;
            do
            {
              double v32 = *(double *)(v10 + 72);
              v10 += 40;
            }
            while (v32 < v20);
            do
            {
              double v33 = *(double *)(v29 - 8);
              v29 -= 40;
            }
            while (v33 >= v20);
          }
          while (v10 < v29);
        }
        __int16 v34 = (long long *)(v10 - 40);
        if (v10 - 40 != a1)
        {
          long long v35 = *v34;
          long long v36 = *(_OWORD *)(v10 - 24);
          *(void *)(a1 + 32) = *(void *)(v10 - 8);
          *(_OWORD *)a1 = v35;
          *(_OWORD *)(a1 + 16) = v36;
        }
        long long *v34 = v116;
        *(_OWORD *)(v10 - 24) = v119;
        *(double *)(v10 - 8) = v20;
        if (v23 >= v25) {
          break;
        }
LABEL_33:
        sub_18DEE2028(a1, v10 - 40, a3, a4 & 1);
        a4 = 0;
      }
      BOOL v37 = sub_18DEE2A30(a1, v10 - 40);
      if (sub_18DEE2A30(v10, a2)) {
        break;
      }
      if (!v37) {
        goto LABEL_33;
      }
    }
    a2 = v10 - 40;
    if (!v37) {
      continue;
    }
    break;
  }
}

long long *sub_18DEE2940(long long *result, double *a2, double *a3)
{
  double v3 = a2[4];
  double v4 = a3[4];
  if (v3 >= *((double *)result + 4))
  {
    if (v4 < v3)
    {
      long long v10 = *(_OWORD *)a2;
      long long v11 = *((_OWORD *)a2 + 1);
      uint64_t v12 = *((void *)a2 + 4);
      uint64_t v13 = *((void *)a3 + 4);
      long long v14 = *((_OWORD *)a3 + 1);
      *(_OWORD *)a2 = *(_OWORD *)a3;
      *((_OWORD *)a2 + 1) = v14;
      *((void *)a2 + 4) = v13;
      *((void *)a3 + 4) = v12;
      *(_OWORD *)a3 = v10;
      *((_OWORD *)a3 + 1) = v11;
      if (a2[4] < *((double *)result + 4))
      {
        long long v15 = *result;
        long long v16 = result[1];
        uint64_t v17 = *((void *)result + 4);
        uint64_t v18 = *((void *)a2 + 4);
        long long v19 = *((_OWORD *)a2 + 1);
        *double result = *(_OWORD *)a2;
        result[1] = v19;
        *((void *)result + 4) = v18;
        *((void *)a2 + 4) = v17;
        *(_OWORD *)a2 = v15;
        *((_OWORD *)a2 + 1) = v16;
      }
    }
  }
  else
  {
    if (v4 >= v3)
    {
      long long v20 = *result;
      long long v21 = result[1];
      uint64_t v22 = *((void *)result + 4);
      uint64_t v23 = *((void *)a2 + 4);
      long long v24 = *((_OWORD *)a2 + 1);
      *double result = *(_OWORD *)a2;
      result[1] = v24;
      *((void *)result + 4) = v23;
      *((void *)a2 + 4) = v22;
      *(_OWORD *)a2 = v20;
      *((_OWORD *)a2 + 1) = v21;
      if (a3[4] >= a2[4]) {
        return result;
      }
      long long v5 = *(_OWORD *)a2;
      long long v6 = *((_OWORD *)a2 + 1);
      uint64_t v7 = *((void *)a2 + 4);
      uint64_t v25 = *((void *)a3 + 4);
      long long v26 = *((_OWORD *)a3 + 1);
      *(_OWORD *)a2 = *(_OWORD *)a3;
      *((_OWORD *)a2 + 1) = v26;
      *((void *)a2 + 4) = v25;
    }
    else
    {
      long long v5 = *result;
      long long v6 = result[1];
      uint64_t v7 = *((void *)result + 4);
      uint64_t v8 = *((void *)a3 + 4);
      long long v9 = *((_OWORD *)a3 + 1);
      *double result = *(_OWORD *)a3;
      result[1] = v9;
      *((void *)result + 4) = v8;
    }
    *((void *)a3 + 4) = v7;
    *(_OWORD *)a3 = v5;
    *((_OWORD *)a3 + 1) = v6;
  }
  return result;
}

BOOL sub_18DEE2A30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (a2 - a1) >> 3;
  BOOL result = 1;
  switch(0xCCCCCCCCCCCCCCCDLL * v4)
  {
    case 0uLL:
    case 1uLL:
      return result;
    case 2uLL:
      if (*(double *)(a2 - 8) < *(double *)(a1 + 32))
      {
        long long v6 = *(_OWORD *)a1;
        long long v7 = *(_OWORD *)(a1 + 16);
        uint64_t v8 = *(void *)(a1 + 32);
        uint64_t v9 = *(void *)(a2 - 8);
        long long v10 = *(_OWORD *)(a2 - 24);
        *(_OWORD *)a1 = *(_OWORD *)(a2 - 40);
        *(_OWORD *)(a1 + 16) = v10;
        *(void *)(a1 + 32) = v9;
        *(void *)(a2 - 8) = v8;
        *(_OWORD *)(a2 - 24) = v7;
        *(_OWORD *)(a2 - 40) = v6;
      }
      return result;
    case 3uLL:
      sub_18DEE2940((long long *)a1, (double *)(a1 + 40), (double *)(a2 - 40));
      return 1;
    case 4uLL:
      sub_18DEE2CE8(a1, a1 + 40, a1 + 80, a2 - 40);
      return 1;
    case 5uLL:
      long long v20 = (long long *)(a1 + 40);
      long long v21 = (long long *)(a1 + 80);
      uint64_t v22 = (long long *)(a1 + 120);
      sub_18DEE2CE8(a1, a1 + 40, a1 + 80, a1 + 120);
      if (*(double *)(a2 - 8) >= *(double *)(a1 + 152)) {
        return 1;
      }
      long long v23 = *v22;
      long long v24 = *(_OWORD *)(a1 + 136);
      uint64_t v25 = *(void *)(a1 + 152);
      uint64_t v26 = *(void *)(a2 - 8);
      long long v27 = *(_OWORD *)(a2 - 24);
      *uint64_t v22 = *(_OWORD *)(a2 - 40);
      *(_OWORD *)(a1 + 136) = v27;
      *(void *)(a1 + 152) = v26;
      *(void *)(a2 - 8) = v25;
      *(_OWORD *)(a2 - 24) = v24;
      *(_OWORD *)(a2 - 40) = v23;
      if (*(double *)(a1 + 152) >= *(double *)(a1 + 112)) {
        return 1;
      }
      uint64_t v28 = *(void *)(a1 + 112);
      long long v30 = *v21;
      long long v29 = *(_OWORD *)(a1 + 96);
      long long v31 = *(_OWORD *)(a1 + 136);
      *long long v21 = *v22;
      *(_OWORD *)(a1 + 96) = v31;
      *(void *)(a1 + 112) = *(void *)(a1 + 152);
      *uint64_t v22 = v30;
      *(_OWORD *)(a1 + 136) = v29;
      *(void *)(a1 + 152) = v28;
      if (*(double *)(a1 + 112) >= *(double *)(a1 + 72)) {
        return 1;
      }
      uint64_t v32 = *(void *)(a1 + 72);
      long long v34 = *v20;
      long long v33 = *(_OWORD *)(a1 + 56);
      long long v35 = *(_OWORD *)(a1 + 96);
      long long *v20 = *v21;
      *(_OWORD *)(a1 + 56) = v35;
      *(void *)(a1 + 72) = *(void *)(a1 + 112);
      *long long v21 = v34;
      *(_OWORD *)(a1 + 96) = v33;
      *(void *)(a1 + 112) = v32;
      if (*(double *)(a1 + 72) >= *(double *)(a1 + 32)) {
        return 1;
      }
      uint64_t v36 = *(void *)(a1 + 32);
      long long v38 = *(_OWORD *)a1;
      long long v37 = *(_OWORD *)(a1 + 16);
      long long v39 = *(_OWORD *)(a1 + 56);
      *(_OWORD *)a1 = *v20;
      *(_OWORD *)(a1 + 16) = v39;
      *(void *)(a1 + 32) = *(void *)(a1 + 72);
      long long *v20 = v38;
      *(_OWORD *)(a1 + 56) = v37;
      BOOL result = 1;
      *(void *)(a1 + 72) = v36;
      return result;
    default:
      uint64_t v11 = a1 + 80;
      sub_18DEE2940((long long *)a1, (double *)(a1 + 40), (double *)(a1 + 80));
      uint64_t v12 = a1 + 120;
      if (a1 + 120 == a2) {
        return 1;
      }
      uint64_t v13 = 0;
      int v14 = 0;
      break;
  }
  while (1)
  {
    double v15 = *(double *)(v12 + 32);
    if (v15 < *(double *)(v11 + 32))
    {
      long long v40 = *(_OWORD *)v12;
      long long v41 = *(_OWORD *)(v12 + 16);
      uint64_t v16 = v13;
      while (1)
      {
        uint64_t v17 = a1 + v16;
        long long v18 = *(_OWORD *)(a1 + v16 + 96);
        *(_OWORD *)(v17 + 120) = *(_OWORD *)(a1 + v16 + 80);
        *(_OWORD *)(v17 + 136) = v18;
        *(void *)(v17 + 152) = *(void *)(a1 + v16 + 112);
        if (v16 == -80) {
          break;
        }
        v16 -= 40;
        if (v15 >= *(double *)(v17 + 72))
        {
          uint64_t v19 = a1 + v16 + 120;
          goto LABEL_13;
        }
      }
      uint64_t v19 = a1;
LABEL_13:
      *(_OWORD *)uint64_t v19 = v40;
      *(_OWORD *)(v19 + 16) = v41;
      *(double *)(v19 + 32) = v15;
      if (++v14 == 8) {
        return v12 + 40 == a2;
      }
    }
    uint64_t v11 = v12;
    v13 += 40;
    v12 += 40;
    if (v12 == a2) {
      return 1;
    }
  }
}

__n128 sub_18DEE2CE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_18DEE2940((long long *)a1, (double *)a2, (double *)a3);
  result.n128_u64[0] = *(void *)(a4 + 32);
  if (result.n128_f64[0] < *(double *)(a3 + 32))
  {
    __n128 result = *(__n128 *)a3;
    long long v9 = *(_OWORD *)(a3 + 16);
    uint64_t v10 = *(void *)(a3 + 32);
    uint64_t v11 = *(void *)(a4 + 32);
    long long v12 = *(_OWORD *)(a4 + 16);
    *(_OWORD *)a3 = *(_OWORD *)a4;
    *(_OWORD *)(a3 + 16) = v12;
    *(void *)(a3 + 32) = v11;
    *(void *)(a4 + 32) = v10;
    *(__n128 *)a4 = result;
    *(_OWORD *)(a4 + 16) = v9;
    result.n128_u64[0] = *(void *)(a3 + 32);
    if (result.n128_f64[0] < *(double *)(a2 + 32))
    {
      __n128 result = *(__n128 *)a2;
      long long v13 = *(_OWORD *)(a2 + 16);
      uint64_t v14 = *(void *)(a2 + 32);
      uint64_t v15 = *(void *)(a3 + 32);
      long long v16 = *(_OWORD *)(a3 + 16);
      *(_OWORD *)a2 = *(_OWORD *)a3;
      *(_OWORD *)(a2 + 16) = v16;
      *(void *)(a2 + 32) = v15;
      *(void *)(a3 + 32) = v14;
      *(__n128 *)a3 = result;
      *(_OWORD *)(a3 + 16) = v13;
      result.n128_u64[0] = *(void *)(a2 + 32);
      if (result.n128_f64[0] < *(double *)(a1 + 32))
      {
        __n128 result = *(__n128 *)a1;
        long long v17 = *(_OWORD *)(a1 + 16);
        uint64_t v18 = *(void *)(a1 + 32);
        uint64_t v19 = *(void *)(a2 + 32);
        long long v20 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v20;
        *(void *)(a1 + 32) = v19;
        *(void *)(a2 + 32) = v18;
        *(__n128 *)a2 = result;
        *(_OWORD *)(a2 + 16) = v17;
      }
    }
  }
  return result;
}

uint64_t sub_18DEE2DB8(void *a1)
{
  uint64_t v2 = (void **)a1[1];
  double v3 = (void **)a1[2];
  a1[5] = 0;
  unint64_t v4 = (char *)v3 - (char *)v2;
  if ((unint64_t)((char *)v3 - (char *)v2) >= 0x11)
  {
    do
    {
      operator delete(*v2);
      double v3 = (void **)a1[2];
      uint64_t v2 = (void **)(a1[1] + 8);
      a1[1] = v2;
      unint64_t v4 = (char *)v3 - (char *)v2;
    }
    while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
  }
  unint64_t v5 = v4 >> 3;
  if (v5 == 1)
  {
    uint64_t v6 = 256;
  }
  else
  {
    if (v5 != 2) {
      goto LABEL_9;
    }
    uint64_t v6 = 512;
  }
  a1[4] = v6;
LABEL_9:
  while (v2 != v3)
  {
    long long v7 = *v2++;
    operator delete(v7);
  }

  return sub_18DEE1F78((uint64_t)a1);
}

uint64_t sub_18DEE2E60(void *a1)
{
  uint64_t v2 = (void **)a1[1];
  double v3 = (void **)a1[2];
  if (v3 == v2)
  {
    unint64_t v4 = a1 + 5;
    double v3 = (void **)a1[1];
  }
  else
  {
    unint64_t v4 = a1 + 5;
    unint64_t v5 = a1[4];
    uint64_t v6 = &v2[v5 / 0x1A];
    unint64_t v7 = (unint64_t)*v6 + 152 * (v5 % 0x1A);
    unint64_t v8 = (unint64_t)v2[(a1[5] + v5) / 0x1A] + 152 * ((a1[5] + v5) % 0x1A);
    if (v7 != v8)
    {
      do
      {
        sub_18DEE1ED0((void *)(v7 + 104));
        sub_18DEE2DB8((void *)(v7 + 56));
        v7 += 152;
        if (v7 - (void)*v6 == 3952)
        {
          unint64_t v9 = (unint64_t)v6[1];
          ++v6;
          unint64_t v7 = v9;
        }
      }
      while (v7 != v8);
      uint64_t v2 = (void **)a1[1];
      double v3 = (void **)a1[2];
    }
  }
  void *v4 = 0;
  unint64_t v10 = (char *)v3 - (char *)v2;
  if ((unint64_t)((char *)v3 - (char *)v2) >= 0x11)
  {
    do
    {
      operator delete(*v2);
      double v3 = (void **)a1[2];
      uint64_t v2 = (void **)(a1[1] + 8);
      a1[1] = v2;
      unint64_t v10 = (char *)v3 - (char *)v2;
    }
    while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
  }
  unint64_t v11 = v10 >> 3;
  if (v11 == 1)
  {
    uint64_t v12 = 13;
  }
  else
  {
    if (v11 != 2) {
      goto LABEL_16;
    }
    uint64_t v12 = 26;
  }
  a1[4] = v12;
LABEL_16:
  while (v2 != v3)
  {
    long long v13 = *v2++;
    operator delete(v13);
  }

  return sub_18DEE1F78((uint64_t)a1);
}

void *sub_18DEE2FBC(unint64_t a1)
{
  if (a1 >> 61) {
    sub_18DEDF7D4();
  }
  return operator new(8 * a1);
}

void sub_18DEE2FF4(void **a1)
{
  uint64_t v2 = a1[1];
  double v3 = a1[2];
  unint64_t v4 = v3 - v2;
  if (v3 == v2) {
    uint64_t v5 = 0;
  }
  else {
    uint64_t v5 = ((v3 - v2) << 6) - 1;
  }
  uint64_t v6 = (char *)a1[4];
  if (v5 - (unint64_t)&v6[(void)a1[5]] < 0x200)
  {
    uint64_t v7 = (uint64_t)(a1 + 3);
    unint64_t v8 = a1[3];
    unint64_t v9 = *a1;
    uint64_t v10 = v8 - (unsigned char *)*a1;
    if (v4 >= v10)
    {
      if (v8 == v9) {
        unint64_t v11 = 1;
      }
      else {
        unint64_t v11 = v10 >> 2;
      }
      long long v46 = a1 + 3;
      std::string __p = sub_18DEDF808(v7, v11);
      unint64_t v43 = (char *)__p;
      double v44 = (char *)__p;
      long long v45 = (char *)__p + 8 * v12;
      long long v41 = operator new(0x1000uLL);
      sub_18DEDF5A0(&__p, &v41);
      long long v13 = (char *)a1[1];
      uint64_t v14 = v44;
      if (v13 == a1[2])
      {
        long long v33 = (char *)a1[1];
      }
      else
      {
        do
        {
          if (v14 == v45)
          {
            int64_t v15 = v43 - (unsigned char *)__p;
            if (v43 <= __p)
            {
              if (v14 == __p) {
                unint64_t v23 = 1;
              }
              else {
                unint64_t v23 = (v14 - (unsigned char *)__p) >> 2;
              }
              long long v24 = (char *)sub_18DEDF808((uint64_t)v46, v23);
              uint64_t v26 = v43;
              uint64_t v14 = &v24[8 * (v23 >> 2)];
              uint64_t v27 = v44 - v43;
              if (v44 != v43)
              {
                uint64_t v14 = &v24[8 * (v23 >> 2) + (v27 & 0xFFFFFFFFFFFFFFF8)];
                uint64_t v28 = 8 * (v27 >> 3);
                long long v29 = &v24[8 * (v23 >> 2)];
                do
                {
                  uint64_t v30 = *(void *)v26;
                  v26 += 8;
                  *(void *)long long v29 = v30;
                  v29 += 8;
                  v28 -= 8;
                }
                while (v28);
              }
              long long v31 = __p;
              std::string __p = v24;
              unint64_t v43 = &v24[8 * (v23 >> 2)];
              double v44 = v14;
              long long v45 = &v24[8 * v25];
              if (v31)
              {
                operator delete(v31);
                uint64_t v14 = v44;
              }
            }
            else
            {
              uint64_t v16 = v15 >> 3;
              BOOL v17 = v15 >> 3 < -1;
              uint64_t v18 = (v15 >> 3) + 2;
              if (v17) {
                uint64_t v19 = v18;
              }
              else {
                uint64_t v19 = v16 + 1;
              }
              long long v20 = &v43[-8 * (v19 >> 1)];
              int64_t v21 = v14 - v43;
              if (v14 != v43)
              {
                memmove(&v43[-8 * (v19 >> 1)], v43, v14 - v43);
                uint64_t v14 = v43;
              }
              uint64_t v22 = &v14[-8 * (v19 >> 1)];
              uint64_t v14 = &v20[v21];
              unint64_t v43 = v22;
              double v44 = &v20[v21];
            }
          }
          uint64_t v32 = *(void *)v13;
          v13 += 8;
          *(void *)uint64_t v14 = v32;
          uint64_t v14 = v44 + 8;
          v44 += 8;
        }
        while (v13 != a1[2]);
        long long v33 = (char *)a1[1];
      }
      uint64_t v36 = *a1;
      long long v37 = v43;
      *a1 = __p;
      a1[1] = v37;
      std::string __p = v36;
      unint64_t v43 = v33;
      long long v38 = (char *)a1[3];
      long long v39 = v45;
      a1[2] = v14;
      a1[3] = v39;
      double v44 = v13;
      long long v45 = v38;
      if (v14 - v37 == 8) {
        uint64_t v40 = 256;
      }
      else {
        uint64_t v40 = (uint64_t)a1[4] + 512;
      }
      a1[4] = (void *)v40;
      if (v13 != v33) {
        double v44 = &v13[(v33 - v13 + 7) & 0xFFFFFFFFFFFFFFF8];
      }
      if (v36) {
        operator delete(v36);
      }
    }
    else
    {
      if (v2 == v9)
      {
        std::string __p = operator new(0x1000uLL);
        sub_18DEDF368(a1, &__p);
        long long v34 = a1[2];
        std::string __p = (void *)*(v34 - 1);
        a1[2] = v34 - 1;
      }
      else
      {
        std::string __p = operator new(0x1000uLL);
      }
      sub_18DEDF480((uint64_t)a1, &__p);
      if ((unsigned char *)a1[2] - (unsigned char *)a1[1] == 8) {
        uint64_t v35 = 256;
      }
      else {
        uint64_t v35 = (uint64_t)a1[4] + 512;
      }
      a1[4] = (void *)v35;
    }
  }
  else
  {
    a1[4] = v6 + 512;
    std::string __p = (void *)*((void *)v3 - 1);
    a1[2] = v3 - 8;
    sub_18DEDF480((uint64_t)a1, &__p);
  }
}

void sub_18DEE32BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, uint64_t a12)
{
  operator delete(v12);
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

BOOL cnframework::GenericEvent::operator>(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  double v3 = *(double *)(a1 + 40);
  uint64_t v4 = *(void *)(a2 + 32);
  double v5 = *(double *)(a2 + 40);
  BOOL v6 = v2 > v4;
  if (v2 == v4) {
    BOOL v6 = v3 > v5;
  }
  BOOL v7 = v4 == 0;
  uint64_t v8 = *(void *)&v5 & 0x7FFFFFFFFFFFFFFFLL;
  if (v7)
  {
    BOOL v10 = __OFSUB__(v8, 0x7FF0000000000000);
    BOOL v9 = v8 - 0x7FF0000000000000 < 0;
  }
  else
  {
    BOOL v10 = 0;
    BOOL v9 = 1;
  }
  if (v9 != v10) {
    BOOL v11 = v6;
  }
  else {
    BOOL v11 = v3 > v5;
  }
  BOOL v7 = v2 == 0;
  uint64_t v12 = *(void *)&v3 & 0x7FFFFFFFFFFFFFFFLL;
  if (v7)
  {
    BOOL v14 = __OFSUB__(v12, 0x7FF0000000000000);
    BOOL v13 = v12 - 0x7FF0000000000000 < 0;
  }
  else
  {
    BOOL v14 = 0;
    BOOL v13 = 1;
  }
  if (v13 != v14) {
    return v11;
  }
  else {
    return v3 > v5;
  }
}

uint64_t cnframework::GenericEvent::GetEventTime(cnframework::GenericEvent *this)
{
  return *((void *)this + 4);
}

uint64_t cnframework::GenericEvent::GetEventType(cnframework::GenericEvent *this, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (*((unsigned char *)this + 8)) {
    return *((void *)this + 3);
  }
  __int16 v11 = 3;
  unsigned __int8 v10 = 5;
  cnprint::CNPrinter::Print((cnprint::CNPrinter *)&v11, &v10, "Attempted to access type of uninitialized GenericEvent.", a4, a5, a6, a7, a8, v9);
  return MEMORY[0x1E4FBA3D8];
}

uint64_t cnframework::GenericEvent::IsValid(cnframework::GenericEvent *this)
{
  return *((unsigned __int8 *)this + 8);
}

void *cnframework::GenericEvent::GetEventName@<X0>(void *this@<X0>, void *a2@<X8>)
{
  if (!*((unsigned char *)this + 8)) {
    return sub_18DEDE7B0(a2, "GenericEvent");
  }
  if (*((char *)this + 71) < 0) {
    return sub_18DEDE668(a2, (void *)this[6], this[7]);
  }
  *(_OWORD *)a2 = *((_OWORD *)this + 3);
  a2[2] = this[8];
  return this;
}

void sub_18DEE3430(uint64_t a1)
{
  sub_18DEE3468(a1);

  JUMPOUT(0x192FA6240);
}

uint64_t sub_18DEE3468(uint64_t a1)
{
  if (*(char *)(a1 + 71) < 0) {
    operator delete(*(void **)(a1 + 48));
  }
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2) {
    (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  }
  return a1;
}

double cnframework::ActiveObjectBase::ActiveObjectBase(uint64_t a1, unsigned char *a2)
{
  *(void *)a1 = &unk_1EDD0A290;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(void *)(a1 + 56) = 0;
  *(_DWORD *)(a1 + 64) = 1065353216;
  *(void *)(a1 + 72) = 850045863;
  *(void *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = 0;
  *(void *)(a1 + 144) = 0;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 124) = 0u;
  *(unsigned char *)(a1 + 168) = *a2;
  *(unsigned char *)(a1 + 169) = 0;
  *(void *)(a1 + 176) = 0;
  *(void *)(a1 + 184) = 0x7FF8000000000000;
  *(unsigned char *)(a1 + 192) = 0;
  *(void *)(a1 + 200) = 0;
  *(void *)(a1 + 208) = 0x7FF8000000000000;
  *(_DWORD *)(a1 + 272) = 0;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_OWORD *)(a1 + 232) = 0u;
  *(_OWORD *)(a1 + 248) = 0u;
  *(void *)(a1 + 280) = 850045863;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 336) = 0u;
  *(unsigned char *)(a1 + 352) = 0;
  *(void *)(a1 + 360) = 0;
  *(void *)(a1 + 368) = 850045863;
  *(_OWORD *)(a1 + 408) = 0u;
  *(_OWORD *)(a1 + 392) = 0u;
  *(_OWORD *)(a1 + 376) = 0u;
  *(void *)(a1 + 424) = 0;
  *(void *)(a1 + 432) = 1018212795;
  *(void *)(a1 + 472) = 0;
  *(_OWORD *)(a1 + 456) = 0u;
  *(_OWORD *)(a1 + 440) = 0u;
  atomic_store(0, (unsigned __int8 *)(a1 + 352));
  return result;
}

void cnframework::ActiveObjectBase::~ActiveObjectBase(cnframework::ActiveObjectBase *this)
{
  *(void *)this = &unk_1EDD0A290;
  uint64_t v2 = (std::mutex *)((char *)this + 368);
  std::mutex::lock((std::mutex *)((char *)this + 368));
  if (!*((unsigned char *)this + 168))
  {
    if (atomic_load((unsigned __int8 *)this + 352))
    {
      atomic_store(0, (unsigned __int8 *)this + 352);
      std::condition_variable::notify_all((std::condition_variable *)this + 9);
      if (*((void *)this + 45)) {
        std::thread::join((std::thread *)this + 45);
      }
    }
  }
  std::mutex::unlock(v2);
  std::condition_variable::~condition_variable((std::condition_variable *)this + 9);
  std::mutex::~mutex(v2);
  std::thread::~thread((std::thread *)this + 45);
  std::mutex::~mutex((std::mutex *)((char *)this + 280));
  BOOL v6 = (void **)((char *)this + 240);
  sub_18DEE4B60(&v6);
  double v3 = (void *)*((void *)this + 18);
  if (v3)
  {
    *((void *)this + 19) = v3;
    operator delete(v3);
  }
  std::mutex::~mutex((std::mutex *)((char *)this + 72));
  sub_18DEE4D98((uint64_t)this + 32);
  uint64_t v4 = (void *)*((void *)this + 1);
  if (v4)
  {
    *((void *)this + 2) = v4;
    operator delete(v4);
  }
}

uint64_t cnframework::ActiveObjectBase::GetThreadingModel(cnframework::ActiveObjectBase *this)
{
  if (*((unsigned char *)this + 168)) {
    return 0;
  }
  else {
    return atomic_load((unsigned __int8 *)this + 352);
  }
}

uint64_t cnframework::ActiveObjectBase::HandleNextEvent(cnframework::ActiveObjectBase *this, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int8x16_t a9, int8x16_t a10)
{
  int v11 = *((_DWORD *)this + 34) + 1;
  *((_DWORD *)this + 34) = v11;
  if (*((unsigned char *)this + 168))
  {
    uint64_t v12 = 0;
    int v13 = 0;
  }
  else
  {
    uint64_t v12 = (std::mutex *)((char *)this + 72);
    BOOL v14 = std::mutex::try_lock((std::mutex *)((char *)this + 72));
    int v13 = v14;
    if (!*((unsigned char *)this + 168))
    {
      if (!v14)
      {
        uint64_t EventWithoutMutex = 0;
        --*((_DWORD *)this + 34);
        return EventWithoutMutex;
      }
      int v13 = 1;
      goto LABEL_9;
    }
    int v11 = *((_DWORD *)this + 34);
  }
  if (v11 > 1)
  {
    uint64_t EventWithoutMutex = 0;
    goto LABEL_10;
  }
LABEL_9:
  uint64_t EventWithoutMutex = cnframework::ActiveObjectBase::HandleNextEventWithoutMutex(this, a2, a3, a4, a5, a6, a7, a8, a9, a10);
  int v11 = *((_DWORD *)this + 34);
LABEL_10:
  *((_DWORD *)this + 34) = v11 - 1;
  if (v13) {
    std::mutex::unlock(v12);
  }
  return EventWithoutMutex;
}

void sub_18DEE3768(_Unwind_Exception *exception_object)
{
  if (v2) {
    std::mutex::unlock(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t cnframework::ActiveObjectBase::HandleNextEventWithoutMutex(cnframework::ActiveObjectBase *this, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int8x16_t a9, int8x16_t a10)
{
  uint64_t v74 = *MEMORY[0x1E4F143B8];
  int v11 = *((unsigned __int8 *)this + 168);
  if (*((unsigned char *)this + 168))
  {
    uint64_t v12 = 0;
  }
  else
  {
    uint64_t v12 = (std::mutex *)((char *)this + 280);
    std::mutex::lock((std::mutex *)((char *)this + 280));
  }
  int v13 = (cnframework::GenericEvent **)*((void *)this + 30);
  BOOL v14 = (char *)*((void *)this + 31);
  if (v13 == (cnframework::GenericEvent **)v14) {
    goto LABEL_17;
  }
  int v15 = *((_DWORD *)this + 68);
  if (v15 == 1)
  {
    uint64_t v16 = *v13;
    uint64_t v17 = *((void *)*v13 + 4);
    double v18 = *((double *)*v13 + 5);
    uint64_t v19 = CNTimeSpan::operator-((uint64_t)this + 176, (void *)this + 28, a9, a10);
    if (v17) {
      BOOL v20 = 1;
    }
    else {
      BOOL v20 = (*(void *)&v18 & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000;
    }
    if (v20 && (v19 || (a2 & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000) && v17 != v19)
    {
      if (v17 >= v19) {
        goto LABEL_17;
      }
    }
    else if (v18 > *(double *)&a2)
    {
      goto LABEL_17;
    }
LABEL_21:
    uint64_t v22 = (std::__shared_weak_count *)v13[1];
    if (v22)
    {
      atomic_fetch_add_explicit(&v22->__shared_owners_, 1uLL, memory_order_relaxed);
      int v13 = (cnframework::GenericEvent **)*((void *)this + 30);
      BOOL v14 = (char *)*((void *)this + 31);
    }
    uint64_t v23 = v14 - (char *)v13;
    if (v14 - (char *)v13 >= 17)
    {
      int v63 = v11;
      long long v64 = v12;
      uint64_t v65 = v16;
      long long v66 = v22;
      uint64_t v24 = 0;
      uint64_t v25 = v23 >> 4;
      uint64_t v59 = (uint64_t)v13;
      uint64_t v60 = (uint64_t)*v13;
      uint64_t v61 = (uint64_t)v13[1];
      long long v62 = v14;
      *int v13 = 0;
      v13[1] = 0;
      int64_t v26 = (unint64_t)((v23 >> 4) - 2) >> 1;
      uint64_t v27 = (uint64_t *)v13;
      while (1)
      {
        uint64_t v28 = &v27[2 * v24 + 2];
        uint64_t v29 = 2 * v24;
        uint64_t v24 = (2 * v24) | 1;
        uint64_t v30 = v29 + 2;
        if (v29 + 2 < v25)
        {
          uint64_t v31 = *v28;
          uint64_t v32 = (std::__shared_weak_count *)v28[1];
          if (v32) {
            atomic_fetch_add_explicit(&v32->__shared_owners_, 1uLL, memory_order_relaxed);
          }
          uint64_t v33 = v28[2];
          long long v34 = (std::__shared_weak_count *)v28[3];
          if (v34)
          {
            atomic_fetch_add_explicit(&v34->__shared_owners_, 1uLL, memory_order_relaxed);
            BOOL v35 = cnframework::GenericEvent::operator>(v31, v33);
            sub_18DEE4E18(v34);
            if (!v32) {
              goto LABEL_37;
            }
          }
          else
          {
            BOOL v35 = cnframework::GenericEvent::operator>(v31, v33);
            if (!v32)
            {
LABEL_37:
              if (!v35) {
                goto LABEL_32;
              }
LABEL_31:
              v28 += 2;
              uint64_t v24 = v30;
              goto LABEL_32;
            }
          }
          sub_18DEE4E18(v32);
          if (v35) {
            goto LABEL_31;
          }
        }
LABEL_32:
        long long v36 = *(_OWORD *)v28;
        *uint64_t v28 = 0;
        v28[1] = 0;
        long long v37 = (std::__shared_weak_count *)v27[1];
        *(_OWORD *)uint64_t v27 = v36;
        if (v37) {
          sub_18DEE4E18(v37);
        }
        uint64_t v27 = v28;
        if (v24 > v26)
        {
          if (v62 - 16 == (char *)v28)
          {
            long long v41 = (std::__shared_weak_count *)v28[1];
            *uint64_t v28 = v60;
            v28[1] = v61;
            uint64_t v22 = v66;
            uint64_t v12 = v64;
            uint64_t v16 = v65;
            int v11 = v63;
            if (v41) {
              sub_18DEE4E18(v41);
            }
          }
          else
          {
            long long v38 = *((_OWORD *)v62 - 1);
            *((void *)v62 - 2) = 0;
            *((void *)v62 - 1) = 0;
            long long v39 = (std::__shared_weak_count *)v28[1];
            *(_OWORD *)uint64_t v28 = v38;
            uint64_t v16 = v65;
            if (v39) {
              sub_18DEE4E18(v39);
            }
            uint64_t v40 = (std::__shared_weak_count *)*((void *)v62 - 1);
            *((void *)v62 - 2) = v60;
            *((void *)v62 - 1) = v61;
            uint64_t v22 = v66;
            uint64_t v12 = v64;
            int v11 = v63;
            if (v40) {
              sub_18DEE4E18(v40);
            }
            sub_18DEE4FA0(v59, (uint64_t)(v28 + 2), ((uint64_t)v28 - v59 + 16) >> 4);
          }
          break;
        }
      }
    }
    uint64_t v42 = *((void *)this + 31);
    unint64_t v43 = *(std::__shared_weak_count **)(v42 - 8);
    if (v43) {
      sub_18DEE4E18(v43);
    }
    *((void *)this + 31) = v42 - 16;
    if (v11)
    {
      if (!v16) {
        goto LABEL_57;
      }
    }
    else
    {
      std::mutex::unlock(v12);
      if (!v16) {
        goto LABEL_57;
      }
    }
    if (*((unsigned char *)v16 + 8))
    {
      __p[0] = (void *)cnframework::GenericEvent::GetEventType(v16, a2, a3, a4, a5, a6, a7, a8);
      double v44 = sub_18DEE511C((void *)this + 4, (uint64_t *)__p);
      if (v44)
      {
        sub_18DEE5230((uint64_t)__p, (uint64_t)(v44 + 3));
        v67[0] = this;
        if (!v73) {
          sub_18DEE534C();
        }
        (*(void (**)(uint64_t, void **, cnframework::GenericEvent *))(*(void *)v73 + 48))(v73, v67, v16);
        sub_18DEE52C8(__p);
        goto LABEL_63;
      }
      __int16 v70 = 3;
      unsigned __int8 v69 = 5;
      (*(void (**)(void **__return_ptr, cnframework::ActiveObjectBase *))(*(void *)this + 16))(__p, this);
      int v51 = v72;
      char v52 = (char)__p[0];
      cnframework::GenericEvent::GetEventName(v16, v67);
      uint64_t v58 = __p;
      if (v51 < 0) {
        LOBYTE(v58) = v52;
      }
      cnprint::CNPrinter::Print((cnprint::CNPrinter *)&v70, &v69, "%s has no event handler defined for event type %s.  Dropping event.", v53, v54, v55, v56, v57, (char)v58);
      if (v68 < 0) {
        operator delete(v67[0]);
      }
LABEL_61:
      if (v72 < 0) {
        operator delete(__p[0]);
      }
LABEL_63:
      if (v22) {
        sub_18DEE4E18(v22);
      }
      return 2;
    }
LABEL_57:
    LOWORD(v67[0]) = 3;
    LOBYTE(v70) = 4;
    (*(void (**)(void **__return_ptr, cnframework::ActiveObjectBase *))(*(void *)this + 16))(__p, this);
    if (v72 >= 0) {
      long long v50 = __p;
    }
    else {
      LOBYTE(v50) = __p[0];
    }
    cnprint::CNPrinter::Print((cnprint::CNPrinter *)v67, (unsigned __int8 *)&v70, "%s received empty event; dropping.",
      v45,
      v46,
      v47,
      v48,
      v49,
      (char)v50);
    goto LABEL_61;
  }
  if (!v15)
  {
    uint64_t v16 = *v13;
    goto LABEL_21;
  }
LABEL_17:
  if (!v11) {
    std::mutex::unlock(v12);
  }
  return 0;
}

void sub_18DEE3C10(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *__p,uint64_t a22,int a23,__int16 a24,char a25,char a26,uint64_t a27,void *a28,uint64_t a29,int a30,__int16 a31,char a32,char a33)
{
  if (a26 < 0) {
    operator delete(__p);
  }
  if (a33 < 0) {
    operator delete(a28);
  }
  if (v33) {
    sub_18DEE4E18(v33);
  }
  _Unwind_Resume(exception_object);
}

void cnframework::ActiveObjectBase::ReceiveEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  long long v25 = *(_OWORD *)(*(void *)a2 + 32);
  int v11 = *(unsigned __int8 *)(a1 + 168);
  if (*(unsigned char *)(a1 + 168))
  {
    uint64_t v12 = 0;
  }
  else
  {
    uint64_t v12 = (std::mutex *)(a1 + 280);
    std::mutex::lock((std::mutex *)(a1 + 280));
  }
  if (!*(unsigned char *)(a1 + 169) || sub_18DEE4C00((double *)&v25, (double *)(a1 + 176)))
  {
    int v13 = 1;
    *(unsigned char *)(a1 + 169) = 1;
    *(_OWORD *)(a1 + 176) = v25;
    if (v11) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  int v13 = 0;
  if (!v11) {
LABEL_7:
  }
    std::mutex::unlock(v12);
LABEL_8:
  uint64_t EventType = cnframework::GenericEvent::GetEventType(*(cnframework::GenericEvent **)a2, a2, a3, a4, a5, a6, a7, a8);
  uint64_t v15 = *(void *)(a1 + 8);
  uint64_t v16 = *(void *)(a1 + 16);
  if (v15 == v16)
  {
LABEL_15:
    char v20 = 0;
  }
  else
  {
    uint64_t v17 = EventType;
    while (!sub_18DEE4C68(*(void *)(v15 + 8), v17) && !*(unsigned char *)v15
         || *(void *)(v15 + 24) != a3 && !*(unsigned char *)(v15 + 16))
    {
      v15 += 32;
      if (v15 == v16) {
        goto LABEL_15;
      }
    }
    int64_t v21 = *(atomic_ullong **)(a2 + 8);
    v24[0] = *(cnframework::GenericEvent **)a2;
    v24[1] = (cnframework::GenericEvent *)v21;
    if (v21) {
      atomic_fetch_add_explicit(v21 + 1, 1uLL, memory_order_relaxed);
    }
    char v20 = cnframework::ActiveObjectBase::AddEventToEventQueue(a1, v24, v18, v19);
    if (v21) {
      sub_18DEE4E18((std::__shared_weak_count *)v21);
    }
  }
  if (!*(unsigned char *)(a1 + 168))
  {
    int v22 = atomic_load((unsigned __int8 *)(a1 + 352));
    if (v22 == 1)
    {
      int v23 = *(_DWORD *)(a1 + 272);
      if (v23 == 1)
      {
        if (!v13) {
          return;
        }
      }
      else if (v23 || (v20 & 1) == 0)
      {
        return;
      }
      std::condition_variable::notify_all((std::condition_variable *)(a1 + 432));
    }
  }
}

void sub_18DEE3DF0(_Unwind_Exception *exception_object)
{
  if (v1) {
    sub_18DEE4E18(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t cnframework::ActiveObjectBase::AddEventToEventQueue(uint64_t a1, cnframework::GenericEvent **a2, int8x16_t a3, int8x16_t a4)
{
  uint64_t v5 = a1;
  int v6 = *(unsigned __int8 *)(a1 + 168);
  if (*(unsigned char *)(a1 + 168))
  {
    BOOL v7 = 0;
  }
  else
  {
    BOOL v7 = (std::mutex *)(a1 + 280);
    std::mutex::lock((std::mutex *)(a1 + 280));
  }
  if (*(_DWORD *)(v5 + 272) != 1) {
    goto LABEL_12;
  }
  *(_OWORD *)std::string __p = *((_OWORD *)*a2 + 2);
  long long v62 = (void *)CNTimeSpan::operator+((uint64_t)__p, (void *)(v5 + 224), *(int8x16_t *)__p, a4);
  uint64_t v63 = v8;
  a1 = sub_18DEE4CB8((double *)&v62, (double *)(v5 + 176));
  if (!a1) {
    goto LABEL_12;
  }
  uint64_t v16 = *(uint64_t **)(v5 + 144);
  uint64_t v17 = *(uint64_t **)(v5 + 152);
  if (v16 == v17) {
    goto LABEL_13;
  }
  while (1)
  {
    uint64_t v18 = *v16;
    uint64_t EventType = cnframework::GenericEvent::GetEventType(*a2, v9, v10, v11, v12, v13, v14, v15);
    a1 = sub_18DEE4C68(v18, EventType);
    if (a1) {
      break;
    }
    v16 += 2;
    if (v16 == v17)
    {
      uint64_t v16 = v17;
      break;
    }
  }
  if (v16 == *(uint64_t **)(v5 + 152)) {
    goto LABEL_13;
  }
  *(_OWORD *)std::string __p = *((_OWORD *)*a2 + 2);
  v20.i64[1] = (uint64_t)__p[1];
  v20.i64[0] = v16[1];
  v65[0] = 0;
  v65[1] = 0;
  CNTimeSpan::SetTimeSpan(v65, 0, v20, a4);
  long long v62 = (void *)CNTimeSpan::operator+((uint64_t)__p, v65, v21, v22);
  uint64_t v63 = v23;
  a1 = sub_18DEE4D28((double *)&v62, (double *)(v5 + 176));
  if ((a1 & 1) == 0)
  {
LABEL_13:
    ++*(void *)(v5 + 216);
    int v24 = 1;
  }
  else
  {
LABEL_12:
    int v24 = 0;
  }
  if (*(void *)(v5 + 216)
    && ((a1 = CNTimeSpan::operator-(v5 + 176, (void *)(v5 + 200), a3, a4), !*(unsigned char *)(v5 + 192))
     || v25 + (double)a1 >= 1.0))
  {
    LOWORD(__p[0]) = 3;
    LOBYTE(v65[0]) = 3;
    uint64_t v34 = *(void *)(v5 + 176);
    double v35 = *(double *)(v5 + 184);
    (*(void (**)(void **__return_ptr, uint64_t))(*(void *)v5 + 16))(&v62, v5);
    double v57 = v35 + (double)v34;
    cnprint::CNPrinter::Print((cnprint::CNPrinter *)__p, (unsigned __int8 *)v65, "Warning: time,%.3lf,%s dropped %llu latent event(s) in the past %.1lf second(s)", v36, v37, v38, v39, v40, SLOBYTE(v57));
    if (v64 < 0) {
      operator delete(v62);
    }
    *(unsigned char *)(v5 + 192) = 1;
    *(_OWORD *)(v5 + 200) = *(_OWORD *)(v5 + 176);
    *(void *)(v5 + 216) = 0;
    if (v24) {
      goto LABEL_18;
    }
  }
  else if (v24)
  {
LABEL_18:
    if (!cnprint::CNPrinter::GetLogLevel((cnprint::CNPrinter *)a1))
    {
      LOWORD(v65[0]) = 3;
      unsigned __int8 v61 = 0;
      (*(void (**)(void **__return_ptr, uint64_t))(*(void *)v5 + 16))(&v62, v5);
      int v26 = v64;
      char v27 = (char)v62;
      cnframework::GenericEvent::GetEventName(*a2, __p);
      uint64_t v33 = &v62;
      if (v26 < 0) {
        LOBYTE(v33) = v27;
      }
      cnprint::CNPrinter::Print((cnprint::CNPrinter *)v65, &v61, "Warning: %s dropping old %s with time %.3lf at time %.3lf", v28, v29, v30, v31, v32, (char)v33);
      if (v60 < 0) {
        operator delete(__p[0]);
      }
      if (v64 < 0) {
        operator delete(v62);
      }
    }
    goto LABEL_52;
  }
  long long v41 = *(_OWORD *)a2;
  unint64_t v43 = *(char **)(v5 + 248);
  unint64_t v42 = *(void *)(v5 + 256);
  if ((unint64_t)v43 >= v42)
  {
    uint64_t v45 = *(char **)(v5 + 240);
    uint64_t v46 = (v43 - v45) >> 4;
    unint64_t v47 = v46 + 1;
    if ((unint64_t)(v46 + 1) >> 60) {
      sub_18DEE1FC8();
    }
    long long v58 = v41;
    uint64_t v48 = v42 - (void)v45;
    if (v48 >> 3 > v47) {
      unint64_t v47 = v48 >> 3;
    }
    if ((unint64_t)v48 >= 0x7FFFFFFFFFFFFFF0) {
      unint64_t v49 = 0xFFFFFFFFFFFFFFFLL;
    }
    else {
      unint64_t v49 = v47;
    }
    if (v49 >> 60) {
      sub_18DEDF7D4();
    }
    long long v50 = (char *)operator new(16 * v49);
    int v51 = &v50[16 * v46];
    *(_OWORD *)int v51 = v58;
    if (*((void *)&v58 + 1))
    {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(*((void *)&v58 + 1) + 8), 1uLL, memory_order_relaxed);
      uint64_t v45 = *(char **)(v5 + 240);
      unint64_t v43 = *(char **)(v5 + 248);
    }
    char v52 = &v50[16 * v49];
    uint64_t v44 = (uint64_t)(v51 + 16);
    if (v43 == v45)
    {
      *(void *)(v5 + 240) = v51;
      *(void *)(v5 + 248) = v44;
      *(void *)(v5 + 256) = v52;
    }
    else
    {
      do
      {
        long long v53 = *((_OWORD *)v43 - 1);
        v43 -= 16;
        *((_OWORD *)v51 - 1) = v53;
        v51 -= 16;
        *(void *)unint64_t v43 = 0;
        *((void *)v43 + 1) = 0;
      }
      while (v43 != v45);
      uint64_t v45 = *(char **)(v5 + 240);
      uint64_t v54 = *(char **)(v5 + 248);
      *(void *)(v5 + 240) = v51;
      *(void *)(v5 + 248) = v44;
      *(void *)(v5 + 256) = v52;
      while (v54 != v45)
      {
        uint64_t v55 = (std::__shared_weak_count *)*((void *)v54 - 1);
        if (v55) {
          sub_18DEE4E18(v55);
        }
        v54 -= 16;
      }
    }
    if (v45) {
      operator delete(v45);
    }
  }
  else
  {
    *(_OWORD *)unint64_t v43 = v41;
    if (*((void *)&v41 + 1)) {
      atomic_fetch_add_explicit((atomic_ullong *volatile)(*((void *)&v41 + 1) + 8), 1uLL, memory_order_relaxed);
    }
    uint64_t v44 = (uint64_t)(v43 + 16);
  }
  *(void *)(v5 + 248) = v44;
  sub_18DEE4FA0(*(void *)(v5 + 240), v44, (v44 - *(void *)(v5 + 240)) >> 4);
LABEL_52:
  if (!v6) {
    std::mutex::unlock(v7);
  }
  return v24 ^ 1u;
}

void sub_18DEE4258(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a20 < 0) {
    operator delete(__p);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  if (!v29) {
    std::mutex::unlock(v28);
  }
  _Unwind_Resume(exception_object);
}

void cnframework::ActiveObjectBase::SetEventDistributor(void *a1, uint64_t a2)
{
  if (a2)
  {
    if (a1[43])
    {
      __int16 v19 = 3;
      unsigned __int8 v18 = 3;
      (*(void (**)(void **__return_ptr, void *))(*a1 + 16))(__p, a1);
      if (v17 >= 0) {
        uint64_t v9 = __p;
      }
      else {
        LOBYTE(v9) = __p[0];
      }
      cnprint::CNPrinter::Print((cnprint::CNPrinter *)&v19, &v18, "Replacing previously-set event distributor in %s.", v4, v5, v6, v7, v8, (char)v9);
      if (v17 < 0) {
        operator delete(__p[0]);
      }
    }
    a1[43] = a2;
  }
  else
  {
    __int16 v19 = 3;
    unsigned __int8 v18 = 5;
    (*(void (**)(void **__return_ptr, void *))(*a1 + 16))(__p, a1);
    if (v17 >= 0) {
      uint64_t v15 = __p;
    }
    else {
      LOBYTE(v15) = __p[0];
    }
    cnprint::CNPrinter::Print((cnprint::CNPrinter *)&v19, &v18, "Attempted to set null event distributor in %s.", v10, v11, v12, v13, v14, (char)v15);
    if (v17 < 0) {
      operator delete(__p[0]);
    }
  }
}

void sub_18DEE43E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void cnframework::ActiveObjectBase::SetThreadingModel(uint64_t a1, unsigned char *a2)
{
  uint64_t v4 = (std::mutex *)(a1 + 368);
  std::mutex::lock((std::mutex *)(a1 + 368));
  if (*(unsigned char *)(a1 + 168)) {
    int v5 = 0;
  }
  else {
    int v5 = atomic_load((unsigned __int8 *)(a1 + 352));
  }
  LOWORD(v25) = 3;
  unsigned __int8 v28 = 2;
  (*(void (**)(void **__return_ptr, uint64_t))(*(void *)a1 + 16))(__p, a1);
  if (v27 >= 0) {
    uint64_t v11 = __p;
  }
  else {
    LOBYTE(v11) = __p[0];
  }
  cnprint::CNPrinter::Print((cnprint::CNPrinter *)&v25, &v28, "%s changing threading model from %u to %u", v6, v7, v8, v9, v10, (char)v11);
  if (v27 < 0) {
    operator delete(__p[0]);
  }
  int v17 = *a2;
  if (v5 != v17)
  {
    if (v17 == 1)
    {
      if (!*(unsigned char *)(a1 + 168))
      {
        atomic_store(1u, (unsigned __int8 *)(a1 + 352));
        operator new();
      }
      LOWORD(__p[0]) = 3;
      LOBYTE(v25) = 4;
      cnprint::CNPrinter::Print((cnprint::CNPrinter *)__p, (unsigned __int8 *)&v25, "cannot switch into MultiThreaded due to configuration", v12, v13, v14, v15, v16, v24);
      __assert_rtn("SetThreadingModel", "activeobjectbase.cpp", 285, "false && \"cannot switch into MultiThreaded due to configuration\"");
    }
    if (!*a2)
    {
      atomic_store(0, (unsigned __int8 *)(a1 + 352));
      std::condition_variable::notify_all((std::condition_variable *)(a1 + 432));
      if (*(void *)(a1 + 360))
      {
        std::thread::join((std::thread *)(a1 + 360));
      }
      else
      {
        LOWORD(v25) = 3;
        unsigned __int8 v28 = 4;
        (*(void (**)(void **__return_ptr, uint64_t))(*(void *)a1 + 16))(__p, a1);
        if (v27 >= 0) {
          uint64_t v23 = __p;
        }
        else {
          LOBYTE(v23) = __p[0];
        }
        cnprint::CNPrinter::Print((cnprint::CNPrinter *)&v25, &v28, "%s thread not joinable", v18, v19, v20, v21, v22, (char)v23);
        if (v27 < 0) {
          operator delete(__p[0]);
        }
      }
    }
  }
  std::mutex::unlock(v4);
}

void sub_18DEE46A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  std::mutex::unlock(v18);
  _Unwind_Resume(a1);
}

uint64_t cnframework::ActiveObjectBase::GetCurrentTime(cnframework::ActiveObjectBase *this)
{
  if (*((unsigned char *)this + 168)) {
    return *((void *)this + 22);
  }
  double v3 = (std::mutex *)((char *)this + 280);
  std::mutex::lock((std::mutex *)((char *)this + 280));
  uint64_t v2 = *((void *)this + 22);
  std::mutex::unlock(v3);
  return v2;
}

void cnframework::ActiveObjectBase::ResetCurrentTime(cnframework::ActiveObjectBase *this)
{
  int v2 = *((unsigned __int8 *)this + 168);
  if (*((unsigned char *)this + 168))
  {
    double v3 = 0;
  }
  else
  {
    double v3 = (std::mutex *)((char *)this + 280);
    std::mutex::lock((std::mutex *)((char *)this + 280));
  }
  *((unsigned char *)this + 192) = 0;
  *((void *)this + 25) = 0;
  *((void *)this + 26) = 0x7FF8000000000000;
  *((void *)this + 27) = 0;
  *((unsigned char *)this + 169) = 0;
  *((void *)this + 22) = 0;
  *((void *)this + 23) = 0x7FF8000000000000;
  if (!v2)
  {
    std::mutex::unlock(v3);
  }
}

uint64_t cnframework::ActiveObjectBase::ResetDroppedEventStats(uint64_t this)
{
  *(unsigned char *)(this + 192) = 0;
  *(void *)(this + 200) = 0;
  *(void *)(this + 208) = 0x7FF8000000000000;
  *(void *)(this + 216) = 0;
  return this;
}

void cnframework::ActiveObjectBase::ResetEventQueue(cnframework::ActiveObjectBase *this)
{
  int v2 = *((unsigned __int8 *)this + 168);
  if (*((unsigned char *)this + 168))
  {
    double v3 = 0;
  }
  else
  {
    double v3 = (std::mutex *)((char *)this + 280);
    std::mutex::lock((std::mutex *)((char *)this + 280));
  }
  *((unsigned char *)this + 192) = 0;
  *((void *)this + 25) = 0;
  *((void *)this + 26) = 0x7FF8000000000000;
  *((void *)this + 27) = 0;
  sub_18DEE4F64((uint64_t *)this + 30);
  *((void *)this + 30) = 0;
  *((void *)this + 31) = 0;
  *((void *)this + 32) = 0;
  memset(v4, 0, 24);
  int v5 = (void **)v4;
  sub_18DEE4B60(&v5);
  if (!v2) {
    std::mutex::unlock(v3);
  }
}

void cnframework::ActiveObjectBase::SetEventQueueDelay(cnframework::ActiveObjectBase *this, double a2)
{
  int v4 = *((unsigned __int8 *)this + 168);
  if (*((unsigned char *)this + 168))
  {
    int v5 = 0;
  }
  else
  {
    int v5 = (std::mutex *)((char *)this + 280);
    std::mutex::lock((std::mutex *)((char *)this + 280));
  }
  if (*(uint64_t *)&a2 > -1 && ((*(void *)&a2 & 0x7FFFFFFFFFFFFFFFuLL) - 0x10000000000000) >> 53 < 0x3FF
    || (unint64_t)(*(void *)&a2 - 1) < 0xFFFFFFFFFFFFFLL
    || (*(void *)&a2 & 0x7FFFFFFFFFFFFFFFLL) == 0)
  {
    if (cnprint::CNPrinter::GetLogLevel(this) <= 1)
    {
      __int16 v26 = 3;
      unsigned __int8 v25 = 1;
      (*(void (**)(void **__return_ptr, cnframework::ActiveObjectBase *))(*(void *)this + 16))(__p, this);
      if (v24 >= 0) {
        uint64_t v16 = __p;
      }
      else {
        LOBYTE(v16) = __p[0];
      }
      cnprint::CNPrinter::Print((cnprint::CNPrinter *)&v26, &v25, "%s setting event queue delay to %.3lf", v11, v12, v13, v14, v15, (char)v16);
      if (v24 < 0) {
        operator delete(__p[0]);
      }
    }
    *((_DWORD *)this + 68) = a2 > 0.0;
    __p[0] = 0;
    __p[1] = 0;
    *(double *)v9.i64 = a2;
    CNTimeSpan::SetTimeSpan((uint64_t *)__p, 0, v9, v10);
    *((_OWORD *)this + 14) = *(_OWORD *)__p;
    if (!v4) {
      goto LABEL_22;
    }
  }
  else
  {
    __int16 v26 = 3;
    unsigned __int8 v25 = 5;
    (*(void (**)(void **__return_ptr, cnframework::ActiveObjectBase *))(*(void *)this + 16))(__p, this);
    if (v24 >= 0) {
      uint64_t v22 = __p;
    }
    else {
      LOBYTE(v22) = __p[0];
    }
    cnprint::CNPrinter::Print((cnprint::CNPrinter *)&v26, &v25, "%s attempted to set event queue delay to %.3lf, defaulting to 0.0", v17, v18, v19, v20, v21, (char)v22);
    if (v24 < 0) {
      operator delete(__p[0]);
    }
    *((_DWORD *)this + 68) = 0;
    *((void *)this + 28) = 0;
    *((void *)this + 29) = 0;
    if (!v4) {
LABEL_22:
    }
      std::mutex::unlock(v5);
  }
}

void sub_18DEE4A74(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (!v17) {
    std::mutex::unlock(v16);
  }
  _Unwind_Resume(exception_object);
}

void cnframework::ActiveObjectBase::HandleAllEvents(cnframework::ActiveObjectBase *this)
{
  if (!*((unsigned char *)this + 168))
  {
    int v2 = (std::mutex *)((char *)this + 72);
    double v3 = (std::condition_variable *)((char *)this + 432);
    do
    {
      int v4 = atomic_load((unsigned __int8 *)this + 352);
      if (v4 != 1) {
        break;
      }
      v14.__m_ = v2;
      v14.__owns_ = 1;
      std::mutex::lock(v2);
      std::condition_variable::wait(v3, &v14);
      while (cnframework::ActiveObjectBase::HandleNextEventWithoutMutex(this, v5, v6, v7, v8, v9, v10, v11, v12, v13));
      if (v14.__owns_) {
        std::mutex::unlock(v14.__m_);
      }
    }
    while (!*((unsigned char *)this + 168));
  }
}

void sub_18DEE4B44(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, std::mutex *a9, char a10)
{
  if (a10) {
    std::mutex::unlock(a9);
  }
  _Unwind_Resume(exception_object);
}

void sub_18DEE4B60(void ***a1)
{
  int v2 = *a1;
  if (*v2)
  {
    sub_18DEE4BB4((uint64_t *)v2);
    double v3 = **a1;
    operator delete(v3);
  }
}

void sub_18DEE4BB4(uint64_t *a1)
{
  uint64_t v2 = *a1;
  for (uint64_t i = a1[1]; i != v2; i -= 16)
  {
    int v4 = *(std::__shared_weak_count **)(i - 8);
    if (v4) {
      sub_18DEE4E18(v4);
    }
  }
  a1[1] = v2;
}

BOOL sub_18DEE4C00(double *a1, double *a2)
{
  double v2 = *a1;
  if (!*(void *)a1)
  {
    double v3 = a1[1];
    if ((*(void *)&v3 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
LABEL_7:
      BOOL v5 = v3 <= a2[1];
      return !v5;
    }
  }
  double v4 = *a2;
  if (*(void *)a2 || ((void)a2[1] & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000)
  {
    BOOL v5 = *(void *)&v2 <= *(void *)&v4;
    if (*(void *)&v2 != *(void *)&v4) {
      return !v5;
    }
    double v3 = a1[1];
    goto LABEL_7;
  }
  BOOL v5 = a1[1] <= a2[1];
  return !v5;
}

BOOL sub_18DEE4C68(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a2 + 8);
  if (v2 == v3) {
    return 1;
  }
  if ((v3 & v2) < 0 != __OFSUB__(v2, v3)) {
    return strcmp((const char *)(v2 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(v3 & 0x7FFFFFFFFFFFFFFFLL)) == 0;
  }
  return 0;
}

BOOL sub_18DEE4CB8(double *a1, double *a2)
{
  double v2 = *a1;
  if (!*(void *)a1)
  {
    double v3 = a1[1];
    if ((*(void *)&v3 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000) {
      return v3 < a2[1];
    }
  }
  double v4 = *a2;
  if (*(void *)a2 || ((void)a2[1] & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000)
  {
    if (*(void *)&v2 != *(void *)&v4) {
      return *(void *)&v2 < *(void *)&v4;
    }
    double v3 = a1[1];
    return v3 < a2[1];
  }
  return a1[1] < a2[1];
}

BOOL sub_18DEE4D28(double *a1, double *a2)
{
  double v2 = *a1;
  if (!*(void *)a1)
  {
    double v3 = a1[1];
    if ((*(void *)&v3 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
LABEL_7:
      BOOL v5 = v3 < a2[1];
      return !v5;
    }
  }
  double v4 = *a2;
  if (*(void *)a2 || ((void)a2[1] & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000)
  {
    if (*(void *)&v2 != *(void *)&v4) {
      return *(void *)&v2 > *(void *)&v4;
    }
    double v3 = a1[1];
    goto LABEL_7;
  }
  BOOL v5 = a1[1] < a2[1];
  return !v5;
}

uint64_t sub_18DEE4D98(uint64_t a1)
{
  sub_18DEE4DD4(a1, *(void **)(a1 + 16));
  double v2 = *(void **)a1;
  *(void *)a1 = 0;
  if (v2) {
    operator delete(v2);
  }
  return a1;
}

void sub_18DEE4DD4(uint64_t a1, void *a2)
{
  if (a2)
  {
    double v2 = a2;
    do
    {
      double v3 = (void *)*v2;
      sub_18DEE52C8(v2 + 3);
      operator delete(v2);
      double v2 = v3;
    }
    while (v3);
  }
}

void sub_18DEE4E18(std::__shared_weak_count *a1)
{
  if (!atomic_fetch_add(&a1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))a1->__on_zero_shared)(a1);
    std::__shared_weak_count::__release_weak(a1);
  }
}

uint64_t sub_18DEE4E8C(uint64_t *a1)
{
  double v4 = (const void **)a1;
  unint64_t v1 = std::__thread_local_data();
  double v2 = *v4;
  std::__shared_weak_count *v4 = 0;
  pthread_setspecific(v1->__key_, v2);
  cnframework::ActiveObjectBase::HandleAllEvents((cnframework::ActiveObjectBase *)v4[1]);
  sub_18DEE4EF8((uint64_t **)&v4);
  return 0;
}

void sub_18DEE4EE4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  sub_18DEE4EF8((uint64_t **)va);
  _Unwind_Resume(a1);
}

uint64_t **sub_18DEE4EF8(uint64_t **a1)
{
  double v2 = *a1;
  *a1 = 0;
  if (v2)
  {
    uint64_t v3 = *v2;
    uint64_t *v2 = 0;
    if (v3)
    {
      uint64_t v4 = MEMORY[0x192FA5F50]();
      MEMORY[0x192FA6240](v4, 0x20C4093837F09);
    }
    MEMORY[0x192FA6240](v2, 0x20C40A4A59CD2);
  }
  return a1;
}

void sub_18DEE4F64(uint64_t *a1)
{
  if (*a1)
  {
    sub_18DEE4BB4(a1);
    operator delete((void *)*a1);
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
  }
}

void sub_18DEE4FA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3 = a3 - 2;
  if (a3 < 2) {
    return;
  }
  unint64_t v6 = v3 >> 1;
  uint64_t v7 = (uint64_t *)(a1 + 16 * (v3 >> 1));
  uint64_t v8 = *v7;
  uint64_t v9 = (std::__shared_weak_count *)v7[1];
  if (v9) {
    atomic_fetch_add_explicit(&v9->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  uint64_t v10 = *(void *)(a2 - 16);
  uint64_t v11 = *(std::__shared_weak_count **)(a2 - 8);
  int8x16_t v12 = (uint64_t *)(a2 - 16);
  if (!v11)
  {
    BOOL v13 = cnframework::GenericEvent::operator>(v8, v10);
    if (!v9) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  atomic_fetch_add_explicit(&v11->__shared_owners_, 1uLL, memory_order_relaxed);
  BOOL v13 = cnframework::GenericEvent::operator>(v8, v10);
  sub_18DEE4E18(v11);
  if (v9) {
LABEL_6:
  }
    sub_18DEE4E18(v9);
LABEL_7:
  if (!v13) {
    return;
  }
  uint64_t v14 = *(void *)(a2 - 16);
  uint64_t v15 = *(std::__shared_weak_count **)(a2 - 8);
  uint64_t *v12 = 0;
  v12[1] = 0;
  do
  {
    uint64_t v16 = v12;
    int8x16_t v12 = v7;
    long long v17 = *(_OWORD *)v7;
    uint64_t *v7 = 0;
    v7[1] = 0;
    uint64_t v18 = (std::__shared_weak_count *)v16[1];
    *(_OWORD *)uint64_t v16 = v17;
    if (v18) {
      sub_18DEE4E18(v18);
    }
    if (!v6) {
      break;
    }
    unint64_t v6 = (v6 - 1) >> 1;
    uint64_t v7 = (uint64_t *)(a1 + 16 * v6);
    uint64_t v19 = *v7;
    uint64_t v20 = (std::__shared_weak_count *)v7[1];
    if (v20) {
      atomic_fetch_add_explicit(&v20->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    if (!v15)
    {
      BOOL v21 = cnframework::GenericEvent::operator>(v19, v14);
      if (!v20) {
        continue;
      }
LABEL_16:
      sub_18DEE4E18(v20);
      continue;
    }
    atomic_fetch_add_explicit(&v15->__shared_owners_, 1uLL, memory_order_relaxed);
    BOOL v21 = cnframework::GenericEvent::operator>(v19, v14);
    sub_18DEE4E18(v15);
    if (v20) {
      goto LABEL_16;
    }
  }
  while (v21);
  uint64_t v22 = (std::__shared_weak_count *)v12[1];
  uint64_t *v12 = v14;
  v12[1] = (uint64_t)v15;
  if (v22)
  {
    sub_18DEE4E18(v22);
  }
}

void *sub_18DEE511C(void *a1, uint64_t *a2)
{
  unint64_t v3 = *(void *)(*a2 + 8);
  if ((v3 & 0x8000000000000000) != 0)
  {
    uint64_t v4 = (unsigned __int8 *)(v3 & 0x7FFFFFFFFFFFFFFFLL);
    uint64_t v5 = 5381;
    do
    {
      unint64_t v3 = v5;
      unsigned int v6 = *v4++;
      uint64_t v5 = (33 * v5) ^ v6;
    }
    while (v6);
  }
  int8x8_t v7 = (int8x8_t)a1[1];
  if (!*(void *)&v7) {
    return 0;
  }
  uint8x8_t v8 = (uint8x8_t)vcnt_s8(v7);
  v8.i16[0] = vaddlv_u8(v8);
  unint64_t v9 = v8.u32[0];
  if (v8.u32[0] > 1uLL)
  {
    unint64_t v10 = v3;
    if (v3 >= *(void *)&v7) {
      unint64_t v10 = v3 % *(void *)&v7;
    }
  }
  else
  {
    unint64_t v10 = (*(void *)&v7 - 1) & v3;
  }
  uint64_t v11 = *(void **)(*a1 + 8 * v10);
  if (!v11) {
    return 0;
  }
  int8x16_t v12 = (void *)*v11;
  if (*v11)
  {
    do
    {
      unint64_t v13 = v12[1];
      if (v13 == v3)
      {
        if (sub_18DEE4C68(v12[2], *a2)) {
          return v12;
        }
      }
      else
      {
        if (v9 > 1)
        {
          if (v13 >= *(void *)&v7) {
            v13 %= *(void *)&v7;
          }
        }
        else
        {
          v13 &= *(void *)&v7 - 1;
        }
        if (v13 != v10) {
          return 0;
        }
      }
      int8x16_t v12 = (void *)*v12;
    }
    while (v12);
  }
  return v12;
}

uint64_t sub_18DEE5230(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(void *)(a1 + 24) = a1;
      (*(void (**)(void, uint64_t))(**(void **)(a2 + 24) + 24))(*(void *)(a2 + 24), a1);
    }
    else
    {
      *(void *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 16))(v3);
    }
  }
  else
  {
    *(void *)(a1 + 24) = 0;
  }
  return a1;
}

void *sub_18DEE52C8(void *a1)
{
  double v2 = (void *)a1[3];
  if (v2 == a1)
  {
    (*(void (**)(void *))(*a1 + 32))(a1);
  }
  else if (v2)
  {
    (*(void (**)(void *))(*v2 + 40))(v2);
  }
  return a1;
}

void sub_18DEE534C()
{
  exception = __cxa_allocate_exception(8uLL);
  void *exception = &unk_1EDD1E310;
  __cxa_throw(exception, (struct type_info *)&unk_1EDD093A0, (void (*)(void *))std::exception::~exception);
}

void sub_18DEE539C(std::exception *a1)
{
  std::exception::~exception(a1);

  JUMPOUT(0x192FA6240);
}

uint64_t cnframework::Supervisor::Supervisor(uint64_t a1, unsigned char *a2)
{
  *(void *)a1 = &unk_1EDD0A1C8;
  *(unsigned char *)(a1 + 8) = *a2;
  double v3 = cnframework::ActiveObjectBase::ActiveObjectBase(a1 + 16, a2);
  *(void *)(a1 + 16) = &unk_1EDD0A330;
  *(void *)(a1 + 504) = 0;
  *(void *)(a1 + 512) = 0;
  *(void *)(a1 + 496) = 0;
  MEMORY[0x192FA5FA0](a1 + 520, v3);
  *(unsigned char *)(a1 + 584) = 0;
  *(void *)(a1 + 592) = 0;
  *(void *)(a1 + 600) = 0x7FF8000000000000;
  *(void *)(a1 + 608) = 850045863;
  *(_OWORD *)(a1 + 616) = 0u;
  *(_OWORD *)(a1 + 632) = 0u;
  *(_OWORD *)(a1 + 648) = 0u;
  *(_OWORD *)(a1 + 657) = 0u;
  *(void *)(a1 + 680) = 850045863;
  *(_OWORD *)(a1 + 688) = 0u;
  *(_OWORD *)(a1 + 704) = 0u;
  *(_OWORD *)(a1 + 720) = 0u;
  *(_OWORD *)(a1 + 729) = 0u;
  *(void *)(a1 + 752) = 850045863;
  *(_OWORD *)(a1 + 760) = 0u;
  *(_OWORD *)(a1 + 776) = 0u;
  *(_OWORD *)(a1 + 792) = 0u;
  *(_OWORD *)(a1 + 801) = 0u;
  atomic_store(0, (unsigned __int8 *)(a1 + 744));
  return a1;
}

void sub_18DEE54C8(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;
  unsigned int v6 = *v4;
  if (*v4)
  {
    *(void *)(v1 + 504) = v6;
    operator delete(v6);
  }
  cnframework::ActiveObjectBase::~ActiveObjectBase(v2);
  _Unwind_Resume(a1);
}

void cnframework::Supervisor::~Supervisor(cnframework::Supervisor *this, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)this = &unk_1EDD0A1C8;
  if (!*((unsigned char *)this + 816))
  {
    __int16 v12 = 3;
    unsigned __int8 v11 = 5;
    cnprint::CNPrinter::Print((cnprint::CNPrinter *)&v12, &v11, "Supervisor::~Supervisor called without Supervisor::TearDown", a4, a5, a6, a7, a8, v10);
  }
  std::recursive_mutex::lock((std::recursive_mutex *)((char *)this + 520));
  *((void *)this + 63) = *((void *)this + 62);
  std::recursive_mutex::unlock((std::recursive_mutex *)((char *)this + 520));
  std::mutex::~mutex((std::mutex *)((char *)this + 752));
  std::mutex::~mutex((std::mutex *)((char *)this + 680));
  std::mutex::~mutex((std::mutex *)((char *)this + 608));
  std::recursive_mutex::~recursive_mutex((std::recursive_mutex *)((char *)this + 520));
  unint64_t v9 = (void *)*((void *)this + 62);
  if (v9)
  {
    *((void *)this + 63) = v9;
    operator delete(v9);
  }
  cnframework::ActiveObjectBase::~ActiveObjectBase((cnframework::Supervisor *)((char *)this + 16));
}

uint64_t cnframework::Supervisor::GetCurrentTime(cnframework::Supervisor *this)
{
  double v2 = (std::mutex *)((char *)this + 608);
  std::mutex::lock((std::mutex *)((char *)this + 608));
  uint64_t v3 = *((void *)this + 74);
  std::mutex::unlock(v2);
  return v3;
}

uint64_t cnframework::Supervisor::GetThreadingModel(cnframework::Supervisor *this)
{
  if (*((unsigned char *)this + 8)) {
    return 0;
  }
  else {
    return atomic_load((unsigned __int8 *)this + 744);
  }
}

void cnframework::Supervisor::SetThreadingModel(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (*a2 && *(unsigned char *)(a1 + 8))
  {
    LOWORD(__p[0]) = 3;
    LOBYTE(v25) = 4;
    cnprint::CNPrinter::Print((cnprint::CNPrinter *)__p, (unsigned __int8 *)&v25, "cannot switch into MultiThreaded due to configuration", a4, a5, a6, a7, a8, v21);
    __assert_rtn("SetThreadingModel", "supervisor.cpp", 95, "false && \"cannot switch into MultiThreaded due to configuration\"");
  }
  std::mutex::lock((std::mutex *)(a1 + 752));
  std::mutex::lock((std::mutex *)(a1 + 680));
  int v10 = *(unsigned __int8 *)(a1 + 672);
  std::mutex::unlock((std::mutex *)(a1 + 680));
  if (v10) {
    cnframework::Supervisor::Pause((cnframework::Supervisor *)a1);
  }
  if (*(unsigned char *)(a1 + 8)) {
    int v11 = 0;
  }
  else {
    int v11 = atomic_load((unsigned __int8 *)(a1 + 744));
  }
  __int16 v25 = 3;
  unsigned __int8 v24 = 2;
  (*(void (**)(void **__return_ptr, uint64_t))(*(void *)a1 + 40))(__p, a1);
  if (v23 >= 0) {
    long long v17 = __p;
  }
  else {
    LOBYTE(v17) = __p[0];
  }
  cnprint::CNPrinter::Print((cnprint::CNPrinter *)&v25, &v24, "%s changing threading model from %u to %u", v12, v13, v14, v15, v16, (char)v17);
  if (v23 < 0) {
    operator delete(__p[0]);
  }
  int v18 = *a2;
  if (v11 != v18) {
    atomic_store(v18, (unsigned __int8 *)(a1 + 744));
  }
  std::recursive_mutex::lock((std::recursive_mutex *)(a1 + 520));
  uint64_t v19 = *(uint64_t **)(a1 + 496);
  uint64_t v20 = *(uint64_t **)(a1 + 504);
  while (v19 != v20)
    cnframework::ActiveObjectBase::SetThreadingModel(*v19++, a2);
  std::recursive_mutex::unlock((std::recursive_mutex *)(a1 + 520));
  if (v10) {
    cnframework::Supervisor::Start((cnframework::Supervisor *)a1);
  }
  std::mutex::unlock((std::mutex *)(a1 + 752));
}

void sub_18DEE57EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  std::mutex::unlock(v18);
  _Unwind_Resume(a1);
}

uint64_t cnframework::Supervisor::IsRunning(cnframework::Supervisor *this)
{
  double v2 = (std::mutex *)((char *)this + 680);
  std::mutex::lock((std::mutex *)((char *)this + 680));
  uint64_t v3 = *((unsigned __int8 *)this + 672);
  std::mutex::unlock(v2);
  return v3;
}

void cnframework::Supervisor::Pause(cnframework::Supervisor *this)
{
  double v2 = (std::mutex *)((char *)this + 680);
  std::mutex::lock((std::mutex *)((char *)this + 680));
  *((unsigned char *)this + 672) = 0;
  std::mutex::unlock(v2);
  if (cnprint::CNPrinter::GetLogLevel(v3) <= 1)
  {
    __int16 v13 = 3;
    unsigned __int8 v12 = 1;
    (*(void (**)(void **__return_ptr, cnframework::Supervisor *))(*(void *)this + 40))(__p, this);
    if (v11 >= 0) {
      unint64_t v9 = __p;
    }
    else {
      LOBYTE(v9) = __p[0];
    }
    cnprint::CNPrinter::Print((cnprint::CNPrinter *)&v13, &v12, "%s calling Supervisor::Pause", v4, v5, v6, v7, v8, (char)v9);
    if (v11 < 0) {
      operator delete(__p[0]);
    }
  }
}

void sub_18DEE5934(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void cnframework::Supervisor::Start(cnframework::Supervisor *this)
{
  if (*((unsigned char *)this + 816))
  {
    __int16 v24 = 3;
    unsigned __int8 v23 = 4;
    (*(void (**)(void **__return_ptr, cnframework::Supervisor *))(*(void *)this + 40))(__p, this);
    if (v22 >= 0) {
      uint64_t v7 = __p;
    }
    else {
      LOBYTE(v7) = __p[0];
    }
    cnprint::CNPrinter::Print((cnprint::CNPrinter *)&v24, &v23, "%s called Supervisor::Start after Supervisor::TearDown", v2, v3, v4, v5, v6, (char)v7);
LABEL_17:
    if (v22 < 0) {
      operator delete(__p[0]);
    }
    return;
  }
  std::recursive_mutex::lock((std::recursive_mutex *)((char *)this + 520));
  if (*((void *)this + 62) == *((void *)this + 63))
  {
    __int16 v24 = 3;
    unsigned __int8 v23 = 4;
    (*(void (**)(void **__return_ptr, cnframework::Supervisor *))(*(void *)this + 40))(__p, this);
    if (v22 >= 0) {
      __int16 v13 = __p;
    }
    else {
      LOBYTE(v13) = __p[0];
    }
    cnprint::CNPrinter::Print((cnprint::CNPrinter *)&v24, &v23, "%s called Supervisor::Start with no registered active objects", v8, v9, v10, v11, v12, (char)v13);
    if (v22 < 0) {
      operator delete(__p[0]);
    }
  }
  std::recursive_mutex::unlock((std::recursive_mutex *)((char *)this + 520));
  std::mutex::lock((std::mutex *)((char *)this + 680));
  *((unsigned char *)this + 672) = 1;
  std::mutex::unlock((std::mutex *)((char *)this + 680));
  if (cnprint::CNPrinter::GetLogLevel(v14) <= 1)
  {
    __int16 v24 = 3;
    unsigned __int8 v23 = 1;
    (*(void (**)(void **__return_ptr, cnframework::Supervisor *))(*(void *)this + 40))(__p, this);
    if (v22 >= 0) {
      uint64_t v20 = __p;
    }
    else {
      LOBYTE(v20) = __p[0];
    }
    cnprint::CNPrinter::Print((cnprint::CNPrinter *)&v24, &v23, "%s calling Supervisor::Start", v15, v16, v17, v18, v19, (char)v20);
    goto LABEL_17;
  }
}

void sub_18DEE5B28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  std::recursive_mutex::unlock(v16);
  _Unwind_Resume(a1);
}

uint64_t cnframework::Supervisor::Initialize(cnframework::Supervisor *this)
{
  return 1;
}

void cnframework::Supervisor::Reset(cnframework::Supervisor *this)
{
  if (cnprint::CNPrinter::GetLogLevel(this) <= 1)
  {
    __int16 v36 = 3;
    unsigned __int8 v35 = 1;
    (*(void (**)(void **__return_ptr, cnframework::Supervisor *))(*(void *)this + 40))(__p, this);
    if (v34 >= 0) {
      uint64_t v7 = __p;
    }
    else {
      LOBYTE(v7) = __p[0];
    }
    cnprint::CNPrinter::Print((cnprint::CNPrinter *)&v36, &v35, "%s calling Supervisor::Reset", v2, v3, v4, v5, v6, (char)v7);
    if (v34 < 0) {
      operator delete(__p[0]);
    }
  }
  std::mutex::lock((std::mutex *)((char *)this + 680));
  int v8 = *((unsigned __int8 *)this + 672);
  std::mutex::unlock((std::mutex *)((char *)this + 680));
  if (v8) {
    cnframework::Supervisor::Pause(this);
  }
  unsigned __int8 v35 = 0;
  if (*((unsigned char *)this + 8) || (int v16 = atomic_load((unsigned __int8 *)this + 744), v35 = v16, !v16))
  {
    char v15 = 1;
  }
  else
  {
    LOBYTE(__p[0]) = 0;
    cnframework::Supervisor::SetThreadingModel((uint64_t)this, (unsigned __int8 *)__p, v9, v10, v11, v12, v13, v14);
    char v15 = 0;
  }
  std::mutex::lock((std::mutex *)((char *)this + 608));
  *((unsigned char *)this + 584) = 0;
  *((void *)this + 74) = 0;
  *((void *)this + 75) = 0x7FF8000000000000;
  std::mutex::unlock((std::mutex *)((char *)this + 608));
  std::recursive_mutex::lock((std::recursive_mutex *)((char *)this + 520));
  uint64_t v17 = *((void *)this + 62);
  uint64_t v18 = *((void *)this + 63);
  while (v17 != v18)
  {
    (*(void (**)(void))(**(void **)v17 + 48))();
    v17 += 8;
  }
  std::recursive_mutex::unlock((std::recursive_mutex *)((char *)this + 520));
  if ((v15 & 1) == 0) {
    cnframework::Supervisor::SetThreadingModel((uint64_t)this, &v35, v19, v20, v21, v22, v23, v24);
  }
  __int16 v25 = (cnprint::CNPrinter *)(*(uint64_t (**)(cnframework::Supervisor *))(*(void *)this + 128))(this);
  if (v8) {
    cnframework::Supervisor::Start(this);
  }
  if (cnprint::CNPrinter::GetLogLevel(v25) <= 1)
  {
    __int16 v36 = 3;
    unsigned __int8 v32 = 1;
    (*(void (**)(void **__return_ptr, cnframework::Supervisor *))(*(void *)this + 40))(__p, this);
    if (v34 >= 0) {
      uint64_t v31 = __p;
    }
    else {
      LOBYTE(v31) = __p[0];
    }
    cnprint::CNPrinter::Print((cnprint::CNPrinter *)&v36, &v32, "%s Supervisor::Reset completed", v26, v27, v28, v29, v30, (char)v31);
    if (v34 < 0) {
      operator delete(__p[0]);
    }
  }
}

void sub_18DEE5DE0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void cnframework::Supervisor::TearDown(cnframework::Supervisor *this)
{
  __int16 v24 = 3;
  unsigned __int8 v23 = 2;
  (*(void (**)(void **__return_ptr))(*(void *)this + 40))(__p);
  if (v22 >= 0) {
    uint64_t v7 = __p;
  }
  else {
    LOBYTE(v7) = __p[0];
  }
  cnprint::CNPrinter::Print((cnprint::CNPrinter *)&v24, &v23, "%s calling Supervisor::TearDown", v2, v3, v4, v5, v6, (char)v7);
  if (v22 < 0) {
    operator delete(__p[0]);
  }
  cnframework::Supervisor::Pause(this);
  LOBYTE(__p[0]) = 0;
  cnframework::Supervisor::SetThreadingModel((uint64_t)this, (unsigned __int8 *)__p, v8, v9, v10, v11, v12, v13);
  *((unsigned char *)this + 816) = 1;
  if (cnprint::CNPrinter::GetLogLevel(v14) <= 1)
  {
    __int16 v24 = 3;
    unsigned __int8 v23 = 1;
    (*(void (**)(void **__return_ptr, cnframework::Supervisor *))(*(void *)this + 40))(__p, this);
    if (v22 >= 0) {
      uint64_t v20 = __p;
    }
    else {
      LOBYTE(v20) = __p[0];
    }
    cnprint::CNPrinter::Print((cnprint::CNPrinter *)&v24, &v23, "%s torn down successfully", v15, v16, v17, v18, v19, (char)v20);
    if (v22 < 0) {
      operator delete(__p[0]);
    }
  }
}

void sub_18DEE5F54(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t cnframework::Supervisor::ExternalEventInputActiveObjectReference(cnframework::Supervisor *this)
{
  return (uint64_t)this + 16;
}

void cnframework::Supervisor::RegisterActiveObject(cnframework::ActiveObjectBase ***this, cnframework::ActiveObjectBase *a2)
{
  if (*((unsigned char *)this + 816))
  {
    LOWORD(v32[0]) = 3;
    LOBYTE(v35) = 4;
    ((void (*)(void **__return_ptr, cnframework::ActiveObjectBase ***, cnframework::ActiveObjectBase *))(*this)[5])(__p, this, a2);
    if (v37 >= 0) {
      uint64_t v8 = __p;
    }
    else {
      LOBYTE(v8) = __p[0];
    }
    cnprint::CNPrinter::Print((cnprint::CNPrinter *)v32, (unsigned __int8 *)&v35, "%s called Supervisor::RegisterActiveObject after Supervisor::TearDown", v3, v4, v5, v6, v7, (char)v8);
    if (v37 < 0) {
      operator delete(__p[0]);
    }
  }
  else
  {
    uint64_t v10 = (std::recursive_mutex *)(this + 65);
    std::recursive_mutex::lock((std::recursive_mutex *)(this + 65));
    for (uint64_t i = this[62]; i != this[63]; ++i)
    {
      if (*i == a2)
      {
        __int16 v35 = 3;
        unsigned __int8 v34 = 4;
        ((void (*)(void **__return_ptr, cnframework::ActiveObjectBase ***))(*this)[5])(__p, this);
        int v13 = v37;
        char v14 = (char)__p[0];
        (*(void (**)(void **__return_ptr, cnframework::ActiveObjectBase *))(*(void *)a2 + 16))(v32, a2);
        uint64_t v20 = __p;
        if (v13 < 0) {
          LOBYTE(v20) = v14;
        }
        cnprint::CNPrinter::Print((cnprint::CNPrinter *)&v35, &v34, "%s called Supervisor::RegisterActiveObject twice on %s.", v15, v16, v17, v18, v19, (char)v20);
        if (v33 < 0) {
          operator delete(v32[0]);
        }
        if (v37 < 0) {
          operator delete(__p[0]);
        }
        goto LABEL_38;
      }
    }
    cnframework::ActiveObjectBase::SetEventDistributor(a2, (uint64_t)this);
    if (*((unsigned char *)this + 8)) {
      unsigned __int8 v12 = 0;
    }
    else {
      unsigned __int8 v12 = atomic_load((unsigned __int8 *)this + 744);
    }
    LOBYTE(__p[0]) = v12;
    cnframework::ActiveObjectBase::SetThreadingModel((uint64_t)a2, __p);
    char v22 = this[63];
    unint64_t v21 = (unint64_t)this[64];
    if ((unint64_t)v22 >= v21)
    {
      __int16 v24 = this[62];
      uint64_t v25 = v22 - v24;
      unint64_t v26 = v25 + 1;
      if ((unint64_t)(v25 + 1) >> 61) {
        sub_18DEE1FC8();
      }
      uint64_t v27 = v21 - (void)v24;
      if (v27 >> 2 > v26) {
        unint64_t v26 = v27 >> 2;
      }
      if ((unint64_t)v27 >= 0x7FFFFFFFFFFFFFF8) {
        unint64_t v28 = 0x1FFFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v28 = v26;
      }
      if (v28)
      {
        if (v28 >> 61) {
          sub_18DEDF7D4();
        }
        uint64_t v29 = (char *)operator new(8 * v28);
      }
      else
      {
        uint64_t v29 = 0;
      }
      uint64_t v30 = &v29[8 * v25];
      *(void *)uint64_t v30 = a2;
      unsigned __int8 v23 = (cnframework::ActiveObjectBase **)(v30 + 8);
      if (v22 != v24)
      {
        do
        {
          uint64_t v31 = (uint64_t)*--v22;
          *((void *)v30 - 1) = v31;
          v30 -= 8;
        }
        while (v22 != v24);
        char v22 = this[62];
      }
      this[62] = (cnframework::ActiveObjectBase **)v30;
      this[63] = v23;
      this[64] = (cnframework::ActiveObjectBase **)&v29[8 * v28];
      if (v22) {
        operator delete(v22);
      }
    }
    else
    {
      *char v22 = a2;
      unsigned __int8 v23 = v22 + 1;
    }
    this[63] = v23;
LABEL_38:
    std::recursive_mutex::unlock(v10);
  }
}

void sub_18DEE6238(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  if (a24 < 0) {
    operator delete(a19);
  }
  std::recursive_mutex::unlock(v24);
  _Unwind_Resume(a1);
}

void cnframework::Supervisor::RaiseEvent(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5 = (void *)*a2;
  double v6 = *(double *)(*a2 + 40) + (double)*(uint64_t *)(*a2 + 32);
  double v7 = fabs(v6);
  if ((unint64_t)(*(void *)&v7 - 0x10000000000000) >> 53 < 0x3FF
    || (unint64_t)(*(void *)&v7 - 1) < 0xFFFFFFFFFFFFFLL
    || *(void *)&v6 == 0)
  {
    std::mutex::lock((std::mutex *)(a1 + 680));
    if (*(unsigned char *)(a1 + 672))
    {
      std::mutex::lock((std::mutex *)(a1 + 608));
      if (!*(unsigned char *)(a1 + 584)
        || (*(_OWORD *)std::string __p = *(_OWORD *)(*a2 + 32), sub_18DEE4CB8((double *)(a1 + 592), (double *)__p)))
      {
        *(unsigned char *)(a1 + 584) = 1;
        *(_OWORD *)(a1 + 592) = *(_OWORD *)(*a2 + 32);
      }
      std::mutex::unlock((std::mutex *)(a1 + 608));
      std::recursive_mutex::lock((std::recursive_mutex *)(a1 + 520));
      uint64_t v16 = *(uint64_t **)(a1 + 496);
      for (uint64_t i = *(uint64_t **)(a1 + 504); v16 != i; ++v16)
      {
        uint64_t v18 = *v16;
        uint64_t v19 = (std::__shared_weak_count *)a2[1];
        uint64_t v39 = *a2;
        uint64_t v40 = v19;
        if (v19) {
          atomic_fetch_add_explicit(&v19->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        cnframework::ActiveObjectBase::ReceiveEvent(v18, (uint64_t)&v39, a3, v11, v12, v13, v14, v15);
        if (v40) {
          sub_18DEE4E18(v40);
        }
      }
      std::recursive_mutex::unlock((std::recursive_mutex *)(a1 + 520));
      std::mutex::unlock((std::mutex *)(a1 + 680));
      if (*(unsigned char *)(a1 + 8) || (int v38 = atomic_load((unsigned __int8 *)(a1 + 744))) == 0)
      {
        std::recursive_mutex::lock((std::recursive_mutex *)(a1 + 520));
        do
        {
          uint64_t v29 = *(cnframework::ActiveObjectBase ***)(a1 + 496);
          uint64_t v30 = *(cnframework::ActiveObjectBase ***)(a1 + 504);
          if (v29 == v30) {
            break;
          }
          char v31 = 0;
          do
          {
            if (cnframework::ActiveObjectBase::HandleNextEvent(*v29, v20, v21, v22, v23, v24, v25, v26, v27, v28))char v31 = 1; {
            ++v29;
            }
          }
          while (v29 != v30);
        }
        while ((v31 & 1) != 0);
        std::recursive_mutex::unlock((std::recursive_mutex *)(a1 + 520));
      }
    }
    else
    {
      std::mutex::unlock((std::mutex *)(a1 + 680));
    }
  }
  else
  {
    __int16 v44 = 3;
    unsigned __int8 v43 = 4;
    cnframework::GenericEvent::GetEventName(v5, __p);
    LOBYTE(v37) = __p[0];
    if (v42 >= 0) {
      char v37 = __p;
    }
    cnprint::CNPrinter::Print((cnprint::CNPrinter *)&v44, &v43, "Supervisor::RaiseEvent() called with event type %s with invalid timestamp %.3lf.", v32, v33, v34, v35, v36, (char)v37);
    if (v42 < 0) {
      operator delete(__p[0]);
    }
  }
}

void sub_18DEE64DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  std::mutex::unlock(v18);
  _Unwind_Resume(a1);
}

void sub_18DEE653C(cnframework::ActiveObjectBase *a1)
{
  cnframework::ActiveObjectBase::~ActiveObjectBase(a1);

  JUMPOUT(0x192FA6240);
}

void *sub_18DEE6574@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "ExternalEventInputActiveObject");
}

uint64_t cnframework::EventSubscription::EventSubscription(uint64_t this)
{
  *(unsigned char *)this = 1;
  *(void *)(this + 8) = MEMORY[0x1E4FBA3D8];
  *(unsigned char *)(this + 16) = 1;
  *(void *)(this + 24) = 0;
  return this;
}

{
  *(unsigned char *)this = 1;
  *(void *)(this + 8) = MEMORY[0x1E4FBA3D8];
  *(unsigned char *)(this + 16) = 1;
  *(void *)(this + 24) = 0;
  return this;
}

uint64_t cnframework::EventSubscription::EventSubscription(uint64_t this, const std::type_info *a2, const cnframework::ActiveObjectBase *a3)
{
  *(unsigned char *)this = 0;
  *(void *)(this + 8) = a2;
  *(unsigned char *)(this + 16) = 0;
  *(void *)(this + 24) = a3;
  return this;
}

{
  *(unsigned char *)this = 0;
  *(void *)(this + 8) = a2;
  *(unsigned char *)(this + 16) = 0;
  *(void *)(this + 24) = a3;
  return this;
}

uint64_t cnframework::EventSubscription::EventSubscription(uint64_t this, const std::type_info *a2)
{
  *(unsigned char *)this = 0;
  *(void *)(this + 8) = a2;
  *(unsigned char *)(this + 16) = 1;
  *(void *)(this + 24) = 0;
  return this;
}

{
  *(unsigned char *)this = 0;
  *(void *)(this + 8) = a2;
  *(unsigned char *)(this + 16) = 1;
  *(void *)(this + 24) = 0;
  return this;
}

uint64_t cnframework::EventSubscription::EventSubscription(uint64_t this, const cnframework::ActiveObjectBase *a2)
{
  *(unsigned char *)this = 1;
  *(void *)(this + 8) = MEMORY[0x1E4FBA3D8];
  *(unsigned char *)(this + 16) = 0;
  *(void *)(this + 24) = a2;
  return this;
}

{
  *(unsigned char *)this = 1;
  *(void *)(this + 8) = MEMORY[0x1E4FBA3D8];
  *(unsigned char *)(this + 16) = 0;
  *(void *)(this + 24) = a2;
  return this;
}

BOOL cnframework::EventSubscription::operator==(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  BOOL result = sub_18DEE4C68(*((void *)a1 + 1), *((void *)a2 + 1));
  if (!result) {
    return result;
  }
  return a1[16] == a2[16] && *((void *)a1 + 3) == *((void *)a2 + 3);
}

uint64_t cnlogging::details::ByteUnstuffer::readAndUnstuff(uint64_t **this, uint64_t *a2, void *a3, uint64_t *a4)
{
  a2[1] = *a2;
  unsigned __int8 v57 = 0;
  while (1)
  {
    uint64_t result = cnlogging::details::ByteUnstuffer::readAndUnstuffU8(this, &v57);
    if (!result) {
      return result;
    }
    uint64_t v9 = (unsigned __int8 *)a2[1];
    unint64_t v8 = a2[2];
    if ((unint64_t)v9 >= v8)
    {
      uint64_t v12 = *a2;
      uint64_t v13 = &v9[-*a2];
      unint64_t v14 = (unint64_t)(v13 + 1);
      if ((uint64_t)(v13 + 1) < 0) {
LABEL_72:
      }
        sub_18DEE1FC8();
      unint64_t v15 = v8 - v12;
      if (2 * v15 > v14) {
        unint64_t v14 = 2 * v15;
      }
      if (v15 >= 0x3FFFFFFFFFFFFFFFLL) {
        size_t v16 = 0x7FFFFFFFFFFFFFFFLL;
      }
      else {
        size_t v16 = v14;
      }
      if (v16) {
        uint64_t result = (uint64_t)operator new(v16);
      }
      else {
        uint64_t result = 0;
      }
      uint64_t v17 = (uint64_t)&v13[result];
      v13[result] = v57;
      uint64_t v11 = (uint64_t)&v13[result + 1];
      if (v9 != (unsigned __int8 *)v12)
      {
        uint64_t v18 = &v9[~v12];
        do
        {
          unsigned __int8 v19 = *--v9;
          (v18--)[result] = v19;
        }
        while (v9 != (unsigned __int8 *)v12);
        uint64_t v9 = (unsigned __int8 *)*a2;
        uint64_t v17 = result;
      }
      *a2 = v17;
      a2[1] = v11;
      a2[2] = result + v16;
      if (v9) {
        operator delete(v9);
      }
      unsigned __int8 v10 = v57;
    }
    else
    {
      unsigned __int8 v10 = v57;
      *uint64_t v9 = v57;
      uint64_t v11 = (uint64_t)(v9 + 1);
    }
    a2[1] = v11;
    if ((v10 & 0x80) == 0)
    {
      *a4 = 0;
      uint64_t result = cnlogging::details::ByteUnstuffer::decodeLength(result, a2, 0, a4);
      if (result)
      {
        uint64_t v20 = (unsigned char *)a2[1];
        *a3 = &v20[-*a2];
        if (*a4)
        {
          uint64_t v21 = 0;
          while (1)
          {
            uint64_t result = cnlogging::details::ByteUnstuffer::readAndUnstuffU8(this, &v57);
            if (!result) {
              break;
            }
            uint64_t v23 = (unsigned __int8 *)a2[1];
            unint64_t v22 = a2[2];
            if ((unint64_t)v23 >= v22)
            {
              uint64_t v24 = *a2;
              uint64_t v25 = &v23[-*a2];
              unint64_t v26 = (unint64_t)(v25 + 1);
              if ((uint64_t)(v25 + 1) < 0) {
                goto LABEL_72;
              }
              unint64_t v27 = v22 - v24;
              if (2 * v27 > v26) {
                unint64_t v26 = 2 * v27;
              }
              if (v27 >= 0x3FFFFFFFFFFFFFFFLL) {
                size_t v28 = 0x7FFFFFFFFFFFFFFFLL;
              }
              else {
                size_t v28 = v26;
              }
              if (v28) {
                uint64_t v29 = (char *)operator new(v28);
              }
              else {
                uint64_t v29 = 0;
              }
              uint64_t v30 = (char *)&v25[(void)v29];
              char v31 = &v25[(void)v29];
              *char v31 = v57;
              uint64_t v20 = v31 + 1;
              if (v23 != (unsigned __int8 *)v24)
              {
                uint64_t v32 = &v23[~v24];
                do
                {
                  unsigned __int8 v33 = *--v23;
                  (v32--)[(void)v29] = v33;
                }
                while (v23 != (unsigned __int8 *)v24);
                uint64_t v23 = (unsigned __int8 *)*a2;
                uint64_t v30 = v29;
              }
              *a2 = (uint64_t)v30;
              a2[1] = (uint64_t)v20;
              a2[2] = (uint64_t)&v29[v28];
              if (v23) {
                operator delete(v23);
              }
            }
            else
            {
              *uint64_t v23 = v57;
              uint64_t v20 = v23 + 1;
            }
            a2[1] = (uint64_t)v20;
            if (++v21 >= (unint64_t)*a4) {
              goto LABEL_44;
            }
          }
        }
        else
        {
LABEL_44:
          uint64_t v34 = 0;
          uint64_t v54 = (uint64_t)&v20[-*a2];
          while (1)
          {
            uint64_t result = cnlogging::details::ByteUnstuffer::readAndUnstuffU8(this, &v57);
            if (!result) {
              break;
            }
            uint64_t v36 = (unsigned __int8 *)a2[1];
            unint64_t v35 = a2[2];
            if ((unint64_t)v36 >= v35)
            {
              uint64_t v38 = *a2;
              uint64_t v39 = &v36[-*a2];
              unint64_t v40 = (unint64_t)(v39 + 1);
              if ((uint64_t)(v39 + 1) < 0) {
                goto LABEL_72;
              }
              unint64_t v41 = v35 - v38;
              if (2 * v41 > v40) {
                unint64_t v40 = 2 * v41;
              }
              if (v41 >= 0x3FFFFFFFFFFFFFFFLL) {
                size_t v42 = 0x7FFFFFFFFFFFFFFFLL;
              }
              else {
                size_t v42 = v40;
              }
              if (v42) {
                uint64_t result = (uint64_t)operator new(v42);
              }
              else {
                uint64_t result = 0;
              }
              uint64_t v43 = (uint64_t)&v39[result];
              __int16 v44 = &v39[result];
              unsigned __int8 *v44 = v57;
              char v37 = v44 + 1;
              if (v36 != (unsigned __int8 *)v38)
              {
                uint64_t v45 = &v36[~v38];
                do
                {
                  unsigned __int8 v46 = *--v36;
                  (v45--)[result] = v46;
                }
                while (v36 != (unsigned __int8 *)v38);
                uint64_t v36 = (unsigned __int8 *)*a2;
                uint64_t v43 = result;
              }
              *a2 = v43;
              a2[1] = (uint64_t)v37;
              a2[2] = result + v42;
              if (v36) {
                operator delete(v36);
              }
            }
            else
            {
              *uint64_t v36 = v57;
              char v37 = v36 + 1;
            }
            a2[1] = (uint64_t)v37;
            if (++v34 == 4)
            {
              unsigned int v56 = 0;
              int v47 = cnlogging::details::ByteUnstuffer::decodeChecksum(result, a2, v54, &v56);
              uint64_t result = 0;
              if (v47)
              {
                uint64_t v48 = *a4;
                if (*a4)
                {
                  unsigned int v49 = 0;
                  long long v50 = (unsigned __int8 *)(*a2 + *a3);
                  unsigned int v51 = 1;
                  do
                  {
                    int v52 = *v50++;
                    unsigned int v51 = (v51 + v52) % 0xFFF1;
                    unsigned int v49 = (v51 + v49) % 0xFFF1;
                    --v48;
                  }
                  while (v48);
                  int v53 = v51 | (v49 << 16);
                }
                else
                {
                  int v53 = 1;
                }
                return v53 == v56;
              }
              return result;
            }
          }
        }
      }
      return result;
    }
  }
}

uint64_t cnlogging::details::ByteUnstuffer::readAndUnstuffU8(uint64_t **this, unsigned __int8 *a2)
{
  uint64_t v2 = *this;
  if (*((_DWORD *)*this + 2) == -1) {
    return 0;
  }
  uint64_t v3 = v2[3];
  if (v3 < 0) {
    return 0;
  }
  uint64_t v4 = v2[4];
  if (v3 >= v4) {
    return 0;
  }
  uint64_t v5 = v2[2];
  if (!v5) {
    return 0;
  }
  uint64_t v6 = *v2;
  if (v3 >= *v2) {
    return 0;
  }
  __int16 v7 = *(unsigned __int8 *)(v5 + v3);
  uint64_t v8 = v3 + 1;
  v2[3] = v3 + 1;
  __int16 v9 = v7 | (*((_WORD *)this + 4) << 8);
  *((_WORD *)this + 4) = v9;
  if (v9 == 32381) {
    return 0;
  }
  if (v9 == 32349)
  {
    if (v8 >= v4 || v8 >= v6) {
      return 0;
    }
    __int16 v12 = *(unsigned __int8 *)(v5 + v8);
    v2[3] = v3 + 2;
    *((_WORD *)this + 4) = v12 | (v7 << 8);
    LOBYTE(v7) = v12;
  }
  *a2 = v7;
  return 1;
}

uint64_t cnlogging::details::ByteUnstuffer::decodeLength(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  wireless_diagnostics::google::protobuf::io::ArrayInputStream::ArrayInputStream((wireless_diagnostics::google::protobuf::io::ArrayInputStream *)v19, (const void *)(*a2 + a3));
  unsigned __int8 v10 = v19;
  uint64_t v11 = 0;
  unint64_t v12 = 0;
  v13[0] = 0;
  *(void *)((char *)v13 + 6) = 0;
  long long v14 = xmmword_18E1EF780;
  int v5 = *MEMORY[0x1E4FBA918];
  int v15 = 0;
  int v16 = v5;
  uint64_t v17 = 0;
  uint64_t v18 = 0;
  wireless_diagnostics::google::protobuf::io::CodedInputStream::Refresh((wireless_diagnostics::google::protobuf::io::CodedInputStream *)&v10);
  unsigned int v9 = 0;
  if ((unint64_t)v11 >= v12 || (char)*v11 < 0)
  {
    if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback((wireless_diagnostics::google::protobuf::io::CodedInputStream *)&v10, &v9))
    {
      uint64_t v7 = 0;
      goto LABEL_7;
    }
    unsigned int v6 = v9;
  }
  else
  {
    unsigned int v6 = *v11++;
  }
  *a4 = v6;
  uint64_t v7 = 1;
LABEL_7:
  MEMORY[0x192FA5890](&v10);
  MEMORY[0x192FA57F0](v19);
  return v7;
}

uint64_t cnlogging::details::ByteUnstuffer::decodeChecksum(uint64_t a1, void *a2, uint64_t a3, unsigned int *a4)
{
  wireless_diagnostics::google::protobuf::io::ArrayInputStream::ArrayInputStream((wireless_diagnostics::google::protobuf::io::ArrayInputStream *)v15, (const void *)(*a2 + a3));
  v8[0] = v15;
  v8[1] = 0;
  v8[2] = 0;
  v9[0] = 0;
  *(void *)((char *)v9 + 6) = 0;
  long long v10 = xmmword_18E1EF780;
  int v5 = *MEMORY[0x1E4FBA918];
  int v11 = 0;
  int v12 = v5;
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  wireless_diagnostics::google::protobuf::io::CodedInputStream::Refresh((wireless_diagnostics::google::protobuf::io::CodedInputStream *)v8);
  uint64_t LittleEndian32Fallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback((wireless_diagnostics::google::protobuf::io::CodedInputStream *)v8, a4);
  MEMORY[0x192FA5890](v8);
  MEMORY[0x192FA57F0](v15);
  return LittleEndian32Fallback;
}

uint64_t cnlogging::details::InputStreamSync::sync(uint64_t *a1, unsigned int a2, uint64_t *a3)
{
  uint64_t v3 = *a3;
  if ((*a3 & 0x8000000000000000) == 0 && v3 <= *(void *)(*a1 + 32))
  {
    *(void *)(*a1 + 24) = v3;
    while (1)
    {
      uint64_t v13 = 0;
      if ((cnlogging::details::InputStreamSync::findNextSentinelAndGetVersionByteIdx(a1, a2, &v13) & 1) == 0) {
        break;
      }
      uint64_t v7 = *a1;
      int64_t v8 = v13;
      *(void *)(v7 + 24) = v13;
      if (*(_DWORD *)(v7 + 8) == -1) {
        break;
      }
      if (v8 < 0) {
        break;
      }
      if (v8 >= *(void *)(v7 + 32)) {
        break;
      }
      uint64_t v9 = *(void *)(v7 + 16);
      if (!v9 || v8 >= *(void *)v7) {
        break;
      }
      int v10 = *(unsigned __int8 *)(v9 + v8);
      *(void *)(v7 + 24) = v8 + 1;
      if (v10 == 1)
      {
        BOOL v11 = (unint64_t)v8 >= 2;
        int64_t v12 = v8 - 2;
        if (!v11) {
          return 0;
        }
        a1[1] = v12;
        return 1;
      }
    }
  }
  return 0;
}

uint64_t cnlogging::details::InputStreamSync::findNextSentinelAndGetVersionByteIdx(uint64_t *a1, unsigned int a2, uint64_t *a3)
{
  unsigned __int8 v21 = 0;
  uint64_t v6 = *a1;
  uint64_t v7 = *(void *)(v6 + 24);
  if (a2 != 1 || (uint64_t v8 = *(void *)(v6 + 32), v8 - v7 < 3))
  {
    char v15 = 0;
    uint64_t v12 = 0;
    if (v7 < 0) {
      return v12;
    }
    goto LABEL_13;
  }
  if (*(_DWORD *)(v6 + 8) == -1) {
    return 0;
  }
  __int16 v9 = 0;
  char v10 = 1;
  uint64_t v11 = *(void *)(v6 + 24);
  do
  {
    uint64_t v12 = 0;
    if (v7 < 0) {
      return v12;
    }
    if (v11 >= v8) {
      return v12;
    }
    uint64_t v12 = *(void *)(v6 + 16);
    if (!v12) {
      return v12;
    }
    char v13 = v10;
    if (v11 >= *(void *)v6) {
      return 0;
    }
    char v10 = 0;
    __int16 v14 = *(unsigned __int8 *)(v12 + v11++);
    *(void *)(v6 + 24) = v11;
    __int16 v9 = v14 | (v9 << 8);
  }
  while ((v13 & 1) != 0);
  unsigned __int8 v21 = v14;
  if (v9 == 32381)
  {
    *a3 = v7 + 2;
    char v15 = 1;
LABEL_13:
    if (v7 > *(void *)(v6 + 32)) {
      return 0;
    }
    *(void *)(v6 + 24) = v7;
    if (v15) {
      return 1;
    }
    goto LABEL_16;
  }
  if (v7 > *(void *)(v6 + 32)) {
    return 0;
  }
  *(void *)(v6 + 24) = v7;
LABEL_16:
  int v16 = cnlogging::details::ByteReader::readNextByte(v6, a2, &v21);
  uint64_t v12 = 0;
  if (!v16 || a2 > 1) {
    return v12;
  }
  int v17 = 0;
  while (a2)
  {
    HIDWORD(v18) = v21;
    LODWORD(v18) = v17 << 16;
    int v17 = v18 >> 24;
    if ((unsigned __int16)(v18 >> 24) == 32381)
    {
      uint64_t v19 = *(void *)(*a1 + 24) + 3;
      goto LABEL_28;
    }
LABEL_23:
    if ((cnlogging::details::ByteReader::readNextByte(*a1, a2, &v21) & 1) == 0) {
      return 0;
    }
  }
  int v17 = v21 | (v17 << 8);
  if ((unsigned __int16)v17 != 32381) {
    goto LABEL_23;
  }
  uint64_t v19 = *(void *)(*a1 + 24);
LABEL_28:
  *a3 = v19;
  return 1;
}

BOOL cnlogging::details::InputStreamSync::isSynced(cnlogging::details::InputStreamSync *this)
{
  uint64_t v1 = *((void *)this + 1);
  return v1 != -1 && *(void *)(*(void *)this + 24) == v1 + 3;
}

BOOL cnlogging::details::InputStreamSync::getSyncIdx(cnlogging::details::InputStreamSync *this, uint64_t *a2)
{
  uint64_t v2 = *((void *)this + 1);
  if (v2 != -1) {
    *a2 = v2;
  }
  return v2 != -1;
}

uint64_t cnlogging::ProtobufInputStream::ProtobufInputStream(uint64_t a1, const std::string *a2)
{
  *(void *)a1 = 0;
  *(_DWORD *)(a1 + 8) = -1;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = a1;
  *(void *)(a1 + 48) = -1;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  cnlogging::ProtobufInputStream::open((cnlogging::details::MmapWrapper *)a1, a2);
  return a1;
}

void sub_18DEE7008(_Unwind_Exception *a1)
{
  if (*(char *)(v1 + 103) < 0) {
    operator delete(*(void **)(v1 + 80));
  }
  uint64_t v4 = *v2;
  if (*v2)
  {
    *(void *)(v1 + 64) = v4;
    operator delete(v4);
  }
  cnlogging::details::ByteReader::~ByteReader((cnlogging::details::ByteReader *)v1);
  _Unwind_Resume(a1);
}

uint64_t cnlogging::ProtobufInputStream::open(cnlogging::details::MmapWrapper *this, const std::string *a2)
{
  if (*((_DWORD *)this + 2) != -1) {
    cnlogging::details::MmapWrapper::close(this);
  }
  *((void *)this + 3) = 0;
  *((void *)this + 4) = 0;
  uint64_t v4 = cnlogging::details::ByteReader::open(this, (uint64_t)a2);
  if (v4)
  {
    std::string::operator=((std::string *)((char *)this + 80), a2);
    *((void *)this + 13) = 0;
    *((void *)this + 14) = 0;
    *((void *)this + 6) = -1;
  }
  else if (*((char *)this + 103) < 0)
  {
    **((unsigned char **)this + 10) = 0;
    *((void *)this + 11) = 0;
  }
  else
  {
    *((unsigned char *)this + 80) = 0;
    *((unsigned char *)this + 103) = 0;
  }
  return v4;
}

void cnlogging::ProtobufInputStream::~ProtobufInputStream(void **this)
{
  cnlogging::ProtobufInputStream::close(this);
  if (*((char *)this + 103) < 0) {
    operator delete(this[10]);
  }
  uint64_t v2 = this[7];
  if (v2)
  {
    this[8] = v2;
    operator delete(v2);
  }

  cnlogging::details::ByteReader::~ByteReader((cnlogging::details::ByteReader *)this);
}

_DWORD *cnlogging::ProtobufInputStream::close(_DWORD *this)
{
  uint64_t v1 = this;
  if (this[2] != -1) {
    this = (_DWORD *)cnlogging::details::MmapWrapper::close((cnlogging::details::MmapWrapper *)this);
  }
  *((void *)v1 + 3) = 0;
  *((void *)v1 + 4) = 0;
  if (*((char *)v1 + 103) < 0)
  {
    **((unsigned char **)v1 + 10) = 0;
    *((void *)v1 + 11) = 0;
  }
  else
  {
    *((unsigned char *)v1 + 80) = 0;
    *((unsigned char *)v1 + 103) = 0;
  }
  *((void *)v1 + 13) = 0;
  *((void *)v1 + 14) = 0;
  *((void *)v1 + 6) = -1;
  return this;
}

uint64_t cnlogging::ProtobufInputStream::readNextProtobuf(cnlogging::ProtobufInputStream *this, wireless_diagnostics::google::protobuf::MessageLite *a2)
{
  if (*((_DWORD *)this + 2) == -1) {
    return 0;
  }
  uint64_t v8 = *((void *)this + 14);
  uint64_t v4 = (uint64_t *)((char *)this + 40);
  uint64_t ProtobufAtCurrentIdxNoSync = 0;
  if (cnlogging::details::InputStreamSync::sync((uint64_t *)this + 5, 0, &v8))
  {
    do
    {
      uint64_t ProtobufAtCurrentIdxNoSync = cnlogging::ProtobufInputStream::readProtobufAtCurrentIdxNoSync(this, a2);
      if (ProtobufAtCurrentIdxNoSync) {
        break;
      }
      uint64_t v6 = *((void *)this + 6);
      if (v6 == -1) {
        break;
      }
      uint64_t v8 = v6 + 1;
    }
    while ((cnlogging::details::InputStreamSync::sync(v4, 0, &v8) & 1) != 0);
  }
  return ProtobufAtCurrentIdxNoSync;
}

uint64_t cnlogging::ProtobufInputStream::readProtobufAtCurrentIdxNoSync(cnlogging::ProtobufInputStream *this, wireless_diagnostics::google::protobuf::MessageLite *a2)
{
  *(void *)uint64_t v11 = 0;
  uint64_t v12 = 0;
  __int16 v9 = (uint64_t *)this;
  __int16 v10 = 0;
  uint64_t v4 = (void *)((char *)this + 56);
  int v5 = cnlogging::details::ByteUnstuffer::readAndUnstuff(&v9, (uint64_t *)this + 7, &v12, (uint64_t *)v11);
  uint64_t result = 0;
  if (v5)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::MessageLite::ParseFromArray(a2, (const void *)(*v4 + v12));
    if (result)
    {
      uint64_t v7 = *((void *)this + 6);
      if (v7 == -1)
      {
        return 0;
      }
      else
      {
        uint64_t v8 = *((void *)this + 3);
        *((void *)this + 13) = v7;
        *((void *)this + 14) = v8;
        return 1;
      }
    }
  }
  return result;
}

uint64_t cnlogging::ProtobufInputStream::readPrevProtobuf(cnlogging::ProtobufInputStream *this, wireless_diagnostics::google::protobuf::MessageLite *a2)
{
  if (*((_DWORD *)this + 2) == -1) {
    return 0;
  }
  uint64_t v3 = *((void *)this + 13);
  BOOL v4 = v3 < 1;
  uint64_t v5 = v3 - 1;
  if (v4) {
    return 0;
  }
  uint64_t v9 = v5;
  if (!cnlogging::details::InputStreamSync::sync((uint64_t *)this + 5, 1u, &v9)) {
    return 0;
  }
  while (1)
  {
    uint64_t result = cnlogging::ProtobufInputStream::readProtobufAtCurrentIdxNoSync(this, a2);
    if (result) {
      break;
    }
    uint64_t v8 = *((void *)this + 6);
    if (v8 == -1) {
      break;
    }
    uint64_t v9 = v8 - 1;
    if ((cnlogging::details::InputStreamSync::sync((uint64_t *)this + 5, 1u, &v9) & 1) == 0) {
      return 0;
    }
  }
  return result;
}

uint64_t cnlogging::ProtobufInputStream::readFirstProtobuf(cnlogging::ProtobufInputStream *this, wireless_diagnostics::google::protobuf::MessageLite *a2)
{
  if (*((_DWORD *)this + 2) != -1 && (*((void *)this + 4) & 0x8000000000000000) == 0)
  {
    *((void *)this + 3) = 0;
    *((void *)this + 13) = 0;
    *((void *)this + 14) = 0;
  }
  return cnlogging::ProtobufInputStream::readNextProtobuf(this, a2);
}

uint64_t cnlogging::ProtobufInputStream::readLastProtobuf(cnlogging::ProtobufInputStream *this, wireless_diagnostics::google::protobuf::MessageLite *a2)
{
  if (*((_DWORD *)this + 2) != -1)
  {
    uint64_t v2 = *((void *)this + 4);
    if ((v2 & 0x8000000000000000) == 0)
    {
      *((void *)this + 3) = v2;
      *((void *)this + 13) = v2;
      *((void *)this + 14) = v2;
    }
  }
  return cnlogging::ProtobufInputStream::readPrevProtobuf(this, a2);
}

uint64_t cnlogging::ProtobufInputStream::readProtobufContainingIdx(cnlogging::ProtobufInputStream *this, uint64_t *a2, wireless_diagnostics::google::protobuf::MessageLite *a3)
{
  if (*((_DWORD *)this + 2) == -1
    || !cnlogging::details::InputStreamSync::sync((uint64_t *)this + 5, 1u, a2))
  {
    return 0;
  }

  return cnlogging::ProtobufInputStream::readProtobufAtCurrentIdxNoSync(this, a3);
}

uint64_t cnlogging::ProtobufInputStream::reset(cnlogging::ProtobufInputStream *this)
{
  *((void *)this + 13) = 0;
  *((void *)this + 14) = 0;
  return cnlogging::ProtobufInputStream::open(this, (const std::string *)((char *)this + 80));
}

uint64_t cnlogging::details::CNProtobufStreamChecksum::fletcher16(void *a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    unsigned int v3 = 0;
    unsigned int v4 = 0;
    uint64_t v5 = (unsigned __int8 *)(*a1 + a2);
    do
    {
      int v6 = *v5++;
      unsigned int v4 = (v4 + v6) % 0xFF;
      unsigned int v3 = (v4 + v3) % 0xFF;
      --a3;
    }
    while (a3);
    return (unsigned __int16)(v4 | ((_WORD)v3 << 8));
  }
  else
  {
    return 0;
  }
}

uint64_t cnlogging::details::ByteReader::ByteReader(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = 0;
  *(_DWORD *)(a1 + 8) = -1;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 16) = 0;
  cnlogging::details::ByteReader::open((cnlogging::details::MmapWrapper *)a1, a2);
  return a1;
}

void sub_18DEE74E4(_Unwind_Exception *a1)
{
  cnlogging::details::MmapWrapper::close(v1);
  _Unwind_Resume(a1);
}

uint64_t cnlogging::details::ByteReader::open(cnlogging::details::MmapWrapper *this, uint64_t a2)
{
  if (*((_DWORD *)this + 2) != -1)
  {
    cnlogging::details::MmapWrapper::close(this);
    *((void *)this + 3) = 0;
    *((void *)this + 4) = 0;
  }
  uint64_t result = cnlogging::details::MmapWrapper::open((uint64_t)this, a2);
  if (result)
  {
    uint64_t v5 = *(void *)this;
    *((void *)this + 3) = 0;
    *((void *)this + 4) = v5;
  }
  return result;
}

void cnlogging::details::ByteReader::~ByteReader(cnlogging::details::ByteReader *this)
{
  if (*((_DWORD *)this + 2) != -1) {
    cnlogging::details::MmapWrapper::close(this);
  }
  *((void *)this + 3) = 0;
  *((void *)this + 4) = 0;
  cnlogging::details::MmapWrapper::close(this);
}

_DWORD *cnlogging::details::ByteReader::close(_DWORD *this)
{
  uint64_t v1 = this;
  if (this[2] != -1) {
    this = (_DWORD *)cnlogging::details::MmapWrapper::close((cnlogging::details::MmapWrapper *)this);
  }
  *((void *)v1 + 3) = 0;
  *((void *)v1 + 4) = 0;
  return this;
}

uint64_t cnlogging::details::ByteReader::computeFileSize(cnlogging::details::ByteReader *this)
{
  *((void *)this + 4) = *(void *)this;
  return 1;
}

BOOL cnlogging::details::ByteReader::isOpen(cnlogging::details::ByteReader *this)
{
  return *((_DWORD *)this + 2) != -1;
}

uint64_t cnlogging::details::ByteReader::setReadIdx(cnlogging::details::ByteReader *this, const uint64_t *a2)
{
  uint64_t v2 = *a2;
  if (*a2 < 0 || v2 > *((void *)this + 4)) {
    return 0;
  }
  *((void *)this + 3) = v2;
  return 1;
}

uint64_t cnlogging::details::ByteReader::readNextByte(uint64_t a1, int a2, unsigned char *a3)
{
  if (*(_DWORD *)(a1 + 8) == -1) {
    return 0;
  }
  uint64_t v3 = *(void *)(a1 + 24);
  if (v3 < 0) {
    return 0;
  }
  if (v3 >= *(void *)(a1 + 32)) {
    return 0;
  }
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4 || v3 >= *(void *)a1) {
    return 0;
  }
  char v5 = *(unsigned char *)(v4 + v3);
  if (!a2)
  {
    uint64_t v6 = 1;
    goto LABEL_11;
  }
  if (a2 != 1) {
    return 0;
  }
  uint64_t v6 = -1;
LABEL_11:
  *(void *)(a1 + 24) = v6 + v3;
  *a3 = v5;
  return 1;
}

uint64_t cnlogging::details::ByteReader::readByteAtIdx(uint64_t a1, int a2, void *a3, unsigned char *a4)
{
  *(void *)(a1 + 24) = *a3;
  return cnlogging::details::ByteReader::readNextByte(a1, a2, a4);
}

uint64_t cnlogging::details::MmapWrapper::MmapWrapper(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = 0;
  *(_DWORD *)(a1 + 8) = -1;
  *(void *)(a1 + 16) = 0;
  cnlogging::details::MmapWrapper::open(a1, a2);
  return a1;
}

{
  *(void *)a1 = 0;
  *(_DWORD *)(a1 + 8) = -1;
  *(void *)(a1 + 16) = 0;
  cnlogging::details::MmapWrapper::open(a1, a2);
  return a1;
}

uint64_t cnlogging::details::MmapWrapper::open(uint64_t a1, uint64_t a2)
{
  cnlogging::details::MmapWrapper::close((cnlogging::details::MmapWrapper *)a1);
  if (*(char *)(a2 + 23) >= 0) {
    uint64_t v4 = (const char *)a2;
  }
  else {
    uint64_t v4 = *(const char **)a2;
  }
  int v5 = open(v4, 0);
  *(_DWORD *)(a1 + 8) = v5;
  if (v5 != -1)
  {
    if (!fstat(v5, &v9))
    {
      st_std::string::size_type size = v9.st_size;
      *(void *)a1 = v9.st_size;
      uint64_t v8 = mmap(0, st_size, 1, 2, *(_DWORD *)(a1 + 8), 0);
      if (v8 != (void *)-1)
      {
        *(void *)(a1 + 16) = v8;
        return 1;
      }
    }
    cnlogging::details::MmapWrapper::close((cnlogging::details::MmapWrapper *)a1);
  }
  return 0;
}

void cnlogging::details::MmapWrapper::~MmapWrapper(cnlogging::details::MmapWrapper *this)
{
}

{
  cnlogging::details::MmapWrapper::close(this);
}

uint64_t cnlogging::details::MmapWrapper::close(cnlogging::details::MmapWrapper *this)
{
  uint64_t v2 = (void *)*((void *)this + 2);
  if (v2) {
    munmap(v2, *(void *)this);
  }
  uint64_t result = *((unsigned int *)this + 2);
  if (result != -1) {
    uint64_t result = close(result);
  }
  *((_DWORD *)this + 2) = -1;
  *(void *)this = 0;
  *((void *)this + 2) = 0;
  return result;
}

uint64_t cnlogging::details::MmapWrapper::readByteAtIdx(cnlogging::details::MmapWrapper *this, const uint64_t *a2, unsigned __int8 *a3)
{
  if (*((_DWORD *)this + 2) == -1) {
    return 0;
  }
  uint64_t v3 = *((void *)this + 2);
  if (!v3) {
    return 0;
  }
  uint64_t v4 = *a2;
  if (*a2 < 0 || v4 >= *(void *)this) {
    return 0;
  }
  *a3 = *(unsigned char *)(v3 + v4);
  return 1;
}

uint64_t cnlogging::ProtobufOutputStream::ProtobufOutputStream(uint64_t a1, const std::string *a2, _DWORD *a3)
{
  uint64_t v6 = MEMORY[0x1E4FBA468] + 64;
  *(void *)(a1 + 416) = MEMORY[0x1E4FBA468] + 64;
  uint64_t v7 = a1 + 8;
  uint64_t v8 = *(void *)(MEMORY[0x1E4FBA400] + 16);
  uint64_t v9 = *(void *)(MEMORY[0x1E4FBA400] + 8);
  *(void *)a1 = v9;
  *(void *)(a1 + *(void *)(v9 - 24)) = v8;
  __int16 v10 = (std::ios_base *)(a1 + *(void *)(*(void *)a1 - 24));
  std::ios_base::init(v10, (void *)(a1 + 8));
  uint64_t v11 = MEMORY[0x1E4FBA468] + 24;
  v10[1].__vftable = 0;
  v10[1].__fmtflags_ = -1;
  *(void *)a1 = v11;
  *(void *)(a1 + 416) = v6;
  MEMORY[0x192FA5D90](v7);
  *(_OWORD *)(a1 + 584) = 0u;
  *(_OWORD *)(a1 + 600) = 0u;
  *(_OWORD *)(a1 + 568) = 0u;
  cnlogging::ProtobufOutputStream::open((cnlogging::ProtobufOutputStream *)a1, a2, a3);
  return a1;
}

void sub_18DEE7A08(_Unwind_Exception *a1)
{
  uint64_t v4 = *(void **)(v1 + 592);
  if (v4)
  {
    *(void *)(v1 + 600) = v4;
    operator delete(v4);
  }
  if (*(char *)(v1 + 591) < 0) {
    operator delete(*v2);
  }
  sub_18DEDE3D8((void *)v1);
  _Unwind_Resume(a1);
}

uint64_t cnlogging::ProtobufOutputStream::open(cnlogging::ProtobufOutputStream *this, const std::string *a2, _DWORD *a3)
{
  if (*((void *)this + 16)) {
    cnlogging::ProtobufOutputStream::close(this);
  }
  if (*((char *)this + 591) < 0)
  {
    **((unsigned char **)this + 71) = 0;
    *((void *)this + 72) = 0;
  }
  else
  {
    *((unsigned char *)this + 568) = 0;
    *((unsigned char *)this + 591) = 0;
  }
  if (*a3 > 1u) {
    return 0;
  }
  std::ofstream::open();
  if ((*((unsigned char *)this + *(void *)(*(void *)this - 24) + 32) & 5) != 0) {
    return 0;
  }
  std::string::operator=((std::string *)((char *)this + 568), a2);
  return 1;
}

void cnlogging::ProtobufOutputStream::~ProtobufOutputStream(void **this)
{
  cnlogging::ProtobufOutputStream::close((cnlogging::ProtobufOutputStream *)this);
  uint64_t v2 = this[74];
  if (v2)
  {
    this[75] = v2;
    operator delete(v2);
  }
  if (*((char *)this + 591) < 0) {
    operator delete(this[71]);
  }
  uint64_t v3 = MEMORY[0x1E4FBA400];
  uint64_t v4 = *MEMORY[0x1E4FBA400];
  *this = (void *)*MEMORY[0x1E4FBA400];
  *(void **)((char *)this + *(void *)(v4 - 24)) = *(void **)(v3 + 24);
  MEMORY[0x192FA5DA0](this + 1);
  std::ostream::~ostream();
  MEMORY[0x192FA6190](this + 52);
}

void cnlogging::ProtobufOutputStream::close(cnlogging::ProtobufOutputStream *this)
{
  if (*((void *)this + 16) && !std::filebuf::close()) {
    std::ios_base::clear((std::ios_base *)((char *)this + *(void *)(*(void *)this - 24)), *(_DWORD *)((char *)this + *(void *)(*(void *)this - 24) + 32) | 4);
  }
  if (*((char *)this + 591) < 0)
  {
    **((unsigned char **)this + 71) = 0;
    *((void *)this + 72) = 0;
  }
  else
  {
    *((unsigned char *)this + 568) = 0;
    *((unsigned char *)this + 591) = 0;
  }
}

uint64_t cnlogging::ProtobufOutputStream::append(cnlogging::ProtobufOutputStream *this, const wireless_diagnostics::google::protobuf::MessageLite *a2)
{
  if (!*((void *)this + 16)) {
    return 0;
  }
  uint64_t result = cnlogging::ProtobufOutputStream::populateBytesToStuff(this, a2);
  if (result)
  {
    uint64_t result = cnlogging::ProtobufOutputStream::writeSentinelAndVersion(this);
    if (result)
    {
      uint64_t v4 = *((void *)this + 74);
      uint64_t v5 = *((void *)this + 75);
      if (v4 == v5)
      {
        return 1;
      }
      else
      {
        BOOL v6 = 0;
        uint64_t v7 = v4 + 1;
        do
        {
          int v8 = *(unsigned __int8 *)(v7 - 1);
          if (v6 && (v8 & 0xFFFFFFDF) == 0x5D)
          {
            char v11 = 93;
            sub_18DEDD538(this, (uint64_t)&v11, 1);
          }
          char v12 = v8;
          sub_18DEDD538(this, (uint64_t)&v12, 1);
          int v9 = *(_DWORD *)((unsigned char *)this + *(void *)(*(void *)this - 24) + 32) & 5;
          uint64_t result = v9 == 0;
          BOOL v6 = v8 == 126;
          if (v9) {
            BOOL v10 = 1;
          }
          else {
            BOOL v10 = v7 == v5;
          }
          ++v7;
        }
        while (!v10);
      }
    }
  }
  return result;
}

uint64_t cnlogging::ProtobufOutputStream::populateBytesToStuff(cnlogging::ProtobufOutputStream *this, const wireless_diagnostics::google::protobuf::MessageLite *a2)
{
  if (!(*(unsigned int (**)(const wireless_diagnostics::google::protobuf::MessageLite *))(*(void *)a2 + 40))(a2)
    || (*(int (**)(const wireless_diagnostics::google::protobuf::MessageLite *))(*(void *)a2 + 72))(a2) < 1)
  {
    return 0;
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(*(uint64_t (**)(const wireless_diagnostics::google::protobuf::MessageLite *))(*(void *)a2 + 72))(a2);
  unsigned int v5 = v4;
  if (v4 >= 0x80) {
    uint64_t v6 = (int)wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
  }
  else {
    uint64_t v6 = 1;
  }
  uint64_t v8 = v6 + v5;
  int v9 = (void **)((char *)this + 592);
  BOOL v10 = (char *)*((void *)this + 74);
  *((void *)this + 75) = v10;
  size_t v11 = v8 + 4;
  if (v8 != -4)
  {
    unint64_t v12 = *((void *)this + 76) - (void)v10;
    if (v12 >= v11)
    {
      bzero(v10, v11);
      *((void *)this + 75) = &v10[v11];
    }
    else
    {
      if ((v11 & 0x8000000000000000) != 0) {
        sub_18DEE1FC8();
      }
      uint64_t v13 = 2 * v12;
      if (2 * v12 <= v11) {
        uint64_t v13 = v11;
      }
      if (v12 >= 0x3FFFFFFFFFFFFFFFLL) {
        size_t v14 = 0x7FFFFFFFFFFFFFFFLL;
      }
      else {
        size_t v14 = v13;
      }
      char v15 = (char *)operator new(v14);
      bzero(v15, v11);
      *((void *)this + 74) = v15;
      *((void *)this + 75) = &v15[v11];
      *((void *)this + 76) = &v15[v14];
      if (v10) {
        operator delete(v10);
      }
    }
    BOOL v10 = (char *)*v9;
  }
  wireless_diagnostics::google::protobuf::io::ArrayOutputStream::ArrayOutputStream((wireless_diagnostics::google::protobuf::io::ArrayOutputStream *)v23, v10);
  wireless_diagnostics::google::protobuf::io::CodedOutputStream::CodedOutputStream();
  wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v22);
  uint64_t v7 = MEMORY[0x192FA5B30](a2, v22);
  if (v7)
  {
    if (v5)
    {
      unsigned int v16 = 0;
      uint64_t v17 = v5;
      unint64_t v18 = (unsigned __int8 *)*v9 + v6;
      unsigned int v19 = 1;
      do
      {
        int v20 = *v18++;
        unsigned int v19 = (v19 + v20) % 0xFFF1;
        unsigned int v16 = (v19 + v16) % 0xFFF1;
        --v17;
      }
      while (v17);
    }
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteLittleEndian32((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v22);
  }
  MEMORY[0x192FA5920](v22);
  MEMORY[0x192FA58B0](v23);
  return v7;
}

void sub_18DEE7FF0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
}

BOOL cnlogging::ProtobufOutputStream::writeSentinelAndVersion(cnlogging::ProtobufOutputStream *this)
{
  if (!*((void *)this + 16)) {
    return 0;
  }
  char v5 = 126;
  uint64_t v2 = sub_18DEDD538(this, (uint64_t)&v5, 1);
  char v6 = 125;
  uint64_t v3 = sub_18DEDD538(v2, (uint64_t)&v6, 1);
  char v7 = 1;
  sub_18DEDD538(v3, (uint64_t)&v7, 1);
  return (*((unsigned char *)this + *(void *)(*(void *)this - 24) + 32) & 5) == 0;
}

uint64_t cnlogging::ProtobufOutputStream::flush(cnlogging::ProtobufOutputStream *this)
{
  if (!*((void *)this + 16)) {
    return 0;
  }
  std::ostream::flush();
  if ((*((unsigned char *)this + *(void *)(*(void *)this - 24) + 32) & 5) != 0)
  {
    cnlogging::ProtobufOutputStream::close(this);
    return 0;
  }
  return 1;
}

uint64_t cnlogging::ProtobufOutputStream::writeToVector(unsigned __int8 **this, const wireless_diagnostics::google::protobuf::MessageLite *a2, unint64_t *a3, int a4)
{
  if (!a4) {
    a3[1] = *a3;
  }
  unsigned int v66 = cnlogging::ProtobufOutputStream::populateBytesToStuff((cnlogging::ProtobufOutputStream *)this, a2);
  if (!v66) {
    return v66;
  }
  char v7 = (unsigned char *)a3[1];
  unint64_t v6 = a3[2];
  if ((unint64_t)v7 >= v6)
  {
    unint64_t v9 = *a3;
    BOOL v10 = &v7[-*a3];
    unint64_t v11 = (unint64_t)(v10 + 1);
    if ((uint64_t)(v10 + 1) < 0) {
      goto LABEL_101;
    }
    unint64_t v12 = v6 - v9;
    if (2 * v12 > v11) {
      unint64_t v11 = 2 * v12;
    }
    if (v12 >= 0x3FFFFFFFFFFFFFFFLL) {
      size_t v13 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      size_t v13 = v11;
    }
    if (v13) {
      unint64_t v14 = (unint64_t)operator new(v13);
    }
    else {
      unint64_t v14 = 0;
    }
    char v15 = (char *)(v14 + v13);
    v10[v14] = 126;
    uint64_t v8 = &v10[v14 + 1];
    if (v7 == (unsigned char *)v9)
    {
      v14 += (unint64_t)v10;
    }
    else
    {
      unsigned int v16 = &v7[~v9];
      do
      {
        char v17 = *--v7;
        (v16--)[v14] = v17;
      }
      while (v7 != (unsigned char *)v9);
      char v7 = (unsigned char *)*a3;
    }
    *a3 = v14;
    a3[1] = (unint64_t)v8;
    a3[2] = (unint64_t)v15;
    if (v7) {
      operator delete(v7);
    }
  }
  else
  {
    unsigned char *v7 = 126;
    uint64_t v8 = v7 + 1;
  }
  a3[1] = (unint64_t)v8;
  unint64_t v18 = a3[2];
  if ((unint64_t)v8 < v18)
  {
    *uint64_t v8 = 125;
    unsigned int v19 = v8 + 1;
    goto LABEL_40;
  }
  unint64_t v20 = *a3;
  unsigned __int8 v21 = &v8[-*a3];
  unint64_t v22 = (unint64_t)(v21 + 1);
  if ((uint64_t)(v21 + 1) < 0) {
    goto LABEL_101;
  }
  unint64_t v23 = v18 - v20;
  if (2 * v23 > v22) {
    unint64_t v22 = 2 * v23;
  }
  if (v23 >= 0x3FFFFFFFFFFFFFFFLL) {
    size_t v24 = 0x7FFFFFFFFFFFFFFFLL;
  }
  else {
    size_t v24 = v22;
  }
  if (v24) {
    unint64_t v25 = (unint64_t)operator new(v24);
  }
  else {
    unint64_t v25 = 0;
  }
  unint64_t v26 = (char *)(v25 + v24);
  v21[v25] = 125;
  unsigned int v19 = &v21[v25 + 1];
  if (v8 == (unsigned char *)v20)
  {
    *a3 = (unint64_t)&v21[v25];
    a3[1] = (unint64_t)v19;
    a3[2] = (unint64_t)v26;
LABEL_39:
    operator delete(v8);
    goto LABEL_40;
  }
  unint64_t v27 = &v8[~v20];
  do
  {
    char v28 = *--v8;
    (v27--)[v25] = v28;
  }
  while (v8 != (unsigned char *)v20);
  uint64_t v8 = (unsigned char *)*a3;
  *a3 = v25;
  a3[1] = (unint64_t)v19;
  a3[2] = (unint64_t)v26;
  if (v8) {
    goto LABEL_39;
  }
LABEL_40:
  a3[1] = (unint64_t)v19;
  unint64_t v29 = a3[2];
  if ((unint64_t)v19 < v29)
  {
    *unsigned int v19 = 1;
    uint64_t v30 = v19 + 1;
    goto LABEL_58;
  }
  unint64_t v31 = *a3;
  uint64_t v32 = &v19[-*a3];
  unint64_t v33 = (unint64_t)(v32 + 1);
  if ((uint64_t)(v32 + 1) < 0) {
LABEL_101:
  }
    sub_18DEE1FC8();
  unint64_t v34 = v29 - v31;
  if (2 * v34 > v33) {
    unint64_t v33 = 2 * v34;
  }
  if (v34 >= 0x3FFFFFFFFFFFFFFFLL) {
    size_t v35 = 0x7FFFFFFFFFFFFFFFLL;
  }
  else {
    size_t v35 = v33;
  }
  if (v35) {
    unint64_t v36 = (unint64_t)operator new(v35);
  }
  else {
    unint64_t v36 = 0;
  }
  char v37 = (char *)(v36 + v35);
  v32[v36] = 1;
  uint64_t v30 = &v32[v36 + 1];
  if (v19 == (unsigned char *)v31)
  {
    *a3 = (unint64_t)&v32[v36];
    a3[1] = (unint64_t)v30;
    a3[2] = (unint64_t)v37;
LABEL_57:
    operator delete(v19);
    goto LABEL_58;
  }
  uint64_t v38 = &v19[~v31];
  do
  {
    char v39 = *--v19;
    (v38--)[v36] = v39;
  }
  while (v19 != (unsigned char *)v31);
  unsigned int v19 = (unsigned char *)*a3;
  *a3 = v36;
  a3[1] = (unint64_t)v30;
  a3[2] = (unint64_t)v37;
  if (v19) {
    goto LABEL_57;
  }
LABEL_58:
  a3[1] = (unint64_t)v30;
  unint64_t v40 = this[74];
  unint64_t v41 = this[75];
  if (v40 != v41)
  {
    BOOL v42 = 0;
    while (1)
    {
      int v43 = *v40;
      unint64_t v44 = a3[2];
      if (v42 && (v43 & 0xFFFFFFDF) == 0x5D) {
        break;
      }
LABEL_81:
      if ((unint64_t)v30 >= v44)
      {
        unint64_t v56 = *a3;
        unsigned __int8 v57 = &v30[-*a3];
        unint64_t v58 = (unint64_t)(v57 + 1);
        if ((uint64_t)(v57 + 1) < 0) {
          goto LABEL_101;
        }
        unint64_t v59 = v44 - v56;
        if (2 * v59 > v58) {
          unint64_t v58 = 2 * v59;
        }
        if (v59 >= 0x3FFFFFFFFFFFFFFFLL) {
          size_t v60 = 0x7FFFFFFFFFFFFFFFLL;
        }
        else {
          size_t v60 = v58;
        }
        if (v60) {
          unint64_t v61 = (unint64_t)operator new(v60);
        }
        else {
          unint64_t v61 = 0;
        }
        long long v62 = (char *)(v61 + v60);
        v57[v61] = v43;
        uint64_t v55 = (uint64_t)&v57[v61 + 1];
        if (v30 == (unsigned char *)v56)
        {
          *a3 = (unint64_t)&v57[v61];
          a3[1] = v55;
          a3[2] = (unint64_t)v62;
        }
        else
        {
          uint64_t v63 = &v30[~v56];
          do
          {
            char v64 = *--v30;
            (v63--)[v61] = v64;
          }
          while (v30 != (unsigned char *)v56);
          uint64_t v30 = (unsigned char *)*a3;
          *a3 = v61;
          a3[1] = v55;
          a3[2] = (unint64_t)v62;
          if (!v30) {
            goto LABEL_99;
          }
        }
        operator delete(v30);
      }
      else
      {
        unsigned char *v30 = v43;
        uint64_t v55 = (uint64_t)(v30 + 1);
      }
LABEL_99:
      a3[1] = v55;
      BOOL v42 = v43 == 126;
      ++v40;
      uint64_t v30 = (unsigned char *)v55;
      if (v40 == v41) {
        return v66;
      }
    }
    if ((unint64_t)v30 >= v44)
    {
      unint64_t v46 = *a3;
      int v47 = &v30[-*a3];
      unint64_t v48 = (unint64_t)(v47 + 1);
      if ((uint64_t)(v47 + 1) < 0) {
        goto LABEL_101;
      }
      unint64_t v49 = v44 - v46;
      if (2 * v49 > v48) {
        unint64_t v48 = 2 * v49;
      }
      if (v49 >= 0x3FFFFFFFFFFFFFFFLL) {
        size_t v50 = 0x7FFFFFFFFFFFFFFFLL;
      }
      else {
        size_t v50 = v48;
      }
      if (v50) {
        unint64_t v51 = (unint64_t)operator new(v50);
      }
      else {
        unint64_t v51 = 0;
      }
      int v52 = (char *)(v51 + v50);
      v47[v51] = 93;
      uint64_t v45 = (uint64_t)&v47[v51 + 1];
      if (v30 == (unsigned char *)v46)
      {
        *a3 = (unint64_t)&v47[v51];
        a3[1] = v45;
        a3[2] = (unint64_t)v52;
      }
      else
      {
        int v53 = &v30[~v46];
        do
        {
          char v54 = *--v30;
          (v53--)[v51] = v54;
        }
        while (v30 != (unsigned char *)v46);
        uint64_t v30 = (unsigned char *)*a3;
        *a3 = v51;
        a3[1] = v45;
        a3[2] = (unint64_t)v52;
        if (!v30) {
          goto LABEL_80;
        }
      }
      operator delete(v30);
    }
    else
    {
      unsigned char *v30 = 93;
      uint64_t v45 = (uint64_t)(v30 + 1);
    }
LABEL_80:
    a3[1] = v45;
    unint64_t v44 = a3[2];
    uint64_t v30 = (unsigned char *)v45;
    goto LABEL_81;
  }
  return v66;
}

uint64_t cnnavigation::GNSSElAz(uint64_t a1, long long *a2, uint64_t a3, int a4, void *a5, void *a6)
{
  __int16 v7 = 0;
  long long v8 = 0u;
  long long v9 = 0u;
  int v10 = 0;
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  int v13 = 0;
  return cnnavigation::details::GNSSElAz(a1, (uint64_t)&v7, a2, a3, a4, a5, a6, 0, (uint64_t)v14);
}

uint64_t cnnavigation::GNSSElAz(uint64_t a1, uint64_t a2, long long *a3, uint64_t a4, int a5, void *a6, void *a7)
{
  return cnnavigation::details::GNSSElAz(a1, a2, a3, a4, a5, a6, a7, 0, (uint64_t)v8);
}

uint64_t cnnavigation::GNSSElAz(uint64_t a1, long long *a2, uint64_t a3, int a4, void *a5, void *a6, uint64_t a7)
{
  __int16 v8 = 0;
  long long v9 = 0u;
  long long v10 = 0u;
  int v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  int v14 = 0;
  return cnnavigation::details::GNSSElAz(a1, (uint64_t)&v8, a2, a3, a4, a5, a6, 1, a7);
}

uint64_t cnnavigation::GNSSElAz(uint64_t a1, uint64_t a2, long long *a3, uint64_t a4, int a5, void *a6, void *a7, uint64_t a8)
{
  return cnnavigation::details::GNSSElAz(a1, a2, a3, a4, a5, a6, a7, 1, a8);
}

uint64_t cnnavigation::details::GNSSElAz(uint64_t a1, uint64_t a2, long long *a3, uint64_t a4, int a5, void *a6, void *a7, int a8, uint64_t a9)
{
  uint64_t v13 = 0;
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  do
  {
    if ((*(void *)((unsigned char *)a3 + v13) & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000) {
      return 0xFFFFFFFFLL;
    }
    v13 += 8;
  }
  while (v13 != 24);
  long long v18 = *a3;
  uint64_t v19 = *((void *)a3 + 2);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, long long *, long long *, uint64_t *))(*(void *)a4 + 56))(a4, a1, a2, &v16, &v22, &v20);
  if (!result)
  {
    long long v22 = v16;
    uint64_t v23 = v17;
    uint64_t v20 = 0;
    uint64_t v21 = 0;
    uint64_t result = cnnavigation::SatElAz((uint64_t)&v18, (uint64_t)&v22, a5, (uint64_t)&v20, a8, a9);
    if (!result)
    {
      uint64_t v15 = v21;
      *a6 = v20;
      *a7 = v15;
    }
  }
  return result;
}

uint64_t cnnavigation::ThinShellIonosphereModel::GetIonosphericDelay(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)a1 + 16))();
}

uint64_t cnnavigation::ThinShellIonosphereModel::GetIonosphericDelay(cnnavigation::ThinShellIonosphereModel *this, int a2, double a3, const double *a4, const double *a5, double a6, double *a7)
{
  long long v11 = *(_OWORD *)a4;
  uint64_t v12 = *((void *)a4 + 2);
  long long v9 = *(_OWORD *)a5;
  uint64_t v10 = *((void *)a5 + 2);
  unint64_t v8 = 0xBFF921FB54442D18;
  return cnnavigation::ThinShellIonosphereModel::GetIonosphericDelay((uint64_t)this, (uint64_t)&v11, &v9, a7, (double *)&v8, a6);
}

uint64_t cnnavigation::ThinShellIonosphereModel::GetIonosphericDelay(uint64_t a1, uint64_t a2, long long *a3, double *a4, double *a5, double a6)
{
  uint64_t v56 = *MEMORY[0x1E4F143B8];
  uint64_t v11 = *(void *)(a1 + 72);
  int v41 = 1;
  uint64_t v42 = v11;
  long long v43 = 0u;
  long long v44 = 0u;
  float64x2_t v12 = *(float64x2_t *)a2;
  long long v45 = 0u;
  float64x2_t v46 = v12;
  uint64_t v47 = *(void *)(a2 + 16);
  long long v48 = *a3;
  uint64_t v49 = *((void *)a3 + 2);
  if (cnnavigation::details::IonospherePiercePoint::ComputeIonospherePiercePointCoordinates((cnnavigation::details::IonospherePiercePoint *)&v41))
  {
    v50[0] = 5;
    LOBYTE(v53) = 4;
    long long v18 = "#iono,ThinShellIonosphereModel::GetIonosphericDelay,failed to calculate IPP coordinates";
    uint64_t v19 = (unsigned __int8 *)&v53;
LABEL_6:
    cnprint::CNPrinter::Print((cnprint::CNPrinter *)v50, v19, v18, v13, v14, v15, v16, v17, v38);
    return 0xFFFFFFFFLL;
  }
  double v53 = 0.0;
  double v54 = 0.0;
  uint64_t v55 = 0;
  float64x2_t v51 = *(float64x2_t *)a2;
  uint64_t v52 = *(void *)(a2 + 16);
  uint64_t v20 = (cnprint::CNPrinter *)cnnavigation::ECEFToLLA(&v51, v41, &v53, 0, (uint64_t)v50);
  if (v20)
  {
    v50[0] = 5;
    unsigned __int8 v40 = 4;
    long long v18 = "#iono,ThinShellIonosphereModel::GetIonosphericDelay,conversion of current receiver position from ECEF to LLA failed";
LABEL_5:
    uint64_t v19 = &v40;
    goto LABEL_6;
  }
  double v22 = *((double *)&v44 + 1) - v53;
  double v23 = *(double *)&v45 - v54;
  unsigned int LogLevel = (cnprint::CNPrinter *)cnprint::CNPrinter::GetLogLevel(v20);
  if (!LogLevel)
  {
    v50[0] = 5;
    unsigned __int8 v40 = 0;
    double v39 = v22 * 57.2957795;
    cnprint::CNPrinter::Print((cnprint::CNPrinter *)v50, &v40, "#iono,delta_latitude_deg,%.3lf,delta_longitude_deg,%.3lf,elevation_at_rx,%.3lf,azimuth_at_rx,%.3lf", v25, v26, v27, v28, v29, SLOBYTE(v39));
  }
  if (1.57079633 - *(double *)&v43 < *a5)
  {
    if (cnprint::CNPrinter::GetLogLevel(LogLevel)) {
      return 0xFFFFFFFFLL;
    }
    v50[0] = 5;
    unsigned __int8 v40 = 0;
    long long v18 = "#iono,ThinShellIonosphereModel::GetIonosphericDelay,satellite elevation below threshold, not computing delay";
    goto LABEL_5;
  }
  if (*((double *)&v43 + 1) >= 1.57079633 || *((double *)&v43 + 1) < 0.0)
  {
    if (cnprint::CNPrinter::GetLogLevel(LogLevel) > 1) {
      return 0xFFFFFFFFLL;
    }
    v50[0] = 5;
    unsigned __int8 v40 = 1;
    long long v18 = "#iono,WARNING: ThinShellIonosphereModel::GetIonosphericDelay,cannot proceed,sv_zenith_angle_at_ipp_rad is invalid";
    goto LABEL_5;
  }
  double v30 = *(double *)(a1 + 80)
      + *(double *)(a1 + 88) * v22
      + *(double *)(a1 + 96) * v23
      + v22 * (*(double *)(a1 + 104) * 0.5) * v22
      + v22 * *(double *)(a1 + 112) * v23
      + v23 * (*(double *)(a1 + 120) * 0.5) * v23;
  double v31 = 1.0 / cos(*((long double *)&v43 + 1));
  if (!cnprint::CNPrinter::GetLogLevel(v32))
  {
    v50[0] = 5;
    unsigned __int8 v40 = 0;
    cnprint::CNPrinter::Print((cnprint::CNPrinter *)v50, &v40, "#iono,vtec_to_stec_mapping_function,%.3lf", v33, v34, v35, v36, v37, SLOBYTE(v31));
  }
  uint64_t result = 0;
  *a4 = v30 * v31 * 1.0e16 * 40.308193 / (a6 * a6) / 299792458.0;
  return result;
}

__n128 cnnavigation::ThinShellIonosphereModel::UpdateParameters(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  *(_OWORD *)(a1 + 40) = a2[2];
  *(_OWORD *)(a1 + 24) = v3;
  *(_OWORD *)(a1 + 8) = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(_OWORD *)(a1 + 104) = a2[6];
  *(_OWORD *)(a1 + 88) = v6;
  *(_OWORD *)(a1 + 72) = v5;
  *(_OWORD *)(a1 + 56) = v4;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[9];
  *(_OWORD *)(a1 + 168) = a2[10];
  *(_OWORD *)(a1 + 152) = v9;
  *(_OWORD *)(a1 + 136) = v8;
  *(__n128 *)(a1 + 120) = result;
  return result;
}

uint64_t cnnavigation::ThinShellIonosphereModel::IsValid(cnnavigation::ThinShellIonosphereModel *this, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  __int16 v11 = 5;
  unsigned __int8 v10 = 4;
  cnprint::CNPrinter::Print((cnprint::CNPrinter *)&v11, &v10, "#iono,ThinShellIonosphereModel::IsValid,check for validity failed, requires time of interest", a4, a5, a6, a7, a8, v9);
  return 0;
}

BOOL cnnavigation::ThinShellIonosphereModel::IsValid(cnnavigation::ThinShellIonosphereModel *this, const cnnavigation::TAITime *a2, int8x16_t a3, int8x16_t a4)
{
  if (!*((unsigned char *)this + 8) || !*((unsigned char *)this + 9)) {
    return 0;
  }
  double v5 = COERCE_DOUBLE(CNTimeSpan::operator-((uint64_t)a2, (void *)this + 7, a3, a4));
  v11[0] = v5;
  v11[1] = v6;
  if ((*(void *)&v5 & 0x8000000000000000) != 0 || (*(double *)v7.i64 = v6, v6 < 0.0)) {
    double v5 = COERCE_DOUBLE(CNTimeSpan::operator-(v11, v7, v8));
  }
  v10[0] = v5;
  v10[1] = v6;
  return sub_18DEE8C5C(v10, (double *)this + 23);
}

BOOL sub_18DEE8C5C(double *a1, double *a2)
{
  double v2 = *a1;
  if (!*(void *)a1)
  {
    double v3 = a1[1];
    if ((*(void *)&v3 & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000)
    {
LABEL_7:
      BOOL v6 = v3 > a2[1];
      return !v6;
    }
  }
  double v4 = *a2;
  if (*(void *)a2 || (double v5 = a2[1], (*(void *)&v5 & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000))
  {
    if (*(void *)&v2 != *(void *)&v4) {
      return *(void *)&v2 < *(void *)&v4;
    }
    double v3 = a1[1];
    goto LABEL_7;
  }
  BOOL v6 = a1[1] > v5;
  return !v6;
}

void *sub_18DEE8CCC(void *result)
{
  *__n128 result = &unk_1EDD0AA58;
  return result;
}

void sub_18DEE8CEC(void *a1)
{
  *a1 = &unk_1EDD0AA58;
  JUMPOUT(0x192FA6240);
}

uint64_t cnnavigation::GLONASSTimeToJulianTime(uint64_t a1, uint64_t a2)
{
  int v2 = *(_DWORD *)a1;
  if (*(int *)a1 < 1) {
    return 0xFFFFFFFFLL;
  }
  double v3 = *(double *)(a1 + 8);
  uint64_t result = 0xFFFFFFFFLL;
  if (v3 >= 0.0 && v3 < 86401.0)
  {
    uint64_t result = 0;
    double v5 = (v3 + 0.0) / 86400.0 + 0.375;
    *(_DWORD *)a2 = v2 + 2450082 + vcvtmd_s64_f64(v5);
    *(double *)(a2 + 8) = v5 - floor(v5);
  }
  return result;
}

uint64_t cnnavigation::GLONASSTimeToJulianTime(uint64_t a1, uint64_t a2, double a3)
{
  int v3 = *(_DWORD *)a1;
  if (*(int *)a1 < 1) {
    return 0xFFFFFFFFLL;
  }
  double v4 = *(double *)(a1 + 8);
  uint64_t result = 0xFFFFFFFFLL;
  if (v4 >= 0.0 && v4 < 86401.0)
  {
    uint64_t result = 0;
    double v6 = (v4 + a3) / 86400.0 + 0.375;
    *(_DWORD *)a2 = v3 + 2450082 + vcvtmd_s64_f64(v6);
    *(double *)(a2 + 8) = v6 - floor(v6);
  }
  return result;
}

uint64_t cnnavigation::JulianTimeToGLONASSTime(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)(a1 + 8) + -0.375;
  signed int v3 = *(_DWORD *)a1 - 2450083 + vcvtmd_s64_f64(v2);
  if (v3 < 0) {
    return 0xFFFFFFFFLL;
  }
  uint64_t result = 0;
  *(_DWORD *)a2 = v3 + 1;
  *(double *)(a2 + 8) = (v2 - floor(v2)) * 86400.0;
  return result;
}

uint64_t cnnavigation::JulianTimeToGLONASSTime(uint64_t a1, uint64_t a2, double a3)
{
  double v3 = *(double *)(a1 + 8) + -0.375 + a3 / -86400.0;
  signed int v4 = *(_DWORD *)a1 - 2450083 + vcvtmd_s64_f64(v3);
  if (v4 < 0) {
    return 0xFFFFFFFFLL;
  }
  uint64_t result = 0;
  *(_DWORD *)a2 = v4 + 1;
  *(double *)(a2 + 8) = (v3 - floor(v3)) * 86400.0;
  return result;
}

uint64_t cnnavigation::GLONASSSatelliteClockOffset(int a1, uint64_t a2, double *a3, double a4, double a5, double a6)
{
  return cnnavigation::GLONASSSatelliteClockOffset(a1, a2, a3, 0, (uint64_t)&v7, a4, a5, a6);
}

uint64_t cnnavigation::GLONASSSatelliteClockOffset(int a1, uint64_t a2, double *a3, int a4, uint64_t a5, double a6, double a7, double a8)
{
  if (!*(unsigned char *)(a2 + 16)) {
    return 0xFFFFFFFFLL;
  }
  if (a8 <= 0.0) {
    return 0xFFFFFFFFLL;
  }
  if ((*(void *)&a8 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL) {
    return 0xFFFFFFFFLL;
  }
  double v8 = *(double *)(a2 + 112);
  double v9 = fabs(a8 + -1602000000.0);
  double v10 = fabs(a8 + -1246000000.0);
  if (v9 > 7875000.0 && v10 > 6125000.0) {
    return 0xFFFFFFFFLL;
  }
  double v12 = *(double *)(a2 + 120)
      - v8 * (a6 - *(double *)(a2 + 24) + (double)(a1 - *(_DWORD *)(a2 + 20)) * 86400.0 + a7 - *(double *)(a2 + 32));
  double v13 = 0.0;
  if (v9 >= v10) {
    double v13 = *(double *)(a2 + 128);
  }
  *a3 = -(v13 + v12);
  uint64_t result = 0;
  if (a4)
  {
    *(double *)a5 = v8;
    *(void *)(a5 + 8) = 0;
  }
  return result;
}

uint64_t cnnavigation::GLONASSSatelliteClockOffset(int a1, uint64_t a2, double *a3, uint64_t a4, double a5, double a6, double a7)
{
  return cnnavigation::GLONASSSatelliteClockOffset(a1, a2, a3, 1, a4, a5, a6, a7);
}

uint64_t cnnavigation::GLONASSSatelliteClockOffsetRate(uint64_t a1, uint64_t a2, void *a3)
{
  if (!*(unsigned char *)(a2 + 16)) {
    return 0xFFFFFFFFLL;
  }
  uint64_t result = 0;
  *a3 = *(void *)(a2 + 112);
  return result;
}

uint64_t cnnavigation::GLONASSSatelliteClockOffsetRate(uint64_t a1, uint64_t a2, void *a3, int a4, _OWORD *a5)
{
  if (!*(unsigned char *)(a2 + 16)) {
    return 0xFFFFFFFFLL;
  }
  *a3 = *(void *)(a2 + 112);
  uint64_t result = 0;
  if (a4) {
    *a5 = xmmword_18E1EF8B0;
  }
  return result;
}

uint64_t cnnavigation::GLONASSSatelliteClockOffsetRate(uint64_t a1, uint64_t a2, void *a3, _OWORD *a4)
{
  if (!*(unsigned char *)(a2 + 16)) {
    return 0xFFFFFFFFLL;
  }
  uint64_t result = 0;
  *a3 = *(void *)(a2 + 112);
  *a4 = xmmword_18E1EF8B0;
  return result;
}

uint64_t cnnavigation::GLONASSDopplerShift(int a1, double *a2, double *a3, uint64_t a4, uint64_t a5, uint64_t a6, double *a7, double a8, double a9, double a10, double a11, double a12)
{
  return cnnavigation::GLONASSDopplerShift(a1, a2, a3, a4, a5, a6, a7, 0, a8, a9, a10, a11, a12, (uint64_t)v13);
}

uint64_t cnnavigation::GLONASSDopplerShift(int a1, double *a2, double *a3, uint64_t a4, uint64_t a5, uint64_t a6, double *a7, int a8, double a9, double a10, double a11, double a12, double a13, uint64_t a14)
{
  double v24 = a9 - a12;
  uint64_t v50 = 0;
  if (a8)
  {
    uint64_t result = cnnavigation::GLONASSTimeOfFlight(a1, a2, a4, a5, a6, (double *)&v50, 1, v51, a9 - a12, a10, a11);
    if (result) {
      return result;
    }
    double v49 = 0.0;
    uint64_t result = cnnavigation::GLONASSTimeOfFlightRate(a1, a2, a3, a4, a5, a6, &v49, 1, v24, a10, a11, &v43);
  }
  else
  {
    uint64_t result = cnnavigation::GLONASSTimeOfFlight(a1, a2, a4, a5, a6, (double *)&v50, 0, v51, a9 - a12, a10, a11);
    if (result) {
      return result;
    }
    double v49 = 0.0;
    uint64_t result = cnnavigation::GLONASSTimeOfFlightRate(a1, a2, a3, a4, a5, a6, &v49, 0, v24, a10, a11, v51);
  }
  if (!result)
  {
    if (*(unsigned char *)(a4 + 16))
    {
      double v26 = v49;
      double v27 = *(double *)(a4 + 112);
      double v28 = 1.0 - a13 - v49;
      double v29 = a13 + v49 * (1.0 - a13);
      double v30 = 1.0 - v28 * v27;
      double v31 = v28 * v27 - v29 / v30;
      *a7 = v31 * a11;
      uint64_t result = 0;
      if (a8)
      {
        double v32 = 1.0 - v29 / (v30 * v30);
        double v33 = (v26 + -1.0) / v30;
        double v34 = (a13 + -1.0) / v30;
        double v35 = v28 * ((1.0 - v51[0]) * -0.0) - v27 * v43;
        double v36 = v46;
        double v37 = v28 * (v53 * 0.0) - v27 * v46;
        double v38 = v48;
        double v39 = -(v27 * v48);
        double v40 = v34 * v43;
        double v41 = v31 + a11 * (v34 * v44 + v32 * (v28 * (v51[1] * 0.0 + 0.0) - v27 * v44));
        *(double *)a14 = (v34 * v43 + v32 * v35) * a11;
        *(double *)(a14 + 8) = v41;
        *(float64x2_t *)(a14 + 16) = vmulq_n_f64(vmlaq_n_f64(vmulq_n_f64(v45, v34), vmlsq_lane_f64(vmulq_n_f64(vmulq_f64(v52, (float64x2_t)0), v28), v45, v27, 0), v32), a11);
        *(double *)(a14 + 32) = (v34 * v36 + v32 * v37) * a11;
        *(float64x2_t *)(a14 + 40) = vmulq_n_f64(vmlaq_n_f64(vmulq_n_f64(v47, v34), vmulq_n_f64(v47, -v27), v32), a11);
        *(double *)(a14 + 56) = (v34 * v38 + v32 * v39) * a11;
        *(double *)(a14 + 64) = (v32 * -v35 - v40) * a11;
        *(double *)(a14 + 72) = (v33 - v32 * v27) * a11;
      }
    }
    else
    {
      return 0xFFFFFFFFLL;
    }
  }
  return result;
}

uint64_t cnnavigation::GLONASSDopplerShift(int a1, double *a2, double *a3, uint64_t a4, uint64_t a5, uint64_t a6, double *a7, uint64_t a8, double a9, double a10, double a11, double a12, double a13)
{
  return cnnavigation::GLONASSDopplerShift(a1, a2, a3, a4, a5, a6, a7, 1, a9, a10, a11, a12, a13, a8);
}

__n128 cnnavigation::TAITime::TAITime(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

{
  __n128 result;

  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

__n128 cnnavigation::TAITime::TAITime(__n128 *this, __n128 *a2)
{
  __n128 result = *a2;
  *this = *a2;
  return result;
}

{
  __n128 result;

  __n128 result = *a2;
  *this = *a2;
  return result;
}

cnnavigation::TAITime *cnnavigation::TAITime::TAITime(cnnavigation::TAITime *this, const cnnavigation::BeiDouTime *a2, const cnnavigation::GNSSUTCParameters *a3)
{
  *(void *)this = 0;
  *((void *)this + 1) = 0;
  BOOL IsValid = cnnavigation::GNSSUTCParameters::IsValid(a3);
  int v9 = *(_DWORD *)a2;
  if (IsValid && *((unsigned char *)a3 + 1) == 4)
  {
    double v10 = *((double *)a2 + 1);
    long long v18 = 0uLL;
    *(double *)v7.i64 = v10;
    CNTimeSpan::SetTimeSpan((uint64_t *)&v18, 604800 * v9, v7, v8);
    double v11 = *((double *)a3 + 1);
    double v12 = *((double *)a3 + 2);
    uint64_t v15 = CNTimeSpan::operator-((uint64_t)&v18, (void *)a3 + 3, v13, v14);
    *(double *)v7.i64 = v11 + v12 * (v16 + (double)v15);
  }
  else
  {
    double v10 = *((double *)a2 + 1);
    v7.i64[0] = 0;
  }
  v8.i64[0] = 0xC12122FDA1CAC083;
  *(double *)v7.i64 = v10 - *(double *)v7.i64 + -561534.816;
  long long v18 = 0uLL;
  CNTimeSpan::SetTimeSpan((uint64_t *)&v18, 604800 * (v9 + 314), v7, v8);
  *(_OWORD *)this = v18;
  return this;
}

cnnavigation::TAITime *cnnavigation::TAITime::TAITime(cnnavigation::TAITime *this, const cnnavigation::BeiDouTime *a2)
{
  uint64_t v4 = 0;
  memset(v3, 0, sizeof(v3));
  return cnnavigation::TAITime::TAITime(this, a2, (const cnnavigation::GNSSUTCParameters *)v3);
}

{
  _OWORD v3[4];
  uint64_t v4;

  uint64_t v4 = 0;
  memset(v3, 0, sizeof(v3));
  return cnnavigation::TAITime::TAITime(this, a2, (const cnnavigation::GNSSUTCParameters *)v3);
}

void *cnnavigation::TAITime::TAITime(void *a1, double *a2, cnnavigation::GNSSUTCParameters *this)
{
  *a1 = 0;
  a1[1] = 0;
  BOOL IsValid = cnnavigation::GNSSUTCParameters::IsValid(this);
  int v9 = *(_DWORD *)a2;
  if (IsValid && *((unsigned char *)this + 1) == 3)
  {
    double v10 = a2[1];
    long long v18 = 0uLL;
    *(double *)v7.i64 = v10;
    CNTimeSpan::SetTimeSpan((uint64_t *)&v18, 604800 * v9, v7, v8);
    double v11 = *((double *)this + 1);
    double v12 = *((double *)this + 2);
    uint64_t v15 = CNTimeSpan::operator-((uint64_t)&v18, (void *)this + 3, v13, v14);
    *(double *)v7.i64 = v11 + v12 * (v16 + (double)v15);
  }
  else
  {
    double v10 = a2[1];
    v7.i64[0] = 0;
  }
  v8.i64[0] = 0xC1212319A1CAC083;
  *(double *)v7.i64 = v10 - *(double *)v7.i64 + -561548.816;
  long long v18 = 0uLL;
  CNTimeSpan::SetTimeSpan((uint64_t *)&v18, 604800 * (v9 - 18), v7, v8);
  *(_OWORD *)a1 = v18;
  return a1;
}

{
  BOOL IsValid;
  int8x16_t v7;
  int8x16_t v8;
  int v9;
  double v10;
  double v11;
  double v12;
  int8x16_t v13;
  int8x16_t v14;
  uint64_t v15;
  double v16;
  long long v18;

  *a1 = 0;
  a1[1] = 0;
  BOOL IsValid = cnnavigation::GNSSUTCParameters::IsValid(this);
  int v9 = *(_DWORD *)a2;
  if (IsValid && *((unsigned char *)this + 1) == 1)
  {
    double v10 = a2[1];
    long long v18 = 0uLL;
    *(double *)v7.i64 = v10;
    CNTimeSpan::SetTimeSpan((uint64_t *)&v18, 604800 * v9, v7, v8);
    double v11 = *((double *)this + 1);
    double v12 = *((double *)this + 2);
    uint64_t v15 = CNTimeSpan::operator-((uint64_t)&v18, (void *)this + 3, v13, v14);
    *(double *)v7.i64 = v11 + v12 * (v16 + (double)v15);
  }
  else
  {
    double v10 = a2[1];
    v7.i64[0] = 0;
  }
  v8.i64[0] = 0xC1212319A1CAC083;
  *(double *)v7.i64 = v10 - *(double *)v7.i64 + -561548.816;
  long long v18 = 0uLL;
  CNTimeSpan::SetTimeSpan((uint64_t *)&v18, 604800 * (v9 - 1042), v7, v8);
  *(_OWORD *)a1 = v18;
  return a1;
}

void *cnnavigation::TAITime::TAITime(void *a1, double *a2)
{
  uint64_t v4 = 0;
  memset(v3, 0, sizeof(v3));
  return cnnavigation::TAITime::TAITime(a1, a2, (cnnavigation::GNSSUTCParameters *)v3);
}

{
  _OWORD v3[4];
  uint64_t v4;

  uint64_t v4 = 0;
  memset(v3, 0, sizeof(v3));
  return cnnavigation::TAITime::TAITime(a1, a2, (cnnavigation::GNSSUTCParameters *)v3);
}

cnnavigation::TAITime *cnnavigation::TAITime::TAITime(cnnavigation::TAITime *this, const cnnavigation::NavicTime *a2, const cnnavigation::GNSSUTCParameters *a3)
{
  *(void *)this = 0;
  *((void *)this + 1) = 0;
  BOOL IsValid = cnnavigation::GNSSUTCParameters::IsValid(a3);
  int v9 = *(_DWORD *)a2;
  if (IsValid && *((unsigned char *)a3 + 1) == 6)
  {
    double v10 = *((double *)a2 + 1);
    long long v18 = 0uLL;
    *(double *)v7.i64 = v10;
    CNTimeSpan::SetTimeSpan((uint64_t *)&v18, 604800 * v9, v7, v8);
    double v11 = *((double *)a3 + 1);
    double v12 = *((double *)a3 + 2);
    uint64_t v15 = CNTimeSpan::operator-((uint64_t)&v18, (void *)a3 + 3, v13, v14);
    *(double *)v7.i64 = v11 + v12 * (v16 + (double)v15);
  }
  else
  {
    double v10 = *((double *)a2 + 1);
    v7.i64[0] = 0;
  }
  v8.i64[0] = 0xC1212319A1CAC083;
  *(double *)v7.i64 = v10 - *(double *)v7.i64 + -561548.816;
  long long v18 = 0uLL;
  CNTimeSpan::SetTimeSpan((uint64_t *)&v18, 604800 * (v9 - 18), v7, v8);
  *(_OWORD *)this = v18;
  return this;
}

cnnavigation::TAITime *cnnavigation::TAITime::TAITime(cnnavigation::TAITime *this, const cnnavigation::NavicTime *a2)
{
  uint64_t v4 = 0;
  memset(v3, 0, sizeof(v3));
  return cnnavigation::TAITime::TAITime(this, a2, (const cnnavigation::GNSSUTCParameters *)v3);
}

{
  _OWORD v3[4];
  uint64_t v4;

  uint64_t v4 = 0;
  memset(v3, 0, sizeof(v3));
  return cnnavigation::TAITime::TAITime(this, a2, (const cnnavigation::GNSSUTCParameters *)v3);
}

void *cnnavigation::TAITime::TAITime(void *a1, int *a2, cnnavigation::GNSSUTCParameters *this)
{
  *a1 = 0;
  a1[1] = 0;
  if (cnnavigation::GNSSUTCParameters::IsValid(this) && *((unsigned char *)this + 1) == 2)
  {
    int v8 = *a2;
    v6.i64[0] = *((void *)a2 + 1);
    v7.i64[0] = 0xC0EA55FA1CAC0831;
    double v9 = *(double *)v6.i64 + -53935.816;
    v22[0] = 0;
    v22[1] = 0;
    CNTimeSpan::SetTimeSpan(v22, 86400 * v8 - 86400, v6, v7);
    BOOL v10 = sub_18DEE4C00((double *)v22, (double *)this + 6);
    uint64_t v13 = 40;
    if (v10) {
      uint64_t v13 = 64;
    }
    uint64_t v14 = *(int *)((char *)this + v13);
    double v15 = *((double *)this + 1);
    double v16 = *((double *)this + 2);
    *(double *)v17.i64 = (double)CNTimeSpan::operator-((uint64_t)v22, (void *)this + 3, v11, v12);
    *(double *)v19.i64 = v9 - (v15 + v16 * (v18 + *(double *)v17.i64));
    long long v21 = 0uLL;
    CNTimeSpan::SetTimeSpan((uint64_t *)&v21, 86400 * v8 - 126316800 + v14 - 3, v19, v17);
    *(_OWORD *)a1 = v21;
  }
  else
  {
    a1[1] = 0x7FF8000000000000;
  }
  return a1;
}

void *cnnavigation::TAITime::TAITime(void *a1, double *a2, int8x16_t a3, int8x16_t a4)
{
  *a1 = 0;
  a1[1] = 0;
  uint64_t v5 = 604800 * (*(int *)a2 - 1042);
  a4.i64[0] = 0xC1212319A1CAC083;
  *(double *)a3.i64 = a2[1] + -561548.816;
  long long v7 = 0uLL;
  CNTimeSpan::SetTimeSpan((uint64_t *)&v7, v5, a3, a4);
  *(_OWORD *)a1 = v7;
  return a1;
}

{
  uint64_t v5;
  long long v7;

  *a1 = 0;
  a1[1] = 0;
  uint64_t v5 = 604800 * (*(int *)a2 - 1042);
  a4.i64[0] = 0xC1212319A1CAC083;
  *(double *)a3.i64 = a2[1] + -561548.816;
  long long v7 = 0uLL;
  CNTimeSpan::SetTimeSpan((uint64_t *)&v7, v5, a3, a4);
  *(_OWORD *)a1 = v7;
  return a1;
}

__n128 cnnavigation::TAITime::operator=(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t cnnavigation::TAITime::ToBeiDouTime(cnnavigation::TAITime *this, const cnnavigation::GNSSUTCParameters *a2)
{
  uint64_t v3 = *(void *)this / 604800;
  double v4 = *((double *)this + 1) + (double)(*(void *)this - 604800 * (int)v3) + 561534.816;
  int v5 = vcvtmd_s64_f64(v4 / 604800.0);
  double v6 = v4 - (double)v5 * 604800.0;
  unsigned int v7 = v3 + v5 - 314;
  if (cnnavigation::GNSSUTCParameters::IsValid(a2) && *((unsigned char *)a2 + 1) == 4)
  {
    v17[0] = 0;
    v17[1] = 0;
    *(double *)v8.i64 = v6;
    CNTimeSpan::SetTimeSpan(v17, 604800 * (int)v7, v8, v9);
    double v10 = *((double *)a2 + 1);
    double v11 = *((double *)a2 + 2);
    uint64_t v14 = CNTimeSpan::operator-((uint64_t)v17, (void *)a2 + 3, v12, v13);
    v7 += vcvtmd_s64_f64((v6 + v10 + v11 * (v15 + (double)v14)) / 604800.0);
  }
  return v7;
}

uint64_t cnnavigation::TAITime::ToBeiDouTime(cnnavigation::TAITime *this)
{
  __int16 v2 = 0;
  long long v3 = 0u;
  long long v4 = 0u;
  int v5 = 0;
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  int v8 = 0;
  return cnnavigation::TAITime::ToBeiDouTime(this, (const cnnavigation::GNSSUTCParameters *)&v2);
}

uint64_t cnnavigation::TAITime::ToGalileoTime(cnnavigation::TAITime *this, const cnnavigation::GNSSUTCParameters *a2)
{
  uint64_t v3 = *(void *)this / 604800;
  double v4 = *((double *)this + 1) + (double)(*(void *)this - 604800 * (int)v3) + 561548.816;
  int v5 = vcvtmd_s64_f64(v4 / 604800.0);
  double v6 = v4 - (double)v5 * 604800.0;
  unsigned int v7 = v3 + v5 + 18;
  if (cnnavigation::GNSSUTCParameters::IsValid(a2) && *((unsigned char *)a2 + 1) == 3)
  {
    v17[0] = 0;
    v17[1] = 0;
    *(double *)v8.i64 = v6;
    CNTimeSpan::SetTimeSpan(v17, 604800 * (int)v7, v8, v9);
    double v10 = *((double *)a2 + 1);
    double v11 = *((double *)a2 + 2);
    uint64_t v14 = CNTimeSpan::operator-((uint64_t)v17, (void *)a2 + 3, v12, v13);
    v7 += vcvtmd_s64_f64((v6 + v10 + v11 * (v15 + (double)v14)) / 604800.0);
  }
  return v7;
}

uint64_t cnnavigation::TAITime::ToGalileoTime(cnnavigation::TAITime *this)
{
  __int16 v2 = 0;
  long long v3 = 0u;
  long long v4 = 0u;
  int v5 = 0;
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  int v8 = 0;
  return cnnavigation::TAITime::ToGalileoTime(this, (const cnnavigation::GNSSUTCParameters *)&v2);
}

uint64_t cnnavigation::TAITime::ToNavicTime(cnnavigation::TAITime *this, const cnnavigation::GNSSUTCParameters *a2)
{
  uint64_t v3 = *(void *)this / 604800;
  double v4 = *((double *)this + 1) + (double)(*(void *)this - 604800 * (int)v3) + 561548.816;
  int v5 = vcvtmd_s64_f64(v4 / 604800.0);
  double v6 = v4 - (double)v5 * 604800.0;
  unsigned int v7 = v3 + v5 + 18;
  if (cnnavigation::GNSSUTCParameters::IsValid(a2) && *((unsigned char *)a2 + 1) == 6)
  {
    v17[0] = 0;
    v17[1] = 0;
    *(double *)v8.i64 = v6;
    CNTimeSpan::SetTimeSpan(v17, 604800 * (int)v7, v8, v9);
    double v10 = *((double *)a2 + 1);
    double v11 = *((double *)a2 + 2);
    uint64_t v14 = CNTimeSpan::operator-((uint64_t)v17, (void *)a2 + 3, v12, v13);
    v7 += vcvtmd_s64_f64((v6 + v10 + v11 * (v15 + (double)v14)) / 604800.0);
  }
  return v7;
}

uint64_t cnnavigation::TAITime::ToNavicTime(cnnavigation::TAITime *this)
{
  __int16 v2 = 0;
  long long v3 = 0u;
  long long v4 = 0u;
  int v5 = 0;
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  int v8 = 0;
  return cnnavigation::TAITime::ToNavicTime(this, (const cnnavigation::GNSSUTCParameters *)&v2);
}

uint64_t cnnavigation::TAITime::ToGLONASSTime(uint64_t a1, cnnavigation::GNSSUTCParameters *this, uint64_t a3)
{
  *(_DWORD *)a3 = 0x80000000;
  *(void *)(a3 + 8) = 0x7FF8000000000000;
  BOOL IsValid = cnnavigation::GNSSUTCParameters::IsValid(this);
  uint64_t result = 0xFFFFFFFFLL;
  if (IsValid && *((unsigned char *)this + 1) == 2)
  {
    int v10 = (int)*(void *)a1 / 86400;
    *(double *)v7.i64 = *(double *)(a1 + 8)
                      + (double)(*(void *)a1 - 86400 * v10)
                      + 53935.816
                      - (double)(*((_DWORD *)this + 10) - 3);
    int v11 = vcvtmd_s64_f64(*(double *)v7.i64 / 86400.0);
    int v12 = v11 + v10;
    *(double *)v8.i64 = (double)v11;
    *(double *)v7.i64 = *(double *)v7.i64 - (double)v11 * 86400.0;
    *(_DWORD *)a3 = v12 + 1462;
    *(void *)(a3 + 8) = v7.i64[0];
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    CNTimeSpan::SetTimeSpan(&v25, 86400 * (v12 + 1461), v7, v8);
    BOOL v13 = sub_18DEE4C00((double *)&v25, (double *)this + 6);
    double v16 = *(double *)(a3 + 8);
    if (v13)
    {
      uint64_t v17 = *((int *)this + 16) - (uint64_t)*((int *)this + 10);
      *(double *)v14.i64 = (double)(int)v17;
      double v16 = v16 - (double)(int)v17;
      *(double *)(a3 + 8) = v16;
      v24[0] = v17;
      v24[1] = 0;
      uint64_t v25 = CNTimeSpan::operator+((uint64_t)&v25, v24, v14, v15);
      uint64_t v26 = v18;
    }
    double v19 = *((double *)this + 1);
    double v20 = *((double *)this + 2);
    uint64_t v21 = CNTimeSpan::operator-((uint64_t)&v25, (void *)this + 3, v14, v15);
    uint64_t result = 0;
    double v23 = v16 + v19 + v20 * (v22 + (double)v21);
    LODWORD(v21) = vcvtmd_s64_f64(v23 / 86400.0);
    *(_DWORD *)a3 += v21;
    *(double *)(a3 + 8) = v23 - (double)(int)v21 * 86400.0;
  }
  return result;
}

uint64_t cnnavigation::TAITime::ToGPSTime(cnnavigation::TAITime *this, const cnnavigation::GNSSUTCParameters *a2)
{
  uint64_t v3 = *(void *)this / 604800;
  double v4 = *((double *)this + 1) + (double)(*(void *)this - 604800 * (int)v3) + 561548.816;
  int v5 = vcvtmd_s64_f64(v4 / 604800.0);
  double v6 = v4 - (double)v5 * 604800.0;
  unsigned int v7 = v3 + v5 + 1042;
  if (cnnavigation::GNSSUTCParameters::IsValid(a2) && *((unsigned char *)a2 + 1) == 1)
  {
    v17[0] = 0;
    v17[1] = 0;
    *(double *)v8.i64 = v6;
    CNTimeSpan::SetTimeSpan(v17, 604800 * (int)v7, v8, v9);
    double v10 = *((double *)a2 + 1);
    double v11 = *((double *)a2 + 2);
    uint64_t v14 = CNTimeSpan::operator-((uint64_t)v17, (void *)a2 + 3, v12, v13);
    v7 += vcvtmd_s64_f64((v6 + v10 + v11 * (v15 + (double)v14)) / 604800.0);
  }
  return v7;
}

uint64_t cnnavigation::TAITime::ToGPSTime(cnnavigation::TAITime *this)
{
  __int16 v2 = 0;
  long long v3 = 0u;
  long long v4 = 0u;
  int v5 = 0;
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  int v8 = 0;
  return cnnavigation::TAITime::ToGPSTime(this, (const cnnavigation::GNSSUTCParameters *)&v2);
}

uint64_t cnnavigation::TAITime::ToJulianTime(cnnavigation::TAITime *a1, cnnavigation::GNSSUTCParameters *this, uint64_t a3)
{
  if (!cnnavigation::GNSSUTCParameters::IsValid(this)) {
    return 0xFFFFFFFFLL;
  }
  uint64_t result = 0xFFFFFFFFLL;
  switch(*((unsigned char *)this + 1))
  {
    case 1:
      *(_WORD *)double v33 = 0;
      *(_OWORD *)&v33[8] = 0u;
      long long v34 = 0u;
      int v35 = 0;
      uint64_t v36 = 0;
      uint64_t v37 = 0;
      int v38 = 0;
      *(void *)double v33 = cnnavigation::TAITime::ToGPSTime(a1, (const cnnavigation::GNSSUTCParameters *)v33);
      *(void *)&v33[8] = v7;
      uint64_t v31 = sub_18DEEA4A4((int *)v33, v8, v9);
      double v32 = v10;
      BOOL v11 = sub_18DEE4CB8((double *)&v31, (double *)this + 6);
      uint64_t v12 = 64;
      if (v11) {
        uint64_t v12 = 40;
      }
      if (cnnavigation::GPSTimeToJulianTime((double *)v33, *(_DWORD *)((char *)this + v12), a3)) {
        return 0xFFFFFFFFLL;
      }
      goto LABEL_23;
    case 2:
      *(_DWORD *)double v33 = 1;
      *(void *)&v33[8] = 0;
      if (cnnavigation::TAITime::ToGLONASSTime((uint64_t)a1, this, (uint64_t)v33)
        || *(int *)v33 < 1
        || *(double *)&v33[8] < 0.0
        || *(double *)&v33[8] >= 86401.0)
      {
        return 0xFFFFFFFFLL;
      }
      double v13 = (*(double *)&v33[8] + 0.0) / 86400.0 + 0.375;
      *(_DWORD *)a3 = *(_DWORD *)v33 + 2450082 + vcvtmd_s64_f64(v13);
      *(double *)(a3 + 8) = v13 - floor(v13);
      goto LABEL_23;
    case 3:
      *(_WORD *)double v33 = 0;
      *(_OWORD *)&v33[8] = 0u;
      long long v34 = 0u;
      int v35 = 0;
      uint64_t v36 = 0;
      uint64_t v37 = 0;
      int v38 = 0;
      uint64_t v31 = cnnavigation::TAITime::ToGalileoTime(a1, (const cnnavigation::GNSSUTCParameters *)v33);
      double v32 = v14;
      *(double *)v15.i64 = (double)(uint64_t)floor(v14);
      *(double *)v16.i64 = v14 - *(double *)v15.i64;
      *(_OWORD *)double v33 = 0uLL;
      CNTimeSpan::SetTimeSpan((uint64_t *)v33, vcvtmd_s64_f64(v14) + 604800 * (int)v31, v16, v15);
      BOOL v17 = sub_18DEE4CB8((double *)v33, (double *)this + 6);
      uint64_t v18 = 64;
      if (v17) {
        uint64_t v18 = 40;
      }
      if (cnnavigation::GalileoTimeToJulianTime((double *)&v31, *(_DWORD *)((char *)this + v18), a3)) {
        return 0xFFFFFFFFLL;
      }
      goto LABEL_23;
    case 4:
      *(_WORD *)double v33 = 0;
      *(_OWORD *)&v33[8] = 0u;
      long long v34 = 0u;
      int v35 = 0;
      uint64_t v36 = 0;
      uint64_t v37 = 0;
      int v38 = 0;
      uint64_t v31 = cnnavigation::TAITime::ToBeiDouTime(a1, (const cnnavigation::GNSSUTCParameters *)v33);
      double v32 = v19;
      *(double *)v20.i64 = (double)(uint64_t)floor(v19);
      *(double *)v21.i64 = v19 - *(double *)v20.i64;
      *(_OWORD *)double v33 = 0uLL;
      CNTimeSpan::SetTimeSpan((uint64_t *)v33, vcvtmd_s64_f64(v19) + 604800 * (int)v31, v21, v20);
      BOOL v22 = sub_18DEE4CB8((double *)v33, (double *)this + 6);
      uint64_t v23 = 64;
      if (v22) {
        uint64_t v23 = 40;
      }
      if (cnnavigation::BeiDouTimeToJulianTime((double *)&v31, *(_DWORD *)((char *)this + v23), a3)) {
        return 0xFFFFFFFFLL;
      }
      goto LABEL_23;
    case 6:
      *(_WORD *)double v33 = 0;
      *(_OWORD *)&v33[8] = 0u;
      long long v34 = 0u;
      int v35 = 0;
      uint64_t v36 = 0;
      uint64_t v37 = 0;
      int v38 = 0;
      uint64_t v31 = cnnavigation::TAITime::ToNavicTime(a1, (const cnnavigation::GNSSUTCParameters *)v33);
      double v32 = v24;
      *(double *)v25.i64 = (double)(uint64_t)floor(v24);
      *(double *)v26.i64 = v24 - *(double *)v25.i64;
      *(_OWORD *)double v33 = 0uLL;
      CNTimeSpan::SetTimeSpan((uint64_t *)v33, vcvtmd_s64_f64(v24) + 604800 * (int)v31, v26, v25);
      BOOL v27 = sub_18DEE4CB8((double *)v33, (double *)this + 6);
      uint64_t v30 = 64;
      if (v27) {
        uint64_t v30 = 40;
      }
      if (cnnavigation::NavicTimeToJulianTime((int *)&v31, *(_DWORD *)((char *)this + v30), a3, v28, v29)) {
        return 0xFFFFFFFFLL;
      }
LABEL_23:
      uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_18DEEA4A4(int *a1, int8x16_t a2, int8x16_t a3)
{
  a2.i64[0] = *((void *)a1 + 1);
  uint64_t v3 = vcvtmd_s64_f64(*(double *)a2.i64) + 604800 * *a1;
  *(double *)a3.i64 = (double)(uint64_t)floor(*(double *)a2.i64);
  *(double *)a2.i64 = *(double *)a2.i64 - *(double *)a3.i64;
  v5[0] = 0;
  v5[1] = 0;
  CNTimeSpan::SetTimeSpan(v5, v3, a2, a3);
  return v5[0];
}

uint64_t cnnavigation::GPSTimeToJulianTime(double *a1, int a2, uint64_t a3)
{
  int v3 = *(_DWORD *)a1;
  if ((*(_DWORD *)a1 & 0x80000000) != 0) {
    return 0xFFFFFFFFLL;
  }
  double v4 = a1[1];
  uint64_t result = 0xFFFFFFFFLL;
  if (v4 >= 0.0 && v4 < 604800.0)
  {
    uint64_t result = 0;
    int v6 = vcvtmd_s64_f64(v4 / 86400.0);
    double v7 = (v4 - (double)a2) / 86400.0 + 0.5 - (double)v6;
    *(_DWORD *)a3 = v6 - v3 + 8 * v3 + 2444244 + vcvtmd_s64_f64(v7);
    *(double *)(a3 + 8) = v7 - floor(v7);
  }
  return result;
}

double cnnavigation::DayOfYearTimeToJulianTime(double *a1, uint64_t a2)
{
  int v8 = *(_DWORD *)a1;
  long long v9 = xmmword_18E1EF950;
  uint64_t v10 = 0;
  if (!cnnavigation::GregorianTimeToJulianTime((uint64_t)&v8, (uint64_t)&v6))
  {
    double v5 = v7 + a1[1];
    *(_DWORD *)a2 = v6 + *((_DWORD *)a1 + 1) + vcvtmd_s64_f64(v5) - 1;
    double result = v5 - floor(v5);
    *(double *)(a2 + 8) = result;
  }
  return result;
}

uint64_t cnnavigation::GregorianTimeToJulianTime(uint64_t a1, uint64_t a2)
{
  int v2 = *(_DWORD *)a1;
  if (*(int *)a1 < -4712) {
    return 0xFFFFFFFFLL;
  }
  unsigned int v6 = *(_DWORD *)(a1 + 4);
  int v5 = *(_DWORD *)(a1 + 8);
  int v7 = *(_DWORD *)(a1 + 12);
  BOOL v10 = v7 < 12 && v5 == 1 && v6 == 1 && v2 == -4712;
  uint64_t result = 0xFFFFFFFFLL;
  if (!v10 && v6 - 13 >= 0xFFFFFFF4 && (v5 - 32) >= 0xFFFFFFE1 && v7 <= 0x17)
  {
    int v14 = *(_DWORD *)(a1 + 16);
    if (v14 <= 0x3B)
    {
      double v15 = *(double *)(a1 + 24);
      if (v15 >= 0.0 && v15 < 60.0)
      {
        uint64_t result = 0;
        BOOL v17 = v6 < 3;
        if (v6 < 3) {
          v6 += 12;
        }
        int v18 = v5
            + (v2 - v17) / -100
            + (v2 - v17) / 400
            + (int)((double)(int)(v6 + 1) * 30.6001)
            + (int)((double)(v2 - v17 + 4716) * 365.25);
        double v19 = v15 / 86400.0 + (double)(v7 - 12) / 24.0 + (double)v14 / 1440.0;
        if (v19 >= 0.0) {
          int v20 = -1524;
        }
        else {
          int v20 = -1525;
        }
        int v21 = v18 + v20 + 2;
        if (v19 < 0.0) {
          double v19 = v19 + 1.0;
        }
        *(_DWORD *)a2 = v21;
        *(double *)(a2 + 8) = v19;
      }
    }
  }
  return result;
}

double cnnavigation::JulianTimeToDayOfYearTime(uint64_t a1, uint64_t a2)
{
  double result = cnnavigation::JulianTimeToGregorianTime(a1, (uint64_t)&v9);
  if (!v5)
  {
    long long v10 = xmmword_18E1EF950;
    uint64_t v11 = 0;
    if (!cnnavigation::GregorianTimeToJulianTime((uint64_t)&v9, (uint64_t)&v7))
    {
      *(_DWORD *)a2 = v9;
      double v6 = *(double *)(a1 + 8) - v8;
      *(_DWORD *)(a2 + 4) = *(_DWORD *)a1 - v7 + vcvtmd_s64_f64(v6) + 1;
      double result = v6 - floor(v6);
      *(double *)(a2 + 8) = result;
    }
  }
  return result;
}

double cnnavigation::JulianTimeToGregorianTime(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)(a1 + 8);
  double v3 = floor(v2);
  double v4 = v3 + (double)*(int *)a1;
  double result = v2 - v3;
  double v6 = 0.5;
  if (result >= 0.5) {
    double v7 = 0.5;
  }
  else {
    double v7 = -0.5;
  }
  double v8 = v4 + v7;
  if (v8 >= 0.0)
  {
    if (result >= 0.5) {
      double v6 = -0.5;
    }
    double v9 = result + v6;
    double v10 = v8 + -1721119.5;
    double v11 = floor((v10 * 4.0 + 3.0) / 146097.0);
    double v12 = v10 - floor(v11 * 146097.0 * 0.25);
    double v13 = floor((v12 * 100.0 + 99.0) / 36525.0);
    double v14 = v12 - floor(v13 * 36525.0 / 100.0);
    double v15 = v13 + v11 * 100.0;
    double v16 = (v14 * 5.0 + 461.0) / 153.0;
    int v17 = (int)v15;
    int v18 = vcvtmd_s64_f64(v16);
    double v19 = v14 - floor((floor(v16) * 153.0 + -457.0) / 5.0) + 1.0;
    if (v18 > 12)
    {
      v18 -= 12;
      ++v17;
    }
    double v20 = v9 * 24.0;
    double v21 = v9 - floor(v9 * 24.0) / 24.0;
    unsigned int v22 = vcvtmd_s64_f64(v21 * 1440.0);
    *(_DWORD *)a2 = v17;
    *(_DWORD *)(a2 + 4) = v18;
    *(_DWORD *)(a2 + 8) = (int)v19;
    *(_DWORD *)(a2 + 12) = vcvtmd_s64_f64(v20);
    double result = (v21 - floor(v21 * 1440.0) / 1440.0) * 86400.0;
    *(_DWORD *)(a2 + 16) = v22;
    *(double *)(a2 + 24) = result;
  }
  return result;
}

uint64_t cnnavigation::JulianTimeToGPSTime(uint64_t a1, int a2, uint64_t a3)
{
  double v3 = *(double *)(a1 + 8) + -0.5;
  unsigned int v4 = *(_DWORD *)a1 - 2444244 + vcvtmd_s64_f64(v3);
  if ((v4 & 0x80000000) != 0) {
    return 0xFFFFFFFFLL;
  }
  *(_DWORD *)a3 = v4 / 7;
  double v5 = (v3 - floor(v3)) * 86400.0 + (double)(v4 % 7) * 86400.0 + (double)a2;
  *(double *)(a3 + 8) = v5;
  uint64_t result = 0;
  if (v5 >= 604800.0)
  {
    *(_DWORD *)a3 = v4 / 7 + 1;
    *(double *)(a3 + 8) = v5 + -604800.0;
  }
  return result;
}

uint64_t cnnavigation::iOSTimeToJulianTime(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1 / 86400;
  if ((int)v2 < -2451910) {
    return 0xFFFFFFFFLL;
  }
  double v3 = (*(double *)(a1 + 8) + (double)(*(void *)a1 % 86400)) / 86400.0 + 0.5;
  if (v3 + (double)((int)v2 + 2451910) < 0.0) {
    return 0xFFFFFFFFLL;
  }
  if (v3 >= 1.0)
  {
    uint64_t result = 0;
    *(_DWORD *)a2 = v2 + 2451911;
    double v5 = -1.0;
LABEL_11:
    double v3 = v3 + v5;
    goto LABEL_12;
  }
  if (v3 < 0.0)
  {
    uint64_t result = 0;
    if (v3 >= -1.0)
    {
      *(_DWORD *)a2 = v2 + 2451909;
      double v5 = 1.0;
    }
    else
    {
      *(_DWORD *)a2 = v2 + 2451908;
      double v5 = 2.0;
    }
    goto LABEL_11;
  }
  uint64_t result = 0;
  *(_DWORD *)a2 = v2 + 2451910;
LABEL_12:
  *(double *)(a2 + 8) = v3;
  return result;
}

double cnnavigation::JulianTimeToiOSTime(uint64_t a1, uint64_t a2, double result)
{
  int v3 = *(_DWORD *)a1;
  if ((*(_DWORD *)a1 & 0x80000000) == 0)
  {
    uint64_t result = *(double *)(a1 + 8);
    if (result + (double)v3 >= 0.0)
    {
      signed int v4 = v3 - 2451910 + vcvtmd_s64_f64(result);
      double v5 = (result - floor(result) + -0.5) * 86400.0;
      unint64_t v6 = vcvtmd_s64_f64(v5) + 86400 * v4;
      uint64_t result = v5 - floor(v5);
      *(void *)a2 = v6;
      *(double *)(a2 + 8) = result;
    }
  }
  return result;
}

double cnnavigation::DayOfYearTimeToiOSTime(double *a1, uint64_t a2)
{
  double result = cnnavigation::DayOfYearTimeToJulianTime(a1, (uint64_t)v5);
  if (!v4) {
    return cnnavigation::JulianTimeToiOSTime((uint64_t)v5, a2, result);
  }
  return result;
}

double cnnavigation::iOSTimeToDayOfYearTime(uint64_t a1, uint64_t a2)
{
  if (!cnnavigation::iOSTimeToJulianTime(a1, (uint64_t)v4)) {
    return cnnavigation::JulianTimeToDayOfYearTime((uint64_t)v4, a2);
  }
  return result;
}

void *cnnavigation::iOSTimeToLocalTime@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  time_t v6 = (uint64_t)(round(*(double *)(a1 + 8)) + (double)*(uint64_t *)a1) + 978307200;
  int v3 = localtime(&v6);
  if (v3 && strftime(v7, 0x50uLL, "%Y-%m-%d %H:%M:%S%z", v3)) {
    int v4 = v7;
  }
  else {
    int v4 = (char *)&unk_18E22DA69;
  }
  return sub_18DEDE7B0(a2, v4);
}

uint64_t cnnavigation::GPSPseudorange(uint64_t a1, double *a2, uint64_t a3, uint64_t a4, uint64_t a5, double *a6, double a7, double a8, double a9)
{
  return cnnavigation::GPSPseudorange(a1, a2, a3, a4, a5, a6, 0, v10, a7, a8, a9);
}

uint64_t cnnavigation::GPSPseudorange(uint64_t a1, double *a2, uint64_t a3, uint64_t a4, uint64_t a5, double *a6, int a7, float64x2_t *a8, double a9, double a10, double a11)
{
  int v17 = a1;
  double v18 = a9 - a11;
  double v38 = 0.0;
  if (cnnavigation::GPSTimeOfFlight(a1, a2, a3, a4, a5, &v38, (a7 & 1) != 0, v39.f64, a9 - a11, a10)) {
    return 0xFFFFFFFFLL;
  }
  double v37 = 0.0;
  double v19 = v38;
  if (cnnavigation::GPSSatelliteClockOffset(v17, a3, &v37, a7, (uint64_t)v36, v18 - v38, a10)) {
    return 0xFFFFFFFFLL;
  }
  *a6 = v37 * -299792458.0 + v19 * 299792458.0 + a11 * 299792458.0;
  uint64_t result = 0;
  if (a7)
  {
    _D2 = v36[0];
    double v22 = v41;
    double v23 = v41 * v36[0];
    double v24 = v36[0] * 299792458.0;
    _D7 = v39.f64[0];
    __asm { FMLS            D2, D2, V7.D[0] }
    _Q2.f64[1] = v36[1];
    float64x2_t v31 = (float64x2_t)vdupq_n_s64(0xC1B1DE784A000000);
    float64x2_t v32 = vmulq_f64(_Q2, v31);
    float64x2_t v33 = vmulq_f64(vmulq_n_f64(v40, -v36[0]), v31);
    float64x2_t v34 = (float64x2_t)vdupq_n_s64(0x41B1DE784A000000uLL);
    float64x2_t v35 = vmlaq_f64(v33, v34, v40);
    *a8 = vmlaq_f64(v32, v34, v39);
    a8[1] = v35;
    a8[2].f64[0] = v23 * 299792458.0 + v22 * 299792458.0;
    a8[2].f64[1] = vmlad_n_f64(v24, -299792458.0, _D7) + 299792458.0;
  }
  return result;
}

uint64_t cnnavigation::GPSPseudorange(uint64_t a1, double *a2, uint64_t a3, uint64_t a4, uint64_t a5, double *a6, float64x2_t *a7, double a8, double a9, double a10)
{
  return cnnavigation::GPSPseudorange(a1, a2, a3, a4, a5, a6, 1, a7, a8, a9, a10);
}

double cnnavigation::GalileoEphemerides::GalileoSignalInSpaceAccuracy(cnnavigation::GalileoEphemerides *this)
{
  if (this != 255)
  {
    if (this <= 0x31) {
      return (double)this * 0.01;
    }
    if (this <= 0x4A)
    {
      double v2 = (double)((int)this - 50);
      double v3 = 0.02;
      double v4 = 0.5;
      return v4 + v2 * v3;
    }
    if (this <= 0x63)
    {
      double v2 = (double)((int)this - 75);
      double v3 = 0.04;
      double v4 = 1.0;
      return v4 + v2 * v3;
    }
    if (this <= 0x7D)
    {
      double v2 = (double)((int)this - 100);
      double v3 = 0.16;
      double v4 = 2.0;
      return v4 + v2 * v3;
    }
  }
  return NAN;
}

uint64_t cnnavigation::GalileoEphemerides::GNSSFindSat(uint64_t a1, cnnavigation::TAITime *this, cnnavigation::GNSSUTCParameters *a3, double *a4, double *a5, double *a6)
{
  if (*(unsigned char *)(a1 + 32) != 3) {
    return 0xFFFFFFFFLL;
  }
  if (!*(unsigned char *)(a1 + 40)) {
    return 0xFFFFFFFFLL;
  }
  int v10 = cnnavigation::TAITime::ToGalileoTime(this, a3);
  double v12 = *(double *)(a1 + 112);
  if (fabs(v12) < 2.22044605e-16 || (*(void *)&v12 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL) {
    return 0xFFFFFFFFLL;
  }
  int v13 = v10;
  double v14 = *(double *)(a1 + 104);
  uint64_t result = 0xFFFFFFFFLL;
  if (v14 >= 0.0 && v14 < 1.0 && (*(void *)&v14 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL)
  {
    double v16 = *(double *)(a1 + 136);
    double v70 = *(double *)(a1 + 128);
    double v71 = *(double *)(a1 + 144);
    double v72 = *(double *)(a1 + 120);
    double v85 = *(double *)(a1 + 152);
    double v17 = *(double *)(a1 + 176);
    double v80 = *(double *)(a1 + 160);
    double v81 = *(double *)(a1 + 168);
    double v82 = *(double *)(a1 + 184);
    double v83 = *(double *)(a1 + 192);
    double v84 = *(double *)(a1 + 200);
    double v75 = *(double *)(a1 + 56);
    double v79 = v12 * v12;
    double v78 = *(double *)(a1 + 96) + 19964980.4 / (v12 * (v12 * v12));
    double v68 = v11 - v75 + (double)(v13 - *(_DWORD *)(a1 + 48)) * 604800.0;
    double v18 = *(double *)(a1 + 88) + v78 * v68;
    int v19 = 10;
    double v20 = v18;
    do
    {
      double v21 = sin(v20);
      double v20 = v18 + v14 * v21;
      --v19;
    }
    while (v19);
    double v77 = sqrt(1.0 - v14 * v14);
    double v74 = cos(v20);
    long double v22 = v16 + atan2(v77 * v21, v74 - v14);
    __double2 v23 = __sincos_stret(v22 + v22);
    double sinval = v23.__sinval;
    double cosval = v23.__cosval;
    double v26 = v22 + v80 * v23.__cosval + v81 * v23.__sinval;
    double v27 = 1.0 - v14 * v74;
    double v76 = v17;
    double v28 = v79 * v27 + v17 * v23.__cosval + v82 * v23.__sinval;
    double v29 = v70 + v85 * v68 + v83 * v23.__cosval + v84 * v23.__sinval;
    double v30 = v71 + -0.0000729211515;
    double v69 = v72 + (v71 + -0.0000729211515) * v68 + v75 * -0.0000729211515;
    __double2 v31 = __sincos_stret(v26);
    double v73 = v28 * v31.__cosval;
    double v32 = v28 * v31.__sinval;
    __double2 v33 = __sincos_stret(v29);
    __double2 v36 = __sincos_stret(v69);
    double v35 = v36.__cosval;
    double v34 = v36.__sinval;
    uint64_t result = 0;
    double v37 = -(v33.__cosval * v32 * v36.__sinval);
    double v38 = v77 * (v78 / v27) / v27;
    double v39 = v78 / v27 * (v21 * (v14 * (-v78 / (v27 * v27))));
    double v40 = v81 * cosval - v80 * sinval + v81 * cosval - v80 * sinval;
    double v41 = v38 + v40 * v38;
    double v42 = v82 * cosval - v76 * sinval + v82 * cosval - v76 * sinval;
    double v43 = v14 * v79 * v21 * (v78 / v27) + v42 * v38;
    double v44 = v84 * cosval - v83 * sinval + v84 * cosval - v83 * sinval;
    double v45 = v85 + v44 * v38;
    double v46 = v43 * v31.__cosval - v32 * v41;
    double v47 = v77 * (v39 / v27 + v21 * (v14 * (-(v78 / v27) / (v27 * v27))) * (v78 / v27));
    double v48 = v47 + v40 * v47 + v38 * ((-(v81 * v23.__sinval) - v80 * v23.__cosval) * 4.0) * v38;
    double v49 = v73 * v41 + v43 * v31.__sinval;
    double v50 = v14 * v79 * (v78 / v27 * (v74 * (v78 / v27)) + v21 * v39) + v42 * v47;
    double v51 = v45 * (v33.__sinval * v32);
    double v52 = v50 + v38 * ((-(v82 * v23.__sinval) - v76 * v23.__cosval) * 4.0) * v38;
    double v53 = (v71 + -0.0000729211515) * (v36.__cosval * v73);
    double v54 = v45 * (v33.__cosval * v32);
    double v55 = v38 * (v38 * ((-(v84 * v23.__sinval) - v83 * v23.__cosval) * 4.0)) + v44 * v47;
    double v56 = v52 * v31.__cosval - v31.__sinval * v43 * v41 - (v41 * (v73 * v41) + v31.__sinval * v43 * v41 + v32 * v48);
    double v57 = v41 * (v31.__cosval * v43) + v52 * v31.__sinval + v41 * -(v32 * v41) + v31.__cosval * v43 * v41 + v73 * v48;
    double v58 = v30 * v53 + v36.__sinval * v46 * v30;
    double v59 = v45 * (v33.__sinval * v49);
    double v60 = v36.__cosval * (v33.__cosval * v49);
    double v61 = v33.__cosval * v57 * v34 - v59 * v34 + v60 * (v71 + -0.0000729211515);
    double v62 = v34 * (v45 * v54) + v59 * v34 + v33.__sinval * v32 * v55 * v34 + v36.__cosval * v51 * (v71 + -0.0000729211515);
    double v63 = v33.__cosval * v57 * v35 - v59 * v35;
    double v64 = v53 + v46 * v36.__sinval + v33.__cosval * v49 * v35 - v51 * v35 + v37 * (v71 + -0.0000729211515);
    double v65 = v35 * (v45 * v54) + v59 * v35 + v33.__sinval * v32 * v55 * v35;
    double v66 = (v71 + -0.0000729211515) * -(v73 * v36.__sinval);
    double v67 = v36.__cosval * (v33.__cosval * v32);
    *a4 = v73 * v36.__cosval - v33.__cosval * v32 * v36.__sinval;
    a4[1] = v67 + v73 * v36.__sinval;
    a4[2] = v33.__sinval * v32;
    *a5 = v66
        + v46 * v36.__cosval
        - v33.__cosval * v49 * v36.__sinval
        + v51 * v36.__sinval
        - v67 * (v71 + -0.0000729211515);
    a5[1] = v64;
    a5[2] = v54 + v49 * v33.__sinval;
    *a6 = v62
        + v56 * v36.__cosval
        - v36.__sinval * v46 * (v71 + -0.0000729211515)
        - v58
        - v61
        - (v60 * (v71 + -0.0000729211515)
         - v36.__cosval * v51 * (v71 + -0.0000729211515)
         + (v71 + -0.0000729211515) * v37 * (v71 + -0.0000729211515));
    a6[1] = v30 * v66
          + v36.__cosval * v46 * v30
          + (v71 + -0.0000729211515) * (v36.__cosval * v46)
          + v56 * v36.__sinval
          + v63
          - v36.__sinval * (v33.__cosval * v49) * v30
          - (v65
           + -(v51 * v36.__sinval) * v30)
          - (v30 * -(v51 * v36.__sinval)
           + v36.__sinval * (v33.__cosval * v49) * v30
           + v30 * v67 * v30);
    a6[2] = v33.__cosval * v49 * v45
          - v51 * v45
          + v33.__cosval * v32 * v55
          + v45 * (v33.__cosval * v49)
          + v57 * v33.__sinval;
  }
  return result;
}

uint64_t cnnavigation::GalileoEphemerides::GNSSSatelliteClockOffset(uint64_t a1, cnnavigation::TAITime *this, cnnavigation::GNSSUTCParameters *a3, double *a4, int a5, double *a6, double a7)
{
  if (*(unsigned char *)(a1 + 32) != 3) {
    return 0xFFFFFFFFLL;
  }
  if (!*(unsigned char *)(a1 + 40)) {
    return 0xFFFFFFFFLL;
  }
  int v13 = cnnavigation::TAITime::ToGalileoTime(this, a3);
  double v15 = *(double *)(a1 + 112);
  if (fabs(v15) < 2.22044605e-16 || (*(void *)&v15 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL) {
    return 0xFFFFFFFFLL;
  }
  int v16 = v13;
  double v17 = *(double *)(a1 + 104);
  uint64_t result = 0xFFFFFFFFLL;
  if (v17 < 0.0 || v17 >= 1.0 || (*(void *)&v17 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL) {
    return result;
  }
  double v19 = v14;
  double v20 = v14 - *(double *)(a1 + 72) + (double)(v16 - *(_DWORD *)(a1 + 64)) * 604800.0;
  double v45 = *(double *)(a1 + 216);
  double v44 = *(double *)(a1 + 224);
  double v21 = *(double *)(a1 + 208) + v45 * v20 + v44 * (v20 * v20);
  double v22 = *(double *)(a1 + 96) + 19964980.4 / (v15 * (v15 * v15));
  double v23 = *(double *)(a1 + 88) + v22 * (v14 - *(double *)(a1 + 56) + (double)(v16 - *(_DWORD *)(a1 + 48)) * 604800.0);
  int v24 = 10;
  long double v25 = v23;
  do
  {
    long double v25 = v23 + v17 * sin(v25);
    --v24;
  }
  while (v24);
  if (a7 <= 0.0 || (*(void *)&a7 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL) {
    return 0xFFFFFFFFLL;
  }
  double v26 = v15 * -4.44280731e-10;
  double v27 = 1.0;
  double v28 = 0.0;
  if (!*(unsigned char *)(a1 + 248))
  {
    if (*(unsigned char *)(a1 + 249) || fabs(a7 + -1207140000.0) <= 0.000000015)
    {
      if (*(unsigned char *)(a1 + 250) || fabs(a7 + -1176450000.0) <= 0.000000015) {
        goto LABEL_22;
      }
      double v27 = 1575420000.0 / a7 * (1575420000.0 / a7);
      double v29 = (double *)(a1 + 240);
    }
    else
    {
      double v27 = 1575420000.0 / a7 * (1575420000.0 / a7);
      double v29 = (double *)(a1 + 232);
    }
    double v28 = *v29;
  }
LABEL_22:
  double v30 = v21 + v15 * -4.44280731e-10 * (v25 - v23);
  double v31 = v28 * v27;
  if (a5)
  {
    double v21 = (v27 + v27) / a7 * v28;
    double v43 = v45 + (v44 + v44) * v20 + v26 * (v22 / (1.0 - v17 * cos(v25))) - v26 * v22;
  }
  double v32 = v30 - v31;
  if (cnnavigation::GNSSUTCParameters::IsValid(a3) && *((unsigned char *)a3 + 1) == 3)
  {
    v46[0] = 0;
    v46[1] = 0;
    *(double *)v33.i64 = v19;
    CNTimeSpan::SetTimeSpan(v46, 604800 * v16, v33, v34);
    double v35 = *((double *)a3 + 1);
    double v36 = *((double *)a3 + 2);
    uint64_t v39 = CNTimeSpan::operator-((uint64_t)v46, (void *)a3 + 3, v37, v38);
    *a4 = v32 - (v35 + v36 * (v40 + (double)v39));
    if (a5)
    {
      double v41 = *((double *)a3 + 2);
      double v42 = 1.0 / (1.0 - v41);
      *a6 = (v43 - v41) * v42;
      a6[1] = v21 / v42;
    }
  }
  else
  {
    *a4 = v32;
    if (a5)
    {
      uint64_t result = 0;
      *a6 = v43;
      a6[1] = v21;
      return result;
    }
  }
  return 0;
}

uint64_t cnnavigation::GalileoEphemerides::GNSSSatelliteClockOffsetRate(uint64_t a1, cnnavigation::TAITime *this, cnnavigation::GNSSUTCParameters *a3, double *a4, int a5, uint64_t a6)
{
  if (*(unsigned char *)(a1 + 32) != 3) {
    return 0xFFFFFFFFLL;
  }
  if (!*(unsigned char *)(a1 + 40)) {
    return 0xFFFFFFFFLL;
  }
  int v11 = cnnavigation::TAITime::ToGalileoTime(this, a3);
  double v13 = *(double *)(a1 + 112);
  if (fabs(v13) < 2.22044605e-16 || (*(void *)&v13 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL) {
    return 0xFFFFFFFFLL;
  }
  double v14 = *(double *)(a1 + 104);
  BOOL v15 = v14 >= 0.0 && v14 < 1.0;
  if (!v15 || (*(void *)&v14 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL) {
    return 0xFFFFFFFFLL;
  }
  double v16 = v12 - *(double *)(a1 + 72) + (double)(v11 - *(_DWORD *)(a1 + 64)) * 604800.0;
  double v17 = *(double *)(a1 + 96) + 19964980.4 / (v13 * (v13 * v13));
  double v18 = *(double *)(a1 + 88) + v17 * (v12 - *(double *)(a1 + 56) + (double)(v11 - *(_DWORD *)(a1 + 48)) * 604800.0);
  int v19 = 10;
  double v20 = v18;
  do
  {
    double v21 = sin(v20);
    double v20 = v18 + v14 * v21;
    --v19;
  }
  while (v19);
  double v22 = *(double *)(a1 + 224) + *(double *)(a1 + 224);
  double v23 = *(double *)(a1 + 216) + v22 * v16;
  double v24 = 1.0 - v14 * cos(v18 + v14 * v21);
  double v25 = v13 * -4.44280731e-10 * (v17 / v24 - v17);
  if (a5) {
    double v13 = v13 * -4.44280731e-10 * (v17 / v24 * ((v18 - v20) * (v17 / v24)) / v24) + v13 * -4.44280731e-10 * -0.0 + v22;
  }
  double v26 = v25 + v23;
  if (cnnavigation::GNSSUTCParameters::IsValid(a3) && *((unsigned char *)a3 + 1) == 3)
  {
    double v27 = *((double *)a3 + 2);
    double v28 = 1.0 / (1.0 - v27);
    *a4 = (v26 - v27) * v28;
    if (a5)
    {
      double v13 = v13 * (v28 * v28);
LABEL_21:
      uint64_t result = 0;
      *(double *)a6 = v13;
      *(void *)(a6 + 8) = 0;
      return result;
    }
  }
  else
  {
    *a4 = v26;
    if (a5) {
      goto LABEL_21;
    }
  }
  return 0;
}

uint64_t sub_18DEEB960(uint64_t a1)
{
  *(void *)a1 = &unk_1EDD0ACA8;
  if (*(char *)(a1 + 31) < 0) {
    operator delete(*(void **)(a1 + 8));
  }
  *(void *)a1 = &unk_1EDD0A9B8;
  return a1;
}

void sub_18DEEB9CC(uint64_t a1)
{
  *(void *)a1 = &unk_1EDD0ACA8;
  if (*(char *)(a1 + 31) < 0) {
    operator delete(*(void **)(a1 + 8));
  }
  *(void *)a1 = &unk_1EDD0A9B8;

  JUMPOUT(0x192FA6240);
}

uint64_t cnnavigation::GLONASSEphemerides::GNSSFindSat(uint64_t a1, uint64_t a2, cnnavigation::GNSSUTCParameters *this, float64x2_t *a4, double *a5, double *a6)
{
  uint64_t v43 = *MEMORY[0x1E4F143B8];
  int v33 = 1;
  double v34 = 0.0;
  if (cnnavigation::TAITime::ToGLONASSTime(a2, this, (uint64_t)&v33)) {
    return 0xFFFFFFFFLL;
  }
  int v14 = v33;
  double v15 = v34;
  v32[0] = 0;
  v32[1] = 0;
  *(double *)v11.i64 = v34;
  CNTimeSpan::SetTimeSpan(v32, 86400 * (v33 - 1), v11, v12);
  BOOL v16 = sub_18DEE4C00((double *)v32, (double *)this + 6);
  uint64_t v17 = 40;
  if (v16) {
    uint64_t v17 = 64;
  }
  uint64_t result = cnnavigation::GLONASSFindSat(v14, a1, v41.f64, &v38, &v35, v15, (double)*(int *)((char *)this + v17));
  if (!result)
  {
    uint64_t v18 = 0;
    double v19 = v42 + 0.18;
    double v20 = 0.0;
    double v21 = v38 + v39 * 0.0 + v40 * 0.0;
    double v22 = v39 + v38 * 0.0 + v40 * 0.0;
    double v23 = v40 + v39 * 0.0 + v38 * 0.0;
    double v24 = v36 * 0.0 + v35 * 0.0;
    double v25 = v37;
    double v26 = v35 + v36 * 0.0 + v37 * 0.0;
    double v27 = v36 + v35 * 0.0 + v37 * 0.0;
    *a4 = vaddq_f64(v41, (float64x2_t)xmmword_18E1EFA00);
    a4[1].f64[0] = v19;
    *a5 = v21;
    a5[1] = v22;
    a5[2] = v23;
    *a6 = v26;
    a6[1] = v27;
    a6[2] = v25 + v24;
    do
    {
      double v20 = v20 + a4->f64[v18] * a4->f64[v18];
      ++v18;
    }
    while (v18 != 3);
    if (sqrt(v20) < 6341752.3) {
      return 0xFFFFFFFFLL;
    }
    BOOL IsValid = cnnavigation::GNSSUTCParameters::IsValid(this);
    uint64_t result = 0;
    if (IsValid && *((unsigned char *)this + 1) == 2)
    {
      uint64_t v29 = 0;
      double v30 = 1.0 / (1.0 - *((double *)this + 2));
      do
      {
        a5[v29] = v30 * a5[v29];
        ++v29;
      }
      while (v29 != 3);
      for (uint64_t i = 0; i != 3; ++i)
        a6[i] = v30 * a6[i];
      return 0;
    }
  }
  return result;
}

uint64_t cnnavigation::GLONASSEphemerides::GNSSSatelliteClockOffset(uint64_t a1, uint64_t a2, cnnavigation::GNSSUTCParameters *this, double *a4, int a5, double *a6, double a7)
{
  int v36 = 1;
  double v37 = 0.0;
  if (cnnavigation::TAITime::ToGLONASSTime(a2, this, (uint64_t)&v36)) {
    return 0xFFFFFFFFLL;
  }
  int v16 = v36;
  double v17 = v37;
  v35[0] = 0;
  v35[1] = 0;
  *(double *)v13.i64 = v37;
  CNTimeSpan::SetTimeSpan(v35, 86400 * (v36 - 1), v13, v14);
  BOOL v18 = sub_18DEE4C00((double *)v35, (double *)this + 6);
  uint64_t v19 = 40;
  if (v18) {
    uint64_t v19 = 64;
  }
  double v20 = (double)*(int *)((char *)this + v19);
  double v34 = 0.0;
  uint64_t v15 = cnnavigation::GLONASSSatelliteClockOffset(v16, a1, &v34, a5, (uint64_t)&v32, v17, v20, a7);
  if (!v15)
  {
    if (cnnavigation::GNSSUTCParameters::IsValid(this) && *((unsigned char *)this + 1) == 2)
    {
      double v23 = *((double *)this + 1);
      double v24 = *((double *)this + 2);
      uint64_t v25 = CNTimeSpan::operator-((uint64_t)v35, (void *)this + 3, v21, v22);
      *a4 = v34 - (v23 + v24 * (v26 + (double)v25));
      if (!a5) {
        return v15;
      }
      double v27 = *((double *)this + 2);
      double v28 = 1.0 / (1.0 - v27);
      double v29 = v33;
      *a6 = (v32 - v27) * v28;
      double v30 = v29 / v28;
    }
    else
    {
      *a4 = v34;
      if (!a5) {
        return v15;
      }
      double v30 = v33;
      *a6 = v32;
    }
    a6[1] = v30;
  }
  return v15;
}

uint64_t cnnavigation::GLONASSEphemerides::GNSSSatelliteClockOffsetRate(uint64_t a1, uint64_t a2, cnnavigation::GNSSUTCParameters *this, double *a4, int a5, uint64_t a6)
{
  int v19 = 1;
  double v20 = 0.0;
  if (cnnavigation::TAITime::ToGLONASSTime(a2, this, (uint64_t)&v19)) {
    return 0xFFFFFFFFLL;
  }
  *(double *)v11.i64 = v20;
  v18[0] = 0;
  v18[1] = 0;
  CNTimeSpan::SetTimeSpan(v18, 86400 * (v19 - 1), v11, v12);
  sub_18DEE4C00((double *)v18, (double *)this + 6);
  if (!*(unsigned char *)(a1 + 16)) {
    return 0xFFFFFFFFLL;
  }
  double v14 = *(double *)(a1 + 112);
  if (cnnavigation::GNSSUTCParameters::IsValid(this) && *((unsigned char *)this + 1) == 2)
  {
    double v15 = *((double *)this + 2);
    double v16 = 1.0 / (1.0 - v15);
    *a4 = (v14 - v15) * v16;
    if (a5)
    {
      double v17 = v16 * v16 * -0.0;
LABEL_10:
      uint64_t result = 0;
      *(double *)a6 = v17;
      *(void *)(a6 + 8) = 0;
      return result;
    }
  }
  else
  {
    *a4 = v14;
    if (a5)
    {
      double v17 = -0.0;
      goto LABEL_10;
    }
  }
  return 0;
}

void *sub_18DEEBF2C(void *result)
{
  *uint64_t result = &unk_1EDD0A9B8;
  return result;
}

void sub_18DEEBF4C(void *a1)
{
  *a1 = &unk_1EDD0A9B8;
  JUMPOUT(0x192FA6240);
}

uint64_t cnnavigation::GLONASSPseudorange(int a1, double *a2, uint64_t a3, uint64_t a4, uint64_t a5, double *a6, double a7, double a8, double a9, double a10)
{
  return cnnavigation::GLONASSPseudorange(a1, a2, a3, a4, a5, a6, 0, v11, a7, a8, a9, a10);
}

uint64_t cnnavigation::GLONASSPseudorange(int a1, double *a2, uint64_t a3, uint64_t a4, uint64_t a5, double *a6, int a7, float64x2_t *a8, double a9, double a10, double a11, double a12)
{
  double v20 = a9 - a12;
  double v40 = 0.0;
  uint64_t result = cnnavigation::GLONASSTimeOfFlight(a1, a2, a3, a4, a5, &v40, (a7 & 1) != 0, v41.f64, a9 - a12, a10, a11);
  if (!result)
  {
    double v39 = 0.0;
    double v22 = v40;
    if (cnnavigation::GLONASSSatelliteClockOffset(a1, a3, &v39, a7, (uint64_t)v38, v20 - v40, a10, a11))
    {
      return 0xFFFFFFFFLL;
    }
    else
    {
      *a6 = v39 * -299792458.0 + v22 * 299792458.0 + a12 * 299792458.0;
      uint64_t result = 0;
      if (a7)
      {
        _D2 = v38[0];
        double v24 = v43;
        double v25 = v43 * v38[0];
        double v26 = v38[0] * 299792458.0;
        _D7 = v41.f64[0];
        __asm { FMLS            D2, D2, V7.D[0] }
        _Q2.f64[1] = v38[1];
        float64x2_t v33 = (float64x2_t)vdupq_n_s64(0xC1B1DE784A000000);
        float64x2_t v34 = vmulq_f64(_Q2, v33);
        float64x2_t v35 = vmulq_f64(vmulq_n_f64(v42, -v38[0]), v33);
        float64x2_t v36 = (float64x2_t)vdupq_n_s64(0x41B1DE784A000000uLL);
        float64x2_t v37 = vmlaq_f64(v35, v36, v42);
        *a8 = vmlaq_f64(v34, v36, v41);
        a8[1] = v37;
        a8[2].f64[0] = v25 * 299792458.0 + v24 * 299792458.0;
        a8[2].f64[1] = vmlad_n_f64(v26, -299792458.0, _D7) + 299792458.0;
      }
    }
  }
  return result;
}

uint64_t cnnavigation::GLONASSPseudorange(int a1, double *a2, uint64_t a3, uint64_t a4, uint64_t a5, double *a6, float64x2_t *a7, double a8, double a9, double a10, double a11)
{
  return cnnavigation::GLONASSPseudorange(a1, a2, a3, a4, a5, a6, 1, a7, a8, a9, a10, a11);
}

double cnnavigation::KlobucharModelParameters::KlobucharModelParameters(cnnavigation::KlobucharModelParameters *this)
{
  *(void *)this = &unk_1EDD0B000;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = xmmword_18E1EFA40;
  double result = -0.0007;
  *(_OWORD *)((char *)this + 56) = xmmword_18E1EFA50;
  *((unsigned char *)this + 72) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD0B000;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = xmmword_18E1EFA40;
  double result = -0.0007;
  *(_OWORD *)((char *)this + 56) = xmmword_18E1EFA50;
  *((unsigned char *)this + 72) = 0;
  return result;
}

double cnnavigation::KlobucharModelParameters::KlobucharModelParameters(cnnavigation::KlobucharModelParameters *this, double *a2, double *a3)
{
  *(void *)this = &unk_1EDD0B000;
  *((double *)this + 1) = *a2;
  *((double *)this + 2) = a2[1];
  *((double *)this + 3) = a2[2];
  *((double *)this + 4) = a2[3];
  *((double *)this + 5) = *a3;
  *((double *)this + 6) = a3[1];
  *((double *)this + 7) = a3[2];
  double result = a3[3];
  *((double *)this + 8) = result;
  *((unsigned char *)this + 72) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD0B000;
  *((double *)this + 1) = *a2;
  *((double *)this + 2) = a2[1];
  *((double *)this + 3) = a2[2];
  *((double *)this + 4) = a2[3];
  *((double *)this + 5) = *a3;
  *((double *)this + 6) = a3[1];
  *((double *)this + 7) = a3[2];
  double result = a3[3];
  *((double *)this + 8) = result;
  *((unsigned char *)this + 72) = 0;
  return result;
}

__n128 cnnavigation::KlobucharModelParameters::KlobucharModelParameters(cnnavigation::KlobucharModelParameters *this, const cnnavigation::KlobucharModelParameters *a2)
{
  *(void *)this = &unk_1EDD0B000;
  *(_OWORD *)((char *)this + 8) = *(_OWORD *)((char *)a2 + 8);
  *(_OWORD *)((char *)this + 24) = *(_OWORD *)((char *)a2 + 24);
  *(_OWORD *)((char *)this + 40) = *(_OWORD *)((char *)a2 + 40);
  __n128 result = *(__n128 *)((char *)a2 + 56);
  *(__n128 *)((char *)this + 56) = result;
  *((unsigned char *)this + 72) = *((unsigned char *)a2 + 72);
  return result;
}

{
  __n128 result;

  *(void *)this = &unk_1EDD0B000;
  *(_OWORD *)((char *)this + 8) = *(_OWORD *)((char *)a2 + 8);
  *(_OWORD *)((char *)this + 24) = *(_OWORD *)((char *)a2 + 24);
  *(_OWORD *)((char *)this + 40) = *(_OWORD *)((char *)a2 + 40);
  __n128 result = *(__n128 *)((char *)a2 + 56);
  *(__n128 *)((char *)this + 56) = result;
  *((unsigned char *)this + 72) = *((unsigned char *)a2 + 72);
  return result;
}

void cnnavigation::KlobucharModelParameters::~KlobucharModelParameters(cnnavigation::KlobucharModelParameters *this)
{
}

__n128 cnnavigation::KlobucharModelParameters::operator=(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    __n128 result = *(__n128 *)(a2 + 56);
    *(__n128 *)(a1 + 56) = result;
    *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  }
  return result;
}

double cnnavigation::KlobucharIonosphereModel::KlobucharIonosphereModel(cnnavigation::KlobucharIonosphereModel *this)
{
  *(void *)this = &unk_1EDD0AFC8;
  *((void *)this + 1) = &unk_1EDD0B000;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  double result = 0.0008;
  *((_OWORD *)this + 3) = xmmword_18E1EFA40;
  *((_OWORD *)this + 4) = xmmword_18E1EFA50;
  *((unsigned char *)this + 80) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD0AFC8;
  *((void *)this + 1) = &unk_1EDD0B000;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  double result = 0.0008;
  *((_OWORD *)this + 3) = xmmword_18E1EFA40;
  *((_OWORD *)this + 4) = xmmword_18E1EFA50;
  *((unsigned char *)this + 80) = 0;
  return result;
}

__n128 cnnavigation::KlobucharIonosphereModel::KlobucharIonosphereModel(__n128 *this, const cnnavigation::KlobucharModelParameters *a2)
{
  this->n128_u64[0] = (unint64_t)&unk_1EDD0AFC8;
  this->n128_u64[1] = (unint64_t)&unk_1EDD0B000;
  this[1] = *(__n128 *)((char *)a2 + 8);
  this[2] = *(__n128 *)((char *)a2 + 24);
  this[3] = *(__n128 *)((char *)a2 + 40);
  __n128 result = *(__n128 *)((char *)a2 + 56);
  this[4] = result;
  this[5].n128_u8[0] = *((unsigned char *)a2 + 72);
  return result;
}

void cnnavigation::KlobucharIonosphereModel::~KlobucharIonosphereModel(cnnavigation::KlobucharIonosphereModel *this)
{
  *(void *)this = &unk_1EDD0AA58;
}

{
  *(void *)this = &unk_1EDD0AA58;
}

{
  *(void *)this = &unk_1EDD0AA58;
  JUMPOUT(0x192FA6240);
}

uint64_t cnnavigation::KlobucharIonosphereModel::GetIonosphericDelay(cnnavigation::KlobucharIonosphereModel *this, uint64_t a2, double a3, const double *a4, const double *a5, double a6, double *a7)
{
  return cnnavigation::KlobucharIonosphereModel::GetIonosphericDelay((uint64_t)this, a3, a6, a2, (uint64_t)a4, (uint64_t)a5, a7, 0, (uint64_t)&v8);
}

uint64_t cnnavigation::KlobucharIonosphereModel::GetIonosphericDelay(uint64_t a1, double a2, double a3, uint64_t a4, uint64_t a5, uint64_t a6, double *a7, int a8, uint64_t a9)
{
  uint64_t v102 = *MEMORY[0x1E4F143B8];
  if (!*(unsigned char *)(a1 + 80)) {
    return 0xFFFFFFFFLL;
  }
  char v10 = a8;
  if (a8)
  {
    uint64_t v16 = cnnavigation::SatElAz(a5, a6, 1, (uint64_t)&v100, 1, (uint64_t)&v91);
    if (v16) {
      return v16;
    }
    double v18 = v100;
    double v17 = v101;
    int v19 = &v87;
    double v20 = (float64x2_t *)a5;
    int v21 = 1;
  }
  else
  {
    uint64_t v16 = cnnavigation::SatElAz(a5, a6, 1, (uint64_t)&v100, 0, (uint64_t)&v91);
    if (v16) {
      return v16;
    }
    double v18 = v100;
    double v17 = v101;
    int v19 = &v91;
    double v20 = (float64x2_t *)a5;
    int v21 = 0;
  }
  uint64_t v16 = cnnavigation::ECEFToLLA(v20, 1, v99, v21, (uint64_t)v19);
  if (!v16)
  {
    double v85 = v18 / 3.14159265;
    double v22 = v99[0] / 3.14159265;
    double v23 = v99[1] / 3.14159265;
    double v84 = v85 + 0.11;
    double v24 = 0.0137 / (v85 + 0.11) + -0.022;
    __double2 v25 = __sincos_stret(v17);
    double v26 = 0.416;
    if (v22 + v24 * v25.__cosval <= 0.416) {
      double v26 = v22 + v24 * v25.__cosval;
    }
    if (v26 >= -0.416) {
      double v27 = v26;
    }
    else {
      double v27 = -0.416;
    }
    double __x = v27 * 3.14159265;
    double v81 = cos(v27 * 3.14159265);
    double v28 = v23 + v25.__sinval * v24 / v81;
    double v83 = v27;
    double v29 = v27 + cos((v28 + -1.617) * 3.14159265) * 0.064;
    double v30 = fmod(a2 + v28 * 43200.0, 86400.0);
    if (v30 < 0.0) {
      double v30 = v30 + 86400.0;
    }
    if (v30 >= 86400.0) {
      double v31 = v30 + -86400.0;
    }
    else {
      double v31 = v30;
    }
    double v32 = *(double *)(a1 + 48)
        + v29 * (*(double *)(a1 + 56) + *(double *)(a1 + 64) * v29 + *(double *)(a1 + 72) * v29 * v29);
    if (v32 < 72000.0) {
      double v32 = 72000.0;
    }
    double v33 = (v31 + -50400.0) * 6.28318531 / v32;
    double v34 = *(double *)(a1 + 24) + *(double *)(a1 + 32) * v29 + *(double *)(a1 + 40) * v29 * v29;
    double v35 = 0.0;
    if (*(double *)(a1 + 16) + v29 * v34 >= 0.0) {
      double v36 = *(double *)(a1 + 16) + v29 * v34;
    }
    else {
      double v36 = 0.0;
    }
    double v37 = 0.53 - v85;
    double v38 = (0.53 - v85) * ((0.53 - v85) * 16.0) * (0.53 - v85) + 1.0;
    if (fabs(v33) >= 1.57)
    {
      double v41 = 1575420000.0 / a3 * (1575420000.0 / a3) * (v38 * 0.000000005);
      *a7 = v41;
      double v43 = 0.0;
      if ((v10 & 1) == 0) {
        return v16;
      }
    }
    else
    {
      double v39 = v33 * v33 * (v33 * v33 / 24.0 + -0.5) + 1.0;
      double v40 = 1575420000.0 / a3 * (1575420000.0 / a3);
      double v41 = v40 * (v38 * (v36 * v39 + 0.000000005));
      *a7 = v41;
      if ((v10 & 1) == 0) {
        return v16;
      }
      double v42 = v40 * v38;
      double v43 = v42 * v36 * v33 * (v33 * v33 / 6.0 + -1.0);
      double v35 = v42 * v39;
    }
    double v80 = v43;
    double v86 = v35;
    double v44 = 0.0;
    BOOL v45 = v36 < 0.0;
    double v46 = 0.0;
    if (!v45) {
      double v46 = *(double *)(a1 + 24) + v29 * (v29 * (*(double *)(a1 + 40) * 3.0) + *(double *)(a1 + 32) * 2.0);
    }
    double v79 = v41 / v38;
    double v77 = v46;
    double v78 = v37 * (v37 * -48.0);
    double v75 = (v31 + -50400.0) * -6.28318531 / (v32 * v32);
    double v76 = 6.28318531 / v32;
    if (v32 >= 72000.0) {
      double v44 = *(double *)(a1 + 56) + v29 * (v29 * (*(double *)(a1 + 72) * 3.0) + *(double *)(a1 + 64) * 2.0);
    }
    double v47 = sin((v28 + -1.617) * 3.14159265) * -0.20106193;
    double v48 = v25.__sinval * (v24 * 3.14159265) * tan(__x) / v81;
    BOOL v49 = fabs(v83) > 0.416;
    double v50 = 0.0;
    if (v49) {
      double v51 = 0.0;
    }
    else {
      double v51 = 0.318309886;
    }
    if (v49) {
      double cosval = 0.0;
    }
    else {
      double cosval = v25.__cosval;
    }
    if (!v49) {
      double v50 = -(v24 * v25.__sinval);
    }
    double v53 = -0.0137 / (v84 * v84) * 0.318309886;
    double v54 = v53 * cosval;
    double v55 = v51 * v48;
    double v56 = v54 * v48 + v25.__sinval / v81 * v53;
    double v57 = v25.__cosval * v24 / v81 + v50 * v48;
    double v58 = v55 * 43200.0;
    double v59 = v56 * 43200.0;
    double v60 = v57 * 43200.0;
    double v61 = v51 + v47 * v55;
    double v62 = v54 + v47 * v56;
    double v63 = v50 + v47 * v57;
    double v64 = v44 * v63;
    double v65 = v77 * v61;
    double v66 = v47 * 0.318309886 * v77;
    double v67 = v77 * v62;
    double v68 = v77 * v63;
    double v69 = v75 * (v44 * v61) + v76 * v58;
    double v70 = v75 * (v47 * 0.318309886 * v44) + v76 * 13750.9871;
    double v71 = v75 * (v44 * v62) + v76 * v59;
    double v72 = v75 * v64 + v76 * v60;
    *(double *)a9 = v76 * v80;
    double v73 = v78 * 0.318309886 * v79;
    *(float64x2_t *)(a9 + 16) = vmlaq_n_f64(vmlaq_n_f64(vmulq_n_f64(vmlaq_n_f64(vmlaq_n_f64(vmlaq_n_f64(vmulq_n_f64(v89, v70), v87, v69), v91, v71), v95, v72), v80), v91, v73), vmlaq_n_f64(vmlaq_n_f64(vmlaq_n_f64(vmulq_n_f64(v89, v66), v87, v65), v91, v67), v95, v68), v86);
    *(double *)(a9 + 32) = v80 * (v70 * v90 + v69 * v88 + v71 * v92 + v72 * v96)
                         + v73 * v92
                         + v86 * (v66 * v90 + v65 * v88 + v67 * v92 + v68 * v96);
    *(float64x2_t *)(a9 + 40) = vmlaq_n_f64(vmlaq_n_f64(vmulq_n_f64(vmlaq_n_f64(vmulq_n_f64(v97, v72), v93, v71), v80), v93, v73), vmlaq_n_f64(vmulq_n_f64(v97, v68), v93, v67), v86);
    *(double *)(a9 + 56) = v80 * (v72 * v98 + v71 * v94) + v73 * v94 + v86 * (v68 * v98 + v67 * v94);
    *(double *)(a9 + 8) = -2.0 / a3 * *a7;
  }
  return v16;
}

uint64_t cnnavigation::KlobucharIonosphereModel::GetIonosphericDelay(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double *a5, uint64_t a6, double a7, double a8)
{
  return cnnavigation::KlobucharIonosphereModel::GetIonosphericDelay(a1, a7, a8, a2, a3, a4, a5, 1, a6);
}

uint64_t sub_18DEECB5C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 80);
}

double cnnavigation::GLONASSAlmanac::GLONASSAlmanac(cnnavigation::GLONASSAlmanac *this)
{
  *(void *)this = &unk_1EDD0A8F8;
  *((void *)this + 1) = 0;
  *((unsigned char *)this + 16) = 0;
  *((_DWORD *)this + 5) = -1;
  *((void *)this + 3) = 0;
  *((void *)this + 4) = 0;
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0xBFF0000000000000;
  double result = 0.0;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD0A8F8;
  *((void *)this + 1) = 0;
  *((unsigned char *)this + 16) = 0;
  *((_DWORD *)this + 5) = -1;
  *((void *)this + 3) = 0;
  *((void *)this + 4) = 0;
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0xBFF0000000000000;
  double result = 0.0;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  return result;
}

double cnnavigation::GLONASSAlmanac::GLONASSAlmanac(cnnavigation::GLONASSAlmanac *this, const cnnavigation::GLONASSAlmanac *a2)
{
  *(void *)this = &unk_1EDD0A8F8;
  *((void *)this + 1) = *((void *)a2 + 1);
  *((unsigned char *)this + 16) = *((unsigned char *)a2 + 16);
  *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
  *(_OWORD *)((char *)this + 24) = *(_OWORD *)((char *)a2 + 24);
  *(_OWORD *)((char *)this + 40) = *(_OWORD *)((char *)a2 + 40);
  *(_OWORD *)((char *)this + 56) = *(_OWORD *)((char *)a2 + 56);
  *(_OWORD *)((char *)this + 72) = *(_OWORD *)((char *)a2 + 72);
  *(_OWORD *)((char *)this + 88) = *(_OWORD *)((char *)a2 + 88);
  *(_OWORD *)((char *)this + 104) = *(_OWORD *)((char *)a2 + 104);
  *((void *)this + 15) = *((void *)a2 + 15);
  double result = *((double *)a2 + 16);
  *((double *)this + 16) = result;
  return result;
}

void cnnavigation::GLONASSAlmanac::~GLONASSAlmanac(cnnavigation::GLONASSAlmanac *this)
{
  *(void *)this = &unk_1EDD0A8F8;
}

{
  *(void *)this = &unk_1EDD0A8F8;
}

{
  *(void *)this = &unk_1EDD0A8F8;
  JUMPOUT(0x192FA6240);
}

double cnnavigation::GLONASSAlmanac::operator=(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
    *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    double result = *(double *)(a2 + 128);
    *(double *)(a1 + 128) = result;
  }
  return result;
}

uint64_t cnnavigation::GLONASSAlmanac::Deserialize(uint64_t a1, uint64_t a2)
{
  int v24 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)a2 + 40))(a2, a1 + 8, 4);
  char v26 = 0;
  int v23 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)a2 + 40))(a2, &v26, 1);
  *(unsigned char *)(a1 + 16) = v26 == 1;
  int v22 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)a2 + 40))(a2, a1 + 12, 4);
  int v21 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)a2 + 40))(a2, a1 + 20, 4);
  int v20 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)a2 + 40))(a2, a1 + 24, 8);
  int v19 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)a2 + 40))(a2, a1 + 32, 8);
  int v18 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)a2 + 40))(a2, a1 + 40, 8);
  int v17 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)a2 + 40))(a2, a1 + 48, 8);
  int v16 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)a2 + 40))(a2, a1 + 56, 8);
  int v15 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)a2 + 40))(a2, a1 + 64, 8);
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)a2 + 40))(a2, a1 + 72, 8);
  int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)a2 + 40))(a2, a1 + 80, 8);
  int v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)a2 + 40))(a2, a1 + 88, 8);
  int v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)a2 + 40))(a2, a1 + 96, 8);
  int v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)a2 + 40))(a2, a1 + 104, 8);
  int v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)a2 + 40))(a2, a1 + 112, 8);
  int v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)a2 + 40))(a2, a1 + 120, 8);
  unsigned int v25 = 0;
  int v11 = (*(uint64_t (**)(uint64_t, unsigned int *, uint64_t))(*(void *)a2 + 40))(a2, &v25, 4);
  int v12 = 0;
  if (v25 <= 1)
  {
    int v12 = v24 & v23 & v22 & v21 & v20 & v19 & v18 & v17 & v16 & v15 & v4 & v5 & v6 & v7 & v8 & v9 & v10 & v11;
    *(_DWORD *)(a1 + 128) = v25;
  }
  unsigned int v13 = (*(uint64_t (**)(uint64_t, unsigned int *, uint64_t))(*(void *)a2 + 40))(a2, &v25, 4);
  if (v25 > 1) {
    return 0;
  }
  uint64_t result = v12 & v13;
  *(_DWORD *)(a1 + 132) = v25;
  return result;
}

uint64_t cnnavigation::GLONASSAlmanac::Serialize(uint64_t a1, uint64_t a2)
{
  LODWORD(v25) = *(_DWORD *)(a1 + 8);
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(*(void *)a2 + 32))(a2, &v25, 4);
  LOBYTE(v25) = *(unsigned char *)(a1 + 16);
  int v5 = v4 & (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(*(void *)a2 + 32))(a2, &v25, 1);
  LODWORD(v25) = *(_DWORD *)(a1 + 12);
  int v6 = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(*(void *)a2 + 32))(a2, &v25, 4);
  LODWORD(v25) = *(_DWORD *)(a1 + 20);
  int v7 = v5 & v6 & (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(*(void *)a2 + 32))(a2, &v25, 4);
  uint64_t v25 = *(void *)(a1 + 24);
  int v8 = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(*(void *)a2 + 32))(a2, &v25, 8);
  uint64_t v25 = *(void *)(a1 + 32);
  int v9 = v8 & (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(*(void *)a2 + 32))(a2, &v25, 8);
  uint64_t v25 = *(void *)(a1 + 40);
  int v10 = v7 & v9 & (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(*(void *)a2 + 32))(a2, &v25, 8);
  uint64_t v25 = *(void *)(a1 + 48);
  int v11 = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(*(void *)a2 + 32))(a2, &v25, 8);
  uint64_t v25 = *(void *)(a1 + 56);
  int v12 = v11 & (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(*(void *)a2 + 32))(a2, &v25, 8);
  uint64_t v25 = *(void *)(a1 + 64);
  int v13 = v12 & (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(*(void *)a2 + 32))(a2, &v25, 8);
  uint64_t v25 = *(void *)(a1 + 72);
  int v14 = v10 & v13 & (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(*(void *)a2 + 32))(a2, &v25, 8);
  uint64_t v25 = *(void *)(a1 + 80);
  int v15 = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(*(void *)a2 + 32))(a2, &v25, 8);
  uint64_t v25 = *(void *)(a1 + 88);
  int v16 = v15 & (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(*(void *)a2 + 32))(a2, &v25, 8);
  uint64_t v25 = *(void *)(a1 + 96);
  int v17 = v16 & (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(*(void *)a2 + 32))(a2, &v25, 8);
  uint64_t v25 = *(void *)(a1 + 104);
  int v18 = v17 & (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(*(void *)a2 + 32))(a2, &v25, 8);
  uint64_t v25 = *(void *)(a1 + 112);
  int v19 = v14 & v18 & (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(*(void *)a2 + 32))(a2, &v25, 8);
  uint64_t v25 = *(void *)(a1 + 120);
  int v20 = v19 & (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(*(void *)a2 + 32))(a2, &v25, 8);
  int v21 = *(_DWORD *)(a1 + 128);
  if (v21 == 1)
  {
    LODWORD(v25) = 1;
    goto LABEL_5;
  }
  if (!v21)
  {
    LODWORD(v25) = 0;
LABEL_5:
    int v22 = v20 & (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(*(void *)a2 + 32))(a2, &v25, 4);
    goto LABEL_7;
  }
  int v22 = 0;
LABEL_7:
  int v23 = *(_DWORD *)(a1 + 132);
  if (!v23)
  {
    LODWORD(v25) = 0;
    return v22 & (*(unsigned int (**)(uint64_t, uint64_t *, uint64_t))(*(void *)a2 + 32))(a2, &v25, 4);
  }
  if (v23 == 1)
  {
    LODWORD(v25) = 1;
    return v22 & (*(unsigned int (**)(uint64_t, uint64_t *, uint64_t))(*(void *)a2 + 32))(a2, &v25, 4);
  }
  return 0;
}

__n128 cnnavigation::GalileoEphemerisDatabase::GetEphemerides(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(unsigned char *)(a2 + 24) == 3)
  {
    uint64_t v5 = *(void *)(a1 + 8);
    uint64_t v3 = a1 + 8;
    uint64_t v4 = v5;
    if (v5)
    {
      int v7 = *(_DWORD *)(a2 + 28) + 3000;
      uint64_t v8 = v3;
      do
      {
        int v9 = *(_DWORD *)(v4 + 32);
        BOOL v10 = v9 < v7;
        if (v9 >= v7) {
          int v11 = (uint64_t *)v4;
        }
        else {
          int v11 = (uint64_t *)(v4 + 8);
        }
        if (!v10) {
          uint64_t v8 = v4;
        }
        uint64_t v4 = *v11;
      }
      while (*v11);
      if (v8 != v3 && v7 >= *(_DWORD *)(v8 + 32))
      {
        std::string::operator=((std::string *)(a3 + 8), (const std::string *)(v8 + 48));
        *(void *)(a3 + 32) = *(void *)(v8 + 72);
        long long v12 = *(_OWORD *)(v8 + 240);
        long long v13 = *(_OWORD *)(v8 + 256);
        long long v14 = *(_OWORD *)(v8 + 272);
        *(void *)(a3 + 248) = *(void *)(v8 + 288);
        *(_OWORD *)(a3 + 232) = v14;
        *(_OWORD *)(a3 + 216) = v13;
        *(_OWORD *)(a3 + 200) = v12;
        long long v15 = *(_OWORD *)(v8 + 176);
        long long v16 = *(_OWORD *)(v8 + 192);
        long long v17 = *(_OWORD *)(v8 + 208);
        *(_OWORD *)(a3 + 184) = *(_OWORD *)(v8 + 224);
        *(_OWORD *)(a3 + 168) = v17;
        *(_OWORD *)(a3 + 152) = v16;
        *(_OWORD *)(a3 + 136) = v15;
        long long v18 = *(_OWORD *)(v8 + 112);
        long long v19 = *(_OWORD *)(v8 + 128);
        long long v20 = *(_OWORD *)(v8 + 144);
        *(_OWORD *)(a3 + 120) = *(_OWORD *)(v8 + 160);
        *(_OWORD *)(a3 + 104) = v20;
        *(_OWORD *)(a3 + 88) = v19;
        *(_OWORD *)(a3 + 72) = v18;
        __n128 result = *(__n128 *)(v8 + 80);
        *(_OWORD *)(a3 + 56) = *(_OWORD *)(v8 + 96);
        *(__n128 *)(a3 + 40) = result;
      }
    }
  }
  return result;
}

__n128 cnnavigation::GalileoEphemerisDatabase::SetEphemerides(uint64_t **this, const cnnavigation::GalileoEphemerides *a2)
{
  double v2 = (char *)a2 + 40;
  if (*((unsigned char *)a2 + 32) == 3 && *((unsigned char *)a2 + 40) != 0)
  {
    int v6 = (_OWORD *)((char *)a2 + 8);
    int v7 = *((_DWORD *)a2 + 9) + 3000;
    int v9 = (char *)(this + 1);
    uint64_t v8 = (char *)this[1];
    BOOL v10 = (char **)(this + 1);
    int v11 = (char **)(this + 1);
    if (v8)
    {
      long long v12 = (char *)(this + 1);
      long long v13 = (char *)this[1];
      do
      {
        int v14 = *((_DWORD *)v13 + 8);
        BOOL v15 = v14 < v7;
        if (v14 >= v7) {
          long long v16 = (char **)v13;
        }
        else {
          long long v16 = (char **)(v13 + 8);
        }
        if (!v15) {
          long long v12 = v13;
        }
        long long v13 = *v16;
      }
      while (*v16);
      if (v12 == v9 || v7 < *((_DWORD *)v12 + 8))
      {
        while (1)
        {
          while (1)
          {
            int v11 = (char **)v8;
            int v17 = *((_DWORD *)v8 + 8);
            if (v17 <= v7) {
              break;
            }
            uint64_t v8 = *v11;
            BOOL v10 = v11;
            if (!*v11) {
              goto LABEL_23;
            }
          }
          if (v17 >= v7) {
            break;
          }
          uint64_t v8 = v11[1];
          if (!v8)
          {
            BOOL v10 = v11 + 1;
            goto LABEL_23;
          }
        }
      }
      else
      {
        result.n128_f64[0] = *((double *)a2 + 7)
                           - *((double *)v12 + 12)
                           + (double)(*((_DWORD *)a2 + 12) - *((_DWORD *)v12 + 22)) * 604800.0;
        if (result.n128_f64[0] > 0.0)
        {
          std::string::operator=((std::string *)v12 + 2, (const std::string *)((char *)a2 + 8));
          *((void *)v12 + 9) = *((void *)a2 + 4);
          long long v28 = *((_OWORD *)v2 + 10);
          long long v29 = *((_OWORD *)v2 + 11);
          long long v30 = *((_OWORD *)v2 + 12);
          *((void *)v12 + 36) = *((void *)v2 + 26);
          *((_OWORD *)v12 + 16) = v29;
          *((_OWORD *)v12 + 17) = v30;
          *((_OWORD *)v12 + 15) = v28;
          long long v31 = *((_OWORD *)v2 + 6);
          long long v32 = *((_OWORD *)v2 + 7);
          long long v33 = *((_OWORD *)v2 + 9);
          *((_OWORD *)v12 + 13) = *((_OWORD *)v2 + 8);
          *((_OWORD *)v12 + 14) = v33;
          *((_OWORD *)v12 + 11) = v31;
          *((_OWORD *)v12 + 12) = v32;
          long long v34 = *((_OWORD *)v2 + 2);
          long long v35 = *((_OWORD *)v2 + 3);
          long long v36 = *((_OWORD *)v2 + 5);
          *((_OWORD *)v12 + 9) = *((_OWORD *)v2 + 4);
          *((_OWORD *)v12 + 10) = v36;
          *((_OWORD *)v12 + 7) = v34;
          *((_OWORD *)v12 + 8) = v35;
          __n128 result = *(__n128 *)v2;
          long long v37 = *((_OWORD *)v2 + 1);
          *((_OWORD *)v12 + 5) = *(_OWORD *)v2;
          *((_OWORD *)v12 + 6) = v37;
        }
      }
    }
    else
    {
LABEL_23:
      long long v18 = (char *)operator new(0x128uLL);
      v38[0] = (uint64_t)v18;
      v38[1] = (uint64_t)v9;
      char v39 = 0;
      *((_DWORD *)v18 + 8) = v7;
      *((void *)v18 + 5) = &unk_1EDD0ACA8;
      long long v19 = v18 + 48;
      if (*((char *)a2 + 31) < 0)
      {
        sub_18DEDE668(v19, *((void **)a2 + 1), *((void *)a2 + 2));
      }
      else
      {
        *(_OWORD *)long long v19 = *v6;
        *((void *)v18 + 8) = *((void *)v2 - 2);
      }
      *((void *)v18 + 9) = *((void *)a2 + 4);
      long long v20 = *((_OWORD *)v2 + 11);
      *((_OWORD *)v18 + 15) = *((_OWORD *)v2 + 10);
      *((_OWORD *)v18 + 16) = v20;
      *((_OWORD *)v18 + 17) = *((_OWORD *)v2 + 12);
      *((void *)v18 + 36) = *((void *)v2 + 26);
      long long v21 = *((_OWORD *)v2 + 7);
      *((_OWORD *)v18 + 11) = *((_OWORD *)v2 + 6);
      *((_OWORD *)v18 + 12) = v21;
      long long v22 = *((_OWORD *)v2 + 9);
      *((_OWORD *)v18 + 13) = *((_OWORD *)v2 + 8);
      *((_OWORD *)v18 + 14) = v22;
      long long v23 = *((_OWORD *)v2 + 3);
      *((_OWORD *)v18 + 7) = *((_OWORD *)v2 + 2);
      *((_OWORD *)v18 + 8) = v23;
      long long v24 = *((_OWORD *)v2 + 5);
      *((_OWORD *)v18 + 9) = *((_OWORD *)v2 + 4);
      *((_OWORD *)v18 + 10) = v24;
      long long v25 = *((_OWORD *)v2 + 1);
      *((_OWORD *)v18 + 5) = *(_OWORD *)v2;
      *((_OWORD *)v18 + 6) = v25;
      char v39 = 1;
      *(void *)long long v18 = 0;
      *((void *)v18 + 1) = 0;
      *((void *)v18 + 2) = v11;
      *BOOL v10 = v18;
      char v26 = (uint64_t *)**this;
      if (v26)
      {
        *this = v26;
        long long v18 = *v10;
      }
      sub_18DEEDADC(this[1], (uint64_t *)v18);
      this[2] = (uint64_t *)((char *)this[2] + 1);
      v38[0] = 0;
      sub_18DEEDC74(v38);
    }
  }
  return result;
}

void sub_18DEEDA74(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  void *v2 = &unk_1EDD0A9B8;
  sub_18DEEDC74((uint64_t *)va);
  _Unwind_Resume(a1);
}

void cnnavigation::GalileoEphemerisDatabase::Reset(char **this)
{
  double v2 = (char *)(this + 1);
  sub_18DEEDCF4(this[1]);
  *this = v2;
  this[2] = 0;
  *(void *)double v2 = 0;
}

uint64_t *sub_18DEEDADC(uint64_t *result, uint64_t *a2)
{
  *((unsigned char *)a2 + 24) = a2 == result;
  if (a2 != result)
  {
    do
    {
      double v2 = (uint64_t *)a2[2];
      if (*((unsigned char *)v2 + 24)) {
        return result;
      }
      uint64_t v3 = (uint64_t *)v2[2];
      uint64_t v4 = (uint64_t *)*v3;
      if ((uint64_t *)*v3 == v2)
      {
        uint64_t v7 = v3[1];
        if (!v7 || (v8 = *(unsigned __int8 *)(v7 + 24), uint64_t v5 = (unsigned char *)(v7 + 24), v8))
        {
          if ((uint64_t *)*v2 == a2)
          {
            int v9 = (uint64_t **)a2[2];
          }
          else
          {
            int v9 = (uint64_t **)v2[1];
            BOOL v10 = *v9;
            v2[1] = (uint64_t)*v9;
            if (v10)
            {
              double v10[2] = (uint64_t)v2;
              uint64_t v3 = (uint64_t *)v2[2];
            }
            void v9[2] = v3;
            *(void *)(v2[2] + 8 * (*(void *)v2[2] != (void)v2)) = v9;
            *int v9 = v2;
            uint64_t v2[2] = (uint64_t)v9;
            uint64_t v3 = v9[2];
            double v2 = (uint64_t *)*v3;
          }
          *((unsigned char *)v9 + 24) = 1;
          *((unsigned char *)v3 + 24) = 0;
          uint64_t v13 = v2[1];
          uint64_t *v3 = v13;
          if (v13) {
            *(void *)(v13 + 16) = v3;
          }
          uint64_t v2[2] = v3[2];
          *(void *)(v3[2] + 8 * (*(void *)v3[2] != (void)v3)) = v2;
          v2[1] = (uint64_t)v3;
          goto LABEL_27;
        }
      }
      else if (!v4 || (v6 = *((unsigned __int8 *)v4 + 24), uint64_t v5 = v4 + 3, v6))
      {
        if ((uint64_t *)*v2 == a2)
        {
          uint64_t v11 = a2[1];
          uint64_t *v2 = v11;
          if (v11)
          {
            *(void *)(v11 + 16) = v2;
            uint64_t v3 = (uint64_t *)v2[2];
          }
          a2[2] = (uint64_t)v3;
          *(void *)(v2[2] + 8 * (*(void *)v2[2] != (void)v2)) = a2;
          a2[1] = (uint64_t)v2;
          uint64_t v2[2] = (uint64_t)a2;
          uint64_t v3 = (uint64_t *)a2[2];
        }
        else
        {
          a2 = (uint64_t *)a2[2];
        }
        *((unsigned char *)a2 + 24) = 1;
        *((unsigned char *)v3 + 24) = 0;
        double v2 = (uint64_t *)v3[1];
        uint64_t v12 = *v2;
        v3[1] = *v2;
        if (v12) {
          *(void *)(v12 + 16) = v3;
        }
        uint64_t v2[2] = v3[2];
        *(void *)(v3[2] + 8 * (*(void *)v3[2] != (void)v3)) = v2;
        uint64_t *v2 = (uint64_t)v3;
LABEL_27:
        v3[2] = (uint64_t)v2;
        return result;
      }
      *((unsigned char *)v2 + 24) = 1;
      a2 = v3;
      *((unsigned char *)v3 + 24) = v3 == result;
      *uint64_t v5 = 1;
    }
    while (v3 != result);
  }
  return result;
}

void sub_18DEEDC74(uint64_t *a1)
{
  uint64_t v1 = *a1;
  *a1 = 0;
  if (v1)
  {
    if (*((unsigned char *)a1 + 16))
    {
      *(void *)(v1 + 40) = &unk_1EDD0ACA8;
      if (*(char *)(v1 + 71) < 0) {
        operator delete(*(void **)(v1 + 48));
      }
    }
    operator delete((void *)v1);
  }
}

void sub_18DEEDCF4(char *a1)
{
  if (a1)
  {
    sub_18DEEDCF4(*(void *)a1);
    sub_18DEEDCF4(*((void *)a1 + 1));
    *((void *)a1 + 5) = &unk_1EDD0ACA8;
    if (a1[71] < 0) {
      operator delete(*((void **)a1 + 6));
    }
    operator delete(a1);
  }
}

double cnnavigation::LinearizedGravityModel::LinearizedGravityModel(cnnavigation::LinearizedGravityModel *this)
{
  *(void *)this = &unk_1EDD0AEF8;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 129) = 0u;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD0AEF8;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 129) = 0u;
  return result;
}

uint64_t cnnavigation::LinearizedGravityModel::LinearizedGravityModel(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  *(void *)a1 = &unk_1EDD0AEF8;
  *(void *)(a1 + 8) = *a2;
  *(void *)(a1 + 16) = a2[1];
  *(void *)(a1 + 24) = a2[2];
  uint64_t v15 = 0;
  if ((*(unsigned int (**)(uint64_t))(*(void *)a3 + 32))(a3))
  {
    char v4 = 0;
    *(void *)(a1 + 80) = 0;
    long long v5 = 0uLL;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)(a1 + 64) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    uint64_t v6 = 0;
    long long v7 = 0uLL;
    long long v8 = 0uLL;
  }
  else
  {
    *(void *)(a1 + 32) = v15;
    *(_OWORD *)(a1 + 40) = v16;
    *(void *)(a1 + 56) = v17;
    *(_OWORD *)(a1 + 64) = v10;
    *(void *)(a1 + 80) = v11;
    long long v5 = v12;
    long long v7 = v13;
    char v4 = 1;
    long long v8 = v14;
    uint64_t v6 = 0x40C3880000000000;
  }
  *(_OWORD *)(a1 + 88) = v5;
  *(_OWORD *)(a1 + 104) = v7;
  *(_OWORD *)(a1 + 120) = v8;
  *(void *)(a1 + 136) = v6;
  *(unsigned char *)(a1 + 144) = v4;
  return a1;
}

void sub_18DEEDF44(_Unwind_Exception *a1)
{
  void *v1 = &unk_1EDD0A858;
  _Unwind_Resume(a1);
}

double cnnavigation::LinearizedGravityModel::LinearizedGravityModel(cnnavigation::LinearizedGravityModel *this, const cnnavigation::LinearizedGravityModel *a2)
{
  *(void *)this = &unk_1EDD0AEF8;
  *(_OWORD *)((char *)this + 8) = *(_OWORD *)((char *)a2 + 8);
  *(_OWORD *)((char *)this + 24) = *(_OWORD *)((char *)a2 + 24);
  *(_OWORD *)((char *)this + 40) = *(_OWORD *)((char *)a2 + 40);
  *(_OWORD *)((char *)this + 56) = *(_OWORD *)((char *)a2 + 56);
  *(_OWORD *)((char *)this + 72) = *(_OWORD *)((char *)a2 + 72);
  *(_OWORD *)((char *)this + 88) = *(_OWORD *)((char *)a2 + 88);
  *(_OWORD *)((char *)this + 104) = *(_OWORD *)((char *)a2 + 104);
  *(_OWORD *)((char *)this + 120) = *(_OWORD *)((char *)a2 + 120);
  double result = *((double *)a2 + 17);
  *((double *)this + 17) = result;
  *((unsigned char *)this + 144) = *((unsigned char *)a2 + 144);
  return result;
}

double cnnavigation::LinearizedGravityModel::operator=(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    double result = *(double *)(a2 + 136);
    *(double *)(a1 + 136) = result;
    *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  }
  return result;
}

uint64_t cnnavigation::LinearizedGravityModel::ComputeLinearizedGravityModel(uint64_t a1, double *a2, int a3, int a4, double *a5, double *a6, uint64_t a7)
{
  if (!*(unsigned char *)(a1 + 144)) {
    return 0xFFFFFFFFLL;
  }
  double v7 = *a2;
  double v8 = a2[1];
  double v9 = a2[2];
  if (sqrt(v8 * v8 + v7 * v7 + v9 * v9) <= 0.00000001) {
    return 0xFFFFFFFFLL;
  }
  double v10 = v7 - *(double *)(a1 + 8);
  double v11 = v8 - *(double *)(a1 + 16);
  double v12 = v9 - *(double *)(a1 + 24);
  if (sqrt(v11 * v11 + v10 * v10 + v12 * v12) > *(double *)(a1 + 136)) {
    return 0xFFFFFFFFLL;
  }
  *a5 = *(double *)(a1 + 32)
      - (v11 * *(double *)(a1 + 48)
       + *(double *)(a1 + 40) * v10
       + *(double *)(a1 + 56) * v12)
      + (v11 * (v10 * *(double *)(a1 + 72))
       + v10 * *(double *)(a1 + 64) * v10
       + v10 * *(double *)(a1 + 80) * v12
       + v11 * *(double *)(a1 + 88) * v10
       + v11 * *(double *)(a1 + 96) * v11
       + v11 * *(double *)(a1 + 104) * v12
       + v12 * *(double *)(a1 + 112) * v10
       + v12 * *(double *)(a1 + 120) * v11
       + v12 * *(double *)(a1 + 128) * v12)
      * -0.5;
  if (a3)
  {
    double v15 = *(double *)(a1 + 56);
    double v16 = v11 * *(double *)(a1 + 72) + *(double *)(a1 + 64) * v10 + *(double *)(a1 + 80) * v12;
    double v17 = v11 * *(double *)(a1 + 96) + *(double *)(a1 + 88) * v10 + *(double *)(a1 + 104) * v12;
    double v18 = v11 * *(double *)(a1 + 120) + *(double *)(a1 + 112) * v10 + *(double *)(a1 + 128) * v12;
    double v19 = *(double *)(a1 + 48) + v17;
    *a6 = *(double *)(a1 + 40) + v16;
    a6[1] = v19;
    a6[2] = v15 + v18;
  }
  uint64_t v13 = 0;
  if (a4)
  {
    *(_OWORD *)a7 = *(_OWORD *)(a1 + 64);
    *(_OWORD *)(a7 + 16) = *(_OWORD *)(a1 + 80);
    *(_OWORD *)(a7 + 32) = *(_OWORD *)(a1 + 96);
    *(_OWORD *)(a7 + 48) = *(_OWORD *)(a1 + 112);
    *(void *)(a7 + 64) = *(void *)(a1 + 128);
  }
  return v13;
}

uint64_t cnnavigation::LinearizedGravityModel::GetGravitationalPotential(cnnavigation::LinearizedGravityModel *this, double *a2, double *a3)
{
  v5[3] = *(double *)MEMORY[0x1E4F143B8];
  return cnnavigation::LinearizedGravityModel::ComputeLinearizedGravityModel((uint64_t)this, a2, 0, 0, a3, v5, (uint64_t)v4);
}

uint64_t cnnavigation::LinearizedGravityModel::GetGravitationalPotential(cnnavigation::LinearizedGravityModel *this, double *a2, double *a3, double *a4)
{
  return cnnavigation::LinearizedGravityModel::ComputeLinearizedGravityModel((uint64_t)this, a2, 1, 0, a3, a4, (uint64_t)v5);
}

uint64_t cnnavigation::LinearizedGravityModel::GetGravitationalPotential(uint64_t a1, double *a2, double *a3, double *a4, uint64_t a5)
{
  return cnnavigation::LinearizedGravityModel::ComputeLinearizedGravityModel(a1, a2, 1, 1, a3, a4, a5);
}

uint64_t cnnavigation::LinearizedGravityModel::GetGravitationalAcceleration(cnnavigation::LinearizedGravityModel *this, double *a2, double *a3)
{
  return cnnavigation::LinearizedGravityModel::ComputeLinearizedGravityModel((uint64_t)this, a2, 1, 0, &v5, a3, (uint64_t)&v4);
}

uint64_t cnnavigation::LinearizedGravityModel::GetGravitationalAcceleration(uint64_t a1, double *a2, double *a3, uint64_t a4)
{
  return cnnavigation::LinearizedGravityModel::ComputeLinearizedGravityModel(a1, a2, 1, 1, &v5, a3, a4);
}

double cnnavigation::LinearizedGravityModel::UpdateLinearization(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  uint64_t v12 = 0;
  if (!(*(unsigned int (**)(uint64_t, void *, uint64_t *, long long *, _OWORD *))(*(void *)a3 + 32))(a3, a2, &v12, &v13, v10))
  {
    *(void *)(a1 + 8) = *a2;
    *(void *)(a1 + 16) = a2[1];
    uint64_t v6 = a2[2];
    *(void *)(a1 + 136) = 0x40C3880000000000;
    *(unsigned char *)(a1 + 144) = 1;
    uint64_t v7 = v12;
    *(void *)(a1 + 24) = v6;
    *(void *)(a1 + 32) = v7;
    *(_OWORD *)(a1 + 40) = v13;
    *(void *)(a1 + 56) = v14;
    long long v8 = v10[1];
    *(_OWORD *)(a1 + 64) = v10[0];
    *(_OWORD *)(a1 + 80) = v8;
    long long v9 = v10[3];
    *(_OWORD *)(a1 + 96) = v10[2];
    *(_OWORD *)(a1 + 112) = v9;
    double result = v11;
    *(double *)(a1 + 128) = v11;
  }
  return result;
}

uint64_t cnnavigation::LinearizedGravityModel::UpdateLinearization(uint64_t a1, void *a2, void *a3, uint64_t a4, double a5, double a6)
{
  *(void *)(a1 + 8) = *a2;
  *(void *)(a1 + 16) = a2[1];
  *(void *)(a1 + 24) = a2[2];
  *(double *)(a1 + 32) = a6;
  *(void *)(a1 + 40) = *a3;
  *(void *)(a1 + 48) = a3[1];
  *(void *)(a1 + 56) = a3[2];
  *(_OWORD *)(a1 + 64) = *(_OWORD *)a4;
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a4 + 16);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a4 + 32);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a4 + 48);
  *(void *)(a1 + 128) = *(void *)(a4 + 64);
  *(double *)(a1 + 136) = a5;
  *(unsigned char *)(a1 + 144) = 1;
  return 0;
}

void *sub_18DEEE420(void *result)
{
  *double result = &unk_1EDD0A858;
  return result;
}

void sub_18DEEE440(void *a1)
{
  *a1 = &unk_1EDD0A858;
  JUMPOUT(0x192FA6240);
}

uint64_t sub_18DEEE470(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 144);
}

uint64_t cnnavigation::ECEFToPZ9002(float64x2_t *this, double *a2, double *a3)
{
  double v3 = this[1].f64[0];
  *(float64x2_t *)a2 = vaddq_f64(*this, (float64x2_t)xmmword_18E1EFBD0);
  a2[2] = v3 + -0.18;
  return 0;
}

uint64_t cnnavigation::ECEFToPZ9002(float64x2_t *a1, float64x2_t *a2, int a3, void *a4)
{
  double v4 = a1[1].f64[0];
  *a2 = vaddq_f64(*a1, (float64x2_t)xmmword_18E1EFBD0);
  a2[1].f64[0] = v4 + -0.18;
  if (a3)
  {
    *a4 = 0x3FF0000000000000;
    a4[1] = 0;
    a4[2] = 0;
    a4[3] = 0;
    a4[4] = 0x3FF0000000000000;
    a4[5] = 0;
    a4[6] = 0;
    a4[7] = 0;
    a4[8] = 0x3FF0000000000000;
  }
  return 0;
}

uint64_t cnnavigation::ECEFToPZ9002(float64x2_t *a1, float64x2_t *a2, void *a3)
{
  double v3 = a1[1].f64[0];
  *a2 = vaddq_f64(*a1, (float64x2_t)xmmword_18E1EFBD0);
  a2[1].f64[0] = v3 + -0.18;
  *a3 = 0x3FF0000000000000;
  a3[1] = 0;
  a3[2] = 0;
  a3[3] = 0;
  a3[4] = 0x3FF0000000000000;
  a3[5] = 0;
  a3[6] = 0;
  a3[7] = 0;
  a3[8] = 0x3FF0000000000000;
  return 0;
}

uint64_t cnnavigation::PZ9002ToECEF(float64x2_t *this, double *a2, double *a3)
{
  double v3 = this[1].f64[0];
  *(float64x2_t *)a2 = vaddq_f64(*this, (float64x2_t)xmmword_18E1EFA00);
  a2[2] = v3 + 0.18;
  return 0;
}

uint64_t cnnavigation::PZ9002ToECEF(float64x2_t *a1, float64x2_t *a2, int a3, void *a4)
{
  double v4 = a1[1].f64[0];
  *a2 = vaddq_f64(*a1, (float64x2_t)xmmword_18E1EFA00);
  a2[1].f64[0] = v4 + 0.18;
  if (a3)
  {
    *a4 = 0x3FF0000000000000;
    a4[1] = 0;
    a4[2] = 0;
    a4[3] = 0;
    a4[4] = 0x3FF0000000000000;
    a4[5] = 0;
    a4[6] = 0;
    a4[7] = 0;
    a4[8] = 0x3FF0000000000000;
  }
  return 0;
}

uint64_t cnnavigation::PZ9002ToECEF(float64x2_t *a1, float64x2_t *a2, void *a3)
{
  double v3 = a1[1].f64[0];
  *a2 = vaddq_f64(*a1, (float64x2_t)xmmword_18E1EFA00);
  a2[1].f64[0] = v3 + 0.18;
  *a3 = 0x3FF0000000000000;
  a3[1] = 0;
  a3[2] = 0;
  a3[3] = 0;
  a3[4] = 0x3FF0000000000000;
  a3[5] = 0;
  a3[6] = 0;
  a3[7] = 0;
  a3[8] = 0x3FF0000000000000;
  return 0;
}

uint64_t cnnavigation::GalileoTimeToJulianTime(double *a1, int a2, uint64_t a3)
{
  int v3 = *(_DWORD *)a1;
  if ((*(_DWORD *)a1 & 0x80000000) != 0) {
    return 0xFFFFFFFFLL;
  }
  double v4 = a1[1];
  uint64_t result = 0xFFFFFFFFLL;
  if (v4 >= 0.0 && v4 < 604800.0)
  {
    uint64_t result = 0;
    int v6 = vcvtmd_s64_f64(v4 / 86400.0);
    double v7 = (v4 - (double)a2) / 86400.0 + 0.5 - (double)v6;
    *(_DWORD *)a3 = v6 - v3 + 8 * v3 + 2451412 + vcvtmd_s64_f64(v7);
    *(double *)(a3 + 8) = v7 - floor(v7);
  }
  return result;
}

double cnnavigation::JulianTimeToGalileoTime(uint64_t a1, int a2, uint64_t a3)
{
  double v3 = *(double *)(a1 + 8) + -0.5;
  double result = v3 - floor(v3);
  unsigned int v5 = *(_DWORD *)a1 - 2451412 + vcvtmd_s64_f64(v3);
  if ((v5 & 0x80000000) == 0)
  {
    *(_DWORD *)a3 = v5 / 7;
    double result = result * 86400.0 + (double)(v5 % 7) * 86400.0 + (double)a2;
    *(double *)(a3 + 8) = result;
    if (result >= 604800.0)
    {
      *(_DWORD *)a3 = v5 / 7 + 1;
      double result = result + -604800.0;
      *(double *)(a3 + 8) = result;
    }
  }
  return result;
}

uint64_t cnnavigation::GLONASSFindSat(int a1, uint64_t a2, double *a3, double *a4, double *a5, double a6, double a7)
{
  uint64_t v78 = *MEMORY[0x1E4F143B8];
  if (!*(unsigned char *)(a2 + 16)) {
    return 1;
  }
  int v8 = *(_DWORD *)(a2 + 20);
  double v10 = *(double *)(a2 + 24);
  double v9 = *(double *)(a2 + 32);
  double v11 = *(double *)(a2 + 40);
  double v12 = *(double *)(a2 + 48);
  double v13 = *(double *)(a2 + 64);
  double v14 = *(double *)(a2 + 72);
  double v46 = *(double *)(a2 + 80);
  double v47 = *(double *)(a2 + 56);
  double v15 = (double)(v8 - 1) / 36525.0 + -0.04 + (v9 + -3.0) / 86400.0 / 36525.0;
  double v41 = (v15 * 36000.7701 + 100.460618 + v15 * v15 * 0.00038793 + v15 * (v15 * v15) * -0.000000026) * 0.0174532925
      + (v10 + -10800.0) * 0.00007292115;
  __double2 v16 = __sincos_stret(v41);
  int v17 = 0;
  double v75 = v11 * v16.__cosval - v12 * v16.__sinval;
  double v76 = v12 * v16.__cosval + v11 * v16.__sinval;
  double v77 = v47;
  double v72 = v13 * v16.__cosval - v14 * v16.__sinval + v76 * -0.00007292115;
  double v73 = v14 * v16.__cosval + v13 * v16.__sinval + v75 * 0.00007292115;
  double v74 = v46;
  double v18 = a6 - v10 + (double)(a1 - v8) * 86400.0 + a7 - v9;
  int v19 = vcvtpd_s64_f64(fabs(v18) / 60.0);
  if (v19 <= 1) {
    int v19 = 1;
  }
  int v45 = v19;
  double v40 = a6 - v10 + (double)(a1 - v8) * 86400.0 + a7 - v9;
  double v20 = v18 / (double)v19;
  double v21 = v20 * 0.5;
  do
  {
    int v48 = v17;
    double v22 = v75;
    double v23 = v76;
    v61[0] = v75;
    v61[1] = v76;
    double v24 = v77;
    v61[2] = v77;
    double v25 = v73;
    double v52 = v72;
    *(double *)double v60 = v72;
    *(double *)&v60[1] = v73;
    double v50 = v74;
    *(double *)&v60[2] = v74;
    if (cnnavigation::details::dyn_GLONASS(v61, v60, a2, &v69, v68)) {
      return 2;
    }
    v59[0] = v22 + v21 * v69;
    v59[1] = v23 + v21 * v70;
    v59[2] = v24 + v21 * v71;
    v58[0] = v52 + v21 * v68[0];
    v58[1] = v25 + v21 * v68[1];
    v58[2] = v50 + v21 * v68[2];
    if (cnnavigation::details::dyn_GLONASS(v59, v58, a2, v67, v66)) {
      return 2;
    }
    v57[0] = v22 + v21 * v67[0];
    v57[1] = v23 + v21 * v67[1];
    v57[2] = v24 + v21 * v67[2];
    v56[0] = v52 + v21 * v66[0];
    v56[1] = v25 + v21 * v66[1];
    v56[2] = v50 + v21 * v66[2];
    if (cnnavigation::details::dyn_GLONASS(v57, v56, a2, v65, v64)) {
      return 2;
    }
    v55[0] = v22 + v20 * v65[0];
    v55[1] = v23 + v20 * v65[1];
    v55[2] = v24 + v20 * v65[2];
    v54[0] = v52 + v20 * v64[0];
    v54[1] = v25 + v20 * v64[1];
    v54[2] = v50 + v20 * v64[2];
    if (cnnavigation::details::dyn_GLONASS(v55, v54, a2, v63, v62)) {
      return 2;
    }
    for (uint64_t i = 0; i != 3; ++i)
    {
      *(double *)((char *)&v75 + i * 8) = *(double *)((char *)&v75 + i * 8)
                                        + v20
                                        * (*(double *)((char *)&v69 + i * 8)
                                         + v67[i] * 2.0
                                         + v65[i] * 2.0
                                         + *(double *)&v63[i])
                                        / 6.0;
      *(double *)((char *)&v72 + i * 8) = *(double *)((char *)&v72 + i * 8)
                                        + v20 * (v68[i] + v66[i] * 2.0 + v64[i] * 2.0 + v62[i]) / 6.0;
    }
    int v17 = v48 + 1;
  }
  while (v48 + 1 != v45);
  if (a5 && cnnavigation::details::dyn_GLONASS(&v75, &v72, a2, v68, &v69)) {
    return 2;
  }
  double v28 = v75;
  __double2 v29 = __sincos_stret(v41 + v40 * 0.00007292115);
  double v30 = v77;
  double v31 = v29.__cosval * v76 - v28 * v29.__sinval;
  *a3 = v29.__sinval * v76 + v28 * v29.__cosval;
  a3[1] = v31;
  a3[2] = v30;
  if (a4)
  {
    double v32 = v72;
    double v33 = v73;
    *a4 = v29.__sinval * v73 + v72 * v29.__cosval + v31 * 0.00007292115;
    double v34 = v29.__cosval * v33 - v32 * v29.__sinval;
    double v35 = v74;
    double v36 = v34 + *a3 * -0.00007292115;
    a4[1] = v36;
    a4[2] = v35;
    if (a5)
    {
      double v37 = v69;
      double v38 = v70;
      *a5 = v29.__sinval * v70 + v69 * v29.__cosval + *a3 * 0.00000000531749412 + v36 * 0.0001458423;
      double v39 = v71;
      a5[1] = v29.__cosval * v38 - v37 * v29.__sinval + a3[1] * 0.00000000531749412 + *a4 * -0.0001458423;
      a5[2] = v39;
    }
  }
  else if (a5)
  {
    return 3;
  }
  return 0;
}

uint64_t cnnavigation::details::dyn_GLONASS(double *a1, void *a2, uint64_t a3, void *a4, double *a5)
{
  if (!*(unsigned char *)(a3 + 16)) {
    return 1;
  }
  double v8 = a1[2];
  double v72 = a1[1];
  double v73 = *a1;
  double v9 = sqrt(v72 * v72 + v73 * v73 + v8 * v8);
  double v67 = 3.98600442e14 / v9;
  double v69 = v8;
  double v65 = v9;
  double v62 = v8 / v9;
  double v70 = v62 * (v62 * 5.0);
  double v71 = 6378136.0 / v9 * (6378136.0 / v9);
  double v10 = ((double)(*(_DWORD *)(a3 + 20) - 1)
       + 7670.0
       + 27392.375
       + (*(double *)(a3 + 24) + 16.0 + *(double *)(a3 + 32)) / 86400.0)
      / 36525.0;
  double v11 = v10 * 8328.6911 + -1.11518496;
  double v60 = v10;
  double v12 = v10 * 628.301946 + 6.25658377;
  __double2 v13 = __sincos_stret(v10 * -33.7571462 + 4.52360151);
  int v14 = 10;
  long double v15 = v11;
  long double v16 = v12;
  do
  {
    long double v15 = v11 + sin(v15) * 0.054900489;
    long double v16 = v12 + sin(v16) * 0.016719;
    --v14;
  }
  while (v14);
  double v17 = v67 / v65;
  double v68 = v72 / v65 * (v67 / v65);
  double v64 = v73 / v65 * v17;
  double v66 = v62 * v17;
  double v57 = v60 * 71.0180413 + 5.83515153;
  double v63 = v60 * 0.0300052642 + 4.90822947;
  double v18 = v13.__cosval * -v13.__cosval * 0.0040296679 + 1.0;
  double v19 = v13.__sinval * v13.__cosval * 0.0040296679;
  double v59 = v13.__cosval * 0.0896833182 * 0.917459783 + v18 * 0.39782854;
  double v61 = v13.__cosval * 0.0896833182 * -0.39782854 + v18 * 0.917459783;
  double v58 = v13.__sinval * 0.0896833182 * -0.917459783 + v19 * 0.39782854;
  __double2 v20 = __sincos_stret(v15);
  double v21 = v20.__cosval * -0.054900489 + 1.0;
  double v22 = v20.__sinval * 0.998491831 / v21;
  double v23 = (v20.__cosval + -0.054900489) / v21;
  __double2 v24 = __sincos_stret(v16);
  double v25 = v24.__cosval * -0.016719 + 1.0;
  double v26 = v24.__sinval * 0.999860228 / v25;
  double v27 = v21 * 384385243.0;
  double v28 = (v24.__cosval + -0.016719) / v25;
  __double2 v29 = __sincos_stret(v57);
  double v30 = v29.__sinval * v23 + v22 * v29.__cosval;
  double v31 = v23 * v29.__cosval - v22 * v29.__sinval;
  double v32 = (v13.__sinval * -v13.__sinval * 0.0040296679 + 1.0) * v31 + v30 * v19;
  double v33 = (v13.__sinval * 0.0896833182 * 0.39782854 + v19 * 0.917459783) * v31 + v30 * v61;
  double v34 = v58 * v31 + v30 * v59;
  double v35 = v25 * 1.49598e11;
  __double2 v36 = __sincos_stret(v63);
  uint64_t result = 0;
  double v38 = v28 * v36.__cosval - v26 * v36.__sinval;
  double v39 = v36.__sinval * v28 + v26 * v36.__cosval;
  double v40 = v39 * 0.917459783;
  double v41 = v39 * 0.39782854;
  double v42 = 4.902835e12 / v27 / v27;
  double v43 = v32 - v73 / v27;
  double v44 = v33 - v72 / v27;
  double v45 = v34 - v69 / v27;
  double v46 = sqrt(v44 * v44 + v43 * v43 + v45 * v45);
  double v47 = v38 - v73 / v35;
  double v48 = v40 - v72 / v35;
  double v49 = v41 - v69 / v35;
  double v50 = sqrt(v48 * v48 + v47 * v47 + v49 * v49);
  double v51 = 1.0 / v46 * (1.0 / v46 * (1.0 / v46));
  double v52 = 1.0 / v50 * (1.0 / v50 * (1.0 / v50));
  double v53 = v42 * -(v32 - v43 * v51);
  double v54 = v42 * -(v33 - v44 * v51);
  double v55 = v42 * -(v34 - v45 * v51);
  double v56 = 1.325263e20 / v35 / v35;
  *a4 = *a2;
  a4[1] = a2[1];
  a4[2] = a2[2];
  *a5 = v53 + v56 * -(v38 - v47 * v52) - (v64 - v71 * (v64 * -0.001623939) * (1.0 - v70));
  a5[1] = v54 + v56 * -(v40 - v48 * v52) - (v68 - v71 * (v68 * -0.001623939) * (1.0 - v70));
  a5[2] = v55 + v56 * -(v41 - v49 * v52) - (v66 - v71 * (v66 * -0.001623939) * (3.0 - v70));
  return result;
}

uint64_t cnnavigation::details::dyn_GLONASS(float64x2_t *a1, void *a2, float64x2_t *a3, uint64_t a4, void *a5, float64x2_t *a6)
{
  if (!*(unsigned char *)(a4 + 16)) {
    return 1;
  }
  uint64_t result = 0;
  double v8 = a1[1].f64[0];
  double v9 = a3[1].f64[0];
  *(double *)&uint64_t v10 = sqrt(vmlad_n_f64(COERCE_DOUBLE(*(void *)&vmulq_f64(*a1, *a1).f64[1]), a1->f64[0], a1->f64[0])+ v8 * v8);
  double v11 = 3.98600442e14 / *(double *)&v10 / *(double *)&v10;
  double v12 = 6378136.0 / *(double *)&v10 * (6378136.0 / *(double *)&v10);
  float64x2_t v13 = vdivq_f64(*a1, (float64x2_t)vdupq_lane_s64(v10, 0));
  double v14 = v8 / *(double *)&v10;
  double v15 = v14 * (v14 * 5.0);
  float64x2_t v16 = vmulq_n_f64(v13, v11);
  double v17 = v14 * v11;
  float64x2_t v18 = *a3;
  *a5 = *a2;
  a5[1] = a2[1];
  a5[2] = a2[2];
  *a6 = vaddq_f64(v18, vmlaq_n_f64(vnegq_f64(v16), vmulq_n_f64(vmulq_f64(v16, (float64x2_t)vdupq_n_s64(0xBF5A9B4B395321AALL)), v12), 1.0 - v15));
  a6[1].f64[0] = v9 - (v17 - v12 * (v17 * -0.001623939) * (3.0 - v15));
  return result;
}

uint64_t cnnavigation::GLONASSFindSat(cnnavigation *this, uint64_t a2, double a3, double a4, const cnnavigation::GLONASSAlmanac *a5, double *a6, double *a7, double *a8)
{
  if (!*(unsigned char *)(a2 + 16)) {
    return 1;
  }
  double v11 = *(double *)(a2 + 80) + 43200.0;
  double v122 = a3 - *(double *)(a2 + 24) + (double)((int)this - *(_DWORD *)(a2 + 20)) * 86400.0 + a4 - *(double *)(a2 + 32);
  double v104 = *(double *)(a2 + 64);
  long double v12 = *(double *)(a2 + 72) + 1.09955743;
  double v123 = floor(v122 / v11);
  double v112 = v11;
  double v114 = *(double *)(a2 + 88);
  double v118 = v11 + (v123 * 2.0 + 1.0) * v114;
  double v13 = *(double *)(a2 + 96);
  long double v107 = *(double *)(a2 + 104);
  double v109 = -v13;
  long double v14 = 1.0 - v13 * v13;
  double v125 = v13;
  long double v15 = v13 * cos(v107) + 1.0;
  long double v120 = v12;
  double v116 = sin(v12);
  unsigned int v16 = 0;
  double v17 = v14;
  double v18 = (v116 * -2.5 * v116 + 2.0) * pow(v14, 1.5) / (v15 * v15) + v15 * (v15 * v15) / v14;
  double v19 = 0.0;
  double v20 = v118;
  double v21 = v118;
  do
  {
    double v22 = pow(v20 * v20 / 6.28318531 / 6.28318531 * 3.98600442e14, 0.333333333);
    double v23 = v17 * v22;
    if (v16 > 8) {
      break;
    }
    double v20 = v118 / (6378136.0 / v23 * (6378136.0 / v23 * -0.00162393863) * v18 + 1.0);
    double v24 = vabdd_f64(v22, v19);
    ++v16;
    double v19 = v22;
  }
  while (v24 >= 0.1);
  double v25 = 6.28318531 / v118;
  double v119 = cos(v120);
  double v103 = -(6.28318531 / v21 * 0.00162393863 * 6378136.0 * 6378136.0 / v23 / v23 * v119 + 0.00007292115);
  double v26 = v107
      + (v119 * -5.0 * v119 + 1.0) * (6.28318531 / v21 * 0.000811969313 * 6378136.0 * -6378136.0 / v23 / v23) * v122;
  long double v27 = tan(v26 * 0.5);
  long double v28 = atan2(sqrt(1.0 - v125) * v27, sqrt(v125 + 1.0)) * -2.0;
  double v99 = v26 + v28 + v109 * sin(v28);
  double v29 = v99 + v25 * (v122 - v112 * v123 + -(v114 * v123) * v123);
  double v105 = 4.06806188e13 / v22 / v22 * 0.00162393863;
  __double2 v30 = __sincos_stret(v26);
  double v31 = v125 * v30.__cosval;
  double v32 = v125 * v30.__sinval;
  double v33 = v116;
  double v128 = v33 * -1.5 * v33 + 1.0;
  double v132 = v128 * (v105 + v105);
  __double2 v34 = __sincos_stret(v29);
  double v113 = v125 * v30.__sinval * v34.__sinval;
  double cosval = v34.__cosval;
  double v110 = v33 * (v33 * v105);
  __double2 v35 = __sincos_stret(v29 + v29);
  double sinval = v35.__sinval;
  double v37 = v35.__cosval;
  double v130 = v125 * v30.__cosval * 3.5;
  double v101 = v29;
  __double2 v38 = __sincos_stret(v29 * 3.0);
  double v102 = v110
       * (v35.__cosval
        + v125 * v30.__cosval * -0.5 * v34.__cosval
        + v125 * v30.__sinval * 0.5 * v34.__sinval
        + v130 * v38.__cosval
        + v125 * v30.__sinval * 3.5 * v38.__sinval);
  double v108 = v128 * v105;
  double v124 = v125 * v30.__cosval * 1.5;
  double v129 = v125 * v30.__sinval * 1.5;
  __double2 v39 = __sincos_stret(v29 * 4.0);
  double v92 = v125 * v30.__cosval * -8.5;
  double v91 = v125 * v30.__sinval * 8.5;
  double v40 = v116;
  double v90 = v40 * (v40 * (v105 * -0.25));
  double v41 = v119;
  double v94 = v41 * -(v105 * 0.5 * v41) * (v125 * v30.__cosval);
  double v98 = v90
      * (v34.__sinval
       + v38.__sinval * -2.33333333
       + v125 * v30.__cosval * 5.0 * v35.__sinval
       + v31 * -8.5 * v39.__sinval
       + v32 * 8.5 * v39.__cosval
       + v32 * v37)
      + v108 * (v34.__sinval + v31 * 1.5 * sinval - v32 * 1.5 * v37)
      + v94 * sinval;
  double v93 = v41 * (v41 * (v105 * 0.5)) * (v125 * v30.__sinval);
  double v97 = v90
      * (v38.__cosval * -2.33333333
       - cosval
       + v32 * -5.0 * sinval
       + v31 * -8.5 * v39.__cosval
       - v32 * 8.5 * v39.__sinval
       + v31 * v37)
      + v108 * (cosval + v31 * 1.5 * v37 + v32 * 1.5 * sinval)
      + v93 * sinval;
  double v100 = -v105;
  double v42 = v125 * v30.__sinval * -2.5 * v34.__cosval + v130 * v34.__sinval + v35.__sinval * -0.5;
  double v79 = v125 * v30.__cosval * 1.16666667;
  double v87 = v125 * v30.__sinval * -1.75;
  double v88 = v125 * v30.__cosval * 1.75;
  double v86 = v125 * v30.__sinval * -0.291666667;
  double v84 = v40 * (v40 * (v105 * 3.0));
  double v85 = v125 * v30.__cosval * -0.291666667;
  double v83 = v125 * v30.__sinval * -0.680555556;
  double v76 = v125 * v30.__cosval;
  double v82 = v125 * v30.__cosval * 0.680555556;
  double v96 = v125 * v30.__sinval * 2.33333333;
  double v78 = v125 * v30.__sinval * 1.16666667;
  double v77 = v125 * v30.__sinval;
  double v95 = v42 - v79 * v38.__sinval + v78 * v38.__cosval;
  double v80 = v125 * v30.__cosval * 2.33333333;
  double v81 = v41 * (v41 * v105);
  double v89 = v84
      * (v31 * -0.291666667 * v34.__sinval
       + v32 * -0.291666667 * cosval
       + v32 * -0.680555556 * v38.__cosval
       + v31 * 0.680555556 * v38.__sinval
       + v35.__sinval * 0.25)
      + v132 * (v32 * -1.75 * cosval + v31 * 1.75 * v34.__sinval)
      + v81 * (v42 + v79 * v38.__sinval + v32 * 1.16666667 * v38.__cosval);
  double v106 = v119 * (v116 * (v105 * 0.5));
  __double2 v43 = __sincos_stret(v99);
  double v44 = v43.__cosval;
  double v117 = v125 * v30.__sinval * v43.__sinval;
  __double2 v45 = __sincos_stret(v99 + v99);
  double v46 = v45.__sinval;
  double v47 = v45.__cosval;
  __double2 v48 = __sincos_stret(v99 * 3.0);
  double v111 = v110
       * (v45.__cosval
        + v125 * v30.__cosval * -0.5 * v43.__cosval
        + v125 * v30.__sinval * 0.5 * v43.__sinval
        + v130 * v48.__cosval
        + v125 * v30.__sinval * 3.5 * v48.__sinval);
  __double2 v49 = __sincos_stret(v99 * 4.0);
  double v121 = v120 + v106 * (v35.__cosval + v113 - v31 * v34.__cosval + v31 * 2.33333333 * v38.__cosval + v96 * v38.__sinval);
  double v50 = v90
      * (v43.__sinval
       + v48.__sinval * -2.33333333
       + v125 * v30.__cosval * 5.0 * v45.__sinval
       + v92 * v49.__sinval
       + v91 * v49.__cosval
       + v125 * v30.__sinval * v47)
      + v108 * (v43.__sinval + v124 * v46 - v129 * v47)
      + v94 * v46;
  double v51 = v90
      * (v48.__cosval * -2.33333333
       - v44
       + v125 * v30.__sinval * -5.0 * v46
       + v92 * v49.__cosval
       - v91 * v49.__sinval
       + v125 * v30.__cosval * v47)
      + v108 * (v44 + v124 * v47 + v129 * v46)
      + v93 * v46;
  double v52 = v125 * v30.__sinval * -2.5 * v43.__cosval + v130 * v43.__sinval + v45.__sinval * -0.5;
  double v126 = v52 - v79 * v48.__sinval;
  double v53 = v84 * (v85 * v43.__sinval + v86 * v44 + v83 * v48.__cosval + v82 * v48.__sinval + v45.__sinval * 0.25)
      + v132 * (v87 * v44 + v88 * v43.__sinval)
      + v81 * (v52 + v79 * v48.__sinval + v78 * v48.__cosval);
  long double v54 = v77 + v98 - v50;
  long double v55 = v76 + v97 - v51;
  double v56 = sqrt(v55 * v55 + v54 * v54);
  double v57 = atan2(v54, v55);
  unsigned int v58 = 0;
  double v59 = v101 + v89 - v53 - v57;
  long double v60 = v59;
  do
  {
    double v61 = v59 + v56 * sin(v60);
    if (v58 > 3) {
      break;
    }
    double v62 = vabdd_f64(v61, v60);
    ++v58;
    long double v60 = v61;
  }
  while (v62 >= 0.000000001);
  long double v63 = tan(v61 * 0.5);
  long double v64 = atan2(sqrt(v56 + 1.0) * v63, sqrt(1.0 - v56));
  long double v65 = v64 + v64;
  double v66 = v57 + v65;
  double v67 = (v22 + v22 * (v102 + v132 * (v113 + v76 * v34.__cosval) - (v111 + v132 * (v117 + v76 * v43.__cosval))))
      * (1.0 - v56 * v56);
  long double v133 = v65;
  double v131 = v56 * cos(v65) + 1.0;
  __double2 v68 = __sincos_stret(v66);
  __double2 v69 = __sincos_stret(v104 + v103 * v122 + v119 * v100 * v95 - v119 * v100 * (v126 + v78 * v48.__cosval));
  __double2 v70 = __sincos_stret(v121 - v106
                            * (v45.__cosval + v117 - v76 * v43.__cosval + v80 * v48.__cosval + v96 * v48.__sinval));
  double v71 = v70.__cosval * -(v68.__sinval * v69.__sinval) + v68.__cosval * v69.__cosval;
  double v72 = v67 / v131 * (v70.__cosval * (v69.__cosval * v68.__sinval) + v68.__cosval * v69.__sinval);
  *(double *)a5 = v67 / v131 * v71;
  *((double *)a5 + 1) = v72;
  *((double *)a5 + 2) = v67 / v131 * (v70.__sinval * v68.__sinval);
  if (a6)
  {
    double v127 = v67 / v131 * v71;
    double v73 = sqrt(3.98600442e14 / v67);
    long double v74 = v56 * v73 * sin(v133);
    *a6 = v74 * (v70.__cosval * -(v68.__sinval * v69.__sinval) + v68.__cosval * v69.__cosval)
        - v73 * v131 * (v70.__cosval * (v69.__sinval * v68.__cosval) + v68.__sinval * v69.__cosval)
        + v72 * 0.00007292115;
    a6[1] = v74 * (v70.__cosval * (v69.__cosval * v68.__sinval) + v68.__cosval * v69.__sinval)
          - v73 * v131 * (v70.__cosval * -(v68.__cosval * v69.__cosval) + v68.__sinval * v69.__sinval)
          + v127 * -0.00007292115;
    a6[2] = v70.__sinval * (v68.__cosval * (v73 * v131)) + v74 * v68.__sinval * v70.__sinval;
    if (a7)
    {
      *a7 = 0.0;
      a7[1] = 0.0;
      a7[2] = 0.0;
    }
  }
  else if (a7)
  {
    return 2;
  }
  return 0;
}

uint64_t cnnavigation::NullTroposphereModel::GetTroposphericDelay(cnnavigation::NullTroposphereModel *this, int a2, double a3, const double *a4, const double *a5, double *a6)
{
  uint64_t result = 0xFFFFFFFFLL;
  if (a4)
  {
    if (a5)
    {
      uint64_t result = 0;
      *a6 = 0.0;
    }
  }
  return result;
}

double cnnavigation::NullTroposphereModel::GetTroposphericDelay(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  if (a3)
  {
    if (a4)
    {
      *a5 = 0;
      *(void *)(a6 + 48) = 0;
      double result = 0.0;
      *(_OWORD *)(a6 + 16) = 0u;
      *(_OWORD *)(a6 + 32) = 0u;
      *(_OWORD *)a6 = 0u;
    }
  }
  return result;
}

void *sub_18DEEFD08(void *result)
{
  *double result = &unk_1EDD0AA90;
  return result;
}

void sub_18DEEFD28(void *a1)
{
  *a1 = &unk_1EDD0AA90;
  JUMPOUT(0x192FA6240);
}

uint64_t sub_18DEEFD58()
{
  return 1;
}

void cnnavigation::GNSSData::GNSSData()
{
}

void sub_18DEEFDD8(_Unwind_Exception *a1)
{
  MEMORY[0x192FA6240](v1, 0x1092C40658D4D87);
  _Unwind_Resume(a1);
}

void cnnavigation::GNSSData::~GNSSData(cnnavigation::GNSSData *this)
{
  uint64_t v2 = *(void *)this;
  *(void *)this = 0;
  if (v2) {
    sub_18DEEFF84(v2);
  }
}

{
  uint64_t v2;

  uint64_t v2 = *(void *)this;
  *(void *)this = 0;
  if (v2) {
    sub_18DEEFF84(v2);
  }
}

uint64_t cnnavigation::GNSSData::IsValid(cnnavigation::GNSSData *this)
{
  return *(unsigned __int8 *)(*(void *)this + 8);
}

uint64_t cnnavigation::GNSSData::Id(cnnavigation::GNSSData *this)
{
  return *(unsigned int *)(*(void *)this + 112);
}

uint64_t *cnnavigation::GNSSData::Description@<X0>(uint64_t *this@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *this;
  if (*(char *)(*this + 111) < 0) {
    return (uint64_t *)sub_18DEDE668((unsigned char *)a2, *(void **)(v2 + 88), *(void *)(v2 + 96));
  }
  long long v3 = *(_OWORD *)(v2 + 88);
  *(void *)(a2 + 16) = *(void *)(v2 + 104);
  *(_OWORD *)a2 = v3;
  return this;
}

uint64_t cnnavigation::GNSSData::Map(cnnavigation::GNSSData *this, const cnnavigation::TAITime *a2, double *a3, double *a4, double *a5)
{
  __int16 v6 = 0;
  long long v7 = 0u;
  long long v8 = 0u;
  int v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = 0;
  return cnnavigation::GNSSData::Map(this, a2, (const cnnavigation::GNSSUTCParameters *)&v6, a3, a4, a5);
}

uint64_t cnnavigation::GNSSData::Map(cnnavigation::GNSSData *this, const cnnavigation::TAITime *a2, const cnnavigation::GNSSUTCParameters *a3, double *a4, double *a5, double *a6)
{
  uint64_t result = cnnavigation::LLAToECEF(a4, 1, (double *)&v12, 0, (uint64_t)v13);
  if (!result) {
    return cnnavigation::details::GNSSElAz((uint64_t)a2, (uint64_t)a3, &v12, *(void *)this, 1, a5, a6, 0, (uint64_t)v13);
  }
  return result;
}

void sub_18DEEFF84(uint64_t a1)
{
  *(void *)a1 = &unk_1EDD0AD48;
  if (*(char *)(a1 + 151) < 0) {
    operator delete(*(void **)(a1 + 128));
  }
  if (*(char *)(a1 + 111) < 0) {
    operator delete(*(void **)(a1 + 88));
  }
  if (*(char *)(a1 + 87) < 0) {
    operator delete(*(void **)(a1 + 64));
  }
  if (*(char *)(a1 + 63) < 0) {
    operator delete(*(void **)(a1 + 40));
  }
  if (*(char *)(a1 + 39) < 0) {
    operator delete(*(void **)(a1 + 16));
  }
  *(void *)a1 = &unk_1EDD0A9B8;

  JUMPOUT(0x192FA6240);
}

double cnnavigation::BeiDouEphemerides::BeiDouAgeOfData(cnnavigation::BeiDouEphemerides *this)
{
  if (this <= 0x18)
  {
    double v1 = (double)this;
    double v2 = 3600.0;
    return v1 * v2;
  }
  if (this <= 0x1E)
  {
    double v1 = (double)((int)this - 23);
    double v2 = 86400.0;
    return v1 * v2;
  }
  double result = NAN;
  if (this == 31) {
    return INFINITY;
  }
  return result;
}

double cnnavigation::BeiDouEphemerides::BeiDouUserRangeAccuracy(cnnavigation::BeiDouEphemerides *this)
{
  if (this <= 5) {
    return exp2((double)this * 0.5 + 1.0);
  }
  if (this <= 0xE) {
    return ldexp(1.0, (int)this - 2);
  }
  double result = NAN;
  if (this == 15) {
    return INFINITY;
  }
  return result;
}

uint64_t cnnavigation::BeiDouEphemerides::GNSSFindSat(uint64_t a1, cnnavigation::TAITime *this, cnnavigation::GNSSUTCParameters *a3, double *a4, double *a5, double *a6)
{
  if (*(unsigned char *)(a1 + 32) != 4) {
    return 0xFFFFFFFFLL;
  }
  if (!*(unsigned char *)(a1 + 40)) {
    return 0xFFFFFFFFLL;
  }
  if (!*(unsigned char *)(a1 + 41)) {
    return 0xFFFFFFFFLL;
  }
  int v10 = cnnavigation::TAITime::ToBeiDouTime(this, a3);
  double v12 = *(double *)(a1 + 120);
  if (fabs(v12) < 2.22044605e-16) {
    return 0xFFFFFFFFLL;
  }
  BOOL v13 = *(uint64_t *)&v12 <= -1 || ((*(void *)&v12 & 0x7FFFFFFFFFFFFFFFuLL) - 0x10000000000000) >> 53 >= 0x3FF;
  BOOL v14 = v13 && (unint64_t)(*(void *)&v12 - 1) >= 0xFFFFFFFFFFFFFLL;
  if (v14 && (*(void *)&v12 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    return 0xFFFFFFFFLL;
  }
  int v16 = v10;
  double v17 = *(double *)(a1 + 112);
  uint64_t result = 0xFFFFFFFFLL;
  if (v17 >= 0.0 && v17 < 1.0 && (*(void *)&v17 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL)
  {
    double v19 = *(double *)(a1 + 128);
    if ((*(void *)&v19 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL)
    {
      double v20 = *(double *)(a1 + 104);
      if ((*(void *)&v20 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL)
      {
        double v21 = *(double *)(a1 + 144);
        double v22 = *(double *)(a1 + 152);
        double v155 = *(double *)(a1 + 184);
        double v153 = *(double *)(a1 + 160);
        double v154 = *(double *)(a1 + 200);
        double v156 = *(double *)(a1 + 216);
        int v23 = *(unsigned __int8 *)(a1 + 41);
        switch(*(unsigned char *)(a1 + 41))
        {
          case 0:
            return result;
          case 1:
            if (v12 > 5353.22333 && v21 < 0.479965544) {
              goto LABEL_29;
            }
            return result;
          case 2:
            if (v12 > 5353.22333) {
              goto LABEL_28;
            }
            return result;
          case 3:
            if (v12 < 5353.22333)
            {
LABEL_28:
              if (v21 > 0.479965544) {
                goto LABEL_29;
              }
            }
            return result;
          default:
LABEL_29:
            double v146 = *(double *)(a1 + 144);
            double v147 = *(double *)(a1 + 136);
            double v148 = *(double *)(a1 + 168);
            double v150 = *(double *)(a1 + 208);
            double v151 = *(double *)(a1 + 192);
            double v152 = *(double *)(a1 + 176);
            double v144 = *(double *)(a1 + 56);
            double v24 = v11 - v144 + (double)(v16 - *(_DWORD *)(a1 + 48)) * 604800.0;
            double v25 = v12 * v12;
            double v140 = *(double *)(a1 + 96) + v20 * 0.5 * v24 + 19964980.4 / (v12 * (v12 * v12));
            double v142 = v20 * 0.5;
            double v26 = *(double *)(a1 + 88) + v140 * v24;
            int v27 = 10;
            double v28 = v26;
            do
            {
              double v29 = sin(v28);
              double v28 = v26 + v17 * v29;
              --v27;
            }
            while (v27);
            double v30 = sqrt(1.0 - v17 * v17);
            double v145 = cos(v28);
            double v31 = v22 + atan2(v30 * v29, v145 - v17);
            __double2 v32 = __sincos_stret(v31 + v31);
            double v33 = v25 + v19 * v24;
            if ((v23 - 1) < 2)
            {
              uint64_t result = 0xFFFFFFFFLL;
              double v35 = v151;
              double v34 = v152;
              double v37 = v148;
              double v36 = v150;
              double v39 = v146;
              double v38 = v147;
              if (v33 < 0.0) {
                return result;
              }
              double v40 = v144;
              if (v33 < 21081100.0) {
                return result;
              }
            }
            else
            {
              double v35 = v151;
              double v34 = v152;
              double v37 = v148;
              double v36 = v150;
              double v39 = v146;
              double v38 = v147;
              if (!v23) {
                return 0xFFFFFFFFLL;
              }
              double v40 = v144;
              if (v23 == 3)
              {
                uint64_t result = 0xFFFFFFFFLL;
                if (v33 < 0.0 || v33 < 13953050.0) {
                  return result;
                }
              }
            }
            double v134 = v20;
            double v139 = v30;
            double v41 = v31 + v34 * v32.__cosval + v155 * v32.__sinval;
            double v138 = -v17 * v145 + 1.0;
            double v132 = v25 + v19 * v24;
            double v42 = v33 * v138 + v35 * v32.__cosval;
            double v43 = v39 + v37 * v24 + v36 * v32.__cosval + v156 * v32.__sinval;
            double v44 = v153 + -0.00007292115;
            if (v23 == 1) {
              double v44 = v153;
            }
            double v135 = v44;
            double v45 = v38 + v44 * v24 + v40 * -0.00007292115;
            __double2 v46 = __sincos_stret(v41);
            __double2 v47 = __sincos_stret(v43);
            __double2 v48 = __sincos_stret(v45);
            if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1EB403718, memory_order_acquire) & 1) == 0
              && __cxa_guard_acquire(&qword_1EB403718))
            {
              qword_1EB403710 = 0x3FEFE0D3B41815A2;
              __cxa_guard_release(&qword_1EB403718);
            }
            double v49 = v42 + v154 * v32.__sinval;
            double sinval = v32.__sinval;
            if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1EB403728, memory_order_acquire) & 1) == 0)
            {
              int v116 = __cxa_guard_acquire(&qword_1EB403728);
              double sinval = v32.__sinval;
              if (v116)
              {
                qword_1EB403720 = 0xBFB64FD6B8C28102;
                __cxa_guard_release(&qword_1EB403728);
                double sinval = v32.__sinval;
              }
            }
            double v51 = v49 * v46.__cosval;
            double v52 = v49 * v46.__sinval;
            double cosval = 0.0;
            double v54 = 0.0;
            if (v23 == 1)
            {
              double v55 = sinval;
              __double2 v56 = __sincos_stret(v24 * 0.00007292115);
              double cosval = v56.__cosval;
              double v54 = v56.__sinval;
              double v52 = v49 * v46.__sinval;
              double v51 = v49 * v46.__cosval;
              double sinval = v55;
            }
            double v57 = -(v52 * v47.__cosval);
            double v58 = v48.__sinval * v57;
            double v59 = v47.__cosval * v52;
            double v60 = v48.__cosval * (v47.__cosval * v52);
            double v61 = v60 + v51 * v48.__sinval;
            if (v23 == 1) {
              double v62 = v48.__sinval * v57 + v51 * v48.__cosval;
            }
            else {
              double v62 = 0.0;
            }
            if (v23 == 1) {
              double v63 = v60 + v51 * v48.__sinval;
            }
            else {
              double v63 = 0.0;
            }
            double v64 = v47.__sinval * v52;
            if (v23 == 1) {
              double v65 = v47.__sinval * v52;
            }
            else {
              double v65 = 0.0;
            }
            double v136 = *(double *)&qword_1EB403720;
            double v137 = *(double *)&qword_1EB403710;
            double v66 = v65 * *(double *)&qword_1EB403720 + *(double *)&qword_1EB403710 * v63;
            if (v23 == 1) {
              double v67 = v66;
            }
            else {
              double v67 = 0.0;
            }
            int v68 = *(unsigned __int8 *)(a1 + 41);
            unsigned int v69 = v68 - 2;
            if ((v68 - 2) < 2)
            {
              *a4 = v51 * v48.__cosval - v59 * v48.__sinval;
              double v70 = v47.__sinval * v52;
            }
            else
            {
              if (!*(unsigned char *)(a1 + 41)) {
                return 0xFFFFFFFFLL;
              }
              if (v68 != 1)
              {
LABEL_67:
                double v120 = v67;
                double v121 = v62;
                double v122 = v54;
                double v123 = cosval;
                double v130 = v52;
                double v131 = v48.__cosval * (v47.__cosval * v52);
                double v71 = v140 + v142 * v24;
                double v72 = v71 / v138;
                double v73 = v139 * (v71 / v138) / v138;
                double v129 = v155 * v32.__cosval - v152 * sinval + v155 * v32.__cosval - v152 * sinval;
                double v74 = v73 + v129 * v73;
                double v75 = v17 * v132;
                double v76 = v154 * v32.__cosval - v151 * sinval + v154 * v32.__cosval - v151 * sinval;
                double v77 = v19 * v138 + v17 * v132 * v29 * (v71 / v138) + v76 * v73;
                double v143 = sinval;
                double v78 = v156 * v32.__cosval - v150 * sinval + v156 * v32.__cosval - v150 * sinval;
                double v79 = v148 + v78 * v73;
                double v128 = v74 * -v52;
                double v80 = v128 + v77 * v46.__cosval;
                double v127 = v51 * v74;
                double v81 = v51 * v74 + v77 * v46.__sinval;
                double v82 = 0.00007292115;
                if (v23 != 1) {
                  double v82 = 0.0;
                }
                double v119 = v82;
                double v83 = -(v51 * v48.__sinval);
                double v125 = v153 * v83;
                double v84 = v79 * v64;
                double v85 = v153 * v83
                    + v80 * v48.__cosval
                    + -(v81 * v47.__cosval) * v48.__sinval
                    + v79 * v64 * v48.__sinval
                    + v48.__cosval * v57 * v153;
                double v141 = v51;
                double v86 = v48.__cosval * v51;
                double v124 = v153 * (v48.__cosval * v51);
                double v87 = v47.__cosval * v81;
                double v126 = -(v64 * v79);
                double v88 = v124 + v80 * v48.__sinval + v47.__cosval * v81 * v48.__cosval + v126 * v48.__cosval + v58 * v153;
                if (v23 != 1) {
                  double v85 = 0.0;
                }
                double v118 = v85;
                if (v23 == 1) {
                  double v89 = v88;
                }
                else {
                  double v89 = 0.0;
                }
                double v133 = v79 * v59;
                double v90 = v79 * v59 + v81 * v47.__sinval;
                if (v23 == 1) {
                  double v91 = v79 * v59 + v81 * v47.__sinval;
                }
                else {
                  double v91 = 0.0;
                }
                double v92 = v91 * v136 + v137 * v89;
                if (v23 != 1) {
                  double v92 = 0.0;
                }
                double v117 = v92;
                double v149 = v83;
                if (v69 >= 2)
                {
                  if (v68 != 1) {
                    goto LABEL_86;
                  }
                  double v90 = v90 * v137 - v136 * v89;
                  if (v23 != 1) {
                    double v90 = 0.0;
                  }
                  double v94 = -(v122 * v119);
                  *a5 = v62 * v94 + v123 * v118 + v122 * v92 + v119 * v123 * v120;
                  double v84 = v79 * v64;
                  double v93 = -(v119 * v123 * v62) - v122 * v118 + v123 * v92 + v94 * v120;
                }
                else
                {
                  *a5 = v135 * v83
                      + v80 * v48.__cosval
                      - v87 * v48.__sinval
                      + v84 * v48.__sinval
                      + -(v59 * v48.__cosval) * v135;
                  double v93 = v135 * v86
                      + v80 * v48.__sinval
                      + v87 * v48.__cosval
                      - v84 * v48.__cosval
                      + -(v59 * v48.__sinval) * v135;
                }
                a5[1] = v93;
                a5[2] = v90;
LABEL_86:
                double v95 = -v17 * v145 + 1.0;
                double v96 = (v138 * v134 - v71 * (v17 * v29 * v72)) / (v95 * v95);
                double v97 = v17 * (v19 + v19) * v29 * v72 + v75 * (v72 * (v145 * v72) + v29 * v96);
                double v98 = v139 * (v96 / v138 + v29 * (v17 * (-v72 / (v95 * v95))) * v72);
                double v99 = v98 + v129 * v98 + v73 * ((-v152 * v32.__cosval - v155 * v143) * 4.0) * v73;
                double v100 = v97 + v76 * v98 + v73 * ((-v151 * v32.__cosval - v154 * v143) * 4.0) * v73;
                double v101 = v73 * (v73 * ((-v150 * v32.__cosval - v156 * v143) * 4.0)) + v78 * v98;
                double v102 = v100 * v46.__cosval
                     - v46.__sinval * v77 * v74
                     - (v74 * v127
                      + v46.__sinval * v77 * v74
                      + v130 * v99);
                double v103 = v74 * (v46.__cosval * v77)
                     + v100 * v46.__sinval
                     + v74 * v128
                     + v46.__cosval * v77 * v74
                     + v141 * v99;
                double v104 = 0.0;
                double v105 = v48.__sinval * v80;
                double v106 = 0.0;
                double v107 = 0.0;
                if (v23 == 1)
                {
                  double v108 = v153;
                  double v109 = v79 * (v47.__sinval * v81);
                  double v106 = v48.__sinval * (v79 * v133)
                       + v109 * v48.__sinval
                       + v64 * v101 * v48.__sinval
                       + v48.__cosval * v84 * v108
                       + v102 * v48.__cosval
                       - v105 * v108
                       - (v108 * v124
                        + v105 * v108)
                       - (v47.__cosval * v103 * v48.__sinval
                        - v109 * v48.__sinval
                        + v48.__cosval * v87 * v108)
                       - (v48.__cosval * v87 * v108
                        - v48.__cosval * v84 * v108
                        + v108 * -(v59 * v48.__sinval) * v108);
                  double v110 = v108 * v125
                       + v48.__cosval * v80 * v108
                       + v108 * (v48.__cosval * v80)
                       + v102 * v48.__sinval
                       + v47.__cosval * v103 * v48.__cosval
                       - v109 * v48.__cosval
                       - v48.__sinval * v87 * v108
                       - (v48.__cosval * (v79 * v133)
                        + v109 * v48.__cosval
                        + v64 * v101 * v48.__cosval
                        + v48.__sinval * v126 * v108)
                       - (v108 * (v48.__sinval * v126)
                        + v48.__sinval * v87 * v108
                        + v108 * v131 * v108);
                  double v111 = v79 * v126 + v87 * v79 + v59 * v101 + v79 * v87 + v103 * v47.__sinval;
                  double v104 = v111 * v136 + v137 * v110;
                  double v107 = v111 * v137 - v136 * v110;
                }
                if (v69 >= 2)
                {
                  if (v68 != 1) {
                    return 0;
                  }
                  double v113 = -(v122 * v119);
                  double v114 = -(v119 * v123 * v119);
                  double v115 = v119 * (v119 * v122);
                  *a6 = v119 * v123 * v117
                      - v115 * v120
                      + v119 * v123 * v117
                      + v122 * v104
                      + v121 * v114
                      + v113 * v118
                      + v123 * v106
                      - v119 * v122 * v118;
                  a6[1] = v114 * v120
                        + v113 * v117
                        + v123 * v104
                        - v119 * v122 * v117
                        + v121 * v115
                        + -(v123 * v119) * v118
                        + -(v119 * v123 * v118)
                        - v122 * v106;
                }
                else
                {
                  double v112 = v79 * (v47.__sinval * v81);
                  *a6 = v48.__sinval * (v79 * v133)
                      + v112 * v48.__sinval
                      + v64 * v101 * v48.__sinval
                      + v48.__cosval * v84 * v135
                      + v102 * v48.__cosval
                      - v105 * v135
                      - (v135 * (v135 * v86)
                       + v105 * v135)
                      - (v47.__cosval * v103 * v48.__sinval
                       - v112 * v48.__sinval
                       + v48.__cosval * v87 * v135)
                      - (v48.__cosval * v87 * v135
                       - v48.__cosval * v84 * v135
                       + v135 * -(v59 * v48.__sinval) * v135);
                  a6[1] = v135 * (v135 * v149)
                        + v48.__cosval * v80 * v135
                        + v135 * (v48.__cosval * v80)
                        + v102 * v48.__sinval
                        + v47.__cosval * v103 * v48.__cosval
                        - v112 * v48.__cosval
                        - v48.__sinval * v87 * v135
                        - (v48.__cosval * (v79 * v133)
                         + v112 * v48.__cosval
                         + v64 * v101 * v48.__cosval
                         + -(v84 * v48.__sinval) * v135)
                        - (v135 * -(v84 * v48.__sinval)
                         + v48.__sinval * v87 * v135
                         + v135 * v131 * v135);
                  double v107 = v87 * v79 - v84 * v79 + v59 * v101 + v79 * v87 + v103 * v47.__sinval;
                }
                uint64_t result = 0;
                a6[2] = v107;
                return result;
              }
              double v70 = 0.0;
              if (v23 == 1) {
                double v70 = v64 * *(double *)&qword_1EB403710 - *(double *)&qword_1EB403720 * v61;
              }
              *a4 = v54 * v67 + cosval * v62;
              double v61 = cosval * v67 - v54 * v62;
            }
            a4[1] = v61;
            a4[2] = v70;
            goto LABEL_67;
        }
      }
    }
  }
  return result;
}

uint64_t cnnavigation::BeiDouEphemerides::GNSSSatelliteClockOffset(uint64_t a1, cnnavigation::TAITime *this, cnnavigation::GNSSUTCParameters *a3, double *a4, int a5, double *a6, long double a7)
{
  if (*(unsigned char *)(a1 + 32) != 4) {
    return 0xFFFFFFFFLL;
  }
  if (!*(unsigned char *)(a1 + 40)) {
    return 0xFFFFFFFFLL;
  }
  int v13 = cnnavigation::TAITime::ToBeiDouTime(this, a3);
  double v15 = *(double *)(a1 + 120);
  if (fabs(v15) < 2.22044605e-16 || (*(void *)&v15 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL) {
    return 0xFFFFFFFFLL;
  }
  int v16 = v13;
  double v17 = *(double *)(a1 + 112);
  uint64_t result = 0xFFFFFFFFLL;
  if (v17 < 0.0) {
    return result;
  }
  if (v17 >= 1.0) {
    return result;
  }
  if ((*(void *)&v17 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL) {
    return result;
  }
  double v19 = *(double *)(a1 + 128);
  if ((*(void *)&v19 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL) {
    return result;
  }
  double v20 = *(double *)(a1 + 104);
  if ((*(void *)&v20 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL) {
    return result;
  }
  double v21 = v14;
  double v22 = v14 - *(double *)(a1 + 72) + (double)(v16 - *(_DWORD *)(a1 + 64)) * 604800.0;
  double v23 = v14 - *(double *)(a1 + 56) + (double)(v16 - *(_DWORD *)(a1 + 48)) * 604800.0;
  double v51 = *(double *)(a1 + 232);
  double v50 = *(double *)(a1 + 240);
  double v52 = *(double *)(a1 + 224) + v51 * v22 + v50 * (v22 * v22);
  double v24 = v15 * v15;
  double v49 = v20 * 0.5;
  double v48 = *(double *)(a1 + 96) + v20 * 0.5 * v23 + 19964980.4 / (v15 * (v15 * v15));
  double v25 = *(double *)(a1 + 88) + v48 * v23;
  int v26 = 10;
  long double v27 = v25;
  do
  {
    long double v27 = v25 + v17 * sin(v27);
    --v26;
  }
  while (v26);
  double v28 = v24 + v19 * v23;
  int v29 = *(unsigned __int8 *)(a1 + 41);
  if ((v29 - 1) < 2)
  {
    uint64_t result = 0xFFFFFFFFLL;
    if (v28 < 0.0) {
      return result;
    }
    double v30 = 21081100.0;
LABEL_19:
    if (v28 < v30) {
      return result;
    }
    goto LABEL_20;
  }
  if (!*(unsigned char *)(a1 + 41)) {
    return 0xFFFFFFFFLL;
  }
  if (v29 == 3)
  {
    uint64_t result = 0xFFFFFFFFLL;
    if (v28 < 0.0) {
      return result;
    }
    double v30 = 13953050.0;
    goto LABEL_19;
  }
LABEL_20:
  if (a7 <= 0.0 || (*(void *)&a7 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL) {
    return 0xFFFFFFFFLL;
  }
  double v31 = sqrt(v28);
  double v32 = v27 - v25;
  double v33 = v31 * -4.44280731e-10 * (v27 - v25);
  if (fabs(a7 + -1561098000.0) <= 0.000000015)
  {
    double v35 = (double *)(a1 + 248);
    goto LABEL_32;
  }
  if (fabs(a7 + -1575420000.0) <= 0.000000015)
  {
    double v35 = (double *)(a1 + 264);
    goto LABEL_32;
  }
  if (fabs(a7 + -1207140000.0) <= 0.000000015)
  {
    double v35 = (double *)(a1 + 256);
    goto LABEL_32;
  }
  double v34 = 0.0;
  if (fabs(a7 + -1176450000.0) <= 0.000000015)
  {
    double v35 = (double *)(a1 + 280);
LABEL_32:
    double v34 = *v35;
  }
  double v36 = v52 + v33;
  if (a5) {
    a7 = v51
  }
       + (v50 + v50) * v22
       + v19 * (v32 * -2.22140365e-10 / v31)
       - v31 * -4.44280731e-10 * (v48 + v49 * v23)
       + v31 * -4.44280731e-10 * ((v48 + v49 * v23) / (1.0 - v17 * cos(v27)));
  double v37 = v36 - v34;
  if (cnnavigation::GNSSUTCParameters::IsValid(a3) && *((unsigned char *)a3 + 1) == 4)
  {
    v53[0] = 0;
    v53[1] = 0;
    *(double *)v38.i64 = v21;
    CNTimeSpan::SetTimeSpan(v53, 604800 * v16, v38, v39);
    double v40 = *((double *)a3 + 1);
    double v41 = *((double *)a3 + 2);
    uint64_t v44 = CNTimeSpan::operator-((uint64_t)v53, (void *)a3 + 3, v42, v43);
    *a4 = v37 - (v40 + v41 * (v45 + (double)v44));
    if (a5)
    {
      double v46 = *((double *)a3 + 2);
      double v47 = 1.0 / (1.0 - v46);
      *a6 = (a7 - v46) * v47;
      a6[1] = 0.0 / v47;
    }
  }
  else
  {
    *a4 = v37;
    if (a5)
    {
      uint64_t result = 0;
      *a6 = a7;
      a6[1] = 0.0;
      return result;
    }
  }
  return 0;
}

uint64_t cnnavigation::BeiDouEphemerides::GNSSSatelliteClockOffsetRate(uint64_t a1, cnnavigation::TAITime *this, cnnavigation::GNSSUTCParameters *a3, double *a4, int a5, uint64_t a6)
{
  if (*(unsigned char *)(a1 + 32) != 4) {
    return 0xFFFFFFFFLL;
  }
  if (!*(unsigned char *)(a1 + 40)) {
    return 0xFFFFFFFFLL;
  }
  int v11 = cnnavigation::TAITime::ToBeiDouTime(this, a3);
  double v13 = *(double *)(a1 + 120);
  if (fabs(v13) < 2.22044605e-16 || (*(void *)&v13 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL) {
    return 0xFFFFFFFFLL;
  }
  double v14 = *(double *)(a1 + 112);
  if (v14 < 0.0 || v14 >= 1.0) {
    return 0xFFFFFFFFLL;
  }
  if ((*(void *)&v14 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL) {
    return 0xFFFFFFFFLL;
  }
  double v16 = *(double *)(a1 + 128);
  if ((*(void *)&v16 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL) {
    return 0xFFFFFFFFLL;
  }
  double v17 = *(double *)(a1 + 104);
  if ((*(void *)&v17 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL) {
    return 0xFFFFFFFFLL;
  }
  double v40 = v12 - *(double *)(a1 + 72) + (double)(v11 - *(_DWORD *)(a1 + 64)) * 604800.0;
  double v18 = v12 - *(double *)(a1 + 56) + (double)(v11 - *(_DWORD *)(a1 + 48)) * 604800.0;
  double v19 = v13 * v13;
  double v20 = *(double *)(a1 + 96) + v17 * 0.5 * v18 + 19964980.4 / (v13 * (v13 * v13));
  double v21 = *(double *)(a1 + 88) + v20 * v18;
  int v22 = 10;
  double v23 = v21;
  do
  {
    double v24 = sin(v23);
    double v23 = v21 + v14 * v24;
    --v22;
  }
  while (v22);
  double v38 = *(double *)(a1 + 240);
  double v39 = *(double *)(a1 + 232);
  double v25 = cos(v21 + v14 * v24);
  double v26 = v19 + v16 * v18;
  int v27 = *(unsigned __int8 *)(a1 + 41);
  if ((v27 - 1) < 2)
  {
    uint64_t result = 0xFFFFFFFFLL;
    if (v26 < 0.0) {
      return result;
    }
    double v29 = 21081100.0;
LABEL_24:
    if (v26 < v29) {
      return result;
    }
    goto LABEL_25;
  }
  if (!*(unsigned char *)(a1 + 41)) {
    return 0xFFFFFFFFLL;
  }
  if (v27 == 3)
  {
    uint64_t result = 0xFFFFFFFFLL;
    if (v26 < 0.0) {
      return result;
    }
    double v29 = 13953050.0;
    goto LABEL_24;
  }
LABEL_25:
  double v30 = v20 + v17 * 0.5 * v18;
  double v31 = 1.0 - v14 * v25;
  double v32 = sqrt(v26);
  double v33 = v30 / v31 - v30;
  double v34 = (v23 - v21) * -2.22140365e-10;
  if (a5) {
    double v14 = v34 / v32 * 0.0
  }
        - v32 * -4.44280731e-10 * v17
        + v32 * -4.44280731e-10 * ((v17 + (v21 - v23) * (v30 / v31) * (v30 / v31)) / v31)
        + 1.0 / v32 * (v33 * -2.22140365e-10) * v16
        + v16 * (1.0 / v32 * -2.22140365e-10) * (v30 / v31)
        - v16 * (1.0 / v32 * -2.22140365e-10) * v30
        + v38
        + v38;
  double v35 = v16 * (1.0 / v32 * v34) + v32 * -4.44280731e-10 * v33 + v39 + (v38 + v38) * v40;
  if (cnnavigation::GNSSUTCParameters::IsValid(a3) && *((unsigned char *)a3 + 1) == 4)
  {
    double v36 = *((double *)a3 + 2);
    double v37 = 1.0 / (1.0 - v36);
    *a4 = (v35 - v36) * v37;
    if (a5)
    {
      double v14 = v14 * (v37 * v37);
LABEL_32:
      uint64_t result = 0;
      *(double *)a6 = v14;
      *(void *)(a6 + 8) = 0;
      return result;
    }
  }
  else
  {
    *a4 = v35;
    if (a5) {
      goto LABEL_32;
    }
  }
  return 0;
}

uint64_t sub_18DEF1358(uint64_t a1)
{
  *(void *)a1 = &unk_1EDD0AAC8;
  if (*(char *)(a1 + 31) < 0) {
    operator delete(*(void **)(a1 + 8));
  }
  *(void *)a1 = &unk_1EDD0A9B8;
  return a1;
}

void sub_18DEF13C4(uint64_t a1)
{
  *(void *)a1 = &unk_1EDD0AAC8;
  if (*(char *)(a1 + 31) < 0) {
    operator delete(*(void **)(a1 + 8));
  }
  *(void *)a1 = &unk_1EDD0A9B8;

  JUMPOUT(0x192FA6240);
}

uint64_t cnnavigation::NavicTime::NavicTime(uint64_t this, int a2, double a3)
{
  *(_DWORD *)this = a2;
  *(double *)(this + 8) = a3;
  return this;
}

{
  *(_DWORD *)this = a2;
  *(double *)(this + 8) = a3;
  return this;
}

double cnnavigation::NavicTime::NavicTime(cnnavigation::NavicTime *this, double a2)
{
  int v2 = vcvtmd_s64_f64(a2 / 604800.0);
  *(_DWORD *)this = v2;
  double result = a2 + (double)v2 * -604800.0;
  *((double *)this + 1) = result;
  return result;
}

{
  int v2;
  double result;

  int v2 = vcvtmd_s64_f64(a2 / 604800.0);
  *(_DWORD *)this = v2;
  double result = a2 + (double)v2 * -604800.0;
  *((double *)this + 1) = result;
  return result;
}

double cnnavigation::NavicTime::NavicTime(uint64_t a1, double *a2)
{
  double v2 = *a2;
  uint64_t v3 = *(void *)a2 / 604800;
  *(_DWORD *)a1 = v3;
  double result = a2[1] + (double)(*(void *)&v2 - 604800 * (int)v3);
  *(double *)(a1 + 8) = result;
  if (result < 0.0)
  {
    *(_DWORD *)a1 = v3 - 1;
    double result = result + 604800.0;
    *(double *)(a1 + 8) = result;
  }
  return result;
}

{
  double v2;
  uint64_t v3;
  double result;

  double v2 = *a2;
  uint64_t v3 = *(void *)a2 / 604800;
  *(_DWORD *)a1 = v3;
  double result = a2[1] + (double)(*(void *)&v2 - 604800 * (int)v3);
  *(double *)(a1 + 8) = result;
  if (result < 0.0)
  {
    *(_DWORD *)a1 = v3 - 1;
    double result = result + 604800.0;
    *(double *)(a1 + 8) = result;
  }
  return result;
}

uint64_t cnnavigation::NavicTime::operator CNTime(int *a1, int8x16_t a2, int8x16_t a3)
{
  a2.i64[0] = *((void *)a1 + 1);
  uint64_t v3 = vcvtmd_s64_f64(*(double *)a2.i64) + 604800 * *a1;
  *(double *)a3.i64 = (double)(uint64_t)floor(*(double *)a2.i64);
  *(double *)a2.i64 = *(double *)a2.i64 - *(double *)a3.i64;
  v5[0] = 0;
  v5[1] = 0;
  CNTimeSpan::SetTimeSpan(v5, v3, a2, a3);
  return v5[0];
}

uint64_t cnnavigation::NavicTimeToJulianTime(int *a1, int a2, uint64_t a3, int8x16_t a4, int8x16_t a5)
{
  uint64_t v7 = cnnavigation::NavicTime::operator CNTime(a1, a4, a5);
  LODWORD(v11) = v7 / 604800;
  double v9 = v8 + (double)(v7 - 604800 * SLODWORD(v11));
  double v12 = v9;
  if (v9 < 0.0)
  {
    LODWORD(v11) = v7 / 604800 - 1;
    double v12 = v9 + 604800.0;
  }
  return cnnavigation::GalileoTimeToJulianTime(&v11, a2, a3);
}

uint64_t cnnavigation::JulianTimeToNavicTime(uint64_t a1, int a2, uint64_t a3)
{
  int v11 = 0;
  double v12 = 0.0;
  cnnavigation::JulianTimeToGalileoTime(a1, a2, (uint64_t)&v11);
  uint64_t v5 = v4;
  *(double *)v6.i64 = (double)(uint64_t)floor(v12);
  *(double *)v7.i64 = v12 - *(double *)v6.i64;
  uint64_t v13 = 0;
  double v14 = 0.0;
  CNTimeSpan::SetTimeSpan(&v13, vcvtmd_s64_f64(v12) + 604800 * v11, v7, v6);
  double v8 = v14 + (double)(v13 - 604800 * (int)(v13 / 604800));
  BOOL v9 = v8 < 0.0;
  if (v8 < 0.0) {
    double v8 = v8 + 604800.0;
  }
  *(_DWORD *)a3 = v13 / 604800 - v9;
  *(double *)(a3 + 8) = v8;
  return v5;
}

uint64_t cnnavigation::ECEFToLLA(float64x2_t *a1, int a2, double *a3)
{
  return cnnavigation::ECEFToLLA(a1, a2, a3, 0, (uint64_t)v4);
}

uint64_t cnnavigation::ECEFToLLA(float64x2_t *a1, int a2, double *a3, int a4, uint64_t a5)
{
  float64x2_t v5 = *a1;
  long double v6 = a1[1].f64[0];
  long double v7 = a1->f64[1];
  double v8 = vmlad_n_f64(vmuld_lane_f64(v7, *a1, 1), v5.f64[0], v5.f64[0]);
  double v9 = sqrt(v8 + v6 * v6);
  if (v9 <= 0.00000001) {
    return 1;
  }
  uint64_t v13 = 2;
  if (a2 == 1)
  {
    double v19 = sqrt(v8);
    double v20 = v6 / v19;
    double v21 = fabs(v6 / v19);
    if (v6 >= 0.0) {
      int v22 = 1;
    }
    else {
      int v22 = 2;
    }
    if (v21 >= 100000000.0) {
      int v23 = v22;
    }
    else {
      int v23 = 0;
    }
    *(double *)&uint64_t __xa = v19;
    double v59 = v9;
    float64x2_t v61 = *a1;
    if (v21 >= 100000000.0)
    {
      if (v6 <= 0.0)
      {
        if (v6 >= 0.0) {
          double v25 = 0.0;
        }
        else {
          double v25 = -1.57079633;
        }
      }
      else
      {
        double v25 = 1.57079633;
      }
    }
    else
    {
      long double v24 = atan2(v6, v19);
      v5.f64[0] = v61.f64[0];
      double v25 = v24;
    }
    double v30 = atan2(v7, v5.f64[0]);
    double v31 = 6378137.0;
    if ((v23 - 1) >= 2)
    {
      if (v23)
      {
        uint64_t v13 = 0xFFFFFFFFLL;
        double v35 = 0.0;
        *(double *)&uint64_t v32 = v59;
      }
      else
      {
        double v58 = v30;
        int v33 = -10;
        double v34 = 0.0;
        double v35 = INFINITY;
        double v31 = 6378137.0;
        double v36 = INFINITY;
        while (1)
        {
          double v37 = v35;
          double v35 = v34;
          double v38 = v25;
          if (vabdd_f64(v34, v37) <= 0.0005 && vabdd_f64(v25, v36) <= 7.9e-11) {
            break;
          }
          long double v39 = sin(v25);
          double v31 = 6378137.0 / sqrt(v39 * -0.00669437999 * v39 + 1.0);
          double v25 = atan(v6 / (*(double *)&__xa * (v31 * -0.00669437999 / (v35 + v31) + 1.0)));
          double v34 = *(double *)&__xa / cos(v25) - v31;
          double v36 = v38;
          if (__CFADD__(v33++, 1))
          {
            uint64_t v13 = 0;
            double v35 = v34;
            goto LABEL_59;
          }
        }
        uint64_t v13 = 0;
LABEL_59:
        *(double *)&uint64_t v32 = v59;
        double v30 = v58;
      }
    }
    else
    {
      *(double *)&uint64_t v32 = v59;
      if (v6 <= 0.0)
      {
        if (v6 >= 0.0) {
          double v25 = 0.0;
        }
        else {
          double v25 = -1.57079633;
        }
      }
      else
      {
        double v25 = 1.57079633;
      }
      uint64_t v13 = 0;
      double v35 = v59 + -6356752.31;
      double v30 = 0.0;
    }
    *a3 = v25;
    a3[1] = v30;
    a3[2] = v35;
    if (a4)
    {
      if ((v23 - 1) >= 2)
      {
        if (v23)
        {
          return 0xFFFFFFFFLL;
        }
        else
        {
          __double2 v41 = __sincos_stret(v25);
          double v63 = tan(v25);
          long double v42 = v41.__cosval
              * (v41.__sinval
               * 42697.6727)
              * pow(v41.__sinval * -0.00669437999 * v41.__sinval + 1.0, -1.5);
          long double v43 = *(double *)&__xa * v41.__sinval / (v41.__cosval * v41.__cosval) - v42;
          float64_t v44 = v61.f64[0] / (*(double *)&__xa * v41.__cosval);
          long double v45 = v7 / (*(double *)&__xa * v41.__cosval);
          double v46 = v31 / (v31 + v35);
          double v47 = v46 * -0.00669437999 + 1.0;
          double v48 = v20 * 0.00669437999 / (v47 * v47);
          double v49 = -(v48 * v46) / (v31 + v35);
          long double v50 = v63 * v63 + 1.0 - (v49 * v43 + v35 * v48 / ((v31 + v35) * (v31 + v35)) * v42);
          long double v51 = (v44 * v49 + -v61.f64[0] / *(double *)&__xa * v48 / (*(double *)&__xa * 0.00669437999) * v47) / v50;
          long double v52 = 1.0 / (*(double *)&__xa * v47) / v50;
          *(long double *)(a5 + 16) = v52;
          long double v53 = v43 * v52;
          float64x2_t v54 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v61.f64[0], 0);
          v54.f64[0] = -v7;
          float64x2_t v55 = (float64x2_t)vdupq_lane_s64(__xa, 0);
          float64x2_t v56 = vdivq_f64(v54, v55);
          long double v57 = (v45 * v49 + v48 * v56.f64[0] / (*(double *)&__xa * 0.00669437999) * v47) / v50;
          *(long double *)a5 = v51;
          *(long double *)(a5 + 8) = v57;
          *(long double *)(a5 + 48) = v44 + v43 * v51;
          *(long double *)(a5 + 56) = v45 + v43 * v57;
          *(long double *)(a5 + 64) = v53;
          *(float64x2_t *)(a5 + 24) = vdivq_f64(v56, v55);
          *(void *)(a5 + 40) = 0;
        }
      }
      else
      {
        *(void *)a5 = 0;
        *(void *)(a5 + 8) = 0;
        *(void *)(a5 + 16) = 0;
        *(void *)(a5 + 24) = 0;
        *(float64x2_t *)(a5 + 48) = vdivq_f64(v61, (float64x2_t)vdupq_lane_s64(v32, 0));
        *(long double *)(a5 + 64) = v6 / *(double *)&v32;
        *(void *)(a5 + 32) = 0;
        *(void *)(a5 + 40) = 0;
      }
    }
    return v13;
  }
  if (a2) {
    return v13;
  }
  double __x = sqrt(v8);
  double v14 = fabs(v6 / __x);
  if (v6 >= 0.0) {
    int v15 = 1;
  }
  else {
    int v15 = 2;
  }
  if (v14 >= 100000000.0) {
    int v16 = v15;
  }
  else {
    int v16 = 0;
  }
  if ((v16 - 1) < 2)
  {
    if (v6 <= 0.0)
    {
      double v17 = -1.57079633;
      if (v6 >= 0.0) {
        double v17 = 0.0;
      }
    }
    else
    {
      double v17 = 1.57079633;
    }
    *a3 = v17;
    double v26 = 0.0;
LABEL_32:
    uint64_t v13 = 0;
    a3[1] = v26;
    a3[2] = v9 + -6371009.0;
    if (a4) {
      goto LABEL_33;
    }
    return v13;
  }
  if (!v16)
  {
    double v60 = v9;
    long double v62 = a1->f64[0];
    *a3 = atan2(v6, __x);
    double v26 = atan2(v7, v62);
    double v9 = v60;
    v5.f64[0] = v62;
    goto LABEL_32;
  }
  uint64_t v13 = 0xFFFFFFFFLL;
  if (a4)
  {
LABEL_33:
    if ((v16 - 1) >= 2)
    {
      if (!v16)
      {
        double v27 = v6 / v9;
        *(long double *)a5 = -v5.f64[0] / v9 * (v6 / v9) / __x;
        *(long double *)(a5 + 8) = -v7 / v9 * (v6 / v9) / __x;
        v28.f64[0] = v9;
        v28.f64[1] = __x;
        v29.f64[0] = __x;
        v29.f64[1] = -v7;
        *(float64x2_t *)(a5 + 16) = vdivq_f64(vdivq_f64(v29, v28), v28);
        *(double *)(a5 + 32) = v5.f64[0] / __x / __x;
        *(void *)(a5 + 40) = 0;
LABEL_57:
        *(double *)(a5 + 48) = v5.f64[0] / v9;
        *(long double *)(a5 + 56) = v7 / v9;
        *(double *)(a5 + 64) = v27;
        return v13;
      }
      uint64_t v13 = 0xFFFFFFFFLL;
    }
    else
    {
      *(void *)a5 = 0;
      *(void *)(a5 + 8) = 0;
      *(void *)(a5 + 16) = 0;
    }
    *(void *)(a5 + 24) = 0;
    *(void *)(a5 + 32) = 0;
    *(void *)(a5 + 40) = 0;
    double v27 = v6 / v9;
    goto LABEL_57;
  }
  return v13;
}

uint64_t cnnavigation::ECEFToLLA(float64x2_t *a1, int a2, double *a3, uint64_t a4)
{
  return cnnavigation::ECEFToLLA(a1, a2, a3, 1, a4);
}

uint64_t cnnavigation::LLAToECEF(double *a1, int a2, double *a3)
{
  return cnnavigation::LLAToECEF(a1, a2, a3, 0, (uint64_t)v4);
}

uint64_t cnnavigation::LLAToECEF(double *a1, int a2, double *a3, int a4, uint64_t a5)
{
  double v9 = a1[1];
  double v10 = a1[2];
  __double2 v11 = __sincos_stret(*a1);
  __double2 v12 = __sincos_stret(v9);
  double v13 = v11.__sinval * v12.__sinval;
  double v14 = v11.__sinval * v12.__cosval;
  double v15 = v11.__cosval * v12.__sinval;
  double v16 = v11.__cosval * v12.__cosval;
  if (a2 == 1)
  {
    double v20 = v11.__sinval * -0.00669437999 * v11.__sinval + 1.0;
    double v21 = 6378137.0 / sqrt(v20);
    double v22 = v10 + v21;
    *a3 = v16 * v22;
    a3[1] = v15 * v22;
    double v23 = v22 + v21 * -0.00669437999;
    a3[2] = v11.__sinval * v23;
    if (a4)
    {
      double v26 = v23;
      long double v24 = v11.__cosval * (v11.__sinval * 42697.6727) * pow(v20, -1.5);
      *(long double *)a5 = v24 * v16 - v22 * v14;
      *(double *)(a5 + 8) = -(v22 * v15);
      *(double *)(a5 + 16) = v16;
      *(long double *)(a5 + 24) = v24 * v15 - v22 * v13;
      *(double *)(a5 + 32) = v16 * v22;
      *(double *)(a5 + 40) = v15;
      double v19 = v11.__cosval * v26 + v24 * 0.99330562 * v11.__sinval;
      goto LABEL_7;
    }
    return 0;
  }
  if (!a2)
  {
    double v17 = v10 + 6371009.0;
    double v18 = (v10 + 6371009.0) * v16;
    *a3 = v18;
    a3[1] = (v10 + 6371009.0) * v15;
    a3[2] = v11.__sinval * (v10 + 6371009.0);
    if (a4)
    {
      *(double *)a5 = -(v17 * v14);
      *(double *)(a5 + 8) = -(v17 * v15);
      *(double *)(a5 + 16) = v16;
      *(double *)(a5 + 24) = -(v17 * v13);
      *(double *)(a5 + 32) = v18;
      *(double *)(a5 + 40) = v15;
      double v19 = v11.__cosval * v17;
LABEL_7:
      uint64_t result = 0;
      *(double *)(a5 + 48) = v19;
      *(void *)(a5 + 56) = 0;
      *(double *)(a5 + 64) = v11.__sinval;
      return result;
    }
    return 0;
  }
  return 2;
}

uint64_t cnnavigation::LLAToECEF(double *a1, int a2, double *a3, uint64_t a4)
{
  return cnnavigation::LLAToECEF(a1, a2, a3, 1, a4);
}

double cnnavigation::ECEFToENU(float64x2_t *a1, int a2, int a3, float64x2_t *a4, int a5, uint64_t a6)
{
  char v8 = 0;
  uint64_t v11 = 0x300000003;
  double v9 = &unk_1EDD18EE8;
  long long v10 = xmmword_18E1F0010;
  __double2 v12 = &v13;
  long double v7 = &unk_1EDD0AB68;
  return cnnavigation::ECEFToENU(a1, a2, a3, a4, a5, a6, (uint64_t)&v7, COERCE_DOUBLE(0x300000003));
}

double cnnavigation::ECEFToENU(float64x2_t *a1, int a2, int a3, float64x2_t *a4, int a5, uint64_t a6, uint64_t a7, double result)
{
  uint64_t v21 = *MEMORY[0x1E4F143B8];
  if (a3 == 1)
  {
    float64x2_t v17 = *a4;
    float64_t v18 = a4[1].f64[0];
    if (cnnavigation::LLAToECEF(v17.f64, a2, v19.f64, 0, (uint64_t)&v15)) {
      return result;
    }
  }
  else
  {
    if (a3) {
      return result;
    }
    float64x2_t v19 = *a4;
    double v20 = a4[1].f64[0];
    if (cnnavigation::ECEFToLLA(&v19, a2, v17.f64, 0, (uint64_t)&v15)) {
      return result;
    }
  }
  if (a5 == 1)
  {
    float64x2_t v15 = *a1;
    double v12 = a1[1].f64[0];
    goto LABEL_11;
  }
  if (!a5)
  {
    float64x2_t v15 = vsubq_f64(*a1, v19);
    double v12 = a1[1].f64[0] - v20;
LABEL_11:
    double v16 = v12;
    (*(void (**)(uint64_t, float64_t, float64_t))(*(void *)a7 + 16))(a7, v17.f64[0], v17.f64[1]);
    sub_18DEF20E0(a7, v15.f64, (double *)&v13);
    *(_OWORD *)a6 = v13;
    uint64_t result = v14;
    *(double *)(a6 + 16) = v14;
  }
  return result;
}

void cnnavigation::ECEFToENUJacobian::~ECEFToENUJacobian(cnnavigation::ECEFToENUJacobian *this)
{
  *(void *)this = &unk_1EDD0B188;
  *((void *)this + 2) = &unk_1EDD17478;
}

{
  *(void *)this = &unk_1EDD0B188;
  *((void *)this + 2) = &unk_1EDD17478;
}

{
  *(void *)this = &unk_1EDD0B188;
  *((void *)this + 2) = &unk_1EDD17478;
  JUMPOUT(0x192FA6240);
}

BOOL sub_18DEF20E0(uint64_t a1, double *a2, double *a3)
{
  int v3 = *(unsigned __int8 *)(a1 + 8);
  if (*(unsigned char *)(a1 + 8))
  {
    uint64_t v4 = *(double **)(a1 + 48);
    uint64_t v5 = *(int *)(a1 + 36);
    *a3 = v4[v5] * a2[1] + *v4 * *a2 + v4[2 * v5] * a2[2];
    long double v6 = &v4[2 * (int)v5];
    a3[1] = v4[(int)v5 + 1] * a2[1] + v4[1] * *a2 + v6[1] * a2[2];
    a3[2] = v4[(int)v5 + 2] * a2[1] + v4[2] * *a2 + v6[2] * a2[2];
  }
  return v3 != 0;
}

uint64_t cnnavigation::ENUToECEF(long long *a1, int a2, int a3, uint64_t a4, int a5, float64x2_t *a6)
{
  char v8 = 0;
  uint64_t v11 = 0x300000003;
  double v9 = &unk_1EDD18EE8;
  long long v10 = xmmword_18E1F0010;
  double v12 = &v13;
  long double v7 = &unk_1EDD0AB90;
  return cnnavigation::ENUToECEF(a1, a2, a3, a4, a5, a6, (uint64_t)&v7);
}

uint64_t cnnavigation::ENUToECEF(long long *a1, int a2, int a3, uint64_t a4, int a5, float64x2_t *a6, uint64_t a7)
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  if (a3 == 1)
  {
    double v12 = *(double *)a4;
    double v20 = *(double *)a4;
    __n128 v15 = *(__n128 *)(a4 + 8);
    __n128 v21 = v15;
    if (cnnavigation::LLAToECEF(&v20, a2, v22.f64, 0, (uint64_t)&v18)) {
      return 0xFFFFFFFFLL;
    }
    __n128 v11 = v15;
  }
  else
  {
    if (a3) {
      return 0xFFFFFFFFLL;
    }
    float64x2_t v22 = *(float64x2_t *)a4;
    double v23 = *(double *)(a4 + 16);
    if (cnnavigation::ECEFToLLA(&v22, a2, &v20, 0, (uint64_t)&v18)) {
      return 0xFFFFFFFFLL;
    }
    double v12 = v20;
    v11.n128_u64[0] = v21.n128_u64[0];
  }
  (*(void (**)(uint64_t, double, __n128))(*(void *)a7 + 16))(a7, v12, v11);
  long long v16 = *a1;
  uint64_t v17 = *((void *)a1 + 2);
  sub_18DEF20E0(a7, (double *)&v16, v18.f64);
  if (a5 == 1)
  {
    *a6 = v18;
    double v13 = v19;
    goto LABEL_12;
  }
  if (a5) {
    return 0xFFFFFFFFLL;
  }
  *a6 = vaddq_f64(v18, v22);
  double v13 = v19 + v23;
LABEL_12:
  uint64_t result = 0;
  a6[1].f64[0] = v13;
  return result;
}

void cnnavigation::ENUToECEFJacobian::~ENUToECEFJacobian(cnnavigation::ENUToECEFJacobian *this)
{
  *(void *)this = &unk_1EDD0B188;
  *((void *)this + 2) = &unk_1EDD17478;
}

{
  *(void *)this = &unk_1EDD0B188;
  *((void *)this + 2) = &unk_1EDD17478;
}

{
  *(void *)this = &unk_1EDD0B188;
  *((void *)this + 2) = &unk_1EDD17478;
  JUMPOUT(0x192FA6240);
}

uint64_t cnnavigation::GeodeticLatLonIncrementsToNorthEastMetersPerRadian(cnnavigation *this, double a2, double a3, double *a4, double *a5)
{
  uint64_t v9 = *(void *)&a2 & 0x7FFFFFFFFFFFFFFFLL;
  double v10 = fabs(a2);
  if (v9 > 0x7FEFFFFFFFFFFFFFLL || v10 > 1.57079633)
  {
    if (fabs(v10 + -1.57079633) < 2.22044605e-16)
    {
      uint64_t result = 0;
      *(double *)this = a3 + 6399593.63;
      *a4 = 0.0;
      return result;
    }
    if (cnprint::CNPrinter::GetLogLevel(this) <= 1)
    {
      __int16 v29 = 5;
      unsigned __int8 v28 = 1;
      double v25 = a2 * 57.2957795;
      cnprint::CNPrinter::Print((cnprint::CNPrinter *)&v29, &v28, "Invalid latitude,deg,%.9lf", v19, v20, v21, v22, v23, SLOBYTE(v25));
    }
  }
  else
  {
    if (a3 >= -721.0 && (*(void *)&a3 & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000)
    {
      __double2 v11 = __sincos_stret(a2);
      uint64_t result = 0;
      double v13 = 1.0 / sqrt(v11.__sinval * v11.__sinval * -0.00669437999 + 1.0);
      *a4 = v11.__cosval * (v13 * 6378137.0 + a3);
      *(double *)this = v13 * v13 * (v13 * 6378137.0 * 0.99330562) + a3;
      return result;
    }
    if (cnprint::CNPrinter::GetLogLevel(this) <= 1)
    {
      __int16 v27 = 5;
      unsigned __int8 v26 = 1;
      double v24 = a2 * 57.2957795;
      cnprint::CNPrinter::Print((cnprint::CNPrinter *)&v27, &v26, "Invalid height above ellipsoid,deg,%.9lf", v14, v15, v16, v17, v18, SLOBYTE(v24));
    }
  }
  return 0xFFFFFFFFLL;
}

uint64_t cnnavigation::SatElAz(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return cnnavigation::SatElAz(a1, a2, a3, a4, 0, (uint64_t)&v5);
}

uint64_t cnnavigation::SatElAz(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, uint64_t a6)
{
  v85[3] = *(double *)MEMORY[0x1E4F143B8];
  uint64_t result = cnnavigation::ECEFToLLA((float64x2_t *)a1, a3, v85, a5 != 0, (uint64_t)&v80);
  if (!result)
  {
    double v12 = v85[1];
    __double2 v13 = __sincos_stret(v85[0]);
    __double2 v14 = __sincos_stret(v12);
    double sinval = v14.__sinval;
    double cosval = v14.__cosval;
    double v17 = *(double *)a2 - *(double *)a1;
    double v18 = *(double *)(a2 + 8) - *(double *)(a1 + 8);
    double v19 = *(double *)(a2 + 16) - *(double *)(a1 + 16);
    double v20 = sqrt(v18 * v18 + v17 * v17 + v19 * v19);
    if (v20 <= 0.0) {
      return 0xFFFFFFFFLL;
    }
    double v21 = v13.__sinval * v14.__sinval;
    double v22 = v13.__sinval * v14.__cosval;
    v23.f64[0] = v14.__cosval;
    v23.f64[1] = v14.__sinval;
    float64x2_t v24 = vmulq_n_f64(v23, v13.__cosval);
    double v25 = v17 / v20;
    double v26 = v18 / v20;
    double v27 = v19 / v20;
    double v28 = v14.__cosval * v26 + -v14.__sinval * v25 + v27 * 0.0;
    double v29 = -(v13.__sinval * v14.__sinval * v26) - v13.__sinval * v14.__cosval * v25 + v13.__cosval * v27;
    double v30 = vmlad_n_f64(vmuld_lane_f64(v26, v24, 1), v25, v24.f64[0]) + v13.__sinval * v27;
    double v31 = vabdd_f64(1.0, fabs(v30));
    int v32 = v30 >= 0.0 ? 1 : 2;
    int v33 = v31 <= 0.00000001 ? v32 : 0;
    double v34 = v13.__cosval;
    if ((v33 - 1) >= 2)
    {
      if (v33)
      {
        uint64_t result = 0xFFFFFFFFLL;
      }
      else
      {
        float64x2_t v78 = v24;
        double v79 = v20;
        double v77 = v30;
        *(long double *)a4 = 1.57079633 - acos(v30);
        double v36 = atan2(v28, v29);
        *(double *)(a4 + 8) = v36;
        uint64_t result = 0;
        if (v36 < 0.0) {
          *(double *)(a4 + 8) = v36 + 6.28318531;
        }
        double cosval = v14.__cosval;
        double v34 = v13.__cosval;
        float64x2_t v24 = v78;
        double v20 = v79;
        double v30 = v77;
        double sinval = v14.__sinval;
      }
    }
    else
    {
      if (v30 <= 0.0)
      {
        double v35 = 0.0;
        if (v30 < 0.0) {
          double v35 = -1.57079633;
        }
      }
      else
      {
        double v35 = 1.57079633;
      }
      uint64_t result = 0;
      *(double *)a4 = v35;
      *(void *)(a4 + 8) = 0;
    }
    if (a5)
    {
      if ((v33 - 1) >= 2)
      {
        if (!v33)
        {
          double v37 = *(double *)a2 - *(double *)a1;
          _D19 = -(v37 * v22);
          double v39 = -(v37 * v24.f64[1]);
          float64x2_t v40 = vsubq_f64(*(float64x2_t *)(a2 + 8), *(float64x2_t *)(a1 + 8));
          _D20 = -(v40.f64[0] * v21);
          *(void *)&double v42 = *(_OWORD *)&vmulq_f64(v24, v40);
          double v43 = vmlad_n_f64(v80 * _D19 - v34 * cosval + v39 * v82 + _D20 * v80, v82, v42);
          _V17.D[1] = v81.f64[1];
          v45.f64[0] = vmlad_n_f64(vmlad_n_f64(vmlad_n_f64(v39 * v83, _D19, v81.f64[0]) - v34 * sinval, _D20, v81.f64[0]), v83, v42);
          __asm
          {
            FMLA            D5, D19, V17.D[1]
            FMLA            D5, D20, V17.D[1]
          }
          double v52 = vmlad_n_f64(_D5, v84, v42);
          double v53 = -(v37 * cosval);
          float64_t v54 = -(v40.f64[0] * sinval);
          double v55 = sinval + v53 * v82 + v54 * v82;
          float64_t v56 = v54 * v83 - (cosval - v53 * v83);
          float64_t v57 = v54 * v84 + v53 * v84;
          _D21 = -(v37 * v24.f64[0]);
          _D2 = -(v40.f64[0] * v24.f64[1]);
          float64_t v60 = -(v40.f64[0] * v22);
          __asm
          {
            FMLA            D23, D21, V17.D[1]
            FMLA            D23, D2, V17.D[1]
          }
          v45.f64[1] = v52 - v13.__sinval;
          double v63 = vmuld_lane_f64(v34, v40, 1);
          double v64 = v43 + v63 * v80;
          float64x2_t v65 = vmlaq_n_f64(v45, v81, v63);
          _D4 = -(v40.f64[1] * v13.__sinval);
          double v67 = v22 + _D21 * v80 + v21 * v37 * v82 + _D2 * v80 + v60 * v82 + _D4 * v80;
          double v68 = vmlad_n_f64(vmlad_n_f64(vmlad_n_f64(v21 * v37 * v83, _D21, v81.f64[0]) + v13.__sinval * sinval, _D2, v81.f64[0])+ v60 * v83, _D4, v81.f64[0]);
          __asm { FMLA            D2, D4, V17.D[1] }
          float64x2_t v70 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v20, 0);
          float64x2_t v71 = vdivq_f64(v40, v70);
          double v72 = v13.__sinval / v20 - vmuld_lane_f64(v30, v71, 1) / v20;
          float64x2_t v73 = vaddq_f64(vdivq_f64(vmulq_n_f64(v71, v30), v70), vdivq_f64(v65, v70));
          double v74 = 1.0 / sqrt(1.0 - v30 * v30);
          *(double *)a6 = v74 * (v30 * (v37 / v20) / v20 + v64 / v20);
          float64x2_t v75 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v71.f64[0], 0);
          v75.f64[0] = v37 / v20;
          *(float64x2_t *)(a6 + 8) = vmulq_n_f64(v73, v74);
          *(float64x2_t *)(a6 + 24) = vmulq_n_f64(vaddq_f64(vdivq_f64(v24, v70), vdivq_f64(vmulq_n_f64(v75, -v30), v70)), v74);
          v75.f64[0] = v29 * v56 - v28 * v68;
          double v76 = 1.0 / (v29 * v29 + v28 * v28);
          *(double *)(a6 + 40) = v74 * v72;
          *(double *)(a6 + 48) = v76 * (v29 * v55 - v28 * v67) / v20;
          *(double *)(a6 + 56) = v76 * v75.f64[0] / v20;
          *(double *)(a6 + 64) = v76 * (v29 * v57 - v28 * _D2) / v20;
          *(double *)(a6 + 72) = (v22 * v28 + v29 * -v14.__sinval) * v76 / v20;
          *(double *)(a6 + 80) = (v21 * v28 + v29 * cosval) * v76 / v20;
          *(double *)(a6 + 88) = -(v28 * v34) * v76 / v20;
          return result;
        }
        uint64_t result = 0xFFFFFFFFLL;
      }
      else
      {
        *(_OWORD *)(a6 + 16) = 0u;
        *(_OWORD *)(a6 + 32) = 0u;
        *(_OWORD *)a6 = 0u;
      }
      *(_OWORD *)(a6 + 64) = 0u;
      *(_OWORD *)(a6 + 80) = 0u;
      *(_OWORD *)(a6 + 48) = 0u;
    }
  }
  return result;
}

uint64_t cnnavigation::SatElAz(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  return cnnavigation::SatElAz(a1, a2, a3, a4, 1, a5);
}

uint64_t cnnavigation::SatEl(cnnavigation *this, const double *a2, const double *a3, double *a4, double *a5)
{
  double v5 = *a3 - *(double *)this;
  double v6 = a3[1] - *((double *)this + 1);
  double v7 = a3[2] - *((double *)this + 2);
  double v8 = sqrt(v6 * v6 + v5 * v5 + v7 * v7);
  if (v8 <= 0.0) {
    return 0xFFFFFFFFLL;
  }
  double v10 = (v6 * a2[1] + *a2 * v5 + a2[2] * v7) / v8;
  if (1.0 - fabs(v10) <= 0.00000001)
  {
    BOOL v13 = v10 < 0.0;
    if (v10 <= 0.0)
    {
      double v11 = -1.57079633;
      if (!v13) {
        double v11 = 0.0;
      }
    }
    else
    {
      double v11 = 1.57079633;
    }
  }
  else
  {
    double v11 = 1.57079633 - acos(v10);
  }
  uint64_t result = 0;
  *a4 = v11;
  return result;
}

uint64_t cnnavigation::UpUnitVector(float64x2_t *a1, int a2, double *a3)
{
  float64x2_t v10[3] = *(double *)MEMORY[0x1E4F143B8];
  uint64_t v4 = cnnavigation::ECEFToLLA(a1, a2, v10, 0, (uint64_t)v9);
  if (!v4)
  {
    double v5 = v10[1];
    __double2 v6 = __sincos_stret(v10[0]);
    __double2 v7 = __sincos_stret(v5);
    *a3 = v6.__cosval * v7.__cosval;
    a3[1] = v6.__cosval * v7.__sinval;
    a3[2] = v6.__sinval;
  }
  return v4;
}

void cnnavigation::details::JacobianBase::~JacobianBase(cnnavigation::details::JacobianBase *this)
{
  *(void *)this = &unk_1EDD0B188;
  *((void *)this + 2) = &unk_1EDD17478;
}

void *sub_18DEF2BEC(void *result)
{
  *uint64_t result = &unk_1EDD17478;
  return result;
}

BOOL cnnavigation::UTMCoordinate::IsValid(cnnavigation::UTMCoordinate *this)
{
  double v1 = *(double *)this;
  if ((*(void *)this & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL
    || (*((void *)this + 1) & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL)
  {
    return 0;
  }
  uint64_t v2 = 0;
  if (v1 >= -90.0 && v1 <= 90.0)
  {
    if ((*((_DWORD *)this + 5) - 1) > 0x3B)
    {
      uint64_t v2 = 0;
      unsigned int v4 = *((unsigned __int8 *)this + 16) - 65;
      if (v4 <= 0x19 && ((1 << v4) & 0x3000003) != 0) {
        goto LABEL_12;
      }
    }
    else
    {
      if ((*((unsigned char *)this + 16) - 89) < 0xEAu) {
        return 0;
      }
      uint64_t v2 = 0;
      int v3 = *((unsigned __int8 *)this + 16);
      if (v3 != 73 && v3 != 79)
      {
LABEL_12:
        if ((*((void *)this + 3) & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
          && (*((void *)this + 4) & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
          && (*((void *)this + 5) & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL)
        {
          return (*((void *)this + 6) & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000;
        }
        return 0;
      }
    }
  }
  return v2;
}

void cnnavigation::UTMCoordinate::GridZoneDesignation(cnnavigation::UTMCoordinate *this@<X0>, uint64_t a2@<X8>)
{
  if (cnnavigation::UTMCoordinate::IsValid(this))
  {
    int v4 = *((_DWORD *)this + 5);
    char v5 = *((unsigned char *)this + 16);
    if ((v4 - 61) < 0xFFFFFFC4
      || (v5 - 89) < 0xEAu
      || *((unsigned char *)this + 16) == 73
      || *((unsigned char *)this + 16) == 79)
    {
      *(unsigned char *)(a2 + 23) = 1;
      *(unsigned char *)a2 = v5;
      *(unsigned char *)(a2 + 1) = 0;
    }
    else
    {
      std::to_string(&v6, v4);
      std::string::push_back(&v6, *((unsigned char *)this + 16));
      *(std::string *)a2 = v6;
    }
  }
  else
  {
    sub_18DEDE7B0((void *)a2, "");
  }
}

void sub_18DEF2F18(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double cnnavigation::UTMCoordinate::Easting(cnnavigation::UTMCoordinate *this)
{
  return *((double *)this + 3) + *((double *)this + 4);
}

double cnnavigation::UTMCoordinate::Northing(cnnavigation::UTMCoordinate *this)
{
  return *((double *)this + 5) + *((double *)this + 6);
}

uint64_t cnnavigation::LatLonToUTM(cnnavigation *this, double a2, double a3, cnnavigation::UTMCoordinate *a4)
{
  *((unsigned char *)this + 19) = 0;
  *(_WORD *)((char *)this + 17) = 0;
  int64x2_t v5 = vdupq_n_s64(0x7FF8000000000000uLL);
  *(int64x2_t *)this = v5;
  *((unsigned char *)this + 16) = 45;
  *((_DWORD *)this + 5) = 0;
  *(int64x2_t *)((char *)this + 24) = v5;
  *(int64x2_t *)((char *)this + 40) = v5;
  if ((*(void *)&a2 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL
    || (*(void *)&a3 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL)
  {
    return 0xFFFFFFFFLL;
  }
  uint64_t result = 0xFFFFFFFFLL;
  if (a2 >= -90.0 && a2 <= 90.0)
  {
    double v8 = a3 + floor((a3 + 180.0) * 0.00277777778) * -360.0;
    *(double *)this = a2;
    *((double *)this + 1) = v8;
    if (a2 > 84.0 || a2 < -80.0)
    {
      if (v8 >= 0.0) {
        char v15 = 90;
      }
      else {
        char v15 = 89;
      }
      if (v8 >= 0.0) {
        char v16 = 66;
      }
      else {
        char v16 = 65;
      }
      if (a2 < 0.0) {
        char v15 = v16;
      }
      *((unsigned char *)this + 16) = v15;
      long double v17 = sin(fabs(a2 * 0.0174532925));
      double v18 = sqrt((1.0 - v17) / (v17 + 1.0) * pow((v17 * 0.0818191908 + 1.0) / (v17 * -0.0818191908 + 1.0), 0.0818191908))
          * 12679.7364
          / 1.00335656;
      *((long double *)this + 3) = sin(v8 * 0.0174532925) * v18 * 1000.0;
      *((void *)this + 4) = 0x413E848000000000;
      double v19 = 0.0;
      if (a2 * 0.0174532925 < 0.0) {
        double v19 = -1.0;
      }
      if (a2 * 0.0174532925 > 0.0) {
        double v19 = 1.0;
      }
      *((long double *)this + 5) = cos(v8 * 0.0174532925) * (v19 * -v18) * 1000.0;
      double v20 = 2000000.0;
    }
    else
    {
      int v9 = vcvtmd_s64_f64((v8 + 186.0) * 0.166666667);
      if (v9 >= 60) {
        int v9 = 60;
      }
      if (v9 <= 1) {
        int v9 = 1;
      }
      double v10 = (double)(6 * v9 - 183);
      if ((v9 - 31) <= 6)
      {
        BOOL v12 = a2 >= 56.0 && (v9 - 31) < 2;
        double v13 = 3.0;
        if (v8 >= 3.0) {
          int v14 = 32;
        }
        else {
          int v14 = 31;
        }
        if (v8 >= 3.0) {
          double v13 = 9.0;
        }
        if (a2 < 64.0 && v12)
        {
          double v10 = v13;
          int v9 = v14;
        }
        if (a2 >= 72.0)
        {
          if (v8 >= 9.0)
          {
            if (v8 >= 21.0)
            {
              if (v8 >= 33.0) {
                double v10 = 39.0;
              }
              else {
                double v10 = 27.0;
              }
              if (v8 >= 33.0) {
                int v9 = 37;
              }
              else {
                int v9 = 35;
              }
            }
            else
            {
              int v9 = 33;
              double v10 = 15.0;
            }
          }
          else
          {
            int v9 = 31;
            double v10 = 3.0;
          }
        }
      }
      *((_DWORD *)this + 5) = v9;
      int v21 = vcvtmd_s64_f64((a2 + 88.0) * 0.125);
      if (v21 >= 20) {
        int v21 = 20;
      }
      if (v21 <= 1) {
        int v21 = 1;
      }
      *((unsigned char *)this + 16) = aCdefghjklmnpqr[v21 - 1];
      __double2 v22 = __sincos_stret(a2 * 0.0174532925);
      double v30 = 6378.137 / sqrt(v22.__sinval * -0.00669437999 * v22.__sinval + 1.0);
      double v23 = v22.__sinval / v22.__cosval * (v22.__sinval / v22.__cosval);
      double v24 = v22.__cosval * (v22.__cosval * 0.00673949674);
      double v25 = v22.__cosval * (v8 * 0.0174532925 - v10 * 0.0174532925);
      double v26 = v25 * (v25 * v25);
      double v29 = sin(a2 * 0.0174532925 + a2 * 0.0174532925);
      double v27 = sin(a2 * 0.0174532925 * 4.0);
      long double v28 = sin(a2 * 0.0174532925 * 6.0);
      *((double *)this + 3) = v30
                            * 0.9996
                            * (v25
                             + (v24 + 1.0 - v23) * 0.166666667 * v26
                             + (v23 * -18.0 + 5.0 + v23 * v23 + v24 * 72.0 + -0.390890811)
                             * 0.00833333333
                             * (v25
                              * v25
                              * v26))
                            * 1000.0;
      *((void *)this + 4) = 0x411E848000000000;
      *((long double *)this + 5) = ((v29 * -0.00251460706
                                   + a2 * 0.0174532925 * 0.998324298
                                   + v27 * 0.00000263904659
                                   + v28 * -0.00000000341804609)
                                  * 6378.137
                                  + v22.__sinval
                                  / v22.__cosval
                                  * v30
                                  * ((5.0 - v23 + v24 * 9.0 + v24 * v24 * 4.0)
                                   * 0.0416666667
                                   * (v25
                                    * v25
                                    * (v25
                                     * v25))
                                   + v25 * v25 * 0.5
                                   + (v23 * -58.0 + 61.0 + v23 * v23 + v24 * 600.0 + -2.22403392)
                                   * 0.00138888889
                                   * (v26
                                    * v26)))
                                 * 0.9996
                                 * 1000.0;
      double v20 = 10000000.0;
      if (a2 >= 0.0) {
        double v20 = 0.0;
      }
    }
    uint64_t result = 0;
    *((double *)this + 6) = v20;
  }
  return result;
}

BOOL cnnavigation::MGRSCoordinate::IsValid(cnnavigation::MGRSCoordinate *this)
{
  double v1 = *(double *)this;
  if ((*(void *)this & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL
    || (*((void *)this + 1) & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL)
  {
    return 0;
  }
  uint64_t v2 = 0;
  if (v1 >= -90.0 && v1 <= 90.0)
  {
    if ((*((_DWORD *)this + 5) - 1) <= 0x3B)
    {
      if ((*((unsigned char *)this + 16) - 89) < 0xEAu) {
        return 0;
      }
      uint64_t v2 = 0;
      int v3 = *((unsigned __int8 *)this + 16);
      if (v3 == 73) {
        return v2;
      }
      if (v3 == 79) {
        return v2;
      }
      uint64_t v2 = 0;
      int v4 = *((unsigned __int8 *)this + 24);
      if (v4 == 73 || v4 == 79) {
        return v2;
      }
      unsigned int v5 = *((unsigned __int8 *)this + 25) - 73;
      if (v5 < 0x12 && ((0x3C041u >> v5) & 1) != 0) {
        return 0;
      }
LABEL_20:
      double v9 = *((double *)this + 4);
      if ((*(void *)&v9 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL)
      {
        double v10 = *((double *)this + 5);
        if ((*(void *)&v10 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL)
        {
          uint64_t v2 = 0;
          if (v9 >= 0.0 && v9 <= 100000.0) {
            return v10 <= 100000.0 && v10 >= 0.0;
          }
          return v2;
        }
      }
      return 0;
    }
    uint64_t v2 = 0;
    unsigned int v6 = *((unsigned __int8 *)this + 16) - 65;
    if (v6 <= 0x19 && ((1 << v6) & 0x3000003) != 0)
    {
      unsigned int v7 = *((unsigned __int8 *)this + 24) - 68;
      if (v7 < 0x14 && ((0xC0E23u >> v7) & 1) != 0) {
        return 0;
      }
      uint64_t v2 = 0;
      int v8 = *((unsigned __int8 *)this + 25);
      if (v8 != 73 && v8 != 79) {
        goto LABEL_20;
      }
    }
  }
  return v2;
}

void cnnavigation::MGRSCoordinate::GridZoneDesignation(cnnavigation::MGRSCoordinate *this@<X0>, uint64_t a2@<X8>)
{
  if (cnnavigation::MGRSCoordinate::IsValid(this))
  {
    int v4 = *((_DWORD *)this + 5);
    char v5 = *((unsigned char *)this + 16);
    if ((v4 - 61) < 0xFFFFFFC4
      || (v5 - 89) < 0xEAu
      || *((unsigned char *)this + 16) == 73
      || *((unsigned char *)this + 16) == 79)
    {
      *(unsigned char *)(a2 + 23) = 1;
      *(unsigned char *)a2 = v5;
      *(unsigned char *)(a2 + 1) = 0;
    }
    else
    {
      std::to_string(&v6, v4);
      std::string::push_back(&v6, *((unsigned char *)this + 16));
      *(std::string *)a2 = v6;
    }
  }
  else
  {
    sub_18DEDE7B0((void *)a2, "");
  }
}

void sub_18DEF372C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void cnnavigation::MGRSCoordinate::OneHundredThousandMeterSquareDesignation(cnnavigation::MGRSCoordinate *this@<X0>, std::string *a2@<X8>)
{
  if (cnnavigation::MGRSCoordinate::IsValid(this))
  {
    unsigned __int8 v4 = *((unsigned char *)this + 24);
    *((unsigned char *)&v5.__r_.__value_.__s + 23) = 1;
    LOWORD(v5.__r_.__value_.__l.__data_) = v4;
    std::string::push_back(&v5, *((unsigned char *)this + 25));
    *a2 = v5;
  }
  else
  {
    sub_18DEDE7B0(a2, "");
  }
}

void sub_18DEF37D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

double cnnavigation::MGRSCoordinate::Easting(cnnavigation::MGRSCoordinate *this)
{
  return *((double *)this + 4);
}

double cnnavigation::MGRSCoordinate::Northing(cnnavigation::MGRSCoordinate *this)
{
  return *((double *)this + 5);
}

uint64_t cnnavigation::LatLonToMGRS(cnnavigation *this, double a2, double a3, cnnavigation::MGRSCoordinate *a4)
{
  *((unsigned char *)this + 19) = 0;
  *(_WORD *)((char *)this + 17) = 0;
  *(_DWORD *)((char *)this + 26) = 0;
  *((_WORD *)this + 15) = 0;
  int64x2_t v6 = vdupq_n_s64(0x7FF8000000000000uLL);
  *(int64x2_t *)this = v6;
  *((unsigned char *)this + 16) = 45;
  *((_DWORD *)this + 5) = 0;
  *((_WORD *)this + 12) = 11565;
  *((int64x2_t *)this + 2) = v6;
  int64x2_t v30 = v6;
  char v31 = 45;
  int v32 = 0;
  double v33 = NAN;
  double v34 = NAN;
  if (cnnavigation::LatLonToUTM((cnnavigation *)&v30, a2, a3, a4)) {
    return 0xFFFFFFFFLL;
  }
  double v8 = *(double *)v30.i64;
  *(int64x2_t *)this = v30;
  *((unsigned char *)this + 16) = v31;
  int v9 = v32;
  *((_DWORD *)this + 5) = v32;
  double v10 = v33;
  double v11 = floor(v33 * 0.00001);
  int v12 = vcvtmd_s64_f64(v33 * 0.00001);
  if (a2 > 84.0 || a2 < -80.0)
  {
    int v22 = v12 % 18;
    int v23 = v12 % 18 + 18;
    if (v22 < 0) {
      int v22 = v23;
    }
    int v24 = v22 & ~(v22 >> 31);
    if (v24 >= 17) {
      int v24 = 17;
    }
    *((unsigned char *)this + 24) = aAbcfghjklpqrst[v24];
    double v25 = v34;
    double v26 = floor(v34 * 0.00001);
    unsigned int v27 = vcvtmd_s64_f64(v34 * 0.00001);
    if (v8 <= 0.0) {
      int v28 = 12;
    }
    else {
      int v28 = 7;
    }
    int v29 = (v28 + v27) & ~((int)(v28 + v27) >> 31);
    if (v29 >= 23) {
      int v29 = 23;
    }
    *((unsigned char *)this + 25) = aAbcdefghjklmnp_0[v29];
    double v19 = v10 + v11 * -100000.0;
    double v20 = v25 + v26 * -100000.0;
    int v21 = (double *)&unk_18E1EF000;
    if (v19 < 0.0) {
      double v19 = 0.0;
    }
  }
  else
  {
    if ((v9 % 3) > 2) {
      return 0xFFFFFFFFLL;
    }
    if (v12 <= -4) {
      int v12 = -4;
    }
    if (v12 >= 3) {
      int v12 = 3;
    }
    *((unsigned char *)this + 24) = off_1E55B9890[v9 % 3][v12 + 4];
    double v13 = v34;
    unsigned int v14 = vcvtmd_s64_f64(v34 * 0.00001);
    double v15 = floor(v34 * 0.00001);
    if ((v9 & 0x80000001) == 1) {
      int v16 = 0;
    }
    else {
      int v16 = 5;
    }
    int v17 = (int)(v16 + v14) % 20 + ((int)(v16 + v14) % 20 < 0 ? 0x14 : 0);
    int v18 = v17 & ~(v17 >> 31);
    if (v18 >= 19) {
      int v18 = 19;
    }
    *((unsigned char *)this + 25) = aAbcdefghjklmnp[v18];
    double v19 = v10 + v11 * -100000.0;
    double v20 = v13 + v15 * -100000.0;
    if (v19 < 0.0) {
      double v19 = 0.0;
    }
    int v21 = (double *)&unk_18E1EF000;
  }
  if (v19 > v21[511]) {
    double v19 = v21[511];
  }
  *((double *)this + 4) = v19;
  if (v20 < 0.0) {
    double v20 = 0.0;
  }
  if (v20 > v21[511]) {
    double v20 = v21[511];
  }
  uint64_t result = 0;
  *((double *)this + 5) = v20;
  return result;
}

uint64_t sub_18DEF3B10(uint64_t a1, double a2, double a3)
{
  __double2 v5 = __sincos_stret(a2);
  __double2 v6 = __sincos_stret(a3);
  unsigned int v7 = *(double **)(a1 + 48);
  double *v7 = -v6.__sinval;
  uint64_t v8 = *(int *)(a1 + 36);
  v7[v8] = v6.__cosval;
  v7[2 * v8] = 0.0;
  v7[1] = -(v6.__cosval * v5.__sinval);
  v7[(int)v8 + 1] = -(v6.__sinval * v5.__sinval);
  int v9 = &v7[2 * (int)v8];
  v9[1] = v5.__cosval;
  v7[2] = v5.__cosval * v6.__cosval;
  v7[(int)v8 + 2] = v5.__cosval * v6.__sinval;
  void v9[2] = v5.__sinval;
  *(unsigned char *)(a1 + 8) = 1;
  return 1;
}

uint64_t sub_18DEF3BB8(uint64_t a1, double a2, double a3)
{
  __double2 v5 = __sincos_stret(a2);
  __double2 v6 = __sincos_stret(a3);
  uint64_t v7 = *(void *)(a1 + 48);
  *(double *)uint64_t v7 = -v6.__sinval;
  uint64_t v8 = *(int *)(a1 + 36);
  *(double *)(v7 + 8 * v8) = -(v6.__cosval * v5.__sinval);
  *(double *)(v7 + 16 * v8) = v5.__cosval * v6.__cosval;
  *(double *)(v7 + 8) = v6.__cosval;
  *(double *)(v7 + 8 * ((int)v8 + 1)) = -(v6.__sinval * v5.__sinval);
  uint64_t v9 = v7 + 16 * v8;
  *(double *)(v9 + 8) = v5.__cosval * v6.__sinval;
  *(void *)(v7 + 16) = 0;
  *(double *)(v7 + 8 * ((int)v8 + 2)) = v5.__cosval;
  *(double *)(v9 + 16) = v5.__sinval;
  *(unsigned char *)(a1 + 8) = 1;
  return 1;
}

void sub_18DEF3C60(void *a1)
{
  *a1 = &unk_1EDD17478;
  JUMPOUT(0x192FA6240);
}

uint64_t sub_18DEF3C90(uint64_t result)
{
  *(void *)(result + 32) = result + 40;
  return result;
}

void sub_18DEF3C9C(uint64_t a1)
{
  uint64_t v2 = *MEMORY[0x1E4F143B8];
  sub_18DEF3CF4(a1, v1);
}

void sub_18DEF3CF4(uint64_t a1, char *a2)
{
  unsigned int v2 = *(_DWORD *)(a1 + 8);
  if (v2 >= 2)
  {
    unsigned int v4 = *(_DWORD *)(a1 + 12);
    if (v4 >= 2)
    {
      int v6 = *(_DWORD *)(a1 + 20);
      bzero(a2, *(unsigned int *)(a1 + 16));
      int v7 = *(_DWORD *)(a1 + 16);
      if (v7 >= 3)
      {
        uint64_t v8 = (v7 - 1);
        uint64_t v9 = *(void *)(a1 + 32);
        uint64_t v10 = 1;
        do
        {
          double v11 = &a2[v10];
          if (!a2[v10])
          {
            uint64_t v12 = *(void *)(v9 + 8 * v10);
            int v13 = v10;
            do
            {
              int v13 = (int)(v13 * (v4 + v2 - v6)) % (int)v8;
              uint64_t v14 = *(void *)(v9 + 8 * v13);
              *(void *)(v9 + 8 * v13) = v12;
              *double v11 = 1;
              double v11 = &a2[v13];
              uint64_t v12 = v14;
            }
            while (!*v11);
          }
          ++v10;
        }
        while (v10 != v8);
      }
    }
  }
}

uint64_t cnnavigation::GPSFindSat(int a1, uint64_t a2, double *a3, double *a4, double *a5, double a6)
{
  if (!*(unsigned char *)(a2 + 12)) {
    return 1;
  }
  double v6 = *(double *)(a2 + 88);
  if (fabs(v6) < 2.22044605e-16 || (*(void *)&v6 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL) {
    return 0xFFFFFFFFLL;
  }
  double v8 = *(double *)(a2 + 80);
  uint64_t result = 0xFFFFFFFFLL;
  if (v8 >= 0.0 && v8 < 1.0 && (*(void *)&v8 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL)
  {
    double v10 = *(double *)(a2 + 96);
    if ((*(void *)&v10 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL)
    {
      double v11 = *(double *)(a2 + 72);
      if ((*(void *)&v11 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL)
      {
        double v15 = *(double *)(a2 + 24);
        double v16 = *(double *)(a2 + 120);
        double v78 = *(double *)(a2 + 112);
        double v79 = *(double *)(a2 + 128);
        double v80 = *(double *)(a2 + 104);
        double v83 = *(double *)(a2 + 136);
        double v89 = *(double *)(a2 + 152);
        double v90 = *(double *)(a2 + 144);
        double v87 = *(double *)(a2 + 168);
        double v88 = *(double *)(a2 + 160);
        double v86 = *(double *)(a2 + 176);
        double v85 = *(double *)(a2 + 184);
        double v17 = a6 - v15 + (double)(a1 - *(_DWORD *)(a2 + 16)) * 604800.0;
        double v18 = v6 * v6;
        double v76 = v11 * 0.5;
        double v73 = *(double *)(a2 + 72);
        double v74 = *(double *)(a2 + 64) + v11 * 0.5 * v17 + 19964981.8 / (v6 * (v6 * v6));
        double v19 = *(double *)(a2 + 56) + v74 * v17;
        int v20 = 10;
        double v21 = v19;
        do
        {
          double v22 = sin(v21);
          double v21 = v19 + v8 * v22;
          --v20;
        }
        while (v20);
        double v81 = sqrt(1.0 - v8 * v8);
        double v82 = cos(v21);
        double v23 = v16 + atan2(v81 * v22, v82 - v8);
        __double2 v24 = __sincos_stret(v23 + v23);
        double v25 = v18 + v10 * v17;
        uint64_t result = 0xFFFFFFFFLL;
        if (v25 >= 0.0 && v25 >= 13279855.0)
        {
          double v72 = -v8 * v82 + 1.0;
          double v26 = v25 * v72 + v88 * v24.__cosval + v87 * v24.__sinval;
          double v70 = v79 + -0.0000729211515;
          __double2 v27 = __sincos_stret(v23 + v90 * v24.__cosval + v89 * v24.__sinval);
          double v28 = v26 * v27.__cosval;
          __double2 v29 = __sincos_stret(v80 + (v79 + -0.0000729211515) * v17 + v15 * -0.0000729211515);
          __double2 v30 = __sincos_stret(v78 + v83 * v17 + v86 * v24.__cosval + v85 * v24.__sinval);
          double v31 = -(v26 * v27.__sinval * v30.__cosval);
          double v32 = v29.__sinval * v31;
          double v71 = v30.__cosval * (v26 * v27.__sinval);
          *a3 = v29.__sinval * v31 + v26 * v27.__cosval * v29.__cosval;
          a3[1] = v29.__cosval * v71 + v26 * v27.__cosval * v29.__sinval;
          double v33 = v30.__sinval * (v26 * v27.__sinval);
          a3[2] = v33;
          if (!a4) {
            return 0;
          }
          double v34 = -((v25 * v72 + v88 * v24.__cosval + v87 * v24.__sinval) * v27.__sinval);
          double v35 = v74 + v76 * v17;
          double v36 = v35 / v72;
          double v37 = v81 * (v35 / v72) / v72;
          double v38 = v89 * v24.__cosval - v90 * v24.__sinval + v89 * v24.__cosval - v90 * v24.__sinval;
          double v39 = v37 + v38 * v37;
          double v40 = v87 * v24.__cosval - v88 * v24.__sinval + v87 * v24.__cosval - v88 * v24.__sinval;
          double v41 = v10 * v72 + v8 * v25 * v22 * (v35 / v72) + v40 * v37;
          double v42 = v85 * v24.__cosval - v86 * v24.__sinval + v85 * v24.__cosval - v86 * v24.__sinval;
          double v43 = v83 + v42 * v37;
          double v44 = v34 * v39;
          double v45 = v34 * v39 + v41 * v27.__cosval;
          double v46 = v28 * v39;
          double v47 = v28 * v39 + v41 * v27.__sinval;
          double v84 = v70 * -(v28 * v29.__sinval);
          double v77 = -(v47 * v30.__cosval);
          double v48 = v84 + v45 * v29.__cosval + v77 * v29.__sinval + v43 * v33 * v29.__sinval + v29.__cosval * v31 * v70;
          double v49 = v70 * (v29.__cosval * v28);
          double v50 = v30.__cosval * v47;
          double v51 = v43 * (v30.__sinval * v34);
          *a4 = v48;
          a4[1] = v49 + v45 * v29.__sinval + v30.__cosval * v47 * v29.__cosval + v51 * v29.__cosval + v32 * v70;
          double v52 = v43 * v71;
          a4[2] = v43 * v71 + v47 * v30.__sinval;
          if (a5)
          {
            uint64_t result = 0;
            double v75 = v43 * v33;
            double v53 = v44;
            double v54 = -v8 * v82 + 1.0;
            double v55 = (v72 * v73 - v35 * (v8 * v22 * v36)) / (v54 * v54);
            double v56 = v8 * (v10 + v10) * v22 * v36 + v8 * v25 * (v36 * (v82 * v36) + v22 * v55);
            double v57 = v81 * (v55 / v72 + v22 * (v8 * (-v36 / (v54 * v54))) * v36);
            double v58 = v57 + v38 * v57 + v37 * ((-v90 * v24.__cosval - v89 * v24.__sinval) * 4.0) * v37;
            double v59 = v56 + v40 * v57 + v37 * ((-v88 * v24.__cosval - v87 * v24.__sinval) * 4.0) * v37;
            double v60 = v37 * (v37 * ((-v86 * v24.__cosval - v85 * v24.__sinval) * 4.0)) + v42 * v57;
            double v61 = v39 * -(v41 * v27.__sinval) + v59 * v27.__cosval;
            double v62 = v27.__cosval * v41;
            double v63 = v39 * (v27.__cosval * v41) + v59 * v27.__sinval;
            double v64 = -(v46 + v41 * v27.__sinval);
            double v65 = v61 - (v39 * v46 + v27.__sinval * v41 * v39 + v26 * v27.__sinval * v58);
            double v66 = v63 + v39 * v53 + v62 * v39 + v26 * v27.__cosval * v58;
            double v67 = v43 * (v30.__sinval * v64);
            double v68 = v43 * (v30.__sinval * v47);
            double v69 = v33 * v60;
            *a5 = v29.__sinval * (v43 * v52)
                + v68 * v29.__sinval
                + v69 * v29.__sinval
                + v29.__cosval * v75 * v70
                + v70 * -(v45 * v29.__sinval)
                + v65 * v29.__cosval
                - (v70 * v49
                 + v29.__sinval * v45 * v70)
                - (v29.__sinval * v67
                 + v30.__cosval * v66 * v29.__sinval
                 + v29.__cosval * v50 * v70)
                - (v70 * (v29.__cosval * v51)
                 + v29.__cosval * v50 * v70
                 + v70 * v32 * v70);
            a5[1] = v70 * v84
                  + v29.__cosval * v45 * v70
                  + v70 * (v29.__cosval * v45)
                  + v65 * v29.__sinval
                  + v29.__cosval * v67
                  + v30.__cosval * v66 * v29.__cosval
                  + v29.__sinval * v77 * v70
                  - (v29.__cosval * (v43 * v52)
                   + v68 * v29.__cosval
                   + v69 * v29.__cosval
                   + v29.__sinval * v51 * v70)
                  - (v70 * (v29.__sinval * v51)
                   + v29.__sinval * v50 * v70
                   + v70 * (v29.__cosval * (v30.__cosval * (v26 * v27.__sinval))) * v70);
            a5[2] = v43 * v51 + v50 * v43 + v71 * v60 + v43 * v50 + v66 * v30.__sinval;
          }
          else
          {
            return 0;
          }
        }
      }
    }
  }
  return result;
}

{
  double v6;
  double v7;
  BOOL v8;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  int v17;
  double v18;
  double v19;
  double v20;
  long double v21;
  __double2 v22;
  double v23;
  double v24;
  double v25;
  __double2 v26;
  double v27;
  __double2 v28;
  __double2 v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  uint64_t result;
  double v53;
  double v54;
  double v55;
  double v56;
  double v57;
  double v58;
  double v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  double v65;
  double v66;
  double v67;
  double v68;
  double v69;
  double v70;
  double v71;
  double v72;
  double v73;
  double v74;

  if (!*(unsigned char *)(a2 + 32)) {
    return 1;
  }
  double v6 = *(double *)(a2 + 64);
  if (fabs(v6) < 2.22044605e-16 || (*(void *)&v6 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL) {
    return 0xFFFFFFFFLL;
  }
  int v7 = *(double *)(a2 + 56);
  double v8 = v7 >= 0.0 && v7 < 1.0;
  if (!v8 || (*(void *)&v7 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL) {
    return 0xFFFFFFFFLL;
  }
  uint64_t v12 = *(double *)(a2 + 40);
  int v13 = *(double *)(a2 + 88);
  double v73 = *(double *)(a2 + 72);
  double v70 = *(double *)(a2 + 80);
  double v71 = *(double *)(a2 + 96);
  uint64_t v14 = a6 - v12 + (double)(a1 - *(_DWORD *)(a2 + 36)) * 604800.0;
  double v15 = v6 * v6;
  double v69 = 19964981.8 / (v6 * (v6 * v6)) + 0.0;
  double v16 = *(double *)(a2 + 48) + v69 * v14;
  double v17 = 10;
  double v18 = v16;
  do
  {
    double v19 = sin(v18);
    double v18 = v16 + v7 * v19;
    --v17;
  }
  while (v17);
  int v20 = cos(v18);
  double v74 = sqrt(1.0 - v7 * v7);
  double v21 = v13 + atan2(v74 * v19, v20 - v7);
  double v22 = __sincos_stret(v21 + v21);
  double v23 = v21 + v22.__cosval * 0.0 + v22.__sinval * 0.0;
  double v66 = v20;
  double v67 = v15;
  double v72 = 1.0 - v7 * v20;
  __double2 v24 = v15 * v72 + v22.__cosval * 0.0 + v22.__sinval * 0.0;
  double v25 = v71 + -0.0000729211515;
  double v26 = __sincos_stret(v23);
  __double2 v27 = v24 * v26.__cosval;
  double v28 = __sincos_stret(v73 + (v71 + -0.0000729211515) * v14 + v12 * -0.0000729211515);
  __double2 v29 = __sincos_stret(v70 + 0.942477796);
  __double2 v30 = -(v24 * v26.__sinval * v29.__cosval);
  double v31 = v28.__sinval * v30;
  double v32 = v29.__cosval * (v24 * v26.__sinval);
  *a3 = v28.__sinval * v30 + v24 * v26.__cosval * v28.__cosval;
  a3[1] = v28.__cosval * v32 + v24 * v26.__cosval * v28.__sinval;
  double v33 = v29.__sinval * (v24 * v26.__sinval);
  a3[2] = v33;
  if (!a4) {
    return 0;
  }
  double v34 = -(v24 * v26.__sinval);
  double v35 = v69 / v72;
  double v36 = v74 * (v69 / v72) / v72;
  double v37 = v22.__cosval * 0.0 + v22.__sinval * -0.0 + v22.__cosval * 0.0 + v22.__sinval * -0.0;
  double v38 = v36 + v37 * v36;
  double v39 = v7 * v67;
  double v40 = v7 * v67 * v19 * (v69 / v72) + v37 * v36;
  double v41 = v37 * v36 + 0.0;
  double v42 = v34 * v38;
  double v43 = v34 * v38 + v40 * v26.__cosval;
  double v44 = v27 * v38;
  double v45 = v27 * v38 + v40 * v26.__sinval;
  double v46 = v41 * v33;
  double v47 = v25 * -(v27 * v28.__sinval)
      + v43 * v28.__cosval
      + -(v45 * v29.__cosval) * v28.__sinval
      + v41 * v33 * v28.__sinval
      + v28.__cosval * v30 * v25;
  double v48 = v25 * (v28.__cosval * v27);
  double v49 = v29.__cosval * v45;
  double v50 = v41 * (v29.__sinval * v34);
  *a4 = v47;
  a4[1] = v48 + v43 * v28.__sinval + v29.__cosval * v45 * v28.__cosval + v50 * v28.__cosval + v31 * v25;
  double v51 = v41 * v32;
  a4[2] = v41 * v32 + v45 * v29.__sinval;
  if (!a5) {
    return 0;
  }
  uint64_t result = 0;
  double v68 = -(v45 * v29.__cosval);
  double v53 = v72;
  double v54 = v35 * (v19 * (v7 * (-v69 / (v53 * v53))));
  double v55 = v74 * (v54 / v72 + v19 * (v7 * (-v35 / (v53 * v53))) * v35);
  double v56 = v39 * (v35 * (v66 * v35) + v19 * v54);
  double v57 = v36 * ((v22.__sinval * -0.0 + v22.__cosval * -0.0) * 4.0);
  double v58 = v55 + v37 * v55 + v57 * v36;
  double v59 = v56 + v37 * v55 + v57 * v36;
  double v60 = v36 * v57 + v37 * v55;
  double v61 = v38 * -(v40 * v26.__sinval)
      + v59 * v26.__cosval
      - (v38 * v44
       + v26.__sinval * v40 * v38
       + v24 * v26.__sinval * v58);
  double v62 = v38 * (v26.__cosval * v40) + v59 * v26.__sinval + v38 * v42 + v26.__cosval * v40 * v38 + v27 * v58;
  double v63 = v41 * (v29.__sinval * -(v44 + v40 * v26.__sinval));
  double v64 = v41 * (v29.__sinval * v45);
  double v65 = v33 * v60;
  *a5 = v28.__sinval * (v41 * v51)
      + v64 * v28.__sinval
      + v65 * v28.__sinval
      + v28.__cosval * v46 * v25
      + v25 * -(v43 * v28.__sinval)
      + v61 * v28.__cosval
      - (v25 * v48
       + v28.__sinval * v43 * v25)
      - (v28.__sinval * v63
       + v29.__cosval * v62 * v28.__sinval
       + v28.__cosval * v49 * v25)
      - (v25 * (v28.__cosval * v50)
       + v28.__cosval * v49 * v25
       + v25 * v31 * v25);
  a5[1] = v25 * (v25 * -(v27 * v28.__sinval))
        + v28.__cosval * v43 * v25
        + v25 * (v28.__cosval * v43)
        + v61 * v28.__sinval
        + v28.__cosval * v63
        + v29.__cosval * v62 * v28.__cosval
        + v28.__sinval * v68 * v25
        - (v28.__cosval * (v41 * v51)
         + v64 * v28.__cosval
         + v65 * v28.__cosval
         + v28.__sinval * v50 * v25)
        - (v25 * (v28.__sinval * v50)
         + v28.__sinval * v49 * v25
         + v25 * (v28.__cosval * (v29.__cosval * (v24 * v26.__sinval))) * v25);
  a5[2] = v41 * v50 + v49 * v41 + v32 * v60 + v41 * v49 + v62 * v29.__sinval;
  return result;
}

uint64_t cnnavigation::GLONASSTimeOfFlight(int a1, double *a2, uint64_t a3, uint64_t a4, uint64_t a5, double *a6, double a7, double a8, double a9)
{
  return cnnavigation::GLONASSTimeOfFlight(a1, a2, a3, a4, a5, a6, 0, v10, a7, a8, a9);
}

uint64_t cnnavigation::GLONASSTimeOfFlight(int a1, double *a2, uint64_t a3, uint64_t a4, uint64_t a5, double *a6, int a7, double *a8, double a9, double a10, double a11)
{
  double v11 = a10;
  v90[3] = *(double *)MEMORY[0x1E4F143B8];
  double v13 = *a2;
  double v14 = a2[2];
  double v66 = a2[1];
  v90[0] = *a2 + -0.36;
  v90[1] = v66 + 0.08;
  v90[2] = v14 + 0.18;
  if (a1 < 1) {
    return 0xFFFFFFFFLL;
  }
  uint64_t result = 0xFFFFFFFFLL;
  if (a9 >= 0.0 && a9 < 86401.0)
  {
    double v23 = 0.0;
    double v24 = (a9 + 0.0) / 86400.0 + 0.375;
    unsigned int v73 = a1 + 2450082 + vcvtmd_s64_f64(v24);
    double v74 = v24 - floor(v24);
    unsigned int v71 = 0;
    double v72 = 0.0;
    uint64_t result = cnnavigation::JulianTimeToGPSTime((uint64_t)&v73, (int)a10 + 10, (uint64_t)&v71);
    if (!result)
    {
      uint64_t v25 = v71;
      double v65 = v72;
      *a6 = 0.0;
      int v26 = 10;
      double v27 = 0.00007292115;
      double v64 = v13;
      while (1)
      {
        uint64_t result = cnnavigation::GLONASSFindSat(a1, a3, (double *)&v79, 0, 0, a9 - v23, v11);
        if (result) {
          break;
        }
        double v28 = v11;
        double v29 = v14;
        double v30 = *a6;
        double v31 = v27;
        __double2 v32 = __sincos_stret(*a6 * v27);
        double v33 = v32.__sinval * *((double *)&v79 + 1) + v32.__cosval * *(double *)&v79;
        double v34 = v32.__cosval * *((double *)&v79 + 1) - v32.__sinval * *(double *)&v79;
        double v35 = *(double *)&v80;
        *(double *)&long long v75 = v33 + -0.36;
        *((double *)&v75 + 1) = v34 + 0.08;
        *(double *)&long long v76 = *(double *)&v80 + 0.18;
        double v87 = 0.0;
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, double *, long long *, double *, double, double))(*(void *)a4 + 16))(a4, v25, v90, &v75, &v87, v65 - v30, a11);
        if (result) {
          break;
        }
        double v84 = 0.0;
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, double *, long long *, double *, double))(*(void *)a5 + 16))(a5, v25, v90, &v75, &v84, v65 - *a6);
        if (result) {
          break;
        }
        double v36 = v35 - v29;
        double v14 = v29;
        double v23 = sqrt((v34 - v66) * (v34 - v66) + (v33 - v64) * (v33 - v64) + v36 * v36) / 299792458.0 + v87 + v84;
        *a6 = v23;
        --v26;
        double v27 = v31;
        double v11 = v28;
        if (!v26)
        {
          if (!a7) {
            return 0;
          }
          uint64_t result = cnnavigation::GLONASSFindSat(a1, a3, &v87, &v84, 0, a9 - v23, v28);
          if (!result)
          {
            double v37 = *a6;
            __double2 v38 = __sincos_stret(*a6 * v31);
            double v39 = v38.__cosval * v88 - v38.__sinval * v87;
            double v40 = v89;
            double v63 = v38.__sinval * v88 + v38.__cosval * v87;
            v83[0] = v63 + -0.36;
            v83[1] = v39 + 0.08;
            v83[2] = v89 + 0.18;
            double v70 = 0.0;
            long long v81 = 0u;
            *(_OWORD *)double v82 = 0u;
            long long v79 = 0u;
            long long v80 = 0u;
            uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, double *, double *, double *, long long *, double, double))(*(void *)a4 + 24))(a4, v25, v90, v83, &v70, &v79, v65 - v37, a11);
            if (!result)
            {
              long long v67 = v79;
              double v61 = *((double *)&v80 + 1);
              double v62 = *(double *)&v80;
              double v41 = *((double *)&v81 + 1);
              double v42 = v82[1];
              double v59 = v82[0];
              double v60 = *(double *)&v81;
              double v69 = 0.0;
              double v78 = 0.0;
              long long v76 = 0u;
              long long v77 = 0u;
              long long v75 = 0u;
              uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, double *, double *, double *, long long *, double))(*(void *)a5 + 24))(a5, v25, v90, v83, &v69, &v75, v65 - *a6);
              if (!result)
              {
                double v43 = sqrt((v39 - v66) * (v39 - v66) + (v63 - v64) * (v63 - v64) + (v40 - v14) * (v40 - v14));
                *a6 = v43 / 299792458.0 + v70 + v69;
                double v44 = v42 + v59 * 0.0 + v41 * 0.0;
                double v45 = v59 + v41 * 0.0 + v42 * 0.0;
                double v46 = v41 + v59 * 0.0 + v42 * 0.0;
                double v47 = *((double *)&v75 + 1) + *(double *)&v76 * 0.0 + *((double *)&v76 + 1) * 0.0;
                double v48 = *(double *)&v76 + *((double *)&v75 + 1) * 0.0 + *((double *)&v76 + 1) * 0.0;
                double v49 = *((double *)&v76 + 1) + *(double *)&v76 * 0.0 + *((double *)&v75 + 1) * 0.0;
                double v50 = *(double *)&v77 + *((double *)&v77 + 1) * 0.0 + v78 * 0.0;
                double v51 = *((double *)&v77 + 1) + *(double *)&v77 * 0.0 + v78 * 0.0;
                double v52 = v78 + *((double *)&v77 + 1) * 0.0 + *(double *)&v77 * 0.0;
                double v53 = (v63 - v64) / v43;
                double v54 = (v39 - v66) / v43;
                double v55 = (v40 - v14) / v43;
                double v56 = (v38.__cosval * v88 + -v38.__sinval * v87) * v27 - v38.__cosval * v84 - v38.__sinval * v85;
                double v57 = (v88 * -v38.__sinval - v38.__cosval * v87) * v27 + v38.__sinval * v84 - v38.__cosval * v85;
                double v58 = 1.0
                    - (v50 * v56
                     - *(double *)&v75
                     + v51 * v57
                     - v52 * v86
                     + v46 * v56
                     - *(double *)&v67
                     + v45 * v57
                     - v44 * v86
                     + (v54 * v57 + v53 * v56 - v55 * v86) * 0.00000000333564095);
                *a8 = (*(double *)&v75
                     + v50 * (v38.__sinval * v85 + v38.__cosval * v84)
                     + v51 * (v38.__cosval * v85 + -v38.__sinval * v84)
                     + v52 * v86
                     + *(double *)&v67
                     + v46 * (v38.__sinval * v85 + v38.__cosval * v84)
                     + v45 * (v38.__cosval * v85 + -v38.__sinval * v84)
                     + v44 * v86
                     + (v54 * (v38.__cosval * v85 + -v38.__sinval * v84)
                      + v53 * (v38.__sinval * v85 + v38.__cosval * v84)
                      + v55 * v86)
                     * 0.00000000333564095)
                    / v58;
                a8[1] = *((double *)&v67 + 1) / v58;
                a8[2] = (v62 + v61 * 0.0 + v60 * 0.0 - v53 * 0.00000000333564095 + v47) / v58;
                a8[3] = (v61 + v62 * 0.0 + v60 * 0.0 - v54 * 0.00000000333564095 + v48) / v58;
                a8[4] = (v60 + v61 * 0.0 + v62 * 0.0 - v55 * 0.00000000333564095 + v49) / v58;
              }
            }
          }
          return result;
        }
      }
    }
  }
  return result;
}

uint64_t cnnavigation::GLONASSTimeOfFlight(int a1, double *a2, uint64_t a3, uint64_t a4, uint64_t a5, double *a6, double *a7, double a8, double a9, double a10)
{
  return cnnavigation::GLONASSTimeOfFlight(a1, a2, a3, a4, a5, a6, 1, a7, a8, a9, a10);
}

uint64_t cnnavigation::GLONASSTimeOfFlightRate(int a1, double *a2, double *a3, uint64_t a4, uint64_t a5, uint64_t a6, double *a7, double a8, double a9, double a10)
{
  return cnnavigation::GLONASSTimeOfFlightRate(a1, a2, a3, a4, a5, a6, a7, 0, a8, a9, a10, v11);
}

uint64_t cnnavigation::GLONASSTimeOfFlightRate(int a1, double *a2, double *a3, uint64_t a4, uint64_t a5, uint64_t a6, double *a7, int a8, double a9, double a10, double a11, double *a12)
{
  v166[3] = *(double *)MEMORY[0x1E4F143B8];
  double v159 = 0.0;
  uint64_t result = cnnavigation::GLONASSTimeOfFlight(a1, a2, a4, a5, a6, &v159, 1, v155, a9, a10, a11);
  if (!result)
  {
    double v24 = v155[0];
    double v25 = v156;
    double v26 = v157;
    double v27 = v158;
    *a7 = v155[0] + v156 * *a3 + v157 * a3[1] + v158 * a3[2];
    if (a8)
    {
      double v28 = *a2;
      double v29 = a2[1];
      double v30 = a2[2];
      v166[0] = *a2 + -0.36;
      v166[1] = v29 + 0.08;
      v166[2] = v30 + 0.18;
      uint64_t result = 0xFFFFFFFFLL;
      if (a1 >= 1 && a9 >= 0.0 && a9 < 86401.0)
      {
        double v133 = v30;
        double v135 = v29;
        double v137 = v28;
        double v139 = v26;
        double v140 = v25;
        double v31 = (a9 + 0.0) / 86400.0 + 0.375;
        unsigned int v153 = a1 + 2450082 + vcvtmd_s64_f64(v31);
        double v154 = v31 - floor(v31);
        unsigned int v151 = 0;
        double v152 = 0.0;
        uint64_t result = cnnavigation::JulianTimeToGPSTime((uint64_t)&v153, (int)a10 + 10, (uint64_t)&v151);
        if (!result)
        {
          uint64_t v32 = v151;
          double v128 = v155[1];
          double v129 = v159;
          double v131 = v152;
          uint64_t result = cnnavigation::GLONASSFindSat(a1, a4, &v163, v162, v161, a9 - v159, a10);
          if (!result)
          {
            __double2 v33 = __sincos_stret(v129 * 0.00007292115);
            double v34 = v164;
            double v115 = v162[0];
            double v116 = v163;
            double v118 = v162[1];
            double v119 = v33.__cosval * v164 - v33.__sinval * v163;
            double v126 = *a7;
            double v127 = v162[2];
            double v121 = *a3;
            double v122 = a3[1];
            double v123 = a3[2];
            double v124 = v161[0];
            double v114 = v161[1];
            double v120 = v161[2];
            double v35 = v33.__sinval * v164 + v33.__cosval * v163;
            v160[0] = v35 + -0.36;
            v160[1] = v119 + 0.08;
            double v36 = v165;
            v160[2] = v165 + 0.18;
            uint64_t v150 = 0;
            long long v148 = 0u;
            long long v149 = 0u;
            long long v146 = 0u;
            long long v147 = 0u;
            double v37 = v131 - v129;
            uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, double *, double *, uint64_t *, long long *, double, double))(*(void *)a5 + 24))(a5, v32, v166, v160, &v150, &v146, v131 - v129, a11);
            if (!result)
            {
              double v113 = *(double *)&v147;
              double v130 = *(double *)&v148;
              double v132 = *((double *)&v147 + 1);
              uint64_t v144 = 0;
              uint64_t v145 = 0;
              long long v142 = 0u;
              long long v143 = 0u;
              long long v141 = 0u;
              uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, double *, double *, uint64_t *, long long *, double))(*(void *)a6 + 24))(a6, v32, v166, v160, &v145, &v141, v37);
              if (!result)
              {
                double v38 = v33.__sinval * -0.00007292115 * v126;
                double v39 = v33.__cosval * 0.00007292115 * -0.00007292115 * v126;
                double v40 = v33.__sinval * 0.00007292115 * v126;
                double v41 = v33.__cosval * 0.00007292115 * v126;
                double v42 = v115 * v38 + v33.__cosval * v124 * (1.0 - v126) + v33.__sinval * v114 * (1.0 - v126) + v41 * v118;
                double v43 = (1.0 - v126) * (v33.__sinval * v124)
                    + v33.__cosval * -0.00007292115 * v115 * (1.0 - v126)
                    + v33.__sinval * 0.00007292115 * 0.00007292115 * v126 * v116
                    + v41 * v115;
                double v44 = v119 * 0.00007292115 - v33.__cosval * v115 - v33.__sinval * v118;
                double v45 = v33.__cosval * v118 - v33.__sinval * v115;
                double v46 = v33.__sinval * v118 + v33.__cosval * v115;
                double v47 = v33.__cosval * -0.00007292115 * v126;
                double v48 = (1.0 - v126) * -(v33.__cosval * v124)
                    + v33.__sinval * -0.00007292115 * v115 * (1.0 - v126)
                    + v39 * v116
                    + v40 * v115
                    + v33.__cosval * 0.00007292115 * v118 * (1.0 - v126)
                    + -(v33.__sinval * v114) * (1.0 - v126)
                    + v33.__sinval * 0.00007292115 * -0.00007292115 * v126 * v34
                    + v47 * v118;
                double v125 = v115 * v47
                     + -(v33.__sinval * v124) * (1.0 - v126)
                     + v33.__cosval * v114 * (1.0 - v126)
                     + v38 * v118;
                double v117 = v43
                     + v33.__sinval * -0.00007292115 * v118 * (1.0 - v126)
                     + -(v33.__cosval * v114) * (1.0 - v126)
                     + v39 * v34
                     + v40 * v118;
                double v49 = (-(v33.__sinval * v34) - v33.__cosval * v116) * 0.00007292115
                    + v33.__sinval * v115
                    - v33.__cosval * v118;
                double v50 = v35 - v137;
                double v51 = v119 - v135;
                double v52 = v36 - v133;
                double v53 = v51 * v51 + v50 * v50;
                double v54 = sqrt(v53 + v52 * v52);
                double v136 = v33.__cosval * -0.00007292115 * v116
                     + v33.__sinval * v115
                     - v33.__cosval * v118
                     + v33.__sinval * -0.00007292115 * v34;
                double v138 = v33.__sinval * -0.00007292115 * v116
                     - v33.__cosval * v115
                     - v33.__sinval * v118
                     + v33.__cosval * 0.00007292115 * v34;
                double v55 = v54 * (v54 * v54);
                double v56 = (v52 * v52 + v51 * v51) / v55;
                double v57 = -(v50 * v51) / v55;
                double v58 = -(v50 * (v36 - v133)) / v55;
                double v59 = v127 - v24 * v127;
                double v60 = v46 + v44 * v24;
                double v61 = v46 + v44 * v126;
                double v62 = v45 + v49 * v24;
                double v134 = v50 / v54;
                double v63 = v50 / v54 * (v42 + v48 * v24) + (v62 * v57 + v56 * v60 + v58 * v59) * v61;
                double v64 = v49 * v57 + v56 * v44 - v58 * v127;
                double v65 = v50 / v54 * v48;
                double v66 = v128 * v65 + v128 * v64 * v61;
                double v67 = v140 * v65 + -(v56 - v64 * v140) * v61;
                double v68 = v139 * v65 + -(v57 - v64 * v139) * v61;
                double v69 = v27 * v65 + -(v58 - v64 * v27) * v61;
                double v70 = (v52 * v52 + v50 * v50) / v55;
                double v71 = v45 + v49 * v126;
                double v72 = v52;
                double v73 = -(v51 * v52) / v55;
                double v74 = v63 + (v62 * v70 + v57 * v60 + v73 * v59) * v71;
                double v75 = v49 * v70 + v57 * v44 - v73 * v127;
                double v76 = v66 + v128 * v75 * v71;
                double v77 = v67 + -(v57 - v75 * v140) * v71;
                double v78 = v68 + -(v70 - v75 * v139) * v71;
                double v79 = v69 + -(v73 - v75 * v27) * v71;
                double v80 = v53 / v55;
                double v81 = v51 / v54;
                double v82 = v74 + v51 / v54 * (v125 + v117 * v24);
                double v83 = v127 - v127 * v126;
                double v84 = v59;
                double v85 = v82 + (v62 * v73 + v58 * v60 + v80 * v59) * v83;
                double v86 = v49 * v73 + v58 * v44 - v80 * v127;
                double v87 = v76 + v81 * v117 * v128 + v128 * v86 * v83;
                double v88 = v77 + v81 * v117 * v140 + -(v58 - v86 * v140) * v83;
                double v89 = v78 + v81 * v117 * v139 + -(v73 - v86 * v139) * v83;
                double v90 = v79 + v81 * v117 * v27 + -(v80 - v86 * v27) * v83;
                double v91 = v72 / v54;
                double v92 = -(v120 * (1.0 - v126));
                double v93 = v85
                    + v72 / v54 * ((1.0 - v126) * v120 + v92 * v24)
                    + (-(v57 * v62) - v56 * v60 - v58 * v84) * v121
                    + (-(v70 * v62) - v57 * v60 - v73 * v84) * v122;
                double v94 = v91 * v92;
                double v95 = -(v57 * v49) - v56 * v44 + v58 * v127;
                double v96 = v87 + v94 * v128 + v128 * v95 * v121;
                double v97 = v88 + v94 * v140 + (v56 + v95 * v140) * v121;
                double v98 = v89 + v94 * v139 + (v57 + v95 * v139) * v121;
                double v99 = v90 + v94 * v27 + (v58 + v95 * v27) * v121;
                double v100 = -(v70 * v49) - v57 * v44 + v73 * v127;
                double v101 = v93 + (-(v73 * v62) - v58 * v60 - v80 * v84) * v123;
                double v102 = -(v73 * v49) - v58 * v44 + v80 * v127;
                double v103 = v58 + v102 * v140;
                double v104 = v73 + v102 * v139;
                double v105 = v80 + v102 * v27;
                double v106 = v96 + v128 * v100 * v122 + v128 * v102 * v123;
                double v107 = v97 + (v57 + v100 * v140) * v122 + v103 * v123;
                double v108 = v98 + (v70 + v100 * v139) * v122 + v104 * v123;
                double v109 = *((double *)&v141 + 1) + *(double *)&v142 * 0.0 + *((double *)&v142 + 1) * 0.0;
                double v110 = *(double *)&v142 + *((double *)&v141 + 1) * 0.0 + *((double *)&v142 + 1) * 0.0;
                double v111 = *((double *)&v142 + 1) + *(double *)&v142 * 0.0 + *((double *)&v141 + 1) * 0.0;
                double v112 = 1.0 - (v136 * v81 + v134 * v138 - v91 * v127) / 299792458.0;
                *a12 = v101 / 299792458.0 / v112;
                a12[1] = v106 / 299792458.0 / v112;
                a12[2] = v107 / 299792458.0 / v112;
                a12[3] = v108 / 299792458.0 / v112;
                a12[4] = (v99 + (v73 + v100 * v27) * v122 + v105 * v123) / 299792458.0 / v112;
                a12[5] = (v113 + v132 * 0.0 + v130 * 0.0 - v134 / 299792458.0 + v109) / v112;
                a12[6] = (v132 + v113 * 0.0 + v130 * 0.0 - v81 / 299792458.0 + v110) / v112;
                a12[7] = (v130 + v132 * 0.0 + v113 * 0.0 - v91 / 299792458.0 + v111) / v112;
              }
            }
          }
        }
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t cnnavigation::GLONASSTimeOfFlightRate(int a1, double *a2, double *a3, uint64_t a4, uint64_t a5, uint64_t a6, double *a7, double *a8, double a9, double a10, double a11)
{
  return cnnavigation::GLONASSTimeOfFlightRate(a1, a2, a3, a4, a5, a6, a7, 1, a9, a10, a11, a8);
}

uint64_t cnnavigation::GPSSatelliteClockOffset(cnnavigation *this, uint64_t a2, double a3, double a4, const cnnavigation::GPSEphemerides *a5, double *a6)
{
  return cnnavigation::GPSSatelliteClockOffset((int)this, a2, (double *)a5, 0, (uint64_t)&v7, a3, a4);
}

uint64_t cnnavigation::GPSSatelliteClockOffset(int a1, uint64_t a2, double *a3, int a4, uint64_t a5, double a6, double a7)
{
  if (a7 <= 0.0 || *(unsigned char *)(a2 + 12) == 0) {
    return 0xFFFFFFFFLL;
  }
  if ((*(void *)&a7 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL) {
    return 0xFFFFFFFFLL;
  }
  double v10 = *(double *)(a2 + 88);
  if (fabs(v10) < 2.22044605e-16 || (*(void *)&v10 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL) {
    return 0xFFFFFFFFLL;
  }
  double v12 = *(double *)(a2 + 80);
  uint64_t result = 0xFFFFFFFFLL;
  if (v12 >= 0.0 && v12 < 1.0 && (*(void *)&v12 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL)
  {
    double v14 = *(double *)(a2 + 96);
    if ((*(void *)&v14 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL)
    {
      double v15 = *(double *)(a2 + 72);
      if ((*(void *)&v15 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL)
      {
        double v19 = a6 - *(double *)(a2 + 40) + (double)(a1 - *(_DWORD *)(a2 + 32)) * 604800.0;
        double v20 = a6 - *(double *)(a2 + 24) + (double)(a1 - *(_DWORD *)(a2 + 16)) * 604800.0;
        double v35 = *(double *)(a2 + 192) + *(double *)(a2 + 200) * v19 + *(double *)(a2 + 208) * (v19 * v19);
        double v21 = v10 * v10;
        double v34 = v15 * 0.5;
        double v22 = *(double *)(a2 + 64) + v15 * 0.5 * v20 + 19964981.8 / (v10 * (v10 * v10));
        double v23 = *(double *)(a2 + 56) + v22 * v20;
        int v24 = 10;
        long double v25 = v23;
        do
        {
          long double v25 = v23 + v12 * sin(v25);
          --v24;
        }
        while (v24);
        double v26 = v21 + v14 * v20;
        uint64_t result = 0xFFFFFFFFLL;
        if (v26 >= 0.0 && v26 >= 13279855.0)
        {
          double v27 = sqrt(v26);
          double v28 = v27 * -4.44280763e-10;
          if (fabs(a7 + -1575420000.0) <= 0.000000015)
          {
            double v29 = *(double *)(a2 + 216) - *(double *)(a2 + 224);
            double v30 = v35;
          }
          else
          {
            double v29 = 0.0;
            double v30 = v35;
            if (fabs(a7 + -1176450000.0) <= 0.000000015) {
              double v29 = *(double *)(a2 + 216) - *(double *)(a2 + 240);
            }
          }
          *a3 = v30 + v27 * -4.44280763e-10 * (v25 - v23) - v29;
          if (a4)
          {
            double v31 = *(double *)(a2 + 200) + (*(double *)(a2 + 208) + *(double *)(a2 + 208)) * v19;
            long double v32 = (v25 - v23) * -2.22140382e-10 / v27;
            long double v33 = cos(v25);
            uint64_t result = 0;
            *(long double *)a5 = v14 * v32
                               - v28 * (v22 + v34 * v20)
                               + v28 * ((v22 + v34 * v20) / (1.0 - v12 * v33))
                               + v31;
            *(void *)(a5 + 8) = 0;
          }
          else
          {
            return 0;
          }
        }
      }
    }
  }
  return result;
}

uint64_t cnnavigation::GPSSatelliteClockOffset(int a1, uint64_t a2, double *a3, uint64_t a4, double a5, double a6)
{
  return cnnavigation::GPSSatelliteClockOffset(a1, a2, a3, 1, a4, a5, a6);
}

uint64_t cnnavigation::GPSSatelliteClockOffsetRate(cnnavigation *this, uint64_t a2, double a3, double a4, const cnnavigation::GPSEphemerides *a5, double *a6)
{
  return cnnavigation::GPSSatelliteClockOffsetRate((int)this, a2, (double *)a5, 0, (uint64_t)&v7, a3);
}

uint64_t cnnavigation::GPSSatelliteClockOffsetRate(int a1, uint64_t a2, double *a3, int a4, uint64_t a5, double a6)
{
  if (!*(unsigned char *)(a2 + 12)) {
    return 0xFFFFFFFFLL;
  }
  double v7 = *(double *)(a2 + 88);
  if (fabs(v7) < 2.22044605e-16 || (*(void *)&v7 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL) {
    return 0xFFFFFFFFLL;
  }
  double v8 = *(double *)(a2 + 80);
  if (v8 < 0.0 || v8 >= 1.0) {
    return 0xFFFFFFFFLL;
  }
  if ((*(void *)&v8 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL) {
    return 0xFFFFFFFFLL;
  }
  double v10 = *(double *)(a2 + 96);
  if ((*(void *)&v10 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL) {
    return 0xFFFFFFFFLL;
  }
  double v11 = *(double *)(a2 + 72);
  if ((*(void *)&v11 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL) {
    return 0xFFFFFFFFLL;
  }
  double v30 = a6 - *(double *)(a2 + 40) + (double)(a1 - *(_DWORD *)(a2 + 32)) * 604800.0;
  double v15 = a6 - *(double *)(a2 + 24) + (double)(a1 - *(_DWORD *)(a2 + 16)) * 604800.0;
  double v16 = v7 * v7;
  double v17 = *(double *)(a2 + 64) + v11 * 0.5 * v15 + 19964981.8 / (v7 * (v7 * v7));
  double v18 = *(double *)(a2 + 56) + v17 * v15;
  int v19 = 10;
  double v20 = v18;
  do
  {
    double v21 = sin(v20);
    double v20 = v18 + v8 * v21;
    --v19;
  }
  while (v19);
  double v22 = cos(v18 + v8 * v21);
  double v23 = v16 + v10 * v15;
  uint64_t result = 0xFFFFFFFFLL;
  if (v23 >= 0.0 && v23 >= 13279855.0)
  {
    double v25 = v17 + v11 * 0.5 * v15;
    double v26 = 1.0 - v8 * v22;
    double v27 = sqrt(v23);
    double v28 = v25 / v26 - v25;
    double v29 = (v20 - v18) * -2.22140382e-10;
    *a3 = v10 * (1.0 / v27 * v29)
        + v27 * -4.44280763e-10 * v28
        + *(double *)(a2 + 200)
        + (*(double *)(a2 + 208) + *(double *)(a2 + 208)) * v30;
    uint64_t result = 0;
    if (a4)
    {
      *(double *)a5 = v29 / v27 * 0.0
                    - v27 * -4.44280763e-10 * v11
                    + v27 * -4.44280763e-10 * ((v11 + (v18 - v20) * (v25 / v26) * (v25 / v26)) / v26)
                    + 1.0 / v27 * (v28 * -2.22140382e-10) * v10
                    + v10 * (1.0 / v27 * -2.22140382e-10) * (v25 / v26)
                    - v10 * (1.0 / v27 * -2.22140382e-10) * v25
                    + *(double *)(a2 + 208)
                    + *(double *)(a2 + 208);
      *(void *)(a5 + 8) = 0;
    }
  }
  return result;
}

uint64_t cnnavigation::GPSSatelliteClockOffsetRate(int a1, uint64_t a2, double *a3, uint64_t a4, double a5)
{
  return cnnavigation::GPSSatelliteClockOffsetRate(a1, a2, a3, 1, a4, a5);
}

uint64_t cnnavigation::GPSSatelliteTime(cnnavigation *this, uint64_t a2, double a3, double a4, const cnnavigation::GPSEphemerides *a5, double *a6, double *a7)
{
  return cnnavigation::GPSSatelliteTime((int)this, a2, a5, a6, 0, &v8, a3, a4);
}

uint64_t cnnavigation::GPSSatelliteTime(int a1, uint64_t a2, _DWORD *a3, double *a4, int a5, double *a6, double a7, double a8)
{
  double v19 = 0.0;
  if (cnnavigation::GPSSatelliteClockOffset(a1, a2, &v19, a5, (uint64_t)v18, a7, a8)) {
    return 0xFFFFFFFFLL;
  }
  double v15 = v19 + a7;
  int v16 = vcvtmd_s64_f64((v19 + a7) / 604800.0);
  *a3 = v16 + a1;
  *a4 = v15 - (double)v16 * 604800.0;
  uint64_t result = 0;
  if (a5)
  {
    double v17 = v18[1];
    *a6 = v18[0] + 1.0;
    a6[1] = v17;
  }
  return result;
}

uint64_t cnnavigation::GPSSatelliteTime(int a1, uint64_t a2, _DWORD *a3, double *a4, double *a5, double a6, double a7)
{
  return cnnavigation::GPSSatelliteTime(a1, a2, a3, a4, 1, a5, a6, a7);
}

double cnnavigation::LinearizedMagneticModel::LinearizedMagneticModel(cnnavigation::LinearizedMagneticModel *this)
{
  *(void *)this = &unk_1EDD0AF48;
  *((_DWORD *)this + 2) = 0;
  double result = 0.0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 4) = 0u;
  *((_OWORD *)this + 5) = 0u;
  *((_OWORD *)this + 6) = 0u;
  *((_OWORD *)this + 7) = 0u;
  *((_OWORD *)this + 8) = 0u;
  *((_OWORD *)this + 9) = 0u;
  *((_OWORD *)this + 10) = 0u;
  *((_OWORD *)this + 11) = 0u;
  *((_OWORD *)this + 12) = 0u;
  *((_OWORD *)this + 13) = 0u;
  *(_OWORD *)((char *)this + 217) = 0u;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD0AF48;
  *((_DWORD *)this + 2) = 0;
  double result = 0.0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 4) = 0u;
  *((_OWORD *)this + 5) = 0u;
  *((_OWORD *)this + 6) = 0u;
  *((_OWORD *)this + 7) = 0u;
  *((_OWORD *)this + 8) = 0u;
  *((_OWORD *)this + 9) = 0u;
  *((_OWORD *)this + 10) = 0u;
  *((_OWORD *)this + 11) = 0u;
  *((_OWORD *)this + 12) = 0u;
  *((_OWORD *)this + 13) = 0u;
  *(_OWORD *)((char *)this + 217) = 0u;
  return result;
}

uint64_t cnnavigation::LinearizedMagneticModel::LinearizedMagneticModel(uint64_t a1, int a2, void *a3, uint64_t a4, double a5)
{
  uint64_t v26 = *MEMORY[0x1E4F143B8];
  *(void *)a1 = &unk_1EDD0AF48;
  *(void *)(a1 + 24) = *a3;
  *(void *)(a1 + 32) = a3[1];
  *(void *)(a1 + 40) = a3[2];
  *(_DWORD *)(a1 + 8) = a2;
  *(double *)(a1 + 16) = a5;
  uint64_t v23 = 0;
  if ((*(unsigned int (**)(uint64_t))(*(void *)a4 + 32))(a4))
  {
    char v6 = 0;
    long long v7 = 0uLL;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)(a1 + 64) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 120) = 0u;
    *(_OWORD *)(a1 + 136) = 0u;
    *(_OWORD *)(a1 + 152) = 0u;
    *(_OWORD *)(a1 + 168) = 0u;
    float64x2_t v8 = 0uLL;
    *(void *)(a1 + 184) = 0;
  }
  else
  {
    *(void *)(a1 + 48) = v23;
    *(_OWORD *)(a1 + 56) = v24;
    *(void *)(a1 + 72) = v25;
    long long v9 = v15;
    *(_OWORD *)(a1 + 80) = v14;
    *(_OWORD *)(a1 + 96) = v9;
    long long v10 = v17;
    *(_OWORD *)(a1 + 112) = v16;
    *(_OWORD *)(a1 + 128) = v10;
    long long v11 = v19;
    *(_OWORD *)(a1 + 144) = v18;
    *(_OWORD *)(a1 + 160) = v11;
    long long v7 = v21;
    *(_OWORD *)(a1 + 176) = v20;
    double v12 = (const double *)&unk_18E1F0110;
    float64x2_t v8 = vld1q_dup_f64(v12);
    char v6 = 1;
    v8.f64[0] = v22;
  }
  *(_OWORD *)(a1 + 192) = v7;
  *(float64x2_t *)(a1 + 208) = v8;
  *(unsigned char *)(a1 + 232) = v6;
  return a1;
}

void sub_18DEF6000(_Unwind_Exception *a1)
{
  void *v1 = &unk_1EDD0A8A8;
  _Unwind_Resume(a1);
}

double cnnavigation::LinearizedMagneticModel::LinearizedMagneticModel(cnnavigation::LinearizedMagneticModel *this, const cnnavigation::LinearizedMagneticModel *a2)
{
  *(void *)this = &unk_1EDD0AF48;
  *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
  *((_OWORD *)this + 1) = *((_OWORD *)a2 + 1);
  *((_OWORD *)this + 2) = *((_OWORD *)a2 + 2);
  *((_OWORD *)this + 3) = *((_OWORD *)a2 + 3);
  *((_OWORD *)this + 4) = *((_OWORD *)a2 + 4);
  *((_OWORD *)this + 5) = *((_OWORD *)a2 + 5);
  *((_OWORD *)this + 6) = *((_OWORD *)a2 + 6);
  *((_OWORD *)this + 7) = *((_OWORD *)a2 + 7);
  *((_OWORD *)this + 8) = *((_OWORD *)a2 + 8);
  *((_OWORD *)this + 9) = *((_OWORD *)a2 + 9);
  *((_OWORD *)this + 10) = *((_OWORD *)a2 + 10);
  *((_OWORD *)this + 11) = *((_OWORD *)a2 + 11);
  *((_OWORD *)this + 12) = *((_OWORD *)a2 + 12);
  *((_OWORD *)this + 13) = *((_OWORD *)a2 + 13);
  double result = *((double *)a2 + 28);
  *((double *)this + 28) = result;
  *((unsigned char *)this + 232) = *((unsigned char *)a2 + 232);
  return result;
}

double cnnavigation::LinearizedMagneticModel::operator=(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
    double result = *(double *)(a2 + 224);
    *(double *)(a1 + 224) = result;
    *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  }
  return result;
}

uint64_t cnnavigation::LinearizedMagneticModel::ComputeLinearizedMagneticModel(uint64_t a1, int a2, double *a3, int a4, int a5, double *a6, double *a7, uint64_t a8, double a9)
{
  if (!*(unsigned char *)(a1 + 232)) {
    return 0xFFFFFFFFLL;
  }
  double v9 = *a3;
  double v10 = a3[1];
  double v11 = a3[2];
  if (sqrt(v10 * v10 + v9 * v9 + v11 * v11) <= 0.00000001) {
    return 0xFFFFFFFFLL;
  }
  double v12 = a9 - *(double *)(a1 + 16) + (double)(a2 - *(_DWORD *)(a1 + 8)) * 604800.0;
  if (fabs(v12) > *(double *)(a1 + 224)) {
    return 0xFFFFFFFFLL;
  }
  double v13 = v9 - *(double *)(a1 + 24);
  double v14 = v10 - *(double *)(a1 + 32);
  double v15 = v11 - *(double *)(a1 + 40);
  if (sqrt(v14 * v14 + v13 * v13 + v15 * v15) > *(double *)(a1 + 216)) {
    return 0xFFFFFFFFLL;
  }
  *a6 = *(double *)(a1 + 48)
      - (v14 * *(double *)(a1 + 64)
       + *(double *)(a1 + 56) * v13
       + *(double *)(a1 + 72) * v15
       + *(double *)(a1 + 80) * v12)
      + (v14 * (v13 * *(double *)(a1 + 96))
       + v13 * *(double *)(a1 + 88) * v13
       + v13 * *(double *)(a1 + 104) * v15
       + v13 * *(double *)(a1 + 112) * v12
       + v14 * *(double *)(a1 + 120) * v13
       + v14 * *(double *)(a1 + 128) * v14
       + v14 * *(double *)(a1 + 136) * v15
       + v14 * *(double *)(a1 + 144) * v12
       + v15 * *(double *)(a1 + 152) * v13
       + v15 * *(double *)(a1 + 160) * v14
       + v15 * *(double *)(a1 + 168) * v15
       + v15 * *(double *)(a1 + 176) * v12
       + v12 * *(double *)(a1 + 184) * v13
       + v12 * *(double *)(a1 + 192) * v14
       + v12 * *(double *)(a1 + 200) * v15
       + v12 * *(double *)(a1 + 208) * v12)
      * -0.5;
  if (a4)
  {
    double v18 = *(double *)(a1 + 72);
    double v19 = v14 * *(double *)(a1 + 160)
        + *(double *)(a1 + 152) * v13
        + *(double *)(a1 + 168) * v15
        + *(double *)(a1 + 176) * v12;
    double v20 = *(double *)(a1 + 64)
        + v14 * *(double *)(a1 + 128)
        + *(double *)(a1 + 120) * v13
        + *(double *)(a1 + 136) * v15
        + *(double *)(a1 + 144) * v12;
    *a7 = *(double *)(a1 + 56)
        + v14 * *(double *)(a1 + 96)
        + *(double *)(a1 + 88) * v13
        + *(double *)(a1 + 104) * v15
        + *(double *)(a1 + 112) * v12;
    a7[1] = v20;
    a7[2] = v18 + v19;
  }
  uint64_t v16 = 0;
  if (a5)
  {
    double v21 = *(double *)(a1 + 184);
    double v22 = *(double *)(a1 + 192);
    double v23 = v14 * v22 + v21 * v13;
    double v24 = *(double *)(a1 + 200);
    double v25 = *(double *)(a1 + 208);
    *(double *)a8 = *(double *)(a1 + 80) + v23 + v24 * v15 + v25 * v12;
    *(_OWORD *)(a8 + 8) = *(_OWORD *)(a1 + 88);
    *(_OWORD *)(a8 + 24) = *(_OWORD *)(a1 + 104);
    *(_OWORD *)(a8 + 40) = *(_OWORD *)(a1 + 120);
    *(_OWORD *)(a8 + 56) = *(_OWORD *)(a1 + 136);
    *(_OWORD *)(a8 + 72) = *(_OWORD *)(a1 + 152);
    *(_OWORD *)(a8 + 88) = *(_OWORD *)(a1 + 168);
    *(double *)(a8 + 104) = v21;
    *(double *)(a8 + 112) = v22;
    *(double *)(a8 + 120) = v24;
    *(double *)(a8 + 128) = v25;
  }
  return v16;
}

uint64_t cnnavigation::LinearizedMagneticModel::GetMagneticFieldPotential(cnnavigation::LinearizedMagneticModel *this, int a2, double a3, double *a4, double *a5)
{
  v7[3] = *(double *)MEMORY[0x1E4F143B8];
  return cnnavigation::LinearizedMagneticModel::ComputeLinearizedMagneticModel((uint64_t)this, a2, a4, 0, 0, a5, v7, (uint64_t)v6, a3);
}

uint64_t cnnavigation::LinearizedMagneticModel::GetMagneticFieldPotential(cnnavigation::LinearizedMagneticModel *this, int a2, double a3, double *a4, double *a5, double *a6)
{
  return cnnavigation::LinearizedMagneticModel::ComputeLinearizedMagneticModel((uint64_t)this, a2, a4, 1, 0, a5, a6, (uint64_t)v7, a3);
}

uint64_t cnnavigation::LinearizedMagneticModel::GetMagneticFieldPotential(uint64_t a1, int a2, double *a3, double *a4, double *a5, uint64_t a6, double a7)
{
  return cnnavigation::LinearizedMagneticModel::ComputeLinearizedMagneticModel(a1, a2, a3, 1, 1, a4, a5, a6, a7);
}

uint64_t cnnavigation::LinearizedMagneticModel::GetMagneticFieldVector(cnnavigation::LinearizedMagneticModel *this, int a2, double a3, double *a4, double *a5)
{
  return cnnavigation::LinearizedMagneticModel::ComputeLinearizedMagneticModel((uint64_t)this, a2, a4, 1, 0, &v7, a5, (uint64_t)&v6, a3);
}

uint64_t cnnavigation::LinearizedMagneticModel::GetMagneticFieldVector(uint64_t a1, int a2, double *a3, double *a4, uint64_t a5, double a6)
{
  return cnnavigation::LinearizedMagneticModel::ComputeLinearizedMagneticModel(a1, a2, a3, 1, 1, &v7, a4, a5, a6);
}

uint64_t cnnavigation::LinearizedMagneticModel::UpdateLinearization(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, double a5)
{
  int v7 = a2;
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  uint64_t v17 = 0;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, void *, uint64_t *, long long *, _OWORD *))(*(void *)a4 + 32))(a4, a2, a3, &v17, &v18, v15);
  if (result) {
    return 0xFFFFFFFFLL;
  }
  *(_DWORD *)(a1 + 8) = v7;
  *(double *)(a1 + 16) = a5;
  *(void *)(a1 + 24) = *a3;
  *(void *)(a1 + 32) = a3[1];
  uint64_t v10 = v17;
  *(void *)(a1 + 40) = a3[2];
  *(void *)(a1 + 48) = v10;
  *(_OWORD *)(a1 + 56) = v18;
  *(void *)(a1 + 72) = v19;
  long long v11 = v15[1];
  *(_OWORD *)(a1 + 80) = v15[0];
  *(_OWORD *)(a1 + 96) = v11;
  long long v12 = v15[3];
  *(_OWORD *)(a1 + 112) = v15[2];
  *(_OWORD *)(a1 + 128) = v12;
  long long v13 = v15[5];
  *(_OWORD *)(a1 + 144) = v15[4];
  *(_OWORD *)(a1 + 160) = v13;
  long long v14 = v15[7];
  *(_OWORD *)(a1 + 176) = v15[6];
  *(_OWORD *)(a1 + 192) = v14;
  *(void *)(a1 + 208) = v16;
  *(_OWORD *)(a1 + 216) = xmmword_18E1F0120;
  *(unsigned char *)(a1 + 232) = 1;
  return result;
}

uint64_t cnnavigation::LinearizedMagneticModel::UpdateLinearization(uint64_t a1, int a2, void *a3, void *a4, uint64_t a5, double a6, double a7, double a8, double a9)
{
  *(_DWORD *)(a1 + 8) = a2;
  *(double *)(a1 + 16) = a6;
  *(void *)(a1 + 24) = *a3;
  *(void *)(a1 + 32) = a3[1];
  *(void *)(a1 + 40) = a3[2];
  *(double *)(a1 + 48) = a9;
  *(void *)(a1 + 56) = *a4;
  *(void *)(a1 + 64) = a4[1];
  *(void *)(a1 + 72) = a4[2];
  *(_OWORD *)(a1 + 80) = *(_OWORD *)a5;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a5 + 16);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a5 + 32);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a5 + 48);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a5 + 64);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a5 + 80);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a5 + 96);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a5 + 112);
  *(void *)(a1 + 208) = *(void *)(a5 + 128);
  *(double *)(a1 + 216) = a7;
  *(double *)(a1 + 224) = a8;
  *(unsigned char *)(a1 + 232) = 1;
  return 0;
}

void *sub_18DEF665C(void *result)
{
  *uint64_t result = &unk_1EDD0A8A8;
  return result;
}

void sub_18DEF667C(void *a1)
{
  *a1 = &unk_1EDD0A8A8;
  JUMPOUT(0x192FA6240);
}

uint64_t sub_18DEF66AC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 232);
}

uint64_t cnnavigation::details::IonospherePiercePoint::ComputeIonospherePiercePointCoordinates(cnnavigation::details::IonospherePiercePoint *this)
{
  uint64_t v46 = *MEMORY[0x1E4F143B8];
  float64x2_t v41 = *((float64x2_t *)this + 4);
  uint64_t v42 = *((void *)this + 10);
  float64x2_t v39 = *(float64x2_t *)((char *)this + 88);
  uint64_t v40 = *((void *)this + 13);
  double v36 = 0.0;
  double v37 = 0.0;
  uint64_t v38 = 0;
  int v2 = *(_DWORD *)this;
  if (cnnavigation::ECEFToLLA(&v41, *(_DWORD *)this, &v36, 0, (uint64_t)&v43))
  {
    LOWORD(v43) = 5;
    LOBYTE(v35) = 4;
    float64x2_t v8 = "ComputeIonospherePiercePointCoordinates, conversion of current position from ECEF to LLA failed";
    double v9 = (cnprint::CNPrinter *)&v43;
    uint64_t v10 = (unsigned __int8 *)&v35;
LABEL_13:
    cnprint::CNPrinter::Print(v9, v10, v8, v3, v4, v5, v6, v7, v33);
    return 0xFFFFFFFFLL;
  }
  double v43 = 0.0;
  double v44 = 0.0;
  long double __x = 0.0;
  cnnavigation::ECEFToENU(&v39, v2, 0, &v41, 0, (uint64_t)&v43);
  if (v11)
  {
    __int16 v35 = 5;
    unsigned __int8 v34 = 4;
    float64x2_t v8 = "ComputeIonospherePiercePointCoordinates, conversion of current position from ECEF to ENU failed";
LABEL_12:
    double v9 = (cnprint::CNPrinter *)&v35;
    uint64_t v10 = &v34;
    goto LABEL_13;
  }
  long double v12 = v43;
  long double v13 = v44;
  double v14 = v13 * v13 + v12 * v12;
  if (fabs(v14) >= 2.22044605e-16)
  {
    double v16 = atan2(sqrt(v14), __x);
    *((double *)this + 2) = v16;
    double v15 = atan2(v12, v13);
    *((double *)this + 4) = v15;
    if (v15 < 0.0)
    {
      double v15 = v15 + 6.28318531;
      *((double *)this + 4) = v15;
    }
  }
  else
  {
    cnprint::CNPrinter::Print((cnprint::CNPrinter *)&v35, &v34, "ComputeIonospherePiercePointCoordinates,WARNING: east_north_vector_length_squared is zero", v3, v4, v5, v6, v7, v33);
    *((void *)this + 2) = 0;
    *((void *)this + 4) = 0;
    double v15 = 0.0;
    double v16 = 0.0;
  }
  double v17 = sqrt(*((double *)this + 9) * 0.001 * (*((double *)this + 9) * 0.001)+ *((double *)this + 8) * 0.001 * (*((double *)this + 8) * 0.001)+ *((double *)this + 10) * 0.001 * (*((double *)this + 10) * 0.001));
  *((double *)this + 7) = v17;
  double v18 = *((double *)this + 1);
  if (v18 < 0.0 || (double v19 = v18 + 6371.009, v19 < v17))
  {
    __int16 v35 = 5;
    unsigned __int8 v34 = 4;
    float64x2_t v8 = "ComputeIonospherePiercePointCoordinates,this->thin_shell_height_km < 0 or (Re_km + this->thin_shell_height_km) "
         "< this->receiver_radius_km_";
    goto LABEL_12;
  }
  double v21 = v17 / v19;
  long double v22 = sin(v16);
  long double v23 = asin(v22 * v21);
  *((long double *)this + 3) = v23;
  double v24 = v36;
  __double2 v25 = __sincos_stret(v16 - v23);
  __double2 v26 = __sincos_stret(v24);
  long double v27 = cos(v15);
  long double v28 = asin(v27 * (v25.__sinval * v26.__cosval) + v26.__sinval * v25.__cosval);
  *((long double *)this + 5) = v28;
  double v29 = v37;
  if (fabs(fabs(v28) + -1.57079633) <= 0.000000015)
  {
    uint64_t result = 0;
    *((double *)this + 6) = v37;
  }
  else
  {
    long double v30 = sin(v15) * v25.__sinval;
    long double v31 = cos(v28);
    long double v32 = asin(v30 / v31);
    uint64_t result = 0;
    *((long double *)this + 6) = v29 + v32;
  }
  return result;
}

uint64_t cnnavigation::NullIonosphereModel::GetIonosphericDelay(cnnavigation::NullIonosphereModel *this, int a2, double a3, const double *a4, const double *a5, double a6, double *a7)
{
  uint64_t result = 0xFFFFFFFFLL;
  if (a4)
  {
    if (a5)
    {
      uint64_t result = 0;
      *a7 = 0.0;
    }
  }
  return result;
}

double cnnavigation::NullIonosphereModel::GetIonosphericDelay(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, _OWORD *a6)
{
  if (a3)
  {
    if (a4)
    {
      *a5 = 0;
      double result = 0.0;
      a6[2] = 0u;
      a6[3] = 0u;
      *a6 = 0u;
      a6[1] = 0u;
    }
  }
  return result;
}

void *sub_18DEF69E4(void *result)
{
  *double result = &unk_1EDD0AA58;
  return result;
}

void sub_18DEF6A04(void *a1)
{
  *a1 = &unk_1EDD0AA58;
  JUMPOUT(0x192FA6240);
}

uint64_t sub_18DEF6A34()
{
  return 1;
}

void cnnavigation::GNSSEphemerides::~GNSSEphemerides(cnnavigation::GNSSEphemerides *this)
{
  *(void *)this = &unk_1EDD0A9B8;
}

uint64_t cnnavigation::GNSSEphemerides::GNSSFindSat(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int16 v6 = 0;
  long long v7 = 0u;
  long long v8 = 0u;
  int v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, __int16 *, uint64_t, unsigned char *, unsigned char *))(*(void *)a1 + 56))(a1, a2, &v6, a3, v5, v4);
}

uint64_t cnnavigation::GNSSEphemerides::GNSSFindSat(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __int16 v6 = 0;
  long long v7 = 0u;
  long long v8 = 0u;
  int v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, __int16 *, uint64_t, uint64_t, uint64_t *))(*(void *)a1 + 56))(a1, a2, &v6, a3, a4, &v5);
}

{
  uint64_t v5;
  unsigned char v6[24];

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, unsigned char *, uint64_t *))(*(void *)a1 + 56))(a1, a2, a3, a4, v6, &v5);
}

uint64_t cnnavigation::GNSSEphemerides::GNSSFindSat(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  __int16 v6 = 0;
  long long v7 = 0u;
  long long v8 = 0u;
  int v9 = 0;
  int v12 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, __int16 *, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 56))(a1, a2, &v6, a3, a4, a5);
}

{
  unsigned char v6[24];

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unsigned char *))(*(void *)a1 + 56))(a1, a2, a3, a4, a5, v6);
}

uint64_t cnnavigation::GNSSEphemerides::GNSSSatelliteClockOffset(cnnavigation::GNSSEphemerides *this, const cnnavigation::TAITime *a2, double a3, double *a4)
{
  __int16 v6 = 0;
  long long v7 = 0u;
  long long v8 = 0u;
  int v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = 0;
  return (*(uint64_t (**)(cnnavigation::GNSSEphemerides *, const cnnavigation::TAITime *, __int16 *, double *, void, unsigned char *, double))(*(void *)this + 96))(this, a2, &v6, a4, 0, v5, a3);
}

uint64_t cnnavigation::GNSSEphemerides::GNSSSatelliteClockOffset(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __int16 v5 = 0;
  long long v6 = 0u;
  long long v7 = 0u;
  int v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, __int16 *, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 96))(a1, a2, &v5, a3, 1, a4);
}

{
  uint64_t v5;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t *))(*(void *)a1 + 96))(a1, a2, a3, a4, 0, &v5);
}

uint64_t cnnavigation::GNSSEphemerides::GNSSSatelliteClockOffset(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 96))(a1, a2, a3, a4, 1, a5);
}

uint64_t cnnavigation::GNSSEphemerides::GNSSSatelliteClockOffsetRate(cnnavigation::GNSSEphemerides *this, const cnnavigation::TAITime *a2, double a3, double *a4)
{
  __int16 v6 = 0;
  long long v7 = 0u;
  long long v8 = 0u;
  int v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  int v12 = 0;
  return (*(uint64_t (**)(cnnavigation::GNSSEphemerides *, const cnnavigation::TAITime *, __int16 *, double *, void, unsigned char *, double))(*(void *)this + 136))(this, a2, &v6, a4, 0, v5, a3);
}

uint64_t cnnavigation::GNSSEphemerides::GNSSSatelliteClockOffsetRate(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __int16 v5 = 0;
  long long v6 = 0u;
  long long v7 = 0u;
  int v8 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  int v11 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, __int16 *, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 136))(a1, a2, &v5, a3, 1, a4);
}

{
  uint64_t v5;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t *))(*(void *)a1 + 136))(a1, a2, a3, a4, 0, &v5);
}

uint64_t cnnavigation::GNSSEphemerides::GNSSSatelliteClockOffsetRate(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)a1 + 136))(a1, a2, a3, a4, 1, a5);
}

BOOL cnnavigation::GNSSUTCParameters::IsValid(cnnavigation::GNSSUTCParameters *this)
{
  if (!*(unsigned char *)this) {
    return 0;
  }
  if (fabs(*((double *)this + 1)) >= 0.000001) {
    return 0;
  }
  if (fabs(*((double *)this + 2)) >= 0.000001) {
    return 0;
  }
  int v1 = *((_DWORD *)this + 10);
  if ((v1 + 500) > 0x3E8) {
    return 0;
  }
  int v2 = v1 - *((_DWORD *)this + 16);
  if (v2 < 0) {
    int v2 = -v2;
  }
  return v2 < 2;
}

cnnavigation::SphericalHarmonicsIonosphereParameters *cnnavigation::SphericalHarmonicsIonosphereParameters::SphericalHarmonicsIonosphereParameters(cnnavigation::SphericalHarmonicsIonosphereParameters *this, unsigned int a2, unsigned int a3)
{
  *(_DWORD *)this = a2;
  *((_DWORD *)this + 1) = a3;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 8) = 0;
  *((void *)this + 5) = 0x7FF8000000000000;
  bzero((char *)this + 48, 0x2000uLL);
  *((void *)this + 1030) = 0x7FF8000000000000;
  *((unsigned char *)this + 8248) = 0;
  if (a2 >= 0x10) {
    __assert_rtn("SphericalHarmonicsIonosphereParameters", "sphericalharmonicsionospheremodel.cpp", 33, "this->max_degree_N_ <= SH_MAX_DEGREE_ORDER");
  }
  if (a2 < a3) {
    __assert_rtn("SphericalHarmonicsIonosphereParameters", "sphericalharmonicsionospheremodel.cpp", 34, "this->max_order_M_ <= this->max_degree_N_");
  }
  unsigned int v6 = (((a2 + 1) * (a2 + 2)) >> 1) - ((a2 - a3 + (a2 - a3) * (a2 - a3)) >> 1);
  *((_DWORD *)this + 2) = v6;
  *((_DWORD *)this + 3) = v6 - (a2 + 1);
  return this;
}

uint64_t cnnavigation::SphericalHarmonicsIonosphereParameters::LoadModelParameters(uint64_t a1, uint64_t a2, int a3, uint64_t *a4, uint64_t **a5, uint64_t *a6, uint64_t **a7, uint64_t a8, double a9, double a10)
{
  double v10 = (double)*(uint64_t *)a2;
  uint64_t v11 = 0xFFFFFFFFLL;
  if (COERCE__INT64(fabs(*(double *)(a2 + 8) + v10)) <= 0x7FEFFFFFFFFFFFFFLL && *(double *)(a2 + 8) + v10 >= 0.0)
  {
    uint64_t v12 = (a4[1] - *a4) >> 3;
    uint64_t v13 = *(unsigned int *)(a1 + 8);
    if (v12 == v13 && (a6[1] - *a6) >> 3 == v12)
    {
      uint64_t v15 = a5[1] - *a5;
      uint64_t v16 = *(unsigned int *)(a1 + 12);
      if (v15 == v16 && a7[1] - *a7 == v15)
      {
        unsigned int v22 = 0;
        int v23 = 0;
        unsigned int v25 = *(_DWORD *)a1;
        unsigned int v24 = *(_DWORD *)(a1 + 4);
        double v26 = 0.0;
        do
        {
          if (v22 <= v25)
          {
            a8 = 0;
            uint64_t v27 = *a4;
            uint64_t v28 = *a6;
            while (1)
            {
              uint64_t v29 = (v23 + a8);
              if (v29 > v13) {
                return 0xFFFFFFFFLL;
              }
              double v30 = *(double *)(v27 + 8 * v29);
              if ((*(void *)&v30 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL) {
                return 0xFFFFFFFFLL;
              }
              uint64_t v11 = 0xFFFFFFFFLL;
              if ((*(void *)(v28 + 8 * v29) & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL
                || *(double *)(v28 + 8 * v29) < 0.0)
              {
                return v11;
              }
              if ((v22 + a8) | v22)
              {
                if (fabs(v30) > v26)
                {
                  __int16 v44 = 5;
                  unsigned __int8 v43 = 4;
                  cnprint::CNPrinter::Print((cnprint::CNPrinter *)&v44, &v43, "#shiono,LoadModelParameters,fabs(Cnm) coefficient > C0,verification failed,n,%d,m,%d,C_nm_tecu,%.3f,C0_tecu,%.3f", (uint64_t)a4, (uint64_t)a5, (uint64_t)a6, (uint64_t)a7, a8, v22 + a8);
                  return 0xFFFFFFFFLL;
                }
              }
              else if (v30 < 1.0 || (double v26 = *(double *)(v27 + 8 * v29), v30 > 1000.0))
              {
                __int16 v46 = 5;
                unsigned __int8 v45 = 4;
                cnprint::CNPrinter::Print((cnprint::CNPrinter *)&v46, &v45, "#shiono,LoadModelParameters,C0 coefficient out of range,verification failed,C0_tecu,%.3f", (uint64_t)a4, (uint64_t)a5, (uint64_t)a6, (uint64_t)a7, a8, SLOBYTE(v30));
                return 0xFFFFFFFFLL;
              }
              unint64_t v31 = (unint64_t)(v22 + a8) << 7;
              *(double *)(a1 + 48 + 8 * v22 + v31) = v30;
              *(void *)(a1 + 4144 + 8 * v22 + v31) = *(void *)(v28 + 8 * v29);
              a8 = (a8 + 1);
              if (v22 + a8 > v25)
              {
                v23 += a8;
                break;
              }
            }
          }
          ++v22;
        }
        while (v22 <= v24);
        if (v24)
        {
          int v32 = 0;
          unsigned int v33 = 1;
          while (v33 > v25)
          {
LABEL_36:
            if (++v33 > v24) {
              goto LABEL_45;
            }
          }
          int v34 = 0;
          a4 = *a5;
          a6 = *a7;
          a8 = a1 + 2096 + 8 * v33;
          while (1)
          {
            uint64_t v35 = (v32 + v34);
            if (v35 > v16
              || (a4[v35] & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL)
            {
              return 0xFFFFFFFFLL;
            }
            uint64_t v11 = 0xFFFFFFFFLL;
            if ((a6[v35] & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL || *(double *)&a6[v35] < 0.0) {
              return v11;
            }
            unint64_t v36 = (unint64_t)(v33 + v34) << 7;
            *(void *)(a8 + v36) = a4[v35];
            *(void *)(a1 + 6192 + 8 * v33 + v36) = a6[v35];
            ++v34;
            if (v33 + v34 > v25)
            {
              v32 += v34;
              goto LABEL_36;
            }
          }
        }
LABEL_45:
        if (a3
          && a9 >= 0.0
          && (*(void *)&a9 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL
          && (*(void *)&a10 & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL)
        {
          double v37 = *(double *)(a2 + 8) + v10;
          BOOL v38 = ((*(void *)&v37 & 0x7FFFFFFFFFFFFFFFuLL) - 0x10000000000000) >> 53 >= 0x3FF
             && (*(void *)&v37 & 0x7FFFFFFFFFFFFFFFuLL) - 1 >= 0xFFFFFFFFFFFFFLL;
          if (!v38 || *(void *)&v37 == 0)
          {
            uint64_t v11 = 0;
            *(_DWORD *)(a1 + 32) = a3;
            *(double *)(a1 + 40) = a9;
            *(double *)(a1 + 8240) = a10;
            *(_OWORD *)(a1 + 16) = *(_OWORD *)a2;
            *(unsigned char *)(a1 + 8248) = 1;
            return v11;
          }
        }
        __int16 v42 = 5;
        char v41 = 4;
        double v18 = "#shiono,LoadModelParameters,input parameters verification failed";
        double v19 = &v42;
        uint64_t v20 = &v41;
      }
      else
      {
        __int16 v48 = 5;
        char v47 = 4;
        char v40 = v15;
        double v18 = "#shiono,LoadModelParameters,S terms mismatch,sin_terms,%lu,sigma_sin_terms,%lu,max_sin_terms,%d,";
        double v19 = &v48;
        uint64_t v20 = &v47;
      }
      cnprint::CNPrinter::Print((cnprint::CNPrinter *)v19, (unsigned __int8 *)v20, v18, (uint64_t)a4, (uint64_t)a5, (uint64_t)a6, (uint64_t)a7, a8, v40);
    }
    else
    {
      __int16 v50 = 5;
      unsigned __int8 v49 = 4;
      cnprint::CNPrinter::Print((cnprint::CNPrinter *)&v50, &v49, "#shiono,LoadModelParameters,C terms mismatch,cos_terms,%lu,sigma_cos_terms,%lu,max_cos_terms,%d,", (uint64_t)a4, (uint64_t)a5, (uint64_t)a6, (uint64_t)a7, a8, v12);
    }
    return 0xFFFFFFFFLL;
  }
  return v11;
}

uint64_t cnnavigation::SphericalHarmonicsIonosphereModel::GetIonosphericDelay(cnnavigation::SphericalHarmonicsIonosphereModel *this, uint64_t a2, long double a3, const double *a4, const double *a5, double a6, double *a7)
{
  long long v11 = *(_OWORD *)a4;
  uint64_t v12 = *((void *)a4 + 2);
  long long v9 = *(_OWORD *)a5;
  uint64_t v10 = *((void *)a5 + 2);
  return cnnavigation::SphericalHarmonicsIonosphereModel::GetIonosphericDelay(this, a3, a6, a2, &v11, &v9, a7, 0, v8);
}

uint64_t cnnavigation::SphericalHarmonicsIonosphereModel::GetIonosphericDelay(void *a1, long double a2, double a3, uint64_t a4, long long *a5, long long *a6, double *a7, int a8, _OWORD *a9)
{
  double v17 = (cnprint::CNPrinter *)(*(uint64_t (**)(void *))(*a1 + 32))(a1);
  if (v17)
  {
    int v23 = (uint64_t *)a1[3];
    if (v23)
    {
      double v91 = a7;
      double v93 = a1;
      int v92 = a8;
      unsigned __int8 v24 = 0;
      double v94 = (fmod(a2, 86400.0) + -50400.0) * 3.14159265 / 43200.0;
      double v26 = 0.0;
      long long v27 = 0uLL;
      while (1)
      {
        uint64_t v28 = v23[3];
        if (!v28 || !*(unsigned char *)(v28 + 8248)) {
          break;
        }
        if (!*((unsigned char *)v23 + 2096))
        {
          if (cnprint::CNPrinter::GetLogLevel(LogLevel) <= 1)
          {
            LOWORD(v97[0]) = 5;
            LOBYTE(v103) = 1;
            cnprint::CNPrinter::Print((cnprint::CNPrinter *)v97, (unsigned __int8 *)&v103, "#shiono,GetIonosphericDelay,layer_num,%u,Legendre normalization not initialized", v81, v82, v83, v84, v85, *(_DWORD *)(v23[3] + 32));
          }
          return 0xFFFFFFFFLL;
        }
        uint64_t v29 = *(void *)(v28 + 40);
        int v106 = 0;
        uint64_t v107 = v29;
        long long v108 = v27;
        long long v109 = v27;
        long long v110 = v27;
        long long v111 = *a5;
        uint64_t v112 = *((void *)a5 + 2);
        long long v113 = *a6;
        uint64_t v114 = *((void *)a6 + 2);
        double v30 = (cnprint::CNPrinter *)cnnavigation::details::IonospherePiercePoint::ComputeIonospherePiercePointCoordinates((cnnavigation::details::IonospherePiercePoint *)&v106);
        if (v30)
        {
          if (cnprint::CNPrinter::GetLogLevel(v30) <= 1)
          {
            LOWORD(v97[0]) = 5;
            LOBYTE(v103) = 1;
            cnprint::CNPrinter::Print((cnprint::CNPrinter *)v97, (unsigned __int8 *)&v103, "#shiono,GetIonosphericDelay,layer_num,%u,failed to calculate IPP coordinates", v86, v87, v88, v89, v90, *(_DWORD *)(v23[3] + 32));
          }
          return 0xFFFFFFFFLL;
        }
        double v31 = fmod(v94 + *(double *)&v110, 6.28318531);
        uint64_t v105 = 0;
        memset(v104, 0, sizeof(v104));
        uint64_t v102 = 0;
        memset(v101, 0, sizeof(v101));
        uint64_t v103 = 0x3FF0000000000000;
        uint64_t v100 = 0;
        __double2 v32 = __sincos_stret(v31);
        unsigned int v33 = (_DWORD *)v23[3];
        unint64_t v34 = v33[1];
        if (v34)
        {
          if ((v34 + 1) > 2) {
            uint64_t v35 = (v34 + 1);
          }
          else {
            uint64_t v35 = 2;
          }
          uint64_t v36 = v35 - 1;
          double v37 = 1.0;
          double v38 = 0.0;
          float64x2_t v39 = (double *)v104;
          char v40 = (double *)v101;
          do
          {
            double v41 = v38 * -v32.__sinval + v32.__cosval * v37;
            *v39++ = v41;
            double v38 = v32.__sinval * v37 + v32.__cosval * v38;
            *v40++ = v38;
            double v37 = v41;
            --v36;
          }
          while (v36);
        }
        bzero(&v98, 0x7F8uLL);
        double v47 = sin(*((long double *)&v109 + 1));
        double v48 = sqrt(1.0 - v47 * v47);
        v97[0] = 0x3FF0000000000000;
        *(double *)double v99 = v47;
        *(double *)&v99[1] = v48;
        LODWORD(v49) = *v33 + 1;
        if (*v33 >= 2u)
        {
          uint64_t v50 = 0;
          if (v49 <= 3) {
            int v51 = 3;
          }
          else {
            int v51 = *v33 + 1;
          }
          uint64_t v52 = (v51 - 2);
          int v53 = 1;
          int v54 = 1;
          double v55 = (double *)v99;
          uint64_t v56 = 2;
          do
          {
            double v57 = (double)v56 * 2.0 + -1.0;
            double v58 = *(double *)&v97[16 * v56 - 17 + v56] * v57;
            double v59 = &v97[16 * v56];
            *(double *)&v59[v56] = v48 * v58;
            *(double *)&v59[v56 - 1] = v47 * v58;
            if ((int)v56 - 2 >= 0)
            {
              double v60 = v47 * v57;
              unsigned int v61 = 2;
              unsigned int v62 = v53;
              int v63 = v54;
              double v64 = v55;
              do
              {
                v64[16] = 1.0 / (double)v61++ * (v60 * *v64 - *(v64 - 16) * (double)v62);
                --v64;
                --v63;
                --v62;
              }
              while (v63 > 0);
            }
            ++v56;
            ++v50;
            v55 += 17;
            ++v54;
            v53 += 2;
          }
          while (v50 != v52);
        }
        unint64_t v65 = 0;
        double v66 = v23 + 6;
        if (v49 <= 1) {
          uint64_t v49 = 1;
        }
        else {
          uint64_t v49 = v49;
        }
        double v67 = 0.0;
        double v68 = v97;
        double v69 = v33;
        do
        {
          unint64_t v70 = 0;
          if (v65 >= v34) {
            unint64_t v71 = v34;
          }
          else {
            unint64_t v71 = v65;
          }
          uint64_t v72 = 8 * v71 + 8;
          do
          {
            double v67 = v67
                + (*(double *)&v69[v70 / 4 + 524] * *(double *)&v101[v70 - 8]
                 + *(double *)&v69[v70 / 4 + 12] * *(double *)&v104[v70 - 8])
                * (*(double *)&v68[v70 / 8]
                 * *(double *)&v66[v70 / 8]);
            v70 += 8;
          }
          while (v72 != v70);
          ++v65;
          v69 += 32;
          v66 += 16;
          v68 += 16;
        }
        while (v65 != v49);
        if (v67 <= 0.0)
        {
          __int16 v96 = 5;
          unsigned __int8 v95 = 2;
          cnprint::CNPrinter::Print((cnprint::CNPrinter *)&v96, &v95, "#shiono,GetIonosphericDelay,layer_num,%u,WARNING:negative vtec,%.3lf,set to zero", v42, v43, v44, v45, v46, v33[8]);
          double v67 = 0.0;
        }
        if (*((double *)&v108 + 1) >= 1.57079633 || *((double *)&v108 + 1) < 0.0)
        {
          __int16 v96 = 5;
          unsigned __int8 v95 = 4;
          cnprint::CNPrinter::Print((cnprint::CNPrinter *)&v96, &v95, "#shiono,GetIonosphericDelay,layer_num,%u,invalid sv_zenith_angle_at_ipp_rad,%.3lf,rad", v42, v43, v44, v45, v46, *(_DWORD *)(v23[3] + 32));
          return 0xFFFFFFFFLL;
        }
        double v26 = v26 + v67 * (1.0 / cos(*((long double *)&v108 + 1)));
        unsigned int LogLevel = (cnprint::CNPrinter *)cnprint::CNPrinter::GetLogLevel(v73);
        if (!LogLevel)
        {
          __int16 v96 = 5;
          unsigned __int8 v95 = 0;
          cnprint::CNPrinter::Print((cnprint::CNPrinter *)&v96, &v95, "#shiono,GetIonosphericDelay,successfully computed per-layer delay,layer_num,%u,gps_week,%d,gps_sec,%.2f,fc,%.2f,sv_at_rx_az_deg,%.2f,sv_at_rx_el_deg,%.2f,vtec,%.3f,vtec_to_stec_fcn,%.3f,stec,%.3f,iono_delay_ns,%.3f", v18, v19, v20, v21, v22, *(_DWORD *)(v23[3] + 32));
        }
        ++v24;
        int v23 = (uint64_t *)*v23;
        long long v27 = 0uLL;
        if (!v23)
        {
          if (!v24) {
            goto LABEL_45;
          }
          if (v93[4] > (unint64_t)v24)
          {
            char v74 = v24;
            goto LABEL_46;
          }
          *double v91 = 1344536590.0 / (a3 * a3) * v26;
          uint64_t result = 0;
          if (v92)
          {
            a9[2] = 0u;
            a9[3] = 0u;
            *a9 = 0u;
            a9[1] = 0u;
          }
          return result;
        }
      }
    }
    else
    {
LABEL_45:
      char v74 = 0;
LABEL_46:
      LOWORD(v97[0]) = 5;
      LOBYTE(v103) = 4;
      cnprint::CNPrinter::Print((cnprint::CNPrinter *)v97, (unsigned __int8 *)&v103, "#shiono,GetIonosphericDelay,unable to compute stec from all available layers,processed_layers,%u", v18, v19, v20, v21, v22, v74);
    }
  }
  else if (cnprint::CNPrinter::GetLogLevel(v17) <= 1)
  {
    LOWORD(v97[0]) = 5;
    LOBYTE(v103) = 1;
    cnprint::CNPrinter::Print((cnprint::CNPrinter *)v97, (unsigned __int8 *)&v103, "#shiono,GetIonosphericDelay,parameters not initialized or invalid,num_layers,%zu", v75, v76, v77, v78, v79, a1[4]);
  }
  return 0xFFFFFFFFLL;
}

uint64_t cnnavigation::SphericalHarmonicsIonosphereModel::GetIonosphericDelay(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, double *a5, _OWORD *a6, long double a7, double a8)
{
  long long v11 = *(_OWORD *)a3;
  uint64_t v12 = *(void *)(a3 + 16);
  long long v9 = *(_OWORD *)a4;
  uint64_t v10 = *(void *)(a4 + 16);
  return cnnavigation::SphericalHarmonicsIonosphereModel::GetIonosphericDelay(a1, a7, a8, a2, &v11, &v9, a5, 1, a6);
}

uint64_t cnnavigation::SphericalHarmonicsIonosphereModel::GetIonosphericDelay(void *a1, uint64_t a2, long long *a3, long long *a4, double *a5, long double a6, double a7)
{
  return cnnavigation::SphericalHarmonicsIonosphereModel::GetIonosphericDelay(a1, a6, a7, a2, a3, a4, a5, 0, v8);
}

uint64_t cnnavigation::SphericalHarmonicsIonosphereModel::UpdateParameters(cnnavigation::SphericalHarmonicsIonosphereModel *this, const cnnavigation::SphericalHarmonicsIonosphereParameters *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (!*((unsigned char *)a2 + 8248))
  {
    LOWORD(v70) = 5;
    unsigned __int8 v73 = 4;
    cnprint::CNPrinter::Print((cnprint::CNPrinter *)&v70, &v73, "#shiono,UpdateParameters,parameters object is not valid", a4, a5, a6, a7, a8, v69);
    return 0xFFFFFFFFLL;
  }
  int8x8_t v10 = *(int8x8_t *)((char *)this + 16);
  if (!*(void *)&v10) {
    goto LABEL_19;
  }
  unint64_t v11 = *((unsigned int *)a2 + 8);
  uint8x8_t v12 = (uint8x8_t)vcnt_s8(v10);
  v12.i16[0] = vaddlv_u8(v12);
  if (v12.u32[0] > 1uLL)
  {
    unint64_t v13 = *((unsigned int *)a2 + 8);
    if (*(void *)&v10 <= v11) {
      unint64_t v13 = v11 % *(void *)&v10;
    }
  }
  else
  {
    unint64_t v13 = (v10.i32[0] - 1) & v11;
  }
  uint64_t v15 = *(uint64_t ***)(*((void *)this + 1) + 8 * v13);
  if (!v15 || (uint64_t v16 = *v15) == 0)
  {
LABEL_19:
    bzero(v72, 0x809uLL);
    unint64_t v18 = (unint64_t)operator new(0x2058uLL);
    *(void *)(v18 + 8) = 0;
    *(void *)(v18 + 16) = 0;
    *(void *)unint64_t v18 = &unk_1EDD1E490;
    memcpy((void *)(v18 + 24), a2, 0x2040uLL);
    unint64_t v70 = (void *)(v18 + 24);
    unint64_t v71 = (std::__shared_weak_count *)v18;
    if (cnnavigation::SphericalHarmonicsIonosphereModel::ParametersAndLegendreNormalizations::ComputeLegendreNormalizations((cnnavigation::SphericalHarmonicsIonosphereModel::ParametersAndLegendreNormalizations *)&v70, v19, v20, v21, v22, v23, v24, v25))
    {
      uint64_t v14 = 0xFFFFFFFFLL;
      double v26 = v71;
      if (v71) {
LABEL_21:
      }
        sub_18DEE4E18(v26);
      return v14;
    }
    unint64_t v28 = *((unsigned int *)a2 + 8);
    unint64_t v29 = *((void *)this + 2);
    if (v29)
    {
      uint8x8_t v30 = (uint8x8_t)vcnt_s8((int8x8_t)v29);
      v30.i16[0] = vaddlv_u8(v30);
      if (v30.u32[0] > 1uLL)
      {
        unint64_t v18 = *((unsigned int *)a2 + 8);
        if (v29 <= v28) {
          unint64_t v18 = v28 % v29;
        }
      }
      else
      {
        unint64_t v18 = (v29 - 1) & v28;
      }
      double v31 = *(void ***)(*((void *)this + 1) + 8 * v18);
      if (v31)
      {
        __double2 v32 = (char *)*v31;
        if (*v31)
        {
          do
          {
            unint64_t v33 = *((void *)v32 + 1);
            if (v33 == v28)
            {
              if (*((_DWORD *)v32 + 4) == v28) {
                goto LABEL_101;
              }
            }
            else
            {
              if (v30.u32[0] > 1uLL)
              {
                if (v33 >= v29) {
                  v33 %= v29;
                }
              }
              else
              {
                v33 &= v29 - 1;
              }
              if (v33 != v18) {
                break;
              }
            }
            __double2 v32 = *(char **)v32;
          }
          while (v32);
        }
      }
    }
    __double2 v32 = (char *)operator new(0x838uLL);
    unint64_t v34 = (void *)((char *)this + 24);
    *(void *)__double2 v32 = 0;
    *((void *)v32 + 1) = v28;
    *((_DWORD *)v32 + 4) = v28;
    bzero(v32 + 24, 0x820uLL);
    float v35 = (float)(unint64_t)(*((void *)this + 4) + 1);
    float v36 = *((float *)this + 10);
    if (v29 && (float)(v36 * (float)v29) >= v35)
    {
      unint64_t v28 = v18;
      goto LABEL_91;
    }
    BOOL v37 = 1;
    if (v29 >= 3) {
      BOOL v37 = (v29 & (v29 - 1)) != 0;
    }
    unint64_t v38 = v37 | (2 * v29);
    unint64_t v39 = vcvtps_u32_f32(v35 / v36);
    if (v38 <= v39) {
      int8x8_t prime = (int8x8_t)v39;
    }
    else {
      int8x8_t prime = (int8x8_t)v38;
    }
    if (*(void *)&prime == 1)
    {
      int8x8_t prime = (int8x8_t)2;
    }
    else if ((*(void *)&prime & (*(void *)&prime - 1)) != 0)
    {
      int8x8_t prime = (int8x8_t)std::__next_prime(*(void *)&prime);
      unint64_t v29 = *((void *)this + 2);
    }
    if (*(void *)&prime <= v29)
    {
      if (*(void *)&prime >= v29) {
        goto LABEL_87;
      }
      unint64_t v47 = vcvtps_u32_f32((float)*((unint64_t *)this + 4) / *((float *)this + 10));
      if (v29 < 3 || (uint8x8_t v48 = (uint8x8_t)vcnt_s8((int8x8_t)v29), v48.i16[0] = vaddlv_u8(v48), v48.u32[0] > 1uLL))
      {
        unint64_t v47 = std::__next_prime(v47);
      }
      else
      {
        uint64_t v49 = 1 << -(char)__clz(v47 - 1);
        if (v47 >= 2) {
          unint64_t v47 = v49;
        }
      }
      if (*(void *)&prime <= v47) {
        int8x8_t prime = (int8x8_t)v47;
      }
      if (*(void *)&prime >= v29)
      {
        unint64_t v29 = *((void *)this + 2);
        goto LABEL_87;
      }
      if (!*(void *)&prime)
      {
        double v68 = (void *)*((void *)this + 1);
        *((void *)this + 1) = 0;
        if (v68) {
          operator delete(v68);
        }
        unint64_t v29 = 0;
        *((void *)this + 2) = 0;
        goto LABEL_87;
      }
    }
    if (*(void *)&prime >> 61) {
      sub_18DEDF7D4();
    }
    double v41 = operator new(8 * *(void *)&prime);
    uint64_t v42 = (void *)*((void *)this + 1);
    *((void *)this + 1) = v41;
    if (v42) {
      operator delete(v42);
    }
    uint64_t v43 = 0;
    *((int8x8_t *)this + 2) = prime;
    do
      *(void *)(*((void *)this + 1) + 8 * v43++) = 0;
    while (*(void *)&prime != v43);
    uint64_t v44 = (void *)*v34;
    if (*v34)
    {
      unint64_t v45 = v44[1];
      uint8x8_t v46 = (uint8x8_t)vcnt_s8(prime);
      v46.i16[0] = vaddlv_u8(v46);
      if (v46.u32[0] > 1uLL)
      {
        if (v45 >= *(void *)&prime) {
          v45 %= *(void *)&prime;
        }
      }
      else
      {
        v45 &= *(void *)&prime - 1;
      }
      *(void *)(*((void *)this + 1) + 8 * v45) = v34;
      double v60 = (void *)*v44;
      if (*v44)
      {
        do
        {
          unint64_t v61 = v60[1];
          if (v46.u32[0] > 1uLL)
          {
            if (v61 >= *(void *)&prime) {
              v61 %= *(void *)&prime;
            }
          }
          else
          {
            v61 &= *(void *)&prime - 1;
          }
          if (v61 != v45)
          {
            uint64_t v62 = *((void *)this + 1);
            if (!*(void *)(v62 + 8 * v61))
            {
              *(void *)(v62 + 8 * v61) = v44;
              goto LABEL_83;
            }
            void *v44 = *v60;
            void *v60 = **(void **)(*((void *)this + 1) + 8 * v61);
            **(void **)(*((void *)this + 1) + 8 * v61) = v60;
            double v60 = v44;
          }
          unint64_t v61 = v45;
LABEL_83:
          uint64_t v44 = v60;
          double v60 = (void *)*v60;
          unint64_t v45 = v61;
        }
        while (v60);
      }
    }
    unint64_t v29 = (unint64_t)prime;
LABEL_87:
    if ((v29 & (v29 - 1)) != 0)
    {
      if (v29 <= v28) {
        v28 %= v29;
      }
    }
    else
    {
      unint64_t v28 = (v29 - 1) & v28;
    }
LABEL_91:
    uint64_t v63 = *((void *)this + 1);
    double v64 = *(void **)(v63 + 8 * v28);
    if (v64)
    {
      *(void *)__double2 v32 = *v64;
    }
    else
    {
      *(void *)__double2 v32 = *v34;
      void *v34 = v32;
      *(void *)(v63 + 8 * v28) = v34;
      if (!*(void *)v32)
      {
LABEL_100:
        ++*((void *)this + 4);
LABEL_101:
        double v66 = v70;
        double v26 = v71;
        if (v71) {
          atomic_fetch_add_explicit(&v71->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        double v67 = (std::__shared_weak_count *)*((void *)v32 + 4);
        *((void *)v32 + 3) = v66;
        *((void *)v32 + 4) = v26;
        if (v67) {
          sub_18DEE4E18(v67);
        }
        memcpy(v32 + 40, v72, 0x809uLL);
        uint64_t v14 = 0;
        if (!v26) {
          return v14;
        }
        goto LABEL_21;
      }
      unint64_t v65 = *(void *)(*(void *)v32 + 8);
      if ((v29 & (v29 - 1)) != 0)
      {
        if (v65 >= v29) {
          v65 %= v29;
        }
      }
      else
      {
        v65 &= v29 - 1;
      }
      double v64 = (void *)(*((void *)this + 1) + 8 * v65);
    }
    *double v64 = v32;
    goto LABEL_100;
  }
  while (1)
  {
    unint64_t v17 = v16[1];
    if (v17 == v11) {
      break;
    }
    if (v12.u32[0] > 1uLL)
    {
      if (v17 >= *(void *)&v10) {
        v17 %= *(void *)&v10;
      }
    }
    else
    {
      v17 &= *(void *)&v10 - 1;
    }
    if (v17 != v13) {
      goto LABEL_19;
    }
LABEL_18:
    uint64_t v16 = (uint64_t *)*v16;
    if (!v16) {
      goto LABEL_19;
    }
  }
  if (*((_DWORD *)v16 + 4) != v11) {
    goto LABEL_18;
  }
  uint64_t v50 = operator new(0x2058uLL);
  v50[1] = 0;
  v50[2] = 0;
  *uint64_t v50 = &unk_1EDD1E490;
  memcpy(v50 + 3, a2, 0x2040uLL);
  v16[3] = (uint64_t)(v50 + 3);
  double v58 = (cnnavigation::SphericalHarmonicsIonosphereModel::ParametersAndLegendreNormalizations *)(v16 + 3);
  double v59 = (std::__shared_weak_count *)*((void *)v58 + 1);
  *((void *)v58 + 1) = v50;
  if (v59) {
    sub_18DEE4E18(v59);
  }

  return cnnavigation::SphericalHarmonicsIonosphereModel::ParametersAndLegendreNormalizations::ComputeLegendreNormalizations(v58, v51, v52, v53, v54, v55, v56, v57);
}

void sub_18DEF80D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11)
{
  sub_18DEF86C0(1, v11);
  if (a11) {
    sub_18DEE4E18(a11);
  }
  _Unwind_Resume(a1);
}

uint64_t cnnavigation::SphericalHarmonicsIonosphereModel::ParametersAndLegendreNormalizations::ComputeLegendreNormalizations(cnnavigation::SphericalHarmonicsIonosphereModel::ParametersAndLegendreNormalizations *this, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8 = *(void *)this;
  if (*(void *)this && *(unsigned char *)(v8 + 8248))
  {
    if (!*((unsigned char *)this + 2072)) {
      goto LABEL_11;
    }
    int v10 = *((_DWORD *)this + 4);
    if (v10)
    {
      int v11 = *((_DWORD *)this + 5);
      if (v11)
      {
        if (*(_DWORD *)v8 == v10 && *(_DWORD *)(v8 + 4) == v11) {
          return 0;
        }
        __int16 v32 = 5;
        unsigned __int8 v31 = 2;
        cnprint::CNPrinter::Print((cnprint::CNPrinter *)&v32, &v31, "#shiono,ComputeLegendreNormalizations,layer_num,%u,re-computing normalizations,old_N,%u,old_M,%u,new_N,%u,new_M,%u", a4, a5, a6, a7, a8, *(_DWORD *)(v8 + 32));
        uint64_t v8 = *(void *)this;
LABEL_11:
        int v28 = *(void *)v8;
        *((void *)this + 2) = *(void *)v8;
        for (uint64_t i = 24; i != 2072; i += 128)
          memset_pattern16((char *)this + i, &unk_18E1F02A0, 0x80uLL);
        uint64_t v15 = 0;
        unsigned int v16 = 1;
        do
        {
          unint64_t v17 = (double *)((char *)this + 128 * v15 + 24);
          *unint64_t v17 = sqrt((double)v15 * 2.0 + 1.0);
          if (v15)
          {
            if (v16 <= 2) {
              uint64_t v18 = 2;
            }
            else {
              uint64_t v18 = v16;
            }
            for (uint64_t j = 1; j != v18; ++j)
            {
              unsigned int v20 = v15 - j + 1;
              double v21 = 1.0;
              while (v20 <= (int)j + (int)v15)
                double v21 = v21 * (double)v20++;
              v17[j] = sqrt(((double)v15 * 4.0 + 2.0) / v21);
            }
          }
          ++v15;
          ++v16;
        }
        while (v28 + 1 != v15);
        *((unsigned char *)this + 2072) = 1;
        if (cnprint::CNPrinter::GetLogLevel(v14) < 2)
        {
          __int16 v30 = 5;
          unsigned __int8 v29 = 1;
          cnprint::CNPrinter::Print((cnprint::CNPrinter *)&v30, &v29, "#shiono,ComputeLegendreNormalizations,layer_num,%u,computed normalizations,N,%u,M,%u", v22, v23, v24, v25, v26, *(_DWORD *)(*(void *)this + 32));
        }
        return 0;
      }
    }
    __int16 v34 = 5;
    unsigned __int8 v33 = 4;
    cnprint::CNPrinter::Print((cnprint::CNPrinter *)&v34, &v33, "#shiono,ComputeLegendreNormalizations,layer_num,%u,unknown state: normalizations initialized with degree and order set to zero", a4, a5, a6, a7, a8, *(_DWORD *)(v8 + 32));
    *((unsigned char *)this + 2072) = 0;
  }
  return 0xFFFFFFFFLL;
}

uint64_t cnnavigation::SphericalHarmonicsIonosphereModel::SetDataAgeThreshold(cnnavigation::SphericalHarmonicsIonosphereModel *this, const CNTimeSpan *a2)
{
  v9[0] = 0.0;
  v9[1] = 0.0;
  if (sub_18DEE4CB8((double *)a2, v9)) {
    return 0xFFFFFFFFLL;
  }
  double v4 = *((double *)a2 + 1) + (double)*(uint64_t *)a2;
  double v5 = fabs(v4);
  BOOL v6 = (unint64_t)(*(void *)&v5 - 0x10000000000000) >> 53 >= 0x3FF
    && (unint64_t)(*(void *)&v5 - 1) >= 0xFFFFFFFFFFFFFLL;
  if (v6 && *(void *)&v4 != 0) {
    return 0xFFFFFFFFLL;
  }
  uint64_t result = 0;
  *((_OWORD *)this + 3) = *(_OWORD *)a2;
  return result;
}

uint64_t cnnavigation::SphericalHarmonicsIonosphereModel::GetDataAgeThreshold(cnnavigation::SphericalHarmonicsIonosphereModel *this)
{
  return *((void *)this + 6);
}

uint64_t cnnavigation::SphericalHarmonicsIonosphereModel::GetApplicabilityTime(cnnavigation::SphericalHarmonicsIonosphereModel *this)
{
  if (!(*(unsigned int (**)(cnnavigation::SphericalHarmonicsIonosphereModel *))(*(void *)this + 32))(this)) {
    return 0;
  }
  int v2 = (void *)*((void *)this + 3);
  if (!v2) {
    return 0;
  }
  while (1)
  {
    uint64_t v3 = v2[3];
    if (v3)
    {
      if (*(unsigned char *)(v3 + 8248)) {
        break;
      }
    }
    int v2 = (void *)*v2;
    if (!v2) {
      return 0;
    }
  }
  return *(void *)(v3 + 16);
}

BOOL cnnavigation::SphericalHarmonicsIonosphereModel::IsValid(cnnavigation::SphericalHarmonicsIonosphereModel *this)
{
  if (!*((void *)this + 4)) {
    return 0;
  }
  int v1 = (void *)((char *)this + 24);
  do
  {
    int v1 = (void *)*v1;
    BOOL result = v1 == 0;
    if (!v1) {
      break;
    }
    uint64_t v3 = v1[3];
    if (!v3) {
      break;
    }
  }
  while (*(unsigned char *)(v3 + 8248));
  return result;
}

uint64_t cnnavigation::SphericalHarmonicsIonosphereModel::IsValid(cnnavigation::SphericalHarmonicsIonosphereModel *this, const cnnavigation::TAITime *a2)
{
  uint64_t result = (*(uint64_t (**)(cnnavigation::SphericalHarmonicsIonosphereModel *))(*(void *)this + 32))(this);
  if (result)
  {
    uint64_t ApplicabilityTime = cnnavigation::SphericalHarmonicsIonosphereModel::GetApplicabilityTime(this);
    double v13 = v5;
    uint64_t v8 = CNTimeSpan::operator-((uint64_t)a2, &ApplicabilityTime, v6, v7);
    *(void *)&v14[0] = v8;
    v14[1] = v9;
    if (v8 < 0 || (*(double *)v10.i64 = v9, v9 < 0.0)) {
      uint64_t v8 = CNTimeSpan::operator-(v14, v10, v11);
    }
    uint64_t ApplicabilityTime = v8;
    double v13 = v9;
    return sub_18DEE8C5C((double *)&ApplicabilityTime, (double *)this + 6);
  }
  return result;
}

void *sub_18DEF84E0(void *a1)
{
  *a1 = &unk_1EDD0B110;
  sub_18DEF85C0((uint64_t)(a1 + 1));
  *a1 = &unk_1EDD0AA58;
  return a1;
}

void sub_18DEF8540(void *a1)
{
  *a1 = &unk_1EDD0B110;
  sub_18DEF85C0((uint64_t)(a1 + 1));
  *a1 = &unk_1EDD0AA58;

  JUMPOUT(0x192FA6240);
}

uint64_t sub_18DEF85C0(uint64_t a1)
{
  sub_18DEF85FC(a1, *(void **)(a1 + 16));
  int v2 = *(void **)a1;
  *(void *)a1 = 0;
  if (v2) {
    operator delete(v2);
  }
  return a1;
}

void sub_18DEF85FC(int a1, void *__p)
{
  if (__p)
  {
    int v2 = __p;
    do
    {
      uint64_t v3 = (void *)*v2;
      double v4 = (std::__shared_weak_count *)v2[4];
      if (v4) {
        sub_18DEE4E18(v4);
      }
      operator delete(v2);
      int v2 = v3;
    }
    while (v3);
  }
}

void sub_18DEF8644(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1EDD1E490;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_18DEF8664(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1EDD1E490;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x192FA6240);
}

void sub_18DEF86C0(char a1, void *__p)
{
  if (a1)
  {
    uint64_t v3 = (std::__shared_weak_count *)__p[4];
    if (v3) {
      sub_18DEE4E18(v3);
    }
  }
  else if (!__p)
  {
    return;
  }

  operator delete(__p);
}

uint64_t cnnavigation::WGS84GravityModel::ComputeWGS84GravityModel(uint64_t a1, float64x2_t *a2, int a3, int a4, double *a5, float64x2_t *a6, uint64_t a7)
{
  float64x2_t v7 = *a2;
  double v8 = a2[1].f64[0];
  double v9 = a2->f64[1];
  double v10 = sqrt(vmlad_n_f64(vmuld_lane_f64(v9, *a2, 1), v7.f64[0], v7.f64[0]) + v8 * v8);
  if (v10 <= 0.00000001) {
    return 0xFFFFFFFFLL;
  }
  double v11 = 6378137.0 / v10;
  _D0 = v8 / v10;
  *a5 = -3.98600442e14 / v10
      + 6378137.0 / v10 * (6378137.0 / v10 * (3.98600442e14 / v10 * 0.000541314911)) * (_D0 * 3.0 * _D0 + -1.0);
  double v13 = -(3.98600442e14 / v10);
  if (a3)
  {
    double v14 = v11 * (v11 * 0.00162394473);
    *a6 = vmulq_n_f64(vdivq_f64(v7, (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v10, 0)), v13 / v10 * (v14 * (_D0 * -5.0 * _D0 + 1.0) + 1.0));
    a6[1].f64[0] = _D0 * (v13 / v10 * (v14 * (_D0 * -5.0 * _D0 + 3.0) + 1.0));
  }
  uint64_t result = 0;
  if (a4)
  {
    double v16 = v7.f64[0] / v10;
    _D3 = v9 / v10;
    double v18 = 3.98600442e14 / (v10 * (v10 * v10));
    double v19 = -v18;
    double v20 = v11 * (v11 * 0.0568380656);
    double v21 = v13 / v10 * (v11 * (v11 * 0.00162394473) * (_D0 * -5.0 * _D0 + 1.0) + 1.0) / v10;
    double v22 = v11 * (v11 * 0.0162394473);
    double v23 = v18 * (_D0 * (v16 * v22));
    *(double *)&unint64_t v24 = v18 * (_D0 * (_D3 * v22));
    float64x2_t v25 = vmulq_n_f64(vmulq_n_f64((float64x2_t)xmmword_18E1F02E0, v11), v11);
    double v26 = -(v18 * (v16 * v25.f64[0] + v16 * -3.0 + _D0 * (v16 * v20) * _D0));
    v27.f64[0] = _D3;
    v27.f64[1] = _D0;
    __asm { FMOV            V18.2D, #-3.0 }
    float64x2_t v33 = vmlaq_f64(vmulq_f64(v27, v25), _Q18, v27);
    _Q16 = vmulq_n_f64(v27, v20);
    *(void *)&v35.f64[0] = vdupq_lane_s64(*(uint64_t *)&_D0, 0).u64[0];
    _Q2 = vmulq_n_f64(vmlaq_n_f64(v33, vmulq_n_f64(_Q16, _D0), _D0), v19);
    *(double *)a7 = v21 + v26 * v16;
    *(double *)(a7 + 8) = v26 * _D3 + 0.0;
    *(double *)(a7 + 16) = v23 + v26 * _D0;
    *(double *)(a7 + 24) = vmlad_n_f64(0.0, v16, _Q2.f64[0]);
    *(double *)(a7 + 32) = vmlad_n_f64(v21, _D3, _Q2.f64[0]);
    v35.f64[1] = v16;
    *(float64x2_t *)(a7 + 40) = vmlaq_f64((float64x2_t)v24, v35, _Q2);
    __asm
    {
      FMLA            D16, D3, V2.D[1]
      FMLA            D19, D0, V2.D[1]
    }
    *(float64_t *)(a7 + 56) = _Q16.f64[0];
    *(void *)(a7 + 64) = _D19;
  }
  return result;
}

uint64_t cnnavigation::WGS84GravityModel::GetGravitationalPotential(cnnavigation::WGS84GravityModel *this, const double *a2, double *a3)
{
  double v3 = a2[2];
  double v4 = sqrt(a2[1] * a2[1] + *a2 * *a2 + v3 * v3);
  if (v4 <= 0.00000001) {
    return 0xFFFFFFFFLL;
  }
  uint64_t result = 0;
  *a3 = -3.98600442e14 / v4
      + 6378137.0 / v4 * (6378137.0 / v4 * (3.98600442e14 / v4 * 0.000541314911)) * (v3 / v4 * 3.0 * (v3 / v4) + -1.0);
  return result;
}

uint64_t cnnavigation::WGS84GravityModel::GetGravitationalPotential(cnnavigation::WGS84GravityModel *this, float64x2_t *a2, double *a3, float64x2_t *a4)
{
  return cnnavigation::WGS84GravityModel::ComputeWGS84GravityModel((uint64_t)this, a2, 1, 0, a3, a4, (uint64_t)v5);
}

uint64_t cnnavigation::WGS84GravityModel::GetGravitationalPotential(uint64_t a1, float64x2_t *a2, double *a3, float64x2_t *a4, uint64_t a5)
{
  return cnnavigation::WGS84GravityModel::ComputeWGS84GravityModel(a1, a2, 1, 1, a3, a4, a5);
}

uint64_t cnnavigation::WGS84GravityModel::GetGravitationalAcceleration(cnnavigation::WGS84GravityModel *this, float64x2_t *a2, float64x2_t *a3)
{
  return cnnavigation::WGS84GravityModel::ComputeWGS84GravityModel((uint64_t)this, a2, 1, 0, &v5, a3, (uint64_t)&v4);
}

uint64_t cnnavigation::WGS84GravityModel::GetGravitationalAcceleration(uint64_t a1, float64x2_t *a2, float64x2_t *a3, uint64_t a4)
{
  return cnnavigation::WGS84GravityModel::ComputeWGS84GravityModel(a1, a2, 1, 1, &v5, a3, a4);
}

void *sub_18DEF8A78(void *result)
{
  *uint64_t result = &unk_1EDD0A858;
  return result;
}

void sub_18DEF8A98(void *a1)
{
  *a1 = &unk_1EDD0A858;
  JUMPOUT(0x192FA6240);
}

uint64_t sub_18DEF8AC8()
{
  return 1;
}

double cnnavigation::GPSEphemerides::GpsUserRangeAccuracyFromURANED_EDValue(cnnavigation::GPSEphemerides *this)
{
  if ((this + 15) <= 0x14) {
    return exp2((double)(int)this * 0.5 + 1.0);
  }
  if ((this - 6) > 8) {
    return NAN;
  }
  return ldexp(1.0, (int)this - 2);
}

uint64_t cnnavigation::GPSEphemerides::GNSSFindSat(uint64_t a1, cnnavigation::TAITime *this, cnnavigation::GNSSUTCParameters *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v29 = *MEMORY[0x1E4F143B8];
  int v11 = cnnavigation::TAITime::ToGPSTime(this, a3);
  uint64_t result = cnnavigation::GPSFindSat(v11, a1, (double *)&v27, (double *)&v25, (double *)&v23, v12);
  if (!result)
  {
    uint64_t v14 = 0;
    uint64_t v15 = v28;
    *(_OWORD *)a4 = v27;
    *(void *)(a4 + 16) = v15;
    uint64_t v16 = v26;
    *(_OWORD *)a5 = v25;
    *(void *)(a5 + 16) = v16;
    uint64_t v17 = v24;
    *(_OWORD *)a6 = v23;
    double v18 = 0.0;
    *(void *)(a6 + 16) = v17;
    do
    {
      double v18 = v18 + *(double *)(a4 + v14) * *(double *)(a4 + v14);
      v14 += 8;
    }
    while (v14 != 24);
    if (sqrt(v18) >= 6341752.3)
    {
      BOOL IsValid = cnnavigation::GNSSUTCParameters::IsValid(a3);
      uint64_t result = 0;
      if (IsValid && *((unsigned char *)a3 + 1) == 1)
      {
        uint64_t v20 = 0;
        double v21 = 1.0 / (1.0 - *((double *)a3 + 2));
        do
        {
          *(double *)(a5 + v20) = v21 * *(double *)(a5 + v20);
          v20 += 8;
        }
        while (v20 != 24);
        for (uint64_t i = 0; i != 24; i += 8)
          *(double *)(a6 + i) = v21 * *(double *)(a6 + i);
        return 0;
      }
    }
    else
    {
      return 0xFFFFFFFFLL;
    }
  }
  return result;
}

uint64_t cnnavigation::GPSEphemerides::GNSSSatelliteClockOffset(uint64_t a1, cnnavigation::TAITime *this, cnnavigation::GNSSUTCParameters *a3, double *a4, int a5, double *a6, double a7)
{
  int v13 = cnnavigation::TAITime::ToGPSTime(this, a3);
  double v15 = v14;
  double v32 = 0.0;
  uint64_t v16 = cnnavigation::GPSSatelliteClockOffset(v13, a1, &v32, a5, (uint64_t)v31, v14, a7);
  if (!v16)
  {
    if (cnnavigation::GNSSUTCParameters::IsValid(a3) && *((unsigned char *)a3 + 1) == 1)
    {
      v30[0] = 0;
      v30[1] = 0;
      *(double *)v18.i64 = v15;
      CNTimeSpan::SetTimeSpan(v30, 604800 * v13, v18, v19);
      double v20 = *((double *)a3 + 1);
      double v21 = *((double *)a3 + 2);
      uint64_t v24 = CNTimeSpan::operator-((uint64_t)v30, (void *)a3 + 3, v22, v23);
      *a4 = v32 - (v20 + v21 * (v25 + (double)v24));
      if (a5)
      {
        double v26 = *((double *)a3 + 2);
        double v27 = 1.0 / (1.0 - v26);
        double v28 = (v31[0] - v26) * v27;
        double v29 = v31[1] / v27;
        *a6 = v28;
        a6[1] = v29;
      }
    }
    else
    {
      *a4 = v32;
      if (a5) {
        *(_OWORD *)a6 = *(_OWORD *)v31;
      }
    }
  }
  return v16;
}

uint64_t cnnavigation::GPSEphemerides::GNSSSatelliteClockOffsetRate(uint64_t a1, cnnavigation::TAITime *this, cnnavigation::GNSSUTCParameters *a3, double *a4, int a5, double *a6)
{
  int v11 = cnnavigation::TAITime::ToGPSTime(this, a3);
  double v20 = 0.0;
  uint64_t v13 = cnnavigation::GPSSatelliteClockOffsetRate(v11, a1, &v20, a5, (uint64_t)v19, v12);
  if (!v13)
  {
    if (cnnavigation::GNSSUTCParameters::IsValid(a3) && *((unsigned char *)a3 + 1) == 1)
    {
      double v14 = *((double *)a3 + 2);
      double v15 = 1.0 / (1.0 - v14);
      *a4 = (v20 - v14) * v15;
      if (a5)
      {
        double v16 = v15 * v15 * v19[0];
LABEL_8:
        double v17 = v19[1];
        *a6 = v16;
        a6[1] = v17;
      }
    }
    else
    {
      *a4 = v20;
      if (a5)
      {
        double v16 = v19[0];
        goto LABEL_8;
      }
    }
  }
  return v13;
}

void *sub_18DEF8EAC(void *result)
{
  *uint64_t result = &unk_1EDD0A9B8;
  return result;
}

void sub_18DEF8ECC(void *a1)
{
  *a1 = &unk_1EDD0A9B8;
  JUMPOUT(0x192FA6240);
}

uint64_t cnnavigation::GNSSTimeOfFlight(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t *a5, double *a6, int8x16_t a7)
{
  __int16 v9 = 0;
  long long v10 = 0u;
  long long v11 = 0u;
  int v12 = 0;
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  int v15 = 0;
  return cnnavigation::GNSSTimeOfFlight(a1, (uint64_t)&v9, a2, a3, 1, a4, 1, a5, a7, (int8x16_t)0, a6, 0, (uint64_t)v8);
}

uint64_t cnnavigation::GNSSTimeOfFlight(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t *a6, int a7, uint64_t *a8, int8x16_t a9, int8x16_t a10, double *a11, unsigned __int8 a12, uint64_t a13)
{
  v168[3] = *MEMORY[0x1E4F143B8];
  if (*(double *)a9.i64 > 0.0 && (a9.i64[0] & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL)
  {
    uint64_t v20 = 0;
    int v21 = a12;
    while ((*(void *)(a3 + v20) & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000)
    {
      v20 += 8;
      if (v20 == 24)
      {
        double v23 = *(double *)(a3 + 8);
        double v24 = *(double *)(a3 + 16);
        v168[0] = *(void *)a3;
        double v22 = *(double *)v168;
        *(double *)&v168[1] = v23;
        *(double *)&v168[2] = v24;
        double v25 = sqrt(v23 * v23 + v22 * v22 + v24 * v24);
        if (v25 < 6341752.3) {
          return 0xFFFFFFFFLL;
        }
        double v119 = *(double *)a9.i64;
        *a11 = 0.0;
        double v27 = 0.0;
        int v28 = 11;
        double v29 = INFINITY;
        a10.i64[0] = 0x3F131DA7D7CB8D5BLL;
        double v131 = v25;
        double v128 = v23;
        double v129 = v22;
        while (1)
        {
          double v30 = vabdd_f64(v27, v29);
          int v31 = v30 < 3.33564095e-13 ? v21 : 0;
          if (v31 == 1)
          {
            double v165 = 0.0;
            double v166 = 0.0;
            *(double *)a9.i64 = v27;
            CNTimeSpan::SetTimeSpan((uint64_t *)&v165, 0, a9, a10);
            *(void *)&v153.f64[0] = CNTimeSpan::operator-(a1, &v165, v32, v33);
            v153.f64[1] = v34;
            uint64_t result = (*(uint64_t (**)(uint64_t, float64x2_t *, uint64_t, double *, double *, long long *))(*(void *)a4 + 56))(a4, &v153, a2, &v146, &v143, &v149);
          }
          else
          {
            float64x2_t v163 = 0uLL;
            *(double *)a9.i64 = v27;
            CNTimeSpan::SetTimeSpan((uint64_t *)&v163, 0, a9, a10);
            double v165 = COERCE_DOUBLE(CNTimeSpan::operator-(a1, &v163, v35, v36));
            double v166 = v37;
            uint64_t result = (*(uint64_t (**)(uint64_t, double *, uint64_t, double *, long long *, float64x2_t *))(*(void *)a4 + 56))(a4, &v165, a2, &v146, &v149, &v153);
          }
          if (result) {
            break;
          }
          double v38 = *a11;
          __double2 v39 = __sincos_stret(*a11 * 0.0000729211515);
          double v40 = v39.__sinval * v147 + v39.__cosval * v146;
          double v41 = v39.__cosval * v147 - v39.__sinval * v146;
          double v165 = v40;
          double v166 = v41;
          double v167 = v148;
          double v42 = v40 - v22;
          double v43 = v41 - v23;
          double v44 = v148 - v24;
          double v45 = sqrt(v43 * v43 + v42 * v42 + v44 * v44);
          double v46 = (v25 / v45 - (v23 * (v41 / v45) + v22 * (v40 / v45) + v24 * (v148 / v45))) / v45;
          float64x2_t v153 = 0uLL;
          double v134 = v30;
          double v136 = v45;
          double v121 = v148 - v24;
          double v123 = v41 - v23;
          double v124 = v40 - v22;
          double v133 = v38;
          if (v46 >= 0.0)
          {
            if (v46 <= 1.0)
            {
              v137.f64[0] = *(double *)a3 + v46 * v42;
              v137.f64[1] = *(double *)(a3 + 8) + v46 * v43;
              float64x2_t v153 = v137;
              double v47 = *(double *)(a3 + 16) + v46 * v44;
            }
            else
            {
              v153.f64[0] = v39.__sinval * v147 + v39.__cosval * v146;
              v153.f64[1] = v39.__cosval * v147 - v39.__sinval * v146;
              float64x2_t v137 = v153;
              double v47 = v148;
            }
          }
          else
          {
            v153.f64[0] = v22;
            v153.f64[1] = v23;
            v137.f64[0] = v22;
            v137.f64[1] = v23;
            double v47 = v24;
          }
          double v48 = sqrt(v41 * v41 + v40 * v40 + v148 * v148);
          *(double *)v154.i64 = v47;
          double v140 = v48;
          BOOL v49 = v48 <= v25;
          double v122 = v39.__sinval * v147 + v39.__cosval * v146;
          if (v48 <= v25) {
            double v50 = v22;
          }
          else {
            double v50 = v39.__sinval * v147 + v39.__cosval * v146;
          }
          if (v48 <= v25) {
            double v51 = v23;
          }
          else {
            double v51 = v39.__cosval * v147 - v39.__sinval * v146;
          }
          v163.f64[0] = v50;
          v163.f64[1] = v51;
          double v52 = v24;
          if (!v49) {
            double v24 = v148;
          }
          double v164 = v24;
          uint64_t v160 = 0;
          uint64_t v161 = 0;
          double v157 = 0.0;
          double v158 = 0.0;
          double v159 = 0.0;
          uint64_t result = cnnavigation::ECEFToLLA(&v153, 1, (double *)&v160, 0, (uint64_t)&v149);
          if (result) {
            break;
          }
          uint64_t v162 = 0;
          uint64_t result = cnnavigation::LLAToECEF((double *)&v160, 1, &v157, 0, (uint64_t)&v149);
          if (result) {
            break;
          }
          double v120 = v41;
          double v53 = v157;
          double v54 = v158;
          double v55 = v159;
          uint64_t result = cnnavigation::ECEFToLLA(&v163, 1, (double *)&v160, 0, (uint64_t)&v149);
          if (result) {
            break;
          }
          uint64_t v162 = 0;
          uint64_t result = cnnavigation::LLAToECEF((double *)&v160, 1, &v157, 0, (uint64_t)&v149);
          if (result) {
            break;
          }
          double v56 = sqrt(v137.f64[1] * v137.f64[1] + v137.f64[0] * v137.f64[0] + v47 * v47);
          double v57 = v56 - sqrt(v54 * v54 + v53 * v53 + v55 * v55);
          double v58 = sqrt(v51 * v51 + v50 * v50 + v24 * v24) - sqrt(v158 * v158 + v157 * v157 + v159 * v159);
          double v157 = 0.0;
          a10 = 0uLL;
          long long v151 = 0u;
          long long v152 = 0u;
          long long v149 = 0u;
          long long v150 = 0u;
          BOOL v60 = v57 < 350000.0 && a5 != 0;
          if (v58 <= 350000.0) {
            BOOL v60 = 0;
          }
          double v61 = 0.0;
          double v139 = 0.0;
          BOOL v138 = v60;
          double v24 = v52;
          double v25 = v131;
          if (v60)
          {
            BOOL v62 = v56 < v140;
            if (v56 >= v131) {
              BOOL v62 = 0;
            }
            uint64_t result = 0xFFFFFFFFLL;
            if (v140 < v131 || v62) {
              return result;
            }
            double v139 = (350000.0 - v57) / (v140 - v131);
            *(double *)a10.i64 = v133;
            *(double *)a9.i64 = v133 * v139;
            float64x2_t v163 = 0uLL;
            CNTimeSpan::SetTimeSpan((uint64_t *)&v163, 0, a9, a10);
            *(void *)&v153.f64[0] = CNTimeSpan::operator-(a1, &v163, v63, v64);
            v153.f64[1] = v65;
            uint64_t v66 = cnnavigation::TAITime::ToGPSTime((cnnavigation::TAITime *)&v153, (const cnnavigation::GNSSUTCParameters *)a2);
            v68.n128_u64[0] = v67;
            uint64_t v69 = *a6;
            uint64_t result = v31
                   ? (*(uint64_t (**)(uint64_t *, uint64_t, void *, double *, double *, long long *, __n128, double))(v69 + 24))(a6, v66, v168, &v165, &v157, &v149, v68, v119): (*(uint64_t (**)(uint64_t *, uint64_t, void *, double *, double *, __n128, double))(v69 + 16))(a6, v66, v168, &v165, &v157, v68, v119);
            a10 = 0uLL;
            if (result) {
              return result;
            }
            if (a5 == 2) {
              double v157 = -v157;
            }
          }
          double v142 = 0.0;
          double v156 = 0.0;
          int8x16_t v154 = a10;
          int8x16_t v155 = a10;
          float64x2_t v153 = (float64x2_t)a10;
          BOOL v71 = v57 < 8500.0 && a7 != 0;
          BOOL v72 = v58 > 8500.0 && v71;
          double v73 = 0.0;
          if (v72)
          {
            BOOL v74 = v56 < v140;
            if (v56 >= v131) {
              BOOL v74 = 0;
            }
            uint64_t result = 0xFFFFFFFFLL;
            if (v140 < v131 || v74) {
              return result;
            }
            *(double *)&unint64_t v75 = (8500.0 - v57) / (v140 - v131);
            *(double *)a9.i64 = *(double *)&v75 * *a11;
            uint64_t v160 = 0;
            uint64_t v161 = 0;
            CNTimeSpan::SetTimeSpan(&v160, 0, a9, (int8x16_t)v75);
            *(void *)&v163.f64[0] = CNTimeSpan::operator-(a1, &v160, v76, v77);
            v163.f64[1] = v78;
            uint64_t v79 = cnnavigation::TAITime::ToGPSTime((cnnavigation::TAITime *)&v163, (const cnnavigation::GNSSUTCParameters *)a2);
            v81.n128_u64[0] = v80;
            uint64_t v82 = *a8;
            uint64_t result = v31
                   ? (*(uint64_t (**)(uint64_t *, uint64_t, void *, double *, double *, float64x2_t *, __n128))(v82 + 24))(a8, v79, v168, &v165, &v142, &v153, v81): (*(uint64_t (**)(uint64_t *, uint64_t, void *, double *, double *, __n128))(v82 + 16))(a8, v79, v168, &v165, &v142, v81);
            if (result) {
              return result;
            }
            double v73 = (8500.0 - v57) / (v140 - v131);
            double v61 = v142;
          }
          double v29 = *a11;
          double v27 = v61 + v136 / 299792458.0 + v157;
          *a11 = v27;
          if (v31)
          {
            if (fabs(v136) <= 0.000000015)
            {
              *(void *)(a13 + 32) = 0;
              *(_OWORD *)a13 = 0u;
              *(_OWORD *)(a13 + 16) = 0u;
            }
            else
            {
              double v118 = v73;
              double v83 = v124 / v136;
              double v84 = v145;
              double v126 = (v39.__cosval * v147 + -v39.__sinval * v146) * 0.0000729211515;
              double v141 = v126 - v39.__cosval * v143 - v39.__sinval * v144;
              double v125 = (v147 * -v39.__sinval - v39.__cosval * v146) * 0.0000729211515;
              double v132 = v125 + v39.__sinval * v143 - v39.__cosval * v144;
              double v135 = v39.__sinval * v144 + v39.__cosval * v143;
              double v127 = v39.__cosval * v144 + -v39.__sinval * v143;
              BOOL IsValid = cnnavigation::GNSSUTCParameters::IsValid((cnnavigation::GNSSUTCParameters *)a2);
              double v86 = 1.0;
              if (IsValid)
              {
                int v87 = a7;
                double v88 = v121;
                double v89 = v122;
                BOOL v90 = v138;
                if (*(unsigned char *)(a2 + 1) == 1) {
                  double v86 = 1.0 / (1.0 - *(double *)(a2 + 16));
                }
              }
              else
              {
                int v87 = a7;
                double v88 = v121;
                double v89 = v122;
                BOOL v90 = v138;
              }
              double v91 = v88 / v136;
              double v92 = -v84;
              double v93 = v129 / v131;
              double v94 = v128 / v131;
              double v95 = v24 / v131;
              double v96 = v89 / v140;
              double v97 = v140 - v131;
              double v98 = 0.0;
              double v99 = 0.0;
              double v100 = 0.0;
              double v101 = 0.0;
              double v102 = 0.0;
              double v103 = 0.0;
              double v104 = 0.0;
              double v105 = v120 / v140;
              double v106 = 0.0;
              if (v90)
              {
                if (a5 == 2) {
                  double v99 = -1.0;
                }
                if (a5 == 1) {
                  double v99 = 1.0;
                }
                double v107 = -(350000.0 - v57) / (v97 * v97);
                double v102 = *(double *)&v150 + *(double *)&v149 * (v93 * v107 * v27);
                double v100 = v86
                     * (*(double *)&v149
                      + *((double *)&v151 + 1) * v135
                      + *(double *)&v152 * v127
                      + *((double *)&v152 + 1) * v84);
                double v101 = v86
                     * -((v139 + (v105 * v107 * v125 + v96 * v107 * v126) * v27)
                       * (*(double *)&v149
                        + *((double *)&v151 + 1) * v141
                        + *(double *)&v152 * v132
                        + *((double *)&v152 + 1) * v92));
                double v106 = v86 * *((double *)&v149 + 1);
                double v103 = *((double *)&v150 + 1) + *(double *)&v149 * (v94 * v107 * v27);
                double v104 = *(double *)&v151 + *(double *)&v149 * (v95 * v107 * v27);
              }
              double v108 = -v91;
              double v109 = v123 / v136 * v132 + v83 * v141 - v91 * v84;
              double v110 = v123 / v136 * v127 + v83 * v135 + v91 * v84;
              double v111 = 0.0;
              double v112 = 0.0;
              double v113 = 0.0;
              double v114 = 0.0;
              double v115 = 0.0;
              if (v72)
              {
                if (v87 == 1) {
                  double v98 = 1.0;
                }
                double v116 = -(8500.0 - v57) / (v97 * v97);
                double v111 = v86 * (v153.f64[0] + *(double *)v155.i64 * v135 + *(double *)&v155.i64[1] * v127 + v156 * v84);
                double v112 = v86
                     * -((v118 + (v105 * v116 * v125 + v96 * v116 * v126) * v27)
                       * (v153.f64[0] + *(double *)v155.i64 * v141 + *(double *)&v155.i64[1] * v132 + v156 * v92));
                double v113 = v153.f64[1] + v153.f64[0] * (v93 * v116 * v27);
                double v114 = *(double *)v154.i64 + v153.f64[0] * (v94 * v116 * v27);
                double v115 = *(double *)&v154.i64[1] + v153.f64[0] * (v95 * v116 * v27);
              }
              double v117 = 1.0 - (v99 * v101 + v109 * 0.00000000333564095 + v98 * v112);
              *(double *)a13 = (v99 * v100 + v110 * 0.00000000333564095 + v98 * v111) / v117;
              *(double *)(a13 + 8) = v99 * v106 / v117;
              *(double *)(a13 + 16) = (v99 * v102 + -v83 * 0.00000000333564095 + v98 * v113) / v117;
              *(double *)(a13 + 24) = (v99 * v103 + -(v123 / v136) * 0.00000000333564095 + v98 * v114) / v117;
              *(double *)(a13 + 32) = (v99 * v104 + v108 * 0.00000000333564095 + v98 * v115) / v117;
            }
            return 0;
          }
          double v23 = v128;
          *(double *)a10.i64 = v134;
          double v22 = v129;
          if (v134 < 3.33564095e-13) {
            return 0;
          }
          --v28;
          int v21 = a12;
          if (!v28) {
            return 0xFFFFFFFFLL;
          }
        }
        return result;
      }
    }
  }
  return 0xFFFFFFFFLL;
}

uint64_t cnnavigation::GNSSTimeOfFlight(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t *a5, double *a6, uint64_t a7, int8x16_t a8)
{
  __int16 v9 = 0;
  long long v10 = 0u;
  long long v11 = 0u;
  int v12 = 0;
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  int v15 = 0;
  return cnnavigation::GNSSTimeOfFlight(a1, (uint64_t)&v9, a2, a3, 1, a4, 1, a5, a8, (int8x16_t)0, a6, 1u, a7);
}

uint64_t cnnavigation::GNSSTimeOfFlight(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t *a5, uint64_t *a6, double *a7, int8x16_t a8)
{
  __int16 v10 = 0;
  long long v11 = 0u;
  long long v12 = 0u;
  int v13 = 0;
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  int v16 = 0;
  return cnnavigation::GNSSTimeOfFlight(a1, (uint64_t)&v10, a2, a3, a4, a5, 1, a6, a8, (int8x16_t)0, a7, 0, (uint64_t)v9);
}

uint64_t cnnavigation::GNSSTimeOfFlight(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t *a5, uint64_t *a6, double *a7, uint64_t a8, int8x16_t a9)
{
  __int16 v10 = 0;
  long long v11 = 0u;
  long long v12 = 0u;
  int v13 = 0;
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  int v16 = 0;
  return cnnavigation::GNSSTimeOfFlight(a1, (uint64_t)&v10, a2, a3, a4, a5, 1, a6, a9, (int8x16_t)0, a7, 1u, a8);
}

uint64_t cnnavigation::GNSSTimeOfFlight(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t *a6, double *a7, int8x16_t a8, int8x16_t a9)
{
  return cnnavigation::GNSSTimeOfFlight(a1, a2, a3, a4, 1, a5, 1, a6, a8, a9, a7, 0, (uint64_t)v10);
}

uint64_t cnnavigation::GNSSTimeOfFlight(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t *a6, double *a7, uint64_t a8, int8x16_t a9, int8x16_t a10)
{
  return cnnavigation::GNSSTimeOfFlight(a1, a2, a3, a4, 1, a5, 1, a6, a9, a10, a7, 1u, a8);
}

uint64_t cnnavigation::GNSSTimeOfFlight(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t *a6, uint64_t *a7, double *a8, int8x16_t a9, int8x16_t a10)
{
  return cnnavigation::GNSSTimeOfFlight(a1, a2, a3, a4, a5, a6, 1, a7, a9, a10, a8, 0, (uint64_t)v11);
}

uint64_t cnnavigation::GNSSTimeOfFlight(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t *a6, uint64_t *a7, double *a8, int8x16_t a9, int8x16_t a10, uint64_t a11)
{
  return cnnavigation::GNSSTimeOfFlight(a1, a2, a3, a4, a5, a6, 1, a7, a9, a10, a8, 1u, a11);
}

uint64_t cnnavigation::GNSSTimeOfFlight(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t *a6, int a7, uint64_t *a8, int8x16_t a9, int8x16_t a10, double *a11)
{
  return cnnavigation::GNSSTimeOfFlight(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, 0, (uint64_t)v12);
}

uint64_t cnnavigation::GNSSTimeOfFlight(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t *a6, int a7, uint64_t *a8, int8x16_t a9, int8x16_t a10, double *a11, uint64_t a12)
{
  return cnnavigation::GNSSTimeOfFlight(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, 1u, a12);
}

uint64_t cnnavigation::GNSSTimeOfFlightRate(uint64_t a1, uint64_t a2, double *a3, uint64_t a4, uint64_t *a5, uint64_t *a6, double *a7, double a8)
{
  __int16 v10 = 0;
  long long v11 = 0u;
  long long v12 = 0u;
  int v13 = 0;
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  int v16 = 0;
  return cnnavigation::GNSSTimeOfFlightRate(a1, (const cnnavigation::GNSSUTCParameters *)&v10, a2, a3, a4, 1, a5, 1, a8, (int8x16_t)0, a6, a7, 0, (uint64_t)v9);
}

uint64_t cnnavigation::GNSSTimeOfFlightRate(uint64_t a1, const cnnavigation::GNSSUTCParameters *a2, uint64_t a3, double *a4, uint64_t a5, int a6, uint64_t *a7, int a8, double a9, int8x16_t a10, uint64_t *a11, double *a12, char a13, uint64_t a14)
{
  v210[3] = *MEMORY[0x1E4F143B8];
  if (a9 <= 0.0 || (*(void *)&a9 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL) {
    return 0xFFFFFFFFLL;
  }
  for (uint64_t i = 0; i != 24; i += 8)
  {
    if ((*(void *)(a3 + i) & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000) {
      return 0xFFFFFFFFLL;
    }
  }
  double v25 = *(double *)(a3 + 8);
  double v26 = *(double *)(a3 + 16);
  v210[0] = *(void *)a3;
  double v24 = *(double *)v210;
  *(double *)&v210[1] = v25;
  *(double *)&v210[2] = v26;
  double v27 = sqrt(v25 * v25 + v24 * v24 + v26 * v26);
  if (v27 < 6341752.3) {
    return 0xFFFFFFFFLL;
  }
  double v192 = 0.0;
  double v191 = 0.0;
  long long v189 = 0u;
  long long v190 = 0u;
  uint64_t result = cnnavigation::GNSSTimeOfFlight(a1, (uint64_t)a2, a3, a5, a6, a7, a8, a11, (int8x16_t)*(unint64_t *)&a9, a10, &v192, 1u, (uint64_t)&v189);
  if (result) {
    return result;
  }
  double v31 = *(double *)&v189;
  long long v32 = v190;
  double v33 = v191;
  v30.i64[0] = (uint64_t)a4[2];
  *a12 = *(double *)&v189 + *(double *)&v190 * *a4 + *((double *)&v190 + 1) * a4[1] + v191 * *(double *)v30.i64;
  if (!a13) {
    return 0;
  }
  double v181 = v33;
  double v34 = *((double *)&v189 + 1);
  double v35 = v192;
  float64x2_t v197 = 0uLL;
  *(double *)v29.i64 = v192;
  CNTimeSpan::SetTimeSpan((uint64_t *)&v197, 0, v29, v30);
  *(void *)&long long v193 = CNTimeSpan::operator-(a1, &v197, v36, v37);
  *((void *)&v193 + 1) = v38;
  uint64_t result = (*(uint64_t (**)(uint64_t, long long *, const cnnavigation::GNSSUTCParameters *, double *, void *, void *))(*(void *)a5 + 56))(a5, &v193, a2, &v186, v185, v184);
  if (result) {
    return result;
  }
  double v180 = v34;
  __double2 v39 = __sincos_stret(v35 * 0.0000729211515);
  double v40 = v39.__sinval * v187 + v39.__cosval * v186;
  double v41 = v39.__cosval * v187 - v39.__sinval * v186;
  *(double *)v209 = v40;
  *(double *)&v209[1] = v41;
  *(double *)&v209[2] = v188;
  double v42 = v40 - v24;
  double v43 = v41 - v25;
  double v44 = v188 - v26;
  double v45 = sqrt(v43 * v43 + v42 * v42 + v44 * v44);
  if (fabs(v45) <= 0.000000015)
  {
    *(_OWORD *)(a14 + 32) = 0u;
    *(_OWORD *)(a14 + 48) = 0u;
    *(_OWORD *)a14 = 0u;
    *(_OWORD *)(a14 + 16) = 0u;
    return 0;
  }
  double v46 = sqrt(v41 * v41 + v40 * v40 + v188 * v188);
  double v153 = *a12;
  double v47 = *a4;
  double v48 = a4[1];
  double v49 = a4[2];
  double v160 = *(double *)v184;
  double v161 = *(double *)&v184[1];
  double v50 = (v27 / v45 - (v25 * (v41 / v45) + v24 * (v40 / v45) + v26 * (v188 / v45))) / v45;
  float64x2_t v197 = 0uLL;
  double v158 = v48;
  double v159 = v49;
  double v167 = v186;
  double v168 = v187;
  double v157 = v47;
  double v164 = v41 - v25;
  double v166 = v188 - v26;
  double v179 = v45;
  double v155 = *(double *)v185;
  double v156 = *(double *)&v184[2];
  double v154 = *(double *)&v185[1];
  double v162 = v43 * v43;
  double v152 = v40 - v24;
  double v149 = *(double *)&v185[2];
  if (v50 >= 0.0)
  {
    if (v50 <= 1.0)
    {
      v169.f64[0] = *(double *)a3 + v50 * v42;
      v169.f64[1] = *(double *)(a3 + 8) + v50 * v43;
      float64x2_t v197 = v169;
      double v51 = *(double *)(a3 + 16) + v50 * v44;
    }
    else
    {
      v197.f64[0] = v39.__sinval * v187 + v39.__cosval * v186;
      v197.f64[1] = v39.__cosval * v187 - v39.__sinval * v186;
      float64x2_t v169 = v197;
      double v51 = v188;
    }
  }
  else
  {
    v197.f64[0] = v24;
    v197.f64[1] = v25;
    v169.f64[0] = v24;
    v169.f64[1] = v25;
    double v51 = v26;
  }
  double v177 = v51;
  *(double *)&long long v198 = v51;
  double v182 = v46;
  if (v46 <= v27) {
    double v52 = v24;
  }
  else {
    double v52 = v39.__sinval * v187 + v39.__cosval * v186;
  }
  double v150 = v39.__cosval * v187 - v39.__sinval * v186;
  if (v46 <= v27) {
    double v53 = v25;
  }
  else {
    double v53 = v39.__cosval * v187 - v39.__sinval * v186;
  }
  if (v46 <= v27) {
    double v54 = v26;
  }
  else {
    double v54 = v188;
  }
  double v173 = v52;
  double v175 = v54;
  v207.f64[0] = v52;
  v207.f64[1] = v53;
  double v55 = v53;
  double v208 = v54;
  uint64_t v204 = 0;
  uint64_t v205 = 0;
  double v202 = 0.0;
  double v201 = 0.0;
  double v203 = 0.0;
  uint64_t result = cnnavigation::ECEFToLLA(&v197, 1, (double *)&v204, 0, (uint64_t)&v193);
  if (result) {
    return result;
  }
  uint64_t v206 = 0;
  uint64_t result = cnnavigation::LLAToECEF((double *)&v204, 1, &v201, 0, (uint64_t)&v193);
  if (result) {
    return result;
  }
  double v142 = v202;
  double v144 = v203;
  double v147 = v201;
  uint64_t result = cnnavigation::ECEFToLLA(&v207, 1, (double *)&v204, 0, (uint64_t)&v193);
  if (result) {
    return result;
  }
  uint64_t v206 = 0;
  uint64_t result = cnnavigation::LLAToECEF((double *)&v204, 1, &v201, 0, (uint64_t)&v193);
  if (result) {
    return result;
  }
  double v138 = v24 / v27;
  double v139 = v25 / v27;
  double v140 = v182 - v27;
  *(double *)v56.i64 = sqrt(v202 * v202 + v201 * v201 + v203 * v203);
  double v57 = sqrt(v169.f64[1] * v169.f64[1] + v169.f64[0] * v169.f64[0] + v177 * v177);
  double v58 = v57 - sqrt(v142 * v142 + v147 * v147 + v144 * v144);
  double v59 = sqrt(v55 * v55 + v173 * v173 + v175 * v175) - *(double *)v56.i64;
  double v201 = 0.0;
  v60.i64[1] = 0;
  long long v195 = 0u;
  long long v196 = 0u;
  long long v193 = 0u;
  long long v194 = 0u;
  double v148 = 0.0;
  double v176 = 0.0;
  double v178 = 0.0;
  double v170 = v59;
  double v172 = 0.0;
  double v174 = 0.0;
  double v145 = v26 / v27;
  if (a6)
  {
    v56.i64[0] = 0;
    double v176 = 0.0;
    double v178 = 0.0;
    double v172 = 0.0;
    double v174 = 0.0;
    if (v58 < 350000.0)
    {
      v56.i64[0] = 0;
      double v176 = 0.0;
      double v178 = 0.0;
      double v172 = 0.0;
      double v174 = 0.0;
      if (v59 > 350000.0)
      {
        *(double *)v56.i64 = v182;
        BOOL v61 = v57 < v182;
        if (v57 >= v27) {
          BOOL v61 = 0;
        }
        uint64_t result = 0xFFFFFFFFLL;
        if (v182 < v27) {
          return result;
        }
        if (v61) {
          return result;
        }
        *(double *)v60.i64 = v35 * ((350000.0 - v58) / v140);
        float64x2_t v207 = 0uLL;
        CNTimeSpan::SetTimeSpan((uint64_t *)&v207, 0, v60, v56);
        *(void *)&v197.f64[0] = CNTimeSpan::operator-(a1, &v207, v62, v63);
        v197.f64[1] = v64;
        uint64_t v65 = cnnavigation::TAITime::ToGPSTime((cnnavigation::TAITime *)&v197, a2);
        uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t, void *, void *, double *, long long *, double, double))(*a7 + 24))(a7, v65, v210, v209, &v201, &v193, v66, a9);
        if (result) {
          return result;
        }
        double v67 = 0.0;
        if (a6 == 2) {
          double v67 = -1.0;
        }
        if (a6 == 1) {
          double v68 = 1.0;
        }
        else {
          double v68 = v67;
        }
        double v69 = -(350000.0 - v58) / (v140 * v140);
        double v176 = *(double *)&v194 + *(double *)&v193 * (v35 * (v138 * v69));
        double v178 = v68;
        *(double *)v56.i64 = *((double *)&v194 + 1) + *(double *)&v193 * (v35 * (v139 * v69));
        double v172 = *(double *)v56.i64;
        double v174 = *(double *)&v195 + *(double *)&v193 * (v35 * (v145 * v69));
      }
    }
  }
  uint64_t v183 = 0;
  uint64_t v200 = 0;
  v70.i64[1] = 0;
  long long v198 = 0u;
  long long v199 = 0u;
  float64x2_t v197 = 0u;
  if (!a8 || v58 >= 8500.0)
  {
    double v80 = 0.0;
    double v143 = 0.0;
    double v137 = 0.0;
LABEL_59:
    double v136 = v80;
    goto LABEL_60;
  }
  double v143 = 0.0;
  double v136 = 0.0;
  double v137 = 0.0;
  if (v170 <= 8500.0)
  {
LABEL_60:
    double v146 = v39.__cosval * 0.0000729211515 * -0.0000729211515 * v153;
    double v141 = v39.__sinval * 0.0000729211515 * v153;
    double v81 = v150 * 0.0000729211515;
    double v151 = v39.__sinval * 0.0000729211515 * 0.0000729211515;
    double v82 = v179 * (v179 * v179);
    double v83 = v166;
    double v84 = -(v152 * v164) / v82;
    double v85 = (v168 * -v39.__sinval - v39.__cosval * v167) * 0.0000729211515 + v39.__sinval * v155 - v39.__cosval * v154;
    double v86 = v81 - v39.__cosval * v155 - v39.__sinval * v154;
    double v87 = v39.__sinval * v154 + v39.__cosval * v155;
    double v88 = -(v152 * v166) / v82;
    double v134 = v39.__cosval * 0.0000729211515 * v153;
    double v135 = (v83 * v83 + v162) / v82;
    double v89 = (1.0 - v153) * -(v39.__cosval * v160)
        + v39.__sinval * -0.0000729211515 * v155 * (1.0 - v153)
        + v146 * v167
        + v141 * v155
        + v39.__cosval * 0.0000729211515 * v154 * (1.0 - v153)
        + v161 * -v39.__sinval * (1.0 - v153)
        + -(v151 * v153) * v168
        + -v134 * v154;
    double v90 = v149 - v31 * v149;
    double v91 = v87 + v86 * v31;
    double v171 = v39.__cosval * v154 + -v39.__sinval * v155 + v85 * v31;
    double v92 = v87 + v86 * v153;
    double v93 = v152
        / v179
        * (v155 * -v141
         + v39.__cosval * v160 * (1.0 - v153)
         + v39.__sinval * v161 * (1.0 - v153)
         + v134 * v154
         + v89 * v31)
        + (v84 * v171 + v135 * v91 + v88 * v90) * v92;
    double v94 = v84 * v85 + v135 * v86 - v88 * v149;
    double v95 = v152 / v179 * v89;
    double v96 = v180 * v95 + v180 * v94 * v92;
    double v97 = *(double *)&v32 * v95 + -(v135 - v94 * *(double *)&v32) * v92;
    double v98 = *((double *)&v32 + 1) * v95 + -(v84 - v94 * *((double *)&v32 + 1)) * v92;
    double v99 = v181 * v95 + -(v88 - v94 * v181) * v92;
    double v100 = (v83 * v83 + v152 * v152) / v82;
    double v101 = -(v164 * v166) / v82;
    double v132 = v85;
    double v102 = v39.__cosval * v154 + -v39.__sinval * v155 + v85 * v153;
    double v133 = v93 + (v100 * v171 + v84 * v91 + v101 * v90) * v102;
    double v103 = v100 * v85 + v84 * v86 - v101 * v149;
    double v104 = v97 + -(v84 - v103 * *(double *)&v32) * v102;
    double v105 = v98 + -(v100 - v103 * *((double *)&v32 + 1)) * v102;
    double v106 = v99 + -(v101 - v103 * v181) * v102;
    double v107 = (v152 * v152 + v162) / v82;
    double v108 = (1.0 - v153) * (v39.__sinval * v160)
         + v39.__cosval * -0.0000729211515 * v155 * (1.0 - v153)
         + v151 * v153 * v167
         + v134 * v155
         + -(v39.__sinval * 0.0000729211515 * v154) * (1.0 - v153)
         + -(v39.__cosval * v161) * (1.0 - v153)
         + v146 * v168
         + v141 * v154;
    double v165 = v164 / v179;
    double v109 = v133
         + v165
         * (v155 * -v134
          + v160 * -v39.__sinval * (1.0 - v153)
          + v39.__cosval * v161 * (1.0 - v153)
          + -v141 * v154
          + v108 * v31);
    double v110 = v165 * v108;
    double v111 = v96 + v180 * v103 * v102 + v110 * v180;
    double v112 = v104 + v110 * *(double *)&v32;
    double v113 = v105 + v110 * *((double *)&v32 + 1);
    double v114 = v106 + v110 * v181;
    double v115 = v149 - v149 * v153;
    double v116 = v101 * v132 + v88 * v86 - v107 * v149;
    double v163 = v111 + v180 * v116 * v115;
    double v117 = v112 + -(v88 - v116 * *(double *)&v32) * v115;
    double v118 = v113 + -(v101 - v116 * *((double *)&v32 + 1)) * v115;
    double v119 = v114 + -(v107 - v116 * v181) * v115;
    double v120 = -(v156 * (1.0 - v153));
    double v121 = v109 + (v101 * v171 + v88 * v91 + v107 * v90) * v115 + v166 / v179 * ((1.0 - v153) * v156 + v120 * v31);
    double v122 = v166 / v179 * v120;
    double v123 = v163 + v122 * v180;
    double v124 = v117 + v122 * *(double *)&v32;
    double v125 = v118 + v122 * *((double *)&v32 + 1);
    double v126 = v119 + v122 * v181;
    double v127 = v121 + (-(v84 * v171) - v135 * v91 - v88 * v90) * v157;
    double v128 = -(v84 * v132) - v135 * v86 + v88 * v149;
    double v129 = -(v100 * v132) - v84 * v86 + v101 * v149;
    double v130 = -(v101 * v132) - v88 * v86 + v107 * v149;
    double v131 = (v165
          * (v39.__sinval * v155
           - v39.__cosval * 0.0000729211515 * v167
           - v39.__cosval * v154
           - v39.__sinval * 0.0000729211515 * v168)
          + v152
          / v179
          * (-(v39.__sinval * 0.0000729211515 * v167)
           - v39.__cosval * v155
           + -v39.__sinval * v154
           + v39.__cosval * 0.0000729211515 * v168)
          - v166 / v179 * v149)
         / -299792458.0
         + 1.0;
    *(double *)a14 = (v127
                    + (-(v100 * v171) - v84 * v91 - v101 * v90) * v158
                    + (-(v101 * v171) - v88 * v91 - v107 * v90) * v159)
                   / 299792458.0
                   / v131;
    *(double *)(a14 + 8) = (v123 + v180 * v128 * v157 + v180 * v129 * v158 + v180 * v130 * v159) / 299792458.0 / v131;
    *(double *)(a14 + 16) = (v124
                           + (v135 + v128 * *(double *)&v32) * v157
                           + (v84 + v129 * *(double *)&v32) * v158
                           + (v88 + v130 * *(double *)&v32) * v159)
                          / 299792458.0
                          / v131;
    *(double *)(a14 + 24) = (v125
                           + (v84 + v128 * *((double *)&v32 + 1)) * v157
                           + (v100 + v129 * *((double *)&v32 + 1)) * v158
                           + (v101 + v130 * *((double *)&v32 + 1)) * v159)
                          / 299792458.0
                          / v131;
    *(double *)(a14 + 32) = (v126
                           + (v88 + v128 * v181) * v157
                           + (v101 + v129 * v181) * v158
                           + (v107 + v130 * v181) * v159)
                          / 299792458.0
                          / v131;
    *(double *)(a14 + 40) = (v152 / v179 / -299792458.0 + v178 * v176 + v148 * v143) / v131;
    *(double *)(a14 + 48) = (v165 / -299792458.0 + v178 * v172 + v148 * v137) / v131;
    *(double *)(a14 + 56) = (v166 / v179 / -299792458.0 + v178 * v174 + v148 * v136) / v131;
    return 0;
  }
  BOOL v71 = v57 < v182;
  if (v57 >= v27) {
    BOOL v71 = 0;
  }
  uint64_t result = 0xFFFFFFFFLL;
  if (v182 >= v27 && !v71)
  {
    double v72 = v192;
    *(double *)v70.i64 = (8500.0 - v58) / v140 * v192;
    uint64_t v204 = 0;
    uint64_t v205 = 0;
    CNTimeSpan::SetTimeSpan(&v204, 0, v70, v56);
    *(void *)&v207.f64[0] = CNTimeSpan::operator-(a1, &v204, v73, v74);
    v207.f64[1] = v75;
    uint64_t v76 = cnnavigation::TAITime::ToGPSTime((cnnavigation::TAITime *)&v207, a2);
    uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t, void *, void *, uint64_t *, float64x2_t *, double))(*a11 + 24))(a11, v76, v210, v209, &v183, &v197, v77);
    if (!result)
    {
      double v78 = 0.0;
      if (a8 == 1) {
        double v78 = 1.0;
      }
      double v148 = v78;
      double v79 = -(8500.0 - v58) / (v140 * v140);
      double v143 = v197.f64[1] + v197.f64[0] * (v138 * v79 * v72);
      double v137 = *(double *)&v198 + v197.f64[0] * (v139 * v79 * v72);
      double v80 = *((double *)&v198 + 1) + v197.f64[0] * (v145 * v79 * v72);
      goto LABEL_59;
    }
  }
  return result;
}

uint64_t cnnavigation::GNSSTimeOfFlightRate(uint64_t a1, uint64_t a2, double *a3, uint64_t a4, uint64_t *a5, uint64_t *a6, double *a7, uint64_t a8, double a9)
{
  __int16 v10 = 0;
  long long v11 = 0u;
  long long v12 = 0u;
  int v13 = 0;
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  int v16 = 0;
  return cnnavigation::GNSSTimeOfFlightRate(a1, (const cnnavigation::GNSSUTCParameters *)&v10, a2, a3, a4, 1, a5, 1, a9, (int8x16_t)0, a6, a7, 1, a8);
}

uint64_t cnnavigation::GNSSTimeOfFlightRate(uint64_t a1, uint64_t a2, double *a3, uint64_t a4, int a5, uint64_t *a6, uint64_t *a7, double *a8, double a9)
{
  __int16 v11 = 0;
  long long v12 = 0u;
  long long v13 = 0u;
  int v14 = 0;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  int v17 = 0;
  return cnnavigation::GNSSTimeOfFlightRate(a1, (const cnnavigation::GNSSUTCParameters *)&v11, a2, a3, a4, a5, a6, 1, a9, (int8x16_t)0, a7, a8, 0, (uint64_t)v10);
}

uint64_t cnnavigation::GNSSTimeOfFlightRate(uint64_t a1, uint64_t a2, double *a3, uint64_t a4, int a5, uint64_t *a6, uint64_t *a7, double *a8, double a9, uint64_t a10)
{
  __int16 v11 = 0;
  long long v12 = 0u;
  long long v13 = 0u;
  int v14 = 0;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  int v17 = 0;
  return cnnavigation::GNSSTimeOfFlightRate(a1, (const cnnavigation::GNSSUTCParameters *)&v11, a2, a3, a4, a5, a6, 1, a9, (int8x16_t)0, a7, a8, 1, a10);
}

uint64_t cnnavigation::GNSSTimeOfFlightRate(uint64_t a1, const cnnavigation::GNSSUTCParameters *a2, uint64_t a3, double *a4, uint64_t a5, uint64_t *a6, uint64_t *a7, double *a8, double a9, int8x16_t a10)
{
  return cnnavigation::GNSSTimeOfFlightRate(a1, a2, a3, a4, a5, 1, a6, 1, a9, a10, a7, a8, 0, (uint64_t)v11);
}

uint64_t cnnavigation::GNSSTimeOfFlightRate(uint64_t a1, const cnnavigation::GNSSUTCParameters *a2, uint64_t a3, double *a4, uint64_t a5, uint64_t *a6, uint64_t *a7, double *a8, double a9, int8x16_t a10, uint64_t a11)
{
  return cnnavigation::GNSSTimeOfFlightRate(a1, a2, a3, a4, a5, 1, a6, 1, a9, a10, a7, a8, 1, a11);
}

uint64_t cnnavigation::GNSSTimeOfFlightRate(uint64_t a1, const cnnavigation::GNSSUTCParameters *a2, uint64_t a3, double *a4, uint64_t a5, int a6, uint64_t *a7, uint64_t *a8, double a9, int8x16_t a10, double *a11)
{
  return cnnavigation::GNSSTimeOfFlightRate(a1, a2, a3, a4, a5, a6, a7, 1, a9, a10, a8, a11, 0, (uint64_t)v12);
}

uint64_t cnnavigation::GNSSTimeOfFlightRate(uint64_t a1, const cnnavigation::GNSSUTCParameters *a2, uint64_t a3, double *a4, uint64_t a5, int a6, uint64_t *a7, uint64_t *a8, double a9, int8x16_t a10, double *a11, uint64_t a12)
{
  return cnnavigation::GNSSTimeOfFlightRate(a1, a2, a3, a4, a5, a6, a7, 1, a9, a10, a8, a11, 1, a12);
}

uint64_t cnnavigation::GNSSTimeOfFlightRate(uint64_t a1, const cnnavigation::GNSSUTCParameters *a2, uint64_t a3, double *a4, uint64_t a5, int a6, uint64_t *a7, int a8, double a9, int8x16_t a10, uint64_t *a11, double *a12)
{
  return cnnavigation::GNSSTimeOfFlightRate(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, 0, (uint64_t)v13);
}

uint64_t cnnavigation::GNSSTimeOfFlightRate(uint64_t a1, const cnnavigation::GNSSUTCParameters *a2, uint64_t a3, double *a4, uint64_t a5, int a6, uint64_t *a7, int a8, double a9, int8x16_t a10, uint64_t *a11, double *a12, uint64_t a13)
{
  return cnnavigation::GNSSTimeOfFlightRate(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, 1, a13);
}

uint64_t cnnavigation::ParameterizedTroposphereModelParameters::ParameterizedTroposphereModelParameters(uint64_t this)
{
  *(void *)this = &unk_1EDD0B148;
  *(void *)(this + 8) = 0;
  *(unsigned char *)(this + 40) = 0;
  *(void *)(this + 24) = 0;
  *(void *)(this + 32) = &unk_1EDD0ABB8;
  *(void *)(this + 16) = 0;
  return this;
}

{
  *(void *)this = &unk_1EDD0B148;
  *(void *)(this + 8) = 0;
  *(unsigned char *)(this + 40) = 0;
  *(void *)(this + 24) = 0;
  *(void *)(this + 32) = &unk_1EDD0ABB8;
  *(void *)(this + 16) = 0;
  return this;
}

uint64_t cnnavigation::ParameterizedTroposphereModelParameters::ParameterizedTroposphereModelParameters(uint64_t result, int a2, int a3, int a4, int a5)
{
  *(void *)uint64_t result = &unk_1EDD0B148;
  *(_DWORD *)(result + 8) = a4;
  *(_DWORD *)(result + 12) = a5;
  *(_DWORD *)(result + 16) = a2;
  *(_DWORD *)(result + 20) = a3;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = &unk_1EDD0ABB8;
  *(unsigned char *)(result + 40) = 0;
  return result;
}

{
  *(void *)uint64_t result = &unk_1EDD0B148;
  *(_DWORD *)(result + 8) = a4;
  *(_DWORD *)(result + 12) = a5;
  *(_DWORD *)(result + 16) = a2;
  *(_DWORD *)(result + 20) = a3;
  *(void *)(result + 24) = 0;
  *(void *)(result + 32) = &unk_1EDD0ABB8;
  *(unsigned char *)(result + 40) = 0;
  return result;
}

uint64_t cnnavigation::ParameterizedTroposphereModelParameters::ParameterizedTroposphereModelParameters(uint64_t result, int a2, int a3, int a4, int a5, uint64_t a6)
{
  *(void *)uint64_t result = &unk_1EDD0B148;
  *(_DWORD *)(result + 8) = a4;
  *(_DWORD *)(result + 12) = a5;
  *(_DWORD *)(result + 16) = a2;
  *(_DWORD *)(result + 20) = a3;
  *(void *)(result + 24) = a6;
  *(void *)(result + 32) = &unk_1EDD0ABB8;
  *(unsigned char *)(result + 40) = 0;
  return result;
}

{
  *(void *)uint64_t result = &unk_1EDD0B148;
  *(_DWORD *)(result + 8) = a4;
  *(_DWORD *)(result + 12) = a5;
  *(_DWORD *)(result + 16) = a2;
  *(_DWORD *)(result + 20) = a3;
  *(void *)(result + 24) = a6;
  *(void *)(result + 32) = &unk_1EDD0ABB8;
  *(unsigned char *)(result + 40) = 0;
  return result;
}

__n128 cnnavigation::ParameterizedTroposphereModelParameters::ParameterizedTroposphereModelParameters(cnnavigation::ParameterizedTroposphereModelParameters *this, const cnnavigation::ParameterizedTroposphereModelParameters *a2)
{
  *(void *)this = &unk_1EDD0B148;
  __n128 result = *(__n128 *)((char *)a2 + 8);
  *(__n128 *)((char *)this + 8) = result;
  *((void *)this + 3) = *((void *)a2 + 3);
  *((void *)this + 4) = &unk_1EDD0ABB8;
  *((unsigned char *)this + 40) = *((unsigned char *)a2 + 40);
  return result;
}

{
  __n128 result;

  *(void *)this = &unk_1EDD0B148;
  __n128 result = *(__n128 *)((char *)a2 + 8);
  *(__n128 *)((char *)this + 8) = result;
  *((void *)this + 3) = *((void *)a2 + 3);
  *((void *)this + 4) = &unk_1EDD0ABB8;
  *((unsigned char *)this + 40) = *((unsigned char *)a2 + 40);
  return result;
}

__n128 cnnavigation::ParameterizedTroposphereModelParameters::operator=(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    __n128 result = *(__n128 *)(a2 + 8);
    *(__n128 *)(a1 + 8) = result;
    *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
  }
  return result;
}

uint64_t cnnavigation::ParameterizedTroposphereModel::ParameterizedTroposphereModel(uint64_t this)
{
  *(void *)this = &unk_1EDD0B088;
  *(void *)(this + 8) = &unk_1EDD0B148;
  *(void *)(this + 16) = 0;
  *(void *)(this + 32) = 0;
  *(void *)(this + 40) = &unk_1EDD0ABB8;
  *(void *)(this + 24) = 0;
  *(unsigned char *)(this + 48) = 0;
  return this;
}

{
  *(void *)this = &unk_1EDD0B088;
  *(void *)(this + 8) = &unk_1EDD0B148;
  *(void *)(this + 16) = 0;
  *(void *)(this + 32) = 0;
  *(void *)(this + 40) = &unk_1EDD0ABB8;
  *(void *)(this + 24) = 0;
  *(unsigned char *)(this + 48) = 0;
  return this;
}

__n128 cnnavigation::ParameterizedTroposphereModel::ParameterizedTroposphereModel(__n128 *this, const cnnavigation::ParameterizedTroposphereModelParameters *a2)
{
  this->n128_u64[0] = (unint64_t)&unk_1EDD0B088;
  this->n128_u64[1] = (unint64_t)&unk_1EDD0B148;
  __n128 result = *(__n128 *)((char *)a2 + 8);
  this[1] = result;
  this[2].n128_u64[0] = *((void *)a2 + 3);
  this[2].n128_u64[1] = (unint64_t)&unk_1EDD0ABB8;
  this[3].n128_u8[0] = *((unsigned char *)a2 + 40);
  return result;
}

{
  __n128 result;

  this->n128_u64[0] = (unint64_t)&unk_1EDD0B088;
  this->n128_u64[1] = (unint64_t)&unk_1EDD0B148;
  __n128 result = *(__n128 *)((char *)a2 + 8);
  this[1] = result;
  this[2].n128_u64[0] = *((void *)a2 + 3);
  this[2].n128_u64[1] = (unint64_t)&unk_1EDD0ABB8;
  this[3].n128_u8[0] = *((unsigned char *)a2 + 40);
  return result;
}

uint64_t cnnavigation::ParameterizedTroposphereModel::GetCurrentWeather(uint64_t a1, uint64_t a2)
{
  uint64_t v92 = *MEMORY[0x1E4F143B8];
  if (!*(unsigned char *)(a1 + 48)) {
    return 1;
  }
  int v3 = *(unsigned __int8 *)(a2 + 64);
  if (*(unsigned char *)(a2 + 64))
  {
    *(_OWORD *)(a2 + 456) = 0u;
    *(_OWORD *)(a2 + 472) = 0u;
    *(_OWORD *)(a2 + 424) = 0u;
    *(_OWORD *)(a2 + 440) = 0u;
    *(_OWORD *)(a2 + 392) = 0u;
    *(_OWORD *)(a2 + 408) = 0u;
    *(_OWORD *)(a2 + 360) = 0u;
    *(_OWORD *)(a2 + 376) = 0u;
    *(_OWORD *)(a2 + 328) = 0u;
    *(_OWORD *)(a2 + 344) = 0u;
  }
  if (*(_DWORD *)(a1 + 24)) {
    return 1;
  }
  double v5 = *(double *)(a2 + 72);
  double v6 = *(double *)(a2 + 88);
  v90[0] = xmmword_18E1F0360;
  v90[1] = xmmword_18E1F0370;
  uint64_t v91 = 0x3FF4F1A6C638D03FLL;
  v88[0] = xmmword_18E1F0380;
  v88[1] = xmmword_18E1F0390;
  uint64_t v89 = 0x408FA80000000000;
  v86[0] = xmmword_18E1F03A0;
  v86[1] = xmmword_18E1F03B0;
  uint64_t v87 = 0x40707A6666666666;
  v84[0] = xmmword_18E1F03C0;
  v84[1] = xmmword_18E1F03D0;
  uint64_t v85 = 0x4054A00000000000;
  v82[0] = xmmword_18E1F03E0;
  v82[1] = xmmword_18E1F03F0;
  uint64_t v83 = 0x3F728E0C9D9D3459;
  v80[0] = xmmword_18E1F0400;
  v80[1] = xmmword_18E1F0410;
  uint64_t v81 = 0x3FF8CCCCCCCCCCCDLL;
  uint64_t v77 = 0;
  long long v78 = xmmword_18E1F0420;
  long long v79 = xmmword_18E1F0430;
  long long v75 = xmmword_18E1F0440;
  long long v76 = xmmword_18E1F0450;
  v71[0] = 0;
  v71[1] = 0;
  long long v72 = xmmword_18E1F0460;
  uint64_t v73 = 0x4004000000000000;
  uint64_t v74 = 0;
  uint64_t v68 = 0;
  long long v69 = xmmword_18E1F0470;
  long long v70 = xmmword_18E1F0480;
  uint64_t v65 = 0;
  long long v66 = xmmword_18E1F0490;
  long long v67 = xmmword_18E1F04A0;
  double v7 = (v5 + -28.0 + v5 + -28.0) * 3.14159265 / 365.25;
  if (v6 < 0.0) {
    double v7 = v7 + 3.14159265;
  }
  long double __x = v7;
  double v8 = fabs(v6);
  double v60 = 0.0;
  if (v8 <= 0.261799388)
  {
    double v63 = 2.77;
    double v62 = 0.0063;
    double v61 = 75.0;
    double v12 = 299.65;
    double v14 = 0.0;
    double v15 = 0.0;
    double v16 = 0.0;
    double v17 = 0.0;
    double v18 = 0.0;
    double v13 = 0.0;
    double v56 = 0.0;
    double v57 = 0.0;
    double v58 = 0.0;
    double v11 = 1013.25;
  }
  else
  {
    if (v8 < 1.30899694)
    {
      unint64_t v9 = 0;
      while (1)
      {
        double v10 = *(double *)((char *)v90 + v9);
        if (v8 > v10 && v8 <= *(double *)((char *)v90 + v9 + 8)) {
          break;
        }
        v9 += 8;
        if (v9 == 32)
        {
          double v11 = 0.0;
          double v12 = 0.0;
          double v13 = 0.0;
          double v61 = 0.0;
          double v62 = 0.0;
          double v63 = 0.0;
          double v14 = 0.0;
          double v15 = 0.0;
          double v16 = 0.0;
          double v17 = 0.0;
          double v18 = 0.0;
          double v60 = 0.0;
LABEL_15:
          double v56 = 0.0;
          double v57 = 0.0;
          double v58 = 0.0;
          goto LABEL_18;
        }
      }
      double v35 = (v8 - v10) / 0.261799388;
      double v36 = *(double *)((char *)v88 + v9 + 8) - *(double *)((char *)v88 + v9);
      double v11 = *(double *)((char *)v88 + v9) + v36 * v35;
      double v37 = *(double *)((char *)v86 + v9 + 8) - *(double *)((char *)v86 + v9);
      double v12 = *(double *)((char *)v86 + v9) + v37 * v35;
      double v38 = *(double *)((char *)v84 + v9 + 8) - *(double *)((char *)v84 + v9);
      double v39 = *(double *)((char *)v84 + v9) + v38 * v35;
      double v40 = *(double *)((char *)v82 + v9 + 8) - *(double *)((char *)v82 + v9);
      double v41 = *(double *)((char *)v82 + v9) + v40 * v35;
      double v42 = *(double *)((char *)v80 + v9 + 8) - *(double *)((char *)v80 + v9);
      double v43 = *(double *)((char *)v80 + v9) + v42 * v35;
      double v44 = *(double *)((char *)&v77 + v9 + 8) - *(double *)((char *)&v77 + v9);
      double v14 = *(double *)((char *)&v77 + v9) + v44 * v35;
      double v45 = *(double *)((char *)&v74 + v9 + 8) - *(double *)((char *)&v74 + v9);
      double v15 = *(double *)((char *)&v74 + v9) + v45 * v35;
      double v46 = *(double *)&v71[v9 / 8 + 1] - *(double *)&v71[v9 / 8];
      double v16 = *(double *)&v71[v9 / 8] + v46 * v35;
      double v47 = *(double *)((char *)&v68 + v9 + 8) - *(double *)((char *)&v68 + v9);
      double v17 = *(double *)((char *)&v68 + v9) + v47 * v35;
      double v48 = (double *)((char *)&v65 + v9);
      double v49 = v48[1] - *v48;
      double v18 = *v48 + v49 * v35;
      double v62 = v41;
      double v63 = v43;
      double v61 = v39;
      if (!v3)
      {
        double v13 = 0.0;
        goto LABEL_15;
      }
      double v50 = dbl_18E1F04B0[v6 < 0.0];
      double v60 = v50 * v36;
      double v56 = v50 * v37;
      double v57 = v50 * v38;
      double v58 = v50 * v40;
      double v59 = v50 * v42;
      double v51 = v50 * v44;
      double v52 = v50 * v45;
      double v53 = v50 * v46;
      double v54 = v50 * v47;
      double v13 = v50 * v49;
      goto LABEL_19;
    }
    double v16 = 2.5;
    double v15 = 14.5;
    double v14 = -0.5;
    double v18 = 0.3;
    double v17 = 0.00062;
    double v63 = 1.55;
    double v62 = 0.00453;
    double v61 = 82.5;
    double v12 = 263.65;
    double v13 = 0.0;
    double v56 = 0.0;
    double v57 = 0.0;
    double v58 = 0.0;
    double v11 = 1013.0;
  }
LABEL_18:
  double v59 = 0.0;
  double v51 = 0.0;
  double v52 = 0.0;
  double v53 = 0.0;
  double v54 = 0.0;
LABEL_19:
  double v55 = v13;
  double v19 = cos(__x);
  *(double *)(a2 + 280) = (v11 - v14 * v19) * 100.0;
  *(double *)(a2 + 288) = v12 - v15 * v19;
  *(double *)(a2 + 296) = v61 - v16 * v19;
  *(double *)(a2 + 304) = v62 - v17 * v19;
  *(double *)(a2 + 312) = v63 - v18 * v19;
  if (v3)
  {
    long double v20 = sin(__x);
    double v21 = *(double *)(a2 + 128);
    long double v22 = v20 * (v14 * 100.0) * 0.0172024238 * v21;
    long double v23 = v20 * v15 * 0.0172024238 * v21;
    long double v24 = v20 * v16 * 0.0172024238 * v21;
    long double v25 = v20 * v17 * 0.0172024238 * v21;
    long double v26 = v20 * v18 * 0.0172024238 * v21;
    double v27 = (v60 - v51 * v19) * 100.0;
    double v28 = *(double *)(a2 + 160);
    double v29 = *(double *)(a2 + 168);
    *(long double *)(a2 + 328) = v22;
    *(double *)(a2 + 336) = v27 * v28;
    double v30 = *(double *)(a2 + 176);
    *(double *)(a2 + 344) = v27 * v29;
    *(double *)(a2 + 352) = v27 * v30;
    double v31 = v56 - v52 * v19;
    *(long double *)(a2 + 360) = v23;
    *(double *)(a2 + 368) = v31 * v28;
    *(double *)(a2 + 376) = v31 * v29;
    *(double *)(a2 + 384) = v31 * v30;
    double v32 = v57 - v53 * v19;
    *(long double *)(a2 + 392) = v24;
    *(double *)(a2 + 400) = v32 * v28;
    *(double *)(a2 + 408) = v32 * v29;
    *(double *)(a2 + 416) = v32 * v30;
    double v33 = v58 - v54 * v19;
    *(long double *)(a2 + 424) = v25;
    *(double *)(a2 + 432) = v33 * v28;
    *(double *)(a2 + 440) = v33 * v29;
    *(double *)(a2 + 448) = v33 * v30;
    double v34 = v59 - v55 * v19;
    *(long double *)(a2 + 456) = v26;
    *(double *)(a2 + 464) = v34 * v28;
    *(double *)(a2 + 472) = v34 * v29;
    *(double *)(a2 + 480) = v34 * v30;
  }
  return 0;
}

uint64_t cnnavigation::ParameterizedTroposphereModel::GetOrthometricHeight(uint64_t a1, uint64_t a2)
{
  uint64_t v37 = *MEMORY[0x1E4F143B8];
  int v4 = *(unsigned __int8 *)(a2 + 64);
  if (*(unsigned char *)(a2 + 64))
  {
    *(void *)(a2 + 136) = 0;
    *(void *)(a2 + 144) = 0;
    *(void *)(a2 + 152) = 0;
  }
  int v5 = *(_DWORD *)(a1 + 28);
  if (v5 != 1)
  {
    if (!v5)
    {
      *(void *)(a2 + 80) = *(void *)(a2 + 104);
      uint64_t result = 0;
      if (v4)
      {
        *(_OWORD *)(a2 + 136) = *(_OWORD *)(a2 + 208);
        double v7 = *(double *)(a2 + 224);
LABEL_7:
        *(double *)(a2 + 152) = v7;
        return result;
      }
      return result;
    }
    return 0xFFFFFFFFLL;
  }
  uint64_t v8 = *(void *)(a1 + 32);
  if (!v8) {
    return 0xFFFFFFFFLL;
  }
  if (!(*(unsigned int (**)(uint64_t))(*(void *)v8 + 56))(v8)) {
    return 0xFFFFFFFFLL;
  }
  long long v35 = *(_OWORD *)(a2 + 88);
  uint64_t v36 = 0;
  uint64_t v9 = cnnavigation::LLAToECEF((double *)&v35, 1, v34.f64, 0, (uint64_t)&v24);
  if (v9) {
    return 0xFFFFFFFFLL;
  }
  float64x2_t v10 = v34;
  if (cnnavigation::WGS84GravityModel::ComputeWGS84GravityModel(v9, &v34, 1, 0, v30.f64, &v32, (uint64_t)&v24))return 0xFFFFFFFFLL; {
  double v23 = 0.0;
  }
  if ((*(unsigned int (**)(void, float64x2_t *, double *, float64x2_t *, float64x2_t *))(**(void **)(a1 + 32) + 32))(*(void *)(a1 + 32), &v34, &v23, &v30, &v24))
  {
    return 0xFFFFFFFFLL;
  }
  float64x2_t v11 = v30;
  double v12 = v30.f64[1];
  double v13 = v31;
  double v14 = sqrt(vmlad_n_f64(vmuld_lane_f64(v30.f64[1], v30, 1), v11.f64[0], v11.f64[0]) + v13 * v13);
  double v15 = v23
      - ((v10.f64[1] * 0.0000729211515 * (v10.f64[1] * 0.0000729211515)
        + v10.f64[0] * 0.0000729211515 * (v10.f64[0] * 0.0000729211515))
       * 0.5
       + -62636851.7);
  *(double *)(a2 + 80) = *(double *)(a2 + 104) - (-0.528 - v15 / v14);
  if (*(unsigned char *)(a2 + 64))
  {
    uint64_t result = 0;
    double v16 = -1.0 / v14;
    double v17 = 1.0 / v14;
    double v18 = v15 / (v14 * v14);
    double v19 = v11.f64[0] / v14;
    double v20 = v12 / v14;
    double v21 = v13 / v14;
    double v22 = -(v33 * v17) - v16 * v13 + v18 * (v20 * v27 + v19 * v25 + v21 * v29);
    *(float64x2_t *)(a2 + 136) = vsubq_f64(*(float64x2_t *)(a2 + 208), vmlaq_n_f64(vmlsq_lane_f64(vmulq_n_f64(vnegq_f64(v32), v17), v11, v16, 0), vmlaq_n_f64(vmlaq_n_f64(vmulq_n_f64(v26, v20), v24, v19), v28, v21), v18));
    double v7 = *(double *)(a2 + 224) - v22;
    goto LABEL_7;
  }
  return 0;
}

uint64_t cnnavigation::ParameterizedTroposphereModel::GetMappingFunctions(uint64_t a1, uint64_t a2)
{
  uint64_t v222 = *MEMORY[0x1E4F143B8];
  if (!*(unsigned char *)(a1 + 48)) {
    return 1;
  }
  int v3 = *(_DWORD *)(a1 + 20);
  if (v3 != 1)
  {
    if (!v3)
    {
      double v4 = *(double *)(a2 + 280) / 100.0 + -1000.0;
      double v5 = *(double *)(a2 + 288) + -273.15 + -15.0;
      double v6 = sqrt(*(double *)(a2 + 320) / 100.0);
      double v7 = v4 * 0.0000001316 + 0.001237 + v5 * 0.000001378 + v6 * 0.000008057;
      double v8 = v4 * 0.0000001946 + 0.003333 + v5 * 0.000000104 + v6 * 0.00001747;
      double v9 = v4 * 0.0000002471 + 0.0005236 + v5 * -0.0000001724 + v6 * 0.00001328;
      double v191 = v6;
      double v10 = v4 * 0.0000007384 + 0.001705 + v5 * 0.0000003767 + v6 * 0.00002147;
      double v11 = v8 / 1.078 + 1.0;
      double v12 = v7 / v11 + 1.0;
      long double __x = *(double *)(a2 + 112);
      long double v13 = sin(__x);
      double v14 = v13 + 0.078;
      double v15 = v8;
      double v16 = v13 + v8 / (v13 + 0.078);
      double v17 = v13 + v7 / v16;
      double v18 = v12 / v17;
      *(double *)(a2 + 520) = v12 / v17;
      double v19 = v10 / 1.05917 + 1.0;
      double v20 = v13 + 0.05917;
      double v188 = v10;
      double v21 = v13 + v10 / (v13 + 0.05917);
      double v22 = v13 + v9 / v21;
      double v23 = (v9 / v19 + 1.0) / v22;
      *(double *)(a2 + 528) = v23;
      if (*(unsigned char *)(a2 + 64))
      {
        double v24 = v18 / v12;
        double v178 = v22;
        double v25 = -v18 / v17;
        double v26 = 1.0 / v11;
        double v167 = -v7;
        double v27 = v15;
        double v28 = v7 * -1.078 / ((v15 + 1.0 + 0.078) * (v15 + 1.0 + 0.078));
        long double v29 = __x;
        double v176 = v19;
        double __xb = v23;
        double v171 = v21;
        double v173 = v20;
        double v169 = v9 / v19 + 1.0;
        long double v30 = cos(v29);
        uint64_t result = 0;
        double v32 = v167 / (v16 * v16);
        double v33 = (v25 * (v32 / v14 * 0.0000001946 + 1.0 / v16 * 0.0000001316)
             + v24 * (v28 * 0.0000001946 + v26 * 0.0000001316))
            * 0.01;
        double v34 = v25 * (v32 / v14 * 0.000000104 + 1.0 / v16 * 0.000001378) + v24 * (v28 * 0.000000104 + v26 * 0.000001378);
        double v35 = (v25 * (0.000008735 / v191 * (v32 / v14) + 1.0 / v16 * (0.0000040285 / v191))
             + v24 * (0.000008735 / v191 * v28 + v26 * (0.0000040285 / v191)))
            * 0.01;
        long double v36 = v25 * (v30 + v30 * v32 * (1.0 - v27 / (v14 * v14)));
        double v37 = *(double *)(a2 + 360);
        double v38 = *(double *)(a2 + 368);
        double v40 = *(double *)(a2 + 328);
        double v39 = *(double *)(a2 + 336);
        double v41 = *(double *)(a2 + 488);
        double v42 = *(double *)(a2 + 496);
        *(double *)(a2 + 536) = v34 * v37 + v33 * v40 + v35 * v41;
        double v43 = -v9 / (v171 * v171);
        long double v44 = v30 + v30 * v43 * (1.0 - v188 / (v173 * v173));
        double v45 = *(double *)(a2 + 232);
        double v46 = *(double *)(a2 + 240);
        *(long double *)(a2 + 544) = v34 * v38 + v33 * v39 + v35 * v42 + v36 * v45;
        double v47 = v9 * -1.05917 / ((v188 + 1.0 + 0.05917) * (v188 + 1.0 + 0.05917));
        double v48 = v43 / v173;
        double v49 = -__xb / v178;
        double v50 = v49 * (v48 * 0.0000007384 + 1.0 / v171 * 0.0000002471)
            + __xb / v169 * (v47 * 0.0000007384 + 1.0 / v176 * 0.0000002471);
        double v51 = v49 * (v48 * 0.0000003767 + 1.0 / v171 * -0.0000001724)
            + __xb / v169 * (v47 * 0.0000003767 + 1.0 / v176 * -0.0000001724);
        double v53 = *(double *)(a2 + 376);
        double v52 = *(double *)(a2 + 384);
        double v54 = *(double *)(a2 + 344);
        double v55 = *(double *)(a2 + 352);
        double v56 = v49 * (0.000010735 / v191 * v48 + 1.0 / v171 * (0.00000664 / v191))
            + __xb / v169 * (0.000010735 / v191 * v47 + 1.0 / v176 * (0.00000664 / v191));
        double v57 = *(double *)(a2 + 504);
        double v58 = *(double *)(a2 + 512);
        *(long double *)(a2 + 552) = v34 * v53 + v33 * v54 + v35 * v57 + v36 * v46;
        double v59 = v34 * v52 + v33 * v55 + v35 * v58;
        double v60 = v51 * v37 + v50 * 0.01 * v40;
        double v61 = v51 * v38 + v50 * 0.01 * v39;
        double v62 = *(double *)(a2 + 248);
        double v63 = *(double *)(a2 + 256);
        *(long double *)(a2 + 560) = v59 + v36 * v62;
        *(long double *)(a2 + 568) = v36 * v63;
        double v64 = v60 + v56 * 0.01 * v41;
        double v65 = *(double *)(a2 + 264);
        double v66 = *(double *)(a2 + 272);
        *(long double *)(a2 + 576) = v36 * v65;
        *(long double *)(a2 + 584) = v36 * v66;
        long double v67 = v49 * v44;
        *(double *)(a2 + 592) = v64;
        *(long double *)(a2 + 600) = v61 + v56 * 0.01 * v42 + v67 * v45;
        *(long double *)(a2 + 608) = v51 * v53 + v50 * 0.01 * v54 + v56 * 0.01 * v57 + v67 * v46;
        *(long double *)(a2 + 616) = v51 * v52 + v50 * 0.01 * v55 + v56 * 0.01 * v58 + v67 * v62;
        *(long double *)(a2 + 624) = v67 * v63;
        *(long double *)(a2 + 632) = v67 * v65;
        *(long double *)(a2 + 640) = v67 * v66;
        return result;
      }
      return 0;
    }
    return 1;
  }
  double v68 = *(double *)(a2 + 112);
  double v70 = *(double *)(a2 + 80);
  double v69 = *(double *)(a2 + 88);
  double v71 = *(double *)(a2 + 72);
  v220[0] = xmmword_18E1F0360;
  v220[1] = xmmword_18E1F0370;
  uint64_t v221 = 0x3FF4F1A6C638D03FLL;
  v218[0] = xmmword_18E1F04C0;
  v218[1] = xmmword_18E1F04D0;
  uint64_t v219 = 0x3F53BC74F8C0EA98;
  v216[0] = xmmword_18E1F04E0;
  v216[1] = xmmword_18E1F04F0;
  uint64_t v217 = 0x3F67C6F718FD5C4ALL;
  v214[0] = xmmword_18E1F0500;
  v214[1] = xmmword_18E1F0510;
  uint64_t v215 = 0x3FB0733DFAB76BBDLL;
  uint64_t v211 = 0;
  long long v212 = xmmword_18E1F0520;
  long long v213 = xmmword_18E1F0530;
  uint64_t v208 = 0;
  long long v209 = xmmword_18E1F0540;
  long long v210 = xmmword_18E1F0550;
  long long v206 = xmmword_18E1F0560;
  long long v207 = xmmword_18E1F0570;
  v203[0] = xmmword_18E1F0580;
  v203[1] = xmmword_18E1F0590;
  uint64_t v204 = 0x3F4432E1470BE6ECLL;
  uint64_t v205 = 0;
  v201[0] = xmmword_18E1F05A0;
  v201[1] = xmmword_18E1F05B0;
  uint64_t v202 = 0x3F5CD5970A6DF91FLL;
  v199[0] = xmmword_18E1F05C0;
  v199[1] = xmmword_18E1F05D0;
  uint64_t v200 = 0x3FAC065CAA3EC72ALL;
  double v72 = (v71 + -28.0 + v71 + -28.0) * 3.14159265 / 365.25;
  if (v69 >= 0.0) {
    double v73 = v72;
  }
  else {
    double v73 = v72 + 3.14159265;
  }
  double v74 = fabs(v69);
  double v194 = v70;
  long double v195 = v68;
  if (v74 <= 0.261799388)
  {
    double v181 = 0.0;
    double v82 = 0.0012769934;
    double v81 = 0.0029153695;
    double v80 = 0.062610505;
    double v198 = 0.00058021897;
    double v197 = 0.0014275268;
    double v179 = 0.0;
    double v180 = 0.0;
    double v175 = 0.0;
    double v177 = 0.0;
    double v174 = 0.0;
    double v189 = 0.043472961;
    double v170 = 0.0;
    double v172 = 0.0;
    double v168 = 0.0;
    double v77 = 0.0;
    double v78 = 0.0;
    double v79 = 0.0;
  }
  else if (v74 >= 1.30899694)
  {
    double v181 = 0.0;
    double v82 = 0.0012045996;
    double v81 = 0.0029024912;
    double v80 = 0.064258455;
    double v79 = 0.000041202191;
    double v78 = 0.00011723375;
    double v77 = 0.0017037206;
    double v198 = 0.00061641693;
    double v197 = 0.0017599082;
    double v179 = 0.0;
    double v180 = 0.0;
    double v175 = 0.0;
    double v177 = 0.0;
    double v172 = 0.0;
    double v174 = 0.0;
    double v168 = 0.0;
    double v170 = 0.0;
    double v189 = 0.054736038;
  }
  else
  {
    uint64_t v75 = 0;
    while (1)
    {
      double v76 = *(double *)((char *)v220 + v75);
      if (v74 > v76 && v74 <= *(double *)((char *)v220 + v75 + 8)) {
        break;
      }
      v75 += 8;
      if (v75 == 32)
      {
        double v180 = 0.0;
        double v181 = 0.0;
        double v177 = 0.0;
        double v179 = 0.0;
        double v174 = 0.0;
        double v175 = 0.0;
        double v170 = 0.0;
        double v172 = 0.0;
        double v168 = 0.0;
        double v189 = 0.0;
        double v197 = 0.0;
        double v198 = 0.0;
        double v77 = 0.0;
        double v78 = 0.0;
        double v79 = 0.0;
        double v80 = 0.0;
        double v81 = 0.0;
        double v82 = 0.0;
        goto LABEL_19;
      }
    }
    double v140 = (v74 - v76) / 0.261799388;
    double v141 = *(double *)((char *)v218 + v75 + 8) - *(double *)((char *)v218 + v75);
    double v82 = *(double *)((char *)v218 + v75) + v141 * v140;
    double v142 = *(double *)((char *)v216 + v75 + 8) - *(double *)((char *)v216 + v75);
    double v81 = *(double *)((char *)v216 + v75) + v142 * v140;
    double v143 = *(double *)((char *)v214 + v75 + 8) - *(double *)((char *)v214 + v75);
    double v80 = *(double *)((char *)v214 + v75) + v143 * v140;
    double v144 = *(double *)((char *)&v211 + v75 + 8) - *(double *)((char *)&v211 + v75);
    double v79 = *(double *)((char *)&v211 + v75) + v144 * v140;
    double v145 = *(double *)((char *)&v208 + v75 + 8) - *(double *)((char *)&v208 + v75);
    double v78 = *(double *)((char *)&v208 + v75) + v145 * v140;
    double v146 = *(double *)((char *)&v205 + v75 + 8) - *(double *)((char *)&v205 + v75);
    double v77 = *(double *)((char *)&v205 + v75) + v146 * v140;
    double v147 = *(double *)((char *)v203 + v75 + 8) - *(double *)((char *)v203 + v75);
    double v148 = *(double *)((char *)v201 + v75 + 8) - *(double *)((char *)v201 + v75);
    double v197 = *(double *)((char *)v201 + v75) + v148 * v140;
    double v198 = *(double *)((char *)v203 + v75) + v147 * v140;
    double v149 = (double *)((char *)v199 + v75);
    double v150 = v149[1] - *v149;
    double v189 = *v149 + v150 * v140;
    if (*(unsigned char *)(a2 + 64))
    {
      double v151 = dbl_18E1F04B0[v69 < 0.0];
      double v168 = v151 * v141;
      double v170 = v151 * v142;
      double v172 = v151 * v143;
      double v174 = v151 * v144;
      double v175 = v151 * v145;
      double v177 = v151 * v146;
      double v179 = v151 * v147;
      double v180 = v151 * v148;
      double v181 = v151 * v150;
    }
    else
    {
      double v180 = 0.0;
      double v181 = 0.0;
      double v177 = 0.0;
      double v179 = 0.0;
      double v174 = 0.0;
      double v175 = 0.0;
      double v170 = 0.0;
      double v172 = 0.0;
      double v168 = 0.0;
    }
  }
LABEL_19:
  long double v187 = v73;
  double v83 = cos(v73);
  double v185 = v79;
  double v186 = v78;
  double v84 = v82 - v79 * v83;
  double v85 = v81 - v78 * v83;
  double __xa = v77;
  double v192 = v80 - v77 * v83;
  double v86 = sin(v195);
  double v87 = v86 + 0.00549 / (v86 + 0.00114);
  double v88 = v86 + 0.0000253 / v87;
  double v89 = 1.0 / v86 + -1.00002516 / v88;
  double v90 = v194 * v89 / 1000.0;
  int v91 = *(unsigned __int8 *)(a2 + 64);
  if (*(unsigned char *)(a2 + 64))
  {
    double v158 = v194 * v89 / 1000.0;
    double v160 = v85;
    double v92 = v89 / 1000.0;
    long double v93 = cos(v195);
    long double v94 = v194
        / 1000.0
        * (-v93 / (v86 * v86)
         + 1.00002516
         / (v88
          * v88)
         * (v93 + v93 * (-0.0000253 / (v87 * v87)) * (-0.00549 / ((v86 + 0.00114) * (v86 + 0.00114)) + 1.0)));
    double v162 = v94 * *(double *)(a2 + 232) + v92 * *(double *)(a2 + 136);
    double v163 = v94 * *(double *)(a2 + 240) + v92 * *(double *)(a2 + 144);
    double v95 = v94 * *(double *)(a2 + 248) + v92 * *(double *)(a2 + 152);
    double v90 = v158;
    double v85 = v160;
    double v166 = v94 * *(double *)(a2 + 256);
    double v164 = v95;
    double v165 = v94 * *(double *)(a2 + 264);
    double v194 = v94 * *(double *)(a2 + 272);
  }
  double v96 = v192;
  double v97 = v192 + 1.0;
  double v98 = v84 / (v85 / (v192 + 1.0) + 1.0) + 1.0;
  double v99 = v86 + v192;
  double v100 = v86 + v85 / (v86 + v192);
  double v101 = v86 + v84 / v100;
  *(double *)(a2 + 520) = v90 + v98 / v101;
  double v102 = v189 + 1.0;
  double v103 = v197 / (v189 + 1.0) + 1.0;
  double v104 = v86 + v189;
  double v105 = v86 + v197 / (v86 + v189);
  *(double *)(a2 + 528) = (v198 / v103 + 1.0) / (v86 + v198 / v105);
  if (v91)
  {
    double v190 = 1.0 / v101;
    double v193 = v102;
    double v159 = -v98 / (v101 * v101);
    double v161 = v103;
    double v106 = v96 + v85 + 1.0;
    double v107 = v97 / v106;
    double v108 = v106 * v106;
    double v152 = -(v84 * v97) / v108;
    double v153 = v107;
    double v156 = v86 + v198 / v105;
    double v157 = v85 * v84 / v108;
    long double v109 = v195;
    double v196 = v104;
    double v155 = v198 / v103 + 1.0;
    double v110 = cos(v109);
    double v111 = v99 * v99;
    double v112 = -v84 / (v100 * v100);
    double v154 = v110 + v110 * v112 * (1.0 - v85 / (v99 * v99));
    double v113 = v112 / v99;
    double v114 = v85 * (v84 / (v100 * v100)) / v111;
    long double v115 = sin(v187);
    double v116 = v168 - v174 * v83;
    double v117 = v170 - v175 * v83;
    double v118 = *(double *)(a2 + 128);
    long double v119 = v115 * v185 * 0.0172024238 * v118;
    long double v120 = v115 * v186 * 0.0172024238 * v118;
    long double v121 = v115 * __xa * 0.0172024238 * v118;
    double v122 = v117 * v152 + v153 * v116;
    double v123 = v117 * v113 + 1.0 / v100 * v116;
    double v124 = -v155 / (v156 * v156);
    double v125 = v159 * (v123 + v114 * (v172 - v177 * v83)) + v190 * (v122 + v157 * (v172 - v177 * v83));
    *(long double *)(a2 + 536) = v159 * (v113 * v120 + 1.0 / v100 * v119 + v114 * v121)
                               + v190 * (v152 * v120 + v153 * v119 + v157 * v121)
                               + 0.0;
    double v126 = *(double *)(a2 + 232);
    double v127 = *(double *)(a2 + 240);
    double v128 = *(double *)(a2 + 160);
    double v129 = *(double *)(a2 + 168);
    *(double *)(a2 + 544) = v162 + v159 * v154 * v126 + v125 * v128;
    *(double *)(a2 + 552) = v163 + v159 * v154 * v127 + v125 * v129;
    double v130 = *(double *)(a2 + 176);
    double v131 = *(double *)(a2 + 248);
    double v132 = *(double *)(a2 + 256);
    *(double *)(a2 + 560) = v164 + v159 * v154 * v131 + v125 * v130;
    *(double *)(a2 + 568) = v166 + v159 * v154 * v132;
    double v133 = *(double *)(a2 + 264);
    double v134 = *(double *)(a2 + 272);
    *(double *)(a2 + 576) = v165 + v159 * v154 * v133;
    *(double *)(a2 + 584) = v194 + v159 * v154 * v134;
    double v135 = v196;
    double v136 = -v198 / (v105 * v105);
    double v137 = v110 + v110 * v136 * (1.0 - v197 / (v135 * v135));
    double v138 = v124 * (v180 * (v136 / v196) + 1.0 / v105 * v179 + v197 * (v198 / (v105 * v105)) / (v135 * v135) * v181)
         + 1.0
         / v156
         * (v180 * (-v198 / (v161 * v161) / v193)
          + 1.0 / v161 * v179
          + v197 * (v198 / (v161 * v161)) / (v193 * v193) * v181);
    double v139 = v124 * v137;
    *(void *)(a2 + 592) = 0;
    *(double *)(a2 + 600) = v139 * v126 + v138 * v128;
    *(double *)(a2 + 608) = v139 * v127 + v138 * v129;
    *(double *)(a2 + 616) = v139 * v131 + v138 * v130;
    *(double *)(a2 + 624) = v139 * v132;
    *(double *)(a2 + 632) = v139 * v133;
    *(double *)(a2 + 640) = v139 * v134;
  }
  return 0;
}

uint64_t cnnavigation::ParameterizedTroposphereModel::GetZenithDelays(uint64_t a1, uint64_t a2)
{
  if (!*(unsigned char *)(a1 + 48) || *(_DWORD *)(a1 + 16)) {
    return 1;
  }
  double v4 = *(double *)(a2 + 80);
  long double v5 = *(double *)(a2 + 88);
  double v97 = *(double *)(a2 + 288);
  double v6 = *(double *)(a2 + 280) / 100.0;
  double v7 = v4 / 1000.0;
  double v8 = *(double *)(a2 + 304);
  double v9 = *(double *)(a2 + 320) / 100.0;
  if (fabs(v8) <= nextafter(1.0, INFINITY) + -1.0)
  {
    double v65 = cos(v5 + v5) * -0.0026 + 1.0 + v7 * -0.00028;
    double v66 = v6 * 0.002277 / v65;
    double v67 = (1255.0 / v97 + 0.05) * 0.002277;
    if (*(unsigned char *)(a2 + 64))
    {
      double v68 = v66 / v65;
      double v69 = sin(v5 + v5) * (v66 / v65 * -0.0052);
      double v70 = v66 / v6 * 0.01 * *(double *)(a2 + 328);
      double v71 = v68 * 0.00028 * 0.001;
      double v72 = v71 * *(double *)(a2 + 152) + v66 / v6 * 0.01 * *(double *)(a2 + 352) + v69 * *(double *)(a2 + 176);
      double v73 = -2.857635 / (v97 * v97) * v9;
      *(void *)(a2 + 696) = 0;
      *(void *)(a2 + 712) = 0;
      *(void *)(a2 + 704) = 0;
      *(void *)(a2 + 752) = 0;
      *(void *)(a2 + 768) = 0;
      *(void *)(a2 + 760) = 0;
      *(double *)(a2 + 664) = v70 / 299792458.0;
      float64x2_t v74 = vmlaq_n_f64(vmlaq_n_f64(vmulq_n_f64(*(float64x2_t *)(a2 + 136), v71), *(float64x2_t *)(a2 + 336), v66 / v6 * 0.01), *(float64x2_t *)(a2 + 160), v69);
      float64x2_t v75 = (float64x2_t)vdupq_n_s64(0x41B1DE784A000000uLL);
      *(float64x2_t *)(a2 + 672) = vdivq_f64(v74, v75);
      *(double *)(a2 + 688) = v72 / 299792458.0;
      float64x2_t v76 = vdivq_f64(vmlaq_n_f64(vmulq_n_f64(*(float64x2_t *)(a2 + 488), v67 * 0.01), *(float64x2_t *)(a2 + 360), v73), v75);
      float64x2_t v77 = vdivq_f64(vmlaq_n_f64(vmulq_n_f64(*(float64x2_t *)(a2 + 504), v67 * 0.01), *(float64x2_t *)(a2 + 376), v73), v75);
      *(float64x2_t *)(a2 + 720) = v76;
      *(float64x2_t *)(a2 + 736) = v77;
    }
    uint64_t result = 0;
    *(double *)(a2 + 648) = v66 / 299792458.0;
    double v64 = v9 * v67 / 299792458.0;
    goto LABEL_12;
  }
  double v10 = v97 - v8 * v4;
  if (v10 >= 0.0)
  {
    double v11 = *(double *)(a2 + 312) + 1.0;
    double v12 = v10 / v97;
    double v93 = v97 - v8 * v4;
    long double v13 = v6 * pow(v10 / v97, 0.0341631126 / v8);
    double v95 = 0.0341631126 / v8;
    double __x = v12;
    long double v14 = v12;
    double v15 = v13;
    double v89 = 0.0341631126 / v8 * v11;
    double v91 = v9;
    long double v16 = v9 * pow(v14, v89);
    double v87 = tan(v5);
    long double v17 = atan(v87 * 0.99330562);
    double v83 = v17 + v17;
    double v18 = cos(v17 + v17) * -0.00266 + 1.0 + v7 * -0.00028;
    double v19 = v18 * 9.784;
    double v92 = v11;
    double v20 = v11 * (v18 * 9.784);
    double v21 = 0.0022768 / v18;
    double v22 = v15 * (0.0022768 / v18);
    double v90 = v16;
    double v96 = v16 * ((377600.0 / (v93 * (1.0 - v8 * 287.053763 / v20)) + 16.5220718) * 0.000001 * 287.053763) / v20;
    if (*(unsigned char *)(a2 + 64))
    {
      double v81 = v15 * (-0.0022768 / (v18 * v18));
      double v23 = v95 * v15 / v93;
      long double v24 = __x;
      double __xa = v22;
      double v82 = v19;
      double v78 = v93 * (1.0 - v8 * 287.053763 / v20);
      double v79 = log(v24);
      double v80 = -v95 / v8;
      long double v25 = sin(v83);
      double v26 = (v23 - v95 * v15 / v97) * v21;
      double v27 = v15 / v6 * v21 * 0.01;
      double v28 = *(double *)(a2 + 368);
      double v84 = *(double *)(a2 + 360);
      double v29 = *(double *)(a2 + 376);
      double v30 = *(double *)(a2 + 384);
      double v88 = (v87 * v87 + 1.0) * 0.99330562 / (v87 * 0.99330562 * v87 + 1.0);
      double v31 = v90 * (-0.3776 / (v78 * v78) * 287.053763) / v20;
      double v32 = v78 / v93 * v31;
      double v33 = v89 * v90 / v93 * (v96 / v90);
      double v34 = v31 * (v93 * -287.053763 / v20) - v4 * v32 - v33 * v4 + v92 * (v79 * v90) * (v96 / v90) * v80;
      double v35 = (v80 * (v79 * v15) - v23 * v4) * v21;
      double v36 = -v96 / v20;
      double v37 = v8 * v93 * 287.053763 / (v20 * v20);
      double v38 = v33 * -v8
          + v31 * (v92 * v37 * 9.784 * -0.00028 * 0.001 - v8 * (v78 / v93))
          + v92 * v36 * 9.784 * -0.00028 * 0.001;
      double v39 = v81 * -0.00028 * 0.001 - v8 * (v23 * v21);
      double v41 = *(double *)(a2 + 424);
      double v40 = *(double *)(a2 + 432);
      double v94 = v26 * v84 + v27 * *(double *)(a2 + 328) + v35 * v41;
      double v42 = v26 * v28 + v27 * *(double *)(a2 + 336) + v35 * v40;
      double v43 = *(double *)(a2 + 440);
      double v44 = *(double *)(a2 + 448);
      double v45 = v26 * v29 + v27 * *(double *)(a2 + 344) + v35 * v43;
      double v46 = v26 * v30 + v27 * *(double *)(a2 + 352) + v35 * v44;
      long double v47 = v88 * (v25 * 0.00532 * v81);
      double v49 = *(double *)(a2 + 152);
      double v48 = *(double *)(a2 + 160);
      double v50 = *(double *)(a2 + 168);
      double v51 = *(double *)(a2 + 176);
      double v52 = v33 + v32 - v89 * v90 / v97 * (v96 / v90);
      double v53 = v90 / v91 * (v96 / v90) * 0.01;
      double v54 = v82 * v36 + v82 * (v37 * v31) + v95 * (v79 * v90) * (v96 / v90);
      double v55 = v53 * *(double *)(a2 + 488) + v52 * v84 + v34 * v41 + v54 * *(double *)(a2 + 456);
      double v56 = v53 * *(double *)(a2 + 496) + v52 * v28 + v34 * v40 + v54 * *(double *)(a2 + 464);
      double v57 = v53 * *(double *)(a2 + 504) + v52 * v29 + v34 * v43;
      double v58 = v53 * *(double *)(a2 + 512) + v52 * v30 + v34 * v44 + v54 * *(double *)(a2 + 480);
      double v59 = *(double *)(a2 + 136);
      double v60 = *(double *)(a2 + 144);
      long double v61 = v88 * (v25 * 0.00532 * (v92 * (v36 + v31 * v37) * 9.784));
      long double v62 = v57 + v54 * *(double *)(a2 + 472) + v38 * v60 + v61 * v50;
      *(double *)(a2 + 664) = v94 / 299792458.0;
      *(long double *)(a2 + 672) = (v42 + v47 * v48 + v39 * v59) / 299792458.0;
      *(long double *)(a2 + 680) = (v45 + v47 * v50 + v39 * v60) / 299792458.0;
      *(long double *)(a2 + 688) = (v46 + v47 * v51 + v39 * v49) / 299792458.0;
      *(double *)(a2 + 720) = v55 / 299792458.0;
      *(long double *)(a2 + 728) = (v56 + v38 * v59 + v61 * v48) / 299792458.0;
      long double v63 = v62 / 299792458.0;
      double v22 = __xa;
      *(long double *)(a2 + 736) = v63;
      *(long double *)(a2 + 744) = (v58 + v38 * v49 + v61 * v51) / 299792458.0;
      *(void *)(a2 + 704) = 0;
      *(void *)(a2 + 696) = 0;
      *(void *)(a2 + 712) = 0;
      *(void *)(a2 + 752) = 0;
      *(void *)(a2 + 768) = 0;
      *(void *)(a2 + 760) = 0;
    }
    uint64_t result = 0;
    *(double *)(a2 + 648) = v22 / 299792458.0;
    double v64 = v96 / 299792458.0;
LABEL_12:
    *(double *)(a2 + 656) = v64;
    return result;
  }
  *(_OWORD *)(a2 + 648) = 0u;
  uint64_t result = 0;
  if (*(unsigned char *)(a2 + 64))
  {
    *(_OWORD *)(a2 + 744) = 0uLL;
    *(_OWORD *)(a2 + 760) = 0uLL;
    *(_OWORD *)(a2 + 712) = 0uLL;
    *(_OWORD *)(a2 + 728) = 0uLL;
    *(_OWORD *)(a2 + 680) = 0uLL;
    *(_OWORD *)(a2 + 696) = 0uLL;
    *(_OWORD *)(a2 + 664) = 0uLL;
  }
  return result;
}

uint64_t cnnavigation::ParameterizedTroposphereModel::GetTroposphericDelay(cnnavigation::ParameterizedTroposphereModel *this, int a2, double a3, const double *a4, const double *a5, double *a6)
{
  return cnnavigation::ParameterizedTroposphereModel::GetTroposphericDelay((uint64_t)this, a2, (uint64_t)a4, (uint64_t)a5, a6, 0, v7, a3);
}

uint64_t cnnavigation::ParameterizedTroposphereModel::GetTroposphericDelay(uint64_t a1, int a2, uint64_t a3, uint64_t a4, double *a5, char a6, float64x2_t *a7, double a8)
{
  uint64_t v80 = *MEMORY[0x1E4F143B8];
  if (!*(unsigned char *)(a1 + 48)) {
    return 1;
  }
  int v25 = a2;
  double v26 = a8;
  float64x2_t v27 = *(float64x2_t *)a3;
  uint64_t v28 = *(void *)(a3 + 16);
  long long v29 = *(_OWORD *)a4;
  uint64_t v30 = *(void *)(a4 + 16);
  char v31 = a6;
  long double v32 = fmod((a8 + -432000.0) / 86400.0 + ((double)a2 + -1564.0) * 7.0, 365.25);
  if (a6)
  {
    v34[2] = 0x3EE845C8A0CE5129;
    uint64_t result = cnnavigation::ECEFToLLA((float64x2_t *)a3, 1, v33, 1, (uint64_t)&v75);
    long long v35 = v75;
    long long v36 = v76;
    long long v37 = v77;
    long long v38 = v78;
    uint64_t v39 = v79;
    if (result) {
      return result;
    }
  }
  else
  {
    uint64_t result = cnnavigation::ECEFToLLA((float64x2_t *)a3, 1, v33, 0, (uint64_t)&v75);
    if (result) {
      return result;
    }
  }
  if (v31)
  {
    uint64_t result = cnnavigation::SatElAz(a3, a4, 1, (uint64_t)v34, 1, (uint64_t)&v75);
    long long v40 = v75;
    long long v41 = v76;
    long long v42 = v77;
    if (result) {
      return result;
    }
  }
  else
  {
    uint64_t result = cnnavigation::SatElAz(a3, a4, 1, (uint64_t)v34, 0, (uint64_t)&v75);
    if (result) {
      return result;
    }
  }
  if (cnnavigation::ParameterizedTroposphereModel::GetOrthometricHeight(a1, (uint64_t)&v25)) {
    return 0xFFFFFFFFLL;
  }
  if (cnnavigation::ParameterizedTroposphereModel::GetCurrentWeather(a1, (uint64_t)&v25)) {
    return 1;
  }
  if (v31)
  {
    sub_18DEFD33C(&v46, (double *)&v75, v43, v44, v45);
    float64x2_t v53 = vmlaq_n_f64(vmlaq_n_f64(vmulq_n_f64(v49, *((double *)&v75 + 1)), v47, *(double *)&v75), v51, *(double *)&v76);
    float64x2_t v54 = vmlaq_n_f64(vmlaq_n_f64(vmulq_n_f64(v50, *((double *)&v75 + 1)), v48, *(double *)&v75), v52, *(double *)&v76);
  }
  else
  {
    double v15 = v44;
    double v16 = v45;
    double v17 = v43 / 100.0;
    double v46 = (v17 * 0.00000314 + 1.00062 + (v15 + -273.15) * 0.00000056 * (v15 + -273.15))
        * (v16
         / 100.0
         * (exp(v44 * -0.019121316 + v44 * 0.000012378847 * v44 + 33.9371105 + -6343.1645 / v44)
          * 0.01))
        * 100.0;
  }
  if (cnnavigation::ParameterizedTroposphereModel::GetZenithDelays(a1, (uint64_t)&v25)
    || cnnavigation::ParameterizedTroposphereModel::GetMappingFunctions(a1, (uint64_t)&v25))
  {
    return 1;
  }
  double v18 = v55;
  double v19 = v65;
  double v20 = v56;
  double v21 = v66;
  *a5 = v56 * v66 + v55 * v65;
  uint64_t result = 0;
  if (v31)
  {
    float64x2_t v22 = vaddq_f64(vmlaq_n_f64(vmulq_n_f64(v58, v19), v68, v18), vmlaq_n_f64(vmulq_n_f64(v62, v21), v72, v20));
    float64x2_t v23 = v69;
    float64x2_t v24 = v59;
    *a7 = vaddq_f64(vmlaq_n_f64(vmulq_n_f64(v57, v19), v67, v18), vmlaq_n_f64(vmulq_n_f64(v61, v21), v71, v20));
    a7[1] = v22;
    a7[2] = vaddq_f64(vmlaq_n_f64(vmulq_n_f64(v24, v19), v23, v18), vmlaq_n_f64(vmulq_n_f64(v63, v21), v73, v20));
    a7[3].f64[0] = v19 * v60 + v18 * v70 + v21 * v64 + v20 * v74;
  }
  return result;
}

uint64_t cnnavigation::ParameterizedTroposphereModel::GetTroposphericDelay(uint64_t a1, int a2, uint64_t a3, uint64_t a4, double *a5, float64x2_t *a6, double a7)
{
  return cnnavigation::ParameterizedTroposphereModel::GetTroposphericDelay(a1, a2, a3, a4, a5, 1, a6, a7);
}

void sub_18DEFD33C(double *a1, double *a2, double a3, double a4, double a5)
{
  double v9 = a3 / 100.0;
  double v10 = exp(a4 * -0.019121316 + a4 * 0.000012378847 * a4 + 33.9371105 + -6343.1645 / a4) * 0.01;
  double v11 = v9 * 0.00000314 + 1.00062 + (a4 + -273.15) * 0.00000056 * (a4 + -273.15);
  double v12 = v11 * (a5 / 100.0 * v10);
  *a1 = v12 * 100.0;
  if (a2)
  {
    double v13 = v11 * v10 / 100.0;
    double v14 = v12 / v11;
    *a2 = v14 * 100.0 * 0.00000314 * 0.01;
    a2[1] = ((a4 + -273.15) * 0.00000112 * v14
           + v12 / v10 * ((a4 * 0.000024757694 + -0.019121316 + 6343.1645 / (a4 * a4)) * v10))
          * 100.0;
    a2[2] = v13 * 100.0;
  }
}

void *sub_18DEFD488(void *result)
{
  result[1] = &unk_1EDD0B148;
  result[5] = &unk_1EDD0A858;
  *uint64_t result = &unk_1EDD0AA90;
  return result;
}

void sub_18DEFD4E8(void *a1)
{
  a1[1] = &unk_1EDD0B148;
  a1[5] = &unk_1EDD0A858;
  *a1 = &unk_1EDD0AA90;
  JUMPOUT(0x192FA6240);
}

uint64_t sub_18DEFD558(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 48);
}

void *sub_18DEFD560(void *result)
{
  *uint64_t result = &unk_1EDD0B148;
  result[4] = &unk_1EDD0A858;
  return result;
}

void sub_18DEFD5A0(void *a1)
{
  *a1 = &unk_1EDD0B148;
  a1[4] = &unk_1EDD0A858;
  JUMPOUT(0x192FA6240);
}

uint64_t cnnavigation::GNSSDopplerShift(uint64_t a1, uint64_t a2, double *a3, uint64_t a4, uint64_t *a5, uint64_t *a6, int a7, double *a8, int8x16_t a9, int8x16_t a10, double a11)
{
  __int16 v13 = 0;
  long long v14 = 0u;
  long long v15 = 0u;
  int v16 = 0;
  uint64_t v17 = 0;
  uint64_t v18 = 0;
  int v19 = 0;
  return cnnavigation::GNSSDopplerShift(a1, (const cnnavigation::GNSSUTCParameters *)&v13, a2, a3, a4, a5, a6, a7, a9, a10, a11, a8, 0, (uint64_t)v12);
}

uint64_t cnnavigation::GNSSDopplerShift(uint64_t a1, const cnnavigation::GNSSUTCParameters *a2, uint64_t a3, double *a4, uint64_t a5, uint64_t *a6, uint64_t *a7, int a8, int8x16_t a9, int8x16_t a10, double a11, double *a12, unsigned __int8 a13, uint64_t a14)
{
  if (*(double *)a9.i64 <= 0.0 || (a9.i64[0] & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL) {
    return 0xFFFFFFFFLL;
  }
  uint64_t v75 = v17;
  uint64_t v76 = v16;
  uint64_t v77 = v14;
  uint64_t v78 = v15;
  uint64_t v27 = 0;
  while ((*(void *)(a3 + v27) & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000)
  {
    v27 += 8;
    if (v27 == 24)
    {
      uint64_t v28 = 0;
      while ((*(void *)&a4[v28] & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000)
      {
        if (++v28 == 3)
        {
          if ((a10.i64[0] & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL
            || (*(void *)&a11 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL)
          {
            return 0xFFFFFFFFLL;
          }
          __n128 v60 = (__n128)a9;
          double v73 = 0.0;
          double v74 = 0.0;
          a9.i64[0] = a10.i64[0];
          CNTimeSpan::SetTimeSpan((uint64_t *)&v73, 0, a9, a10);
          v72[0] = CNTimeSpan::operator-(a1, &v73, v29, v30);
          v72[1] = v31;
          double v71 = 0.0;
          double v70 = 0.0;
          float64x2_t v69 = 0u;
          long long v68 = 0u;
          if (a8)
          {
            int8x16_t v33 = (int8x16_t)v60;
            if (a8 != 1) {
              return 0xFFFFFFFFLL;
            }
            int v34 = 2;
          }
          else
          {
            int v34 = 1;
            int8x16_t v33 = (int8x16_t)v60;
          }
          if (a13)
          {
            uint64_t result = cnnavigation::GNSSTimeOfFlight((uint64_t)v72, (uint64_t)a2, a3, a5, v34, a6, 1, a7, v33, v32, &v71, 1u, (uint64_t)&v68);
            if (result) {
              return result;
            }
            double v67 = 0.0;
            memset(v66, 0, sizeof(v66));
            long long v64 = 0u;
            float64x2_t v65 = 0u;
            uint64_t result = cnnavigation::GNSSTimeOfFlightRate((uint64_t)v72, a2, a3, a4, a5, v34, a6, 1, v60.n128_f64[0], v36, a7, &v67, 1, (uint64_t)&v64);
          }
          else
          {
            uint64_t result = cnnavigation::GNSSTimeOfFlight((uint64_t)v72, (uint64_t)a2, a3, a5, v34, a6, 1, a7, v33, v32, &v71, 0, (uint64_t)&v73);
            if (result) {
              return result;
            }
            double v67 = 0.0;
            memset(v66, 0, sizeof(v66));
            long long v64 = 0u;
            float64x2_t v65 = 0u;
            uint64_t result = cnnavigation::GNSSTimeOfFlightRate((uint64_t)v72, a2, a3, a4, a5, v34, a6, 1, v60.n128_f64[0], v39, a7, &v67, 0, (uint64_t)&v73);
          }
          if (!result)
          {
            double v40 = v67;
            double v63 = 0.0;
            *(double *)v37.i64 = v71;
            v61[0] = 0;
            v61[1] = 0;
            CNTimeSpan::SetTimeSpan(v61, 0, v37, v38);
            v62[0] = CNTimeSpan::operator-((uint64_t)v72, v61, v41, v42);
            v62[1] = v43;
            uint64_t result = (*(uint64_t (**)(uint64_t, void *, const cnnavigation::GNSSUTCParameters *, double *, void, double *, __n128))(*(void *)a5 + 136))(a5, v62, a2, &v63, a13, &v73, v60);
            if (!result)
            {
              double v44 = v63;
              double v45 = 1.0 - a11 - v40;
              double v46 = a11 + v40 * (1.0 - a11);
              double v47 = 1.0 - v45 * v63;
              double v48 = v45 * v63 - v46 / v47;
              *a12 = v48 * v60.n128_f64[0];
              if (a13)
              {
                double v49 = 1.0 - v46 / (v47 * v47);
                double v50 = (v40 + -1.0) / v47;
                double v51 = (a11 + -1.0) / v47;
                double v52 = *(double *)&v64;
                double v53 = v45 * (v73 * (1.0 - *(double *)&v68)) - v44 * *(double *)&v64;
                double v54 = -v73;
                double v55 = v66[0].f64[0];
                double v56 = v45 * -(v73 * v70) - v44 * v66[0].f64[0];
                double v57 = v66[1].f64[1];
                double v58 = -(v44 * v66[1].f64[1]);
                double v59 = v48
                    + v60.n128_f64[0]
                    * (v51 * *((double *)&v64 + 1)
                     + v49 * (v45 * (v74 - v73 * *((double *)&v68 + 1)) - v44 * *((double *)&v64 + 1)));
                *(double *)a14 = (v51 * *(double *)&v64 + v49 * v53) * v60.n128_f64[0];
                *(double *)(a14 + 8) = v59;
                *(float64x2_t *)(a14 + 16) = vmulq_n_f64(vmlaq_n_f64(vmulq_n_f64(v65, v51), vmlsq_lane_f64(vmulq_n_f64(vmulq_n_f64(v69, v54), v45), v65, v44, 0), v49), v60.n128_f64[0]);
                *(double *)(a14 + 32) = (v51 * v55 + v49 * v56) * v60.n128_f64[0];
                *(float64x2_t *)(a14 + 40) = vmulq_n_f64(vmlaq_n_f64(vmulq_n_f64(*(float64x2_t *)((char *)v66 + 8), v51), vmulq_n_f64(*(float64x2_t *)((char *)v66 + 8), -v44), v49), v60.n128_f64[0]);
                *(double *)(a14 + 56) = (v51 * v57 + v49 * v58) * v60.n128_f64[0];
                *(double *)(a14 + 64) = (v49 * -v53 - v51 * v52) * v60.n128_f64[0];
                *(double *)(a14 + 72) = (v50 - v49 * v44) * v60.n128_f64[0];
              }
            }
          }
          return result;
        }
      }
      return 0xFFFFFFFFLL;
    }
  }
  return 0xFFFFFFFFLL;
}

uint64_t cnnavigation::GNSSDopplerShift(uint64_t a1, uint64_t a2, double *a3, uint64_t a4, uint64_t *a5, uint64_t *a6, int a7, double *a8, int8x16_t a9, int8x16_t a10, double a11, uint64_t a12)
{
  __int16 v13 = 0;
  long long v14 = 0u;
  long long v15 = 0u;
  int v16 = 0;
  uint64_t v17 = 0;
  uint64_t v18 = 0;
  int v19 = 0;
  return cnnavigation::GNSSDopplerShift(a1, (const cnnavigation::GNSSUTCParameters *)&v13, a2, a3, a4, a5, a6, a7, a9, a10, a11, a8, 1u, a12);
}

uint64_t cnnavigation::GNSSDopplerShift(uint64_t a1, const cnnavigation::GNSSUTCParameters *a2, uint64_t a3, double *a4, uint64_t a5, uint64_t *a6, uint64_t *a7, int a8, int8x16_t a9, int8x16_t a10, double a11, double *a12)
{
  return cnnavigation::GNSSDopplerShift(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, 0, (uint64_t)v13);
}

uint64_t cnnavigation::GNSSDopplerShift(uint64_t a1, const cnnavigation::GNSSUTCParameters *a2, uint64_t a3, double *a4, uint64_t a5, uint64_t *a6, uint64_t *a7, int a8, int8x16_t a9, int8x16_t a10, double a11, double *a12, uint64_t a13)
{
  return cnnavigation::GNSSDopplerShift(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, 1u, a13);
}

uint64_t cnnavigation::GPSDopplerShift(uint64_t a1, double *a2, double *a3, uint64_t a4, uint64_t a5, uint64_t a6, double *a7, double a8, double a9, double a10, double a11)
{
  return cnnavigation::GPSDopplerShift(a1, a2, a3, a4, a5, a6, a7, 0, a8, a9, a10, a11, (uint64_t)v12);
}

uint64_t cnnavigation::GPSDopplerShift(uint64_t a1, double *a2, double *a3, uint64_t a4, uint64_t a5, uint64_t a6, double *a7, int a8, double a9, double a10, double a11, double a12, uint64_t a13)
{
  double v22 = a9 - a11;
  double v51 = 0.0;
  if (a8)
  {
    uint64_t result = cnnavigation::GPSTimeOfFlight(a1, a2, a4, a5, a6, &v51, 1, v52, a9 - a11, a10);
    if (result) {
      return result;
    }
    double v50 = 0.0;
    uint64_t result = cnnavigation::GPSTimeOfFlightRate(a1, a2, a3, a4, a5, a6, &v50, 1, v22, a10, &v44);
  }
  else
  {
    uint64_t result = cnnavigation::GPSTimeOfFlight(a1, a2, a4, a5, a6, &v51, 0, v52, a9 - a11, a10);
    if (result) {
      return result;
    }
    double v50 = 0.0;
    uint64_t result = cnnavigation::GPSTimeOfFlightRate(a1, a2, a3, a4, a5, a6, &v50, 0, v22, a10, v52);
  }
  if (!result)
  {
    double v24 = v50;
    double v43 = 0.0;
    if (cnnavigation::GPSSatelliteClockOffsetRate(a1, a4, &v43, a8, (uint64_t)v42, v22 - v51))
    {
      return 0xFFFFFFFFLL;
    }
    else
    {
      double v25 = v43;
      double v26 = 1.0 - a12 - v24;
      double v27 = a12 + v24 * (1.0 - a12);
      double v28 = 1.0 - v26 * v43;
      double v29 = v26 * v43 - v27 / v28;
      *a7 = v29 * a10;
      uint64_t result = 0;
      if (a8)
      {
        double v30 = 1.0 - v27 / (v28 * v28);
        double v31 = (v24 + -1.0) / v28;
        double v32 = (a12 + -1.0) / v28;
        double v33 = v26 * (v42[0] * (1.0 - v52[0])) - v25 * v44;
        double v34 = -v42[0];
        double v35 = v47;
        double v36 = v26 * -(v42[0] * v54) - v25 * v47;
        double v37 = v49;
        double v38 = -(v25 * v49);
        double v39 = v32 * v44;
        double v40 = v29 + a10 * (v32 * v45 + v30 * (v26 * (v42[1] - v42[0] * v52[1]) - v25 * v45));
        *(double *)a13 = (v32 * v44 + v30 * v33) * a10;
        *(double *)(a13 + 8) = v40;
        *(float64x2_t *)(a13 + 16) = vmulq_n_f64(vmlaq_n_f64(vmulq_n_f64(v46, v32), vmlsq_lane_f64(vmulq_n_f64(vmulq_n_f64(v53, v34), v26), v46, v25, 0), v30), a10);
        *(double *)(a13 + 32) = (v32 * v35 + v30 * v36) * a10;
        *(float64x2_t *)(a13 + 40) = vmulq_n_f64(vmlaq_n_f64(vmulq_n_f64(v48, v32), vmulq_n_f64(v48, -v25), v30), a10);
        *(double *)(a13 + 56) = (v32 * v37 + v30 * v38) * a10;
        *(double *)(a13 + 64) = (v30 * -v33 - v39) * a10;
        *(double *)(a13 + 72) = (v31 - v30 * v25) * a10;
      }
    }
  }
  return result;
}

uint64_t cnnavigation::GPSDopplerShift(uint64_t a1, double *a2, double *a3, uint64_t a4, uint64_t a5, uint64_t a6, double *a7, uint64_t a8, double a9, double a10, double a11, double a12)
{
  return cnnavigation::GPSDopplerShift(a1, a2, a3, a4, a5, a6, a7, 1, a9, a10, a11, a12, a8);
}

uint64_t cnnavigation::NORADTLEEphemerides::NORADTLEEphemerides(uint64_t a1, const std::string *a2, std::string *a3, std::string *a4)
{
  *(void *)a1 = &unk_1EDD0AD48;
  *(unsigned char *)(a1 + 8) = 0;
  sub_18DEDE7B0((void *)(a1 + 16), "");
  sub_18DEDE7B0((void *)(a1 + 40), "");
  sub_18DEDE7B0((void *)(a1 + 64), "");
  sub_18DEDE7B0((void *)(a1 + 88), "");
  *(_DWORD *)(a1 + 112) = 0;
  *(_WORD *)(a1 + 116) = 0;
  *(void *)(a1 + 120) = 0;
  sub_18DEDE7B0((void *)(a1 + 128), "");
  *(_DWORD *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = 0;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 336) = 0u;
  *(_OWORD *)(a1 + 352) = 0u;
  *(_OWORD *)(a1 + 368) = 0u;
  *(_OWORD *)(a1 + 384) = 0u;
  *(_OWORD *)(a1 + 400) = 0u;
  *(_OWORD *)(a1 + 416) = 0u;
  *(_OWORD *)(a1 + 432) = 0u;
  *(_OWORD *)(a1 + 448) = 0u;
  *(_OWORD *)(a1 + 457) = 0u;
  *(_OWORD *)(a1 + 480) = 0u;
  *(_OWORD *)(a1 + 496) = 0u;
  *(_OWORD *)(a1 + 512) = 0u;
  *(_OWORD *)(a1 + 528) = 0u;
  *(_OWORD *)(a1 + 544) = 0u;
  *(_OWORD *)(a1 + 560) = 0u;
  *(_OWORD *)(a1 + 576) = 0u;
  *(_OWORD *)(a1 + 592) = 0u;
  *(_OWORD *)(a1 + 608) = 0u;
  *(_OWORD *)(a1 + 624) = 0u;
  *(_OWORD *)(a1 + 640) = 0u;
  *(_OWORD *)(a1 + 656) = 0u;
  *(_OWORD *)(a1 + 672) = 0u;
  *(_OWORD *)(a1 + 688) = 0u;
  *(_OWORD *)(a1 + 704) = 0u;
  *(_OWORD *)(a1 + 720) = 0u;
  *(_OWORD *)(a1 + 736) = 0u;
  *(_OWORD *)(a1 + 752) = 0u;
  *(_OWORD *)(a1 + 768) = 0u;
  *(_OWORD *)(a1 + 784) = 0u;
  *(_OWORD *)(a1 + 800) = 0u;
  *(_OWORD *)(a1 + 816) = 0u;
  *(_OWORD *)(a1 + 832) = 0u;
  *(_OWORD *)(a1 + 848) = 0u;
  *(_OWORD *)(a1 + 864) = 0u;
  *(_OWORD *)(a1 + 880) = 0u;
  *(_OWORD *)(a1 + 896) = 0u;
  *(_OWORD *)(a1 + 912) = 0u;
  *(_OWORD *)(a1 + 928) = 0u;
  *(_OWORD *)(a1 + 944) = 0u;
  *(void *)(a1 + 960) = 0;
  *(_WORD *)(a1 + 264) = 0;
  *(_OWORD *)(a1 + 248) = 0u;
  *(_OWORD *)(a1 + 232) = 0u;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_OWORD *)(a1 + 200) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  cnnavigation::NORADTLEEphemerides::LoadNORADTLEFromStrings(a1, a2, a3, a4, v8, v9, v10, v11);
  return a1;
}

void sub_18DEFDFD4(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 151) < 0) {
    operator delete(*v6);
  }
  if (*(char *)(v1 + 111) < 0) {
    operator delete(*v5);
  }
  if (*(char *)(v1 + 87) < 0) {
    operator delete(*v4);
  }
  if (*(char *)(v1 + 63) < 0) {
    operator delete(*v3);
  }
  if (*(char *)(v1 + 39) < 0) {
    operator delete(*v2);
  }
  *(void *)uint64_t v1 = &unk_1EDD0A9B8;
  _Unwind_Resume(exception_object);
}

BOOL cnnavigation::NORADTLEEphemerides::LoadNORADTLEFromStrings(uint64_t a1, const std::string *a2, std::string *__str, std::string *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v12 = HIBYTE(__str->__r_.__value_.__r.__words[2]);
  if (SHIBYTE(__str->__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::size_type size = __str->__r_.__value_.__l.__size_;
    if (size != 69)
    {
      LOWORD(__stra.__r_.__value_.__l.__data_) = 5;
      v79.__r_.__value_.__s.__data_[0] = 3;
      LOBYTE(v12) = size;
      goto LABEL_9;
    }
  }
  else if (v12 != 69)
  {
    LOWORD(__stra.__r_.__value_.__l.__data_) = 5;
    v79.__r_.__value_.__s.__data_[0] = 3;
LABEL_9:
    cnprint::CNPrinter::Print((cnprint::CNPrinter *)&__stra, (unsigned __int8 *)&v79, "LoadNORADTLEFromStrings unexpected TLE line 1 length %zu", (uint64_t)a4, a5, a6, a7, a8, v12);
    return 0;
  }
  int v14 = HIBYTE(a4->__r_.__value_.__r.__words[2]);
  if (SHIBYTE(a4->__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::size_type v15 = a4->__r_.__value_.__l.__size_;
    if (v15 != 69)
    {
      LOWORD(__stra.__r_.__value_.__l.__data_) = 5;
      v79.__r_.__value_.__s.__data_[0] = 3;
      LOBYTE(v14) = v15;
      goto LABEL_15;
    }
  }
  else if (v14 != 69)
  {
    LOWORD(__stra.__r_.__value_.__l.__data_) = 5;
    v79.__r_.__value_.__s.__data_[0] = 3;
LABEL_15:
    cnprint::CNPrinter::Print((cnprint::CNPrinter *)&__stra, (unsigned __int8 *)&v79, "LoadNORADTLEFromStrings unexpected TLE line 2 length %zu", (uint64_t)a4, a5, a6, a7, a8, v14);
    return 0;
  }
  if ((v12 & 0x80) == 0)
  {
    int v16 = __str->__r_.__value_.__s.__data_[0];
    if (v16 == 49)
    {
      std::string::size_type v17 = __str->__r_.__value_.__r.__words[0];
      goto LABEL_17;
    }
LABEL_19:
    LOWORD(__stra.__r_.__value_.__l.__data_) = 5;
    v79.__r_.__value_.__s.__data_[0] = 3;
    char v77 = v16;
    uint64_t v18 = "LoadNORADTLEFromStrings unexpected TLE line 1 character 1: %c";
LABEL_20:
    cnprint::CNPrinter::Print((cnprint::CNPrinter *)&__stra, (unsigned __int8 *)&v79, v18, (uint64_t)a4, a5, a6, a7, a8, v77);
    return 0;
  }
  std::string::size_type v17 = __str->__r_.__value_.__r.__words[0];
  int v16 = *(unsigned __int8 *)__str->__r_.__value_.__l.__data_;
  if (v16 != 49) {
    goto LABEL_19;
  }
LABEL_17:
  if ((*(unsigned char *)(v17 + 68) - 58) <= 0xF5u)
  {
    LOWORD(__stra.__r_.__value_.__l.__data_) = 5;
    v79.__r_.__value_.__s.__data_[0] = 3;
    cnprint::CNPrinter::Print((cnprint::CNPrinter *)&__stra, (unsigned __int8 *)&v79, "LoadNORADTLEFromStrings unexpected TLE line 1 character %u: %c", (uint64_t)a4, a5, a6, a7, a8, 69);
    return 0;
  }
  if ((v14 & 0x80) == 0)
  {
    int v21 = a4->__r_.__value_.__s.__data_[0];
    if (v21 == 50)
    {
      std::string::size_type v22 = a4->__r_.__value_.__r.__words[0];
      goto LABEL_27;
    }
LABEL_29:
    LOWORD(__stra.__r_.__value_.__l.__data_) = 5;
    v79.__r_.__value_.__s.__data_[0] = 3;
    cnprint::CNPrinter::Print((cnprint::CNPrinter *)&__stra, (unsigned __int8 *)&v79, "LoadNORADTLEFromStrings unexpected TLE line 2 character 1: %c", (uint64_t)a4, a5, a6, a7, a8, v21);
    return 0;
  }
  std::string::size_type v22 = a4->__r_.__value_.__r.__words[0];
  int v21 = *(unsigned __int8 *)a4->__r_.__value_.__l.__data_;
  if (v21 != 50) {
    goto LABEL_29;
  }
LABEL_27:
  if ((*(unsigned char *)(v22 + 68) - 58) <= 0xF5u)
  {
    LOWORD(__stra.__r_.__value_.__l.__data_) = 5;
    v79.__r_.__value_.__s.__data_[0] = 3;
    cnprint::CNPrinter::Print((cnprint::CNPrinter *)&__stra, (unsigned __int8 *)&v79, "LoadNORADTLEFromStrings unexpected TLE line 2 character %u: %c", (uint64_t)a4, a5, a6, a7, a8, 69);
    return 0;
  }
  std::string::basic_string(&__stra, __str, 2uLL, 5uLL, (std::allocator<char> *)&v79);
  std::string::basic_string(&v79, a4, 2uLL, 5uLL, (std::allocator<char> *)&v78);
  BOOL v23 = sub_18DEFEEBC((unsigned __int8 *)&__stra, (unsigned __int8 *)&v79);
  if (SHIBYTE(v79.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v79.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(__stra.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__stra.__r_.__value_.__l.__data_);
  }
  if (!v23)
  {
    LOWORD(__stra.__r_.__value_.__l.__data_) = 5;
    v79.__r_.__value_.__s.__data_[0] = 3;
    uint64_t v18 = "LoadNORADTLEFromStrings lines 1 & 2 satellite number mismatch";
    goto LABEL_20;
  }
  unsigned int v24 = cnnavigation::NORADTLEEphemerides::TLECheckSum(__str);
  if (v24 >= 0xB)
  {
    LOWORD(__stra.__r_.__value_.__l.__data_) = 5;
    v79.__r_.__value_.__s.__data_[0] = 3;
    uint64_t v18 = "LoadNORADTLEFromStrings TLE line 1 checksum computation failed.";
    goto LABEL_20;
  }
  int v25 = *(char *)(__str->__r_.__value_.__r.__words[0] + 68);
  if (v24 + 48 != v25)
  {
    LOWORD(__stra.__r_.__value_.__l.__data_) = 5;
    v79.__r_.__value_.__s.__data_[0] = 3;
    cnprint::CNPrinter::Print((cnprint::CNPrinter *)&__stra, (unsigned __int8 *)&v79, "LoadNORADTLEFromStrings TLE line 1 checksum mismatch: %c vs. %c.", (uint64_t)a4, a5, a6, a7, a8, v25);
    return 0;
  }
  unsigned int v26 = cnnavigation::NORADTLEEphemerides::TLECheckSum(a4);
  if (v26 >= 0xB)
  {
    LOWORD(__stra.__r_.__value_.__l.__data_) = 5;
    v79.__r_.__value_.__s.__data_[0] = 3;
    uint64_t v18 = "LoadNORADTLEFromStrings TLE line 2 checksum computation failed.";
    goto LABEL_20;
  }
  int v27 = *(char *)(a4->__r_.__value_.__r.__words[0] + 68);
  if (v26 + 48 != v27)
  {
    LOWORD(__stra.__r_.__value_.__l.__data_) = 5;
    v79.__r_.__value_.__s.__data_[0] = 3;
    cnprint::CNPrinter::Print((cnprint::CNPrinter *)&__stra, (unsigned __int8 *)&v79, "LoadNORADTLEFromStrings TLE line 2 checksum mismatch: %c vs. %c.", (uint64_t)a4, a5, a6, a7, a8, v27);
    return 0;
  }
  *(unsigned char *)(a1 + 8) = 0;
  std::string::operator=((std::string *)(a1 + 88), a2);
  sub_18DEDE7B0(&__stra, "");
  sub_18DEDE7B0(&v79, "");
  std::string::basic_string(&v78, __str, 2uLL, 5uLL, (std::allocator<char> *)&v81);
  if (SHIBYTE(__stra.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__stra.__r_.__value_.__l.__data_);
  }
  std::string __stra = v78;
  *(_DWORD *)(a1 + 112) = std::stoul(&__stra, 0, 10);
  if (SHIBYTE(__str->__r_.__value_.__r.__words[2]) < 0) {
    int v28 = *(unsigned __int8 *)(__str->__r_.__value_.__r.__words[0] + 7);
  }
  else {
    int v28 = __str->__r_.__value_.__s.__data_[7];
  }
  BOOL v29 = v28 == 85 || v28 == 117;
  *(unsigned char *)(a1 + 116) = !v29;
  std::string::basic_string(&v78, __str, 9uLL, 2uLL, (std::allocator<char> *)&v81);
  if (SHIBYTE(__stra.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__stra.__r_.__value_.__l.__data_);
  }
  std::string __stra = v78;
  std::string::size_type v30 = HIBYTE(v78.__r_.__value_.__r.__words[2]);
  double v31 = (std::string *)v78.__r_.__value_.__r.__words[0];
  p_stra = &__stra;
  if ((v78.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
  {
    std::string::size_type v30 = v78.__r_.__value_.__l.__size_;
    p_stra = (std::string *)v78.__r_.__value_.__r.__words[0];
  }
  if (!v30) {
    goto LABEL_62;
  }
  uint64_t v33 = 0;
  while (p_stra->__r_.__value_.__s.__data_[v33] == 32)
  {
    if (v30 == ++v33) {
      goto LABEL_62;
    }
  }
  if (v33 == -1)
  {
LABEL_62:
    if (SHIBYTE(v78.__r_.__value_.__r.__words[2]) < 0)
    {
      __stra.__r_.__value_.__l.__size_ = 1;
    }
    else
    {
      *((unsigned char *)&__stra.__r_.__value_.__s + 23) = 1;
      double v31 = &__stra;
    }
    LOWORD(v31->__r_.__value_.__l.__data_) = 48;
  }
  unsigned int v34 = std::stoul(&__stra, 0, 10);
  if (v34 >= 0x39) {
    int v35 = 1900;
  }
  else {
    int v35 = 2000;
  }
  *(_DWORD *)(a1 + 120) = v35 + v34;
  std::string::basic_string(&v78, __str, 0xBuLL, 3uLL, (std::allocator<char> *)&v81);
  if (SHIBYTE(__stra.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__stra.__r_.__value_.__l.__data_);
  }
  std::string __stra = v78;
  std::string::size_type v36 = HIBYTE(v78.__r_.__value_.__r.__words[2]);
  double v37 = (std::string *)v78.__r_.__value_.__r.__words[0];
  double v38 = &__stra;
  if ((v78.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
  {
    std::string::size_type v36 = v78.__r_.__value_.__l.__size_;
    double v38 = (std::string *)v78.__r_.__value_.__r.__words[0];
  }
  if (!v36) {
    goto LABEL_79;
  }
  uint64_t v39 = 0;
  while (v38->__r_.__value_.__s.__data_[v39] == 32)
  {
    if (v36 == ++v39) {
      goto LABEL_79;
    }
  }
  if (v39 == -1)
  {
LABEL_79:
    if (SHIBYTE(v78.__r_.__value_.__r.__words[2]) < 0)
    {
      __stra.__r_.__value_.__l.__size_ = 1;
    }
    else
    {
      *((unsigned char *)&__stra.__r_.__value_.__s + 23) = 1;
      double v37 = &__stra;
    }
    LOWORD(v37->__r_.__value_.__l.__data_) = 48;
  }
  *(_DWORD *)(a1 + 124) = std::stoul(&__stra, 0, 10);
  std::string::basic_string(&v78, __str, 0xEuLL, 3uLL, (std::allocator<char> *)&v81);
  double v40 = (void **)(a1 + 128);
  if (*(char *)(a1 + 151) < 0) {
    operator delete(*v40);
  }
  *(_OWORD *)double v40 = *(_OWORD *)&v78.__r_.__value_.__l.__data_;
  *(void *)(a1 + 144) = *((void *)&v78.__r_.__value_.__l + 2);
  std::string::basic_string(&v78, __str, 0x12uLL, 2uLL, (std::allocator<char> *)&v81);
  if (SHIBYTE(__stra.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__stra.__r_.__value_.__l.__data_);
  }
  std::string __stra = v78;
  unsigned int v41 = std::stoul(&__stra, 0, 10);
  if (v41 >= 0x39) {
    int v42 = 1900;
  }
  else {
    int v42 = 2000;
  }
  *(_DWORD *)(a1 + 152) = v42 + v41;
  std::string::basic_string(&v78, __str, 0x14uLL, 0xCuLL, (std::allocator<char> *)&v81);
  if (SHIBYTE(__stra.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__stra.__r_.__value_.__l.__data_);
  }
  std::string __stra = v78;
  *(double *)(a1 + 160) = std::stod(&__stra, 0);
  std::string::basic_string(&v78, __str, 0x21uLL, 0xAuLL, (std::allocator<char> *)&v81);
  if (SHIBYTE(__stra.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__stra.__r_.__value_.__l.__data_);
  }
  std::string __stra = v78;
  double v43 = std::stod(&__stra, 0);
  *(double *)(a1 + 232) = v43 + v43;
  std::string::basic_string(&v78, __str, 0x2CuLL, 6uLL, (std::allocator<char> *)&v81);
  if (SHIBYTE(__stra.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__stra.__r_.__value_.__l.__data_);
  }
  std::string __stra = v78;
  std::string::size_type v44 = HIBYTE(v78.__r_.__value_.__r.__words[2]);
  double v45 = (std::string *)v78.__r_.__value_.__r.__words[0];
  float64x2_t v46 = &__stra;
  if ((v78.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
  {
    std::string::size_type v44 = v78.__r_.__value_.__l.__size_;
    float64x2_t v46 = (std::string *)v78.__r_.__value_.__r.__words[0];
  }
  if (!v44) {
    goto LABEL_104;
  }
  uint64_t v47 = 0;
  while (v46->__r_.__value_.__s.__data_[v47] == 32)
  {
    if (v44 == ++v47) {
      goto LABEL_104;
    }
  }
  if (v47 == -1)
  {
LABEL_104:
    if (SHIBYTE(v78.__r_.__value_.__r.__words[2]) < 0)
    {
      __stra.__r_.__value_.__l.__size_ = 1;
    }
    else
    {
      *((unsigned char *)&__stra.__r_.__value_.__s + 23) = 1;
      double v45 = &__stra;
    }
    LOWORD(v45->__r_.__value_.__l.__data_) = 48;
  }
  std::string::basic_string(&v78, __str, 0x32uLL, 2uLL, (std::allocator<char> *)&v81);
  if (SHIBYTE(v79.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v79.__r_.__value_.__l.__data_);
  }
  std::string v79 = v78;
  std::string::size_type v48 = HIBYTE(v78.__r_.__value_.__r.__words[2]);
  double v49 = (std::string *)v78.__r_.__value_.__r.__words[0];
  double v50 = &v79;
  if ((v78.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
  {
    std::string::size_type v48 = v78.__r_.__value_.__l.__size_;
    double v50 = (std::string *)v78.__r_.__value_.__r.__words[0];
  }
  if (!v48) {
    goto LABEL_118;
  }
  uint64_t v51 = 0;
  while (v50->__r_.__value_.__s.__data_[v51] == 32)
  {
    if (v48 == ++v51) {
      goto LABEL_118;
    }
  }
  if (v51 == -1)
  {
LABEL_118:
    if (SHIBYTE(v78.__r_.__value_.__r.__words[2]) < 0)
    {
      v79.__r_.__value_.__l.__size_ = 1;
    }
    else
    {
      *((unsigned char *)&v79.__r_.__value_.__s + 23) = 1;
      double v49 = &v79;
    }
    LOWORD(v49->__r_.__value_.__l.__data_) = 48;
  }
  double v52 = std::stod(&__stra, 0);
  int v53 = std::stoi(&v79, 0, 10);
  *(double *)(a1 + 240) = v52 * 6.0 * __exp10((double)(v53 - 5));
  std::string::basic_string(&v78, __str, 0x35uLL, 6uLL, (std::allocator<char> *)&v81);
  if (SHIBYTE(__stra.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__stra.__r_.__value_.__l.__data_);
  }
  std::string __stra = v78;
  std::string::size_type v54 = HIBYTE(v78.__r_.__value_.__r.__words[2]);
  double v55 = (std::string *)v78.__r_.__value_.__r.__words[0];
  double v56 = &__stra;
  if ((v78.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
  {
    std::string::size_type v54 = v78.__r_.__value_.__l.__size_;
    double v56 = (std::string *)v78.__r_.__value_.__r.__words[0];
  }
  if (!v54) {
    goto LABEL_132;
  }
  uint64_t v57 = 0;
  while (v56->__r_.__value_.__s.__data_[v57] == 32)
  {
    if (v54 == ++v57) {
      goto LABEL_132;
    }
  }
  if (v57 == -1)
  {
LABEL_132:
    if (SHIBYTE(v78.__r_.__value_.__r.__words[2]) < 0)
    {
      __stra.__r_.__value_.__l.__size_ = 1;
    }
    else
    {
      *((unsigned char *)&__stra.__r_.__value_.__s + 23) = 1;
      double v55 = &__stra;
    }
    LOWORD(v55->__r_.__value_.__l.__data_) = 48;
  }
  std::string::basic_string(&v78, __str, 0x3BuLL, 2uLL, (std::allocator<char> *)&v81);
  if (SHIBYTE(v79.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v79.__r_.__value_.__l.__data_);
  }
  std::string v79 = v78;
  std::string::size_type v58 = HIBYTE(v78.__r_.__value_.__r.__words[2]);
  double v59 = (std::string *)v78.__r_.__value_.__r.__words[0];
  __n128 v60 = &v79;
  if ((v78.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
  {
    std::string::size_type v58 = v78.__r_.__value_.__l.__size_;
    __n128 v60 = (std::string *)v78.__r_.__value_.__r.__words[0];
  }
  if (!v58) {
    goto LABEL_146;
  }
  uint64_t v61 = 0;
  while (v60->__r_.__value_.__s.__data_[v61] == 32)
  {
    if (v58 == ++v61) {
      goto LABEL_146;
    }
  }
  if (v61 == -1)
  {
LABEL_146:
    if (SHIBYTE(v78.__r_.__value_.__r.__words[2]) < 0)
    {
      v79.__r_.__value_.__l.__size_ = 1;
    }
    else
    {
      *((unsigned char *)&v79.__r_.__value_.__s + 23) = 1;
      double v59 = &v79;
    }
    LOWORD(v59->__r_.__value_.__l.__data_) = 48;
  }
  double v62 = std::stod(&__stra, 0);
  int v63 = std::stoi(&v79, 0, 10);
  *(double *)(a1 + 192) = v62 * __exp10((double)(v63 - 5));
  int v64 = *(char *)(__str->__r_.__value_.__r.__words[0] + 62);
  unsigned int v65 = v64 - 49;
  char v66 = v64 - 48;
  if (v65 >= 5) {
    char v66 = 0;
  }
  *(unsigned char *)(a1 + 117) = v66;
  std::string::basic_string(&v78, __str, 0x40uLL, 4uLL, (std::allocator<char> *)&v81);
  if (SHIBYTE(__stra.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__stra.__r_.__value_.__l.__data_);
  }
  std::string __stra = v78;
  *(_DWORD *)(a1 + 188) = std::stoul(&__stra, 0, 10);
  std::string::basic_string(&v78, a4, 8uLL, 8uLL, (std::allocator<char> *)&v81);
  if (SHIBYTE(__stra.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__stra.__r_.__value_.__l.__data_);
  }
  std::string __stra = v78;
  *(double *)(a1 + 208) = std::stod(&__stra, 0);
  std::string::basic_string(&v78, a4, 0x11uLL, 8uLL, (std::allocator<char> *)&v81);
  if (SHIBYTE(__stra.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__stra.__r_.__value_.__l.__data_);
  }
  std::string __stra = v78;
  *(double *)(a1 + 256) = std::stod(&__stra, 0);
  std::string::basic_string(&v78, a4, 0x1AuLL, 7uLL, (std::allocator<char> *)&v81);
  if (SHIBYTE(__stra.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__stra.__r_.__value_.__l.__data_);
  }
  std::string __stra = v78;
  *(double *)(a1 + 200) = std::stod(&__stra, 0) * 0.0000001;
  std::string::basic_string(&v78, a4, 0x22uLL, 8uLL, (std::allocator<char> *)&v81);
  if (SHIBYTE(__stra.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__stra.__r_.__value_.__l.__data_);
  }
  std::string __stra = v78;
  *(double *)(a1 + 248) = std::stod(&__stra, 0);
  std::string::basic_string(&v78, a4, 0x2BuLL, 8uLL, (std::allocator<char> *)&v81);
  if (SHIBYTE(__stra.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__stra.__r_.__value_.__l.__data_);
  }
  std::string __stra = v78;
  *(double *)(a1 + 216) = std::stod(&__stra, 0);
  std::string::basic_string(&v78, a4, 0x34uLL, 0xBuLL, (std::allocator<char> *)&v81);
  if (SHIBYTE(__stra.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__stra.__r_.__value_.__l.__data_);
  }
  std::string __stra = v78;
  *(double *)(a1 + 224) = std::stod(&__stra, 0);
  std::string::basic_string(&v78, a4, 0x3FuLL, 5uLL, (std::allocator<char> *)&v81);
  if (SHIBYTE(__stra.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__stra.__r_.__value_.__l.__data_);
  }
  std::string __stra = v78;
  *(_DWORD *)(a1 + 184) = std::stoul(&__stra, 0, 10);
  if (SHIBYTE(v79.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v79.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(__stra.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__stra.__r_.__value_.__l.__data_);
  }
  unsigned int v67 = *(_DWORD *)(a1 + 152);
  double v68 = *(double *)(a1 + 160);
  __stra.__r_.__value_.__r.__words[0] = __PAIR64__(vcvtmd_s64_f64(v68), v67);
  *(double *)&__stra.__r_.__value_.__l.__size_ = v68 - floor(v68);
  cnnavigation::DayOfYearTimeToJulianTime((double *)&__stra, a1 + 168);
  BOOL v19 = v74 == 0;
  if (v74)
  {
    LOWORD(v79.__r_.__value_.__l.__data_) = 5;
    v78.__r_.__value_.__s.__data_[0] = 3;
    cnprint::CNPrinter::Print((cnprint::CNPrinter *)&v79, (unsigned __int8 *)&v78, "LoadNORADTLEFromStrings failed time conversion: doy,%d,%d,%.3lf", v69, v70, v71, v72, v73, v67);
  }
  else
  {
    float64x2_t v75 = *(float64x2_t *)(a1 + 224);
    float64x2_t v76 = vmulq_f64(*(float64x2_t *)(a1 + 208), (float64x2_t)vdupq_n_s64(0x3F91DF46A2529D39uLL));
    *(double *)(a1 + 256) = *(double *)(a1 + 256) * 0.0174532925;
    *(float64x2_t *)(a1 + 208) = v76;
    *(float64x2_t *)(a1 + 224) = vmulq_f64(v75, (float64x2_t)xmmword_18E1F0DB0);
    *(float64x2_t *)(a1 + 240) = vmulq_f64(*(float64x2_t *)(a1 + 240), (float64x2_t)xmmword_18E1F0DC0);
    *(unsigned char *)(a1 + 8) = 1;
  }
  return v19;
}

#error "18DEFEE44: call analysis failed (funcsize=38)"

void sub_18DEFEE80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
}

uint64_t cnnavigation::NORADTLEEphemerides::IsValid(cnnavigation::NORADTLEEphemerides *this)
{
  return *((unsigned __int8 *)this + 8);
}

BOOL sub_18DEFEEBC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2 = a1[23];
  if ((v2 & 0x80u) == 0) {
    uint64_t v3 = a1[23];
  }
  else {
    uint64_t v3 = *((void *)a1 + 1);
  }
  uint64_t v4 = a2[23];
  int v5 = (char)v4;
  if ((v4 & 0x80u) != 0) {
    uint64_t v4 = *((void *)a2 + 1);
  }
  if (v3 != v4) {
    return 0;
  }
  if (v5 < 0) {
    a2 = *(unsigned __int8 **)a2;
  }
  if ((v2 & 0x80) != 0) {
    return memcmp(*(const void **)a1, a2, *((void *)a1 + 1)) == 0;
  }
  if (!a1[23]) {
    return 1;
  }
  uint64_t v6 = v2 - 1;
  do
  {
    int v8 = *a1++;
    int v7 = v8;
    int v10 = *a2++;
    int v9 = v10;
    BOOL v12 = v6-- != 0;
    BOOL v13 = v7 == v9;
    BOOL v14 = v7 == v9;
  }
  while (v13 && v12);
  return v14;
}

uint64_t cnnavigation::NORADTLEEphemerides::TLECheckSum(std::string *__str)
{
  std::string::size_type size = HIBYTE(__str->__r_.__value_.__r.__words[2]);
  if ((size & 0x80u) != 0) {
    std::string::size_type size = __str->__r_.__value_.__l.__size_;
  }
  if (size != 69) {
    return 0xFFFFFFFFLL;
  }
  std::string::basic_string(&v9, __str, 0, 0x44uLL, (std::allocator<char> *)&v10);
  std::string::size_type v2 = v9.__r_.__value_.__l.__size_;
  if ((v9.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    uint64_t v3 = &v9;
  }
  else {
    uint64_t v3 = (std::string *)v9.__r_.__value_.__r.__words[0];
  }
  if ((v9.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v2 = HIBYTE(v9.__r_.__value_.__r.__words[2]);
  }
  if (v2)
  {
    int v4 = 0;
    do
    {
      int v5 = v3->__r_.__value_.__s.__data_[0];
      int v6 = v4 + v5 - 48;
      if (v5 == 45) {
        ++v4;
      }
      if ((v5 - 48) < 0xA) {
        int v4 = v6;
      }
      uint64_t v3 = (std::string *)((char *)v3 + 1);
      --v2;
    }
    while (v2);
  }
  else
  {
    int v4 = 0;
  }
  uint64_t v7 = (v4 % 10);
  if (SHIBYTE(v9.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v9.__r_.__value_.__l.__data_);
  }
  return v7;
}

char *cnnavigation::NORADTLEEphemerides::SatelliteName@<X0>(char *this@<X0>, uint64_t a2@<X8>)
{
  if (this[111] < 0) {
    return (char *)sub_18DEDE668((unsigned char *)a2, *((void **)this + 11), *((void *)this + 12));
  }
  *(_OWORD *)a2 = *(_OWORD *)(this + 88);
  *(void *)(a2 + 16) = *((void *)this + 13);
  return this;
}

uint64_t cnnavigation::NORADTLEEphemerides::SatelliteNumber(cnnavigation::NORADTLEEphemerides *this)
{
  return *((unsigned int *)this + 28);
}

uint64_t cnnavigation::NORADTLEEphemerides::GNSSFindSat(cnnavigation::NORADTLEEphemerides *a1, double *a2, cnnavigation::GNSSUTCParameters *this, long long *a4, long long *a5, void *a6)
{
  if (!*((unsigned char *)a1 + 8)) {
    return 0xFFFFFFFFLL;
  }
  if (cnnavigation::GNSSUTCParameters::IsValid(this))
  {
    if (cnnavigation::TAITime::ToJulianTime((cnnavigation::TAITime *)a2, this, (uint64_t)v66))
    {
      LOWORD(v67) = 5;
      LOBYTE(v65[0]) = 3;
      double v61 = a2[1] + (double)*(uint64_t *)a2;
      cnprint::CNPrinter::Print((cnprint::CNPrinter *)&v67, (unsigned __int8 *)v65, "NORADTLEEphemerides::GNSSFindSat failed JulianTime (UTC) conversion tai,%.3lf,sv,%hhu,t_ls,%.3lf,curr_ls,%d,fut_ls,%d", v17, v18, v19, v20, v21, SLOBYTE(v61));
      return 0xFFFFFFFFLL;
    }
  }
  else
  {
    LOWORD(v67) = 5;
    LOBYTE(v65[0]) = 2;
    cnprint::CNPrinter::Print((cnprint::CNPrinter *)&v67, (unsigned __int8 *)v65, "NORADTLEEphemerides::GNSSFindSat called with invalid UTC model", v12, v13, v14, v15, v16, v60);
    LOWORD(v67) = 0;
    long long v68 = 0u;
    long long v69 = 0u;
    int v70 = 0;
    uint64_t v71 = 0;
    uint64_t v72 = 0;
    int v73 = 0;
    *(void *)&v65[0] = cnnavigation::TAITime::ToGPSTime((cnnavigation::TAITime *)a2, (const cnnavigation::GNSSUTCParameters *)&v67);
    v65[1] = v22;
    if (cnnavigation::GPSTimeToJulianTime(v65, 0, (uint64_t)v66))
    {
      LOWORD(v67) = 5;
      LOBYTE(v64) = 3;
      *(double *)&long long v62 = a2[1] + (double)*(uint64_t *)a2;
      int v28 = "NORADTLEEphemerides::GNSSFindSat failed JulianTime conversion tai,%.3lf";
      BOOL v29 = (cnprint::CNPrinter *)&v67;
      std::string::size_type v30 = (unsigned __int8 *)&v64;
LABEL_7:
      cnprint::CNPrinter::Print(v29, v30, v28, v23, v24, v25, v26, v27, v62);
      return 0xFFFFFFFFLL;
    }
  }
  uint64_t v33 = cnnavigation::NORADTLEEphemerides::InitializeSGP4(a1);
  if (v33)
  {
    uint64_t v31 = v33;
    LOWORD(v67) = 5;
    LOBYTE(v65[0]) = 3;
    cnprint::CNPrinter::Print((cnprint::CNPrinter *)&v67, (unsigned __int8 *)v65, "NORADTLEEphemerides::GNSSFindSat InitializeSGP4 failed,code,%d", v34, v35, v36, v37, v38, v33);
  }
  else
  {
    uint64_t v39 = cnnavigation::NORADTLEEphemerides::SGP4((uint64_t)a1, (uint64_t)v66, (uint64_t)&v67, v65, v35, v36, v37, v38);
    if (v39)
    {
      uint64_t v31 = v39;
      __int16 v64 = 5;
      unsigned __int8 v63 = 3;
      cnprint::CNPrinter::Print((cnprint::CNPrinter *)&v64, &v63, "NORADTLEEphemerides::GNSSFindSat SGP4 failed,code,%d", v40, v41, v42, v43, v44, v39);
    }
    else
    {
      double v46 = cnnavigation::NORADTLEEphemerides::ECIToECEF(v39, (uint64_t)v66, &v67);
      uint64_t v47 = 0;
      *(double *)a4 = v46;
      *((void *)a4 + 1) = v48;
      *((void *)a4 + 2) = v49;
      do
      {
        *(double *)((char *)a4 + v47) = *(double *)((char *)a4 + v47) * 1000.0;
        v47 += 8;
      }
      while (v47 != 24);
      double v50 = cnnavigation::NORADTLEEphemerides::ECIToECEF(v45, (uint64_t)v66, v65);
      uint64_t v51 = 0;
      *(double *)a5 = v50;
      *((void *)a5 + 1) = v52;
      *((void *)a5 + 2) = v53;
      do
      {
        *(double *)((char *)a5 + v51) = *(double *)((char *)a5 + v51) * 1000.0;
        v51 += 8;
      }
      while (v51 != 24);
      uint64_t v54 = 0;
      double v55 = *((double *)a5 + 1);
      *(double *)a5 = *(double *)a5 + *((double *)a4 + 1) * 0.0000729211515;
      *((double *)a5 + 1) = v55 + *(double *)a4 * -0.0000729211515;
      *a6 = 0;
      a6[1] = 0;
      a6[2] = 0;
      double v56 = 0.0;
      do
      {
        if ((*(void *)((unsigned char *)a4 + v54) & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL)
        {
          __int16 v64 = 5;
          unsigned __int8 v63 = 3;
          long long v62 = *a4;
          int v28 = "NORADTLEEphemerides::GNSSFindSat invalid SV position %.3lf,%.3lf,%.3lf";
          goto LABEL_24;
        }
        double v56 = v56 + *(double *)((char *)a4 + v54) * *(double *)((char *)a4 + v54);
        v54 += 8;
      }
      while (v54 != 24);
      if (sqrt(v56) < 6341752.3)
      {
        __int16 v64 = 5;
        unsigned __int8 v63 = 3;
        long long v62 = *a4;
        int v28 = "NORADTLEEphemerides::GNSSFindSat decayed SV position %.3lf,%.3lf,%.3lf";
LABEL_24:
        BOOL v29 = (cnprint::CNPrinter *)&v64;
        std::string::size_type v30 = &v63;
        goto LABEL_7;
      }
      for (uint64_t i = 0; i != 24; i += 8)
      {
        if ((*(void *)((unsigned char *)a5 + i) & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL
          || *(double *)((char *)a5 + i) > 299792458.0)
        {
          __int16 v64 = 5;
          unsigned __int8 v63 = 3;
          long long v62 = *a5;
          int v28 = "NORADTLEEphemerides::GNSSFindSat invalid SV velocity %.3lf,%.3lf,%.3lf";
          goto LABEL_24;
        }
      }
      uint64_t v58 = 0;
      while (1)
      {
        BOOL v59 = (a6[v58] & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000;
        if ((a6[v58] & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000) {
          break;
        }
        if (++v58 == 3) {
          return (v59 - 1);
        }
      }
      __int16 v64 = 5;
      unsigned __int8 v63 = 3;
      cnprint::CNPrinter::Print((cnprint::CNPrinter *)&v64, &v63, "NORADTLEEphemerides::GNSSFindSat invalid SV acceleration %.3lf,%.3lf,%.3lf", v23, v24, v25, v26, v27, 0);
      return (v59 - 1);
    }
  }
  return v31;
}

uint64_t cnnavigation::NORADTLEEphemerides::InitializeSGP4(cnnavigation::NORADTLEEphemerides *this)
{
  uint64_t v238 = *MEMORY[0x1E4F143B8];
  memset(v237, 0, 207);
  memset(__src, 0, sizeof(__src));
  uint64_t v236 = 0;
  long long v234 = 0u;
  long long v235 = 0u;
  *((_WORD *)this + 132) = 0;
  long long v2 = v237[11];
  *(_OWORD *)((char *)this + 426) = v237[10];
  *(_OWORD *)((char *)this + 442) = v2;
  *(_OWORD *)((char *)this + 457) = *(_OWORD *)((char *)&v237[11] + 15);
  long long v3 = v237[7];
  *(_OWORD *)((char *)this + 362) = v237[6];
  *(_OWORD *)((char *)this + 378) = v3;
  long long v4 = v237[9];
  *(_OWORD *)((char *)this + 394) = v237[8];
  *(_OWORD *)((char *)this + 410) = v4;
  long long v5 = v237[3];
  *(_OWORD *)((char *)this + 298) = v237[2];
  *(_OWORD *)((char *)this + 314) = v5;
  long long v6 = v237[5];
  *(_OWORD *)((char *)this + 330) = v237[4];
  *(_OWORD *)((char *)this + 346) = v6;
  long long v7 = v237[1];
  *(_OWORD *)((char *)this + 266) = v237[0];
  *(_OWORD *)((char *)this + 282) = v7;
  memcpy((char *)this + 473, __src, 0x1BFuLL);
  int v8 = *((_DWORD *)this + 42);
  double v9 = *((double *)this + 32);
  double __x = *((double *)this + 31);
  *((double *)this + 115) = __x;
  double v11 = *((double *)this + 25);
  double v10 = *((double *)this + 26);
  *((double *)this + 116) = v11;
  *((double *)this + 117) = v10;
  double v12 = *((double *)this + 28);
  double v221 = v9;
  double v224 = *((double *)this + 27);
  *((double *)this + 118) = v224;
  *((double *)this + 120) = v9;
  double v174 = v11;
  double v208 = v11 * v11;
  double v13 = sqrt(1.0 - v11 * v11);
  double v172 = v10;
  __double2 v14 = __sincos_stret(v10);
  double v197 = v14.__cosval * v14.__cosval;
  long double v15 = pow(0.0743669161 / v12, 0.666666667);
  double v209 = v13;
  double v16 = (v14.__cosval * v14.__cosval * 3.0 + -1.0) * 0.000811962 / ((1.0 - v208) * v13);
  long double v17 = 1.0
      - v16 / (v15 * v15) * (v16 / (v15 * v15))
      - v16 / (v15 * v15) * (v16 / (v15 * v15) * (v16 / (v15 * v15) * 134.0) / 81.0 + 0.333333333);
  double v18 = v12 / (v16 / (v15 * v17 * (v15 * v17)) + 1.0);
  *((double *)this + 119) = v18;
  double v19 = pow(0.0743669161 / v18, 0.666666667);
  double v230 = -(v197 * -5.0 + 1.0) - v197 - v197;
  *((double *)this + 35) = v230;
  double v20 = (double)(v8 - 2451545) / 36525.0;
  double v21 = *((double *)this + 22);
  long double v22 = fmod(v20 * v20 * 0.093104 + v20 * (v20 * v20) * -0.0000062 + v20 * 3164400180.0 + 67310.5484, 86400.0);
  double v218 = v21;
  *((long double *)this + 97) = fmod(v22 * 0.0000727220522+ ((v21 / 36525.0 + v20) * 5.9006e-11+ 1.00273791+ (v21 / 36525.0 + v20) * (v21 / 36525.0 + v20) * -5.9e-15)* 6.28318531* v21, 6.28318531);
  double v211 = 1.0 - v208;
  if (1.0 - v208 < 0.0 && v18 < 0.0) {
    return cnnavigation::NORADTLEEphemerides::SGP4((uint64_t)this, (uint64_t)this + 168, (uint64_t)__src, (double *)v237, v23, v24, v25, v26);
  }
  double v27 = (1.0 - v174) * v19;
  *((unsigned char *)this + 265) = v27 < 1.03449284;
  double v28 = (v27 + -1.0) * 6378.135;
  double v173 = v18;
  if (v28 >= 156.0)
  {
    double v32 = 1.01222928;
    double v31 = 0.00000000188027916;
  }
  else
  {
    double v29 = v28 + -78.0;
    if (v28 < 98.0) {
      double v29 = 20.0;
    }
    double v30 = (120.0 - v29) / 6378.135 * ((120.0 - v29) / 6378.135);
    double v31 = v30 * v30;
    double v32 = v29 / 6378.135 + 1.0;
  }
  double v198 = 1.0 / ((1.0 - v208) * v19 * ((1.0 - v208) * v19));
  double v170 = v32;
  double v33 = 1.0 / (v19 - v32);
  double v34 = v174 * v19 * v33;
  *((double *)this + 43) = v34;
  double v35 = v34 * v34;
  double v37 = vabdd_f64(1.0, v34 * v34);
  double v38 = v31 * (v33 * v33 * (v33 * v33));
  double v39 = v38 / pow(v37, 3.5);
  double v203 = *((double *)this + 24);
  double v36 = v174 * v34;
  double v213 = v203
       * (v173
        * v39
        * ((v35 * 3.0 * (v35 + 8.0) + 8.0) * (v230 * (v33 * 0.000405981 / v37))
         + v19 * (v35 * 1.5 + 1.0 + v174 * v34 * (v35 + 4.0))));
  *((double *)this + 36) = v213;
  double v40 = 0.0;
  if (v174 > 0.0001) {
    double v40 = v14.__sinval * (v173 * (v33 * (v38 * -2.0) * -0.00234506972)) / v174;
  }
  double v195 = v40;
  *((double *)this + 52) = 1.0 - v197;
  double v215 = v174 * v19 * v33;
  double v41 = v39;
  double v169 = v33;
  double v171 = v19;
  *((long double *)this + 37) = v211
                              * (v19
                               * ((v173 + v173)
                                * v39))
                              * (v174 * (v35 * 2.0 + 0.5)
                               + v34 * (v35 * 0.5 + 2.0)
                               + v33
                               * -0.001082616
                               / (v19
                                * v37)
                               * (cos(__x + __x) * ((1.0 - v197) * 0.75 * (v35 * 2.0 - v36 * (v35 + 1.0)))
                                + v230 * -3.0 * (v36 * -2.0 + 1.0 + v35 * (v36 * -0.5 + 1.5))));
  *((double *)this + 38) = ((v35 + v36) * 2.75 + 1.0 + v36 * v35) * (v211 * (v19 * (v41 + v41)));
  double v42 = v14.__cosval * v14.__cosval;
  double v43 = v173 * (v198 * 0.001623924);
  double v44 = v198 * (v43 * 0.5 * 0.001082616);
  double v45 = v173 * (v198 * (v198 * 0.000000776235937));
  double v46 = (v197 * -114.0 + 7.0 + v42 * v42 * 395.0) * (v44 * 0.0625)
      + v43 * -0.5 * (v197 * -5.0 + 1.0)
      + v45 * (v197 * -36.0 + 3.0 + v42 * v42 * 49.0);
  *((double *)this + 44) = v46;
  double v47 = -(v43 * v14.__cosval);
  double v48 = ((v197 * -7.0 + 3.0) * (v45 + v45) + v44 * 0.5 * (v197 * -19.0 + 4.0)) * v14.__cosval - v43 * v14.__cosval;
  double v168 = v173 + v209 * (v43 * 0.5) * v230 + v209 * (v44 * 0.0625) * (v197 * -78.0 + 13.0 + v42 * v42 * 137.0);
  *((double *)this + 54) = v168;
  *((double *)this + 55) = v48;
  double v206 = cos(__x);
  *((double *)this + 45) = v206 * (v203 * v195);
  double v49 = 0.0;
  if (v174 > 0.0001) {
    double v49 = v203 * (v38 * -0.666666667) / v36;
  }
  *((double *)this + 58) = v211 * 3.5 * v47 * v213;
  *((double *)this + 48) = v213 * 1.5;
  double v167 = v14.__cosval + 1.0;
  if (fabs(v14.__cosval + 1.0) <= 1.5e-12) {
    double v50 = 1.5e-12;
  }
  else {
    double v50 = v14.__cosval + 1.0;
  }
  *((double *)this + 56) = v14.__sinval * 0.00058626743 * (v14.__cosval * 5.0 + 3.0) / v50;
  *((double *)this + 57) = v49;
  *((double *)this + 34) = v14.__sinval * 0.00117253486;
  __double2 v51 = __sincos_stret(v224);
  *((double *)this + 42) = (v215 * v51.__cosval + 1.0) * ((v215 * v51.__cosval + 1.0) * (v215 * v51.__cosval + 1.0));
  *((void *)this + 46) = *(void *)&v51.__sinval;
  *((double *)this + 53) = v197 * 7.0 + -1.0;
  if (6.28318531 / v173 >= 225.0)
  {
    double v164 = v48 + v46;
    *((_WORD *)this + 132) = 257;
    __double2 v52 = __sincos_stret(v221);
    double v53 = sin(__x);
    double v54 = v218 + (double)v8 + -2433281.5 + 18261.5;
    double v55 = fmod(v54 * -0.00092422029 + 4.523602, 6.28318531);
    __double2 v56 = __sincos_stret(v55);
    double v57 = sqrt(1.0 - (v56.__cosval * -0.03568096 + 0.91375164) * (v56.__cosval * -0.03568096 + 0.91375164));
    double v58 = v56.__sinval * 0.089683511 / v57;
    double v59 = sqrt(1.0 - v58 * v58);
    double v166 = v54;
    double v231 = 0.39785416;
    double v176 = v57;
    double __xa = 0.91744867;
    long double v60 = atan2(v56.__sinval * 0.39785416 / v57, v56.__sinval * (v58 * 0.91744867) + v59 * v56.__cosval);
    double v165 = v54 * 0.001944368 + 5.8351514;
    __double2 v61 = __sincos_stret(v165 + v60 - v55);
    char v62 = 0;
    double sinval = v14.__sinval;
    double v201 = v174 * -15.0;
    double v204 = -v14.__sinval;
    __double2 v222 = v52;
    v175.__double sinval = v52.__sinval * v59 - v52.__cosval * v58;
    v175.__double cosval = v52.__sinval * v58 + v59 * v52.__cosval;
    *((_OWORD *)this + 40) = 0u;
    *((_OWORD *)this + 41) = 0u;
    *((void *)this + 84) = 0;
    double v194 = 0.0;
    char v64 = 1;
    double cosval = 0.1945905;
    double v65 = -0.98088458;
    double v181 = 0.0;
    double v182 = 0.0;
    double v190 = 0.0;
    double v192 = 0.0;
    double v193 = 0.0;
    double v185 = 0.0;
    double v179 = 0.0;
    double v199 = 1.0 / v173;
    double v216 = 0.0000029864797;
    double v183 = 0.0;
    double v184 = 0.0;
    double v187 = 0.0;
    double v188 = 0.0;
    double v180 = 0.0;
    double v177 = 0.0;
    double v178 = 0.0;
    double v189 = 0.0;
    double v186 = 0.0;
    double v191 = 0.0;
    double v196 = 0.0;
    do
    {
      double v66 = v222.__sinval * (__xa * v65) + cosval * v222.__cosval;
      double v67 = v222.__sinval * (__xa * cosval) - v65 * v222.__cosval;
      double v68 = v222.__cosval * (__xa * v65) - cosval * v222.__sinval;
      double v69 = v222.__cosval * (__xa * cosval) + v65 * v222.__sinval;
      double v70 = sinval * (v231 * v65) + v14.__cosval * v68;
      double v71 = sinval * (v231 * cosval) + v14.__cosval * v69;
      double v72 = v14.__cosval * (v231 * v65) + v204 * v68;
      double v73 = v14.__cosval * (v231 * cosval) + v204 * v69;
      double v74 = v53 * v70 + v66 * v206;
      double v75 = v53 * v71 + v67 * v206;
      double v76 = v206 * v70 - v66 * v53;
      double v77 = v206 * v71 - v67 * v53;
      double v78 = v76 * (v76 * -3.0) + v74 * 12.0 * v74;
      double v79 = v77 * (v76 * -6.0) + v74 * 24.0 * v75;
      double v80 = v77 * (v77 * -3.0) + v75 * 12.0 * v75;
      double v81 = v208 * v78 + (v70 * v70 + v66 * v66) * 3.0;
      double v82 = v208 * v79 + (v70 * v71 + v66 * v67) * 6.0;
      double v83 = v208 * v80 + (v71 * v71 + v67 * v67) * 3.0;
      double v84 = v208 * (v53 * v72 * (v76 * -6.0) + v74 * -24.0 * (v206 * v72)) + v66 * -6.0 * v72;
      double v214 = v208 * ((v53 * v72 * v77 + v76 * (v53 * v73)) * -6.0 + (v206 * v73 * v74 + v75 * (v206 * v72)) * -24.0)
           + (v67 * v72 + v66 * v73) * -6.0;
      double v85 = v208 * (v206 * v72 * (v76 * -6.0) + v74 * 24.0 * (v53 * v72)) + v70 * 6.0 * v72;
      char v86 = v62;
      double v87 = v208 * ((v206 * v73 * v76 + v77 * (v206 * v72)) * -6.0 + (v53 * v73 * v74 + v75 * (v53 * v72)) * 24.0)
          + (v70 * v73 + v71 * v72) * 6.0;
      double v88 = v78;
      double v89 = v208 * (v206 * v73 * (v77 * -6.0) + v75 * 24.0 * (v53 * v73)) + v71 * 6.0 * v73;
      double v90 = v81 + v81 + v211 * v78;
      double v91 = v83 + v83 + v211 * v80;
      double v92 = v199 * v216;
      double v93 = v75 * v77 + v74 * v76;
      double v94 = v74 * v77 + v75 * v76;
      double v95 = v199 * v216 * -0.5 / v209;
      double v96 = v75 * v77 - v74 * v76;
      double v97 = v209 * (v199 * v216);
      if (v64)
      {
        double v65 = v61.__sinval;
        double cosval = v61.__cosval;
        double v216 = 0.00000047968065;
        double __xa = v56.__cosval * -0.03568096 + 0.91375164;
        double v231 = v176;
        __double2 v222 = v175;
        double v194 = v77 * (v77 * -3.0) + v75 * 12.0 * v75;
        double v196 = v201 * v97;
        double v191 = v95;
        double v192 = v208 * (v206 * v73 * (v77 * -6.0) + v75 * 24.0 * (v53 * v73)) + v71 * 6.0 * v73;
        double v186 = v92;
        double v187 = v91;
        double v189 = v97;
        double v183 = v93;
        double v184 = v84;
        double v177 = v94;
        double v178 = v96;
        double v188 = v90;
        double v179 = v214;
        double v180 = v82 + v82 + v211 * v79;
        double v185 = v208 * (v53 * v73 * (v77 * -6.0) + v75 * -24.0 * (v206 * v73)) + v67 * -6.0 * v73;
        double v193 = v85;
        double v181 = v79;
        double v182 = v87;
        double v190 = v88;
      }
      char v64 = 0;
      char v62 = 1;
      double sinval = v14.__sinval;
    }
    while ((v86 & 1) == 0);
    double v225 = v97;
    double v220 = v90;
    double v223 = v88;
    double v98 = v85;
    double v210 = v84;
    double v205 = v96;
    double v207 = v208 * (v53 * v73 * (v77 * -6.0) + v75 * -24.0 * (v206 * v73)) + v67 * -6.0 * v73;
    double v99 = v89;
    double v217 = v91;
    double __xc = v87;
    double v232 = v93;
    double v200 = v201 * v97;
    double v202 = v94;
    double v212 = v82 + v82 + v211 * v79;
    *((long double *)this + 110) = fmod(v166 * 0.2299715 + 4.7199672 - v165, 6.28318531);
    long double v100 = fmod(v166 * 0.017201977 + 6.2565837, 6.28318531);
    double v101 = v95;
    *((long double *)this + 111) = v100;
    *((double *)this + 85) = (v196 + v196) * v177;
    *((double *)this + 86) = (v196 + v196) * v178;
    *((double *)this + 92) = (v191 + v191) * v179;
    *((double *)this + 93) = (v191 + v191) * (v185 - v184);
    *((double *)this + 94) = v186 * -2.0 * v180;
    *((double *)this + 95) = v186 * -2.0 * (v187 - v188);
    double v102 = v208 * -9.0 + -21.0;
    *((double *)this + 96) = v102 * (v186 * -2.0) * 0.01675;
    float64x2_t v103 = vmulq_n_f64((float64x2_t)xmmword_18E1F0DD0, v189);
    *((double *)this + 87) = v181 * v103.f64[0];
    float64x2_t v104 = (float64x2_t)vdupq_lane_s64(0x3F9126E978D4FDF4, 0);
    v104.f64[0] = v194 - v190;
    *((float64x2_t *)this + 44) = vmulq_f64(v103, v104);
    *((double *)this + 90) = v191 * -2.0 * v182;
    *((double *)this + 91) = v191 * -2.0 * (v192 - v193);
    *((double *)this + 79) = (v200 + v200) * v202;
    *((double *)this + 78) = (v200 + v200) * v205;
    *((double *)this + 104) = (v95 + v95) * v214;
    *((double *)this + 105) = (v95 + v95) * (v207 - v210);
    *((double *)this + 106) = v92 * -2.0 * v212;
    *((double *)this + 107) = v92 * -2.0 * (v217 - v220);
    *((double *)this + 108) = v102 * (v92 * -2.0) * 0.0549;
    float64x2_t v105 = vmulq_n_f64((float64x2_t)xmmword_18E1F0DD0, v225);
    *((double *)this + 99) = v79 * v105.f64[0];
    float64x2_t v106 = (float64x2_t)vdupq_lane_s64(0x3FAC1BDA5119CE07, 0);
    v106.f64[0] = v80 - v223;
    *((float64x2_t *)this + 50) = vmulq_f64(v105, v106);
    *((double *)this + 102) = v95 * -2.0 * __xc;
    double __xb = v98;
    *((double *)this + 103) = v95 * -2.0 * (v99 - v98);
    BOOL v107 = v173 > 0.0034906585 && v173 < 0.0052359877;
    BOOL v108 = v173 >= 0.00826;
    if (v173 > 0.00924) {
      BOOL v108 = 0;
    }
    BOOL v109 = v174 >= 0.5;
    BOOL v110 = v108 && v109;
    if (v108 && v109) {
      int v111 = 2;
    }
    else {
      int v111 = v107;
    }
    *((unsigned char *)this + 472) = v111;
    double v112 = v191 * -0.0000119459 * (v193 + v192);
    BOOL v113 = v172 < 0.052359877;
    if (v172 > 3.08923278) {
      BOOL v113 = 1;
    }
    if (v113) {
      double v112 = 0.0;
    }
    double v114 = 1.0;
    if (fabs(v14.__sinval) >= 2.22044605e-16) {
      double v114 = v14.__sinval;
    }
    double v115 = v112 / v114;
    *((double *)this + 70) = v196 * 0.0000119459 * v183 + v200 * 0.00015835218 * v232;
    *((double *)this + 74) = v191 * 0.0000119459 * (v184 + v185) + v95 * 0.00015835218 * (v210 + v207);
    double v116 = v186 * -0.0000119459 * (v188 + v187 + -14.0 + v208 * -6.0)
         + v92 * -0.00015835218 * (v220 + v217 + -14.0 + v208 * -6.0);
    *((double *)this + 75) = v116;
    double v117 = v225 * 0.00015835218 * (v223 + v80 + -6.0)
         + v189 * 0.0000119459 * (v190 + v194 + -6.0)
         - v14.__cosval * (v112 / v114);
    *((double *)this + 77) = v117;
    *((double *)this + 76) = v112 / v114;
    if (v14.__sinval != 0.0)
    {
      double v118 = v101 * -0.00015835218 * (__xb + v99);
      if (v113) {
        double v118 = 0.0;
      }
      double v117 = v117 + -v14.__cosval / v14.__sinval * v118;
      *((double *)this + 77) = v117;
      double v115 = v118 / v14.__sinval + v115;
      *((double *)this + 76) = v115;
    }
    double v119 = fmod(*((double *)this + 97) + 0.0, 6.28318531);
    if (v111)
    {
      double v120 = v119;
      double v121 = pow(v173 / 0.0743669161, 0.666666667);
      if (!v110)
      {
        if (!v107)
        {
          double v130 = *((double *)this + 109);
          double v133 = *((double *)this + 119);
LABEL_54:
          *((double *)this + 113) = v130;
          *((double *)this + 114) = v133;
          *((void *)this + 112) = 0;
          goto LABEL_55;
        }
        double v129 = v121 * (v173 * (v173 * 3.0) * v121);
        *((double *)this + 72) = (v208 * (v208 * 0.8125 + -2.5) + 1.0)
                               * (v167
                                * v167
                                * 0.75
                                * (v129 + v129))
                               * 0.0000017891679;
        *((double *)this + 73) = v121
                               * ((v208 * (v208 * 6.60937 + -6.0) + 1.0)
                                * (v167
                                 * (v167
                                  * (v167
                                   * 1.875))
                                 * (v129
                                  * 3.0))
                                * 0.00000022123015);
        *((double *)this + 71) = v121
                               * ((v208 * 2.0 + 1.0)
                                * ((v167 * -0.75 + v14.__sinval * (v14.__sinval * 0.9375) * (v14.__cosval * 3.0 + 1.0))
                                 * v129)
                                * 0.0000021460748);
        double v130 = fmod(*((double *)this + 118) + *((double *)this + 120) + *((double *)this + 115) - v120, 6.28318531);
        *((double *)this + 109) = v130;
        double v131 = v115 + v168 + v164 + -0.00437526909 + v116 + v117;
LABEL_53:
        double v133 = *((double *)this + 119);
        *((double *)this + 98) = v131 - v133;
        goto LABEL_54;
      }
      uint64_t v122 = *((uint64_t *)this + 116);
      double v123 = v208 * *(double *)&v122;
      if (*(double *)&v122 <= 0.65)
      {
        double v124 = *(double *)&v122 * -13.247 + 3.616 + v208 * 16.29;
        float64x2_t v125 = vmlaq_n_f64(vmlaq_n_f64(vmlaq_n_f64((float64x2_t)xmmword_18E1F0DF0, (float64x2_t)xmmword_18E1F0DE0, *(double *)&v122), (float64x2_t)xmmword_18E1F0E00, v208), (float64x2_t)xmmword_18E1F0E10, v123);
        float64x2_t v126 = vmlaq_n_f64(vmlaq_n_f64(vmlaq_n_f64((float64x2_t)xmmword_18E1F0E30, (float64x2_t)xmmword_18E1F0E20, *(double *)&v122), (float64x2_t)xmmword_18E1F0E40, v208), (float64x2_t)xmmword_18E1F0E50, v123);
        double v127 = *(double *)&v122 * 3017.977 + -532.114 + v208 * -5740.032;
        double v128 = 3708.276;
      }
      else
      {
        double v124 = *(double *)&v122 * 331.819 + -72.099 + v208 * -508.738 + v123 * 266.724;
        float64x2_t v125 = vmlaq_n_f64(vmlaq_n_f64(vmlaq_n_f64((float64x2_t)xmmword_18E1F0E70, (float64x2_t)xmmword_18E1F0E60, *(double *)&v122), (float64x2_t)xmmword_18E1F0E80, v208), (float64x2_t)xmmword_18E1F0E90, v123);
        float64x2_t v126 = vmlaq_n_f64(vmlaq_n_f64(vmlaq_n_f64((float64x2_t)xmmword_18E1F0EB0, (float64x2_t)xmmword_18E1F0EA0, *(double *)&v122), (float64x2_t)xmmword_18E1F0EC0, v208), (float64x2_t)xmmword_18E1F0ED0, v123);
        if (*(double *)&v122 <= 0.715)
        {
          double v132 = *(double *)&v122 * -4664.75 + 1464.74 + v208 * 3763.64;
          goto LABEL_49;
        }
        double v127 = *(double *)&v122 * 29936.92 + -5149.66 + v208 * -54087.36;
        double v128 = 31324.56;
      }
      double v132 = v127 + v123 * v128;
LABEL_49:
      float64x2_t v134 = (float64x2_t)vdupq_lane_s64(v122, 0);
      float64x2_t v135 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v208, 0);
      double v136 = (*(double *)&v122 + -0.64) * -0.44 + -0.306;
      float64x2_t v137 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v123, 0);
      if (*(double *)&v122 >= 0.7)
      {
        float64x2_t v138 = vmlaq_f64(vmlaq_f64(vmlaq_f64((float64x2_t)xmmword_18E1F0EF0, (float64x2_t)xmmword_18E1F0EE0, v134), (float64x2_t)xmmword_18E1F0F00, v135), (float64x2_t)xmmword_18E1F0F10, v137);
        double v139 = *(double *)&v122 * 170470.89 + -40023.88 + v208 * -242699.48;
        double v140 = 115605.82;
      }
      else
      {
        float64x2_t v138 = vmlaq_f64(vmlaq_f64(vmlaq_f64((float64x2_t)xmmword_18E1F0F30, (float64x2_t)xmmword_18E1F0F20, v134), (float64x2_t)xmmword_18E1F0F40, v135), (float64x2_t)xmmword_18E1F0F50, v137);
        double v139 = *(double *)&v122 * 4690.25 + -853.666 + v208 * -8624.77;
        double v140 = 5341.4;
      }
      __asm { FMOV            V24.2D, #1.0 }
      float64x2_t v146 = vmlaq_n_f64(_Q24, (float64x2_t)xmmword_18E1F0F60, v14.__cosval);
      v147.f64[0] = v146.f64[1] + v197;
      float64_t v148 = v146.f64[0] + v197 * -5.0;
      __asm { FMOV            V19.2D, #-8.0 }
      float64x2_t v150 = vmlaq_n_f64((float64x2_t)xmmword_18E1F0F80, _Q19, v14.__cosval);
      __asm { FMOV            V27.2D, #8.0 }
      float64x2_t v152 = vmlaq_n_f64((float64x2_t)xmmword_18E1F0F90, _Q27, v14.__cosval);
      _Q27.f64[0] = v173 * v173 * 3.0 * (v121 * v121);
      float64_t v153 = _Q27.f64[0] * 0.0000017891679;
      _Q27.f64[0] = v121 * _Q27.f64[0];
      __asm { FMOV            V30.2D, #-3.0 }
      float64x2_t v155 = vmlaq_n_f64(v146, _Q30, v197);
      v147.f64[1] = v14.__sinval * v14.__sinval;
      float64x2_t v156 = vmulq_f64(v147, (float64x2_t)xmmword_18E1F0FA0);
      v147.f64[0] = v14.__sinval * v14.__sinval * 35.0;
      *((float64_t *)this + 60) = v153 * v156.f64[0] * v136;
      *((double *)this + 61) = v14.__sinval * v14.__sinval * 1.5 * v153 * v124;
      *((float64x2_t *)this + 31) = vmulq_f64(vmulq_n_f64(vmulq_f64(vmulq_n_f64((float64x2_t)xmmword_18E1F0F70, v14.__sinval), v155), _Q27.f64[0] * 0.00000037393792), v125);
      *((float64x2_t *)this + 32) = vmulq_f64(vmulq_n_f64(vmulq_f64(v147, v156), (v121 * _Q27.f64[0] + v121 * _Q27.f64[0]) * 0.0000000073636953), v126);
      double v157 = v121 * (v121 * _Q27.f64[0]);
      *((double *)this + 66) = v14.__sinval
                             * 9.84375
                             * ((v14.__cosval * 4.0 + -2.0 + v197 * 6.0) * 0.33333333
                              + v14.__sinval * v14.__sinval * v148)
                             * (v157
                              * 0.00000011428639)
                             * v132;
      *((double *)this + 67) = v14.__sinval
                             * (vmuld_lane_f64(6.56250012, v155, 1)
                              + v14.__sinval * v14.__sinval * 4.92187512 * (v14.__cosval * -4.0 + -2.0 + v197 * 10.0))
                             * (v157
                              * 0.00000011428639)
                             * (v139 + v123 * v140);
      *((float64x2_t *)this + 34) = vmulq_f64(vmulq_n_f64(vmulq_n_f64(vmlaq_n_f64(v150, vmlaq_n_f64(v152, (float64x2_t)xmmword_18E1F0FB0, v197), v197), v14.__sinval * 29.53125), (v157 + v157) * 0.0000000021765803), v138);
      double v130 = fmod(*((double *)this + 118) + *((double *)this + 120) * 2.0 + v120 * -2.0, 6.28318531);
      *((double *)this + 109) = v130;
      double v131 = v116 + *((double *)this + 54) + (*((double *)this + 55) + *((double *)this + 76) + -0.00437526909) * 2.0;
      goto LABEL_53;
    }
  }
LABEL_55:
  if (!*((unsigned char *)this + 265))
  {
    double v158 = *((double *)this + 36);
    double v159 = v171 * 4.0 * v169 * (v158 * v158);
    double v160 = v158 * (v169 * v159) / 3.0;
    double v161 = (v170 + v171 * 17.0) * v160;
    *((double *)this + 39) = v159;
    *((double *)this + 40) = v161;
    double v162 = v158 * ((v170 * 31.0 + v171 * 221.0) * (v169 * (v171 * (v160 * 0.5))));
    *((double *)this + 41) = v162;
    *((double *)this + 49) = v159 + v158 * v158 * 2.0;
    *((double *)this + 50) = (v158 * (v158 * v158 * 10.0 + v159 * 12.0) + v161 * 3.0) * 0.25;
    *((double *)this + 51) = (v158 * 12.0 * v161
                            + v162 * 3.0
                            + v159 * v159 * 6.0
                            + v158 * v158 * 15.0 * (v158 * v158 + v159 * 2.0))
                           * 0.2;
  }
  return cnnavigation::NORADTLEEphemerides::SGP4((uint64_t)this, (uint64_t)this + 168, (uint64_t)__src, (double *)v237, v23, v24, v25, v26);
}

uint64_t cnnavigation::NORADTLEEphemerides::SGP4(uint64_t a1, uint64_t a2, uint64_t a3, double *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  double v11 = (*(double *)(a2 + 8) - *(double *)(a1 + 176) + (double)(*(_DWORD *)a2 - *(_DWORD *)(a1 + 168))) * 1440.0;
  *(double *)(a1 + 376) = v11;
  double v12 = *(double *)(a1 + 944) + *(double *)(a1 + 432) * v11;
  double v217 = *(double *)(a1 + 352);
  double v218 = *(double *)(a1 + 920);
  double v13 = v218 + v217 * v11;
  double v14 = *(double *)(a1 + 960) + *(double *)(a1 + 440) * v11;
  double v15 = v11 * v11;
  double v16 = *(double *)(a1 + 464);
  double v17 = 1.0 - *(double *)(a1 + 288) * v11;
  double v18 = *(double *)(a1 + 192);
  double v19 = v11 * (v18 * *(double *)(a1 + 296));
  double v20 = v11 * v11 * *(double *)(a1 + 384);
  double v234 = v11;
  if (!*(unsigned char *)(a1 + 265))
  {
    double v215 = v11 * v11 * *(double *)(a1 + 384);
    double v21 = v11 * *(double *)(a1 + 360);
    long double v22 = v12;
    double v23 = v13;
    double v24 = *(double *)(a1 + 344);
    double v211 = v17;
    double v213 = v19;
    double v241 = v14;
    long double v25 = cos(v22);
    long double v26 = v21
        + *(double *)(a1 + 456) * -(*(double *)(a1 + 336) - (v24 * v25 + 1.0) * (v24 * v25 + 1.0) * (v24 * v25 + 1.0));
    long double v27 = v22 + v26;
    double v13 = v23 - v26;
    double v28 = v234 * (v234 * v15);
    double v29 = v211 - *(double *)(a1 + 312) * v15 - *(double *)(a1 + 320) * (v234 * v15) - *(double *)(a1 + 328) * v28;
    double v30 = v18 * *(double *)(a1 + 304);
    double v19 = v213 + v30 * (sin(v27) - *(double *)(a1 + 368));
    double v14 = v241;
    double v17 = v29;
    double v12 = v27;
    double v20 = v215 + *(double *)(a1 + 392) * (v234 * v15) + v28 * (*(double *)(a1 + 400) + v234 * *(double *)(a1 + 408));
    double v11 = v234;
  }
  double v216 = v20;
  double v31 = v14 + v16 * v15;
  double v32 = *(double *)(a1 + 952);
  double v33 = *(double *)(a1 + 928);
  double v34 = *(double *)(a1 + 936);
  int v35 = *(unsigned __int8 *)(a1 + 264);
  if (*(unsigned char *)(a1 + 264))
  {
    double v208 = *(double *)(a1 + 952);
    double v212 = v17;
    double v214 = v19;
    double v36 = fmod(*(double *)(a1 + 776) + v11 * 0.00437526909, 6.28318531);
    double v34 = v34 + *(double *)(a1 + 592) * v11;
    double v13 = v13 + *(double *)(a1 + 616) * v11;
    int v37 = *(unsigned __int8 *)(a1 + 472);
    double v209 = v33 + *(double *)(a1 + 560) * v11;
    double __x = v31 + *(double *)(a1 + 608) * v11;
    if (*(unsigned char *)(a1 + 472))
    {
      double v204 = v36;
      double v205 = v13;
      double v206 = v34;
      double v38 = *(double *)(a1 + 896);
      double v39 = fabs(v38);
      if (v39 < 2.22044605e-16 || ((double v40 = fabs(v11), v11 * v38 > 0.0) ? (v41 = v40 < v39) : (v41 = 1), v41))
      {
        *(void *)(a1 + 896) = 0;
        *(double *)(a1 + 912) = v208;
        *(void *)(a1 + 904) = *(void *)(a1 + 872);
        double v38 = 0.0;
      }
      double v238 = dbl_18E1F0FC0[v11 > 0.0];
      double v42 = 0.0;
      double v43 = 0.0;
      double v44 = 0.0;
      while (1)
      {
        if (v37 == 2)
        {
          double v52 = v218 + v217 * v38;
          double v53 = *(double *)(a1 + 904);
          double v220 = v53 + v53;
          double v54 = *(double *)(a1 + 480);
          double v231 = v54;
          __double2 v55 = __sincos_stret(v52 + v52 + v53 + -5.7686396);
          double v56 = *(double *)(a1 + 488);
          double v230 = v56;
          __double2 v57 = __sincos_stret(v53 + -5.7686396);
          double v58 = v56 * v57.__sinval + v54 * v55.__sinval;
          double v59 = *(double *)(a1 + 496);
          double v225 = v59;
          double v219 = v52 + v53;
          __double2 v60 = __sincos_stret(v52 + v53 + -0.95240898);
          double v61 = *(double *)(a1 + 504);
          double v223 = v61;
          double v62 = v53 - v52;
          __double2 v63 = __sincos_stret(v62 + -0.95240898);
          double v64 = v58 + v59 * v60.__sinval + v61 * v63.__sinval;
          double v65 = *(double *)(a1 + 512);
          double v222 = v65;
          __double2 v66 = __sincos_stret(v52 + v52 + v220 + -1.8014998);
          double v67 = v64 + v65 * v66.__sinval;
          double v68 = *(double *)(a1 + 520);
          double v221 = v68;
          __double2 v69 = __sincos_stret(v220 + -1.8014998);
          double v70 = *(double *)(a1 + 528);
          __double2 v71 = __sincos_stret(v219 + -1.050833);
          double v72 = v67 + v68 * v69.__sinval + v70 * v71.__sinval;
          double v73 = *(double *)(a1 + 536);
          __double2 v74 = __sincos_stret(v62 + -1.050833);
          double v75 = *(double *)(a1 + 544);
          __double2 v76 = __sincos_stret(v52 + v220 + -4.4108898);
          double v77 = v72 + v73 * v74.__sinval + v75 * v76.__sinval;
          double v78 = *(double *)(a1 + 552);
          __double2 v79 = __sincos_stret(v220 - v52 + -4.4108898);
          double v43 = v77 + v78 * v79.__sinval;
          double v42 = *(double *)(a1 + 912) + *(double *)(a1 + 784);
          double v11 = v234;
          double v44 = (v230 * v57.__cosval
               + v231 * v55.__cosval
               + v225 * v60.__cosval
               + v223 * v63.__cosval
               + v70 * v71.__cosval
               + v73 * v74.__cosval
               + (v69.__cosval * v221 + v222 * v66.__cosval + v75 * v76.__cosval + v78 * v79.__cosval) * 2.0)
              * v42;
        }
        else if (v37 == 1)
        {
          double v45 = *(double *)(a1 + 568);
          double v46 = *(double *)(a1 + 904);
          __double2 v47 = __sincos_stret(v46 + -0.13130908);
          double v48 = *(double *)(a1 + 576);
          __double2 v49 = __sincos_stret(v46 + -2.8843198 + v46 + -2.8843198);
          double v50 = *(double *)(a1 + 584);
          __double2 v51 = __sincos_stret((v46 + -0.37448087) * 3.0);
          double v43 = v48 * v49.__sinval + v45 * v47.__sinval + v50 * v51.__sinval;
          double v42 = *(double *)(a1 + 912) + *(double *)(a1 + 784);
          double v11 = v234;
          double v44 = v42 * ((v48 + v48) * v49.__cosval + v45 * v47.__cosval + v50 * 3.0 * v51.__cosval);
        }
        if (vabdd_f64(v11, v38) < 720.0) {
          break;
        }
        *(double *)(a1 + 904) = *(double *)(a1 + 904) + v42 * v238 + v43 * 259200.0;
        *(double *)(a1 + 912) = *(double *)(a1 + 912) + v43 * v238 + v44 * 259200.0;
        double v38 = v238 + v38;
        *(double *)(a1 + 896) = v38;
      }
      double v80 = v11 - v38;
      double v81 = *(double *)(a1 + 904) + v42 * (v11 - v38) + (v11 - v38) * (v43 * 0.5) * (v11 - v38);
      if (v37 == 2)
      {
        double v13 = v205;
        double v12 = v81 + __x * -2.0 + v204 * 2.0;
        double v34 = v206;
      }
      else
      {
        double v13 = v205;
        double v34 = v206;
        if (v37 != 1)
        {
          __int16 v252 = 5;
          unsigned __int8 v251 = 3;
          cnprint::CNPrinter::Print((cnprint::CNPrinter *)&v252, &v251, "SGP4 encountered unexpected resonance type %hhu", (uint64_t)a4, a5, a6, a7, a8, v37);
          return 4294967291;
        }
        double v12 = v204 + v81 - __x - v205;
      }
      double v32 = v208;
      double v82 = v208 + *(double *)(a1 + 912) + v43 * v80 + v80 * (v44 * 0.5) * v80 - v208;
    }
    else
    {
      double v12 = v12 + *(double *)(a1 + 600) * v11;
      double v32 = v208;
      double v82 = v208;
    }
    double v17 = v212;
    double v19 = v214;
  }
  else
  {
    double v209 = *(double *)(a1 + 928);
    double __x = v31;
    double v82 = *(double *)(a1 + 952);
  }
  if (v82 <= 0.0)
  {
    __int16 v250 = 5;
    unsigned __int8 v249 = 3;
    cnprint::CNPrinter::Print((cnprint::CNPrinter *)&v250, &v249, "SGP4 encountered invalid mean motion %lg", (uint64_t)a4, a5, a6, a7, a8, SLOBYTE(v82));
    return 4294967294;
  }
  double v83 = v19;
  long double v84 = v17 * (v17 * pow(0.0743669161 / v82, 0.666666667));
  double v235 = pow(v84, 1.5);
  double v90 = v209 - v83;
  if (v209 - v83 >= 1.0 || v90 < -0.001)
  {
    __int16 v248 = 5;
    unsigned __int8 v247 = 3;
    double v202 = v209 - v83;
    cnprint::CNPrinter::Print((cnprint::CNPrinter *)&v248, &v247, "SGP4 encountered invalid eccentricity %lg", v85, v86, v87, v88, v89, SLOBYTE(v202));
    return 0xFFFFFFFFLL;
  }
  double v232 = v84;
  double v233 = fmax(v90, 0.000001);
  long double v91 = __x + v13 + v12 + v32 * v216;
  double v92 = fmod(__x, 6.28318531);
  double v93 = fmod(v13, 6.28318531);
  long double v94 = fmod(v91, 6.28318531);
  long double v242 = v92;
  double v239 = fmod(v94 - v93 - v92, 6.28318531);
  if (v35)
  {
    double v228 = v93;
    long double v95 = *(double *)(a1 + 888) + v11 * 0.0000119459;
    long double v96 = sin(v95);
    __double2 v97 = __sincos_stret(v95 + v96 * 0.0335);
    double v98 = v97.__sinval * 0.5 * v97.__sinval + -0.25;
    double v99 = v97.__cosval * (v97.__sinval * -0.5);
    double v100 = *(double *)(a1 + 688) * v99 + *(double *)(a1 + 680) * v98;
    double v101 = *(double *)(a1 + 744) * v99 + *(double *)(a1 + 736) * v98;
    double v102 = *(double *)(a1 + 760) * v99 + *(double *)(a1 + 752) * v98 + *(double *)(a1 + 768) * v97.__sinval;
    double v103 = v99 * *(double *)(a1 + 704) + *(double *)(a1 + 696) * v98 + *(double *)(a1 + 712) * v97.__sinval;
    double v104 = v11;
    double v105 = v99 * *(double *)(a1 + 728) + *(double *)(a1 + 720) * v98;
    long double v106 = *(double *)(a1 + 880) + v104 * 0.00015835218;
    long double v107 = sin(v106);
    __double2 v108 = __sincos_stret(v106 + v107 * 0.1098);
    double v109 = v108.__sinval * 0.5 * v108.__sinval + -0.25;
    double v110 = v108.__cosval * (v108.__sinval * -0.5);
    double v111 = *(double *)(a1 + 624) * v110 + *(double *)(a1 + 632) * v109;
    double v112 = *(double *)(a1 + 840) * v110 + *(double *)(a1 + 832) * v109;
    double v113 = *(double *)(a1 + 856) * v110 + *(double *)(a1 + 848) * v109 + *(double *)(a1 + 864) * v108.__sinval;
    double v114 = v110 * *(double *)(a1 + 800) + *(double *)(a1 + 792) * v109 + *(double *)(a1 + 808) * v108.__sinval;
    double v115 = v110 * *(double *)(a1 + 824) + *(double *)(a1 + 816) * v109;
    double v116 = v100 + v111;
    double v117 = v101 + v112 - *(double *)(a1 + 664);
    double v118 = v102 + v113 - *(double *)(a1 + 672);
    double v119 = v103 + v114 - *(double *)(a1 + 648);
    double v120 = v105 + v115 - *(double *)(a1 + 656);
    double v121 = v34 + v117;
    double v122 = v233 + v116 - *(double *)(a1 + 640);
    __double2 v128 = __sincos_stret(v121);
    if (v121 >= 0.2)
    {
      double v139 = v228 + v119 - v128.__cosval * (v120 / v128.__sinval);
      double v138 = v242 + v120 / v128.__sinval;
      double v239 = v239 + v118;
    }
    else
    {
      __double2 v129 = __sincos_stret(v242);
      double v224 = v129.__cosval * v128.__sinval + v129.__cosval * (v117 * v128.__cosval) - v120 * v129.__sinval;
      double v226 = v129.__sinval * v128.__sinval + v129.__sinval * (v117 * v128.__cosval) + v120 * v129.__cosval;
      double v130 = fmod(v242, 6.28318531);
      if (v130 >= 0.0) {
        double v131 = v130;
      }
      else {
        double v131 = v130 + 6.28318531;
      }
      double v132 = v119;
      double v133 = v118;
      double v134 = v239;
      double v135 = v228 + v239 + v128.__cosval * v131 + v133 + v132 + -(v117 * v131) * v128.__sinval;
      double v136 = atan2(v226, v224);
      double v137 = -0.0;
      if (vabdd_f64(v131, v136) > 3.14159265) {
        double v137 = dbl_18E1F0FD0[v136 < v131];
      }
      double v138 = v136 + v137;
      double v239 = v239 + v133;
      double v139 = v135 - (v134 + v133) - v128.__cosval * v138;
    }
    if (v122 < 0.0 || v122 > 1.0)
    {
      __int16 v246 = 5;
      unsigned __int8 v245 = 3;
      cnprint::CNPrinter::Print((cnprint::CNPrinter *)&v246, &v245, "SGP4 encountered invalid eccentricity %lg", v123, v124, v125, v126, v127, SLOBYTE(v122));
      return 4294967293;
    }
    BOOL v145 = v121 < 0.0;
    if (v121 >= 0.0)
    {
      double v93 = v139;
    }
    else
    {
      double v121 = -v121;
      double v93 = v139 + -3.14159265;
    }
    if (v145) {
      double v138 = v138 + 3.14159265;
    }
    long double v242 = v138;
    __double2 v146 = __sincos_stret(v121);
    double v142 = v146.__sinval * 0.00117253486;
    *(double *)(a1 + 272) = v146.__sinval * 0.00117253486;
    double v147 = v146.__sinval * 0.00058626743 * (v146.__cosval * 5.0 + 3.0);
    double v207 = v121;
    double cosval = v146.__cosval;
    double sinval = v146.__sinval;
    if (fabs(v146.__cosval + 1.0) <= 1.5e-12) {
      double v143 = v147 / 1.5e-12;
    }
    else {
      double v143 = v147 / (v146.__cosval + 1.0);
    }
    *(double *)(a1 + 448) = v143;
  }
  else
  {
    double v207 = v34;
    __double2 v141 = __sincos_stret(v34);
    double cosval = v141.__cosval;
    double sinval = v141.__sinval;
    double v142 = *(double *)(a1 + 272);
    double v143 = *(double *)(a1 + 448);
    double v122 = v233;
  }
  double v236 = 0.0743669161 / v235;
  __double2 v148 = __sincos_stret(v93);
  double v149 = v122 * v148.__cosval;
  double v150 = 1.0 / (v232 * (1.0 - v122 * v122));
  double v151 = v122;
  double v152 = v150 * v142;
  double v153 = v93;
  double v154 = v150 * v142 + v151 * v148.__sinval;
  double v155 = fmod(v242 + v153 + v239 + v150 * v143 * v149 - v242, 6.28318531);
  unsigned int v156 = 0;
  double v157 = -(v152 + v151 * v148.__sinval);
  double v158 = v155;
  do
  {
    __double2 v164 = __sincos_stret(v158);
    double v165 = (v155 + v157 * v164.__cosval + v149 * v164.__sinval - v158)
         / (1.0 - v164.__cosval * v149 - v164.__sinval * v154);
    double v166 = fabs(v165);
    if (v166 >= 0.95)
    {
      double v167 = 1.0;
      if (v165 <= 0.0)
      {
        double v167 = -1.0;
        if (v165 >= 0.0) {
          double v167 = 0.0;
        }
      }
      double v165 = v167 * 0.95;
      double v166 = fabs(v167 * 0.95);
    }
    if (v156 > 8) {
      break;
    }
    double v158 = v158 + v165;
    ++v156;
  }
  while (v166 >= 1.0e-12);
  double v168 = 1.0 - (v154 * v154 + v149 * v149);
  double v169 = v232 * v168;
  if (v232 * v168 >= 0.0)
  {
    double v170 = v164.__cosval * v157 + v149 * v164.__sinval;
    double v171 = v232 * (1.0 - (v154 * v164.__sinval + v149 * v164.__cosval));
    double v240 = sqrt(v232) * v170 / v171;
    double v172 = sqrt(v168);
    double v173 = v170 / (v172 + 1.0);
    long double v174 = (v164.__sinval - v154 - v149 * v173) * (v232 / v171);
    long double v175 = (v164.__cosval - v149 + v154 * v173) * (v232 / v171);
    double v176 = sqrt(v169) / v171;
    double v177 = atan2(v174, v175);
    double v178 = v174 * (v175 + v175);
    double v179 = v174 * -2.0 * v174 + 1.0;
    double v180 = 1.0 / v169 * 0.000541308;
    double v181 = 1.0 / v169 * v180;
    if (v35)
    {
      double v183 = cosval;
      double v182 = sinval;
      double v184 = v183 * v183 * 3.0 + -1.0;
      *(double *)(a1 + 280) = v184;
      double v185 = 1.0 - v183 * v183;
      double v186 = v183 * v183 * 7.0 + -1.0;
      *(double *)(a1 + 416) = v185;
      *(double *)(a1 + 424) = v186;
      double v187 = v207;
    }
    else
    {
      double v184 = *(double *)(a1 + 280);
      double v185 = *(double *)(a1 + 416);
      double v186 = *(double *)(a1 + 424);
      double v187 = v207;
      double v183 = cosval;
      double v182 = sinval;
    }
    double v188 = v236;
    double v237 = v179 * (v180 * 0.5 * v185) + v171 * (-(v181 * 1.5 * v172) * v184 + 1.0);
    double v189 = v177 + v181 * -0.25 * v186 * v178;
    double v190 = v183 * (v181 * 1.5);
    double v191 = v242 + v190 * v178;
    double v192 = v187 + v182 * v190 * v179;
    double v193 = v188 * v180;
    double v194 = v240 - v178 * (v193 * v185) / 0.0743669161;
    double v195 = v176 + v193 * (v184 * 1.5 + v185 * v179) / 0.0743669161;
    __double2 v196 = __sincos_stret(v189);
    __double2 v197 = __sincos_stret(v191);
    __double2 v198 = __sincos_stret(v192);
    uint64_t result = 0;
    double v199 = -(v197.__sinval * v198.__cosval);
    double v200 = v197.__cosval * v196.__cosval + v199 * v196.__sinval;
    v201.f64[0] = v197.__sinval * v196.__cosval + v197.__cosval * v198.__cosval * v196.__sinval;
    *(double *)a3 = v237 * v200 * 6378.135;
    v201.f64[1] = v198.__sinval * v196.__sinval;
    *(float64x2_t *)(a3 + 8) = vmulq_f64(vmulq_n_f64(v201, v237), (float64x2_t)vdupq_n_s64(0x40B8EA228F5C28F6uLL));
    *a4 = ((v199 * v196.__cosval - v197.__cosval * v196.__sinval) * v195 + v194 * v200) * 7.90537051;
    a4[1] = ((v197.__cosval * v198.__cosval * v196.__cosval - v197.__sinval * v196.__sinval) * v195 + v194 * v201.f64[0])
          * 7.90537051;
    a4[2] = (v198.__sinval * v196.__cosval * v195 + v194 * (v198.__sinval * v196.__sinval)) * 7.90537051;
  }
  else
  {
    __int16 v244 = 5;
    unsigned __int8 v243 = 3;
    double v203 = v232 * v168;
    cnprint::CNPrinter::Print((cnprint::CNPrinter *)&v244, &v243, "SGP4 encountered invalid pL %lg", v159, v160, v161, v162, v163, SLOBYTE(v203));
    return 4294967292;
  }
  return result;
}

double cnnavigation::NORADTLEEphemerides::ECIToECEF(uint64_t a1, uint64_t a2, double *a3)
{
  double v4 = (double)(*(_DWORD *)a2 - 2451545) / 36525.0;
  double v5 = *(double *)(a2 + 8);
  long double v6 = fmod(v4 * v4 * 0.093104 + v4 * (v4 * v4) * -0.0000062 + v4 * 3164400180.0 + 67310.5484, 86400.0);
  double v7 = fmod(v6 * 0.0000727220522+ ((v5 / 36525.0 + v4) * 5.9006e-11 + 1.00273791 + (v5 / 36525.0 + v4) * (v5 / 36525.0 + v4) * -5.9e-15)* 6.28318531* v5, 6.28318531);
  __double2 v8 = __sincos_stret(v7);
  return a3[1] * v8.__sinval + v8.__cosval * *a3;
}

uint64_t cnnavigation::NORADTLEEphemerides::GNSSSatelliteClockOffset(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, void *a6)
{
  if (!*(unsigned char *)(a1 + 8)) {
    return 0xFFFFFFFFLL;
  }
  uint64_t result = 0;
  *a4 = 0;
  *a6 = 0;
  a6[1] = 0;
  return result;
}

uint64_t cnnavigation::NORADTLEEphemerides::GNSSSatelliteClockOffsetRate(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, void *a6)
{
  if (!*(unsigned char *)(a1 + 8)) {
    return 0xFFFFFFFFLL;
  }
  uint64_t result = 0;
  *a4 = 0;
  *a6 = 0;
  a6[1] = 0;
  return result;
}

double cnnavigation::NORADTLEEphemerides::GreenwichHourAngle(uint64_t a1, uint64_t a2)
{
  double v2 = (double)(*(_DWORD *)a2 - 2451545) / 36525.0;
  double v3 = *(double *)(a2 + 8);
  long double v4 = fmod(v2 * v2 * 0.093104 + v2 * (v2 * v2) * -0.0000062 + v2 * 3164400180.0 + 67310.5484, 86400.0)
     * 0.0000727220522
     + ((v3 / 36525.0 + v2) * 5.9006e-11 + 1.00273791 + (v3 / 36525.0 + v2) * (v3 / 36525.0 + v2) * -5.9e-15)
     * 6.28318531
     * v3;

  return fmod(v4, 6.28318531);
}

uint64_t sub_18DF01D50(uint64_t a1)
{
  *(void *)a1 = &unk_1EDD0AD48;
  if (*(char *)(a1 + 151) < 0) {
    operator delete(*(void **)(a1 + 128));
  }
  if (*(char *)(a1 + 111) < 0) {
    operator delete(*(void **)(a1 + 88));
  }
  if (*(char *)(a1 + 87) < 0) {
    operator delete(*(void **)(a1 + 64));
  }
  if (*(char *)(a1 + 63) < 0) {
    operator delete(*(void **)(a1 + 40));
  }
  if (*(char *)(a1 + 39) < 0) {
    operator delete(*(void **)(a1 + 16));
  }
  *(void *)a1 = &unk_1EDD0A9B8;
  return a1;
}

void sub_18DF01DFC(uint64_t a1)
{
  *(void *)a1 = &unk_1EDD0AD48;
  if (*(char *)(a1 + 151) < 0) {
    operator delete(*(void **)(a1 + 128));
  }
  if (*(char *)(a1 + 111) < 0) {
    operator delete(*(void **)(a1 + 88));
  }
  if (*(char *)(a1 + 87) < 0) {
    operator delete(*(void **)(a1 + 64));
  }
  if (*(char *)(a1 + 63) < 0) {
    operator delete(*(void **)(a1 + 40));
  }
  if (*(char *)(a1 + 39) < 0) {
    operator delete(*(void **)(a1 + 16));
  }
  *(void *)a1 = &unk_1EDD0A9B8;

  JUMPOUT(0x192FA6240);
}

uint64_t cnnavigation::GNSSCarrierPhase(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t *a5, double *a6, int8x16_t a7, int8x16_t a8, double a9)
{
  __int16 v11 = 0;
  long long v12 = 0u;
  long long v13 = 0u;
  int v14 = 0;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  int v17 = 0;
  return cnnavigation::GNSSCarrierPhase(a1, (uint64_t)&v11, a2, a3, a4, a5, a6, 0, a7, a8, a9, v10);
}

uint64_t cnnavigation::GNSSCarrierPhase(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t *a6, double *a7, int a8, int8x16_t a9, int8x16_t a10, double a11, float64x2_t *a12)
{
  if (*(double *)a9.i64 <= 0.0 || (a9.i64[0] & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL) {
    return 0xFFFFFFFFLL;
  }
  uint64_t v65 = v17;
  uint64_t v66 = v16;
  uint64_t v67 = v15;
  uint64_t v68 = v14;
  uint64_t v69 = v12;
  uint64_t v70 = v13;
  double v24 = *(double *)a10.i64;
  for (uint64_t i = 0; i != 24; i += 8)
  {
    if ((*(void *)(a3 + i) & 0x7FFFFFFFFFFFFFFFuLL) >= 0x7FF0000000000000) {
      return 0xFFFFFFFFLL;
    }
  }
  if ((a10.i64[0] & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL
    || (*(void *)&a11 & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL)
  {
    return 0xFFFFFFFFLL;
  }
  __n128 v52 = (__n128)a9;
  uint64_t v63 = 0;
  uint64_t v64 = 0;
  a9.i64[0] = a10.i64[0];
  CNTimeSpan::SetTimeSpan(&v63, 0, a9, a10);
  v62[0] = CNTimeSpan::operator-(a1, &v63, v29, v30);
  v62[1] = v31;
  double v60 = 0.0;
  uint64_t v61 = 0;
  long long v58 = 0u;
  float64x2_t v59 = 0u;
  if (a8)
  {
    uint64_t result = cnnavigation::GNSSTimeOfFlight((uint64_t)v62, a2, a3, a4, 2, a5, 1, a6, (int8x16_t)v52, v32, (double *)&v61, 1u, (uint64_t)&v58);
    if (result) {
      return result;
    }
    double v57 = 0.0;
    double v36 = *(double *)&v61;
    uint64_t v54 = 0;
    uint64_t v55 = 0;
    v34.i64[0] = v61;
    CNTimeSpan::SetTimeSpan(&v54, 0, v34, v35);
    uint64_t v63 = CNTimeSpan::operator-((uint64_t)v62, &v54, v37, v38);
    uint64_t v64 = v39;
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t, double *, uint64_t, double *, __n128))(*(void *)a4 + 96))(a4, &v63, a2, &v57, 1, v56, v52);
  }
  else
  {
    uint64_t result = cnnavigation::GNSSTimeOfFlight((uint64_t)v62, a2, a3, a4, 2, a5, 1, a6, (int8x16_t)v52, v32, (double *)&v61, 0, (uint64_t)&v63);
    if (result) {
      return result;
    }
    double v57 = 0.0;
    double v36 = *(double *)&v61;
    v53[0] = 0;
    v53[1] = 0;
    v40.i64[0] = v61;
    CNTimeSpan::SetTimeSpan(v53, 0, v40, v41);
    uint64_t v54 = CNTimeSpan::operator-((uint64_t)v62, v53, v42, v43);
    uint64_t v55 = v44;
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t, double *, void, uint64_t *, __n128))(*(void *)a4 + 96))(a4, &v54, a2, &v57, 0, &v63, v52);
  }
  if (!result)
  {
    double v45 = a11 + v52.n128_f64[0] * (v36 - v57 + v24);
    *a7 = v45;
    if (a8)
    {
      double v46 = v56[0];
      double v47 = -v56[0];
      double v48 = *(double *)&v58;
      double v49 = v60;
      double v50 = v60 * v56[0];
      double v51 = (v45 - a11) / v52.n128_f64[0] + v52.n128_f64[0] * *((double *)&v58 + 1) - v52.n128_f64[0] * v56[1];
      a12->f64[0] = v52.n128_f64[0] * *(double *)&v58 - v52.n128_f64[0] * (v56[0] - v56[0] * *(double *)&v58);
      a12->f64[1] = v51;
      a12[1] = vmlaq_n_f64(vmulq_n_f64(vmulq_n_f64(v59, v47), -v52.n128_f64[0]), v59, v52.n128_f64[0]);
      a12[2].f64[0] = v50 * v52.n128_f64[0] + v52.n128_f64[0] * v49;
      a12[2].f64[1] = v46 * v52.n128_f64[0] - v52.n128_f64[0] * v48 + v52.n128_f64[0];
    }
  }
  return result;
}

uint64_t cnnavigation::GNSSCarrierPhase(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t *a5, double *a6, float64x2_t *a7, int8x16_t a8, int8x16_t a9, double a10)
{
  __int16 v11 = 0;
  long long v12 = 0u;
  long long v13 = 0u;
  int v14 = 0;
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  int v17 = 0;
  return cnnavigation::GNSSCarrierPhase(a1, (uint64_t)&v11, a2, a3, a4, a5, a6, 1, a8, a9, a10, a7);
}

uint64_t cnnavigation::GNSSCarrierPhase(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t *a6, double *a7, int8x16_t a8, int8x16_t a9, double a10)
{
  return cnnavigation::GNSSCarrierPhase(a1, a2, a3, a4, a5, a6, a7, 0, a8, a9, a10, v11);
}

uint64_t cnnavigation::GNSSCarrierPhase(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t *a6, double *a7, float64x2_t *a8, int8x16_t a9, int8x16_t a10, double a11)
{
  return cnnavigation::GNSSCarrierPhase(a1, a2, a3, a4, a5, a6, a7, 1, a9, a10, a11, a8);
}

uint64_t cnnavigation::BeiDouTime::BeiDouTime(uint64_t this, int a2, double a3)
{
  *(_DWORD *)this = a2;
  *(double *)(this + 8) = a3;
  return this;
}

{
  *(_DWORD *)this = a2;
  *(double *)(this + 8) = a3;
  return this;
}

double cnnavigation::BeiDouTime::BeiDouTime(cnnavigation::BeiDouTime *this, double a2)
{
  int v2 = vcvtmd_s64_f64(a2 / 604800.0);
  *(_DWORD *)this = v2;
  double result = a2 + (double)v2 * -604800.0;
  *((double *)this + 1) = result;
  return result;
}

{
  int v2;
  double result;

  int v2 = vcvtmd_s64_f64(a2 / 604800.0);
  *(_DWORD *)this = v2;
  double result = a2 + (double)v2 * -604800.0;
  *((double *)this + 1) = result;
  return result;
}

double cnnavigation::BeiDouTime::BeiDouTime(uint64_t a1, double *a2)
{
  double v2 = *a2;
  uint64_t v3 = *(void *)a2 / 604800;
  *(_DWORD *)a1 = v3;
  double result = a2[1] + (double)(*(void *)&v2 - 604800 * (int)v3);
  *(double *)(a1 + 8) = result;
  if (result < 0.0)
  {
    *(_DWORD *)a1 = v3 - 1;
    double result = result + 604800.0;
    *(double *)(a1 + 8) = result;
  }
  return result;
}

{
  double v2;
  uint64_t v3;
  double result;

  double v2 = *a2;
  uint64_t v3 = *(void *)a2 / 604800;
  *(_DWORD *)a1 = v3;
  double result = a2[1] + (double)(*(void *)&v2 - 604800 * (int)v3);
  *(double *)(a1 + 8) = result;
  if (result < 0.0)
  {
    *(_DWORD *)a1 = v3 - 1;
    double result = result + 604800.0;
    *(double *)(a1 + 8) = result;
  }
  return result;
}

uint64_t cnnavigation::BeiDouTime::operator CNTime(int *a1, int8x16_t a2, int8x16_t a3)
{
  a2.i64[0] = *((void *)a1 + 1);
  uint64_t v3 = vcvtmd_s64_f64(*(double *)a2.i64) + 604800 * *a1;
  *(double *)a3.i64 = (double)(uint64_t)floor(*(double *)a2.i64);
  *(double *)a2.i64 = *(double *)a2.i64 - *(double *)a3.i64;
  v5[0] = 0;
  v5[1] = 0;
  CNTimeSpan::SetTimeSpan(v5, v3, a2, a3);
  return v5[0];
}

uint64_t cnnavigation::BeiDouTimeToJulianTime(double *a1, int a2, uint64_t a3)
{
  int v3 = *(_DWORD *)a1;
  if ((*(_DWORD *)a1 & 0x80000000) != 0) {
    return 0xFFFFFFFFLL;
  }
  double v4 = a1[1];
  uint64_t result = 0xFFFFFFFFLL;
  if (v4 >= 0.0 && v4 < 604800.0)
  {
    uint64_t result = 0;
    int v6 = vcvtmd_s64_f64(v4 / 86400.0);
    double v7 = (v4 - (double)a2) / 86400.0 + 0.5 - (double)v6;
    *(_DWORD *)a3 = v6 - v3 + 8 * v3 + 2453736 + vcvtmd_s64_f64(v7);
    *(double *)(a3 + 8) = v7 - floor(v7);
  }
  return result;
}

double cnnavigation::JulianTimeToBeiDouTime(uint64_t a1, int a2, uint64_t a3)
{
  double v3 = *(double *)(a1 + 8) + -0.5;
  double result = v3 - floor(v3);
  unsigned int v5 = *(_DWORD *)a1 - 2453736 + vcvtmd_s64_f64(v3);
  if ((v5 & 0x80000000) == 0)
  {
    *(_DWORD *)a3 = v5 / 7;
    double result = result * 86400.0 + (double)(v5 % 7) * 86400.0 + (double)a2;
    *(double *)(a3 + 8) = result;
    if (result >= 604800.0)
    {
      *(_DWORD *)a3 = v5 / 7 + 1;
      double result = result + -604800.0;
      *(double *)(a3 + 8) = result;
    }
  }
  return result;
}

uint64_t cnnavigation::GNSSPseudorange(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t *a5, double *a6, int8x16_t a7, int8x16_t a8)
{
  __int16 v10 = 0;
  long long v11 = 0u;
  long long v12 = 0u;
  int v13 = 0;
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  int v16 = 0;
  return cnnavigation::GNSSPseudorange(a1, (uint64_t)&v10, a2, a3, a4, a5, a6, 0, a7, a8, v9);
}

uint64_t cnnavigation::GNSSPseudorange(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t *a6, double *a7, int a8, int8x16_t a9, int8x16_t a10, float64x2_t *a11)
{
  if (*(double *)a9.i64 <= 0.0) {
    return 0xFFFFFFFFLL;
  }
  uint64_t v73 = v16;
  uint64_t v74 = v15;
  uint64_t v75 = v14;
  uint64_t v76 = v13;
  uint64_t v77 = v11;
  uint64_t v78 = v12;
  double v17 = *(double *)a9.i64;
  if ((a9.i64[0] & 0x7FFFFFFFFFFFFFFFuLL) <= 0x7FEFFFFFFFFFFFFFLL)
  {
    double v23 = *(double *)a10.i64;
    uint64_t v27 = 0;
    while ((*(void *)(a3 + v27) & 0x7FFFFFFFFFFFFFFFuLL) < 0x7FF0000000000000)
    {
      v27 += 8;
      if (v27 == 24)
      {
        if ((a10.i64[0] & 0x7FFFFFFFFFFFFFFFuLL) > 0x7FEFFFFFFFFFFFFFLL) {
          return 0xFFFFFFFFLL;
        }
        uint64_t v71 = 0;
        uint64_t v72 = 0;
        a9.i64[0] = a10.i64[0];
        CNTimeSpan::SetTimeSpan(&v71, 0, a9, a10);
        v70[0] = CNTimeSpan::operator-(a1, &v71, v28, v29);
        v70[1] = v30;
        double v68 = 0.0;
        double v69 = 0.0;
        v32.i64[1] = 0;
        float64x2_t v66 = 0u;
        float64x2_t v67 = 0u;
        if (a8)
        {
          *(double *)v32.i64 = v17;
          uint64_t result = cnnavigation::GNSSTimeOfFlight((uint64_t)v70, a2, a3, a4, 1, a5, 1, a6, v32, v31, &v69, 1u, (uint64_t)&v66);
          if (!result)
          {
            double v65 = 0.0;
            double v36 = v69;
            uint64_t v62 = 0;
            uint64_t v63 = 0;
            *(double *)v34.i64 = v69;
            CNTimeSpan::SetTimeSpan(&v62, 0, v34, v35);
            uint64_t v71 = CNTimeSpan::operator-((uint64_t)v70, &v62, v37, v38);
            uint64_t v72 = v39;
            uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t, double *, uint64_t, double *, double))(*(void *)a4 + 96))(a4, &v71, a2, &v65, 1, v64, v17);
            if (!result)
            {
              *a7 = (v36 - v65 + v23) * 299792458.0;
              _D1 = v64[0];
              double v41 = v68;
              double v42 = v68 * v64[0];
              double v43 = v64[0] * 299792458.0;
              _D6 = v66.f64[0];
              __asm { FMLS            D1, D1, V6.D[0] }
              _Q1.f64[1] = v64[1];
              float64x2_t v50 = (float64x2_t)vdupq_n_s64(0xC1B1DE784A000000);
              float64x2_t v51 = vmulq_f64(_Q1, v50);
              float64x2_t v52 = vmulq_f64(vmulq_n_f64(v67, -v64[0]), v50);
              float64x2_t v53 = (float64x2_t)vdupq_n_s64(0x41B1DE784A000000uLL);
              float64x2_t v54 = vmlaq_f64(v52, v53, v67);
              *a11 = vmlaq_f64(v51, v53, v66);
              a11[1] = v54;
              a11[2].f64[0] = v42 * 299792458.0 + v41 * 299792458.0;
              a11[2].f64[1] = vmlad_n_f64(v43, -299792458.0, _D6) + 299792458.0;
            }
          }
        }
        else
        {
          *(double *)v32.i64 = v17;
          uint64_t result = cnnavigation::GNSSTimeOfFlight((uint64_t)v70, a2, a3, a4, 1, a5, 1, a6, v32, v31, &v69, 0, (uint64_t)&v71);
          if (!result)
          {
            double v65 = 0.0;
            double v57 = v69;
            v61[0] = 0;
            v61[1] = 0;
            *(double *)v55.i64 = v69;
            CNTimeSpan::SetTimeSpan(v61, 0, v55, v56);
            uint64_t v62 = CNTimeSpan::operator-((uint64_t)v70, v61, v58, v59);
            uint64_t v63 = v60;
            uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t, double *, void, uint64_t *, double))(*(void *)a4 + 96))(a4, &v62, a2, &v65, 0, &v71, v17);
            if (!result) {
              *a7 = (v57 - v65 + v23) * 299792458.0;
            }
          }
        }
        return result;
      }
    }
  }
  return 0xFFFFFFFFLL;
}

uint64_t cnnavigation::GNSSPseudorange(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t *a5, double *a6, float64x2_t *a7, int8x16_t a8, int8x16_t a9)
{
  __int16 v10 = 0;
  long long v11 = 0u;
  long long v12 = 0u;
  int v13 = 0;
  uint64_t v14 = 0;
  uint64_t v15 = 0;
  int v16 = 0;
  return cnnavigation::GNSSPseudorange(a1, (uint64_t)&v10, a2, a3, a4, a5, a6, 1, a8, a9, a7);
}

uint64_t cnnavigation::GNSSPseudorange(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t *a6, double *a7, int8x16_t a8, int8x16_t a9)
{
  return cnnavigation::GNSSPseudorange(a1, a2, a3, a4, a5, a6, a7, 0, a8, a9, v10);
}

uint64_t cnnavigation::GNSSPseudorange(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t *a6, double *a7, float64x2_t *a8, int8x16_t a9, int8x16_t a10)
{
  return cnnavigation::GNSSPseudorange(a1, a2, a3, a4, a5, a6, a7, 1, a9, a10, a8);
}

uint64_t cnnavigation::BeiDouEphemerisDatabase::GetEphemerides(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(unsigned char *)(a2 + 24) != 4) {
    return 0xFFFFFFFFLL;
  }
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v3 = a1 + 8;
  uint64_t v4 = v5;
  if (!v5) {
    return 0xFFFFFFFFLL;
  }
  int v7 = *(_DWORD *)(a2 + 28) + 4000;
  uint64_t v8 = v3;
  do
  {
    int v9 = *(_DWORD *)(v4 + 32);
    BOOL v10 = v9 < v7;
    if (v9 >= v7) {
      long long v11 = (uint64_t *)v4;
    }
    else {
      long long v11 = (uint64_t *)(v4 + 8);
    }
    if (!v10) {
      uint64_t v8 = v4;
    }
    uint64_t v4 = *v11;
  }
  while (*v11);
  if (v8 == v3 || v7 < *(_DWORD *)(v8 + 32)) {
    return 0xFFFFFFFFLL;
  }
  std::string::operator=((std::string *)(a3 + 8), (const std::string *)(v8 + 48));
  *(void *)(a3 + 32) = *(void *)(v8 + 72);
  memcpy((void *)(a3 + 40), (const void *)(v8 + 80), 0x10CuLL);
  return 0;
}

uint64_t cnnavigation::BeiDouEphemerisDatabase::SetEphemerides(uint64_t **this, const cnnavigation::BeiDouEphemerides *a2)
{
  double v2 = (char *)a2 + 40;
  if (*((unsigned char *)a2 + 32) != 4 || *((unsigned char *)a2 + 40) == 0) {
    return 0xFFFFFFFFLL;
  }
  int v7 = (_OWORD *)((char *)a2 + 8);
  int v8 = *((_DWORD *)a2 + 9) + 4000;
  BOOL v10 = (char *)(this + 1);
  int v9 = (char *)this[1];
  long long v11 = (char **)(this + 1);
  long long v12 = (char **)(this + 1);
  if (!v9)
  {
LABEL_23:
    double v19 = (char *)operator new(0x160uLL);
    v22[0] = (uint64_t)v19;
    v22[1] = (uint64_t)v10;
    char v23 = 0;
    *((_DWORD *)v19 + 8) = v8;
    *((void *)v19 + 5) = &unk_1EDD0AAC8;
    double v20 = v19 + 48;
    if (*((char *)a2 + 31) < 0)
    {
      sub_18DEDE668(v20, *((void **)a2 + 1), *((void *)a2 + 2));
    }
    else
    {
      *(_OWORD *)double v20 = *v7;
      *((void *)v19 + 8) = *((void *)v2 - 2);
    }
    *((void *)v19 + 9) = *((void *)a2 + 4);
    memcpy(v19 + 80, v2, 0x10CuLL);
    char v23 = 1;
    *(void *)double v19 = 0;
    *((void *)v19 + 1) = 0;
    *((void *)v19 + 2) = v12;
    *long long v11 = v19;
    double v21 = (uint64_t *)**this;
    if (v21)
    {
      *this = v21;
      double v19 = *v11;
    }
    sub_18DEEDADC(this[1], (uint64_t *)v19);
    this[2] = (uint64_t *)((char *)this[2] + 1);
    v22[0] = 0;
    sub_18DF02D14(v22);
    return 0;
  }
  int v13 = (char *)(this + 1);
  uint64_t v14 = (char *)this[1];
  do
  {
    int v15 = *((_DWORD *)v14 + 8);
    BOOL v16 = v15 < v8;
    if (v15 >= v8) {
      double v17 = (char **)v14;
    }
    else {
      double v17 = (char **)(v14 + 8);
    }
    if (!v16) {
      int v13 = v14;
    }
    uint64_t v14 = *v17;
  }
  while (*v17);
  if (v13 == v10 || v8 < *((_DWORD *)v13 + 8))
  {
    while (1)
    {
      while (1)
      {
        long long v12 = (char **)v9;
        int v18 = *((_DWORD *)v9 + 8);
        if (v18 <= v8) {
          break;
        }
        int v9 = *v12;
        long long v11 = v12;
        if (!*v12) {
          goto LABEL_23;
        }
      }
      if (v18 >= v8) {
        return 0;
      }
      int v9 = v12[1];
      if (!v9)
      {
        long long v11 = v12 + 1;
        goto LABEL_23;
      }
    }
  }
  if (*((double *)a2 + 7) - *((double *)v13 + 12) + (double)(*((_DWORD *)a2 + 12) - *((_DWORD *)v13 + 22)) * 604800.0 <= 0.0) {
    return 0xFFFFFFFFLL;
  }
  std::string::operator=((std::string *)v13 + 2, (const std::string *)((char *)a2 + 8));
  *((void *)v13 + 9) = *((void *)a2 + 4);
  memcpy(v13 + 80, v2, 0x10CuLL);
  return 0;
}

void sub_18DF02CAC(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  void *v2 = &unk_1EDD0A9B8;
  sub_18DF02D14((uint64_t *)va);
  _Unwind_Resume(a1);
}

void cnnavigation::BeiDouEphemerisDatabase::Reset(char **this)
{
  double v2 = (char *)(this + 1);
  sub_18DF02D94(this[1]);
  *this = v2;
  this[2] = 0;
  *(void *)double v2 = 0;
}

void sub_18DF02D14(uint64_t *a1)
{
  uint64_t v1 = *a1;
  *a1 = 0;
  if (v1)
  {
    if (*((unsigned char *)a1 + 16))
    {
      *(void *)(v1 + 40) = &unk_1EDD0AAC8;
      if (*(char *)(v1 + 71) < 0) {
        operator delete(*(void **)(v1 + 48));
      }
    }
    operator delete((void *)v1);
  }
}

void sub_18DF02D94(char *a1)
{
  if (a1)
  {
    sub_18DF02D94(*(void *)a1);
    sub_18DF02D94(*((void *)a1 + 1));
    *((void *)a1 + 5) = &unk_1EDD0AAC8;
    if (a1[71] < 0) {
      operator delete(*((void **)a1 + 6));
    }
    operator delete(a1);
  }
}

uint64_t cnnavigation::GPSTimeOfFlight(uint64_t a1, double *a2, uint64_t a3, uint64_t a4, uint64_t a5, double *a6, double a7, double a8)
{
  return cnnavigation::GPSTimeOfFlight(a1, a2, a3, a4, a5, a6, 0, v9, a7, a8);
}

uint64_t cnnavigation::GPSTimeOfFlight(uint64_t a1, double *a2, uint64_t a3, uint64_t a4, uint64_t a5, double *a6, int a7, double *a8, double a9, double a10)
{
  uint64_t v65 = *MEMORY[0x1E4F143B8];
  double v46 = a2[1];
  double v47 = *a2;
  double v45 = a2[2];
  *a6 = 0.0;
  double v20 = 0.0;
  int v21 = 10;
  while (1)
  {
    uint64_t result = cnnavigation::GPSFindSat(a1, a3, (double *)&v54, 0, 0, a9 - v20);
    if (result) {
      break;
    }
    double v23 = *a6;
    __double2 v24 = __sincos_stret(*a6 * 0.0000729211515);
    double v25 = v24.__sinval * *((double *)&v54 + 1) + v24.__cosval * *(double *)&v54;
    double v26 = v24.__cosval * *((double *)&v54 + 1) - v24.__sinval * *(double *)&v54;
    double v27 = *(double *)&v55;
    *(double *)&long long v50 = v25;
    *((double *)&v50 + 1) = v26;
    *(void *)&long long v51 = v55;
    double v62 = 0.0;
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, double *, long long *, double *, double, double))(*(void *)a4 + 16))(a4, a1, a2, &v50, &v62, a9 - v23, a10);
    if (result) {
      break;
    }
    double v59 = 0.0;
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, double *, long long *, double *, double))(*(void *)a5 + 16))(a5, a1, a2, &v50, &v59, a9 - *a6);
    if (result) {
      break;
    }
    double v20 = sqrt((v26 - v46) * (v26 - v46) + (v25 - v47) * (v25 - v47) + (v27 - v45) * (v27 - v45)) / 299792458.0
        + v62
        + v59;
    *a6 = v20;
    if (!--v21)
    {
      if (!a7) {
        return 0;
      }
      uint64_t result = cnnavigation::GPSFindSat(a1, a3, &v62, &v59, 0, a9 - v20);
      if (!result)
      {
        double v28 = *a6;
        __double2 v29 = __sincos_stret(*a6 * 0.0000729211515);
        double v30 = v64;
        double v43 = v29.__cosval * v63 - v29.__sinval * v62;
        double v44 = v29.__sinval * v63 + v29.__cosval * v62;
        v58[0] = v44;
        v58[1] = v43;
        v58[2] = v64;
        double v49 = 0.0;
        long long v56 = 0u;
        long long v57 = 0u;
        long long v54 = 0u;
        long long v55 = 0u;
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, double *, double *, double *, long long *, double, double))(*(void *)a4 + 24))(a4, a1, a2, v58, &v49, &v54, a9 - v28, a10);
        if (!result)
        {
          double v48 = 0.0;
          double v53 = 0.0;
          long long v51 = 0u;
          long long v52 = 0u;
          long long v50 = 0u;
          uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, double *, double *, double *, long long *, double))(*(void *)a5 + 24))(a5, a1, a2, v58, &v48, &v50, a9 - *a6);
          if (!result)
          {
            double v31 = sqrt((v43 - v46) * (v43 - v46) + (v44 - v47) * (v44 - v47) + (v30 - v45) * (v30 - v45));
            *a6 = v31 / 299792458.0 + v49 + v48;
            double v32 = (v44 - v47) / v31;
            double v33 = (v43 - v46) / v31;
            double v34 = (v30 - v45) / v31;
            double v35 = (v29.__cosval * v63 + -v29.__sinval * v62) * 0.0000729211515 - v29.__cosval * v59 - v29.__sinval * v60;
            double v36 = (v63 * -v29.__sinval - v29.__cosval * v62) * 0.0000729211515 + v29.__sinval * v59 - v29.__cosval * v60;
            double v37 = *(double *)&v56;
            double v38 = *((double *)&v50 + 1);
            double v39 = 1.0
                - (*((double *)&v56 + 1) * v35
                 - *(double *)&v54
                 + *(double *)&v57 * v36
                 - *((double *)&v57 + 1) * v61
                 + (v33 * v36 + v32 * v35 - v34 * v61) * 0.00000000333564095
                 + v35 * *(double *)&v52
                 - *(double *)&v50
                 + *((double *)&v52 + 1) * v36
                 - v53 * v61);
            double v40 = *((double *)&v54 + 1) / v39;
            *a8 = (*(double *)&v54
                 + *((double *)&v56 + 1) * (v29.__sinval * v60 + v29.__cosval * v59)
                 + *(double *)&v57 * (v29.__cosval * v60 + -v29.__sinval * v59)
                 + *((double *)&v57 + 1) * v61
                 + (v33 * (v29.__cosval * v60 + -v29.__sinval * v59)
                  + v32 * (v29.__sinval * v60 + v29.__cosval * v59)
                  + v34 * v61)
                 * 0.00000000333564095
                 + *(double *)&v50
                 + *(double *)&v52 * (v29.__sinval * v60 + v29.__cosval * v59)
                 + *((double *)&v52 + 1) * (v29.__cosval * v60 + -v29.__sinval * v59)
                 + v53 * v61)
                / v39;
            a8[1] = v40;
            double v41 = *((double *)&v51 + 1);
            double v42 = (*(double *)&v51 + *((double *)&v55 + 1) - v33 * 0.00000000333564095) / v39;
            a8[2] = (v38 + *(double *)&v55 - v32 * 0.00000000333564095) / v39;
            a8[3] = v42;
            a8[4] = (v41 + v37 - v34 * 0.00000000333564095) / v39;
          }
        }
      }
      return result;
    }
  }
  return result;
}

uint64_t cnnavigation::GPSTimeOfFlight(uint64_t a1, double *a2, uint64_t a3, uint64_t a4, uint64_t a5, double *a6, double *a7, double a8, double a9)
{
  return cnnavigation::GPSTimeOfFlight(a1, a2, a3, a4, a5, a6, 1, a7, a8, a9);
}

uint64_t cnnavigation::GPSTimeOfFlightRate(uint64_t a1, double *a2, double *a3, uint64_t a4, uint64_t a5, uint64_t a6, double *a7, double a8, double a9)
{
  return cnnavigation::GPSTimeOfFlightRate(a1, a2, a3, a4, a5, a6, a7, 0, a8, a9, v10);
}

uint64_t cnnavigation::GPSTimeOfFlightRate(uint64_t a1, double *a2, double *a3, uint64_t a4, uint64_t a5, uint64_t a6, double *a7, int a8, double a9, double a10, double *a11)
{
  uint64_t v146 = *MEMORY[0x1E4F143B8];
  double v139 = 0.0;
  uint64_t result = cnnavigation::GPSTimeOfFlight(a1, a2, a4, a5, a6, &v139, 1, v135, a9, a10);
  if (!result)
  {
    double v22 = v135[0];
    double v23 = v136;
    double v24 = v137;
    double v25 = v138;
    *a7 = v135[0] + v136 * *a3 + v137 * a3[1] + v138 * a3[2];
    if (a8)
    {
      double v122 = v22;
      double v123 = v24;
      double v124 = v23;
      double v26 = v135[1];
      double v28 = *a2;
      double v27 = a2[1];
      double v29 = a2[2];
      double v30 = v139;
      double v31 = a9 - v139;
      uint64_t result = cnnavigation::GPSFindSat(a1, a4, &v143, v142, v141, v31);
      if (!result)
      {
        double v104 = v29;
        double v105 = v28;
        double v106 = v25;
        __double2 v32 = __sincos_stret(v30 * 0.0000729211515);
        double v33 = v143;
        double v34 = v144;
        double v35 = v145;
        double v36 = v32.__cosval * v144 - v32.__sinval * v143;
        v140[0] = v32.__sinval * v144 + v32.__cosval * v143;
        v140[1] = v36;
        v140[2] = v145;
        double v111 = v142[1];
        double v119 = *a7;
        double v120 = v140[0];
        double v116 = a3[1];
        double v117 = v142[2];
        double v118 = a3[2];
        double v103 = v141[0];
        double v107 = v141[1];
        double v108 = v142[0];
        double v114 = v141[2];
        double v115 = *a3;
        uint64_t v134 = 0;
        long long v132 = 0u;
        long long v133 = 0u;
        long long v130 = 0u;
        long long v131 = 0u;
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, double *, double *, uint64_t *, long long *, double, double))(*(void *)a5 + 24))(a5, a1, a2, v140, &v134, &v130, v31, a10);
        if (!result)
        {
          double v37 = v120;
          uint64_t v128 = 0;
          uint64_t v129 = 0;
          long long v126 = 0u;
          long long v127 = 0u;
          long long v125 = 0u;
          uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, double *, double *, uint64_t *, long long *, double))(*(void *)a6 + 24))(a6, a1, a2, v140, &v129, &v125, v31);
          if (!result)
          {
            double v38 = v120 - v105;
            double v39 = v35 - v104;
            double v40 = 1.0 - v119;
            double v41 = v32.__sinval * -0.0000729211515 * v119;
            double v42 = v32.__cosval * 0.0000729211515 * -0.0000729211515 * v119;
            double v43 = v32.__sinval * 0.0000729211515 * v119;
            double v44 = v36 - v27;
            double v45 = v32.__cosval * 0.0000729211515 * v119;
            double v46 = v108 * v41 + v32.__cosval * v103 * (1.0 - v119) + v32.__sinval * v107 * (1.0 - v119) + v45 * v111;
            double v47 = (1.0 - v119) * (v32.__sinval * v103)
                + v32.__cosval * -0.0000729211515 * v108 * (1.0 - v119)
                + v32.__sinval * 0.0000729211515 * 0.0000729211515 * v119 * v33
                + v45 * v108;
            double v48 = v36 * 0.0000729211515 - v32.__cosval * v108 - v32.__sinval * v111;
            double v49 = (-(v32.__sinval * v34) - v32.__cosval * v33) * 0.0000729211515 + v32.__sinval * v108;
            double v50 = v32.__cosval * v111 - v32.__sinval * v108;
            double v51 = v32.__sinval * -0.0000729211515 * v33 - v32.__cosval * v108 - v32.__sinval * v111;
            double v52 = v32.__cosval * -0.0000729211515 * v33 + v32.__sinval * v108;
            double v53 = v32.__sinval * v111 + v32.__cosval * v108;
            double v54 = v32.__cosval * -0.0000729211515 * v119;
            double v55 = (1.0 - v119) * -(v32.__cosval * v103)
                + v32.__sinval * -0.0000729211515 * v108 * (1.0 - v119)
                + v42 * v33
                + v43 * v108
                + v32.__cosval * 0.0000729211515 * v111 * (1.0 - v119)
                + -(v32.__sinval * v107) * (1.0 - v119)
                + v32.__sinval * 0.0000729211515 * -0.0000729211515 * v119 * v34
                + v54 * v111;
            double v56 = v108 * v54 + -(v32.__sinval * v103) * v40 + v32.__cosval * v107 * v40 + v41 * v111;
            double v57 = v44 * v44 + v38 * v38;
            double v109 = v47
                 + v32.__sinval * -0.0000729211515 * v111 * v40
                 + -(v32.__cosval * v107) * v40
                 + v42 * v34
                 + v43 * v111;
            double v110 = v56;
            double v58 = sqrt(v57 + v39 * v39);
            double v59 = v49 - v32.__cosval * v111;
            double v60 = v52 - v32.__cosval * v111;
            double v121 = v51 + v32.__cosval * 0.0000729211515 * v34;
            double v61 = v58 * (v58 * v58);
            double v62 = (v39 * v39 + v44 * v44) / v61;
            double v63 = -((v37 - v105) * (v36 - v27)) / v61;
            double v64 = -((v37 - v105) * (v35 - v104)) / v61;
            double v65 = v117 - v122 * v117;
            double v66 = v53 + v48 * v122;
            double v67 = v53 + v48 * v119;
            double v68 = v50 + v59 * v122;
            double v69 = (v37 - v105) / v58;
            double v112 = v69;
            double v113 = v60 + v32.__sinval * -0.0000729211515 * v34;
            double v70 = v69 * (v46 + v55 * v122) + (v63 * v68 + v62 * v66 + v64 * v65) * v67;
            double v71 = v59 * v63 + v62 * v48 - v64 * v117;
            double v72 = v69 * v55;
            double v73 = v26 * v72 + v26 * v71 * v67;
            double v74 = v124 * v72 + -(v62 - v71 * v124) * v67;
            double v75 = v123 * v72 + -(v63 - v71 * v123) * v67;
            double v76 = v106 * v72 + -(v64 - v71 * v106) * v67;
            double v77 = (v39 * v39 + v38 * v38) / v61;
            double v78 = v50 + v59 * v119;
            double v79 = -((v36 - v27) * (v35 - v104)) / v61;
            double v80 = v70 + (v77 * v68 + v63 * v66 + v79 * v65) * v78;
            double v81 = v59 * v77 + v63 * v48 - v79 * v117;
            double v82 = v73 + v26 * v81 * v78;
            double v83 = v74 + -(v63 - v81 * v124) * v78;
            double v84 = v75 + -(v77 - v81 * v123) * v78;
            double v85 = v76 + -(v79 - v81 * v106) * v78;
            double v86 = (v36 - v27) / v58;
            double v87 = (v35 - v104) / v58;
            double v88 = v57 / v61;
            double v89 = -(v114 * (1.0 - v119));
            double v90 = v117 - v117 * v119;
            double v91 = v80
                + v86 * (v110 + v109 * v122)
                + (v79 * v68 + v64 * v66 + v57 / v61 * v65) * v90
                + v87 * ((1.0 - v119) * v114 + v89 * v122)
                + (-(v63 * v68) - v62 * v66 - v64 * v65) * v115
                + (-(v77 * v68) - v63 * v66 - v79 * v65) * v116;
            double v92 = v59 * v79 + v64 * v48 - v88 * v117;
            double v93 = v87 * v89;
            double v94 = -(v63 * v59) - v62 * v48 + v64 * v117;
            double v95 = v83 + v86 * v109 * v124 + -(v64 - v92 * v124) * v90 + v93 * v124 + (v62 + v94 * v124) * v115;
            double v96 = -(v77 * v59) - v63 * v48 + v79 * v117;
            double v97 = -(v79 * v59) - v64 * v48 + v88 * v117;
            double v98 = 1.0 - (v86 * v113 + v69 * v121 - v87 * v117) / 299792458.0;
            *a11 = (v91 + (-(v79 * v68) - v64 * v66 - v88 * v65) * v118) / 299792458.0 / v98;
            a11[1] = (v82
                    + v86 * v109 * v26
                    + v26 * v92 * v90
                    + v93 * v26
                    + v26 * v94 * v115
                    + v26 * v96 * v116
                    + v26 * v97 * v118)
                   / 299792458.0
                   / v98;
            a11[2] = (v95 + (v63 + v96 * v124) * v116 + (v64 + v97 * v124) * v118) / 299792458.0 / v98;
            a11[3] = (v84
                    + v86 * v109 * v123
                    + -(v79 - v92 * v123) * v90
                    + v93 * v123
                    + (v63 + v94 * v123) * v115
                    + (v77 + v96 * v123) * v116
                    + (v79 + v97 * v123) * v118)
                   / 299792458.0
                   / v98;
            double v99 = *((double *)&v131 + 1);
            double v100 = *(double *)&v126;
            double v101 = (*(double *)&v131 - v112 / 299792458.0 + *((double *)&v125 + 1)) / v98;
            a11[4] = (v85
                    + v86 * v109 * v106
                    + -(v88 - v92 * v106) * v90
                    + v93 * v106
                    + (v64 + v94 * v106) * v115
                    + (v79 + v96 * v106) * v116
                    + (v88 + v97 * v106) * v118)
                   / 299792458.0
                   / v98;
            a11[5] = v101;
            double v102 = (*(double *)&v132 - v87 / 299792458.0 + *((double *)&v126 + 1)) / v98;
            a11[6] = (v99 - v86 / 299792458.0 + v100) / v98;
            a11[7] = v102;
          }
        }
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t cnnavigation::GPSTimeOfFlightRate(uint64_t a1, double *a2, double *a3, uint64_t a4, uint64_t a5, uint64_t a6, double *a7, double *a8, double a9, double a10)
{
  return cnnavigation::GPSTimeOfFlightRate(a1, a2, a3, a4, a5, a6, a7, 1, a9, a10, a8);
}

cnprint::CNPrinter *cnprint::CNPrinter::CNPrinter(cnprint::CNPrinter *this)
{
  double v2 = sub_18DEDE7B0(this, "com.apple.corenavigation");
  *((_DWORD *)v2 + 6) = 250;
  std::timed_mutex::timed_mutex((std::timed_mutex *)(v2 + 4));
  *((void *)this + 22) = 0;
  *((void *)this + 21) = (char *)this + 176;
  *((unsigned char *)this + 152) = 1;
  *((void *)this + 20) = 0;
  *((void *)this + 23) = 0;
  sub_18DEDE7B0((void *)this + 24, "");
  uint64_t v3 = MEMORY[0x1E4FBA468] + 64;
  *((void *)this + 79) = MEMORY[0x1E4FBA468] + 64;
  uint64_t v4 = *(void *)(MEMORY[0x1E4FBA400] + 16);
  uint64_t v5 = *(void *)(MEMORY[0x1E4FBA400] + 8);
  *((void *)this + 27) = v5;
  *(void *)((char *)this + *(void *)(v5 - 24) + 216) = v4;
  int v6 = (std::ios_base *)((char *)this + *(void *)(*((void *)this + 27) - 24) + 216);
  std::ios_base::init(v6, (char *)this + 224);
  uint64_t v7 = MEMORY[0x1E4FBA468] + 24;
  v6[1].__vftable = 0;
  v6[1].__fmtflags_ = -1;
  *((void *)this + 27) = v7;
  *((void *)this + 79) = v3;
  MEMORY[0x192FA5D90]((char *)this + 224);
  *((unsigned char *)this + 152) = 1;
  *((void *)this + 20) = *((void *)this + 20) & 0xFFFFFFFFFFFFFFF8 | 1;
  __int16 v44 = 0;
  int v8 = (const char *)this;
  if (*((char *)this + 23) < 0) {
    int v8 = *(const char **)this;
  }
  cnprint::CNPrinter::GetLogCategoryString(&v44, __p);
  if (v43 >= 0) {
    int v9 = __p;
  }
  else {
    int v9 = (void **)__p[0];
  }
  os_log_t v10 = os_log_create(v8, (const char *)v9);
  sub_18DF06548((uint64_t *)this + 21, 0, 0, (uint64_t)v10);
  if (v43 < 0) {
    operator delete(__p[0]);
  }
  __int16 v44 = 1;
  long long v11 = (const char *)this;
  if (*((char *)this + 23) < 0) {
    long long v11 = *(const char **)this;
  }
  cnprint::CNPrinter::GetLogCategoryString(&v44, __p);
  if (v43 >= 0) {
    long long v12 = __p;
  }
  else {
    long long v12 = (void **)__p[0];
  }
  os_log_t v13 = os_log_create(v11, (const char *)v12);
  sub_18DF06548((uint64_t *)this + 21, 1u, 1, (uint64_t)v13);
  if (v43 < 0) {
    operator delete(__p[0]);
  }
  __int16 v44 = 2;
  uint64_t v14 = (const char *)this;
  if (*((char *)this + 23) < 0) {
    uint64_t v14 = *(const char **)this;
  }
  cnprint::CNPrinter::GetLogCategoryString(&v44, __p);
  if (v43 >= 0) {
    int v15 = __p;
  }
  else {
    int v15 = (void **)__p[0];
  }
  os_log_t v16 = os_log_create(v14, (const char *)v15);
  sub_18DF06548((uint64_t *)this + 21, 2u, 2, (uint64_t)v16);
  if (v43 < 0) {
    operator delete(__p[0]);
  }
  __int16 v44 = 3;
  double v17 = (const char *)this;
  if (*((char *)this + 23) < 0) {
    double v17 = *(const char **)this;
  }
  cnprint::CNPrinter::GetLogCategoryString(&v44, __p);
  if (v43 >= 0) {
    int v18 = __p;
  }
  else {
    int v18 = (void **)__p[0];
  }
  os_log_t v19 = os_log_create(v17, (const char *)v18);
  sub_18DF06548((uint64_t *)this + 21, 3u, 3, (uint64_t)v19);
  if (v43 < 0) {
    operator delete(__p[0]);
  }
  __int16 v44 = 4;
  double v20 = (const char *)this;
  if (*((char *)this + 23) < 0) {
    double v20 = *(const char **)this;
  }
  cnprint::CNPrinter::GetLogCategoryString(&v44, __p);
  if (v43 >= 0) {
    int v21 = __p;
  }
  else {
    int v21 = (void **)__p[0];
  }
  os_log_t v22 = os_log_create(v20, (const char *)v21);
  sub_18DF06548((uint64_t *)this + 21, 4u, 4, (uint64_t)v22);
  if (v43 < 0) {
    operator delete(__p[0]);
  }
  __int16 v44 = 5;
  double v23 = (const char *)this;
  if (*((char *)this + 23) < 0) {
    double v23 = *(const char **)this;
  }
  cnprint::CNPrinter::GetLogCategoryString(&v44, __p);
  if (v43 >= 0) {
    double v24 = __p;
  }
  else {
    double v24 = (void **)__p[0];
  }
  os_log_t v25 = os_log_create(v23, (const char *)v24);
  sub_18DF06548((uint64_t *)this + 21, 5u, 5, (uint64_t)v25);
  if (v43 < 0) {
    operator delete(__p[0]);
  }
  __int16 v44 = 8;
  double v26 = (const char *)this;
  if (*((char *)this + 23) < 0) {
    double v26 = *(const char **)this;
  }
  cnprint::CNPrinter::GetLogCategoryString(&v44, __p);
  if (v43 >= 0) {
    double v27 = __p;
  }
  else {
    double v27 = (void **)__p[0];
  }
  os_log_t v28 = os_log_create(v26, (const char *)v27);
  sub_18DF06548((uint64_t *)this + 21, 8u, 8, (uint64_t)v28);
  if (v43 < 0) {
    operator delete(__p[0]);
  }
  __int16 v44 = 10;
  double v29 = (const char *)this;
  if (*((char *)this + 23) < 0) {
    double v29 = *(const char **)this;
  }
  cnprint::CNPrinter::GetLogCategoryString(&v44, __p);
  if (v43 >= 0) {
    double v30 = __p;
  }
  else {
    double v30 = (void **)__p[0];
  }
  os_log_t v31 = os_log_create(v29, (const char *)v30);
  sub_18DF06548((uint64_t *)this + 21, 0xAu, 10, (uint64_t)v31);
  if (v43 < 0) {
    operator delete(__p[0]);
  }
  __int16 v44 = 11;
  __double2 v32 = (const char *)this;
  if (*((char *)this + 23) < 0) {
    __double2 v32 = *(const char **)this;
  }
  cnprint::CNPrinter::GetLogCategoryString(&v44, __p);
  if (v43 >= 0) {
    double v33 = __p;
  }
  else {
    double v33 = (void **)__p[0];
  }
  os_log_t v34 = os_log_create(v32, (const char *)v33);
  sub_18DF06548((uint64_t *)this + 21, 0xBu, 11, (uint64_t)v34);
  if (v43 < 0) {
    operator delete(__p[0]);
  }
  __int16 v44 = 12;
  double v35 = (const char *)this;
  if (*((char *)this + 23) < 0) {
    double v35 = *(const char **)this;
  }
  cnprint::CNPrinter::GetLogCategoryString(&v44, __p);
  if (v43 >= 0) {
    double v36 = __p;
  }
  else {
    double v36 = (void **)__p[0];
  }
  os_log_t v37 = os_log_create(v35, (const char *)v36);
  sub_18DF06548((uint64_t *)this + 21, 0xCu, 12, (uint64_t)v37);
  if (v43 < 0) {
    operator delete(__p[0]);
  }
  __int16 v44 = 13;
  double v38 = (const char *)this;
  if (*((char *)this + 23) < 0) {
    double v38 = *(const char **)this;
  }
  cnprint::CNPrinter::GetLogCategoryString(&v44, __p);
  if (v43 >= 0) {
    double v39 = __p;
  }
  else {
    double v39 = (void **)__p[0];
  }
  os_log_t v40 = os_log_create(v38, (const char *)v39);
  sub_18DF06548((uint64_t *)this + 21, 0xDu, 13, (uint64_t)v40);
  if (v43 < 0) {
    operator delete(__p[0]);
  }
  return this;
}

void sub_18DF0401C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  sub_18DEDE3D8(v18);
  if (*(char *)(v16 + 215) < 0) {
    operator delete(*v17);
  }
  sub_18DF064FC(*v19);
  MEMORY[0x192FA5CD0](a10);
  if (*(char *)(v16 + 23) < 0) {
    operator delete(*(void **)v16);
  }
  _Unwind_Resume(a1);
}

void sub_18DF040C8()
{
  std::ostream::~ostream();
  MEMORY[0x192FA6190](v0);
  JUMPOUT(0x18DF04090);
}

void sub_18DF040EC()
{
}

void sub_18DF040F4()
{
}

uint64_t *cnprint::CNPrinter::GetLogCategoryString@<X0>(_WORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_18DEDE7B0(a2, "error");
  switch(*a1)
  {
    case 0:
      if (*((char *)result + 23) < 0)
      {
        result[1] = 7;
        uint64_t result = (uint64_t *)*result;
      }
      else
      {
        *((unsigned char *)result + 23) = 7;
      }
      *(_DWORD *)((char *)result + 3) = 1818325605;
      int v4 = 1701733735;
      goto LABEL_48;
    case 1:
      if (*((char *)result + 23) < 0)
      {
        result[1] = 18;
        uint64_t result = (uint64_t *)*result;
      }
      else
      {
        *((unsigned char *)result + 23) = 18;
      }
      *((_WORD *)result + 8) = 31090;
      *(_OWORD *)uint64_t result = *(_OWORD *)"cnbuildinggeometry";
      uint64_t result = (uint64_t *)((char *)result + 18);
      goto LABEL_62;
    case 2:
      if (*((char *)result + 23) < 0)
      {
        result[1] = 12;
        uint64_t result = (uint64_t *)*result;
      }
      else
      {
        *((unsigned char *)result + 23) = 12;
      }
      *((_DWORD *)result + 2) = 1852795252;
      uint64_t v5 = "cnestimation";
      goto LABEL_54;
    case 3:
      if (*((char *)result + 23) < 0)
      {
        result[1] = 11;
        uint64_t result = (uint64_t *)*result;
      }
      else
      {
        *((unsigned char *)result + 23) = 11;
      }
      *(_DWORD *)((char *)result + 7) = 1802661751;
      *uint64_t result = *(void *)"cnframework";
      uint64_t result = (uint64_t *)((char *)result + 11);
      goto LABEL_62;
    case 4:
      if (*((char *)result + 23) < 0)
      {
        result[1] = 8;
        uint64_t result = (uint64_t *)*result;
      }
      else
      {
        *((unsigned char *)result + 23) = 8;
      }
      uint64_t v6 = 0x78697274616D6E63;
      goto LABEL_61;
    case 5:
      if (*((char *)result + 23) < 0)
      {
        result[1] = 12;
        uint64_t result = (uint64_t *)*result;
      }
      else
      {
        *((unsigned char *)result + 23) = 12;
      }
      *((_DWORD *)result + 2) = 1852795252;
      uint64_t v5 = "cnnavigation";
      goto LABEL_54;
    case 6:
      if (*((char *)result + 23) < 0)
      {
        result[1] = 14;
        uint64_t result = (uint64_t *)*result;
      }
      else
      {
        *((unsigned char *)result + 23) = 14;
      }
      qmemcpy(result, "cnplatforminfo", 14);
      uint64_t result = (uint64_t *)((char *)result + 14);
      goto LABEL_62;
    case 7:
      if (*((char *)result + 23) < 0)
      {
        result[1] = 10;
        uint64_t result = (uint64_t *)*result;
      }
      else
      {
        *((unsigned char *)result + 23) = 10;
      }
      *((_WORD *)result + 4) = 27491;
      uint64_t v7 = "cnplayback";
      goto LABEL_51;
    case 8:
      if (*((char *)result + 23) < 0)
      {
        result[1] = 7;
        uint64_t result = (uint64_t *)*result;
      }
      else
      {
        *((unsigned char *)result + 23) = 7;
      }
      *(_DWORD *)((char *)result + 3) = 1953393010;
      int v4 = 1919970915;
LABEL_48:
      *(_DWORD *)uint64_t result = v4;
      uint64_t result = (uint64_t *)((char *)result + 7);
      goto LABEL_62;
    case 9:
      if (*((char *)result + 23) < 0)
      {
        result[1] = 10;
        uint64_t result = (uint64_t *)*result;
      }
      else
      {
        *((unsigned char *)result + 23) = 10;
      }
      *((_WORD *)result + 4) = 26229;
      uint64_t v7 = "cnprototuf";
LABEL_51:
      *uint64_t result = *(void *)v7;
      uint64_t result = (uint64_t *)((char *)result + 10);
      goto LABEL_62;
    case 0xA:
      if (*((char *)result + 23) < 0)
      {
        result[1] = 12;
        uint64_t result = (uint64_t *)*result;
      }
      else
      {
        *((unsigned char *)result + 23) = 12;
      }
      *((_DWORD *)result + 2) = 1935894900;
      uint64_t v5 = "cnstatistics";
LABEL_54:
      *uint64_t result = *(void *)v5;
      uint64_t result = (uint64_t *)((char *)result + 12);
      goto LABEL_62;
    case 0xB:
      if (*((char *)result + 23) < 0)
      {
        result[1] = 8;
        uint64_t result = (uint64_t *)*result;
      }
      else
      {
        *((unsigned char *)result + 23) = 8;
      }
      uint64_t v6 = 0x726F746365766E63;
      goto LABEL_61;
    case 0xC:
      if (*((char *)result + 23) < 0)
      {
        result[1] = 5;
        uint64_t result = (uint64_t *)*result;
      }
      else
      {
        *((unsigned char *)result + 23) = 5;
      }
      *((unsigned char *)result + 4) = 110;
      *(_DWORD *)uint64_t result = 1702257010;
      uint64_t result = (uint64_t *)((char *)result + 5);
      goto LABEL_62;
    case 0xD:
      if (*((char *)result + 23) < 0)
      {
        result[1] = 8;
        uint64_t result = (uint64_t *)*result;
      }
      else
      {
        *((unsigned char *)result + 23) = 8;
      }
      uint64_t v6 = 0x6E75726B63617274;
LABEL_61:
      *result++ = v6;
LABEL_62:
      *(unsigned char *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void *cnprint::CNPrinter::GetCNPrinter(cnprint::CNPrinter *this)
{
  if ((atomic_load_explicit((atomic_uchar *volatile)&qword_1E91C9718, memory_order_acquire) & 1) == 0
    && __cxa_guard_acquire(&qword_1E91C9718))
  {
    cnprint::CNPrinter::CNPrinter((cnprint::CNPrinter *)&unk_1E91C9BC0);
    __cxa_atexit((void (*)(void *))sub_18DF04558, &unk_1E91C9BC0, &dword_18DEDB000);
    __cxa_guard_release(&qword_1E91C9718);
  }
  return &unk_1E91C9BC0;
}

void sub_18DF04540(_Unwind_Exception *a1)
{
}

uint64_t sub_18DF04558(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x1E4FBA400];
  uint64_t v3 = *MEMORY[0x1E4FBA400];
  *(void *)(a1 + 216) = *MEMORY[0x1E4FBA400];
  *(void *)(a1 + 216 + *(void *)(v3 - 24)) = *(void *)(v2 + 24);
  MEMORY[0x192FA5DA0](a1 + 224);
  std::ostream::~ostream();
  MEMORY[0x192FA6190](a1 + 632);
  if (*(char *)(a1 + 215) < 0) {
    operator delete(*(void **)(a1 + 192));
  }
  sub_18DF064FC(*(void **)(a1 + 176));
  MEMORY[0x192FA5CD0](a1 + 32);
  if (*(char *)(a1 + 23) < 0) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void *cnprint::CNPrinter::GetLogLevelString@<X0>(unsigned char *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_18DEDE7B0(a2, "None");
  switch(*a1)
  {
    case 0:
      if (*((char *)result + 23) < 0)
      {
        result[1] = 7;
        uint64_t result = (void *)*result;
      }
      else
      {
        *((unsigned char *)result + 23) = 7;
      }
      *(_DWORD *)((char *)result + 3) = 1702063970;
      int v4 = 1651664214;
      goto LABEL_28;
    case 1:
      if (*((char *)result + 23) < 0)
      {
        result[1] = 5;
        uint64_t result = (void *)*result;
      }
      else
      {
        *((unsigned char *)result + 23) = 5;
      }
      *((unsigned char *)result + 4) = 103;
      int v6 = 1969382724;
      goto LABEL_33;
    case 2:
      if (*((char *)result + 23) < 0)
      {
        result[1] = 4;
        uint64_t result = (void *)*result;
      }
      else
      {
        *((unsigned char *)result + 23) = 4;
      }
      int v5 = 1868983881;
      goto LABEL_25;
    case 3:
      if (*((char *)result + 23) < 0)
      {
        result[1] = 7;
        uint64_t result = (void *)*result;
      }
      else
      {
        *((unsigned char *)result + 23) = 7;
      }
      *(_DWORD *)((char *)result + 3) = 1953264993;
      int v4 = 1634100548;
LABEL_28:
      *(_DWORD *)uint64_t result = v4;
      uint64_t result = (void *)((char *)result + 7);
      goto LABEL_34;
    case 4:
      if (*((char *)result + 23) < 0)
      {
        result[1] = 5;
        uint64_t result = (void *)*result;
      }
      else
      {
        *((unsigned char *)result + 23) = 5;
      }
      *((unsigned char *)result + 4) = 114;
      int v6 = 1869771333;
      goto LABEL_33;
    case 5:
      if (*((char *)result + 23) < 0)
      {
        result[1] = 5;
        uint64_t result = (void *)*result;
      }
      else
      {
        *((unsigned char *)result + 23) = 5;
      }
      *((unsigned char *)result + 4) = 116;
      int v6 = 1819631942;
LABEL_33:
      *(_DWORD *)uint64_t result = v6;
      uint64_t result = (void *)((char *)result + 5);
      goto LABEL_34;
    default:
      if (*a1 != 255) {
        return result;
      }
      if (*((char *)result + 23) < 0)
      {
        result[1] = 4;
        uint64_t result = (void *)*result;
      }
      else
      {
        *((unsigned char *)result + 23) = 4;
      }
      int v5 = 1701736270;
LABEL_25:
      *(_DWORD *)uint64_t result = v5;
      uint64_t result = (void *)((char *)result + 4);
LABEL_34:
      *(unsigned char *)uint64_t result = 0;
      return result;
  }
}

void cnprint::CNPrinter::PrintCore(uint64_t a1, _WORD *a2, unsigned __int8 *a3, char *__format, va_list a5)
{
  uint64_t v98 = *MEMORY[0x1E4F143B8];
  if ((*(unsigned char *)(a1 + 160) & 7) != 0)
  {
    unsigned int v7 = *a3;
    BOOL v8 = v7 != 255 && v7 >= *(unsigned __int8 *)(a1 + 152);
    if (v8 && vsnprintf(__str, 0x800uLL, __format, a5) >= 1)
    {
      sub_18DEDE7B0(v80, __str);
      uint64_t v10 = *(void *)(a1 + 160);
      if (v10)
      {
        uint64_t v11 = *(void *)(a1 + 176);
        if (v11)
        {
          unsigned int v12 = (unsigned __int16)*a2;
          uint64_t v13 = a1 + 176;
          do
          {
            unsigned int v14 = *(unsigned __int16 *)(v11 + 32);
            BOOL v15 = v14 >= v12;
            if (v14 >= v12) {
              uint64_t v16 = (uint64_t *)v11;
            }
            else {
              uint64_t v16 = (uint64_t *)(v11 + 8);
            }
            if (v15) {
              uint64_t v13 = v11;
            }
            uint64_t v11 = *v16;
          }
          while (*v16);
          if (v13 != a1 + 176 && v12 >= *(unsigned __int16 *)(v13 + 32))
          {
            if ((v81 & 0x80u) == 0) {
              double v60 = v80;
            }
            else {
              double v60 = (void **)v80[0];
            }
            switch(*a3)
            {
              case 1u:
                double v61 = *(NSObject **)(v13 + 40);
                if (os_log_type_enabled(v61, OS_LOG_TYPE_DEBUG))
                {
                  *(_DWORD *)buf = 136315138;
                  *(void *)&buf[4] = v60;
                  _os_log_debug_impl(&dword_18DEDB000, v61, OS_LOG_TYPE_DEBUG, "%s", buf, 0xCu);
                }
                break;
              case 2u:
                double v67 = *(NSObject **)(v13 + 40);
                if (os_log_type_enabled(v67, OS_LOG_TYPE_INFO))
                {
                  *(_DWORD *)buf = 136315138;
                  *(void *)&buf[4] = v60;
                  double v64 = v67;
                  os_log_type_t v65 = OS_LOG_TYPE_INFO;
                  goto LABEL_124;
                }
                break;
              case 3u:
                double v63 = *(NSObject **)(v13 + 40);
                if (os_log_type_enabled(v63, OS_LOG_TYPE_DEFAULT))
                {
                  *(_DWORD *)buf = 136315138;
                  *(void *)&buf[4] = v60;
                  double v64 = v63;
                  os_log_type_t v65 = OS_LOG_TYPE_DEFAULT;
LABEL_124:
                  _os_log_impl(&dword_18DEDB000, v64, v65, "%s", buf, 0xCu);
                }
                break;
              case 4u:
                double v66 = *(NSObject **)(v13 + 40);
                if (os_log_type_enabled(v66, OS_LOG_TYPE_ERROR))
                {
                  *(_DWORD *)buf = 136315138;
                  *(void *)&buf[4] = v60;
                  _os_log_error_impl(&dword_18DEDB000, v66, OS_LOG_TYPE_ERROR, "%s", buf, 0xCu);
                }
                break;
              case 5u:
                double v62 = *(NSObject **)(v13 + 40);
                if (os_log_type_enabled(v62, OS_LOG_TYPE_FAULT))
                {
                  *(_DWORD *)buf = 136315138;
                  *(void *)&buf[4] = v60;
                  _os_log_fault_impl(&dword_18DEDB000, v62, OS_LOG_TYPE_FAULT, "%s", buf, 0xCu);
                }
                break;
              default:
                break;
            }
          }
        }
      }
      if ((*(void *)(a1 + 160) & 7) != 0)
      {
        if ((v10 & 1) == 0
          || (uint8x8_t v17 = (uint8x8_t)vcnt_s8((int8x8_t)(*(void *)(a1 + 160) & 7)),
              v17.i16[0] = vaddlv_u8(v17),
              v17.u32[0] >= 2uLL))
        {
          sub_18DEDC798((uint64_t)buf);
          time_t v79 = time(0);
          int v18 = localtime(&v79);
          long long v19 = *(_OWORD *)&v18->tm_sec;
          long long v20 = *(_OWORD *)&v18->tm_mon;
          long long v21 = *(_OWORD *)&v18->tm_isdst;
          tm_zone = v18->tm_zone;
          long long v76 = v20;
          long long v77 = v21;
          long long v75 = v19;
          MEMORY[0x192FA5E30](&v86, &v93);
          if ((_BYTE)v86)
          {
            std::ios_base::getloc((const std::ios_base *)((char *)&v94[-1] + *(void *)(v93 - 24)));
            std::locale::use_facet(&v83, MEMORY[0x1E4FBA2B0]);
            std::locale::~locale(&v83);
            os_log_t v22 = (const std::ios_base *)((char *)&v94[-1] + *(void *)(v93 - 24));
            if (v22[1].__fmtflags_ == -1)
            {
              std::ios_base::getloc(v22);
              double v23 = std::locale::use_facet(&v82, MEMORY[0x1E4FBA258]);
              std::ios_base::fmtflags v24 = ((uint64_t (*)(const std::locale::facet *, uint64_t))v23->__vftable[2].~facet_0)(v23, 32);
              std::locale::~locale(&v82);
              v22[1].__fmtflags_ = v24;
            }
            if (!std::time_put<char,std::ostreambuf_iterator<char>>::put()) {
              std::ios_base::clear((std::ios_base *)((char *)&v94[-1] + *(void *)(v93 - 24)), *(_DWORD *)((char *)&v94[3] + *(void *)(v93 - 24)) | 1);
            }
          }
          MEMORY[0x192FA5E40](&v86);
          sub_18DEDD538(&v93, (uint64_t)"\t", 1);
          pthread_self();
          sub_18DF06614((uint64_t)&v86);
          uint64_t v25 = *((void *)v86 - 3);
          double v26 = std::locale::classic();
          double v27 = (std::ios_base *)((char *)&v86 + v25);
          std::ios_base::getloc(v27);
          std::ios_base::imbue(v27, v26);
          std::locale::~locale(&v83);
          rdbuf = (std::locale *)v27->__rdbuf_;
          if (rdbuf)
          {
            (*((void (**)(std::locale *, const std::locale *))rdbuf->__locale_ + 2))(rdbuf, v26);
            double v29 = rdbuf + 1;
            std::locale::locale(v73, v29);
            std::locale::operator=(v29, v26);
            std::locale::~locale(v73);
          }
          std::locale::~locale((std::locale *)&v72);
          std::ostream::operator<<();
          sub_18DEDD9B8((uint64_t)&v87, &v83);
          if ((v85 & 0x80u) == 0) {
            locale = &v83;
          }
          else {
            locale = v83.__locale_;
          }
          if ((v85 & 0x80u) == 0) {
            uint64_t v31 = v85;
          }
          else {
            uint64_t v31 = v84;
          }
          __double2 v32 = sub_18DEDD538(&v93, (uint64_t)locale, v31);
          if ((char)v85 < 0) {
            operator delete(v83.__locale_);
          }
          double v86 = (void *)*MEMORY[0x1E4FBA418];
          *(void **)((char *)&v86 + *((void *)v86 - 3)) = *(void **)(MEMORY[0x1E4FBA418] + 24);
          uint64_t v87 = MEMORY[0x1E4FBA470] + 16;
          if (v90 < 0) {
            operator delete(__p);
          }
          std::streambuf::~streambuf();
          std::ostream::~ostream();
          MEMORY[0x192FA6190](&v91);
          sub_18DEDD538(v32, (uint64_t)"\t", 1);
          cnprint::CNPrinter::GetLogLevelString(a3, &v86);
          if ((v88 & 0x80u) == 0) {
            double v33 = &v86;
          }
          else {
            double v33 = v86;
          }
          if ((v88 & 0x80u) == 0) {
            uint64_t v34 = v88;
          }
          else {
            uint64_t v34 = v87;
          }
          double v35 = sub_18DEDD538(&v93, (uint64_t)v33, v34);
          sub_18DEDD538(v35, (uint64_t)"\t", 1);
          sub_18DEDE7B0(&v83, "0x0");
          if ((v85 & 0x80u) == 0) {
            double v36 = &v83;
          }
          else {
            double v36 = v83.__locale_;
          }
          if ((v85 & 0x80u) == 0) {
            uint64_t v37 = v85;
          }
          else {
            uint64_t v37 = v84;
          }
          double v38 = sub_18DEDD538(&v93, (uint64_t)v36, v37);
          sub_18DEDD538(v38, (uint64_t)"\t", 1);
          getpid();
          double v39 = (void *)std::ostream::operator<<();
          sub_18DEDD538(v39, (uint64_t)"\t", 1);
          os_log_t v40 = sub_18DEDD538(&v93, (uint64_t)"unknown:", 8);
          sub_18DEDD538(v40, (uint64_t)"\t", 1);
          std::operator+<char>();
          double v41 = std::string::append(&v70, ".", 1uLL);
          long long v42 = *(_OWORD *)&v41->__r_.__value_.__l.__data_;
          v71.__r_.__value_.__r.__words[2] = v41->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v71.__r_.__value_.__l.__data_ = v42;
          v41->__r_.__value_.__l.__size_ = 0;
          v41->__r_.__value_.__r.__words[2] = 0;
          v41->__r_.__value_.__r.__words[0] = 0;
          cnprint::CNPrinter::GetLogCategoryString(a2, v68);
          if ((v69 & 0x80u) == 0) {
            char v43 = v68;
          }
          else {
            char v43 = (void **)v68[0];
          }
          if ((v69 & 0x80u) == 0) {
            std::string::size_type v44 = v69;
          }
          else {
            std::string::size_type v44 = (std::string::size_type)v68[1];
          }
          double v45 = std::string::append(&v71, (const std::string::value_type *)v43, v44);
          long long v46 = *(_OWORD *)&v45->__r_.__value_.__l.__data_;
          v72.__r_.__value_.__r.__words[2] = v45->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v72.__r_.__value_.__l.__data_ = v46;
          v45->__r_.__value_.__l.__size_ = 0;
          v45->__r_.__value_.__r.__words[2] = 0;
          v45->__r_.__value_.__r.__words[0] = 0;
          double v47 = std::string::append(&v72, "]", 1uLL);
          long long v48 = *(_OWORD *)&v47->__r_.__value_.__l.__data_;
          int64_t v74 = v47->__r_.__value_.__r.__words[2];
          *(_OWORD *)&v73[0].__locale_ = v48;
          v47->__r_.__value_.__l.__size_ = 0;
          v47->__r_.__value_.__r.__words[2] = 0;
          v47->__r_.__value_.__r.__words[0] = 0;
          if (SHIBYTE(v72.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v72.__r_.__value_.__l.__data_);
          }
          if ((char)v69 < 0) {
            operator delete(v68[0]);
          }
          if (SHIBYTE(v71.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v71.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(v70.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v70.__r_.__value_.__l.__data_);
          }
          if (v74 >= 0) {
            double v49 = v73;
          }
          else {
            double v49 = v73[0].__locale_;
          }
          if (v74 >= 0) {
            uint64_t v50 = HIBYTE(v74);
          }
          else {
            uint64_t v50 = (uint64_t)v73[1].__locale_;
          }
          double v51 = sub_18DEDD538(&v93, (uint64_t)v49, v50);
          sub_18DEDD538(v51, (uint64_t)"\t", 1);
          if ((v81 & 0x80u) == 0) {
            double v52 = v80;
          }
          else {
            double v52 = (void **)v80[0];
          }
          if ((v81 & 0x80u) == 0) {
            uint64_t v53 = v81;
          }
          else {
            uint64_t v53 = (uint64_t)v80[1];
          }
          double v54 = sub_18DEDD538(&v93, (uint64_t)v52, v53);
          sub_18DEDD538(v54, (uint64_t)"\n", 1);
          sub_18DEDD9B8((uint64_t)v94, &v72);
          if ((*(unsigned char *)(a1 + 160) & 2) != 0)
          {
            if (*(void *)(a1 + 344)
              || !sub_18DF054F8((const void **)(a1 + 192), "")
              && (*(void *)(a1 + 344) || (std::ofstream::open(), *(void *)(a1 + 344))))
            {
              if ((v72.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
                double v55 = &v72;
              }
              else {
                double v55 = (std::string *)v72.__r_.__value_.__r.__words[0];
              }
              size_t v56 = strlen((const char *)v55);
              sub_18DEDD538((void *)(a1 + 216), (uint64_t)v55, v56);
            }
          }
          if ((*(unsigned char *)(a1 + 160) & 4) != 0)
          {
            if ((v72.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              double v57 = &v72;
            }
            else {
              double v57 = (std::string *)v72.__r_.__value_.__r.__words[0];
            }
            if ((v72.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
              std::string::size_type size = HIBYTE(v72.__r_.__value_.__r.__words[2]);
            }
            else {
              std::string::size_type size = v72.__r_.__value_.__l.__size_;
            }
            sub_18DEDD538(MEMORY[0x1E4FBA250], (uint64_t)v57, size);
          }
          if (SHIBYTE(v72.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(v72.__r_.__value_.__l.__data_);
          }
          if (SHIBYTE(v74) < 0) {
            operator delete(v73[0].__locale_);
          }
          if ((char)v85 < 0) {
            operator delete(v83.__locale_);
          }
          if ((char)v88 < 0) {
            operator delete(v86);
          }
          *(void *)buf = *MEMORY[0x1E4FBA408];
          uint64_t v59 = *(void *)(MEMORY[0x1E4FBA408] + 72);
          *(void *)&buf[*(void *)(*(void *)buf - 24)] = *(void *)(MEMORY[0x1E4FBA408] + 64);
          uint64_t v93 = v59;
          v94[0] = MEMORY[0x1E4FBA470] + 16;
          if (v95 < 0) {
            operator delete((void *)v94[8]);
          }
          std::streambuf::~streambuf();
          std::iostream::~basic_iostream();
          MEMORY[0x192FA6190](&v96);
        }
      }
      if ((char)v81 < 0) {
        operator delete(v80[0]);
      }
    }
  }
}

void sub_18DF05304(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35,uint64_t a36,uint64_t a37,std::locale a38,void *a39,uint64_t a40,uint64_t a41,void *a42)
{
  if (a2)
  {
    MEMORY[0x192FA5E40](&a42);
    __cxa_begin_catch(a1);
    std::ios_base::__set_badbit_and_consider_rethrow((std::ios_base *)(v42 + *(void *)(STACK[0x220] - 24)));
    __cxa_end_catch();
    JUMPOUT(0x18DF04AACLL);
  }
  _Unwind_Resume(a1);
}

BOOL sub_18DF054F8(const void **a1, char *__s)
{
  int v4 = *((char *)a1 + 23);
  if (v4 >= 0) {
    size_t v5 = *((unsigned __int8 *)a1 + 23);
  }
  else {
    size_t v5 = (size_t)a1[1];
  }
  if (v5 != strlen(__s)) {
    return 0;
  }
  if (v4 >= 0) {
    int v6 = a1;
  }
  else {
    int v6 = *a1;
  }
  return memcmp(v6, __s, v5) == 0;
}

void cnprint::CNPrinter::PrintInternal(uint64_t a1, _WORD *a2, unsigned __int8 *a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
}

void cnprint::CNPrinter::DisableLogStream(cnprint::CNPrinter *a1)
{
  cnprint::CNPrinter::GetCNPrinter(a1);
  unsigned int v2 = dword_1E91C9BD8;
  std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep v10 = std::chrono::steady_clock::now().__d_.__rep_ + 1000000 * v2;
  if (sub_18DF068B0((uint64_t)&stru_1E91C9BE0, &v10))
  {
    __int16 v9 = 8;
    unsigned __int8 v8 = 2;
    cnprint::CNPrinter::PrintInternal((uint64_t)&unk_1E91C9BC0, &v9, &v8, "Disabling log stream %zu", v3, v4, v5, v6, *(void *)a1);
    uint64_t v7 = *(void *)a1;
    if (*(void *)a1 >= 3uLL) {
      sub_18DEDE720("bitset set argument out of range");
    }
    qword_1E91C9C60 &= ~(1 << v7);
    if (v7 == 1 && qword_1E91C9D18 && !std::filebuf::close()) {
      std::ios_base::clear((std::ios_base *)((char *)&qword_1E91C9C98 + *(void *)(qword_1E91C9C98 - 24)), *(_DWORD *)((char *)&qword_1E91C9C98 + *(void *)(qword_1E91C9C98 - 24) + 32) | 4);
    }
    std::timed_mutex::unlock(&stru_1E91C9BE0);
  }
}

void cnprint::CNPrinter::EnableLogStream(cnprint::CNPrinter *a1)
{
  cnprint::CNPrinter::GetCNPrinter(a1);
  unsigned int v2 = dword_1E91C9BD8;
  std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep v10 = std::chrono::steady_clock::now().__d_.__rep_ + 1000000 * v2;
  if (sub_18DF068B0((uint64_t)&stru_1E91C9BE0, &v10))
  {
    uint64_t v7 = *(void *)a1;
    if (*(void *)a1 >= 3uLL) {
      sub_18DEDE720("bitset set argument out of range");
    }
    qword_1E91C9C60 |= 1 << v7;
    __int16 v9 = 8;
    unsigned __int8 v8 = 2;
    cnprint::CNPrinter::PrintInternal((uint64_t)&unk_1E91C9BC0, &v9, &v8, "Enabling log stream %zu", v3, v4, v5, v6, v7);
    std::timed_mutex::unlock(&stru_1E91C9BE0);
  }
}

unint64_t cnprint::CNPrinter::IsLogStreamEnabled(cnprint::CNPrinter *a1)
{
  cnprint::CNPrinter::GetCNPrinter(a1);
  unsigned int v2 = dword_1E91C9BD8;
  std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep v5 = std::chrono::steady_clock::now().__d_.__rep_ + 1000000 * v2;
  if (!sub_18DF068B0((uint64_t)&stru_1E91C9BE0, &v5)) {
    return 0;
  }
  if (*(void *)a1 >= 3uLL) {
    sub_18DEDE720("bitset test argument out of range");
  }
  unint64_t v3 = ((unint64_t)qword_1E91C9C60 >> *(void *)a1) & 1;
  std::timed_mutex::unlock(&stru_1E91C9BE0);
  return v3;
}

void cnprint::CNPrinter::GetFileLogStreamName(cnprint::CNPrinter *this@<X0>, uint64_t a2@<X8>)
{
  cnprint::CNPrinter::GetCNPrinter(this);
  unsigned int v3 = dword_1E91C9BD8;
  std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep v4 = std::chrono::steady_clock::now().__d_.__rep_ + 1000000 * v3;
  if (sub_18DF068B0((uint64_t)&stru_1E91C9BE0, &v4))
  {
    if (byte_1E91C9C97 < 0)
    {
      sub_18DEDE668((unsigned char *)a2, (void *)xmmword_1E91C9C80, *((unint64_t *)&xmmword_1E91C9C80 + 1));
    }
    else
    {
      *(_OWORD *)a2 = xmmword_1E91C9C80;
      *(void *)(a2 + 16) = unk_1E91C9C90;
    }
    std::timed_mutex::unlock(&stru_1E91C9BE0);
  }
  else
  {
    sub_18DEDE7B0((void *)a2, "");
  }
}

uint64_t cnprint::CNPrinter::GetLogLevel(cnprint::CNPrinter *this)
{
  cnprint::CNPrinter::GetCNPrinter(this);
  unsigned int v1 = dword_1E91C9BD8;
  std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep v4 = std::chrono::steady_clock::now().__d_.__rep_ + 1000000 * v1;
  if (!sub_18DF068B0((uint64_t)&stru_1E91C9BE0, &v4)) {
    return 255;
  }
  uint64_t v2 = byte_1E91C9C58;
  std::timed_mutex::unlock(&stru_1E91C9BE0);
  return v2;
}

void cnprint::CNPrinter::Print(cnprint::CNPrinter *a1, unsigned __int8 *a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  cnprint::CNPrinter::GetCNPrinter(a1);
  unsigned int v12 = dword_1E91C9BD8;
  uint64_t v13 = (char *)(std::chrono::steady_clock::now().__d_.__rep_ + 1000000 * v12);
  if (sub_18DF068B0((uint64_t)&stru_1E91C9BE0, (std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep *)&v13))
  {
    uint64_t v13 = &a9;
    cnprint::CNPrinter::PrintCore((uint64_t)&unk_1E91C9BC0, a1, a2, a3, &a9);
    std::timed_mutex::unlock(&stru_1E91C9BE0);
  }
}

void cnprint::CNPrinter::Print(cnprint::CNPrinter *a1, unsigned __int8 *a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (*((char *)a3 + 23) >= 0) {
    LOBYTE(v8) = (_BYTE)a3;
  }
  else {
    uint64_t v8 = *a3;
  }
  cnprint::CNPrinter::Print(a1, a2, "%s", a4, a5, a6, a7, a8, v8);
}

void cnprint::CNPrinter::SetFileLogStreamName(cnprint::CNPrinter *a1)
{
  cnprint::CNPrinter::GetCNPrinter(a1);
  unsigned int v2 = dword_1E91C9BD8;
  std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep v17 = std::chrono::steady_clock::now().__d_.__rep_ + 1000000 * v2;
  if (sub_18DF068B0((uint64_t)&stru_1E91C9BE0, &v17))
  {
    if (qword_1E91C9D18)
    {
      __int16 v16 = 8;
      unsigned __int8 v15 = 2;
      if (byte_1E91C9C97 >= 0) {
        uint64_t v7 = &xmmword_1E91C9C80;
      }
      else {
        LOBYTE(v7) = xmmword_1E91C9C80;
      }
      cnprint::CNPrinter::PrintInternal((uint64_t)&unk_1E91C9BC0, &v16, &v15, "Closing file log stream %s", v3, v4, v5, v6, (char)v7);
      if (!std::filebuf::close()) {
        std::ios_base::clear((std::ios_base *)((char *)&qword_1E91C9C98 + *(void *)(qword_1E91C9C98 - 24)), *(_DWORD *)((char *)&qword_1E91C9C98 + *(void *)(qword_1E91C9C98 - 24) + 32) | 4);
      }
    }
    std::string::operator=((std::string *)&xmmword_1E91C9C80, (const std::string *)a1);
    __int16 v14 = 8;
    unsigned __int8 v13 = 2;
    if (byte_1E91C9C97 >= 0) {
      unsigned int v12 = &xmmword_1E91C9C80;
    }
    else {
      LOBYTE(v12) = xmmword_1E91C9C80;
    }
    cnprint::CNPrinter::PrintInternal((uint64_t)&unk_1E91C9BC0, &v14, &v13, "Setting file log stream %s", v8, v9, v10, v11, (char)v12);
    std::timed_mutex::unlock(&stru_1E91C9BE0);
  }
}

void cnprint::CNPrinter::SetLogLevel(cnprint::CNPrinter *a1)
{
  cnprint::CNPrinter::GetCNPrinter(a1);
  unsigned int v2 = dword_1E91C9BD8;
  __p[0] = (void *)(std::chrono::steady_clock::now().__d_.__rep_ + 1000000 * v2);
  if (sub_18DF068B0((uint64_t)&stru_1E91C9BE0, (std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep *)__p))
  {
    byte_1E91C9C58 = *(unsigned char *)a1;
    __int16 v11 = 8;
    unsigned __int8 v10 = 2;
    cnprint::CNPrinter::GetLogLevelString(a1, __p);
    if (v9 >= 0) {
      uint64_t v7 = __p;
    }
    else {
      LOBYTE(v7) = __p[0];
    }
    cnprint::CNPrinter::PrintInternal((uint64_t)&unk_1E91C9BC0, &v11, &v10, "Setting log level %s", v3, v4, v5, v6, (char)v7);
    if (v9 < 0) {
      operator delete(__p[0]);
    }
    std::timed_mutex::unlock(&stru_1E91C9BE0);
  }
}

void sub_18DF05C60(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t cnprint::CNPrinter::WillPrint(cnprint::CNPrinter *a1)
{
  cnprint::CNPrinter::GetCNPrinter(a1);
  unsigned int v2 = dword_1E91C9BD8;
  std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep v7 = std::chrono::steady_clock::now().__d_.__rep_ + 1000000 * v2;
  uint64_t result = sub_18DF068B0((uint64_t)&stru_1E91C9BE0, &v7);
  if (result)
  {
    unsigned int v4 = byte_1E91C9C58;
    std::timed_mutex::unlock(&stru_1E91C9BE0);
    unsigned int v5 = *(unsigned __int8 *)a1;
    return v5 >= v4 && v5 != 255;
  }
  return result;
}

void cnprint::CNLogFormatter::FormatCore(uint64_t a1, const void **a2, uint64_t a3, int a4, char *__format, va_list a6)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  memset(&__p, 0, sizeof(__p));
  if (a4 && snprintf(__str, 0x800uLL, "time,%.3lf,", *(double *)(a3 + 8) + (double)*(uint64_t *)a3) >= 1) {
    sub_18DF0642C(&__p, __str);
  }
  if (vsnprintf(__str, 0x800uLL, __format, a6) < 0)
  {
    sub_18DF05EC8(a2, (const void **)&__p.__r_.__value_.__l.__data_, (uint64_t)&v15);
    if (*(char *)(a1 + 23) < 0) {
      operator delete(*(void **)a1);
    }
    *(std::string *)a1 = v15;
  }
  else
  {
    sub_18DF05EC8(a2, (const void **)&__p.__r_.__value_.__l.__data_, (uint64_t)&v15);
    std::string::size_type v10 = strlen(__str);
    __int16 v11 = std::string::append(&v15, __str, v10);
    std::string::size_type v12 = v11->__r_.__value_.__r.__words[0];
    v17[0] = v11->__r_.__value_.__l.__size_;
    *(void *)((char *)v17 + 7) = *(std::string::size_type *)((char *)&v11->__r_.__value_.__r.__words[1] + 7);
    char v13 = HIBYTE(v11->__r_.__value_.__r.__words[2]);
    v11->__r_.__value_.__l.__size_ = 0;
    v11->__r_.__value_.__r.__words[2] = 0;
    v11->__r_.__value_.__r.__words[0] = 0;
    if (*(char *)(a1 + 23) < 0) {
      operator delete(*(void **)a1);
    }
    uint64_t v14 = v17[0];
    *(void *)a1 = v12;
    *(void *)(a1 + 8) = v14;
    *(void *)(a1 + 15) = *(void *)((char *)v17 + 7);
    *(unsigned char *)(a1 + 23) = v13;
    if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v15.__r_.__value_.__l.__data_);
    }
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_18DF05E8C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, int a12, __int16 a13, char a14, char a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t sub_18DF05EC8@<X0>(const void **a1@<X0>, const void **a2@<X1>, uint64_t a3@<X8>)
{
  if (*((char *)a1 + 23) >= 0) {
    size_t v5 = *((unsigned __int8 *)a1 + 23);
  }
  else {
    size_t v5 = (size_t)a1[1];
  }
  if (*((char *)a2 + 23) >= 0) {
    size_t v6 = *((unsigned __int8 *)a2 + 23);
  }
  else {
    size_t v6 = (size_t)a2[1];
  }
  uint64_t result = sub_18DF06474(a3, v6 + v5);
  if (*(char *)(result + 23) >= 0) {
    uint64_t v8 = (char *)result;
  }
  else {
    uint64_t v8 = *(char **)result;
  }
  if (v5)
  {
    if (*((char *)a1 + 23) >= 0) {
      char v9 = a1;
    }
    else {
      char v9 = *a1;
    }
    uint64_t result = (uint64_t)memmove(v8, v9, v5);
  }
  std::string::size_type v10 = &v8[v5];
  if (v6)
  {
    if (*((char *)a2 + 23) >= 0) {
      __int16 v11 = a2;
    }
    else {
      __int16 v11 = *a2;
    }
    uint64_t result = (uint64_t)memmove(v10, v11, v6);
  }
  v10[v6] = 0;
  return result;
}

std::string *cnprint::CNLogFormatter::SetLogPrefix(std::string *a1, const std::string *a2)
{
  return std::string::operator=(a1 + 1, a2);
}

char *cnprint::CNLogFormatter::GetLogPrefix@<X0>(char *this@<X0>, uint64_t a2@<X8>)
{
  if (this[47] < 0) {
    return (char *)sub_18DEDE668((unsigned char *)a2, *((void **)this + 3), *((void *)this + 4));
  }
  *(_OWORD *)a2 = *(_OWORD *)(this + 24);
  *(void *)(a2 + 16) = *((void *)this + 5);
  return this;
}

const void **cnprint::CNLogFormatter::FormatGeneral(const void **this, char *__format, ...)
{
  va_start(va, __format);
  v4[1] = 0;
  va_copy((va_list)&v4[2], va);
  v4[0] = 0;
  cnprint::CNLogFormatter::FormatCore((uint64_t)this, this + 3, (uint64_t)v4, 0, __format, va);
  return this;
}

uint64_t cnprint::CNLogFormatter::FormatGeneral(uint64_t a1, uint64_t a2, char *__format, ...)
{
  va_start(va, __format);
  cnprint::CNLogFormatter::FormatCore(a1, (const void **)(a1 + 24), a2, 1, __format, va);
  return a1;
}

const void **cnprint::CNLogFormatter::FormatGeneral(const void **a1, uint64_t a2)
{
  if (*(char *)(a2 + 23) >= 0) {
    unsigned int v2 = (const char *)a2;
  }
  else {
    unsigned int v2 = *(const char **)a2;
  }
  return cnprint::CNLogFormatter::FormatGeneral(a1, "%s", v2);
}

uint64_t cnprint::CNLogFormatter::FormatGeneral(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(char *)(a3 + 23) >= 0) {
    uint64_t v3 = (const char *)a3;
  }
  else {
    uint64_t v3 = *(const char **)a3;
  }
  return cnprint::CNLogFormatter::FormatGeneral(a1, a2, "%s", v3);
}

cnprint::CNLogFormatter *cnprint::CNLogFormatter::FormatWarning(cnprint::CNLogFormatter *this, char *a2, ...)
{
  va_start(va, a2);
  va_copy(v11, va);
  if (*((char *)this + 47) >= 0) {
    size_t v4 = *((unsigned __int8 *)this + 47);
  }
  else {
    size_t v4 = *((void *)this + 4);
  }
  size_t v5 = __p;
  sub_18DF06474((uint64_t)__p, v4 + 10);
  if (v10 < 0) {
    size_t v5 = (void **)__p[0];
  }
  if (v4)
  {
    if (*((char *)this + 47) >= 0) {
      size_t v6 = (char *)this + 24;
    }
    else {
      size_t v6 = (char *)*((void *)this + 3);
    }
    memmove(v5, v6, v4);
  }
  strcpy((char *)v5 + v4, " WARNING: ");
  v8[0] = 0;
  v8[1] = 0;
  cnprint::CNLogFormatter::FormatCore((uint64_t)this, (const void **)__p, (uint64_t)v8, 0, a2, v11);
  if (v10 < 0) {
    operator delete(__p[0]);
  }
  return this;
}

void sub_18DF061C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t cnprint::CNLogFormatter::FormatWarning(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  va_list v18 = (va_list)&a9;
  if (*(char *)(a1 + 47) >= 0) {
    size_t v12 = *(unsigned __int8 *)(a1 + 47);
  }
  else {
    size_t v12 = *(void *)(a1 + 32);
  }
  char v13 = __p;
  sub_18DF06474((uint64_t)__p, v12 + 10);
  if (v17 < 0) {
    char v13 = (void **)__p[0];
  }
  if (v12)
  {
    if (*(char *)(a1 + 47) >= 0) {
      uint64_t v14 = (const void *)(a1 + 24);
    }
    else {
      uint64_t v14 = *(const void **)(a1 + 24);
    }
    memmove(v13, v14, v12);
  }
  strcpy((char *)v13 + v12, " WARNING: ");
  cnprint::CNLogFormatter::FormatCore(a1, (const void **)__p, a2, 1, a3, v18);
  if (v17 < 0) {
    operator delete(__p[0]);
  }
  return a1;
}

void sub_18DF062D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

cnprint::CNLogFormatter *cnprint::CNLogFormatter::FormatWarning(cnprint::CNLogFormatter *a1, uint64_t a2)
{
  if (*(char *)(a2 + 23) >= 0) {
    unsigned int v2 = (const char *)a2;
  }
  else {
    unsigned int v2 = *(const char **)a2;
  }
  return cnprint::CNLogFormatter::FormatWarning(a1, "%s", v2);
}

uint64_t cnprint::CNLogFormatter::FormatWarning(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (*(char *)(a3 + 23) >= 0) {
    uint64_t v8 = a3;
  }
  else {
    uint64_t v8 = *(void *)a3;
  }
  return cnprint::CNLogFormatter::FormatWarning(a1, a2, "%s", a4, a5, a6, a7, a8, v8);
}

std::string *sub_18DF0636C(std::string *__dst, const std::string::value_type *__src, size_t __len)
{
  LODWORD(v6) = SHIBYTE(__dst->__r_.__value_.__r.__words[2]);
  if ((v6 & 0x80000000) != 0)
  {
    unint64_t v10 = __dst->__r_.__value_.__r.__words[2];
    std::string::size_type v9 = (v10 & 0x7FFFFFFFFFFFFFFFLL) - 1;
    if (v9 < __len)
    {
      std::string::size_type size = __dst->__r_.__value_.__l.__size_;
      goto LABEL_6;
    }
    unint64_t v6 = HIBYTE(v10);
    std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep v7 = (std::string *)__dst->__r_.__value_.__r.__words[0];
  }
  else
  {
    std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep v7 = __dst;
    if (__len > 0x16)
    {
      std::string::size_type size = HIBYTE(__dst->__r_.__value_.__r.__words[2]);
      std::string::size_type v9 = 22;
LABEL_6:
      std::string::__grow_by_and_replace(__dst, v9, __len - v9, size, 0, size, __len, __src);
      return __dst;
    }
  }
  if (__len)
  {
    memmove(v7, __src, __len);
    LOBYTE(v6) = *((unsigned char *)&__dst->__r_.__value_.__s + 23);
  }
  if ((v6 & 0x80) != 0) {
    __dst->__r_.__value_.__l.__size_ = __len;
  }
  else {
    *((unsigned char *)&__dst->__r_.__value_.__s + 23) = __len & 0x7F;
  }
  v7->__r_.__value_.__s.__data_[__len] = 0;
  return __dst;
}

std::string *sub_18DF0642C(std::string *a1, char *__s)
{
  size_t v4 = strlen(__s);

  return sub_18DF0636C(a1, __s, v4);
}

uint64_t sub_18DF06474(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x7FFFFFFFFFFFFFF8) {
    sub_18DEDD910();
  }
  if (a2 > 0x16)
  {
    uint64_t v4 = (a2 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((a2 | 7) != 0x17) {
      uint64_t v4 = a2 | 7;
    }
    uint64_t v5 = v4 + 1;
    unint64_t v6 = operator new(v4 + 1);
    *(void *)(a1 + 8) = a2;
    *(void *)(a1 + 16) = v5 | 0x8000000000000000;
    *(void *)a1 = v6;
  }
  else
  {
    *(void *)(a1 + 8) = 0;
    *(void *)(a1 + 16) = 0;
    *(void *)a1 = 0;
    *(unsigned char *)(a1 + 23) = a2;
  }
  return a1;
}

void sub_18DF064FC(void *a1)
{
  if (a1)
  {
    sub_18DF064FC(*a1);
    sub_18DF064FC(a1[1]);
    operator delete(a1);
  }
}

uint64_t *sub_18DF06548(uint64_t *result, unsigned __int16 a2, __int16 a3, uint64_t a4)
{
  unint64_t v6 = result;
  uint64_t v8 = (uint64_t **)(result + 1);
  uint64_t v7 = result[1];
  if (v7)
  {
    while (1)
    {
      while (1)
      {
        std::string::size_type v9 = (void *)v7;
        unsigned int v10 = *(unsigned __int16 *)(v7 + 32);
        if (v10 <= a2) {
          break;
        }
        uint64_t v7 = *v9;
        uint64_t v8 = (uint64_t **)v9;
        if (!*v9) {
          goto LABEL_9;
        }
      }
      if (v10 >= a2) {
        break;
      }
      uint64_t v7 = v9[1];
      if (!v7)
      {
        uint64_t v8 = (uint64_t **)(v9 + 1);
        goto LABEL_9;
      }
    }
  }
  else
  {
    std::string::size_type v9 = result + 1;
LABEL_9:
    va_list v11 = operator new(0x30uLL);
    v11[16] = a3;
    *((void *)v11 + 5) = a4;
    *(void *)va_list v11 = 0;
    *((void *)v11 + 1) = 0;
    *((void *)v11 + 2) = v9;
    *uint64_t v8 = (uint64_t *)v11;
    uint64_t v12 = *(void *)*v6;
    if (v12)
    {
      *unint64_t v6 = v12;
      char v13 = *v8;
    }
    else
    {
      char v13 = (uint64_t *)v11;
    }
    uint64_t result = sub_18DEEDADC((uint64_t *)v6[1], v13);
    ++v6[2];
  }
  return result;
}

uint64_t sub_18DF06614(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x1E4FBA498] + 64;
  *(void *)(a1 + 112) = MEMORY[0x1E4FBA498] + 64;
  uint64_t v3 = *(void *)(MEMORY[0x1E4FBA418] + 16);
  uint64_t v4 = *(void *)(MEMORY[0x1E4FBA418] + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + *(void *)(v4 - 24)) = v3;
  uint64_t v5 = (std::ios_base *)(a1 + *(void *)(*(void *)a1 - 24));
  std::ios_base::init(v5, (void *)(a1 + 8));
  uint64_t v6 = MEMORY[0x1E4FBA498] + 24;
  v5[1].__vftable = 0;
  v5[1].__fmtflags_ = -1;
  *(void *)a1 = v6;
  *(void *)(a1 + 112) = v2;
  std::streambuf::basic_streambuf();
  *(void *)(a1 + 8) = MEMORY[0x1E4FBA470] + 16;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_DWORD *)(a1 + 104) = 16;
  return a1;
}

void sub_18DF06784(_Unwind_Exception *a1)
{
  std::ostream::~ostream();
  MEMORY[0x192FA6190](v1);
  _Unwind_Resume(a1);
}

uint64_t sub_18DF067AC(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x1E4FBA418];
  uint64_t v3 = *MEMORY[0x1E4FBA418];
  *(void *)a1 = *MEMORY[0x1E4FBA418];
  *(void *)(a1 + *(void *)(v3 - 24)) = *(void *)(v2 + 24);
  *(void *)(a1 + 8) = MEMORY[0x1E4FBA470] + 16;
  if (*(char *)(a1 + 95) < 0) {
    operator delete(*(void **)(a1 + 72));
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x192FA6190](a1 + 112);
  return a1;
}

uint64_t sub_18DF068B0(uint64_t a1, std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep *a2)
{
  v11.__m_ = (std::unique_lock<std::mutex>::mutex_type *)a1;
  v11.__owns_ = 1;
  std::mutex::lock((std::mutex *)a1);
  if (std::chrono::steady_clock::now().__d_.__rep_ < *a2)
  {
    while (1)
    {
      if (!*(unsigned char *)(a1 + 112)) {
        goto LABEL_20;
      }
      if (*a2 <= std::chrono::steady_clock::now().__d_.__rep_) {
        goto LABEL_18;
      }
      std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep v4 = *a2;
      v5.__d_.__rep_ = v4 - std::chrono::steady_clock::now().__d_.__rep_;
      if (v5.__d_.__rep_ >= 1) {
        break;
      }
LABEL_17:
      if (std::chrono::steady_clock::now().__d_.__rep_ >= *a2) {
        goto LABEL_18;
      }
    }
    std::chrono::steady_clock::now();
    v6.__d_.__rep_ = std::chrono::system_clock::now().__d_.__rep_;
    if (v6.__d_.__rep_)
    {
      if (v6.__d_.__rep_ < 1)
      {
        if ((unint64_t)v6.__d_.__rep_ < 0xFFDF3B645A1CAC09)
        {
          std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep v7 = 0x8000000000000000;
          goto LABEL_15;
        }
      }
      else if ((unint64_t)v6.__d_.__rep_ > 0x20C49BA5E353F7)
      {
        std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep v7 = 0x7FFFFFFFFFFFFFFFLL;
        goto LABEL_13;
      }
      std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep v7 = 1000 * v6.__d_.__rep_;
    }
    else
    {
      std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep v7 = 0;
    }
LABEL_13:
    if (v7 > (v5.__d_.__rep_ ^ 0x7FFFFFFFFFFFFFFFLL))
    {
      v8.__d_.__rep_ = 0x7FFFFFFFFFFFFFFFLL;
LABEL_16:
      std::condition_variable::__do_timed_wait((std::condition_variable *)(a1 + 64), &v11, v8);
      std::chrono::steady_clock::now();
      goto LABEL_17;
    }
LABEL_15:
    v8.__d_.__rep_ = v7 + v5.__d_.__rep_;
    goto LABEL_16;
  }
LABEL_18:
  if (*(unsigned char *)(a1 + 112))
  {
    uint64_t v9 = 0;
  }
  else
  {
LABEL_20:
    uint64_t v9 = 1;
    *(unsigned char *)(a1 + 112) = 1;
  }
  if (v11.__owns_) {
    std::mutex::unlock(v11.__m_);
  }
  return v9;
}

void CNPlatformInfo::CNPlatformInfo(CNPlatformInfo *this, const CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo *a2)
{
  *(_WORD *)this = 0;
  *((unsigned char *)this + 2) = 0;
  std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep v4 = (std::string *)((char *)this + 8);
  sub_18DEDE7B0((void *)this + 1, "");
  sub_18DEDE7B0((void *)this + 4, "");
  *((void *)this + 7) = 0;
  int v10 = *((_DWORD *)a2 + 4);
  __int16 v11 = 0;
  switch(v10)
  {
    case 0:
      __int16 v17 = 6;
      unsigned __int8 v16 = 4;
      cnprint::CNPrinter::Print((cnprint::CNPrinter *)&v17, &v16, "ConvertProtobufToPlatformInfoObject encountered the HW_PROTOBUF_DEFAULT type that it cannot convert: %d", v5, v6, v7, v8, v9, 0);
      goto LABEL_3;
    case 1:
      goto LABEL_4;
    case 2:
      __int16 v11 = 1;
      goto LABEL_4;
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 50:
    case 55:
    case 57:
    case 58:
      __int16 v15 = 0;
      unsigned __int8 v14 = 4;
      cnprint::CNPrinter::Print((cnprint::CNPrinter *)&v15, &v14, "ConvertProtobufToPlatformInfoObject encountered an unhandled hardware type: %d", v5, v6, v7, v8, v9, v10);
LABEL_3:
      __int16 v11 = 0;
      goto LABEL_4;
    case 8:
      __int16 v11 = 2;
      goto LABEL_4;
    case 9:
      __int16 v11 = 3;
      goto LABEL_4;
    case 10:
      __int16 v11 = 4;
      goto LABEL_4;
    case 11:
      __int16 v11 = 5;
      goto LABEL_4;
    case 12:
      __int16 v11 = 6;
      goto LABEL_4;
    case 13:
      __int16 v11 = 7;
      goto LABEL_4;
    case 14:
      __int16 v11 = 8;
      goto LABEL_4;
    case 15:
      __int16 v11 = 9;
      goto LABEL_4;
    case 16:
      __int16 v11 = 10;
      goto LABEL_4;
    case 17:
      __int16 v11 = 11;
      goto LABEL_4;
    case 18:
      __int16 v11 = 12;
      goto LABEL_4;
    case 19:
      __int16 v11 = 13;
      goto LABEL_4;
    case 20:
      __int16 v11 = 14;
      goto LABEL_4;
    case 21:
      __int16 v11 = 15;
      goto LABEL_4;
    case 22:
      __int16 v11 = 16;
      goto LABEL_4;
    case 23:
      __int16 v11 = 17;
      goto LABEL_4;
    case 24:
      __int16 v11 = 18;
      goto LABEL_4;
    case 25:
      __int16 v11 = 19;
      goto LABEL_4;
    case 26:
      __int16 v11 = 20;
      goto LABEL_4;
    case 27:
      __int16 v11 = 21;
      goto LABEL_4;
    case 28:
      __int16 v11 = 22;
      goto LABEL_4;
    case 29:
      __int16 v11 = 23;
      goto LABEL_4;
    case 30:
      __int16 v11 = 24;
      goto LABEL_4;
    case 31:
      __int16 v11 = 25;
      goto LABEL_4;
    case 32:
      __int16 v11 = 26;
      goto LABEL_4;
    case 33:
      __int16 v11 = 27;
      goto LABEL_4;
    case 34:
      __int16 v11 = 28;
      goto LABEL_4;
    case 35:
      __int16 v11 = 29;
      goto LABEL_4;
    case 36:
      __int16 v11 = 30;
      goto LABEL_4;
    case 37:
      __int16 v11 = 31;
      goto LABEL_4;
    case 38:
      __int16 v11 = 32;
      goto LABEL_4;
    case 39:
      __int16 v11 = 33;
      goto LABEL_4;
    case 40:
      __int16 v11 = 34;
      goto LABEL_4;
    case 41:
      __int16 v11 = 35;
      goto LABEL_4;
    case 42:
      __int16 v11 = 36;
      goto LABEL_4;
    case 43:
      __int16 v11 = 37;
      goto LABEL_4;
    case 44:
      __int16 v11 = 38;
      goto LABEL_4;
    case 45:
      __int16 v11 = 39;
      goto LABEL_4;
    case 46:
      __int16 v11 = 42;
      goto LABEL_4;
    case 47:
      __int16 v11 = 40;
      goto LABEL_4;
    case 51:
      __int16 v11 = 41;
      goto LABEL_4;
    case 52:
      __int16 v11 = 43;
      goto LABEL_4;
    case 53:
      __int16 v11 = 44;
      goto LABEL_4;
    case 54:
      __int16 v11 = 45;
      goto LABEL_4;
    case 56:
      __int16 v11 = 46;
      goto LABEL_4;
    case 59:
      __int16 v11 = 47;
      goto LABEL_4;
    case 60:
      __int16 v11 = 48;
      goto LABEL_4;
    case 61:
      __int16 v11 = 49;
      goto LABEL_4;
    case 62:
      __int16 v11 = 50;
      goto LABEL_4;
    case 63:
      __int16 v11 = 51;
      goto LABEL_4;
    case 64:
      __int16 v11 = 52;
      goto LABEL_4;
    case 65:
      __int16 v11 = 53;
      goto LABEL_4;
    case 66:
      __int16 v11 = 56;
      goto LABEL_4;
    case 67:
      __int16 v11 = 57;
      goto LABEL_4;
    case 68:
      __int16 v11 = 54;
      goto LABEL_4;
    case 69:
      __int16 v11 = 55;
      goto LABEL_4;
    case 70:
      __int16 v11 = 58;
      goto LABEL_4;
    case 71:
      __int16 v11 = 59;
      goto LABEL_4;
    case 72:
      __int16 v11 = 60;
      goto LABEL_4;
    case 73:
      __int16 v11 = 61;
      goto LABEL_4;
    case 74:
      __int16 v11 = 62;
      goto LABEL_4;
    case 75:
      __int16 v11 = 63;
      goto LABEL_4;
    case 76:
      __int16 v11 = 64;
      goto LABEL_4;
    case 77:
      __int16 v11 = 65;
      goto LABEL_4;
    case 78:
      __int16 v11 = 66;
      goto LABEL_4;
    case 79:
      __int16 v11 = 67;
      goto LABEL_4;
    case 80:
      __int16 v11 = 68;
      goto LABEL_4;
    case 81:
      __int16 v11 = 69;
      goto LABEL_4;
    case 82:
      __int16 v11 = 70;
      goto LABEL_4;
    case 83:
      __int16 v11 = 71;
      goto LABEL_4;
    case 84:
      __int16 v11 = 72;
      goto LABEL_4;
    case 85:
      __int16 v11 = 73;
      goto LABEL_4;
    case 86:
      __int16 v11 = 74;
      goto LABEL_4;
    case 100:
      __int16 v11 = 75;
LABEL_4:
      *(_WORD *)this = v11;
      break;
    default:
      break;
  }
  *((unsigned char *)this + 2) = *((unsigned char *)a2 + 20);
  std::string::operator=(v4, *((const std::string **)a2 + 3));
  std::string::operator=((std::string *)((char *)this + 32), *((const std::string **)a2 + 4));
  unsigned int v12 = *((_DWORD *)a2 + 10);
  if (v12 <= 3) {
    *((_DWORD *)this + 14) = v12;
  }
  unsigned int v13 = *((_DWORD *)a2 + 11);
  if (v13 <= 2) {
    *((_DWORD *)this + 15) = v13;
  }
}

void sub_18DF06DA0(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 55) < 0) {
    operator delete(*v3);
  }
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

uint64_t CNPlatformInfo::CNPlatformInfo(uint64_t a1, __int16 a2, char a3, long long *a4, long long *a5, int a6, int a7)
{
  *(_WORD *)a1 = a2;
  *(unsigned char *)(a1 + 2) = a3;
  if (*((char *)a4 + 23) < 0)
  {
    sub_18DEDE668((unsigned char *)(a1 + 8), *(void **)a4, *((void *)a4 + 1));
  }
  else
  {
    long long v11 = *a4;
    *(void *)(a1 + 24) = *((void *)a4 + 2);
    *(_OWORD *)(a1 + 8) = v11;
  }
  unsigned int v12 = (unsigned char *)(a1 + 32);
  if (*((char *)a5 + 23) < 0)
  {
    sub_18DEDE668(v12, *(void **)a5, *((void *)a5 + 1));
  }
  else
  {
    long long v13 = *a5;
    *(void *)(a1 + 48) = *((void *)a5 + 2);
    *(_OWORD *)unsigned int v12 = v13;
  }
  *(_DWORD *)(a1 + 56) = a6;
  *(_DWORD *)(a1 + 60) = a7;
  return a1;
}

void sub_18DF07014(_Unwind_Exception *exception_object)
{
  if (*(char *)(v1 + 31) < 0) {
    operator delete(*v2);
  }
  _Unwind_Resume(exception_object);
}

BOOL CNPlatformInfo::IsHardwareSupportedGnssL1L5(CNPlatformInfo *this)
{
  return *((_DWORD *)this + 15) == 2;
}

uint64_t CNPlatformInfo::GetGnssChipset(CNPlatformInfo *this)
{
  unsigned int v1 = *(unsigned __int16 *)this - 2;
  if (v1 > 0x49) {
    return 0;
  }
  else {
    return dword_18E1F1010[(__int16)v1];
  }
}

BOOL CNPlatformInfo::IsValid(CNPlatformInfo *this)
{
  return *(unsigned __int16 *)this >= 2u && *((_DWORD *)this + 14) && *((_DWORD *)this + 15) != 0;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::protobuf_ShutdownFile_CoreNavigationCLPRayTracingTilesAvailability_2eproto(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability *this)
{
  if (CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry::default_instance_);
  if (CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileTimestamp::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileTimestamp::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileTimestamp::default_instance_);
  if (CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileCommonHeader::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileCommonHeader::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileCommonHeader::default_instance_);
  if (CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityHeader::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityHeader::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityHeader::default_instance_);
  if (CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LatLonGeodetic::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LatLonGeodetic::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LatLonGeodetic::default_instance_);
  if (CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::BoundingBox::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::BoundingBox::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::BoundingBox::default_instance_);
  if (CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RegionSpecificAvailableTiles::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RegionSpecificAvailableTiles::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RegionSpecificAvailableTiles::default_instance_);
  uint64_t result = CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData::default_instance_;
  if (CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData::default_instance_)
  {
    uint64_t v2 = *(uint64_t (**)(void))(*(void *)CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData::default_instance_
                             + 8);
    return v2();
  }
  return result;
}

void CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::protobuf_AddDesc_CoreNavigationCLPRayTracingTilesAvailability_2eproto_impl(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability *this, uint64_t a2, uint64_t a3, const char *a4)
{
}

void *CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry::LogEntry(void *this)
{
  this[1] = 0;
  this[2] = 0;
  *this = &unk_1EDD10BC8;
  return this;
}

{
  this[1] = 0;
  this[2] = 0;
  *this = &unk_1EDD10BC8;
  return this;
}

void *CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileTimestamp::AvailabilityFileTimestamp(void *this)
{
  this[1] = 0;
  this[2] = 0;
  *this = &unk_1EDD10970;
  return this;
}

{
  this[1] = 0;
  this[2] = 0;
  *this = &unk_1EDD10970;
  return this;
}

void *CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileCommonHeader::AvailabilityFileCommonHeader(void *this)
{
  this[1] = 0;
  this[2] = 0;
  *this = &unk_1EDD109E8;
  return this;
}

{
  this[1] = 0;
  this[2] = 0;
  *this = &unk_1EDD109E8;
  return this;
}

double CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityHeader::RayTracingTilesAvailabilityHeader(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityHeader *this)
{
  *(void *)this = &unk_1EDD10B50;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 36) = 0u;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD10B50;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 36) = 0u;
  return result;
}

void *CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LatLonGeodetic::LatLonGeodetic(void *this)
{
  *this = &unk_1EDD108F8;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

{
  *this = &unk_1EDD108F8;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

void *CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::BoundingBox::BoundingBox(void *this)
{
  *this = &unk_1EDD10880;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

{
  *this = &unk_1EDD10880;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RegionSpecificAvailableTiles::RegionSpecificAvailableTiles(uint64_t this)
{
  *(_DWORD *)(this + 36) = 0;
  *(_DWORD *)(this + 40) = 0;
  *(void *)this = &unk_1EDD10A60;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  return this;
}

{
  *(_DWORD *)(this + 36) = 0;
  *(_DWORD *)(this + 40) = 0;
  *(void *)this = &unk_1EDD10A60;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData::RayTracingTilesAvailabilityData(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData *this)
{
  *(void *)this = &unk_1EDD10AD8;
  *((void *)this + 6) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD10AD8;
  *((void *)this + 6) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry::InitAsDefaultInstance(uint64_t this)
{
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityHeader::InitAsDefaultInstance(uint64_t this)
{
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileTimestamp::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::BoundingBox::InitAsDefaultInstance(uint64_t this)
{
  uint64_t v1 = CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LatLonGeodetic::default_instance_;
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LatLonGeodetic::default_instance_;
  *(void *)(this + 16) = v1;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RegionSpecificAvailableTiles::InitAsDefaultInstance(uint64_t this)
{
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::BoundingBox::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData::InitAsDefaultInstance(uint64_t this)
{
  uint64_t v1 = CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityHeader::default_instance_;
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileCommonHeader::default_instance_;
  *(void *)(this + 16) = v1;
  return this;
}

void CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::protobuf_AddDesc_CoreNavigationCLPRayTracingTilesAvailability_2eproto(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability *this)
{
  uint64_t v1 = CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::protobuf_AddDesc_CoreNavigationCLPRayTracingTilesAvailability_2eproto_once_;
  __dmb(0xBu);
  if (v1 != 2)
  {
    v2[0] = MEMORY[0x1E4FBA938] + 16;
    v2[1] = CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::protobuf_AddDesc_CoreNavigationCLPRayTracingTilesAvailability_2eproto_impl;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
}

void sub_18DF0772C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry *CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry::LogEntry(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry *this, const CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry *a2)
{
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)this = &unk_1EDD10BC8;
  CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry::MergeFrom(this, a2);
  return this;
}

void sub_18DF077B4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry::MergeFrom(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry *this, const CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  if (*((unsigned char *)a2 + 20))
  {
    *((_DWORD *)this + 5) |= 1u;
    std::chrono::duration<long long, std::ratio<1, 1000000000>>::rep v4 = (CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData *)*((void *)this + 1);
    if (!v4) {
      operator new();
    }
    uint64_t v5 = (const CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData *)*((void *)a2 + 1);
    if (!v5)
    {
      CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::protobuf_AddDesc_CoreNavigationCLPRayTracingTilesAvailability_2eproto(this);
      uint64_t v5 = *(const CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData **)(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry::default_instance_ + 8);
    }
    CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData::MergeFrom(v4, v5);
  }
}

void sub_18DF078CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry::~LogEntry(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry *this)
{
  *(void *)this = &unk_1EDD10BC8;
  CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry::~LogEntry(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry::SharedDtor(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry *this)
{
  CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::protobuf_AddDesc_CoreNavigationCLPRayTracingTilesAvailability_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry *)CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2)
    {
      char v3 = *(void (**)(void))(*(void *)v2 + 8);
      v3();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry::default_instance(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry *this)
{
  return CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 16) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry::New(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry::Clear(uint64_t this)
{
  uint64_t v1 = this;
  if (*(unsigned char *)(this + 20))
  {
    this = *(void *)(this + 8);
    if (this) {
      this = CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData::Clear((CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData *)this);
    }
  }
  *(_DWORD *)(v1 + 20) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData::Clear(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 52);
  if ((_BYTE)v2)
  {
    if (*((unsigned char *)this + 52))
    {
      uint64_t v3 = *((void *)this + 1);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 20)) {
          *(void *)(v3 + 8) = 0;
        }
        *(_DWORD *)(v3 + 20) = 0;
        int v2 = *((_DWORD *)this + 13);
      }
    }
    if ((v2 & 2) != 0)
    {
      uint64_t v4 = *((void *)this + 2);
      if (v4) {
        CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityHeader::Clear(v4);
      }
    }
  }
  uint64_t result = sub_18DF0C208((uint64_t)this + 24);
  *((_DWORD *)this + 13) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (1)
  {
    while (1)
    {
      uint64_t v4 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
      }
      else
      {
        unint64_t TagFallback = *v4;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v4 + 1;
      }
      if (TagFallback != 10) {
        break;
      }
      *((_DWORD *)this + 5) |= 1u;
      uint64_t v6 = (CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData *)*((void *)this + 1);
      if (!v6) {
        operator new();
      }
      unsigned int v14 = 0;
      uint64_t v7 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v7 >= *((void *)a2 + 2) || *v7 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v14)) {
          return 0;
        }
      }
      else
      {
        unsigned int v14 = *v7;
        *((void *)a2 + 1) = v7 + 1;
      }
      int v8 = *((_DWORD *)a2 + 14);
      int v9 = *((_DWORD *)a2 + 15);
      *((_DWORD *)a2 + 14) = v8 + 1;
      if (v8 >= v9) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
      if (!CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData::MergePartialFromCodedStream(v6, a2)|| !*((unsigned char *)a2 + 36))
      {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
      int v10 = *((_DWORD *)a2 + 14);
      BOOL v11 = __OFSUB__(v10, 1);
      int v12 = v10 - 1;
      if (v12 < 0 == v11) {
        *((_DWORD *)a2 + 14) = v12;
      }
      if (*((void *)a2 + 1) == *((void *)a2 + 2)
        && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      break;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if (*(unsigned char *)(this + 20))
  {
    uint64_t v5 = *(void *)(this + 8);
    if (!v5)
    {
      CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::protobuf_AddDesc_CoreNavigationCLPRayTracingTilesAvailability_2eproto((CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability *)this);
      uint64_t v5 = *(void *)(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry::default_instance_ + 8);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v5, a2, a4);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry::ByteSize(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry *this)
{
  if (*((unsigned char *)this + 20))
  {
    uint64_t v3 = (CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData *)*((void *)this + 1);
    if (!v3)
    {
      CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::protobuf_AddDesc_CoreNavigationCLPRayTracingTilesAvailability_2eproto(0);
      uint64_t v3 = *(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData **)(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry::default_instance_ + 8);
    }
    uint64_t v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData::ByteSize(v3);
    int v5 = (int)v4;
    if (v4 >= 0x80) {
      int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
    }
    else {
      int v6 = 1;
    }
    uint64_t result = (v5 + v6 + 1);
  }
  else
  {
    uint64_t result = 0;
  }
  *((_DWORD *)this + 4) = result;
  return result;
}

void CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData::MergeFrom(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData *this, const CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
  }
  uint64_t v4 = (CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData *)((char *)this + 24));
  if (*((int *)a2 + 8) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      int v6 = *(const CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RegionSpecificAvailableTiles **)(*((void *)a2 + 3) + 8 * v5);
      int v7 = *((_DWORD *)this + 9);
      uint64_t v8 = *((int *)this + 8);
      if ((int)v8 >= v7)
      {
        if (v7 == *((_DWORD *)this + 10))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData *)((char *)this + 24));
          int v7 = *((_DWORD *)this + 9);
        }
        *((_DWORD *)this + 9) = v7 + 1;
        operator new();
      }
      uint64_t v9 = *((void *)this + 3);
      *((_DWORD *)this + 8) = v8 + 1;
      CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RegionSpecificAvailableTiles::MergeFrom(*(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RegionSpecificAvailableTiles **)(v9 + 8 * v8), v6);
      ++v5;
    }
    while (v5 < *((int *)a2 + 8));
  }
  LOBYTE(v10) = *((unsigned char *)a2 + 52);
  if ((_BYTE)v10)
  {
    if (*((unsigned char *)a2 + 52))
    {
      *((_DWORD *)this + 13) |= 1u;
      BOOL v11 = (CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileCommonHeader *)*((void *)this + 1);
      if (!v11) {
        operator new();
      }
      int v12 = (const CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileCommonHeader *)*((void *)a2 + 1);
      if (!v12)
      {
        CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::protobuf_AddDesc_CoreNavigationCLPRayTracingTilesAvailability_2eproto(v4);
        int v12 = *(const CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileCommonHeader **)(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData::default_instance_ + 8);
      }
      CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileCommonHeader::MergeFrom(v11, v12);
      int v10 = *((_DWORD *)a2 + 13);
    }
    if ((v10 & 2) != 0)
    {
      *((_DWORD *)this + 13) |= 2u;
      long long v13 = (CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityHeader *)*((void *)this + 2);
      if (!v13) {
        operator new();
      }
      unsigned int v14 = (const CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityHeader *)*((void *)a2 + 2);
      if (!v14)
      {
        CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::protobuf_AddDesc_CoreNavigationCLPRayTracingTilesAvailability_2eproto(v4);
        unsigned int v14 = *(const CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityHeader **)(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData::default_instance_ + 16);
      }
      CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityHeader::MergeFrom(v13, v14);
    }
  }
}

void sub_18DF080B4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry::CopyFrom(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry *this, const CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry::IsInitialized(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry *a2)
{
  if (a2 != (CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LogEntry::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.RayTracingTilesAvailability.LogEntry");
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileTimestamp::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileTimestamp *CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileTimestamp::AvailabilityFileTimestamp(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileTimestamp *this, const CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileTimestamp *a2)
{
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)this = &unk_1EDD10970;
  CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileTimestamp::MergeFrom(this, a2);
  return this;
}

void sub_18DF08200(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileTimestamp::MergeFrom(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileTimestamp *this, const CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileTimestamp *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v5);
  }
  if (*((unsigned char *)a2 + 20))
  {
    double result = *((double *)a2 + 1);
    *((_DWORD *)this + 5) |= 1u;
    *((double *)this + 1) = result;
  }
  return result;
}

void sub_18DF082A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileTimestamp::~AvailabilityFileTimestamp(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileTimestamp *this)
{
  *(void *)this = &unk_1EDD10970;
  CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::protobuf_AddDesc_CoreNavigationCLPRayTracingTilesAvailability_2eproto(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileTimestamp::~AvailabilityFileTimestamp(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileTimestamp::default_instance(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileTimestamp *this)
{
  return CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileTimestamp::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileTimestamp::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 16) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileTimestamp::New(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileTimestamp *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileTimestamp::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 20)) {
    *(void *)(this + 8) = 0;
  }
  *(_DWORD *)(this + 20) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileTimestamp::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileTimestamp *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  do
  {
    while (1)
    {
      uint64_t v4 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
      }
      else
      {
        unint64_t TagFallback = *v4;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v4 + 1;
      }
      if (TagFallback != 9) {
        break;
      }
      unint64_t v7 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v7) & 1) == 0) {
        return 0;
      }
      *((void *)this + 1) = v7;
      *((_DWORD *)this + 5) |= 1u;
      if (*((void *)a2 + 1) == *((void *)a2 + 2)
        && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      return 1;
    }
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0);
  return 0;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileTimestamp::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  if (*(unsigned char *)(this + 20)) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileTimestamp::ByteSize(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileTimestamp *this)
{
  uint64_t v1 = ((int)(*((_DWORD *)this + 5) << 31) >> 31) & 9;
  *((_DWORD *)this + 4) = v1;
  return v1;
}

double CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileTimestamp::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileTimestamp *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileTimestamp::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileTimestamp::CopyFrom(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileTimestamp *this, const CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileTimestamp *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileTimestamp *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileTimestamp::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileTimestamp::IsInitialized(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileTimestamp *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileTimestamp::Swap(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileTimestamp *this, CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileTimestamp *a2)
{
  if (a2 != this)
  {
    double result = *((double *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((double *)a2 + 1) = result;
    int v3 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v3;
    int v4 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v4;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileTimestamp::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.RayTracingTilesAvailability.AvailabilityFileTimestamp");
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileCommonHeader::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileCommonHeader *CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileCommonHeader::AvailabilityFileCommonHeader(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileCommonHeader *this, const CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileCommonHeader *a2)
{
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)this = &unk_1EDD109E8;
  CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileCommonHeader::MergeFrom(this, a2);
  return this;
}

void sub_18DF086DC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileCommonHeader::MergeFrom(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileCommonHeader *this, const CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileCommonHeader *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 20);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 20))
    {
      int v5 = *((_DWORD *)a2 + 2);
      *((_DWORD *)this + 5) |= 1u;
      *((_DWORD *)this + 2) = v5;
      int v4 = *((_DWORD *)a2 + 5);
    }
    if ((v4 & 2) != 0)
    {
      int v6 = *((_DWORD *)a2 + 3);
      *((_DWORD *)this + 5) |= 2u;
      *((_DWORD *)this + 3) = v6;
    }
  }
}

void sub_18DF0879C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileCommonHeader::~AvailabilityFileCommonHeader(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileCommonHeader *this)
{
  *(void *)this = &unk_1EDD109E8;
  CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::protobuf_AddDesc_CoreNavigationCLPRayTracingTilesAvailability_2eproto(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileCommonHeader::~AvailabilityFileCommonHeader(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileCommonHeader::default_instance(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileCommonHeader *this)
{
  return CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileCommonHeader::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileCommonHeader::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 16) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileCommonHeader::New(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileCommonHeader *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileCommonHeader::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 20)) {
    *(void *)(this + 8) = 0;
  }
  *(_DWORD *)(this + 20) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileCommonHeader::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileCommonHeader *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unsigned int *)((char *)this + 8);
  int v5 = (unsigned int *)((char *)this + 12);
  while (1)
  {
    while (1)
    {
      int v6 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v6 >= *((void *)a2 + 2) || *v6 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v6;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v6 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_16;
      }
      BOOL v11 = (char *)*((void *)a2 + 1);
      unint64_t v9 = *((void *)a2 + 2);
      if ((unint64_t)v11 >= v9 || *v11 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
        if (!result) {
          return result;
        }
        int v12 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
      }
      else
      {
        unsigned int *v4 = *v11;
        int v12 = v11 + 1;
        *((void *)a2 + 1) = v12;
      }
      *((_DWORD *)this + 5) |= 1u;
      if ((unint64_t)v12 < v9 && *v12 == 16)
      {
        int v10 = v12 + 1;
        *((void *)a2 + 1) = v10;
LABEL_24:
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!result) {
            return result;
          }
          long long v13 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
        }
        else
        {
          *int v5 = *v10;
          long long v13 = (unsigned __int8 *)(v10 + 1);
          *((void *)a2 + 1) = v13;
        }
        *((_DWORD *)this + 5) |= 2u;
        if (v13 == (unsigned __int8 *)v9 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v8 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v10 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        goto LABEL_24;
      }
    }
    else
    {
      int v8 = TagFallback & 7;
    }
LABEL_16:
    if (v8 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileCommonHeader::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 20);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
  {
    uint64_t v7 = *(unsigned int *)(v5 + 12);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, (uint64_t)a2, a4);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileCommonHeader::ByteSize(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileCommonHeader *this)
{
  char v2 = *((unsigned char *)this + 20);
  if (v2)
  {
    if (*((unsigned char *)this + 20))
    {
      int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
      if (v4 >= 0x80)
      {
        uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
        if ((*((_DWORD *)this + 5) & 2) == 0) {
          goto LABEL_14;
        }
      }
      else
      {
        uint64_t v3 = 2;
        if ((v2 & 2) == 0) {
          goto LABEL_14;
        }
      }
    }
    else
    {
      uint64_t v3 = 0;
      if ((*((unsigned char *)this + 20) & 2) == 0) {
        goto LABEL_14;
      }
    }
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
    if (v5 >= 0x80) {
      int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    }
    else {
      int v6 = 2;
    }
    uint64_t v3 = (v6 + v3);
  }
  else
  {
    uint64_t v3 = 0;
  }
LABEL_14:
  *((_DWORD *)this + 4) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileCommonHeader::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileCommonHeader *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileCommonHeader::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileCommonHeader::CopyFrom(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileCommonHeader *this, const CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileCommonHeader *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileCommonHeader *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileCommonHeader::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileCommonHeader::IsInitialized(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileCommonHeader *this)
{
  return 1;
}

CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileCommonHeader *CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileCommonHeader::Swap(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileCommonHeader *this, CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileCommonHeader *a2)
{
  if (a2 != this)
  {
    int v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    int v3 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    int v4 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v4;
    int v5 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v5;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileCommonHeader::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.RayTracingTilesAvailability.AvailabilityFileCommonHeader");
}

double CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityHeader::SharedCtor(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityHeader *this)
{
  double result = 0.0;
  *(_OWORD *)((char *)this + 36) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityHeader *CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityHeader::RayTracingTilesAvailabilityHeader(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityHeader *this, const CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityHeader *a2)
{
  *(void *)this = &unk_1EDD10B50;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 36) = 0u;
  CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityHeader::MergeFrom(this, a2);
  return this;
}

void sub_18DF08D80(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityHeader::MergeFrom(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityHeader *this, const CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityHeader *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 48);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 48))
    {
      *((_DWORD *)this + 12) |= 1u;
      int v6 = (CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileTimestamp *)*((void *)this + 1);
      if (!v6) {
        operator new();
      }
      uint64_t v7 = (const CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileTimestamp *)*((void *)a2 + 1);
      if (!v7)
      {
        CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::protobuf_AddDesc_CoreNavigationCLPRayTracingTilesAvailability_2eproto(this);
        uint64_t v7 = *(const CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileTimestamp **)(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityHeader::default_instance_ + 8);
      }
      CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileTimestamp::MergeFrom(v6, v7);
      int v4 = *((_DWORD *)a2 + 12);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_20;
      }
    }
    else if ((*((unsigned char *)a2 + 48) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v8 = *((_DWORD *)a2 + 4);
    *((_DWORD *)this + 12) |= 2u;
    *((_DWORD *)this + 4) = v8;
    int v4 = *((_DWORD *)a2 + 12);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_21;
    }
LABEL_20:
    int v9 = *((_DWORD *)a2 + 5);
    *((_DWORD *)this + 12) |= 4u;
    *((_DWORD *)this + 5) = v9;
    int v4 = *((_DWORD *)a2 + 12);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_22;
    }
LABEL_21:
    int v10 = *((_DWORD *)a2 + 6);
    *((_DWORD *)this + 12) |= 8u;
    *((_DWORD *)this + 6) = v10;
    int v4 = *((_DWORD *)a2 + 12);
    if ((v4 & 0x10) == 0)
    {
LABEL_9:
      if ((v4 & 0x20) == 0) {
        goto LABEL_10;
      }
      goto LABEL_23;
    }
LABEL_22:
    int v11 = *((_DWORD *)a2 + 7);
    *((_DWORD *)this + 12) |= 0x10u;
    *((_DWORD *)this + 7) = v11;
    int v4 = *((_DWORD *)a2 + 12);
    if ((v4 & 0x20) == 0)
    {
LABEL_10:
      if ((v4 & 0x40) == 0) {
        goto LABEL_11;
      }
      goto LABEL_24;
    }
LABEL_23:
    int v12 = *((_DWORD *)a2 + 8);
    *((_DWORD *)this + 12) |= 0x20u;
    *((_DWORD *)this + 8) = v12;
    int v4 = *((_DWORD *)a2 + 12);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        return;
      }
      goto LABEL_12;
    }
LABEL_24:
    int v13 = *((_DWORD *)a2 + 9);
    *((_DWORD *)this + 12) |= 0x40u;
    *((_DWORD *)this + 9) = v13;
    if ((*((_DWORD *)a2 + 12) & 0x80) == 0) {
      return;
    }
LABEL_12:
    int v5 = *((_DWORD *)a2 + 10);
    *((_DWORD *)this + 12) |= 0x80u;
    *((_DWORD *)this + 10) = v5;
  }
}

void sub_18DF08F70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityHeader::~RayTracingTilesAvailabilityHeader(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityHeader *this)
{
  *(void *)this = &unk_1EDD10B50;
  CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityHeader::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityHeader::~RayTracingTilesAvailabilityHeader(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityHeader::SharedDtor(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityHeader *this)
{
  CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::protobuf_AddDesc_CoreNavigationCLPRayTracingTilesAvailability_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityHeader *)CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityHeader::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2)
    {
      int v3 = *(void (**)(void))(*(void *)v2 + 8);
      v3();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityHeader::default_instance(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityHeader *this)
{
  return CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityHeader::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityHeader::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 44) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityHeader::New(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityHeader *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityHeader::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 48))
  {
    if (*(unsigned char *)(this + 48))
    {
      uint64_t v1 = *(void *)(this + 8);
      if (v1)
      {
        if (*(unsigned char *)(v1 + 20)) {
          *(void *)(v1 + 8) = 0;
        }
        *(_DWORD *)(v1 + 20) = 0;
      }
    }
    *(void *)(this + 16) = 0;
    *(void *)(this + 24) = 0;
    *(_DWORD *)(this + 40) = 0;
    *(void *)(this + 32) = 0;
  }
  *(_DWORD *)(this + 48) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityHeader::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityHeader *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unsigned int *)((char *)this + 16);
  int v5 = (unsigned int *)((char *)this + 20);
  int v6 = (unsigned int *)((char *)this + 24);
  uint64_t v7 = (unsigned int *)((char *)this + 28);
  int v8 = (unsigned int *)((char *)this + 32);
  int v9 = (unsigned int *)((char *)this + 36);
  int v10 = (unsigned int *)((char *)this + 40);
  while (2)
  {
    int v11 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v11 >= *((void *)a2 + 2) || *v11 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v11;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v11 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v13 = TagFallback & 7;
        if (v13 != 2) {
          goto LABEL_28;
        }
        *((_DWORD *)this + 12) |= 1u;
        unsigned int v14 = (CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileTimestamp *)*((void *)this + 1);
        if (!v14) {
          operator new();
        }
        unsigned int v38 = 0;
        __int16 v15 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v15 >= *((void *)a2 + 2) || *v15 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v38))return 0; {
        }
          }
        else
        {
          unsigned int v38 = *v15;
          *((void *)a2 + 1) = v15 + 1;
        }
        int v24 = *((_DWORD *)a2 + 14);
        int v25 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v24 + 1;
        if (v24 >= v25) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileTimestamp::MergePartialFromCodedStream(v14, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v26 = *((_DWORD *)a2 + 14);
        BOOL v27 = __OFSUB__(v26, 1);
        int v28 = v26 - 1;
        if (v28 < 0 == v27) {
          *((_DWORD *)a2 + 14) = v28;
        }
        double v29 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
        if ((unint64_t)v29 >= v16 || *v29 != 16) {
          continue;
        }
        __int16 v17 = v29 + 1;
        *((void *)a2 + 1) = v17;
        goto LABEL_41;
      case 2u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        __int16 v17 = (char *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
LABEL_41:
        if ((unint64_t)v17 >= v16 || *v17 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!result) {
            return result;
          }
          double v30 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v16 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v4 = *v17;
          double v30 = v17 + 1;
          *((void *)a2 + 1) = v30;
        }
        *((_DWORD *)this + 12) |= 2u;
        if ((unint64_t)v30 >= v16 || *v30 != 24) {
          continue;
        }
        va_list v18 = v30 + 1;
        *((void *)a2 + 1) = v18;
LABEL_49:
        if ((unint64_t)v18 >= v16 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!result) {
            return result;
          }
          __double2 v32 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v16 = *((void *)a2 + 2);
        }
        else
        {
          *int v5 = *v18;
          __double2 v32 = v18 + 1;
          *((void *)a2 + 1) = v32;
        }
        *((_DWORD *)this + 12) |= 4u;
        if ((unint64_t)v32 >= v16 || *v32 != 32) {
          continue;
        }
        uint64_t v19 = v32 + 1;
        *((void *)a2 + 1) = v19;
LABEL_57:
        if ((unint64_t)v19 >= v16 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
          if (!result) {
            return result;
          }
          double v33 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v16 = *((void *)a2 + 2);
        }
        else
        {
          *int v6 = *v19;
          double v33 = v19 + 1;
          *((void *)a2 + 1) = v33;
        }
        *((_DWORD *)this + 12) |= 8u;
        if ((unint64_t)v33 >= v16 || *v33 != 40) {
          continue;
        }
        long long v20 = v33 + 1;
        *((void *)a2 + 1) = v20;
LABEL_65:
        if ((unint64_t)v20 >= v16 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v7);
          if (!result) {
            return result;
          }
          uint64_t v34 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v16 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v7 = *v20;
          uint64_t v34 = v20 + 1;
          *((void *)a2 + 1) = v34;
        }
        *((_DWORD *)this + 12) |= 0x10u;
        if ((unint64_t)v34 >= v16 || *v34 != 48) {
          continue;
        }
        long long v21 = v34 + 1;
        *((void *)a2 + 1) = v21;
LABEL_73:
        if ((unint64_t)v21 >= v16 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v8);
          if (!result) {
            return result;
          }
          double v35 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v16 = *((void *)a2 + 2);
        }
        else
        {
          *int v8 = *v21;
          double v35 = v21 + 1;
          *((void *)a2 + 1) = v35;
        }
        *((_DWORD *)this + 12) |= 0x20u;
        if ((unint64_t)v35 >= v16 || *v35 != 56) {
          continue;
        }
        os_log_t v22 = v35 + 1;
        *((void *)a2 + 1) = v22;
LABEL_81:
        if ((unint64_t)v22 >= v16 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v9);
          if (!result) {
            return result;
          }
          double v36 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v16 = *((void *)a2 + 2);
        }
        else
        {
          *int v9 = *v22;
          double v36 = v22 + 1;
          *((void *)a2 + 1) = v36;
        }
        *((_DWORD *)this + 12) |= 0x40u;
        if ((unint64_t)v36 >= v16 || *v36 != 64) {
          continue;
        }
        double v23 = v36 + 1;
        *((void *)a2 + 1) = v23;
LABEL_89:
        if ((unint64_t)v23 >= v16 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v10);
          if (!result) {
            return result;
          }
          uint64_t v37 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v16 = *((void *)a2 + 2);
        }
        else
        {
          *int v10 = *v23;
          uint64_t v37 = (unsigned __int8 *)(v23 + 1);
          *((void *)a2 + 1) = v37;
        }
        *((_DWORD *)this + 12) |= 0x80u;
        if (v37 != (unsigned __int8 *)v16 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10)) {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        break;
      case 3u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        va_list v18 = (char *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
        goto LABEL_49;
      case 4u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        uint64_t v19 = (char *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
        goto LABEL_57;
      case 5u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        long long v20 = (char *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
        goto LABEL_65;
      case 6u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        long long v21 = (char *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
        goto LABEL_73;
      case 7u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        os_log_t v22 = (char *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
        goto LABEL_81;
      case 8u:
        int v13 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        double v23 = (char *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
        goto LABEL_89;
      default:
        int v13 = TagFallback & 7;
LABEL_28:
        if (v13 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityHeader::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = (unsigned int *)this;
  unsigned int v6 = *(_DWORD *)(this + 48);
  if (v6)
  {
    uint64_t v7 = *(void *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::protobuf_AddDesc_CoreNavigationCLPRayTracingTilesAvailability_2eproto((CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability *)this);
      uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityHeader::default_instance_
                     + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    unsigned int v6 = v5[12];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[4], (uint64_t)a2, a4);
  unsigned int v6 = v5[12];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_14:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[5], (uint64_t)a2, a4);
  unsigned int v6 = v5[12];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_16;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[6], (uint64_t)a2, a4);
  unsigned int v6 = v5[12];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_17;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[7], (uint64_t)a2, a4);
  unsigned int v6 = v5[12];
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
LABEL_18:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v5[9], (uint64_t)a2, a4);
    if ((v5[12] & 0x80) == 0) {
      return this;
    }
    goto LABEL_19;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[8], (uint64_t)a2, a4);
  unsigned int v6 = v5[12];
  if ((v6 & 0x40) != 0) {
    goto LABEL_18;
  }
LABEL_8:
  if ((v6 & 0x80) == 0) {
    return this;
  }
LABEL_19:
  uint64_t v8 = v5[10];

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v8, (uint64_t)a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityHeader::ByteSize(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityHeader *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 48);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_44;
  }
  if ((*((unsigned char *)this + 48) & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((*((unsigned char *)this + 48) & 2) == 0) {
      goto LABEL_13;
    }
    goto LABEL_9;
  }
  uint64_t v4 = *((void *)this + 1);
  if (!v4)
  {
    CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::protobuf_AddDesc_CoreNavigationCLPRayTracingTilesAvailability_2eproto(this);
    uint64_t v4 = *(void *)(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityHeader::default_instance_
                   + 8);
  }
  int v5 = ((int)(*(_DWORD *)(v4 + 20) << 31) >> 31) & 9;
  *(_DWORD *)(v4 + 16) = v5;
  uint64_t v3 = v5 | 2u;
  int v2 = *((_DWORD *)this + 12);
  if ((v2 & 2) != 0)
  {
LABEL_9:
    unsigned int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if (v6 >= 0x80)
    {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6) + 1;
      int v2 = *((_DWORD *)this + 12);
    }
    else
    {
      int v7 = 2;
    }
    uint64_t v3 = (v7 + v3);
  }
LABEL_13:
  if ((v2 & 4) != 0)
  {
    uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
    if (v8 >= 0x80)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8) + 1;
      int v2 = *((_DWORD *)this + 12);
    }
    else
    {
      int v9 = 2;
    }
    uint64_t v3 = (v9 + v3);
    if ((v2 & 8) == 0)
    {
LABEL_15:
      if ((v2 & 0x10) == 0) {
        goto LABEL_16;
      }
      goto LABEL_28;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_15;
  }
  int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  if (v10 >= 0x80)
  {
    int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10) + 1;
    int v2 = *((_DWORD *)this + 12);
  }
  else
  {
    int v11 = 2;
  }
  uint64_t v3 = (v11 + v3);
  if ((v2 & 0x10) == 0)
  {
LABEL_16:
    if ((v2 & 0x20) == 0) {
      goto LABEL_17;
    }
    goto LABEL_32;
  }
LABEL_28:
  int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
  if (v12 >= 0x80)
  {
    int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12) + 1;
    int v2 = *((_DWORD *)this + 12);
  }
  else
  {
    int v13 = 2;
  }
  uint64_t v3 = (v13 + v3);
  if ((v2 & 0x20) == 0)
  {
LABEL_17:
    if ((v2 & 0x40) == 0) {
      goto LABEL_18;
    }
    goto LABEL_36;
  }
LABEL_32:
  unsigned int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
  if (v14 >= 0x80)
  {
    int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14) + 1;
    int v2 = *((_DWORD *)this + 12);
  }
  else
  {
    int v15 = 2;
  }
  uint64_t v3 = (v15 + v3);
  if ((v2 & 0x40) == 0)
  {
LABEL_18:
    if ((v2 & 0x80) == 0) {
      goto LABEL_44;
    }
    goto LABEL_40;
  }
LABEL_36:
  unint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
  if (v16 >= 0x80)
  {
    int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16) + 1;
    int v2 = *((_DWORD *)this + 12);
  }
  else
  {
    int v17 = 2;
  }
  uint64_t v3 = (v17 + v3);
  if ((v2 & 0x80) != 0)
  {
LABEL_40:
    va_list v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    if (v18 >= 0x80) {
      int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18) + 1;
    }
    else {
      int v19 = 2;
    }
    uint64_t v3 = (v19 + v3);
  }
LABEL_44:
  *((_DWORD *)this + 11) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityHeader::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityHeader *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityHeader::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityHeader::CopyFrom(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityHeader *this, const CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityHeader *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityHeader *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityHeader::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityHeader::IsInitialized(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityHeader *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityHeader::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityHeader *a2)
{
  if (a2 != (CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityHeader *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 48);
    *(_DWORD *)(this + 48) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 44);
    *(_DWORD *)(this + 44) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v2;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityHeader::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.RayTracingTilesAvailability.RayTracingTilesAvailabilityHeader");
}

void *CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LatLonGeodetic::SharedCtor(void *this)
{
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LatLonGeodetic *CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LatLonGeodetic::LatLonGeodetic(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LatLonGeodetic *this, const CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LatLonGeodetic *a2)
{
  *(void *)this = &unk_1EDD108F8;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LatLonGeodetic::MergeFrom(this, a2);
  return this;
}

void sub_18DF09C04(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LatLonGeodetic::MergeFrom(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LatLonGeodetic *this, const CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LatLonGeodetic *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 28);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 28))
    {
      double result = *((double *)a2 + 1);
      *((_DWORD *)this + 7) |= 1u;
      *((double *)this + 1) = result;
      int v5 = *((_DWORD *)a2 + 7);
    }
    if ((v5 & 2) != 0)
    {
      double result = *((double *)a2 + 2);
      *((_DWORD *)this + 7) |= 2u;
      *((double *)this + 2) = result;
    }
  }
  return result;
}

void sub_18DF09CC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LatLonGeodetic::~LatLonGeodetic(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LatLonGeodetic *this)
{
  *(void *)this = &unk_1EDD108F8;
  CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::protobuf_AddDesc_CoreNavigationCLPRayTracingTilesAvailability_2eproto(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LatLonGeodetic::~LatLonGeodetic(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LatLonGeodetic::default_instance(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LatLonGeodetic *this)
{
  return CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LatLonGeodetic::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LatLonGeodetic::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 24) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LatLonGeodetic::New(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LatLonGeodetic *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LatLonGeodetic::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 28))
  {
    *(void *)(this + 8) = 0;
    *(void *)(this + 16) = 0;
  }
  *(_DWORD *)(this + 28) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LatLonGeodetic::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LatLonGeodetic *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v4 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v4;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((void *)a2 + 1) = v4 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_21;
        }
        unint64_t v9 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v9) & 1) == 0) {
          return 0;
        }
        *((void *)this + 1) = v9;
        *((_DWORD *)this + 7) |= 1u;
        int v7 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v7 < *((void *)a2 + 2) && *v7 == 17)
        {
          *((void *)a2 + 1) = v7 + 1;
          goto LABEL_15;
        }
      }
      if (TagFallback >> 3 != 2)
      {
        int v6 = TagFallback & 7;
        goto LABEL_21;
      }
      int v6 = TagFallback & 7;
      if (v6 == 1) {
        break;
      }
LABEL_21:
      if (v6 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
    }
      }
LABEL_15:
    unint64_t v9 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v9) & 1) == 0) {
      return 0;
    }
    *((void *)this + 2) = v9;
    *((_DWORD *)this + 7) |= 2u;
  }
  while (*((void *)a2 + 1) != *((void *)a2 + 2)
       || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10));
  *((_DWORD *)a2 + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)a2 + 36) = 1;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LatLonGeodetic::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = this;
  int v5 = *(_DWORD *)(this + 28);
  if (v5)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
    int v5 = *(_DWORD *)(v4 + 28);
  }
  if ((v5 & 2) != 0)
  {
    double v6 = *(double *)(v4 + 16);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, v6, a3);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LatLonGeodetic::ByteSize(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LatLonGeodetic *this)
{
  uint64_t v1 = *((unsigned __int8 *)this + 28);
  if (*((unsigned char *)this + 28))
  {
    unsigned int v2 = ((int)(v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0) {
      uint64_t v1 = v2 + 9;
    }
    else {
      uint64_t v1 = v2;
    }
  }
  *((_DWORD *)this + 6) = v1;
  return v1;
}

double CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LatLonGeodetic::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LatLonGeodetic *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LatLonGeodetic::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LatLonGeodetic::CopyFrom(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LatLonGeodetic *this, const CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LatLonGeodetic *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LatLonGeodetic *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LatLonGeodetic::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LatLonGeodetic::IsInitialized(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LatLonGeodetic *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LatLonGeodetic::Swap(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LatLonGeodetic *this, CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LatLonGeodetic *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    double result = *((double *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((double *)a2 + 2) = result;
    int v4 = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v4;
    int v5 = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v5;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LatLonGeodetic::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.RayTracingTilesAvailability.LatLonGeodetic");
}

void *CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::BoundingBox::SharedCtor(void *this)
{
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::BoundingBox *CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::BoundingBox::BoundingBox(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::BoundingBox *this, const CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::BoundingBox *a2)
{
  *(void *)this = &unk_1EDD10880;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::BoundingBox::MergeFrom(this, a2);
  return this;
}

void sub_18DF0A1EC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::BoundingBox::MergeFrom(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::BoundingBox *this, const CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::BoundingBox *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 28);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 28))
    {
      *((_DWORD *)this + 7) |= 1u;
      double v6 = (CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LatLonGeodetic *)*((void *)this + 1);
      if (!v6) {
        operator new();
      }
      int v7 = (const CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LatLonGeodetic *)*((void *)a2 + 1);
      if (!v7)
      {
        CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::protobuf_AddDesc_CoreNavigationCLPRayTracingTilesAvailability_2eproto(this);
        int v7 = *(const CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LatLonGeodetic **)(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::BoundingBox::default_instance_
                                                                                                  + 8);
      }
      double result = CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LatLonGeodetic::MergeFrom(v6, v7);
      int v5 = *((_DWORD *)a2 + 7);
    }
    if ((v5 & 2) != 0)
    {
      *((_DWORD *)this + 7) |= 2u;
      uint64_t v8 = (CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LatLonGeodetic *)*((void *)this + 2);
      if (!v8) {
        operator new();
      }
      unint64_t v9 = (const CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LatLonGeodetic *)*((void *)a2 + 2);
      if (!v9)
      {
        CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::protobuf_AddDesc_CoreNavigationCLPRayTracingTilesAvailability_2eproto(this);
        unint64_t v9 = *(const CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LatLonGeodetic **)(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::BoundingBox::default_instance_
                                                                                                  + 16);
      }
      return CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LatLonGeodetic::MergeFrom(v8, v9);
    }
  }
  return result;
}

void sub_18DF0A374(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::BoundingBox::~BoundingBox(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::BoundingBox *this)
{
  *(void *)this = &unk_1EDD10880;
  CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::BoundingBox::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::BoundingBox::~BoundingBox(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::BoundingBox::SharedDtor(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::BoundingBox *this)
{
  CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::protobuf_AddDesc_CoreNavigationCLPRayTracingTilesAvailability_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::BoundingBox *)CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::BoundingBox::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 2);
    if (v3)
    {
      int v4 = *(void (**)(void))(*(void *)v3 + 8);
      v4();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::BoundingBox::default_instance(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::BoundingBox *this)
{
  return CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::BoundingBox::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::BoundingBox::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 24) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::BoundingBox::New(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::BoundingBox *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::BoundingBox::Clear(uint64_t this)
{
  LOBYTE(v1) = *(unsigned char *)(this + 28);
  if ((_BYTE)v1)
  {
    if (*(unsigned char *)(this + 28))
    {
      uint64_t v2 = *(void *)(this + 8);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 28))
        {
          *(void *)(v2 + 8) = 0;
          *(void *)(v2 + 16) = 0;
        }
        *(_DWORD *)(v2 + 28) = 0;
        int v1 = *(_DWORD *)(this + 28);
      }
    }
    if ((v1 & 2) != 0)
    {
      uint64_t v3 = *(void *)(this + 16);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 28))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
        }
        *(_DWORD *)(v3 + 28) = 0;
      }
    }
  }
  *(_DWORD *)(this + 28) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::BoundingBox::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::BoundingBox *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        int v4 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v4;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((void *)a2 + 1) = v4 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_17;
        }
        *((_DWORD *)this + 7) |= 1u;
        int v7 = (CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LatLonGeodetic *)*((void *)this + 1);
        if (!v7) {
          operator new();
        }
        unsigned int v22 = 0;
        uint64_t v8 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v22))return 0; {
        }
          }
        else
        {
          unsigned int v22 = *v8;
          *((void *)a2 + 1) = v8 + 1;
        }
        int v9 = *((_DWORD *)a2 + 14);
        int v10 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v9 + 1;
        if (v9 >= v10) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LatLonGeodetic::MergePartialFromCodedStream(v7, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v11 = *((_DWORD *)a2 + 14);
        BOOL v12 = __OFSUB__(v11, 1);
        int v13 = v11 - 1;
        if (v13 < 0 == v12) {
          *((_DWORD *)a2 + 14) = v13;
        }
        unsigned int v14 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v14 < *((void *)a2 + 2) && *v14 == 18)
        {
          *((void *)a2 + 1) = v14 + 1;
          goto LABEL_29;
        }
      }
      if (TagFallback >> 3 != 2) {
        break;
      }
      int v6 = TagFallback & 7;
      if (v6 != 2) {
        goto LABEL_17;
      }
LABEL_29:
      *((_DWORD *)this + 7) |= 2u;
      int v15 = (CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LatLonGeodetic *)*((void *)this + 2);
      if (!v15) {
        operator new();
      }
      unsigned int v23 = 0;
      unint64_t v16 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v16 >= *((void *)a2 + 2) || *v16 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v23)) {
          return 0;
        }
      }
      else
      {
        unsigned int v23 = *v16;
        *((void *)a2 + 1) = v16 + 1;
      }
      int v17 = *((_DWORD *)a2 + 14);
      int v18 = *((_DWORD *)a2 + 15);
      *((_DWORD *)a2 + 14) = v17 + 1;
      if (v17 >= v18) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
      if (!CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::LatLonGeodetic::MergePartialFromCodedStream(v15, a2)|| !*((unsigned char *)a2 + 36))
      {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
      int v19 = *((_DWORD *)a2 + 14);
      BOOL v12 = __OFSUB__(v19, 1);
      int v20 = v19 - 1;
      if (v20 < 0 == v12) {
        *((_DWORD *)a2 + 14) = v20;
      }
      if (*((void *)a2 + 1) == *((void *)a2 + 2)
        && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      }
    }
    int v6 = TagFallback & 7;
LABEL_17:
    if (v6 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::BoundingBox::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 28);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      return this;
    }
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(this + 8);
  if (!v7)
  {
    CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::protobuf_AddDesc_CoreNavigationCLPRayTracingTilesAvailability_2eproto((CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability *)this);
    uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::BoundingBox::default_instance_ + 8);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
  if ((*(_DWORD *)(v5 + 28) & 2) != 0)
  {
LABEL_7:
    uint64_t v8 = *(void *)(v5 + 16);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::protobuf_AddDesc_CoreNavigationCLPRayTracingTilesAvailability_2eproto((CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability *)this);
      uint64_t v8 = *(void *)(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::BoundingBox::default_instance_ + 16);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::BoundingBox::ByteSize(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::BoundingBox *this)
{
  if (!*((unsigned char *)this + 28))
  {
    uint64_t v2 = 0;
    goto LABEL_20;
  }
  if ((*((unsigned char *)this + 28) & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((*((unsigned char *)this + 28) & 2) == 0) {
      goto LABEL_20;
    }
    goto LABEL_13;
  }
  uint64_t v3 = *((void *)this + 1);
  if (!v3)
  {
    CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::protobuf_AddDesc_CoreNavigationCLPRayTracingTilesAvailability_2eproto(this);
    uint64_t v3 = *(void *)(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::BoundingBox::default_instance_ + 8);
  }
  int v4 = *(unsigned __int8 *)(v3 + 28);
  if (*(unsigned char *)(v3 + 28))
  {
    if ((v4 & 2) != 0) {
      int v4 = ((v4 << 31 >> 31) & 9) + 9;
    }
    else {
      int v4 = (v4 << 31 >> 31) & 9;
    }
  }
  *(_DWORD *)(v3 + 24) = v4;
  uint64_t v2 = (v4 + 2);
  if ((*((_DWORD *)this + 7) & 2) != 0)
  {
LABEL_13:
    uint64_t v5 = *((void *)this + 2);
    if (!v5)
    {
      CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::protobuf_AddDesc_CoreNavigationCLPRayTracingTilesAvailability_2eproto(this);
      uint64_t v5 = *(void *)(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::BoundingBox::default_instance_ + 16);
    }
    int v6 = *(unsigned __int8 *)(v5 + 28);
    if (*(unsigned char *)(v5 + 28))
    {
      if ((v6 & 2) != 0) {
        int v6 = ((v6 << 31 >> 31) & 9) + 9;
      }
      else {
        int v6 = (v6 << 31 >> 31) & 9;
      }
    }
    *(_DWORD *)(v5 + 24) = v6;
    uint64_t v2 = (v2 + v6 + 2);
  }
LABEL_20:
  *((_DWORD *)this + 6) = v2;
  return v2;
}

double CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::BoundingBox::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::BoundingBox *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::BoundingBox::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::BoundingBox::CopyFrom(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::BoundingBox *this, const CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::BoundingBox *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::BoundingBox *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::BoundingBox::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::BoundingBox::IsInitialized(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::BoundingBox *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::BoundingBox::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::BoundingBox *a2)
{
  if (a2 != (CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::BoundingBox *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    uint64_t v3 = *(void *)(this + 16);
    *(void *)(this + 16) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v3;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::BoundingBox::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.RayTracingTilesAvailability.BoundingBox");
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RegionSpecificAvailableTiles::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(_DWORD *)(this + 36) = 0;
  *(_DWORD *)(this + 40) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RegionSpecificAvailableTiles *CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RegionSpecificAvailableTiles::RegionSpecificAvailableTiles(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RegionSpecificAvailableTiles *this, const CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RegionSpecificAvailableTiles *a2)
{
  *((_DWORD *)this + 9) = 0;
  *((_DWORD *)this + 10) = 0;
  *(void *)this = &unk_1EDD10A60;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RegionSpecificAvailableTiles::MergeFrom(this, a2);
  return this;
}

void sub_18DF0ABD8(_Unwind_Exception *a1)
{
  uint64_t v3 = *((void *)v1 + 2);
  if (v3) {
    MEMORY[0x192FA6220](v3, 0x1000C8000313F17);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RegionSpecificAvailableTiles::MergeFrom(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RegionSpecificAvailableTiles *this, const CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RegionSpecificAvailableTiles *a2)
{
  uint64_t v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  int v5 = *((_DWORD *)a2 + 6);
  if (v5)
  {
    sub_18DF0C278((uint64_t)v3 + 16, *((_DWORD *)v3 + 6) + v5);
    this = (CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RegionSpecificAvailableTiles *)memcpy((void *)(*((void *)v3 + 2) + 8 * *((int *)v3 + 6)), *((const void **)a2 + 2), 8 * *((int *)a2 + 6));
    *((_DWORD *)v3 + 6) += *((_DWORD *)a2 + 6);
  }
  if (*((unsigned char *)a2 + 40))
  {
    *((_DWORD *)v3 + 10) |= 1u;
    int v6 = (CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::BoundingBox *)*((void *)v3 + 1);
    if (!v6) {
      operator new();
    }
    uint64_t v7 = (const CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::BoundingBox *)*((void *)a2 + 1);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::protobuf_AddDesc_CoreNavigationCLPRayTracingTilesAvailability_2eproto(this);
      uint64_t v7 = *(const CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::BoundingBox **)(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RegionSpecificAvailableTiles::default_instance_
                                                                                             + 8);
    }
    return CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::BoundingBox::MergeFrom(v6, v7);
  }
  return result;
}

void sub_18DF0AD40(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RegionSpecificAvailableTiles::~RegionSpecificAvailableTiles(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RegionSpecificAvailableTiles *this)
{
  *(void *)this = &unk_1EDD10A60;
  CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RegionSpecificAvailableTiles::SharedDtor(this);
  uint64_t v2 = *((void *)this + 2);
  if (v2) {
    MEMORY[0x192FA6220](v2, 0x1000C8000313F17);
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RegionSpecificAvailableTiles::~RegionSpecificAvailableTiles(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RegionSpecificAvailableTiles::SharedDtor(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RegionSpecificAvailableTiles *this)
{
  CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::protobuf_AddDesc_CoreNavigationCLPRayTracingTilesAvailability_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RegionSpecificAvailableTiles *)CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RegionSpecificAvailableTiles::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2)
    {
      uint64_t v3 = *(void (**)(void))(*(void *)v2 + 8);
      v3();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RegionSpecificAvailableTiles::default_instance(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RegionSpecificAvailableTiles *this)
{
  return CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RegionSpecificAvailableTiles::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RegionSpecificAvailableTiles::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 36) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RegionSpecificAvailableTiles::New(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RegionSpecificAvailableTiles *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RegionSpecificAvailableTiles::Clear(uint64_t this)
{
  uint64_t v1 = this;
  if (*(unsigned char *)(this + 40))
  {
    this = *(void *)(this + 8);
    if (this) {
      this = CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::BoundingBox::Clear(this);
    }
  }
  *(_DWORD *)(v1 + 24) = 0;
  *(_DWORD *)(v1 + 40) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RegionSpecificAvailableTiles::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RegionSpecificAvailableTiles *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (char *)this + 16;
  while (1)
  {
    while (1)
    {
      int v5 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v5;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v5 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v7 = TagFallback & 7;
      if (v7 != 2) {
        goto LABEL_19;
      }
      *((_DWORD *)this + 10) |= 1u;
      int v10 = (CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::BoundingBox *)*((void *)this + 1);
      if (!v10) {
        operator new();
      }
      v23[0] = 0;
      int v11 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v11 >= *((void *)a2 + 2) || *v11 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, (unsigned int *)v23))return 0; {
      }
        }
      else
      {
        v23[0] = *v11;
        *((void *)a2 + 1) = v11 + 1;
      }
      int v13 = *((_DWORD *)a2 + 14);
      int v14 = *((_DWORD *)a2 + 15);
      *((_DWORD *)a2 + 14) = v13 + 1;
      if (v13 >= v14) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
      if (!CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::BoundingBox::MergePartialFromCodedStream(v10, a2)|| !*((unsigned char *)a2 + 36))
      {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
      int v15 = *((_DWORD *)a2 + 14);
      BOOL v16 = __OFSUB__(v15, 1);
      int v17 = v15 - 1;
      if (v17 < 0 == v16) {
        *((_DWORD *)a2 + 14) = v17;
      }
      int v18 = (unsigned char *)*((void *)a2 + 1);
      unint64_t v9 = *((void *)a2 + 2);
      if ((unint64_t)v18 < v9 && *v18 == 18)
      {
        uint64_t v8 = v18 + 1;
        *((void *)a2 + 1) = v8;
LABEL_33:
        unsigned int v24 = 0;
        if ((unint64_t)v8 >= v9 || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v24))return 0; {
        }
          }
        else
        {
          unsigned int v24 = *v8;
          *((void *)a2 + 1) = v8 + 1;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(a2) >= 1)
        {
          *(void *)unsigned int v23 = 0;
          int v19 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v19 >= *((void *)a2 + 2) || *v19 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)v23))return 0; {
          }
            }
          else
          {
            *(void *)unsigned int v23 = *v19;
            *((void *)a2 + 1) = v19 + 1;
          }
          int v20 = *((_DWORD *)this + 6);
          if (v20 == *((_DWORD *)this + 7))
          {
            sub_18DF0C278((uint64_t)v4, v20 + 1);
            int v20 = *((_DWORD *)this + 6);
          }
          uint64_t v21 = *(void *)v23;
          uint64_t v22 = *((void *)this + 2);
          *((_DWORD *)this + 6) = v20 + 1;
          *(void *)(v22 + 8 * v20) = v21;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
LABEL_47:
        if (*((void *)a2 + 1) == *((void *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v7 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        uint64_t result = sub_18DF0B244(1, 0x12u, a2, (uint64_t)v4);
        if (!result) {
          return result;
        }
        goto LABEL_47;
      }
      if (v7 == 2)
      {
        uint64_t v8 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        goto LABEL_33;
      }
    }
    else
    {
      int v7 = TagFallback & 7;
    }
LABEL_19:
    if (v7 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t sub_18DF0B244(int a1, unsigned int a2, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t a4)
{
  unint64_t v21 = 0;
  int v7 = (char *)*((void *)this + 1);
  if ((unint64_t)v7 >= *((void *)this + 2) || *v7 < 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, &v21);
    if (!result) {
      return result;
    }
  }
  else
  {
    unint64_t v21 = *v7;
    *((void *)this + 1) = v7 + 1;
  }
  int v9 = *(_DWORD *)(a4 + 8);
  int v10 = *(_DWORD *)(a4 + 12);
  if (v9 == v10)
  {
    sub_18DF0C278(a4, v9 + 1);
    int v9 = *(_DWORD *)(a4 + 8);
    int v10 = *(_DWORD *)(a4 + 12);
  }
  unint64_t v11 = v21;
  uint64_t v12 = *(void *)a4;
  int v13 = v9 + 1;
  *(_DWORD *)(a4 + 8) = v9 + 1;
  *(void *)(v12 + 8 * v9) = v11;
  if (v10 - (v9 + 1) >= 1)
  {
    int v14 = v10 - v9;
    do
    {
      if (a2 > 0x7F)
      {
        if (a2 >> 14) {
          return 1;
        }
        int v18 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        if ((int)v15 - (int)v18 < 2 || (a2 & 0x7F | 0x80) != *v18 || v18[1] != (a2 >> 7)) {
          return 1;
        }
        int v17 = (char *)(v18 + 2);
      }
      else
      {
        BOOL v16 = (unsigned __int8 *)*((void *)this + 1);
        unint64_t v15 = *((void *)this + 2);
        if ((unint64_t)v16 >= v15 || *v16 != a2) {
          return 1;
        }
        int v17 = (char *)(v16 + 1);
      }
      *((void *)this + 1) = v17;
      if ((unint64_t)v17 >= v15 || *v17 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(this, &v21);
        if (!result) {
          return result;
        }
        int v13 = *(_DWORD *)(a4 + 8);
      }
      else
      {
        unint64_t v21 = *v17;
        *((void *)this + 1) = v17 + 1;
      }
      if (v13 >= *(_DWORD *)(a4 + 12))
      {
        wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
        wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
        wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
        wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v22);
        int v13 = *(_DWORD *)(a4 + 8);
      }
      unint64_t v19 = v21;
      uint64_t v20 = *(void *)a4;
      *(_DWORD *)(a4 + 8) = v13 + 1;
      *(void *)(v20 + 8 * v13) = v19;
      --v14;
      ++v13;
    }
    while (v14 > 1);
  }
  return 1;
}

void sub_18DF0B428(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RegionSpecificAvailableTiles::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(unsigned char *)(this + 40))
  {
    uint64_t v6 = *(void *)(this + 8);
    if (!v6)
    {
      CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::protobuf_AddDesc_CoreNavigationCLPRayTracingTilesAvailability_2eproto((CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability *)this);
      uint64_t v6 = *(void *)(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RegionSpecificAvailableTiles::default_instance_
                     + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
  }
  if (*(int *)(v5 + 24) >= 1)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
    this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
    if (*(int *)(v5 + 24) >= 1)
    {
      uint64_t v7 = 0;
      do
      {
        this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64(a2);
        ++v7;
      }
      while (v7 < *(int *)(v5 + 24));
    }
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RegionSpecificAvailableTiles::ByteSize(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RegionSpecificAvailableTiles *this)
{
  if (*((unsigned char *)this + 40))
  {
    uint64_t v3 = (CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::BoundingBox *)*((void *)this + 1);
    if (!v3)
    {
      CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::protobuf_AddDesc_CoreNavigationCLPRayTracingTilesAvailability_2eproto(0);
      uint64_t v3 = *(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::BoundingBox **)(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RegionSpecificAvailableTiles::default_instance_
                                                                                       + 8);
    }
    int v2 = CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::BoundingBox::ByteSize(v3) + 2;
  }
  else
  {
    int v2 = 0;
  }
  if (*((int *)this + 6) < 1)
  {
    LODWORD(v5) = 0;
  }
  else
  {
    uint64_t v4 = 0;
    LODWORD(v5) = 0;
    do
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(*((void *)this + 2) + 8 * v4++))
                                                                           + v5);
    while (v4 < *((int *)this + 6));
    if ((int)v5 > 0)
    {
      if (v5 >= 0x80) {
        int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
      }
      else {
        int v6 = 2;
      }
      v2 += v6;
    }
  }
  uint64_t result = (v2 + v5);
  *((_DWORD *)this + 8) = v5;
  *((_DWORD *)this + 9) = result;
  return result;
}

double CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RegionSpecificAvailableTiles::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RegionSpecificAvailableTiles *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RegionSpecificAvailableTiles::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RegionSpecificAvailableTiles::CopyFrom(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RegionSpecificAvailableTiles *this, const CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RegionSpecificAvailableTiles *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RegionSpecificAvailableTiles *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RegionSpecificAvailableTiles::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RegionSpecificAvailableTiles::IsInitialized(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RegionSpecificAvailableTiles *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RegionSpecificAvailableTiles::Swap(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RegionSpecificAvailableTiles *this, CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RegionSpecificAvailableTiles *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    uint64_t v3 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    double result = *((double *)a2 + 3);
    *((void *)a2 + 2) = v3;
    uint64_t v5 = *((void *)this + 3);
    *((double *)this + 3) = result;
    *((void *)a2 + 3) = v5;
    LODWORD(v3) = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v3;
    LODWORD(v3) = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v3;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RegionSpecificAvailableTiles::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.RayTracingTilesAvailability.RegionSpecificAvailableTiles");
}

void *CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData::SharedCtor(void *this)
{
  this[6] = 0;
  this[1] = 0;
  this[2] = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData *CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData::RayTracingTilesAvailabilityData(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData *this, const CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData *a2)
{
  *(void *)this = &unk_1EDD10AD8;
  *((void *)this + 6) = 0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 0;
  CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData::MergeFrom(this, a2);
  return this;
}

void sub_18DF0B7CC(_Unwind_Exception *a1)
{
  sub_18DF0C324(v1 + 3);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData::~RayTracingTilesAvailabilityData(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData *this)
{
  *(void *)this = &unk_1EDD10AD8;
  CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData::SharedDtor(this);
  sub_18DF0C324((uint64_t *)this + 3);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData::~RayTracingTilesAvailabilityData(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData::SharedDtor(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData *this)
{
  CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::protobuf_AddDesc_CoreNavigationCLPRayTracingTilesAvailability_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData *)CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 2);
    if (v3)
    {
      uint64_t v4 = *(void (**)(void))(*(void *)v3 + 8);
      v4();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData::default_instance(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData *this)
{
  return CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 48) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData::New(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4 = (CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData *)((char *)this + 24);
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v5 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
          {
            unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
            *((_DWORD *)a2 + 8) = TagFallback;
            if (!TagFallback) {
              return 1;
            }
          }
          else
          {
            unint64_t TagFallback = *v5;
            *((_DWORD *)a2 + 8) = TagFallback;
            *((void *)a2 + 1) = v5 + 1;
            if (!TagFallback) {
              return 1;
            }
          }
          unsigned int v7 = TagFallback >> 3;
          if (TagFallback >> 3 != 1) {
            break;
          }
          int v8 = TagFallback & 7;
          if (v8 != 2) {
            goto LABEL_21;
          }
          *((_DWORD *)this + 13) |= 1u;
          int v9 = (CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileCommonHeader *)*((void *)this + 1);
          if (!v9) {
            operator new();
          }
          unsigned int v35 = 0;
          int v10 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v35))return 0; {
          }
            }
          else
          {
            unsigned int v35 = *v10;
            *((void *)a2 + 1) = v10 + 1;
          }
          int v11 = *((_DWORD *)a2 + 14);
          int v12 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v11 + 1;
          if (v11 >= v12) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileCommonHeader::MergePartialFromCodedStream(v9, a2)|| !*((unsigned char *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          int v13 = *((_DWORD *)a2 + 14);
          BOOL v14 = __OFSUB__(v13, 1);
          int v15 = v13 - 1;
          if (v15 < 0 == v14) {
            *((_DWORD *)a2 + 14) = v15;
          }
          BOOL v16 = (unsigned char *)*((void *)a2 + 1);
          if ((unint64_t)v16 < *((void *)a2 + 2) && *v16 == 18)
          {
            *((void *)a2 + 1) = v16 + 1;
            goto LABEL_33;
          }
        }
        if (v7 != 2) {
          break;
        }
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_21;
        }
LABEL_33:
        *((_DWORD *)this + 13) |= 2u;
        int v17 = (CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityHeader *)*((void *)this + 2);
        if (!v17) {
          operator new();
        }
        unsigned int v36 = 0;
        int v18 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v18 >= *((void *)a2 + 2) || *v18 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v36))return 0; {
        }
          }
        else
        {
          unsigned int v36 = *v18;
          *((void *)a2 + 1) = v18 + 1;
        }
        int v19 = *((_DWORD *)a2 + 14);
        int v20 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v19 + 1;
        if (v19 >= v20) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityHeader::MergePartialFromCodedStream(v17, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v21 = *((_DWORD *)a2 + 14);
        BOOL v14 = __OFSUB__(v21, 1);
        int v22 = v21 - 1;
        if (v22 < 0 == v14) {
          *((_DWORD *)a2 + 14) = v22;
        }
        unsigned int v23 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v23 < *((void *)a2 + 2) && *v23 == 26) {
          goto LABEL_46;
        }
      }
      if (v7 != 3) {
        break;
      }
      int v8 = TagFallback & 7;
      if (v8 != 2) {
        goto LABEL_21;
      }
      while (1)
      {
        int v24 = *((_DWORD *)this + 9);
        uint64_t v25 = *((int *)this + 8);
        if ((int)v25 >= v24)
        {
          if (v24 == *((_DWORD *)this + 10))
          {
            wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
            int v24 = *((_DWORD *)this + 9);
          }
          *((_DWORD *)this + 9) = v24 + 1;
          operator new();
        }
        uint64_t v26 = *((void *)this + 3);
        *((_DWORD *)this + 8) = v25 + 1;
        BOOL v27 = *(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RegionSpecificAvailableTiles **)(v26 + 8 * v25);
        unsigned int v37 = 0;
        int v28 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v28 >= *((void *)a2 + 2) || *v28 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v37))return 0; {
        }
          }
        else
        {
          unsigned int v37 = *v28;
          *((void *)a2 + 1) = v28 + 1;
        }
        int v29 = *((_DWORD *)a2 + 14);
        int v30 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v29 + 1;
        if (v29 >= v30) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RegionSpecificAvailableTiles::MergePartialFromCodedStream(v27, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v31 = *((_DWORD *)a2 + 14);
        BOOL v14 = __OFSUB__(v31, 1);
        int v32 = v31 - 1;
        if (v32 < 0 == v14) {
          *((_DWORD *)a2 + 14) = v32;
        }
        unsigned int v23 = (unsigned char *)*((void *)a2 + 1);
        double v33 = (unsigned char *)*((void *)a2 + 2);
        if (v23 >= v33 || *v23 != 26) {
          break;
        }
LABEL_46:
        *((void *)a2 + 1) = v23 + 1;
      }
      if (v23 == v33 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      }
    }
    int v8 = TagFallback & 7;
LABEL_21:
    if (v8 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 52);
  if (v6)
  {
    uint64_t v7 = *(void *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::protobuf_AddDesc_CoreNavigationCLPRayTracingTilesAvailability_2eproto((CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability *)this);
      uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData::default_instance_
                     + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 52);
  }
  if ((v6 & 2) != 0)
  {
    uint64_t v8 = *(void *)(v5 + 16);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::protobuf_AddDesc_CoreNavigationCLPRayTracingTilesAvailability_2eproto((CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability *)this);
      uint64_t v8 = *(void *)(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData::default_instance_
                     + 16);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  }
  if (*(int *)(v5 + 32) >= 1)
  {
    uint64_t v9 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(void *)(*(void *)(v5 + 24) + 8 * v9++), a2, a4);
    while (v9 < *(int *)(v5 + 32));
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData::ByteSize(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData *this)
{
  if (!*((unsigned char *)this + 52))
  {
    int v2 = 0;
    goto LABEL_18;
  }
  if ((*((unsigned char *)this + 52) & 1) == 0)
  {
    int v2 = 0;
    if ((*((unsigned char *)this + 52) & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  uint64_t v3 = (CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileCommonHeader *)*((void *)this + 1);
  if (!v3)
  {
    CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::protobuf_AddDesc_CoreNavigationCLPRayTracingTilesAvailability_2eproto(0);
    uint64_t v3 = *(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileCommonHeader **)(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData::default_instance_ + 8);
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::AvailabilityFileCommonHeader::ByteSize(v3);
  int v5 = (int)v4;
  if (v4 >= 0x80) {
    int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
  }
  else {
    int v6 = 1;
  }
  int v2 = v5 + v6 + 1;
  if ((*((_DWORD *)this + 13) & 2) != 0)
  {
LABEL_12:
    uint64_t v7 = (CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityHeader *)*((void *)this + 2);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::protobuf_AddDesc_CoreNavigationCLPRayTracingTilesAvailability_2eproto(0);
      uint64_t v7 = *(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityHeader **)(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData::default_instance_ + 16);
    }
    uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityHeader::ByteSize(v7);
    int v9 = (int)v8;
    if (v8 >= 0x80) {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
    }
    else {
      int v10 = 1;
    }
    v2 += v9 + v10 + 1;
  }
LABEL_18:
  int v11 = *((_DWORD *)this + 8);
  uint64_t v12 = (v11 + v2);
  if (v11 >= 1)
  {
    uint64_t v13 = 0;
    do
    {
      BOOL v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RegionSpecificAvailableTiles::ByteSize(*(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RegionSpecificAvailableTiles **)(*((void *)this + 3) + 8 * v13));
      int v15 = (int)v14;
      if (v14 >= 0x80) {
        int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14);
      }
      else {
        int v16 = 1;
      }
      uint64_t v12 = (v15 + v12 + v16);
      ++v13;
    }
    while (v13 < *((int *)this + 8));
  }
  *((_DWORD *)this + 12) = v12;
  return v12;
}

void CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData::CopyFrom(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData *this, const CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData::IsInitialized(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData *this)
{
  return 1;
}

CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData *CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData::Swap(CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData *this, CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData *a2)
{
  if (a2 != this)
  {
    uint64_t v3 = this;
    uint64_t v4 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v4;
    uint64_t v5 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v5;
    this = (CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    int v6 = *((_DWORD *)v3 + 13);
    *((_DWORD *)v3 + 13) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v6;
    int v7 = *((_DWORD *)v3 + 12);
    *((_DWORD *)v3 + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v7;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::RayTracingTilesAvailability::RayTracingTilesAvailabilityData::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.RayTracingTilesAvailability.RayTracingTilesAvailabilityData");
}

uint64_t sub_18DF0C1C8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_18DF0C1D0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_18DF0C1D8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_18DF0C1E0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

uint64_t sub_18DF0C1E8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_18DF0C1F0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_18DF0C1F8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_18DF0C200(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_18DF0C208(uint64_t result)
{
  uint64_t v1 = result;
  if (*(int *)(result + 8) >= 1)
  {
    uint64_t v2 = 0;
    do
    {
      uint64_t result = (*(uint64_t (**)(void))(**(void **)(*(void *)v1 + 8 * v2) + 32))(*(void *)(*(void *)v1 + 8 * v2));
      ++v2;
    }
    while (v2 < *(int *)(v1 + 8));
  }
  *(_DWORD *)(v1 + 8) = 0;
  return result;
}

uint64_t sub_18DF0C278(uint64_t result, int a2)
{
  int v2 = *(_DWORD *)(result + 12);
  if (v2 < a2)
  {
    int v3 = 2 * v2;
    if (v3 <= a2) {
      int v3 = a2;
    }
    if (v3 <= 4) {
      int v3 = 4;
    }
    *(_DWORD *)(result + 12) = v3;
    operator new[]();
  }
  return result;
}

uint64_t sub_18DF0C324(uint64_t *a1)
{
  int v2 = *((_DWORD *)a1 + 3);
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i < v2; ++i)
    {
      uint64_t v4 = *(void *)(*a1 + 8 * i);
      if (v4)
      {
        (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
        int v2 = *((_DWORD *)a1 + 3);
      }
    }
  }
  uint64_t result = *a1;
  if (*a1)
  {
    JUMPOUT(0x192FA6220);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::protobuf_ShutdownFile_CoreNavigationCLPRavenOutput_2eproto(CoreNavigation::CLP::LogEntry::Raven *this)
{
  if (CoreNavigation::CLP::LogEntry::Raven::RavenOutput::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::Raven::RavenOutput::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::Raven::RavenOutput::default_instance_);
  if (CoreNavigation::CLP::LogEntry::Raven::TimeStruct::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::Raven::TimeStruct::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::Raven::TimeStruct::default_instance_);
  if (CoreNavigation::CLP::LogEntry::Raven::TimeStamp::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::Raven::TimeStamp::default_instance_ + 8))(CoreNavigation::CLP::LogEntry::Raven::TimeStamp::default_instance_);
  }
  if (CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::default_instance_);
  if (CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth::default_instance_);
  if (CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth::default_instance_);
  if (CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity::default_instance_);
  if (CoreNavigation::CLP::LogEntry::Raven::NrParameters::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::Raven::NrParameters::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::Raven::NrParameters::default_instance_);
  if (CoreNavigation::CLP::LogEntry::Raven::NrBiases::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::Raven::NrBiases::default_instance_ + 8))(CoreNavigation::CLP::LogEntry::Raven::NrBiases::default_instance_);
  }
  if (CoreNavigation::CLP::LogEntry::Raven::EstimatorState::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::Raven::EstimatorState::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::Raven::EstimatorState::default_instance_);
  if (CoreNavigation::CLP::LogEntry::Raven::UserPosition::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::Raven::UserPosition::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::Raven::UserPosition::default_instance_);
  if (CoreNavigation::CLP::LogEntry::Raven::UserVelocity::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::Raven::UserVelocity::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::Raven::UserVelocity::default_instance_);
  if (CoreNavigation::CLP::LogEntry::Raven::DevicePosition::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::Raven::DevicePosition::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::Raven::DevicePosition::default_instance_);
  if (CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity::default_instance_);
  if (CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude::default_instance_);
  if (CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias::default_instance_);
  if (CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias::default_instance_);
  if (CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor::default_instance_);
  uint64_t result = CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy::default_instance_;
  if (CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy::default_instance_)
  {
    int v2 = *(uint64_t (**)(void))(*(void *)CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy::default_instance_
                             + 8);
    return v2();
  }
  return result;
}

void CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto_impl(CoreNavigation::CLP::LogEntry::Raven *this, uint64_t a2, uint64_t a3, const char *a4)
{
}

double CoreNavigation::CLP::LogEntry::Raven::RavenOutput::RavenOutput(CoreNavigation::CLP::LogEntry::Raven::RavenOutput *this)
{
  *(void *)this = &unk_1EDD10CB8;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((void *)this + 7) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD10CB8;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((void *)this + 7) = 0;
  return result;
}

void *CoreNavigation::CLP::LogEntry::Raven::TimeStruct::TimeStruct(void *this)
{
  *this = &unk_1EDD10C40;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

{
  *this = &unk_1EDD10C40;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::Raven::TimeStamp::TimeStamp(CoreNavigation::CLP::LogEntry::Raven::TimeStamp *this)
{
  *(void *)this = &unk_1EDD11618;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD11618;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

double CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::MeasurementTypeCount(CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount *this)
{
  *(void *)this = &unk_1EDD112D0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD112D0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 0;
  return result;
}

double CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth::NrEstimatorHealth(CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth *this)
{
  *(void *)this = &unk_1EDD11168;
  *((void *)this + 11) = 0;
  *((void *)this + 12) = 0;
  *((_DWORD *)this + 26) = 0;
  *((void *)this + 14) = 0;
  *((void *)this + 15) = 0;
  *((_DWORD *)this + 32) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 152) = 0u;
  *((_DWORD *)this + 42) = 0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 68) = 0u;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD11168;
  *((void *)this + 11) = 0;
  *((void *)this + 12) = 0;
  *((_DWORD *)this + 26) = 0;
  *((void *)this + 14) = 0;
  *((void *)this + 15) = 0;
  *((_DWORD *)this + 32) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 152) = 0u;
  *((_DWORD *)this + 42) = 0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 68) = 0u;
  return result;
}

double CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth::EstimatorHealth(CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *this)
{
  *(void *)this = &unk_1EDD11078;
  *((void *)this + 17) = 0;
  *((void *)this + 18) = 0;
  *((_DWORD *)this + 38) = 0;
  *((void *)this + 27) = 0;
  *((void *)this + 28) = 0;
  *((_DWORD *)this + 58) = 0;
  *((void *)this + 30) = 0;
  *((void *)this + 31) = 0;
  *((_DWORD *)this + 64) = 0;
  *((void *)this + 33) = 0;
  *((void *)this + 34) = 0;
  *((_DWORD *)this + 70) = 0;
  *((void *)this + 36) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 116) = 0u;
  *((_DWORD *)this + 52) = 0;
  *((_OWORD *)this + 11) = 0u;
  *((_OWORD *)this + 12) = 0u;
  *((_OWORD *)this + 10) = 0u;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD11078;
  *((void *)this + 17) = 0;
  *((void *)this + 18) = 0;
  *((_DWORD *)this + 38) = 0;
  *((void *)this + 27) = 0;
  *((void *)this + 28) = 0;
  *((_DWORD *)this + 58) = 0;
  *((void *)this + 30) = 0;
  *((void *)this + 31) = 0;
  *((_DWORD *)this + 64) = 0;
  *((void *)this + 33) = 0;
  *((void *)this + 34) = 0;
  *((_DWORD *)this + 70) = 0;
  *((void *)this + 36) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 116) = 0u;
  *((_DWORD *)this + 52) = 0;
  *((_OWORD *)this + 11) = 0u;
  *((_OWORD *)this + 12) = 0u;
  *((_OWORD *)this + 10) = 0u;
  return result;
}

double CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity::EstimatorActivity(CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity *this)
{
  *(void *)this = &unk_1EDD110F0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 152) = 0u;
  *(_OWORD *)((char *)this + 168) = 0u;
  *(_OWORD *)((char *)this + 184) = 0u;
  *(_OWORD *)((char *)this + 200) = 0u;
  *(_OWORD *)((char *)this + 216) = 0u;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD110F0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 152) = 0u;
  *(_OWORD *)((char *)this + 168) = 0u;
  *(_OWORD *)((char *)this + 184) = 0u;
  *(_OWORD *)((char *)this + 200) = 0u;
  *(_OWORD *)((char *)this + 216) = 0u;
  return result;
}

double CoreNavigation::CLP::LogEntry::Raven::NrParameters::NrParameters(CoreNavigation::CLP::LogEntry::Raven::NrParameters *this)
{
  *(void *)this = &unk_1EDD10D30;
  *((_DWORD *)this + 39) = 0;
  *((_DWORD *)this + 40) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 136) = 0u;
  *((_WORD *)this + 76) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD10D30;
  *((_DWORD *)this + 39) = 0;
  *((_DWORD *)this + 40) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 136) = 0u;
  *((_WORD *)this + 76) = 0;
  return result;
}

double CoreNavigation::CLP::LogEntry::Raven::NrBiases::NrBiases(CoreNavigation::CLP::LogEntry::Raven::NrBiases *this)
{
  *(void *)this = &unk_1EDD115A0;
  *((_DWORD *)this + 23) = 0;
  *((_DWORD *)this + 24) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((_WORD *)this + 44) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD115A0;
  *((_DWORD *)this + 23) = 0;
  *((_DWORD *)this + 24) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((_WORD *)this + 44) = 0;
  return result;
}

double CoreNavigation::CLP::LogEntry::Raven::EstimatorState::EstimatorState(CoreNavigation::CLP::LogEntry::Raven::EstimatorState *this)
{
  *(void *)this = &unk_1EDD11000;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((void *)this + 11) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD11000;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((void *)this + 11) = 0;
  return result;
}

double CoreNavigation::CLP::LogEntry::Raven::UserPosition::UserPosition(CoreNavigation::CLP::LogEntry::Raven::UserPosition *this)
{
  *(void *)this = &unk_1EDD10DA8;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((void *)this + 11) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD10DA8;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((void *)this + 11) = 0;
  return result;
}

double CoreNavigation::CLP::LogEntry::Raven::UserVelocity::UserVelocity(CoreNavigation::CLP::LogEntry::Raven::UserVelocity *this)
{
  *(void *)this = &unk_1EDD10E20;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD10E20;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  return result;
}

double CoreNavigation::CLP::LogEntry::Raven::DevicePosition::DevicePosition(CoreNavigation::CLP::LogEntry::Raven::DevicePosition *this)
{
  *(void *)this = &unk_1EDD10F10;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((void *)this + 11) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD10F10;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((void *)this + 11) = 0;
  return result;
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity::DeviceVelocity(CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity *this)
{
  *(void *)this = &unk_1EDD10F88;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((void *)this + 11) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD10F88;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((void *)this + 11) = 0;
  return result;
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude::DeviceAttitude(CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude *this)
{
  *(void *)this = &unk_1EDD10E98;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD10E98;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  return result;
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias::DeviceRateGyroBias(CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias *this)
{
  *(void *)this = &unk_1EDD11258;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((void *)this + 11) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD11258;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((void *)this + 11) = 0;
  return result;
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias::DeviceAccelerometerBias(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias *this)
{
  *(void *)this = &unk_1EDD11348;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((void *)this + 11) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD11348;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((void *)this + 11) = 0;
  return result;
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor::DeviceAccelerometerScaleFactor(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor *this)
{
  *(void *)this = &unk_1EDD11438;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((void *)this + 11) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD11438;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((void *)this + 11) = 0;
  return result;
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy::DeviceReceiverClockDiscrepancy(CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy *this)
{
  *(void *)this = &unk_1EDD114B0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((void *)this + 7) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD114B0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((void *)this + 7) = 0;
  return result;
}

void *CoreNavigation::CLP::LogEntry::Raven::RavenOutput::InitAsDefaultInstance(void *this)
{
  uint64_t v1 = CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity::default_instance_;
  this[1] = CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth::default_instance_;
  this[2] = v1;
  uint64_t v2 = CoreNavigation::CLP::LogEntry::Raven::NrParameters::default_instance_;
  this[3] = CoreNavigation::CLP::LogEntry::Raven::EstimatorState::default_instance_;
  this[4] = v2;
  uint64_t v3 = CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth::default_instance_;
  this[5] = CoreNavigation::CLP::LogEntry::Raven::NrBiases::default_instance_;
  this[6] = v3;
  return this;
}

void *CoreNavigation::CLP::LogEntry::Raven::TimeStamp::InitAsDefaultInstance(void *this)
{
  uint64_t v1 = CoreNavigation::CLP::LogEntry::Raven::TimeStruct::default_instance_;
  this[1] = CoreNavigation::CLP::LogEntry::Raven::TimeStruct::default_instance_;
  this[2] = v1;
  this[3] = v1;
  this[4] = v1;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth::InitAsDefaultInstance(uint64_t this)
{
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::Raven::TimeStamp::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth::InitAsDefaultInstance(uint64_t this)
{
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::Raven::TimeStamp::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity::InitAsDefaultInstance(uint64_t this)
{
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::Raven::TimeStamp::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::NrParameters::InitAsDefaultInstance(uint64_t this)
{
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::Raven::TimeStamp::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::NrBiases::InitAsDefaultInstance(uint64_t this)
{
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::Raven::TimeStamp::default_instance_;
  return this;
}

void *CoreNavigation::CLP::LogEntry::Raven::EstimatorState::InitAsDefaultInstance(void *this)
{
  uint64_t v1 = CoreNavigation::CLP::LogEntry::Raven::UserPosition::default_instance_;
  this[1] = CoreNavigation::CLP::LogEntry::Raven::TimeStamp::default_instance_;
  this[2] = v1;
  uint64_t v2 = CoreNavigation::CLP::LogEntry::Raven::DevicePosition::default_instance_;
  this[3] = CoreNavigation::CLP::LogEntry::Raven::UserVelocity::default_instance_;
  this[4] = v2;
  uint64_t v3 = CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude::default_instance_;
  this[5] = CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity::default_instance_;
  this[6] = v3;
  uint64_t v4 = CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias::default_instance_;
  this[7] = CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias::default_instance_;
  this[8] = v4;
  uint64_t v5 = CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy::default_instance_;
  this[9] = CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor::default_instance_;
  this[10] = v5;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::UserPosition::InitAsDefaultInstance(uint64_t this)
{
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::Raven::TimeStamp::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::UserVelocity::InitAsDefaultInstance(uint64_t this)
{
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::Raven::TimeStamp::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DevicePosition::InitAsDefaultInstance(uint64_t this)
{
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::Raven::TimeStamp::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity::InitAsDefaultInstance(uint64_t this)
{
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::Raven::TimeStamp::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude::InitAsDefaultInstance(uint64_t this)
{
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::Raven::TimeStamp::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias::InitAsDefaultInstance(uint64_t this)
{
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::Raven::TimeStamp::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias::InitAsDefaultInstance(uint64_t this)
{
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::Raven::TimeStamp::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor::InitAsDefaultInstance(uint64_t this)
{
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::Raven::TimeStamp::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy::InitAsDefaultInstance(uint64_t this)
{
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::Raven::TimeStamp::default_instance_;
  return this;
}

void CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(CoreNavigation::CLP::LogEntry::Raven *this)
{
  uint64_t v1 = CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto_once_;
  __dmb(0xBu);
  if (v1 != 2)
  {
    v2[0] = MEMORY[0x1E4FBA938] + 16;
    v2[1] = CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto_impl;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
}

void sub_18DF0D680(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::Raven::RavenOutput::SharedCtor(CoreNavigation::CLP::LogEntry::Raven::RavenOutput *this)
{
  *((void *)this + 7) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::Raven::RavenOutput *CoreNavigation::CLP::LogEntry::Raven::RavenOutput::RavenOutput(CoreNavigation::CLP::LogEntry::Raven::RavenOutput *this, const CoreNavigation::CLP::LogEntry::Raven::RavenOutput *a2)
{
  *(void *)this = &unk_1EDD10CB8;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((void *)this + 7) = 0;
  CoreNavigation::CLP::LogEntry::Raven::RavenOutput::MergeFrom(this, a2);
  return this;
}

void sub_18DF0D738(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Raven::RavenOutput::MergeFrom(CoreNavigation::CLP::LogEntry::Raven::RavenOutput *this, const CoreNavigation::CLP::LogEntry::Raven::RavenOutput *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v17);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 60);
  if (!(_BYTE)v4) {
    return;
  }
  if (*((unsigned char *)a2 + 60))
  {
    *((_DWORD *)this + 15) |= 1u;
    uint64_t v5 = (CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *)*((void *)this + 1);
    if (!v5) {
      operator new();
    }
    int v6 = (const CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *)*((void *)a2 + 1);
    if (!v6)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
      int v6 = *(const CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth **)(CoreNavigation::CLP::LogEntry::Raven::RavenOutput::default_instance_
                                                                           + 8);
    }
    CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth::MergeFrom(v5, v6);
    int v4 = *((_DWORD *)a2 + 15);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_21;
    }
  }
  else if ((*((unsigned char *)a2 + 60) & 2) == 0)
  {
    goto LABEL_6;
  }
  *((_DWORD *)this + 15) |= 2u;
  int v7 = (CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity *)*((void *)this + 2);
  if (!v7) {
    operator new();
  }
  uint64_t v8 = (const CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity *)*((void *)a2 + 2);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
    uint64_t v8 = *(const CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity **)(CoreNavigation::CLP::LogEntry::Raven::RavenOutput::default_instance_
                                                                           + 16);
  }
  CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity::MergeFrom(v7, v8);
  int v4 = *((_DWORD *)a2 + 15);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
LABEL_26:
    *((_DWORD *)this + 15) |= 8u;
    int v11 = (CoreNavigation::CLP::LogEntry::Raven::NrParameters *)*((void *)this + 4);
    if (!v11) {
      operator new();
    }
    uint64_t v12 = (const CoreNavigation::CLP::LogEntry::Raven::NrParameters *)*((void *)a2 + 4);
    if (!v12)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
      uint64_t v12 = *(const CoreNavigation::CLP::LogEntry::Raven::NrParameters **)(CoreNavigation::CLP::LogEntry::Raven::RavenOutput::default_instance_
                                                                         + 32);
    }
    CoreNavigation::CLP::LogEntry::Raven::NrParameters::MergeFrom(v11, v12);
    int v4 = *((_DWORD *)a2 + 15);
    if ((v4 & 0x10) == 0)
    {
LABEL_9:
      if ((v4 & 0x20) == 0) {
        return;
      }
      goto LABEL_36;
    }
    goto LABEL_31;
  }
LABEL_21:
  *((_DWORD *)this + 15) |= 4u;
  int v9 = (CoreNavigation::CLP::LogEntry::Raven::EstimatorState *)*((void *)this + 3);
  if (!v9) {
    operator new();
  }
  int v10 = (const CoreNavigation::CLP::LogEntry::Raven::EstimatorState *)*((void *)a2 + 3);
  if (!v10)
  {
    CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
    int v10 = *(const CoreNavigation::CLP::LogEntry::Raven::EstimatorState **)(CoreNavigation::CLP::LogEntry::Raven::RavenOutput::default_instance_
                                                                         + 24);
  }
  CoreNavigation::CLP::LogEntry::Raven::EstimatorState::MergeFrom(v9, v10);
  int v4 = *((_DWORD *)a2 + 15);
  if ((v4 & 8) != 0) {
    goto LABEL_26;
  }
LABEL_8:
  if ((v4 & 0x10) == 0) {
    goto LABEL_9;
  }
LABEL_31:
  *((_DWORD *)this + 15) |= 0x10u;
  uint64_t v13 = (CoreNavigation::CLP::LogEntry::Raven::NrBiases *)*((void *)this + 5);
  if (!v13) {
    operator new();
  }
  BOOL v14 = (const CoreNavigation::CLP::LogEntry::Raven::NrBiases *)*((void *)a2 + 5);
  if (!v14)
  {
    CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
    BOOL v14 = *(const CoreNavigation::CLP::LogEntry::Raven::NrBiases **)(CoreNavigation::CLP::LogEntry::Raven::RavenOutput::default_instance_
                                                                   + 40);
  }
  CoreNavigation::CLP::LogEntry::Raven::NrBiases::MergeFrom(v13, v14);
  if ((*((_DWORD *)a2 + 15) & 0x20) != 0)
  {
LABEL_36:
    *((_DWORD *)this + 15) |= 0x20u;
    int v15 = (CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth *)*((void *)this + 6);
    if (!v15) {
      operator new();
    }
    int v16 = (const CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth *)*((void *)a2 + 6);
    if (!v16)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
      int v16 = *(const CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth **)(CoreNavigation::CLP::LogEntry::Raven::RavenOutput::default_instance_
                                                                              + 48);
    }
    CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth::MergeFrom(v15, v16);
  }
}

void sub_18DF0DBE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Raven::RavenOutput::~RavenOutput(CoreNavigation::CLP::LogEntry::Raven::RavenOutput *this)
{
  *(void *)this = &unk_1EDD10CB8;
  CoreNavigation::CLP::LogEntry::Raven::RavenOutput::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::Raven::RavenOutput::~RavenOutput(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::Raven::RavenOutput::SharedDtor(CoreNavigation::CLP::LogEntry::Raven::RavenOutput *this)
{
  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::Raven::RavenOutput *)CoreNavigation::CLP::LogEntry::Raven::RavenOutput::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 2);
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = *((void *)this + 3);
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = *((void *)this + 4);
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
    uint64_t v6 = *((void *)this + 5);
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    uint64_t v7 = *((void *)this + 6);
    if (v7)
    {
      uint64_t v8 = *(void (**)(void))(*(void *)v7 + 8);
      v8();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::RavenOutput::default_instance(CoreNavigation::CLP::LogEntry::Raven::RavenOutput *this)
{
  return CoreNavigation::CLP::LogEntry::Raven::RavenOutput::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::RavenOutput::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 56) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::Raven::RavenOutput::New(CoreNavigation::CLP::LogEntry::Raven::RavenOutput *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::RavenOutput::Clear(uint64_t this)
{
  uint64_t v1 = this;
  LOBYTE(v2) = *(unsigned char *)(this + 60);
  if ((_BYTE)v2)
  {
    if (*(unsigned char *)(this + 60))
    {
      this = *(void *)(this + 8);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth::Clear((CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *)this);
        int v2 = *(_DWORD *)(v1 + 60);
      }
    }
    if ((v2 & 2) != 0)
    {
      this = *(void *)(v1 + 16);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity::Clear(this);
        int v2 = *(_DWORD *)(v1 + 60);
      }
    }
    if ((v2 & 4) != 0)
    {
      this = *(void *)(v1 + 24);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::Raven::EstimatorState::Clear(this);
        int v2 = *(_DWORD *)(v1 + 60);
      }
    }
    if ((v2 & 8) != 0)
    {
      this = *(void *)(v1 + 32);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::Raven::NrParameters::Clear(this);
        int v2 = *(_DWORD *)(v1 + 60);
      }
    }
    if ((v2 & 0x10) != 0)
    {
      this = *(void *)(v1 + 40);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::Raven::NrBiases::Clear(this);
        int v2 = *(_DWORD *)(v1 + 60);
      }
    }
    if ((v2 & 0x20) != 0)
    {
      this = *(void *)(v1 + 48);
      if (this) {
        this = CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth::Clear((CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth *)this);
      }
    }
  }
  *(_DWORD *)(v1 + 60) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth::Clear(CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *this)
{
  int v2 = *((_DWORD *)this + 73);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      uint64_t v3 = *((void *)this + 1);
      if (v3)
      {
        CoreNavigation::CLP::LogEntry::Raven::TimeStamp::Clear(v3);
        int v2 = *((_DWORD *)this + 73);
      }
    }
    *((_OWORD *)this + 2) = 0u;
    *((_OWORD *)this + 3) = 0u;
    *((_OWORD *)this + 1) = 0u;
  }
  if ((v2 & 0xFF00) != 0)
  {
    *((_OWORD *)this + 5) = 0u;
    *((_OWORD *)this + 6) = 0u;
    *((_OWORD *)this + 4) = 0u;
  }
  if ((v2 & 0xFF0000) != 0)
  {
    *((_OWORD *)this + 10) = 0u;
    *((_OWORD *)this + 11) = 0u;
  }
  sub_18DF0C208((uint64_t)this + 112);
  sub_18DF0C208((uint64_t)this + 136);
  sub_18DF0C208((uint64_t)this + 192);
  sub_18DF0C208((uint64_t)this + 216);
  sub_18DF0C208((uint64_t)this + 240);
  uint64_t result = sub_18DF0C208((uint64_t)this + 264);
  *((_DWORD *)this + 73) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity::Clear(uint64_t this)
{
  uint64_t v1 = this;
  unsigned int v2 = *(_DWORD *)(this + 228);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      this = *(void *)(this + 8);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::Raven::TimeStamp::Clear(this);
        unsigned int v2 = *(_DWORD *)(v1 + 228);
      }
    }
    *(void *)(v1 + 48) = 0;
    *(_OWORD *)(v1 + 16) = 0u;
    *(_OWORD *)(v1 + 32) = 0u;
  }
  if ((v2 & 0xFF00) != 0)
  {
    *(_DWORD *)(v1 + 136) = 0;
    *(_OWORD *)(v1 + 56) = 0u;
    *(_OWORD *)(v1 + 72) = 0u;
    *(_OWORD *)(v1 + 88) = 0u;
    *(void *)(v1 + 104) = 0;
  }
  if ((v2 & 0xFF0000) != 0)
  {
    *(void *)(v1 + 112) = 0;
    *(void *)(v1 + 120) = 0;
    *(void *)(v1 + 128) = 0;
    *(_OWORD *)(v1 + 144) = 0u;
    *(_OWORD *)(v1 + 160) = 0u;
    *(void *)(v1 + 176) = 0;
  }
  if (HIBYTE(v2))
  {
    *(_DWORD *)(v1 + 140) = 0;
    *(_OWORD *)(v1 + 184) = 0u;
    *(_OWORD *)(v1 + 200) = 0u;
    *(void *)(v1 + 216) = 0;
  }
  *(_DWORD *)(v1 + 228) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::EstimatorState::Clear(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 92);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      this = *(void *)(this + 8);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::Raven::TimeStamp::Clear(this);
        int v2 = *(_DWORD *)(v1 + 92);
      }
    }
    if ((v2 & 2) != 0)
    {
      this = *(void *)(v1 + 16);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::Raven::UserPosition::Clear(this);
        int v2 = *(_DWORD *)(v1 + 92);
      }
    }
    if ((v2 & 4) != 0)
    {
      this = *(void *)(v1 + 24);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::Raven::UserVelocity::Clear(this);
        int v2 = *(_DWORD *)(v1 + 92);
      }
    }
    if ((v2 & 8) != 0)
    {
      this = *(void *)(v1 + 32);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::Raven::DevicePosition::Clear(this);
        int v2 = *(_DWORD *)(v1 + 92);
      }
    }
    if ((v2 & 0x10) != 0)
    {
      this = *(void *)(v1 + 40);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity::Clear(this);
        int v2 = *(_DWORD *)(v1 + 92);
      }
    }
    if ((v2 & 0x20) != 0)
    {
      this = *(void *)(v1 + 48);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude::Clear(this);
        int v2 = *(_DWORD *)(v1 + 92);
      }
    }
    if ((v2 & 0x40) != 0)
    {
      this = *(void *)(v1 + 56);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias::Clear(this);
        int v2 = *(_DWORD *)(v1 + 92);
      }
    }
    if ((v2 & 0x80) != 0)
    {
      this = *(void *)(v1 + 64);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias::Clear(this);
        int v2 = *(_DWORD *)(v1 + 92);
      }
    }
  }
  if ((v2 & 0xFF00) != 0)
  {
    if ((v2 & 0x100) != 0)
    {
      this = *(void *)(v1 + 72);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor::Clear(this);
        int v2 = *(_DWORD *)(v1 + 92);
      }
    }
    if ((v2 & 0x200) != 0)
    {
      this = *(void *)(v1 + 80);
      if (this) {
        this = CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy::Clear(this);
      }
    }
  }
  *(_DWORD *)(v1 + 92) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::NrParameters::Clear(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 160);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      this = *(void *)(this + 8);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::Raven::TimeStamp::Clear(this);
        int v2 = *(_DWORD *)(v1 + 160);
      }
    }
    *(_WORD *)(v1 + 152) = 0;
    *(_OWORD *)(v1 + 16) = 0u;
    *(_OWORD *)(v1 + 32) = 0u;
    *(void *)(v1 + 48) = 0;
  }
  if ((v2 & 0xFF00) != 0)
  {
    *(_OWORD *)(v1 + 104) = 0u;
    *(_OWORD *)(v1 + 88) = 0u;
    *(_OWORD *)(v1 + 72) = 0u;
    *(_OWORD *)(v1 + 56) = 0u;
  }
  if ((v2 & 0xFF0000) != 0)
  {
    *(_OWORD *)(v1 + 136) = 0u;
    *(_OWORD *)(v1 + 120) = 0u;
  }
  *(_DWORD *)(v1 + 160) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::NrBiases::Clear(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 96);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      this = *(void *)(this + 8);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::Raven::TimeStamp::Clear(this);
        int v2 = *(_DWORD *)(v1 + 96);
      }
    }
    *(_WORD *)(v1 + 88) = 0;
    *(_OWORD *)(v1 + 16) = 0u;
    *(_OWORD *)(v1 + 32) = 0u;
    *(void *)(v1 + 48) = 0;
  }
  if ((v2 & 0xFF00) != 0)
  {
    *(_OWORD *)(v1 + 72) = 0u;
    *(_OWORD *)(v1 + 56) = 0u;
  }
  *(_DWORD *)(v1 + 96) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth::Clear(CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth *this)
{
  int v2 = *((_DWORD *)this + 42);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      uint64_t v3 = *((void *)this + 1);
      if (v3)
      {
        CoreNavigation::CLP::LogEntry::Raven::TimeStamp::Clear(v3);
        int v2 = *((_DWORD *)this + 42);
      }
    }
    *(_OWORD *)((char *)this + 44) = 0u;
    *((_OWORD *)this + 1) = 0u;
    *((_OWORD *)this + 2) = 0u;
  }
  if ((v2 & 0x3FC00) != 0)
  {
    *((_DWORD *)this + 15) = 0;
    *((void *)this + 18) = 0;
    *((void *)this + 19) = 0;
    *((void *)this + 17) = 0;
    *((_DWORD *)this + 40) = 0;
  }
  sub_18DF0C208((uint64_t)this + 64);
  sub_18DF0C208((uint64_t)this + 88);
  uint64_t result = sub_18DF0C208((uint64_t)this + 112);
  *((_DWORD *)this + 42) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::RavenOutput::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Raven::RavenOutput *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (1)
  {
    uint64_t v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 < *((void *)a2 + 2) && (*v4 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_6;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_6:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_23;
        }
        *((_DWORD *)this + 15) |= 1u;
        uint64_t v7 = (CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *)*((void *)this + 1);
        if (!v7) {
          operator new();
        }
        unsigned int v50 = 0;
        uint64_t v8 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v50))return 0; {
        }
          }
        else
        {
          unsigned int v50 = *v8;
          *((void *)a2 + 1) = v8 + 1;
        }
        int v9 = *((_DWORD *)a2 + 14);
        int v10 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v9 + 1;
        if (v9 >= v10) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth::MergePartialFromCodedStream(v7, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v11 = *((_DWORD *)a2 + 14);
        BOOL v12 = __OFSUB__(v11, 1);
        int v13 = v11 - 1;
        if (v13 < 0 == v12) {
          *((_DWORD *)a2 + 14) = v13;
        }
        BOOL v14 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v14 >= *((void *)a2 + 2) || *v14 != 18) {
          continue;
        }
        *((void *)a2 + 1) = v14 + 1;
        goto LABEL_35;
      case 2u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_23;
        }
LABEL_35:
        *((_DWORD *)this + 15) |= 2u;
        int v15 = (CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity *)*((void *)this + 2);
        if (!v15) {
          operator new();
        }
        unsigned int v50 = 0;
        int v16 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v16 >= *((void *)a2 + 2) || *v16 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v50))return 0; {
        }
          }
        else
        {
          unsigned int v50 = *v16;
          *((void *)a2 + 1) = v16 + 1;
        }
        int v17 = *((_DWORD *)a2 + 14);
        int v18 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v17 + 1;
        if (v17 >= v18) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity::MergePartialFromCodedStream(v15, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v19 = *((_DWORD *)a2 + 14);
        BOOL v12 = __OFSUB__(v19, 1);
        int v20 = v19 - 1;
        if (v20 < 0 == v12) {
          *((_DWORD *)a2 + 14) = v20;
        }
        int v21 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v21 >= *((void *)a2 + 2) || *v21 != 26) {
          continue;
        }
        *((void *)a2 + 1) = v21 + 1;
LABEL_49:
        *((_DWORD *)this + 15) |= 4u;
        int v22 = (CoreNavigation::CLP::LogEntry::Raven::EstimatorState *)*((void *)this + 3);
        if (!v22) {
          operator new();
        }
        unsigned int v50 = 0;
        unsigned int v23 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v23 >= *((void *)a2 + 2) || *v23 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v50))return 0; {
        }
          }
        else
        {
          unsigned int v50 = *v23;
          *((void *)a2 + 1) = v23 + 1;
        }
        int v24 = *((_DWORD *)a2 + 14);
        int v25 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v24 + 1;
        if (v24 >= v25) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::EstimatorState::MergePartialFromCodedStream(v22, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v26 = *((_DWORD *)a2 + 14);
        BOOL v12 = __OFSUB__(v26, 1);
        int v27 = v26 - 1;
        if (v27 < 0 == v12) {
          *((_DWORD *)a2 + 14) = v27;
        }
        int v28 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v28 >= *((void *)a2 + 2) || *v28 != 34) {
          continue;
        }
        *((void *)a2 + 1) = v28 + 1;
LABEL_63:
        *((_DWORD *)this + 15) |= 8u;
        int v29 = (CoreNavigation::CLP::LogEntry::Raven::NrParameters *)*((void *)this + 4);
        if (!v29) {
          operator new();
        }
        unsigned int v50 = 0;
        int v30 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v30 >= *((void *)a2 + 2) || *v30 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v50))return 0; {
        }
          }
        else
        {
          unsigned int v50 = *v30;
          *((void *)a2 + 1) = v30 + 1;
        }
        int v31 = *((_DWORD *)a2 + 14);
        int v32 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v31 + 1;
        if (v31 >= v32) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::NrParameters::MergePartialFromCodedStream(v29, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v33 = *((_DWORD *)a2 + 14);
        BOOL v12 = __OFSUB__(v33, 1);
        int v34 = v33 - 1;
        if (v34 < 0 == v12) {
          *((_DWORD *)a2 + 14) = v34;
        }
        unsigned int v35 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v35 >= *((void *)a2 + 2) || *v35 != 42) {
          continue;
        }
        *((void *)a2 + 1) = v35 + 1;
LABEL_77:
        *((_DWORD *)this + 15) |= 0x10u;
        unsigned int v36 = (CoreNavigation::CLP::LogEntry::Raven::NrBiases *)*((void *)this + 5);
        if (!v36) {
          operator new();
        }
        unsigned int v50 = 0;
        unsigned int v37 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v37 >= *((void *)a2 + 2) || *v37 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v50))return 0; {
        }
          }
        else
        {
          unsigned int v50 = *v37;
          *((void *)a2 + 1) = v37 + 1;
        }
        int v38 = *((_DWORD *)a2 + 14);
        int v39 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v38 + 1;
        if (v38 >= v39) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::NrBiases::MergePartialFromCodedStream(v36, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v40 = *((_DWORD *)a2 + 14);
        BOOL v12 = __OFSUB__(v40, 1);
        int v41 = v40 - 1;
        if (v41 < 0 == v12) {
          *((_DWORD *)a2 + 14) = v41;
        }
        uint64_t v42 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v42 >= *((void *)a2 + 2) || *v42 != 50) {
          continue;
        }
        *((void *)a2 + 1) = v42 + 1;
LABEL_91:
        *((_DWORD *)this + 15) |= 0x20u;
        char v43 = (CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth *)*((void *)this + 6);
        if (!v43) {
          operator new();
        }
        unsigned int v50 = 0;
        std::string::size_type v44 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v44 >= *((void *)a2 + 2) || *v44 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v50))return 0; {
        }
          }
        else
        {
          unsigned int v50 = *v44;
          *((void *)a2 + 1) = v44 + 1;
        }
        int v45 = *((_DWORD *)a2 + 14);
        int v46 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v45 + 1;
        if (v45 >= v46) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth::MergePartialFromCodedStream(v43, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v47 = *((_DWORD *)a2 + 14);
        BOOL v12 = __OFSUB__(v47, 1);
        int v48 = v47 - 1;
        if (v48 < 0 == v12) {
          *((_DWORD *)a2 + 14) = v48;
        }
        if (*((void *)a2 + 1) == *((void *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
        break;
      case 3u:
        int v6 = TagFallback & 7;
        if (v6 == 2) {
          goto LABEL_49;
        }
        goto LABEL_23;
      case 4u:
        int v6 = TagFallback & 7;
        if (v6 == 2) {
          goto LABEL_63;
        }
        goto LABEL_23;
      case 5u:
        int v6 = TagFallback & 7;
        if (v6 == 2) {
          goto LABEL_77;
        }
        goto LABEL_23;
      case 6u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_23;
        }
        goto LABEL_91;
      default:
        int v6 = TagFallback & 7;
LABEL_23:
        if (v6 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::RavenOutput::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 60);
  if (v6)
  {
    uint64_t v7 = *(void *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto((CoreNavigation::CLP::LogEntry::Raven *)this);
      uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::Raven::RavenOutput::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 60);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto((CoreNavigation::CLP::LogEntry::Raven *)this);
    uint64_t v8 = *(void *)(CoreNavigation::CLP::LogEntry::Raven::RavenOutput::default_instance_ + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_14:
  uint64_t v9 = *(void *)(v5 + 24);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto((CoreNavigation::CLP::LogEntry::Raven *)this);
    uint64_t v9 = *(void *)(CoreNavigation::CLP::LogEntry::Raven::RavenOutput::default_instance_ + 24);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v9, a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
LABEL_17:
  uint64_t v10 = *(void *)(v5 + 32);
  if (!v10)
  {
    CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto((CoreNavigation::CLP::LogEntry::Raven *)this);
    uint64_t v10 = *(void *)(CoreNavigation::CLP::LogEntry::Raven::RavenOutput::default_instance_ + 32);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v10, a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      return this;
    }
    goto LABEL_23;
  }
LABEL_20:
  uint64_t v11 = *(void *)(v5 + 40);
  if (!v11)
  {
    CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto((CoreNavigation::CLP::LogEntry::Raven *)this);
    uint64_t v11 = *(void *)(CoreNavigation::CLP::LogEntry::Raven::RavenOutput::default_instance_ + 40);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v11, a2, a4);
  if ((*(_DWORD *)(v5 + 60) & 0x20) != 0)
  {
LABEL_23:
    uint64_t v12 = *(void *)(v5 + 48);
    if (!v12)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto((CoreNavigation::CLP::LogEntry::Raven *)this);
      uint64_t v12 = *(void *)(CoreNavigation::CLP::LogEntry::Raven::RavenOutput::default_instance_ + 48);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v12, a2, a4);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::RavenOutput::ByteSize(CoreNavigation::CLP::LogEntry::Raven::RavenOutput *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 60);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_47;
  }
  if ((*((unsigned char *)this + 60) & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((*((unsigned char *)this + 60) & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  uint64_t v4 = (CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *)*((void *)this + 1);
  if (!v4)
  {
    CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(0);
    uint64_t v4 = *(CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth **)(CoreNavigation::CLP::LogEntry::Raven::RavenOutput::default_instance_
                                                                   + 8);
  }
  uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth::ByteSize(v4);
  int v6 = (int)v5;
  if (v5 >= 0x80) {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
  }
  else {
    int v7 = 1;
  }
  uint64_t v3 = (v6 + v7 + 1);
  int v2 = *((_DWORD *)this + 15);
  if ((v2 & 2) != 0)
  {
LABEL_12:
    uint64_t v8 = (CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity *)*((void *)this + 2);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(0);
      uint64_t v8 = *(CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity **)(CoreNavigation::CLP::LogEntry::Raven::RavenOutput::default_instance_
                                                                       + 16);
    }
    uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity::ByteSize(v8);
    int v10 = (int)v9;
    if (v9 >= 0x80) {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9);
    }
    else {
      int v11 = 1;
    }
    uint64_t v3 = (v3 + v10 + v11 + 1);
    int v2 = *((_DWORD *)this + 15);
  }
LABEL_18:
  if ((v2 & 4) != 0)
  {
    uint64_t v12 = (CoreNavigation::CLP::LogEntry::Raven::EstimatorState *)*((void *)this + 3);
    if (!v12)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(0);
      uint64_t v12 = *(CoreNavigation::CLP::LogEntry::Raven::EstimatorState **)(CoreNavigation::CLP::LogEntry::Raven::RavenOutput::default_instance_
                                                                     + 24);
    }
    int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::EstimatorState::ByteSize(v12);
    int v14 = (int)v13;
    if (v13 >= 0x80) {
      int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
    }
    else {
      int v15 = 1;
    }
    uint64_t v3 = (v3 + v14 + v15 + 1);
    int v2 = *((_DWORD *)this + 15);
    if ((v2 & 8) == 0)
    {
LABEL_20:
      if ((v2 & 0x10) == 0) {
        goto LABEL_21;
      }
      goto LABEL_35;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_20;
  }
  int v16 = (CoreNavigation::CLP::LogEntry::Raven::NrParameters *)*((void *)this + 4);
  if (!v16)
  {
    CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(0);
    int v16 = *(CoreNavigation::CLP::LogEntry::Raven::NrParameters **)(CoreNavigation::CLP::LogEntry::Raven::RavenOutput::default_instance_
                                                                 + 32);
  }
  int v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::NrParameters::ByteSize(v16);
  int v18 = (int)v17;
  if (v17 >= 0x80) {
    int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17);
  }
  else {
    int v19 = 1;
  }
  uint64_t v3 = (v3 + v18 + v19 + 1);
  int v2 = *((_DWORD *)this + 15);
  if ((v2 & 0x10) == 0)
  {
LABEL_21:
    if ((v2 & 0x20) == 0) {
      goto LABEL_47;
    }
    goto LABEL_41;
  }
LABEL_35:
  int v20 = (CoreNavigation::CLP::LogEntry::Raven::NrBiases *)*((void *)this + 5);
  if (!v20)
  {
    CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(0);
    int v20 = *(CoreNavigation::CLP::LogEntry::Raven::NrBiases **)(CoreNavigation::CLP::LogEntry::Raven::RavenOutput::default_instance_
                                                             + 40);
  }
  int v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::NrBiases::ByteSize(v20);
  int v22 = (int)v21;
  if (v21 >= 0x80) {
    int v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21);
  }
  else {
    int v23 = 1;
  }
  uint64_t v3 = (v3 + v22 + v23 + 1);
  if ((*((_DWORD *)this + 15) & 0x20) != 0)
  {
LABEL_41:
    int v24 = (CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth *)*((void *)this + 6);
    if (!v24)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(0);
      int v24 = *(CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth **)(CoreNavigation::CLP::LogEntry::Raven::RavenOutput::default_instance_
                                                                        + 48);
    }
    int v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth::ByteSize(v24);
    int v26 = (int)v25;
    if (v25 >= 0x80) {
      int v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25);
    }
    else {
      int v27 = 1;
    }
    uint64_t v3 = (v3 + v26 + v27 + 1);
  }
LABEL_47:
  *((_DWORD *)this + 14) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::Raven::RavenOutput::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Raven::RavenOutput *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::Raven::RavenOutput::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth::MergeFrom(CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *this, const CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v45);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *)((char *)this + 112));
  if (*((int *)a2 + 30) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(const CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount **)(*((void *)a2 + 14) + 8 * v4);
      int v6 = *((_DWORD *)this + 31);
      uint64_t v7 = *((int *)this + 30);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 32))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *)((char *)this + 112));
          int v6 = *((_DWORD *)this + 31);
        }
        *((_DWORD *)this + 31) = v6 + 1;
        operator new();
      }
      uint64_t v8 = *((void *)this + 14);
      *((_DWORD *)this + 30) = v7 + 1;
      CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::MergeFrom(*(CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 30));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *)((char *)this + 136));
  if (*((int *)a2 + 36) >= 1)
  {
    uint64_t v9 = 0;
    do
    {
      int v10 = *(const CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount **)(*((void *)a2 + 17) + 8 * v9);
      int v11 = *((_DWORD *)this + 37);
      uint64_t v12 = *((int *)this + 36);
      if ((int)v12 >= v11)
      {
        if (v11 == *((_DWORD *)this + 38))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *)((char *)this + 136));
          int v11 = *((_DWORD *)this + 37);
        }
        *((_DWORD *)this + 37) = v11 + 1;
        operator new();
      }
      uint64_t v13 = *((void *)this + 17);
      *((_DWORD *)this + 36) = v12 + 1;
      CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::MergeFrom(*(CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount **)(v13 + 8 * v12), v10);
      ++v9;
    }
    while (v9 < *((int *)a2 + 36));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *)((char *)this + 192));
  if (*((int *)a2 + 50) >= 1)
  {
    uint64_t v14 = 0;
    do
    {
      int v15 = *(const CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount **)(*((void *)a2 + 24) + 8 * v14);
      int v16 = *((_DWORD *)this + 51);
      uint64_t v17 = *((int *)this + 50);
      if ((int)v17 >= v16)
      {
        if (v16 == *((_DWORD *)this + 52))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *)((char *)this + 192));
          int v16 = *((_DWORD *)this + 51);
        }
        *((_DWORD *)this + 51) = v16 + 1;
        operator new();
      }
      uint64_t v18 = *((void *)this + 24);
      *((_DWORD *)this + 50) = v17 + 1;
      CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::MergeFrom(*(CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount **)(v18 + 8 * v17), v15);
      ++v14;
    }
    while (v14 < *((int *)a2 + 50));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *)((char *)this + 216));
  if (*((int *)a2 + 56) >= 1)
  {
    uint64_t v19 = 0;
    do
    {
      int v20 = *(const CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount **)(*((void *)a2 + 27) + 8 * v19);
      int v21 = *((_DWORD *)this + 57);
      uint64_t v22 = *((int *)this + 56);
      if ((int)v22 >= v21)
      {
        if (v21 == *((_DWORD *)this + 58))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *)((char *)this + 216));
          int v21 = *((_DWORD *)this + 57);
        }
        *((_DWORD *)this + 57) = v21 + 1;
        operator new();
      }
      uint64_t v23 = *((void *)this + 27);
      *((_DWORD *)this + 56) = v22 + 1;
      CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::MergeFrom(*(CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount **)(v23 + 8 * v22), v20);
      ++v19;
    }
    while (v19 < *((int *)a2 + 56));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *)((char *)this + 240));
  if (*((int *)a2 + 62) >= 1)
  {
    uint64_t v24 = 0;
    do
    {
      int v25 = *(const CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount **)(*((void *)a2 + 30) + 8 * v24);
      int v26 = *((_DWORD *)this + 63);
      uint64_t v27 = *((int *)this + 62);
      if ((int)v27 >= v26)
      {
        if (v26 == *((_DWORD *)this + 64))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *)((char *)this + 240));
          int v26 = *((_DWORD *)this + 63);
        }
        *((_DWORD *)this + 63) = v26 + 1;
        operator new();
      }
      uint64_t v28 = *((void *)this + 30);
      *((_DWORD *)this + 62) = v27 + 1;
      CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::MergeFrom(*(CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount **)(v28 + 8 * v27), v25);
      ++v24;
    }
    while (v24 < *((int *)a2 + 62));
  }
  int v29 = (CoreNavigation::CLP::LogEntry::Raven *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *)((char *)this + 264));
  if (*((int *)a2 + 68) >= 1)
  {
    uint64_t v31 = 0;
    do
    {
      int v32 = *(const CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount **)(*((void *)a2 + 33) + 8 * v31);
      uint64_t v33 = *((int *)this + 68);
      int v34 = *((_DWORD *)this + 69);
      if ((int)v33 >= v34)
      {
        if (v34 == *((_DWORD *)this + 70))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *)((char *)this + 264));
          int v34 = *((_DWORD *)this + 69);
        }
        *((_DWORD *)this + 69) = v34 + 1;
        operator new();
      }
      uint64_t v35 = *((void *)this + 33);
      *((_DWORD *)this + 68) = v33 + 1;
      CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::MergeFrom(*(CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount **)(v35 + 8 * v33), v32);
      ++v31;
    }
    while (v31 < *((int *)a2 + 68));
  }
  int v36 = *((_DWORD *)a2 + 73);
  if (!(_BYTE)v36) {
    goto LABEL_70;
  }
  if (v36)
  {
    *((_DWORD *)this + 73) |= 1u;
    unsigned int v37 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((void *)this + 1);
    if (!v37) {
      operator new();
    }
    int v38 = (const CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((void *)a2 + 1);
    if (!v38)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(v29);
      int v38 = *(const CoreNavigation::CLP::LogEntry::Raven::TimeStamp **)(CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth::default_instance_
                                                                      + 8);
    }
    double result = CoreNavigation::CLP::LogEntry::Raven::TimeStamp::MergeFrom(v37, v38);
    int v36 = *((_DWORD *)a2 + 73);
  }
  if ((v36 & 2) != 0)
  {
    unsigned int v39 = *((_DWORD *)a2 + 4);
    if (v39 >= 7) {
      __assert_rtn("set_estimator_type", "CoreNavigationCLPRavenOutput.pb.h", 5162, "::CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth_EstimatorType_IsValid(value)");
    }
    *((_DWORD *)this + 73) |= 2u;
    *((_DWORD *)this + 4) = v39;
    int v36 = *((_DWORD *)a2 + 73);
  }
  if ((v36 & 4) != 0)
  {
    unsigned int v40 = *((_DWORD *)a2 + 5);
    if (v40 >= 4) {
      __assert_rtn("set_health", "CoreNavigationCLPRavenOutput.pb.h", 5185, "::CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth_EstimatorHealthType_IsValid(value)");
    }
    *((_DWORD *)this + 73) |= 4u;
    *((_DWORD *)this + 5) = v40;
    int v36 = *((_DWORD *)a2 + 73);
  }
  if ((v36 & 8) != 0)
  {
    double result = *((double *)a2 + 3);
    *((_DWORD *)this + 73) |= 8u;
    *((double *)this + 3) = result;
    int v36 = *((_DWORD *)a2 + 73);
    if ((v36 & 0x10) == 0)
    {
LABEL_66:
      if ((v36 & 0x20) == 0) {
        goto LABEL_67;
      }
LABEL_97:
      uint64_t v43 = *((void *)a2 + 5);
      *((_DWORD *)this + 73) |= 0x20u;
      *((void *)this + 5) = v43;
      int v36 = *((_DWORD *)a2 + 73);
      if ((v36 & 0x40) == 0)
      {
LABEL_68:
        if ((v36 & 0x80) == 0) {
          goto LABEL_70;
        }
        goto LABEL_69;
      }
      goto LABEL_98;
    }
  }
  else if ((v36 & 0x10) == 0)
  {
    goto LABEL_66;
  }
  double result = *((double *)a2 + 4);
  *((_DWORD *)this + 73) |= 0x10u;
  *((double *)this + 4) = result;
  int v36 = *((_DWORD *)a2 + 73);
  if ((v36 & 0x20) != 0) {
    goto LABEL_97;
  }
LABEL_67:
  if ((v36 & 0x40) == 0) {
    goto LABEL_68;
  }
LABEL_98:
  uint64_t v44 = *((void *)a2 + 6);
  *((_DWORD *)this + 73) |= 0x40u;
  *((void *)this + 6) = v44;
  int v36 = *((_DWORD *)a2 + 73);
  if ((v36 & 0x80) != 0)
  {
LABEL_69:
    uint64_t v41 = *((void *)a2 + 7);
    *((_DWORD *)this + 73) |= 0x80u;
    *((void *)this + 7) = v41;
    int v36 = *((_DWORD *)a2 + 73);
  }
LABEL_70:
  if ((v36 & 0xFF00) == 0) {
    goto LABEL_78;
  }
  if ((v36 & 0x100) != 0)
  {
    double result = *((double *)a2 + 8);
    *((_DWORD *)this + 73) |= 0x100u;
    *((double *)this + 8) = result;
    int v36 = *((_DWORD *)a2 + 73);
    if ((v36 & 0x200) == 0)
    {
LABEL_73:
      if ((v36 & 0x400) == 0) {
        goto LABEL_74;
      }
      goto LABEL_87;
    }
  }
  else if ((v36 & 0x200) == 0)
  {
    goto LABEL_73;
  }
  double result = *((double *)a2 + 9);
  *((_DWORD *)this + 73) |= 0x200u;
  *((double *)this + 9) = result;
  int v36 = *((_DWORD *)a2 + 73);
  if ((v36 & 0x400) == 0)
  {
LABEL_74:
    if ((v36 & 0x800) == 0) {
      goto LABEL_75;
    }
    goto LABEL_88;
  }
LABEL_87:
  double result = *((double *)a2 + 10);
  *((_DWORD *)this + 73) |= 0x400u;
  *((double *)this + 10) = result;
  int v36 = *((_DWORD *)a2 + 73);
  if ((v36 & 0x800) == 0)
  {
LABEL_75:
    if ((v36 & 0x1000) == 0) {
      goto LABEL_76;
    }
    goto LABEL_89;
  }
LABEL_88:
  double result = *((double *)a2 + 11);
  *((_DWORD *)this + 73) |= 0x800u;
  *((double *)this + 11) = result;
  int v36 = *((_DWORD *)a2 + 73);
  if ((v36 & 0x1000) == 0)
  {
LABEL_76:
    if ((v36 & 0x2000) == 0) {
      goto LABEL_78;
    }
    goto LABEL_77;
  }
LABEL_89:
  double result = *((double *)a2 + 12);
  *((_DWORD *)this + 73) |= 0x1000u;
  *((double *)this + 12) = result;
  int v36 = *((_DWORD *)a2 + 73);
  if ((v36 & 0x2000) != 0)
  {
LABEL_77:
    double result = *((double *)a2 + 13);
    *((_DWORD *)this + 73) |= 0x2000u;
    *((double *)this + 13) = result;
    int v36 = *((_DWORD *)a2 + 73);
  }
LABEL_78:
  if ((v36 & 0xFF0000) == 0) {
    return result;
  }
  if ((v36 & 0x10000) != 0)
  {
    double result = *((double *)a2 + 20);
    *((_DWORD *)this + 73) |= 0x10000u;
    *((double *)this + 20) = result;
    int v36 = *((_DWORD *)a2 + 73);
    if ((v36 & 0x20000) == 0)
    {
LABEL_81:
      if ((v36 & 0x40000) == 0) {
        goto LABEL_82;
      }
      goto LABEL_93;
    }
  }
  else if ((v36 & 0x20000) == 0)
  {
    goto LABEL_81;
  }
  double result = *((double *)a2 + 21);
  *((_DWORD *)this + 73) |= 0x20000u;
  *((double *)this + 21) = result;
  int v36 = *((_DWORD *)a2 + 73);
  if ((v36 & 0x40000) == 0)
  {
LABEL_82:
    if ((v36 & 0x80000) == 0) {
      return result;
    }
    goto LABEL_83;
  }
LABEL_93:
  double result = *((double *)a2 + 22);
  *((_DWORD *)this + 73) |= 0x40000u;
  *((double *)this + 22) = result;
  if ((*((_DWORD *)a2 + 73) & 0x80000) != 0)
  {
LABEL_83:
    uint64_t v42 = *((void *)a2 + 23);
    *((_DWORD *)this + 73) |= 0x80000u;
    *((void *)this + 23) = v42;
  }
  return result;
}

void sub_18DF0F868(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity::MergeFrom(CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity *this, const CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v36);
  }
  unsigned int v4 = *((_DWORD *)a2 + 57);
  if (!(_BYTE)v4) {
    goto LABEL_29;
  }
  if (v4)
  {
    *((_DWORD *)this + 57) |= 1u;
    uint64_t v5 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((void *)this + 1);
    if (!v5) {
      operator new();
    }
    int v6 = (const CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((void *)a2 + 1);
    if (!v6)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
      int v6 = *(const CoreNavigation::CLP::LogEntry::Raven::TimeStamp **)(CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity::default_instance_
                                                                     + 8);
    }
    CoreNavigation::CLP::LogEntry::Raven::TimeStamp::MergeFrom(v5, v6);
    unsigned int v4 = *((_DWORD *)a2 + 57);
  }
  if ((v4 & 2) != 0)
  {
    unsigned int v7 = *((_DWORD *)a2 + 6);
    if (v7 >= 0xA) {
      __assert_rtn("set_estimated_user_activity", "CoreNavigationCLPRavenOutput.pb.h", 5734, "::CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity_UserActivityType_IsValid(value)");
    }
    *((_DWORD *)this + 57) |= 2u;
    *((_DWORD *)this + 6) = v7;
    unsigned int v4 = *((_DWORD *)a2 + 57);
  }
  if ((v4 & 4) != 0)
  {
    uint64_t v8 = *((void *)a2 + 2);
    *((_DWORD *)this + 57) |= 4u;
    *((void *)this + 2) = v8;
    unsigned int v4 = *((_DWORD *)a2 + 57);
  }
  if ((v4 & 8) != 0)
  {
    unsigned int v9 = *((_DWORD *)a2 + 7);
    if (v9 >= 4) {
      __assert_rtn("set_estimated_moving_state", "CoreNavigationCLPRavenOutput.pb.h", 5779, "::CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity_MovingStateType_IsValid(value)");
    }
    *((_DWORD *)this + 57) |= 8u;
    *((_DWORD *)this + 7) = v9;
    unsigned int v4 = *((_DWORD *)a2 + 57);
  }
  if ((v4 & 0x10) == 0)
  {
    if ((v4 & 0x20) == 0) {
      goto LABEL_20;
    }
LABEL_24:
    uint64_t v11 = *((void *)a2 + 5);
    *((_DWORD *)this + 57) |= 0x20u;
    *((void *)this + 5) = v11;
    unsigned int v4 = *((_DWORD *)a2 + 57);
    if ((v4 & 0x40) == 0)
    {
LABEL_21:
      if ((v4 & 0x80) == 0) {
        goto LABEL_29;
      }
      goto LABEL_27;
    }
    goto LABEL_25;
  }
  uint64_t v10 = *((void *)a2 + 4);
  *((_DWORD *)this + 57) |= 0x10u;
  *((void *)this + 4) = v10;
  unsigned int v4 = *((_DWORD *)a2 + 57);
  if ((v4 & 0x20) != 0) {
    goto LABEL_24;
  }
LABEL_20:
  if ((v4 & 0x40) == 0) {
    goto LABEL_21;
  }
LABEL_25:
  unsigned int v12 = *((_DWORD *)a2 + 12);
  if (v12 >= 0xA) {
    __assert_rtn("set_user_fitness_session", "CoreNavigationCLPRavenOutput.pb.h", 5846, "::CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity_UserFitnessSessionType_IsValid(value)");
  }
  *((_DWORD *)this + 57) |= 0x40u;
  *((_DWORD *)this + 12) = v12;
  unsigned int v4 = *((_DWORD *)a2 + 57);
  if ((v4 & 0x80) != 0)
  {
LABEL_27:
    unsigned int v13 = *((_DWORD *)a2 + 13);
    if (v13 >= 4) {
      __assert_rtn("set_estimated_mount_state", "CoreNavigationCLPRavenOutput.pb.h", 5869, "::CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity_MountStateType_IsValid(value)");
    }
    *((_DWORD *)this + 57) |= 0x80u;
    *((_DWORD *)this + 13) = v13;
    unsigned int v4 = *((_DWORD *)a2 + 57);
  }
LABEL_29:
  if ((v4 & 0xFF00) == 0) {
    goto LABEL_41;
  }
  if ((v4 & 0x100) != 0)
  {
    unsigned int v14 = *((_DWORD *)a2 + 34);
    if (v14 >= 3) {
      __assert_rtn("set_estimated_position_context_state", "CoreNavigationCLPRavenOutput.pb.h", 5892, "::CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity_PositionContextStateType_IsValid(value)");
    }
    *((_DWORD *)this + 57) |= 0x100u;
    *((_DWORD *)this + 34) = v14;
    unsigned int v4 = *((_DWORD *)a2 + 57);
  }
  if ((v4 & 0x200) != 0)
  {
    uint64_t v24 = *((void *)a2 + 7);
    *((_DWORD *)this + 57) |= 0x200u;
    *((void *)this + 7) = v24;
    unsigned int v4 = *((_DWORD *)a2 + 57);
    if ((v4 & 0x400) == 0)
    {
LABEL_35:
      if ((v4 & 0x800) == 0) {
        goto LABEL_36;
      }
      goto LABEL_69;
    }
  }
  else if ((v4 & 0x400) == 0)
  {
    goto LABEL_35;
  }
  uint64_t v25 = *((void *)a2 + 8);
  *((_DWORD *)this + 57) |= 0x400u;
  *((void *)this + 8) = v25;
  unsigned int v4 = *((_DWORD *)a2 + 57);
  if ((v4 & 0x800) == 0)
  {
LABEL_36:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_37;
    }
    goto LABEL_70;
  }
LABEL_69:
  uint64_t v26 = *((void *)a2 + 9);
  *((_DWORD *)this + 57) |= 0x800u;
  *((void *)this + 9) = v26;
  unsigned int v4 = *((_DWORD *)a2 + 57);
  if ((v4 & 0x1000) == 0)
  {
LABEL_37:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_38;
    }
    goto LABEL_71;
  }
LABEL_70:
  uint64_t v27 = *((void *)a2 + 10);
  *((_DWORD *)this + 57) |= 0x1000u;
  *((void *)this + 10) = v27;
  unsigned int v4 = *((_DWORD *)a2 + 57);
  if ((v4 & 0x2000) == 0)
  {
LABEL_38:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_72;
  }
LABEL_71:
  uint64_t v28 = *((void *)a2 + 11);
  *((_DWORD *)this + 57) |= 0x2000u;
  *((void *)this + 11) = v28;
  unsigned int v4 = *((_DWORD *)a2 + 57);
  if ((v4 & 0x4000) == 0)
  {
LABEL_39:
    if ((v4 & 0x8000) == 0) {
      goto LABEL_41;
    }
    goto LABEL_40;
  }
LABEL_72:
  uint64_t v29 = *((void *)a2 + 12);
  *((_DWORD *)this + 57) |= 0x4000u;
  *((void *)this + 12) = v29;
  unsigned int v4 = *((_DWORD *)a2 + 57);
  if ((v4 & 0x8000) != 0)
  {
LABEL_40:
    uint64_t v15 = *((void *)a2 + 13);
    *((_DWORD *)this + 57) |= 0x8000u;
    *((void *)this + 13) = v15;
    unsigned int v4 = *((_DWORD *)a2 + 57);
  }
LABEL_41:
  if ((v4 & 0xFF0000) == 0) {
    goto LABEL_51;
  }
  if ((v4 & 0x10000) != 0)
  {
    uint64_t v17 = *((void *)a2 + 14);
    *((_DWORD *)this + 57) |= 0x10000u;
    *((void *)this + 14) = v17;
    unsigned int v4 = *((_DWORD *)a2 + 57);
    if ((v4 & 0x20000) == 0)
    {
LABEL_44:
      if ((v4 & 0x40000) == 0) {
        goto LABEL_45;
      }
      goto LABEL_61;
    }
  }
  else if ((v4 & 0x20000) == 0)
  {
    goto LABEL_44;
  }
  uint64_t v18 = *((void *)a2 + 15);
  *((_DWORD *)this + 57) |= 0x20000u;
  *((void *)this + 15) = v18;
  unsigned int v4 = *((_DWORD *)a2 + 57);
  if ((v4 & 0x40000) == 0)
  {
LABEL_45:
    if ((v4 & 0x80000) == 0) {
      goto LABEL_46;
    }
    goto LABEL_62;
  }
LABEL_61:
  uint64_t v19 = *((void *)a2 + 16);
  *((_DWORD *)this + 57) |= 0x40000u;
  *((void *)this + 16) = v19;
  unsigned int v4 = *((_DWORD *)a2 + 57);
  if ((v4 & 0x80000) == 0)
  {
LABEL_46:
    if ((v4 & 0x100000) == 0) {
      goto LABEL_47;
    }
    goto LABEL_63;
  }
LABEL_62:
  uint64_t v20 = *((void *)a2 + 18);
  *((_DWORD *)this + 57) |= 0x80000u;
  *((void *)this + 18) = v20;
  unsigned int v4 = *((_DWORD *)a2 + 57);
  if ((v4 & 0x100000) == 0)
  {
LABEL_47:
    if ((v4 & 0x200000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_64;
  }
LABEL_63:
  uint64_t v21 = *((void *)a2 + 19);
  *((_DWORD *)this + 57) |= 0x100000u;
  *((void *)this + 19) = v21;
  unsigned int v4 = *((_DWORD *)a2 + 57);
  if ((v4 & 0x200000) == 0)
  {
LABEL_48:
    if ((v4 & 0x400000) == 0) {
      goto LABEL_49;
    }
    goto LABEL_65;
  }
LABEL_64:
  uint64_t v22 = *((void *)a2 + 20);
  *((_DWORD *)this + 57) |= 0x200000u;
  *((void *)this + 20) = v22;
  unsigned int v4 = *((_DWORD *)a2 + 57);
  if ((v4 & 0x400000) == 0)
  {
LABEL_49:
    if ((v4 & 0x800000) == 0) {
      goto LABEL_51;
    }
    goto LABEL_50;
  }
LABEL_65:
  uint64_t v23 = *((void *)a2 + 21);
  *((_DWORD *)this + 57) |= 0x400000u;
  *((void *)this + 21) = v23;
  unsigned int v4 = *((_DWORD *)a2 + 57);
  if ((v4 & 0x800000) != 0)
  {
LABEL_50:
    uint64_t v16 = *((void *)a2 + 22);
    *((_DWORD *)this + 57) |= 0x800000u;
    *((void *)this + 22) = v16;
    unsigned int v4 = *((_DWORD *)a2 + 57);
  }
LABEL_51:
  if (!HIBYTE(v4)) {
    return;
  }
  if ((v4 & 0x1000000) != 0)
  {
    uint64_t v30 = *((void *)a2 + 23);
    *((_DWORD *)this + 57) |= 0x1000000u;
    *((void *)this + 23) = v30;
    unsigned int v4 = *((_DWORD *)a2 + 57);
    if ((v4 & 0x2000000) == 0)
    {
LABEL_54:
      if ((v4 & 0x4000000) == 0) {
        goto LABEL_55;
      }
      goto LABEL_76;
    }
  }
  else if ((v4 & 0x2000000) == 0)
  {
    goto LABEL_54;
  }
  uint64_t v31 = *((void *)a2 + 24);
  *((_DWORD *)this + 57) |= 0x2000000u;
  *((void *)this + 24) = v31;
  unsigned int v4 = *((_DWORD *)a2 + 57);
  if ((v4 & 0x4000000) == 0)
  {
LABEL_55:
    if ((v4 & 0x8000000) == 0) {
      goto LABEL_56;
    }
    goto LABEL_77;
  }
LABEL_76:
  uint64_t v32 = *((void *)a2 + 25);
  *((_DWORD *)this + 57) |= 0x4000000u;
  *((void *)this + 25) = v32;
  unsigned int v4 = *((_DWORD *)a2 + 57);
  if ((v4 & 0x8000000) == 0)
  {
LABEL_56:
    if ((v4 & 0x10000000) == 0) {
      goto LABEL_57;
    }
LABEL_78:
    uint64_t v34 = *((void *)a2 + 27);
    *((_DWORD *)this + 57) |= 0x10000000u;
    *((void *)this + 27) = v34;
    if ((*((_DWORD *)a2 + 57) & 0x20000000) == 0) {
      return;
    }
    goto LABEL_79;
  }
LABEL_77:
  uint64_t v33 = *((void *)a2 + 26);
  *((_DWORD *)this + 57) |= 0x8000000u;
  *((void *)this + 26) = v33;
  unsigned int v4 = *((_DWORD *)a2 + 57);
  if ((v4 & 0x10000000) != 0) {
    goto LABEL_78;
  }
LABEL_57:
  if ((v4 & 0x20000000) == 0) {
    return;
  }
LABEL_79:
  unsigned int v35 = *((_DWORD *)a2 + 35);
  if (v35 >= 8) {
    __assert_rtn("set_estimated_signal_environment", "CoreNavigationCLPRavenOutput.pb.h", 6355, "::CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity_SignalEnvironmentType_IsValid(value)");
  }
  *((_DWORD *)this + 57) |= 0x20000000u;
  *((_DWORD *)this + 35) = v35;
}

void sub_18DF0FE20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::Raven::EstimatorState::MergeFrom(CoreNavigation::CLP::LogEntry::Raven::EstimatorState *this, const CoreNavigation::CLP::LogEntry::Raven::EstimatorState *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v26);
  }
  int v5 = *((_DWORD *)a2 + 23);
  if (!(_BYTE)v5) {
    goto LABEL_53;
  }
  if (v5)
  {
    *((_DWORD *)this + 23) |= 1u;
    int v6 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((void *)this + 1);
    if (!v6) {
      operator new();
    }
    unsigned int v7 = (const CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((void *)a2 + 1);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
      unsigned int v7 = *(const CoreNavigation::CLP::LogEntry::Raven::TimeStamp **)(CoreNavigation::CLP::LogEntry::Raven::EstimatorState::default_instance_
                                                                     + 8);
    }
    double result = CoreNavigation::CLP::LogEntry::Raven::TimeStamp::MergeFrom(v6, v7);
    int v5 = *((_DWORD *)a2 + 23);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_23;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }
  *((_DWORD *)this + 23) |= 2u;
  uint64_t v8 = (CoreNavigation::CLP::LogEntry::Raven::UserPosition *)*((void *)this + 2);
  if (!v8) {
    operator new();
  }
  unsigned int v9 = (const CoreNavigation::CLP::LogEntry::Raven::UserPosition *)*((void *)a2 + 2);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
    unsigned int v9 = *(const CoreNavigation::CLP::LogEntry::Raven::UserPosition **)(CoreNavigation::CLP::LogEntry::Raven::EstimatorState::default_instance_
                                                                      + 16);
  }
  double result = CoreNavigation::CLP::LogEntry::Raven::UserPosition::MergeFrom(v8, v9);
  int v5 = *((_DWORD *)a2 + 23);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_28;
  }
LABEL_23:
  *((_DWORD *)this + 23) |= 4u;
  uint64_t v10 = (CoreNavigation::CLP::LogEntry::Raven::UserVelocity *)*((void *)this + 3);
  if (!v10) {
    operator new();
  }
  uint64_t v11 = (const CoreNavigation::CLP::LogEntry::Raven::UserVelocity *)*((void *)a2 + 3);
  if (!v11)
  {
    CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
    uint64_t v11 = *(const CoreNavigation::CLP::LogEntry::Raven::UserVelocity **)(CoreNavigation::CLP::LogEntry::Raven::EstimatorState::default_instance_
                                                                       + 24);
  }
  double result = CoreNavigation::CLP::LogEntry::Raven::UserVelocity::MergeFrom(v10, v11);
  int v5 = *((_DWORD *)a2 + 23);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_33;
  }
LABEL_28:
  *((_DWORD *)this + 23) |= 8u;
  unsigned int v12 = (CoreNavigation::CLP::LogEntry::Raven::DevicePosition *)*((void *)this + 4);
  if (!v12) {
    operator new();
  }
  unsigned int v13 = (const CoreNavigation::CLP::LogEntry::Raven::DevicePosition *)*((void *)a2 + 4);
  if (!v13)
  {
    CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
    unsigned int v13 = *(const CoreNavigation::CLP::LogEntry::Raven::DevicePosition **)(CoreNavigation::CLP::LogEntry::Raven::EstimatorState::default_instance_
                                                                         + 32);
  }
  double result = CoreNavigation::CLP::LogEntry::Raven::DevicePosition::MergeFrom(v12, v13);
  int v5 = *((_DWORD *)a2 + 23);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_38:
    *((_DWORD *)this + 23) |= 0x20u;
    uint64_t v16 = (CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude *)*((void *)this + 6);
    if (!v16) {
      operator new();
    }
    uint64_t v17 = (const CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude *)*((void *)a2 + 6);
    if (!v17)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
      uint64_t v17 = *(const CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude **)(CoreNavigation::CLP::LogEntry::Raven::EstimatorState::default_instance_
                                                                           + 48);
    }
    double result = CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude::MergeFrom(v16, v17);
    int v5 = *((_DWORD *)a2 + 23);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0) {
        goto LABEL_53;
      }
      goto LABEL_48;
    }
    goto LABEL_43;
  }
LABEL_33:
  *((_DWORD *)this + 23) |= 0x10u;
  unsigned int v14 = (CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity *)*((void *)this + 5);
  if (!v14) {
    operator new();
  }
  uint64_t v15 = (const CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity *)*((void *)a2 + 5);
  if (!v15)
  {
    CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
    uint64_t v15 = *(const CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity **)(CoreNavigation::CLP::LogEntry::Raven::EstimatorState::default_instance_
                                                                         + 40);
  }
  double result = CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity::MergeFrom(v14, v15);
  int v5 = *((_DWORD *)a2 + 23);
  if ((v5 & 0x20) != 0) {
    goto LABEL_38;
  }
LABEL_10:
  if ((v5 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_43:
  *((_DWORD *)this + 23) |= 0x40u;
  uint64_t v18 = (CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias *)*((void *)this + 7);
  if (!v18) {
    operator new();
  }
  uint64_t v19 = (const CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias *)*((void *)a2 + 7);
  if (!v19)
  {
    CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
    uint64_t v19 = *(const CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias **)(CoreNavigation::CLP::LogEntry::Raven::EstimatorState::default_instance_
                                                                             + 56);
  }
  double result = CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias::MergeFrom(v18, v19);
  int v5 = *((_DWORD *)a2 + 23);
  if ((v5 & 0x80) != 0)
  {
LABEL_48:
    *((_DWORD *)this + 23) |= 0x80u;
    uint64_t v20 = (CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias *)*((void *)this + 8);
    if (!v20) {
      operator new();
    }
    uint64_t v21 = (const CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias *)*((void *)a2 + 8);
    if (!v21)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
      uint64_t v21 = *(const CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias **)(CoreNavigation::CLP::LogEntry::Raven::EstimatorState::default_instance_
                                                                                    + 64);
    }
    double result = CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias::MergeFrom(v20, v21);
    int v5 = *((_DWORD *)a2 + 23);
  }
LABEL_53:
  if ((v5 & 0xFF00) != 0)
  {
    if ((v5 & 0x100) != 0)
    {
      *((_DWORD *)this + 23) |= 0x100u;
      uint64_t v22 = (CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor *)*((void *)this + 9);
      if (!v22) {
        operator new();
      }
      uint64_t v23 = (const CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor *)*((void *)a2 + 9);
      if (!v23)
      {
        CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
        uint64_t v23 = *(const CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor **)(CoreNavigation::CLP::LogEntry::Raven::EstimatorState::default_instance_
                                                                                             + 72);
      }
      double result = CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor::MergeFrom(v22, v23);
      int v5 = *((_DWORD *)a2 + 23);
    }
    if ((v5 & 0x200) != 0)
    {
      *((_DWORD *)this + 23) |= 0x200u;
      uint64_t v24 = (CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy *)*((void *)this + 10);
      if (!v24) {
        operator new();
      }
      uint64_t v25 = (const CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy *)*((void *)a2 + 10);
      if (!v25)
      {
        CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
        uint64_t v25 = *(const CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy **)(CoreNavigation::CLP::LogEntry::Raven::EstimatorState::default_instance_
                                                                                             + 80);
      }
      return CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy::MergeFrom(v24, v25);
    }
  }
  return result;
}

void sub_18DF104A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::Raven::NrParameters::MergeFrom(CoreNavigation::CLP::LogEntry::Raven::NrParameters *this, const CoreNavigation::CLP::LogEntry::Raven::NrParameters *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  int v5 = *((_DWORD *)a2 + 40);
  if (!(_BYTE)v5) {
    goto LABEL_13;
  }
  if (v5)
  {
    *((_DWORD *)this + 40) |= 1u;
    int v6 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((void *)this + 1);
    if (!v6) {
      operator new();
    }
    unsigned int v7 = (const CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((void *)a2 + 1);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
      unsigned int v7 = *(const CoreNavigation::CLP::LogEntry::Raven::TimeStamp **)(CoreNavigation::CLP::LogEntry::Raven::NrParameters::default_instance_
                                                                     + 8);
    }
    double result = CoreNavigation::CLP::LogEntry::Raven::TimeStamp::MergeFrom(v6, v7);
    int v5 = *((_DWORD *)a2 + 40);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_36;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }
  double result = *((double *)a2 + 2);
  *((_DWORD *)this + 40) |= 2u;
  *((double *)this + 2) = result;
  int v5 = *((_DWORD *)a2 + 40);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_37;
  }
LABEL_36:
  double result = *((double *)a2 + 3);
  *((_DWORD *)this + 40) |= 4u;
  *((double *)this + 3) = result;
  int v5 = *((_DWORD *)a2 + 40);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_38;
  }
LABEL_37:
  double result = *((double *)a2 + 4);
  *((_DWORD *)this + 40) |= 8u;
  *((double *)this + 4) = result;
  int v5 = *((_DWORD *)a2 + 40);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_39:
    char v9 = *((unsigned char *)a2 + 153);
    *((_DWORD *)this + 40) |= 0x20u;
    *((unsigned char *)this + 153) = v9;
    int v5 = *((_DWORD *)a2 + 40);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_40;
  }
LABEL_38:
  char v8 = *((unsigned char *)a2 + 152);
  *((_DWORD *)this + 40) |= 0x10u;
  *((unsigned char *)this + 152) = v8;
  int v5 = *((_DWORD *)a2 + 40);
  if ((v5 & 0x20) != 0) {
    goto LABEL_39;
  }
LABEL_10:
  if ((v5 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_40:
  double result = *((double *)a2 + 5);
  *((_DWORD *)this + 40) |= 0x40u;
  *((double *)this + 5) = result;
  int v5 = *((_DWORD *)a2 + 40);
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    double result = *((double *)a2 + 6);
    *((_DWORD *)this + 40) |= 0x80u;
    *((double *)this + 6) = result;
    int v5 = *((_DWORD *)a2 + 40);
  }
LABEL_13:
  if ((v5 & 0xFF00) == 0) {
    goto LABEL_23;
  }
  if ((v5 & 0x100) != 0)
  {
    double result = *((double *)a2 + 7);
    *((_DWORD *)this + 40) |= 0x100u;
    *((double *)this + 7) = result;
    int v5 = *((_DWORD *)a2 + 40);
    if ((v5 & 0x200) == 0)
    {
LABEL_16:
      if ((v5 & 0x400) == 0) {
        goto LABEL_17;
      }
      goto LABEL_44;
    }
  }
  else if ((v5 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  double result = *((double *)a2 + 8);
  *((_DWORD *)this + 40) |= 0x200u;
  *((double *)this + 8) = result;
  int v5 = *((_DWORD *)a2 + 40);
  if ((v5 & 0x400) == 0)
  {
LABEL_17:
    if ((v5 & 0x800) == 0) {
      goto LABEL_18;
    }
    goto LABEL_45;
  }
LABEL_44:
  double result = *((double *)a2 + 9);
  *((_DWORD *)this + 40) |= 0x400u;
  *((double *)this + 9) = result;
  int v5 = *((_DWORD *)a2 + 40);
  if ((v5 & 0x800) == 0)
  {
LABEL_18:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_46;
  }
LABEL_45:
  double result = *((double *)a2 + 10);
  *((_DWORD *)this + 40) |= 0x800u;
  *((double *)this + 10) = result;
  int v5 = *((_DWORD *)a2 + 40);
  if ((v5 & 0x1000) == 0)
  {
LABEL_19:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_47;
  }
LABEL_46:
  double result = *((double *)a2 + 11);
  *((_DWORD *)this + 40) |= 0x1000u;
  *((double *)this + 11) = result;
  int v5 = *((_DWORD *)a2 + 40);
  if ((v5 & 0x2000) == 0)
  {
LABEL_20:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_48;
  }
LABEL_47:
  double result = *((double *)a2 + 12);
  *((_DWORD *)this + 40) |= 0x2000u;
  *((double *)this + 12) = result;
  int v5 = *((_DWORD *)a2 + 40);
  if ((v5 & 0x4000) == 0)
  {
LABEL_21:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_22;
  }
LABEL_48:
  double result = *((double *)a2 + 13);
  *((_DWORD *)this + 40) |= 0x4000u;
  *((double *)this + 13) = result;
  int v5 = *((_DWORD *)a2 + 40);
  if ((v5 & 0x8000) != 0)
  {
LABEL_22:
    double result = *((double *)a2 + 14);
    *((_DWORD *)this + 40) |= 0x8000u;
    *((double *)this + 14) = result;
    int v5 = *((_DWORD *)a2 + 40);
  }
LABEL_23:
  if ((v5 & 0xFF0000) == 0) {
    return result;
  }
  if ((v5 & 0x10000) != 0)
  {
    double result = *((double *)a2 + 15);
    *((_DWORD *)this + 40) |= 0x10000u;
    *((double *)this + 15) = result;
    int v5 = *((_DWORD *)a2 + 40);
    if ((v5 & 0x20000) == 0)
    {
LABEL_26:
      if ((v5 & 0x40000) == 0) {
        goto LABEL_27;
      }
      goto LABEL_52;
    }
  }
  else if ((v5 & 0x20000) == 0)
  {
    goto LABEL_26;
  }
  double result = *((double *)a2 + 16);
  *((_DWORD *)this + 40) |= 0x20000u;
  *((double *)this + 16) = result;
  int v5 = *((_DWORD *)a2 + 40);
  if ((v5 & 0x40000) == 0)
  {
LABEL_27:
    if ((v5 & 0x80000) == 0) {
      return result;
    }
    goto LABEL_28;
  }
LABEL_52:
  double result = *((double *)a2 + 17);
  *((_DWORD *)this + 40) |= 0x40000u;
  *((double *)this + 17) = result;
  if ((*((_DWORD *)a2 + 40) & 0x80000) == 0) {
    return result;
  }
LABEL_28:
  double result = *((double *)a2 + 18);
  *((_DWORD *)this + 40) |= 0x80000u;
  *((double *)this + 18) = result;
  return result;
}

void sub_18DF10838(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::Raven::NrBiases::MergeFrom(CoreNavigation::CLP::LogEntry::Raven::NrBiases *this, const CoreNavigation::CLP::LogEntry::Raven::NrBiases *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  int v5 = *((_DWORD *)a2 + 24);
  if (!(_BYTE)v5) {
    goto LABEL_13;
  }
  if (v5)
  {
    *((_DWORD *)this + 24) |= 1u;
    int v6 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((void *)this + 1);
    if (!v6) {
      operator new();
    }
    unsigned int v7 = (const CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((void *)a2 + 1);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
      unsigned int v7 = *(const CoreNavigation::CLP::LogEntry::Raven::TimeStamp **)(CoreNavigation::CLP::LogEntry::Raven::NrBiases::default_instance_
                                                                     + 8);
    }
    double result = CoreNavigation::CLP::LogEntry::Raven::TimeStamp::MergeFrom(v6, v7);
    int v5 = *((_DWORD *)a2 + 24);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_26;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }
  char v8 = *((unsigned char *)a2 + 88);
  *((_DWORD *)this + 24) |= 2u;
  *((unsigned char *)this + 88) = v8;
  int v5 = *((_DWORD *)a2 + 24);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_27;
  }
LABEL_26:
  char v9 = *((unsigned char *)a2 + 89);
  *((_DWORD *)this + 24) |= 4u;
  *((unsigned char *)this + 89) = v9;
  int v5 = *((_DWORD *)a2 + 24);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_28;
  }
LABEL_27:
  double result = *((double *)a2 + 2);
  *((_DWORD *)this + 24) |= 8u;
  *((double *)this + 2) = result;
  int v5 = *((_DWORD *)a2 + 24);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_29:
    double result = *((double *)a2 + 4);
    *((_DWORD *)this + 24) |= 0x20u;
    *((double *)this + 4) = result;
    int v5 = *((_DWORD *)a2 + 24);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_30;
  }
LABEL_28:
  double result = *((double *)a2 + 3);
  *((_DWORD *)this + 24) |= 0x10u;
  *((double *)this + 3) = result;
  int v5 = *((_DWORD *)a2 + 24);
  if ((v5 & 0x20) != 0) {
    goto LABEL_29;
  }
LABEL_10:
  if ((v5 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_30:
  double result = *((double *)a2 + 5);
  *((_DWORD *)this + 24) |= 0x40u;
  *((double *)this + 5) = result;
  int v5 = *((_DWORD *)a2 + 24);
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    double result = *((double *)a2 + 6);
    *((_DWORD *)this + 24) |= 0x80u;
    *((double *)this + 6) = result;
    int v5 = *((_DWORD *)a2 + 24);
  }
LABEL_13:
  if ((v5 & 0xFF00) == 0) {
    return result;
  }
  if ((v5 & 0x100) != 0)
  {
    double result = *((double *)a2 + 7);
    *((_DWORD *)this + 24) |= 0x100u;
    *((double *)this + 7) = result;
    int v5 = *((_DWORD *)a2 + 24);
    if ((v5 & 0x200) == 0)
    {
LABEL_16:
      if ((v5 & 0x400) == 0) {
        goto LABEL_17;
      }
      goto LABEL_34;
    }
  }
  else if ((v5 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  double result = *((double *)a2 + 8);
  *((_DWORD *)this + 24) |= 0x200u;
  *((double *)this + 8) = result;
  int v5 = *((_DWORD *)a2 + 24);
  if ((v5 & 0x400) == 0)
  {
LABEL_17:
    if ((v5 & 0x800) == 0) {
      return result;
    }
    goto LABEL_18;
  }
LABEL_34:
  double result = *((double *)a2 + 9);
  *((_DWORD *)this + 24) |= 0x400u;
  *((double *)this + 9) = result;
  if ((*((_DWORD *)a2 + 24) & 0x800) == 0) {
    return result;
  }
LABEL_18:
  double result = *((double *)a2 + 10);
  *((_DWORD *)this + 24) |= 0x800u;
  *((double *)this + 10) = result;
  return result;
}

void sub_18DF10AC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth::MergeFrom(CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth *this, const CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v34);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth *)((char *)this + 64));
  if (*((int *)a2 + 18) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      int v5 = *(const CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount **)(*((void *)a2 + 8) + 8 * v4);
      int v6 = *((_DWORD *)this + 19);
      uint64_t v7 = *((int *)this + 18);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 20))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth *)((char *)this + 64));
          int v6 = *((_DWORD *)this + 19);
        }
        *((_DWORD *)this + 19) = v6 + 1;
        operator new();
      }
      uint64_t v8 = *((void *)this + 8);
      *((_DWORD *)this + 18) = v7 + 1;
      CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::MergeFrom(*(CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 18));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth *)((char *)this + 88));
  if (*((int *)a2 + 24) >= 1)
  {
    uint64_t v9 = 0;
    do
    {
      uint64_t v10 = *(const CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount **)(*((void *)a2 + 11) + 8 * v9);
      int v11 = *((_DWORD *)this + 25);
      uint64_t v12 = *((int *)this + 24);
      if ((int)v12 >= v11)
      {
        if (v11 == *((_DWORD *)this + 26))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth *)((char *)this + 88));
          int v11 = *((_DWORD *)this + 25);
        }
        *((_DWORD *)this + 25) = v11 + 1;
        operator new();
      }
      uint64_t v13 = *((void *)this + 11);
      *((_DWORD *)this + 24) = v12 + 1;
      CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::MergeFrom(*(CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount **)(v13 + 8 * v12), v10);
      ++v9;
    }
    while (v9 < *((int *)a2 + 24));
  }
  unsigned int v14 = (CoreNavigation::CLP::LogEntry::Raven *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth *)((char *)this + 112));
  if (*((int *)a2 + 30) >= 1)
  {
    uint64_t v15 = 0;
    do
    {
      uint64_t v16 = *(const CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount **)(*((void *)a2 + 14) + 8 * v15);
      int v17 = *((_DWORD *)this + 31);
      uint64_t v18 = *((int *)this + 30);
      if ((int)v18 >= v17)
      {
        if (v17 == *((_DWORD *)this + 32))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth *)((char *)this + 112));
          int v17 = *((_DWORD *)this + 31);
        }
        *((_DWORD *)this + 31) = v17 + 1;
        operator new();
      }
      uint64_t v19 = *((void *)this + 14);
      *((_DWORD *)this + 30) = v18 + 1;
      CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::MergeFrom(*(CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount **)(v19 + 8 * v18), v16);
      ++v15;
    }
    while (v15 < *((int *)a2 + 30));
  }
  int v20 = *((_DWORD *)a2 + 42);
  if (!(_BYTE)v20) {
    goto LABEL_43;
  }
  if (v20)
  {
    *((_DWORD *)this + 42) |= 1u;
    uint64_t v21 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((void *)this + 1);
    if (!v21) {
      operator new();
    }
    uint64_t v22 = (const CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((void *)a2 + 1);
    if (!v22)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(v14);
      uint64_t v22 = *(const CoreNavigation::CLP::LogEntry::Raven::TimeStamp **)(CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth::default_instance_
                                                                      + 8);
    }
    CoreNavigation::CLP::LogEntry::Raven::TimeStamp::MergeFrom(v21, v22);
    int v20 = *((_DWORD *)a2 + 42);
  }
  if ((v20 & 2) != 0)
  {
    unsigned int v23 = *((_DWORD *)a2 + 14);
    if (v23 >= 4) {
      __assert_rtn("set_health", "CoreNavigationCLPRavenOutput.pb.h", 4798, "::CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth_NrEstimatorHealthType_IsValid(value)");
    }
    *((_DWORD *)this + 42) |= 2u;
    *((_DWORD *)this + 14) = v23;
    int v20 = *((_DWORD *)a2 + 42);
  }
  if ((v20 & 4) != 0)
  {
    uint64_t v30 = *((void *)a2 + 2);
    *((_DWORD *)this + 42) |= 4u;
    *((void *)this + 2) = v30;
    int v20 = *((_DWORD *)a2 + 42);
    if ((v20 & 8) == 0)
    {
LABEL_39:
      if ((v20 & 0x10) == 0) {
        goto LABEL_40;
      }
LABEL_58:
      uint64_t v32 = *((void *)a2 + 4);
      *((_DWORD *)this + 42) |= 0x10u;
      *((void *)this + 4) = v32;
      int v20 = *((_DWORD *)a2 + 42);
      if ((v20 & 0x20) == 0)
      {
LABEL_41:
        if ((v20 & 0x40) == 0) {
          goto LABEL_43;
        }
        goto LABEL_42;
      }
      goto LABEL_59;
    }
  }
  else if ((v20 & 8) == 0)
  {
    goto LABEL_39;
  }
  uint64_t v31 = *((void *)a2 + 3);
  *((_DWORD *)this + 42) |= 8u;
  *((void *)this + 3) = v31;
  int v20 = *((_DWORD *)a2 + 42);
  if ((v20 & 0x10) != 0) {
    goto LABEL_58;
  }
LABEL_40:
  if ((v20 & 0x20) == 0) {
    goto LABEL_41;
  }
LABEL_59:
  uint64_t v33 = *((void *)a2 + 5);
  *((_DWORD *)this + 42) |= 0x20u;
  *((void *)this + 5) = v33;
  int v20 = *((_DWORD *)a2 + 42);
  if ((v20 & 0x40) != 0)
  {
LABEL_42:
    uint64_t v24 = *((void *)a2 + 6);
    *((_DWORD *)this + 42) |= 0x40u;
    *((void *)this + 6) = v24;
    int v20 = *((_DWORD *)a2 + 42);
  }
LABEL_43:
  if ((v20 & 0x3FC00) == 0) {
    return;
  }
  if ((v20 & 0x400) != 0)
  {
    uint64_t v26 = *((void *)a2 + 17);
    *((_DWORD *)this + 42) |= 0x400u;
    *((void *)this + 17) = v26;
    int v20 = *((_DWORD *)a2 + 42);
    if ((v20 & 0x800) == 0)
    {
LABEL_46:
      if ((v20 & 0x1000) == 0) {
        goto LABEL_47;
      }
      goto LABEL_53;
    }
  }
  else if ((v20 & 0x800) == 0)
  {
    goto LABEL_46;
  }
  uint64_t v27 = *((void *)a2 + 18);
  *((_DWORD *)this + 42) |= 0x800u;
  *((void *)this + 18) = v27;
  int v20 = *((_DWORD *)a2 + 42);
  if ((v20 & 0x1000) == 0)
  {
LABEL_47:
    if ((v20 & 0x2000) == 0) {
      goto LABEL_48;
    }
    goto LABEL_54;
  }
LABEL_53:
  int v28 = *((_DWORD *)a2 + 15);
  *((_DWORD *)this + 42) |= 0x1000u;
  *((_DWORD *)this + 15) = v28;
  int v20 = *((_DWORD *)a2 + 42);
  if ((v20 & 0x2000) == 0)
  {
LABEL_48:
    if ((v20 & 0x4000) == 0) {
      return;
    }
    goto LABEL_49;
  }
LABEL_54:
  int v29 = *((_DWORD *)a2 + 40);
  *((_DWORD *)this + 42) |= 0x2000u;
  *((_DWORD *)this + 40) = v29;
  if ((*((_DWORD *)a2 + 42) & 0x4000) != 0)
  {
LABEL_49:
    uint64_t v25 = *((void *)a2 + 19);
    *((_DWORD *)this + 42) |= 0x4000u;
    *((void *)this + 19) = v25;
  }
}

void sub_18DF11030(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Raven::RavenOutput::CopyFrom(CoreNavigation::CLP::LogEntry::Raven::RavenOutput *this, const CoreNavigation::CLP::LogEntry::Raven::RavenOutput *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Raven::RavenOutput *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::Raven::RavenOutput::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::RavenOutput::IsInitialized(CoreNavigation::CLP::LogEntry::Raven::RavenOutput *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::RavenOutput::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::Raven::RavenOutput *a2)
{
  if (a2 != (CoreNavigation::CLP::LogEntry::Raven::RavenOutput *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    uint64_t v3 = *(void *)(this + 16);
    *(void *)(this + 16) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    uint64_t v4 = *(void *)(this + 24);
    *(void *)(this + 24) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v4;
    uint64_t v5 = *(void *)(this + 32);
    *(void *)(this + 32) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v5;
    uint64_t v6 = *(void *)(this + 40);
    *(void *)(this + 40) = *((void *)a2 + 5);
    *((void *)a2 + 5) = v6;
    uint64_t v7 = *(void *)(this + 48);
    *(void *)(this + 48) = *((void *)a2 + 6);
    *((void *)a2 + 6) = v7;
    LODWORD(v7) = *(_DWORD *)(this + 60);
    *(_DWORD *)(this + 60) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v7;
    LODWORD(v7) = *(_DWORD *)(this + 56);
    *(_DWORD *)(this + 56) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v7;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::Raven::RavenOutput::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.Raven.RavenOutput");
}

void *CoreNavigation::CLP::LogEntry::Raven::TimeStruct::SharedCtor(void *this)
{
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::Raven::TimeStruct *CoreNavigation::CLP::LogEntry::Raven::TimeStruct::TimeStruct(CoreNavigation::CLP::LogEntry::Raven::TimeStruct *this, const CoreNavigation::CLP::LogEntry::Raven::TimeStruct *a2)
{
  *(void *)this = &unk_1EDD10C40;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  CoreNavigation::CLP::LogEntry::Raven::TimeStruct::MergeFrom(this, a2);
  return this;
}

void sub_18DF111D0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::Raven::TimeStruct::MergeFrom(CoreNavigation::CLP::LogEntry::Raven::TimeStruct *this, const CoreNavigation::CLP::LogEntry::Raven::TimeStruct *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 28);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 28))
    {
      uint64_t v6 = *((void *)a2 + 1);
      *((_DWORD *)this + 7) |= 1u;
      *((void *)this + 1) = v6;
      int v5 = *((_DWORD *)a2 + 7);
    }
    if ((v5 & 2) != 0)
    {
      double result = *((double *)a2 + 2);
      *((_DWORD *)this + 7) |= 2u;
      *((double *)this + 2) = result;
    }
  }
  return result;
}

void sub_18DF11290(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Raven::TimeStruct::~TimeStruct(CoreNavigation::CLP::LogEntry::Raven::TimeStruct *this)
{
  *(void *)this = &unk_1EDD10C40;
  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::Raven::TimeStruct::~TimeStruct(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::TimeStruct::default_instance(CoreNavigation::CLP::LogEntry::Raven::TimeStruct *this)
{
  return CoreNavigation::CLP::LogEntry::Raven::TimeStruct::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::TimeStruct::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 24) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::Raven::TimeStruct::New(CoreNavigation::CLP::LogEntry::Raven::TimeStruct *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::TimeStruct::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 28))
  {
    *(void *)(this + 8) = 0;
    *(void *)(this + 16) = 0;
  }
  *(_DWORD *)(this + 28) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::TimeStruct::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Raven::TimeStruct *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v4 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v4;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((void *)a2 + 1) = v4 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_15;
        }
        unint64_t v12 = 0;
        uint64_t v8 = (char *)*((void *)a2 + 1);
        unint64_t v7 = *((void *)a2 + 2);
        if ((unint64_t)v8 >= v7 || *v8 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, &v12);
          if (!result) {
            return result;
          }
          unint64_t v9 = v12;
          uint64_t v10 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v7 = *((void *)a2 + 2);
        }
        else
        {
          unint64_t v9 = *v8;
          uint64_t v10 = v8 + 1;
          *((void *)a2 + 1) = v10;
        }
        *((void *)this + 1) = v9;
        *((_DWORD *)this + 7) |= 1u;
        if ((unint64_t)v10 < v7 && *v10 == 17)
        {
          *((void *)a2 + 1) = v10 + 1;
          goto LABEL_23;
        }
      }
      if (TagFallback >> 3 != 2) {
        break;
      }
      int v6 = TagFallback & 7;
      if (v6 != 1) {
        goto LABEL_15;
      }
LABEL_23:
      unint64_t v12 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v12) & 1) == 0) {
        return 0;
      }
      *((void *)this + 2) = v12;
      *((_DWORD *)this + 7) |= 2u;
      if (*((void *)a2 + 1) == *((void *)a2 + 2)
        && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      }
    }
    int v6 = TagFallback & 7;
LABEL_15:
    if (v6 == 4) {
      return 1;
    }
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0);
  return 0;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::TimeStruct::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 28);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 28);
  }
  if ((v6 & 2) != 0)
  {
    double v7 = *(double *)(v5 + 16);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, v7, a3);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::TimeStruct::ByteSize(CoreNavigation::CLP::LogEntry::Raven::TimeStruct *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 28);
  if ((_BYTE)v2)
  {
    if (*((unsigned char *)this + 28))
    {
      unsigned int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                       + 1))
         + 1;
      int v2 = *((_DWORD *)this + 7);
    }
    else
    {
      unsigned int v3 = 0;
    }
    if ((v2 & 2) != 0) {
      uint64_t result = v3 + 9;
    }
    else {
      uint64_t result = v3;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  *((_DWORD *)this + 6) = result;
  return result;
}

double CoreNavigation::CLP::LogEntry::Raven::TimeStruct::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Raven::TimeStruct *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::Raven::TimeStruct::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::Raven::TimeStruct::CopyFrom(CoreNavigation::CLP::LogEntry::Raven::TimeStruct *this, const CoreNavigation::CLP::LogEntry::Raven::TimeStruct *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Raven::TimeStruct *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::Raven::TimeStruct::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::TimeStruct::IsInitialized(CoreNavigation::CLP::LogEntry::Raven::TimeStruct *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::Raven::TimeStruct::Swap(CoreNavigation::CLP::LogEntry::Raven::TimeStruct *this, CoreNavigation::CLP::LogEntry::Raven::TimeStruct *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    double result = *((double *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((double *)a2 + 2) = result;
    LODWORD(v2) = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LODWORD(v2) = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::Raven::TimeStruct::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.Raven.TimeStruct");
}

double CoreNavigation::CLP::LogEntry::Raven::TimeStamp::SharedCtor(CoreNavigation::CLP::LogEntry::Raven::TimeStamp *this)
{
  double result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::Raven::TimeStamp *CoreNavigation::CLP::LogEntry::Raven::TimeStamp::TimeStamp(CoreNavigation::CLP::LogEntry::Raven::TimeStamp *this, const CoreNavigation::CLP::LogEntry::Raven::TimeStamp *a2)
{
  *(void *)this = &unk_1EDD11618;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  CoreNavigation::CLP::LogEntry::Raven::TimeStamp::MergeFrom(this, a2);
  return this;
}

void sub_18DF11828(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::Raven::TimeStamp::MergeFrom(CoreNavigation::CLP::LogEntry::Raven::TimeStamp *this, const CoreNavigation::CLP::LogEntry::Raven::TimeStamp *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 52);
  if (!(_BYTE)v5) {
    return result;
  }
  if (*((unsigned char *)a2 + 52))
  {
    *((_DWORD *)this + 13) |= 1u;
    int v6 = (CoreNavigation::CLP::LogEntry::Raven::TimeStruct *)*((void *)this + 1);
    if (!v6) {
      operator new();
    }
    double v7 = (const CoreNavigation::CLP::LogEntry::Raven::TimeStruct *)*((void *)a2 + 1);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
      double v7 = *(const CoreNavigation::CLP::LogEntry::Raven::TimeStruct **)(CoreNavigation::CLP::LogEntry::Raven::TimeStamp::default_instance_
                                                                      + 8);
    }
    double result = CoreNavigation::CLP::LogEntry::Raven::TimeStruct::MergeFrom(v6, v7);
    int v5 = *((_DWORD *)a2 + 13);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
LABEL_21:
      *((_DWORD *)this + 13) |= 4u;
      uint64_t v10 = (CoreNavigation::CLP::LogEntry::Raven::TimeStruct *)*((void *)this + 3);
      if (!v10) {
        operator new();
      }
      int v11 = (const CoreNavigation::CLP::LogEntry::Raven::TimeStruct *)*((void *)a2 + 3);
      if (!v11)
      {
        CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
        int v11 = *(const CoreNavigation::CLP::LogEntry::Raven::TimeStruct **)(CoreNavigation::CLP::LogEntry::Raven::TimeStamp::default_instance_
                                                                         + 24);
      }
      double result = CoreNavigation::CLP::LogEntry::Raven::TimeStruct::MergeFrom(v10, v11);
      int v5 = *((_DWORD *)a2 + 13);
      if ((v5 & 8) == 0)
      {
LABEL_8:
        if ((v5 & 0x10) == 0) {
          return result;
        }
        goto LABEL_9;
      }
      goto LABEL_26;
    }
  }
  else if ((*((unsigned char *)a2 + 52) & 2) == 0)
  {
    goto LABEL_6;
  }
  *((_DWORD *)this + 13) |= 2u;
  uint64_t v8 = (CoreNavigation::CLP::LogEntry::Raven::TimeStruct *)*((void *)this + 2);
  if (!v8) {
    operator new();
  }
  unint64_t v9 = (const CoreNavigation::CLP::LogEntry::Raven::TimeStruct *)*((void *)a2 + 2);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
    unint64_t v9 = *(const CoreNavigation::CLP::LogEntry::Raven::TimeStruct **)(CoreNavigation::CLP::LogEntry::Raven::TimeStamp::default_instance_
                                                                    + 16);
  }
  double result = CoreNavigation::CLP::LogEntry::Raven::TimeStruct::MergeFrom(v8, v9);
  int v5 = *((_DWORD *)a2 + 13);
  if ((v5 & 4) != 0) {
    goto LABEL_21;
  }
LABEL_7:
  if ((v5 & 8) == 0) {
    goto LABEL_8;
  }
LABEL_26:
  *((_DWORD *)this + 13) |= 8u;
  unint64_t v12 = (CoreNavigation::CLP::LogEntry::Raven::TimeStruct *)*((void *)this + 4);
  if (!v12) {
    operator new();
  }
  uint64_t v13 = (const CoreNavigation::CLP::LogEntry::Raven::TimeStruct *)*((void *)a2 + 4);
  if (!v13)
  {
    CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
    uint64_t v13 = *(const CoreNavigation::CLP::LogEntry::Raven::TimeStruct **)(CoreNavigation::CLP::LogEntry::Raven::TimeStamp::default_instance_
                                                                     + 32);
  }
  double result = CoreNavigation::CLP::LogEntry::Raven::TimeStruct::MergeFrom(v12, v13);
  if ((*((_DWORD *)a2 + 13) & 0x10) != 0)
  {
LABEL_9:
    double result = *((double *)a2 + 5);
    *((_DWORD *)this + 13) |= 0x10u;
    *((double *)this + 5) = result;
  }
  return result;
}

void sub_18DF11AD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Raven::TimeStamp::~TimeStamp(CoreNavigation::CLP::LogEntry::Raven::TimeStamp *this)
{
  *(void *)this = &unk_1EDD11618;
  CoreNavigation::CLP::LogEntry::Raven::TimeStamp::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::Raven::TimeStamp::~TimeStamp(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::Raven::TimeStamp::SharedDtor(CoreNavigation::CLP::LogEntry::Raven::TimeStamp *this)
{
  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)CoreNavigation::CLP::LogEntry::Raven::TimeStamp::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 2);
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = *((void *)this + 3);
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = *((void *)this + 4);
    if (v5)
    {
      int v6 = *(void (**)(void))(*(void *)v5 + 8);
      v6();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::TimeStamp::default_instance(CoreNavigation::CLP::LogEntry::Raven::TimeStamp *this)
{
  return CoreNavigation::CLP::LogEntry::Raven::TimeStamp::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::TimeStamp::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 48) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::Raven::TimeStamp::New(CoreNavigation::CLP::LogEntry::Raven::TimeStamp *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::TimeStamp::Clear(uint64_t this)
{
  LOBYTE(v1) = *(unsigned char *)(this + 52);
  if ((_BYTE)v1)
  {
    if (*(unsigned char *)(this + 52))
    {
      uint64_t v2 = *(void *)(this + 8);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 28))
        {
          *(void *)(v2 + 8) = 0;
          *(void *)(v2 + 16) = 0;
        }
        *(_DWORD *)(v2 + 28) = 0;
        int v1 = *(_DWORD *)(this + 52);
      }
    }
    if ((v1 & 2) != 0)
    {
      uint64_t v3 = *(void *)(this + 16);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 28))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
        }
        *(_DWORD *)(v3 + 28) = 0;
        int v1 = *(_DWORD *)(this + 52);
      }
    }
    if ((v1 & 4) != 0)
    {
      uint64_t v4 = *(void *)(this + 24);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 28))
        {
          *(void *)(v4 + 8) = 0;
          *(void *)(v4 + 16) = 0;
        }
        *(_DWORD *)(v4 + 28) = 0;
        int v1 = *(_DWORD *)(this + 52);
      }
    }
    if ((v1 & 8) != 0)
    {
      uint64_t v5 = *(void *)(this + 32);
      if (v5)
      {
        if (*(unsigned char *)(v5 + 28))
        {
          *(void *)(v5 + 8) = 0;
          *(void *)(v5 + 16) = 0;
        }
        *(_DWORD *)(v5 + 28) = 0;
      }
    }
    *(void *)(this + 40) = 0;
  }
  *(_DWORD *)(this + 52) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::TimeStamp::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Raven::TimeStamp *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (1)
  {
    uint64_t v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 < *((void *)a2 + 2) && (*v4 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_6;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_6:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_21;
        }
        *((_DWORD *)this + 13) |= 1u;
        double v7 = (CoreNavigation::CLP::LogEntry::Raven::TimeStruct *)*((void *)this + 1);
        if (!v7) {
          operator new();
        }
        v37[0] = 0;
        uint64_t v8 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v37))return 0; {
        }
          }
        else
        {
          v37[0] = *v8;
          *((void *)a2 + 1) = v8 + 1;
        }
        int v9 = *((_DWORD *)a2 + 14);
        int v10 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v9 + 1;
        if (v9 >= v10) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::TimeStruct::MergePartialFromCodedStream(v7, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v11 = *((_DWORD *)a2 + 14);
        BOOL v12 = __OFSUB__(v11, 1);
        int v13 = v11 - 1;
        if (v13 < 0 == v12) {
          *((_DWORD *)a2 + 14) = v13;
        }
        unsigned int v14 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v14 >= *((void *)a2 + 2) || *v14 != 18) {
          continue;
        }
        *((void *)a2 + 1) = v14 + 1;
        goto LABEL_33;
      case 2u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_21;
        }
LABEL_33:
        *((_DWORD *)this + 13) |= 2u;
        uint64_t v15 = (CoreNavigation::CLP::LogEntry::Raven::TimeStruct *)*((void *)this + 2);
        if (!v15) {
          operator new();
        }
        v37[0] = 0;
        uint64_t v16 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v16 >= *((void *)a2 + 2) || *v16 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v37))return 0; {
        }
          }
        else
        {
          v37[0] = *v16;
          *((void *)a2 + 1) = v16 + 1;
        }
        int v17 = *((_DWORD *)a2 + 14);
        int v18 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v17 + 1;
        if (v17 >= v18) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::TimeStruct::MergePartialFromCodedStream(v15, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v19 = *((_DWORD *)a2 + 14);
        BOOL v12 = __OFSUB__(v19, 1);
        int v20 = v19 - 1;
        if (v20 < 0 == v12) {
          *((_DWORD *)a2 + 14) = v20;
        }
        uint64_t v21 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v21 >= *((void *)a2 + 2) || *v21 != 26) {
          continue;
        }
        *((void *)a2 + 1) = v21 + 1;
LABEL_47:
        *((_DWORD *)this + 13) |= 4u;
        uint64_t v22 = (CoreNavigation::CLP::LogEntry::Raven::TimeStruct *)*((void *)this + 3);
        if (!v22) {
          operator new();
        }
        v37[0] = 0;
        unsigned int v23 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v23 >= *((void *)a2 + 2) || *v23 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v37))return 0; {
        }
          }
        else
        {
          v37[0] = *v23;
          *((void *)a2 + 1) = v23 + 1;
        }
        int v24 = *((_DWORD *)a2 + 14);
        int v25 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v24 + 1;
        if (v24 >= v25) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::TimeStruct::MergePartialFromCodedStream(v22, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v26 = *((_DWORD *)a2 + 14);
        BOOL v12 = __OFSUB__(v26, 1);
        int v27 = v26 - 1;
        if (v27 < 0 == v12) {
          *((_DWORD *)a2 + 14) = v27;
        }
        int v28 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v28 >= *((void *)a2 + 2) || *v28 != 34) {
          continue;
        }
        *((void *)a2 + 1) = v28 + 1;
LABEL_61:
        *((_DWORD *)this + 13) |= 8u;
        int v29 = (CoreNavigation::CLP::LogEntry::Raven::TimeStruct *)*((void *)this + 4);
        if (!v29) {
          operator new();
        }
        v37[0] = 0;
        uint64_t v30 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v30 >= *((void *)a2 + 2) || *v30 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v37))return 0; {
        }
          }
        else
        {
          v37[0] = *v30;
          *((void *)a2 + 1) = v30 + 1;
        }
        int v31 = *((_DWORD *)a2 + 14);
        int v32 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v31 + 1;
        if (v31 >= v32) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::TimeStruct::MergePartialFromCodedStream(v29, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v33 = *((_DWORD *)a2 + 14);
        BOOL v12 = __OFSUB__(v33, 1);
        int v34 = v33 - 1;
        if (v34 < 0 == v12) {
          *((_DWORD *)a2 + 14) = v34;
        }
        unsigned int v35 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v35 >= *((void *)a2 + 2) || *v35 != 41) {
          continue;
        }
        *((void *)a2 + 1) = v35 + 1;
LABEL_75:
        *(void *)unsigned int v37 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v37) & 1) == 0)return 0; {
        *((void *)this + 5) = *(void *)v37;
        }
        *((_DWORD *)this + 13) |= 0x10u;
        if (*((void *)a2 + 1) == *((void *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
        break;
      case 3u:
        int v6 = TagFallback & 7;
        if (v6 == 2) {
          goto LABEL_47;
        }
        goto LABEL_21;
      case 4u:
        int v6 = TagFallback & 7;
        if (v6 == 2) {
          goto LABEL_61;
        }
        goto LABEL_21;
      case 5u:
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_21;
        }
        goto LABEL_75;
      default:
        int v6 = TagFallback & 7;
LABEL_21:
        if (v6 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::TimeStamp::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 52);
  if (v6)
  {
    uint64_t v7 = *(void *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto((CoreNavigation::CLP::LogEntry::Raven *)this);
      uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::Raven::TimeStamp::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 52);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto((CoreNavigation::CLP::LogEntry::Raven *)this);
    uint64_t v8 = *(void *)(CoreNavigation::CLP::LogEntry::Raven::TimeStamp::default_instance_ + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_13:
  uint64_t v9 = *(void *)(v5 + 24);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto((CoreNavigation::CLP::LogEntry::Raven *)this);
    uint64_t v9 = *(void *)(CoreNavigation::CLP::LogEntry::Raven::TimeStamp::default_instance_ + 24);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v9, a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      return this;
    }
    goto LABEL_19;
  }
LABEL_16:
  uint64_t v10 = *(void *)(v5 + 32);
  if (!v10)
  {
    CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto((CoreNavigation::CLP::LogEntry::Raven *)this);
    uint64_t v10 = *(void *)(CoreNavigation::CLP::LogEntry::Raven::TimeStamp::default_instance_ + 32);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v10, a2, a4);
  if ((*(_DWORD *)(v5 + 52) & 0x10) != 0)
  {
LABEL_19:
    double v11 = *(double *)(v5 + 40);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, v11, a3);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::TimeStamp::ByteSize(CoreNavigation::CLP::LogEntry::Raven::TimeStamp *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 52);
  if (!(_BYTE)v2)
  {
    uint64_t result = 0;
    goto LABEL_36;
  }
  if ((*((unsigned char *)this + 52) & 1) == 0)
  {
    unsigned int v3 = 0;
    if ((*((unsigned char *)this + 52) & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  uint64_t v5 = (CoreNavigation::CLP::LogEntry::Raven::TimeStruct *)*((void *)this + 1);
  if (!v5)
  {
    CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(0);
    uint64_t v5 = *(CoreNavigation::CLP::LogEntry::Raven::TimeStruct **)(CoreNavigation::CLP::LogEntry::Raven::TimeStamp::default_instance_
                                                              + 8);
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::TimeStruct::ByteSize(v5);
  int v7 = (int)v6;
  if (v6 >= 0x80) {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
  }
  else {
    int v8 = 1;
  }
  unsigned int v3 = v7 + v8 + 1;
  int v2 = *((_DWORD *)this + 13);
  if ((v2 & 2) != 0)
  {
LABEL_12:
    uint64_t v9 = (CoreNavigation::CLP::LogEntry::Raven::TimeStruct *)*((void *)this + 2);
    if (!v9)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(0);
      uint64_t v9 = *(CoreNavigation::CLP::LogEntry::Raven::TimeStruct **)(CoreNavigation::CLP::LogEntry::Raven::TimeStamp::default_instance_
                                                                + 16);
    }
    uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::TimeStruct::ByteSize(v9);
    int v11 = (int)v10;
    if (v10 >= 0x80) {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
    }
    else {
      int v12 = 1;
    }
    v3 += v11 + v12 + 1;
    int v2 = *((_DWORD *)this + 13);
  }
LABEL_18:
  if ((v2 & 4) != 0)
  {
    int v13 = (CoreNavigation::CLP::LogEntry::Raven::TimeStruct *)*((void *)this + 3);
    if (!v13)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(0);
      int v13 = *(CoreNavigation::CLP::LogEntry::Raven::TimeStruct **)(CoreNavigation::CLP::LogEntry::Raven::TimeStamp::default_instance_
                                                                 + 24);
    }
    unsigned int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::TimeStruct::ByteSize(v13);
    int v15 = (int)v14;
    if (v14 >= 0x80) {
      int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14);
    }
    else {
      int v16 = 1;
    }
    v3 += v15 + v16 + 1;
    int v2 = *((_DWORD *)this + 13);
    if ((v2 & 8) == 0) {
      goto LABEL_33;
    }
    goto LABEL_27;
  }
  if ((v2 & 8) != 0)
  {
LABEL_27:
    int v17 = (CoreNavigation::CLP::LogEntry::Raven::TimeStruct *)*((void *)this + 4);
    if (!v17)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(0);
      int v17 = *(CoreNavigation::CLP::LogEntry::Raven::TimeStruct **)(CoreNavigation::CLP::LogEntry::Raven::TimeStamp::default_instance_
                                                                 + 32);
    }
    int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::TimeStruct::ByteSize(v17);
    int v19 = (int)v18;
    if (v18 >= 0x80) {
      int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18);
    }
    else {
      int v20 = 1;
    }
    v3 += v19 + v20 + 1;
    int v2 = *((_DWORD *)this + 13);
  }
LABEL_33:
  if ((v2 & 0x10) != 0) {
    uint64_t result = v3 + 9;
  }
  else {
    uint64_t result = v3;
  }
LABEL_36:
  *((_DWORD *)this + 12) = result;
  return result;
}

double CoreNavigation::CLP::LogEntry::Raven::TimeStamp::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Raven::TimeStamp *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::Raven::TimeStamp::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::Raven::TimeStamp::CopyFrom(CoreNavigation::CLP::LogEntry::Raven::TimeStamp *this, const CoreNavigation::CLP::LogEntry::Raven::TimeStamp *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Raven::TimeStamp *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::Raven::TimeStamp::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::TimeStamp::IsInitialized(CoreNavigation::CLP::LogEntry::Raven::TimeStamp *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::Raven::TimeStamp::Swap(CoreNavigation::CLP::LogEntry::Raven::TimeStamp *this, CoreNavigation::CLP::LogEntry::Raven::TimeStamp *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    uint64_t v3 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    uint64_t v4 = *((void *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v4;
    uint64_t v5 = *((void *)this + 4);
    *((void *)this + 4) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v5;
    double result = *((double *)this + 5);
    *((void *)this + 5) = *((void *)a2 + 5);
    *((double *)a2 + 5) = result;
    LODWORD(v5) = *((_DWORD *)this + 13);
    *((_DWORD *)this + 13) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v5;
    LODWORD(v5) = *((_DWORD *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v5;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::Raven::TimeStamp::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.Raven.TimeStamp");
}

BOOL CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount_MeasurementType_IsValid(CoreNavigation::CLP::LogEntry::Raven *this)
{
  return this < 0x24;
}

double CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::SharedCtor(CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount *this)
{
  *((_DWORD *)this + 10) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount *CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::MeasurementTypeCount(CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount *this, const CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount *a2)
{
  *(void *)this = &unk_1EDD112D0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 0;
  CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::MergeFrom(this, a2);
  return this;
}

void sub_18DF12820(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::MergeFrom(CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount *this, const CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 40);
  if (!(_BYTE)v4) {
    return;
  }
  if ((*((unsigned char *)a2 + 40) & 1) == 0)
  {
    if ((*((unsigned char *)a2 + 40) & 2) == 0) {
      goto LABEL_6;
    }
LABEL_11:
    uint64_t v7 = *((void *)a2 + 2);
    *((_DWORD *)this + 10) |= 2u;
    *((void *)this + 2) = v7;
    int v4 = *((_DWORD *)a2 + 10);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        return;
      }
      goto LABEL_8;
    }
    goto LABEL_12;
  }
  uint64_t v6 = *((void *)a2 + 1);
  *((_DWORD *)this + 10) |= 1u;
  *((void *)this + 1) = v6;
  int v4 = *((_DWORD *)a2 + 10);
  if ((v4 & 2) != 0) {
    goto LABEL_11;
  }
LABEL_6:
  if ((v4 & 4) == 0) {
    goto LABEL_7;
  }
LABEL_12:
  unsigned int v8 = *((_DWORD *)a2 + 8);
  if (v8 >= 0x24) {
    __assert_rtn("set_type", "CoreNavigationCLPRavenOutput.pb.h", 4707, "::CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount_MeasurementType_IsValid(value)");
  }
  *((_DWORD *)this + 10) |= 4u;
  *((_DWORD *)this + 8) = v8;
  if ((*((_DWORD *)a2 + 10) & 8) != 0)
  {
LABEL_8:
    uint64_t v5 = *((void *)a2 + 3);
    *((_DWORD *)this + 10) |= 8u;
    *((void *)this + 3) = v5;
  }
}

void sub_18DF12950(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::~MeasurementTypeCount(CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount *this)
{
  *(void *)this = &unk_1EDD112D0;
  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::~MeasurementTypeCount(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::default_instance(CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount *this)
{
  return CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 36) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::New(CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 40))
  {
    *(void *)(this + 8) = 0;
    *(void *)(this + 16) = 0;
    *(_DWORD *)(this + 32) = 0;
    *(void *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 40) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unint64_t *)((char *)this + 8);
  uint64_t v5 = (unint64_t *)((char *)this + 16);
  uint64_t v6 = (unint64_t *)((char *)this + 24);
  while (2)
  {
    uint64_t v7 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v7 >= *((void *)a2 + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        int v11 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
        if ((unint64_t)v11 < v10 && (*v11 & 0x80000000) == 0)
        {
          unint64_t *v4 = *v11;
          int v12 = v11 + 1;
          *((void *)a2 + 1) = v12;
LABEL_24:
          *((_DWORD *)this + 10) |= 1u;
          if ((unint64_t)v12 < v10 && *v12 == 16)
          {
            int v13 = v12 + 1;
            *((void *)a2 + 1) = v13;
            goto LABEL_27;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
        if (result)
        {
          int v12 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v10 = *((void *)a2 + 2);
          goto LABEL_24;
        }
        break;
      case 2u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        int v13 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
LABEL_27:
        if ((unint64_t)v13 >= v10 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v5);
          if (!result) {
            return result;
          }
          int v17 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v10 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v5 = *v13;
          int v17 = v13 + 1;
          *((void *)a2 + 1) = v17;
        }
        *((_DWORD *)this + 10) |= 2u;
        if ((unint64_t)v17 >= v10 || *v17 != 24) {
          continue;
        }
        unsigned int v14 = v17 + 1;
        *((void *)a2 + 1) = v14;
LABEL_35:
        unsigned int v22 = 0;
        if ((unint64_t)v14 >= v10 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v22);
          if (!result) {
            return result;
          }
          unsigned int v18 = v22;
        }
        else
        {
          unsigned int v18 = *v14;
          *((void *)a2 + 1) = v14 + 1;
        }
        if (v18 <= 0x23)
        {
          *((_DWORD *)this + 10) |= 4u;
          *((_DWORD *)this + 8) = v18;
        }
        int v19 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        if ((unint64_t)v19 >= v15 || *v19 != 32) {
          continue;
        }
        int v16 = v19 + 1;
        *((void *)a2 + 1) = v16;
LABEL_45:
        if ((unint64_t)v16 >= v15 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v6);
          if (!result) {
            return result;
          }
          int v20 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v15 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v6 = *v16;
          int v20 = (unsigned __int8 *)(v16 + 1);
          *((void *)a2 + 1) = v20;
        }
        *((_DWORD *)this + 10) |= 8u;
        if (v20 != (unsigned __int8 *)v15 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10)) {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      case 3u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        unsigned int v14 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
        goto LABEL_35;
      case 4u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        int v16 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_45;
      default:
        int v9 = TagFallback & 7;
LABEL_18:
        if (v9 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 40);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 40);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 32), (uint64_t)a2, a4);
      if ((*(_DWORD *)(v5 + 40) & 8) == 0) {
        return this;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(void *)(v5 + 16), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 40);
  if ((v6 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return this;
  }
LABEL_9:
  uint64_t v7 = *(void *)(v5 + 24);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v7, (uint64_t)a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::ByteSize(CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 40);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_11;
  }
  if (*((unsigned char *)this + 40))
  {
    uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 1))
       + 1;
    int v2 = *((_DWORD *)this + 10);
    if ((v2 & 2) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
  uint64_t v3 = 0;
  if ((*((unsigned char *)this + 40) & 2) != 0)
  {
LABEL_7:
    uint64_t v3 = v3
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 2))
       + 1;
    int v2 = *((_DWORD *)this + 10);
  }
LABEL_8:
  if ((v2 & 4) != 0)
  {
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    if ((v5 & 0x80000000) != 0)
    {
      int v6 = 11;
    }
    else if (v5 >= 0x80)
    {
      int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
      int v2 = *((_DWORD *)this + 10);
    }
    else
    {
      int v6 = 2;
    }
    uint64_t v3 = (v6 + v3);
    if ((v2 & 8) != 0) {
      goto LABEL_10;
    }
  }
  else if ((v2 & 8) != 0)
  {
LABEL_10:
    uint64_t v3 = v3
       + wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this + 3))
       + 1;
  }
LABEL_11:
  *((_DWORD *)this + 9) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::CopyFrom(CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount *this, const CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::IsInitialized(CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount *a2)
{
  if (a2 != (CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    uint64_t v3 = *(void *)(this + 16);
    *(void *)(this + 16) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v3;
    uint64_t v4 = *(void *)(this + 24);
    *(void *)(this + 24) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v4;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.Raven.MeasurementTypeCount");
}

BOOL CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth_NrEstimatorHealthType_IsValid(CoreNavigation::CLP::LogEntry::Raven *this)
{
  return this < 4;
}

double CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth::SharedCtor(CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth *this)
{
  *((void *)this + 7) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 152) = 0u;
  *((_DWORD *)this + 42) = 0;
  return result;
}

CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth *CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth::NrEstimatorHealth(CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth *this, const CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth *a2)
{
  *((void *)this + 11) = 0;
  *(void *)this = &unk_1EDD11168;
  *((void *)this + 12) = 0;
  *((void *)this + 14) = 0;
  *((_DWORD *)this + 26) = 0;
  *((void *)this + 15) = 0;
  *((_DWORD *)this + 32) = 0;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 152) = 0u;
  *((_DWORD *)this + 42) = 0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 68) = 0u;
  CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth::MergeFrom(this, a2);
  return this;
}

void sub_18DF13188(_Unwind_Exception *a1)
{
  uint64_t v5 = v4;
  sub_18DF0C324(v5);
  sub_18DF0C324(v3);
  sub_18DF0C324(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth::~NrEstimatorHealth(CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth *this)
{
  *(void *)this = &unk_1EDD11168;
  CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth::SharedDtor(this);
  sub_18DF0C324((uint64_t *)this + 14);
  sub_18DF0C324((uint64_t *)this + 11);
  sub_18DF0C324((uint64_t *)this + 8);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth::~NrEstimatorHealth(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth::SharedDtor(CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth *this)
{
  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth *)CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2)
    {
      uint64_t v3 = *(void (**)(void))(*(void *)v2 + 8);
      v3();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth::default_instance(CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth *this)
{
  return CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 164) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth::New(CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4 = (unint64_t *)((char *)this + 32);
  uint64_t v5 = (unint64_t *)((char *)this + 40);
  int v6 = (unint64_t *)((char *)this + 48);
  uint64_t v7 = (CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth *)((char *)this + 64);
  unsigned int v8 = (CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth *)((char *)this + 88);
  int v9 = (CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth *)((char *)this + 112);
  while (1)
  {
LABEL_2:
    unint64_t v10 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v10 < *((void *)a2 + 2) && (*v10 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v10;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v10 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_7;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_42;
        }
        *((_DWORD *)this + 42) |= 1u;
        int v13 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((void *)this + 1);
        if (!v13) {
          operator new();
        }
        v74[0] = 0;
        unsigned int v14 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v14 >= *((void *)a2 + 2) || *v14 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v74))return 0; {
        }
          }
        else
        {
          v74[0] = *v14;
          *((void *)a2 + 1) = v14 + 1;
        }
        int v24 = *((_DWORD *)a2 + 14);
        int v25 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v24 + 1;
        if (v24 >= v25) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::TimeStamp::MergePartialFromCodedStream(v13, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v26 = *((_DWORD *)a2 + 14);
        BOOL v27 = __OFSUB__(v26, 1);
        int v28 = v26 - 1;
        if (v28 < 0 == v27) {
          *((_DWORD *)a2 + 14) = v28;
        }
        int v29 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        if ((unint64_t)v29 >= v15 || *v29 != 16) {
          continue;
        }
        int v16 = v29 + 1;
        *((void *)a2 + 1) = v16;
        goto LABEL_54;
      case 2u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_42;
        }
        int v16 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
LABEL_54:
        v74[0] = 0;
        if ((unint64_t)v16 >= v15 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v74);
          if (!result) {
            return result;
          }
          unsigned int v30 = v74[0];
        }
        else
        {
          unsigned int v30 = *v16;
          *((void *)a2 + 1) = v16 + 1;
        }
        if (v30 <= 3)
        {
          *((_DWORD *)this + 42) |= 2u;
          *((_DWORD *)this + 14) = v30;
        }
        int v32 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v32 >= *((void *)a2 + 2) || *v32 != 25) {
          continue;
        }
        *((void *)a2 + 1) = v32 + 1;
LABEL_64:
        *(void *)int64_t v74 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v74) & 1) == 0)return 0; {
        *((void *)this + 2) = *(void *)v74;
        }
        *((_DWORD *)this + 42) |= 4u;
        int v33 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v33 >= *((void *)a2 + 2) || *v33 != 33) {
          continue;
        }
        *((void *)a2 + 1) = v33 + 1;
LABEL_68:
        *(void *)int64_t v74 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v74) & 1) == 0)return 0; {
        *((void *)this + 3) = *(void *)v74;
        }
        *((_DWORD *)this + 42) |= 8u;
        int v34 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v17 = *((void *)a2 + 2);
        if ((unint64_t)v34 >= v17 || *v34 != 40) {
          continue;
        }
        unsigned int v18 = v34 + 1;
        *((void *)a2 + 1) = v18;
LABEL_72:
        if ((unint64_t)v18 >= v17 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!result) {
            return result;
          }
          unsigned int v35 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v17 = *((void *)a2 + 2);
        }
        else
        {
          unint64_t *v4 = *v18;
          unsigned int v35 = v18 + 1;
          *((void *)a2 + 1) = v35;
        }
        *((_DWORD *)this + 42) |= 0x10u;
        if ((unint64_t)v35 >= v17 || *v35 != 48) {
          continue;
        }
        int v19 = v35 + 1;
        *((void *)a2 + 1) = v19;
LABEL_80:
        if ((unint64_t)v19 >= v17 || *v19 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v5);
          if (!result) {
            return result;
          }
          int v36 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v17 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v5 = *v19;
          int v36 = v19 + 1;
          *((void *)a2 + 1) = v36;
        }
        *((_DWORD *)this + 42) |= 0x20u;
        if ((unint64_t)v36 >= v17 || *v36 != 56) {
          continue;
        }
        int v20 = v36 + 1;
        *((void *)a2 + 1) = v20;
LABEL_88:
        if ((unint64_t)v20 >= v17 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v6);
          if (!result) {
            return result;
          }
          unsigned int v37 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v17 = *((void *)a2 + 2);
        }
        else
        {
          *int v6 = *v20;
          unsigned int v37 = v20 + 1;
          *((void *)a2 + 1) = v37;
        }
        *((_DWORD *)this + 42) |= 0x40u;
        if ((unint64_t)v37 >= v17 || *v37 != 66) {
          continue;
        }
        do
        {
          *((void *)a2 + 1) = v37 + 1;
LABEL_96:
          int v38 = *((_DWORD *)this + 19);
          uint64_t v39 = *((int *)this + 18);
          if ((int)v39 >= v38)
          {
            if (v38 == *((_DWORD *)this + 20))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v7);
              int v38 = *((_DWORD *)this + 19);
            }
            *((_DWORD *)this + 19) = v38 + 1;
            operator new();
          }
          uint64_t v40 = *((void *)this + 8);
          *((_DWORD *)this + 18) = v39 + 1;
          uint64_t v41 = *(CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount **)(v40 + 8 * v39);
          v74[0] = 0;
          uint64_t v42 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v42 >= *((void *)a2 + 2) || *v42 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v74))return 0; {
          }
            }
          else
          {
            v74[0] = *v42;
            *((void *)a2 + 1) = v42 + 1;
          }
          int v43 = *((_DWORD *)a2 + 14);
          int v44 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v43 + 1;
          if (v43 >= v44) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::MergePartialFromCodedStream(v41, a2)|| !*((unsigned char *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          int v45 = *((_DWORD *)a2 + 14);
          BOOL v27 = __OFSUB__(v45, 1);
          int v46 = v45 - 1;
          if (v46 < 0 == v27) {
            *((_DWORD *)a2 + 14) = v46;
          }
          unsigned int v37 = (unsigned char *)*((void *)a2 + 1);
          if ((unint64_t)v37 >= *((void *)a2 + 2)) {
            goto LABEL_2;
          }
          int v47 = *v37;
        }
        while (v47 == 66);
        if (v47 != 74) {
          continue;
        }
        do
        {
          *((void *)a2 + 1) = v37 + 1;
LABEL_114:
          int v48 = *((_DWORD *)this + 25);
          uint64_t v49 = *((int *)this + 24);
          if ((int)v49 >= v48)
          {
            if (v48 == *((_DWORD *)this + 26))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v8);
              int v48 = *((_DWORD *)this + 25);
            }
            *((_DWORD *)this + 25) = v48 + 1;
            operator new();
          }
          uint64_t v50 = *((void *)this + 11);
          *((_DWORD *)this + 24) = v49 + 1;
          double v51 = *(CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount **)(v50 + 8 * v49);
          v74[0] = 0;
          double v52 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v52 >= *((void *)a2 + 2) || *v52 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v74))return 0; {
          }
            }
          else
          {
            v74[0] = *v52;
            *((void *)a2 + 1) = v52 + 1;
          }
          int v53 = *((_DWORD *)a2 + 14);
          int v54 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v53 + 1;
          if (v53 >= v54) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::MergePartialFromCodedStream(v51, a2)|| !*((unsigned char *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          int v55 = *((_DWORD *)a2 + 14);
          BOOL v27 = __OFSUB__(v55, 1);
          int v56 = v55 - 1;
          if (v56 < 0 == v27) {
            *((_DWORD *)a2 + 14) = v56;
          }
          unsigned int v37 = (unsigned char *)*((void *)a2 + 1);
          if ((unint64_t)v37 >= *((void *)a2 + 2)) {
            goto LABEL_2;
          }
          int v57 = *v37;
        }
        while (v57 == 74);
        if (v57 != 82) {
          continue;
        }
        do
        {
          *((void *)a2 + 1) = v37 + 1;
LABEL_132:
          int v58 = *((_DWORD *)this + 31);
          uint64_t v59 = *((int *)this + 30);
          if ((int)v59 >= v58)
          {
            if (v58 == *((_DWORD *)this + 32))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v9);
              int v58 = *((_DWORD *)this + 31);
            }
            *((_DWORD *)this + 31) = v58 + 1;
            operator new();
          }
          uint64_t v60 = *((void *)this + 14);
          *((_DWORD *)this + 30) = v59 + 1;
          double v61 = *(CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount **)(v60 + 8 * v59);
          v74[0] = 0;
          double v62 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v62 >= *((void *)a2 + 2) || *v62 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v74))return 0; {
          }
            }
          else
          {
            v74[0] = *v62;
            *((void *)a2 + 1) = v62 + 1;
          }
          int v63 = *((_DWORD *)a2 + 14);
          int v64 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v63 + 1;
          if (v63 >= v64) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::MergePartialFromCodedStream(v61, a2)|| !*((unsigned char *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          int v65 = *((_DWORD *)a2 + 14);
          BOOL v27 = __OFSUB__(v65, 1);
          int v66 = v65 - 1;
          if (v66 < 0 == v27) {
            *((_DWORD *)a2 + 14) = v66;
          }
          unsigned int v37 = (unsigned char *)*((void *)a2 + 1);
          if ((unint64_t)v37 >= *((void *)a2 + 2)) {
            goto LABEL_2;
          }
          int v67 = *v37;
        }
        while (v67 == 82);
        if (v67 != 89) {
          continue;
        }
        *((void *)a2 + 1) = v37 + 1;
LABEL_150:
        *(void *)int64_t v74 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v74) & 1) == 0)return 0; {
        *((void *)this + 17) = *(void *)v74;
        }
        *((_DWORD *)this + 42) |= 0x400u;
        double v68 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v68 >= *((void *)a2 + 2) || *v68 != 97) {
          continue;
        }
        *((void *)a2 + 1) = v68 + 1;
LABEL_154:
        *(void *)int64_t v74 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v74) & 1) == 0)return 0; {
        *((void *)this + 18) = *(void *)v74;
        }
        *((_DWORD *)this + 42) |= 0x800u;
        unsigned __int8 v69 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v21 = *((void *)a2 + 2);
        if ((unint64_t)v69 >= v21 || *v69 != 104) {
          continue;
        }
        unsigned int v22 = v69 + 1;
        *((void *)a2 + 1) = v22;
LABEL_158:
        v74[0] = 0;
        if ((unint64_t)v22 >= v21 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v74);
          if (!result) {
            return result;
          }
          unsigned int v70 = v74[0];
          std::string v71 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v21 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v70 = *v22;
          std::string v71 = v22 + 1;
          *((void *)a2 + 1) = v71;
        }
        *((_DWORD *)this + 15) = v70;
        *((_DWORD *)this + 42) |= 0x1000u;
        if ((unint64_t)v71 >= v21 || *v71 != 112) {
          continue;
        }
        unsigned int v23 = v71 + 1;
        *((void *)a2 + 1) = v23;
LABEL_166:
        v74[0] = 0;
        if ((unint64_t)v23 >= v21 || *v23 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v74);
          if (!result) {
            return result;
          }
          unsigned int v72 = v74[0];
          double v73 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v21 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v72 = *v23;
          double v73 = v23 + 1;
          *((void *)a2 + 1) = v73;
        }
        *((_DWORD *)this + 40) = v72;
        *((_DWORD *)this + 42) |= 0x2000u;
        if ((unint64_t)v73 >= v21 || *v73 != 121) {
          continue;
        }
        *((void *)a2 + 1) = v73 + 1;
LABEL_174:
        *(void *)int64_t v74 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v74) & 1) == 0)return 0; {
        *((void *)this + 19) = *(void *)v74;
        }
        *((_DWORD *)this + 42) |= 0x4000u;
        if (*((void *)a2 + 1) == *((void *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
        break;
      case 3u:
        int v12 = TagFallback & 7;
        if (v12 == 1) {
          goto LABEL_64;
        }
        goto LABEL_42;
      case 4u:
        int v12 = TagFallback & 7;
        if (v12 == 1) {
          goto LABEL_68;
        }
        goto LABEL_42;
      case 5u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_42;
        }
        unsigned int v18 = (char *)*((void *)a2 + 1);
        unint64_t v17 = *((void *)a2 + 2);
        goto LABEL_72;
      case 6u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_42;
        }
        int v19 = (char *)*((void *)a2 + 1);
        unint64_t v17 = *((void *)a2 + 2);
        goto LABEL_80;
      case 7u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_42;
        }
        int v20 = (char *)*((void *)a2 + 1);
        unint64_t v17 = *((void *)a2 + 2);
        goto LABEL_88;
      case 8u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_96;
        }
        goto LABEL_42;
      case 9u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_114;
        }
        goto LABEL_42;
      case 0xAu:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_132;
        }
        goto LABEL_42;
      case 0xBu:
        int v12 = TagFallback & 7;
        if (v12 == 1) {
          goto LABEL_150;
        }
        goto LABEL_42;
      case 0xCu:
        int v12 = TagFallback & 7;
        if (v12 == 1) {
          goto LABEL_154;
        }
        goto LABEL_42;
      case 0xDu:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_42;
        }
        unsigned int v22 = (char *)*((void *)a2 + 1);
        unint64_t v21 = *((void *)a2 + 2);
        goto LABEL_158;
      case 0xEu:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_42;
        }
        unsigned int v23 = (char *)*((void *)a2 + 1);
        unint64_t v21 = *((void *)a2 + 2);
        goto LABEL_166;
      case 0xFu:
        int v12 = TagFallback & 7;
        if (v12 != 1) {
          goto LABEL_42;
        }
        goto LABEL_174;
      default:
        int v12 = TagFallback & 7;
LABEL_42:
        if (v12 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 168);
  if (v6)
  {
    uint64_t v11 = *(void *)(this + 8);
    if (!v11)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto((CoreNavigation::CLP::LogEntry::Raven *)this);
      uint64_t v11 = *(void *)(CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v11, a2, a4);
    int v6 = *(_DWORD *)(v5 + 168);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_28;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 56), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 168);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_29;
  }
LABEL_28:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 168);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_30;
  }
LABEL_29:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 168);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_31;
  }
LABEL_30:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(void *)(v5 + 32), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 168);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
LABEL_31:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(void *)(v5 + 40), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 168) & 0x40) != 0) {
LABEL_8:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(void *)(v5 + 48), (uint64_t)a2, a4);
LABEL_9:
  if (*(int *)(v5 + 72) >= 1)
  {
    uint64_t v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(void *)(*(void *)(v5 + 64) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 72));
  }
  if (*(int *)(v5 + 96) >= 1)
  {
    uint64_t v8 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(void *)(*(void *)(v5 + 88) + 8 * v8++), a2, a4);
    while (v8 < *(int *)(v5 + 96));
  }
  if (*(int *)(v5 + 120) >= 1)
  {
    uint64_t v9 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(void *)(*(void *)(v5 + 112) + 8 * v9++), a2, a4);
    while (v9 < *(int *)(v5 + 120));
  }
  int v10 = *(_DWORD *)(v5 + 168);
  if ((v10 & 0x400) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, (uint64_t)a2, *(double *)(v5 + 136), a3);
    int v10 = *(_DWORD *)(v5 + 168);
    if ((v10 & 0x800) == 0)
    {
LABEL_20:
      if ((v10 & 0x1000) == 0) {
        goto LABEL_21;
      }
      goto LABEL_35;
    }
  }
  else if ((v10 & 0x800) == 0)
  {
    goto LABEL_20;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, (uint64_t)a2, *(double *)(v5 + 144), a3);
  int v10 = *(_DWORD *)(v5 + 168);
  if ((v10 & 0x1000) == 0)
  {
LABEL_21:
    if ((v10 & 0x2000) == 0) {
      goto LABEL_22;
    }
LABEL_36:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, *(unsigned int *)(v5 + 160), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 168) & 0x4000) == 0) {
      return this;
    }
    goto LABEL_37;
  }
LABEL_35:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, *(unsigned int *)(v5 + 60), (uint64_t)a2, a4);
  int v10 = *(_DWORD *)(v5 + 168);
  if ((v10 & 0x2000) != 0) {
    goto LABEL_36;
  }
LABEL_22:
  if ((v10 & 0x4000) == 0) {
    return this;
  }
LABEL_37:
  double v12 = *(double *)(v5 + 152);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, (uint64_t)a2, v12, a3);
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth::ByteSize(CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth *this)
{
  int v2 = *((_DWORD *)this + 42);
  if (!(_BYTE)v2)
  {
    int v4 = 0;
    goto LABEL_27;
  }
  if ((v2 & 1) == 0)
  {
    int v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  uint64_t v5 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((void *)this + 1);
  if (!v5)
  {
    CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(0);
    uint64_t v5 = *(CoreNavigation::CLP::LogEntry::Raven::TimeStamp **)(CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth::default_instance_
                                                             + 8);
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::TimeStamp::ByteSize(v5);
  int v7 = (int)v6;
  if (v6 >= 0x80) {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
  }
  else {
    int v8 = 1;
  }
  int v3 = v7 + v8 + 1;
  int v2 = *((_DWORD *)this + 42);
  if ((v2 & 2) != 0)
  {
LABEL_12:
    uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
    if ((v9 & 0x80000000) != 0)
    {
      int v10 = 10;
    }
    else if (v9 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9);
      int v2 = *((_DWORD *)this + 42);
    }
    else
    {
      int v10 = 1;
    }
    v3 += v10 + 1;
  }
LABEL_18:
  int v11 = v3 + 9;
  if ((v2 & 4) == 0) {
    int v11 = v3;
  }
  if ((v2 & 8) != 0) {
    int v4 = v11 + 9;
  }
  else {
    int v4 = v11;
  }
  if ((v2 & 0x10) != 0)
  {
    v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 4))
        + 1;
    int v2 = *((_DWORD *)this + 42);
    if ((v2 & 0x20) == 0)
    {
LABEL_25:
      if ((v2 & 0x40) == 0) {
        goto LABEL_27;
      }
      goto LABEL_26;
    }
  }
  else if ((v2 & 0x20) == 0)
  {
    goto LABEL_25;
  }
  v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                    + 5))
      + 1;
  int v2 = *((_DWORD *)this + 42);
  if ((v2 & 0x40) != 0)
  {
LABEL_26:
    v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 6))
        + 1;
    int v2 = *((_DWORD *)this + 42);
  }
LABEL_27:
  if ((v2 & 0x3FC00) != 0)
  {
    int v12 = v4 + 9;
    if ((v2 & 0x400) == 0) {
      int v12 = v4;
    }
    if ((v2 & 0x800) != 0) {
      int v4 = v12 + 9;
    }
    else {
      int v4 = v12;
    }
    if ((v2 & 0x1000) != 0)
    {
      int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 15);
      if ((v13 & 0x80000000) != 0)
      {
        int v14 = 11;
      }
      else if (v13 >= 0x80)
      {
        int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13) + 1;
        int v2 = *((_DWORD *)this + 42);
      }
      else
      {
        int v14 = 2;
      }
      v4 += v14;
    }
    if ((v2 & 0x2000) != 0)
    {
      unint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 40);
      if ((v15 & 0x80000000) != 0)
      {
        int v16 = 11;
      }
      else if (v15 >= 0x80)
      {
        int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15) + 1;
        int v2 = *((_DWORD *)this + 42);
      }
      else
      {
        int v16 = 2;
      }
      v4 += v16;
    }
    if ((v2 & 0x4000) != 0) {
      v4 += 9;
    }
  }
  int v17 = *((_DWORD *)this + 18);
  int v18 = v17 + v4;
  if (v17 >= 1)
  {
    uint64_t v19 = 0;
    do
    {
      int v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::ByteSize(*(CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount **)(*((void *)this + 8) + 8 * v19));
      int v21 = (int)v20;
      if (v20 >= 0x80) {
        int v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20);
      }
      else {
        int v22 = 1;
      }
      v18 += v21 + v22;
      ++v19;
    }
    while (v19 < *((int *)this + 18));
  }
  int v23 = *((_DWORD *)this + 24);
  int v24 = v23 + v18;
  if (v23 >= 1)
  {
    uint64_t v25 = 0;
    do
    {
      int v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::ByteSize(*(CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount **)(*((void *)this + 11) + 8 * v25));
      int v27 = (int)v26;
      if (v26 >= 0x80) {
        int v28 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26);
      }
      else {
        int v28 = 1;
      }
      v24 += v27 + v28;
      ++v25;
    }
    while (v25 < *((int *)this + 24));
  }
  int v29 = *((_DWORD *)this + 30);
  uint64_t v30 = (v29 + v24);
  if (v29 >= 1)
  {
    uint64_t v31 = 0;
    do
    {
      int v32 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::ByteSize(*(CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount **)(*((void *)this + 14) + 8 * v31));
      int v33 = (int)v32;
      if (v32 >= 0x80) {
        int v34 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v32);
      }
      else {
        int v34 = 1;
      }
      uint64_t v30 = (v33 + v30 + v34);
      ++v31;
    }
    while (v31 < *((int *)this + 30));
  }
  *((_DWORD *)this + 41) = v30;
  return v30;
}

void CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth::CopyFrom(CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth *this, const CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth::IsInitialized(CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth::Swap(CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth *this, CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth *a2)
{
  if (a2 != this)
  {
    uint64_t v4 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v4;
    LODWORD(v4) = *((_DWORD *)this + 14);
    *((_DWORD *)this + 14) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v4;
    uint64_t v5 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v5;
    uint64_t v6 = *((void *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v6;
    uint64_t v7 = *((void *)this + 4);
    *((void *)this + 4) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v7;
    uint64_t v8 = *((void *)this + 5);
    *((void *)this + 5) = *((void *)a2 + 5);
    *((void *)a2 + 5) = v8;
    uint64_t v9 = *((void *)this + 6);
    *((void *)this + 6) = *((void *)a2 + 6);
    *((void *)a2 + 6) = v9;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    uint64_t v10 = *((void *)this + 17);
    *((void *)this + 17) = *((void *)a2 + 17);
    *((void *)a2 + 17) = v10;
    uint64_t v11 = *((void *)this + 18);
    *((void *)this + 18) = *((void *)a2 + 18);
    *((void *)a2 + 18) = v11;
    int v12 = *((_DWORD *)this + 15);
    *((_DWORD *)this + 15) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v12;
    int v13 = *((_DWORD *)this + 40);
    *((_DWORD *)this + 40) = *((_DWORD *)a2 + 40);
    *((_DWORD *)a2 + 40) = v13;
    double result = *((double *)this + 19);
    *((void *)this + 19) = *((void *)a2 + 19);
    *((double *)a2 + 19) = result;
    int v15 = *((_DWORD *)this + 42);
    *((_DWORD *)this + 42) = *((_DWORD *)a2 + 42);
    *((_DWORD *)a2 + 42) = v15;
    int v16 = *((_DWORD *)this + 41);
    *((_DWORD *)this + 41) = *((_DWORD *)a2 + 41);
    *((_DWORD *)a2 + 41) = v16;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::Raven::NrEstimatorHealth::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.Raven.NrEstimatorHealth");
}

BOOL CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth_EstimatorType_IsValid(CoreNavigation::CLP::LogEntry::Raven *this)
{
  return this < 7;
}

BOOL CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth_EstimatorHealthType_IsValid(CoreNavigation::CLP::LogEntry::Raven *this)
{
  return this < 4;
}

double CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth::SharedCtor(CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *this)
{
  *((void *)this + 36) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *((void *)this + 13) = 0;
  *((_OWORD *)this + 10) = 0u;
  *((_OWORD *)this + 11) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth::EstimatorHealth(CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *this, const CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *a2)
{
  *(void *)this = &unk_1EDD11078;
  *((void *)this + 17) = 0;
  *((void *)this + 18) = 0;
  *((_DWORD *)this + 38) = 0;
  *((void *)this + 28) = 0;
  *((_DWORD *)this + 58) = 0;
  *((void *)this + 27) = 0;
  *((void *)this + 31) = 0;
  *((_DWORD *)this + 64) = 0;
  *((void *)this + 30) = 0;
  *((void *)this + 33) = 0;
  *((void *)this + 34) = 0;
  *((_DWORD *)this + 70) = 0;
  *((void *)this + 36) = 0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 116) = 0u;
  *((_OWORD *)this + 12) = 0u;
  *((_DWORD *)this + 52) = 0;
  *((_OWORD *)this + 10) = 0u;
  *((_OWORD *)this + 11) = 0u;
  CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth::MergeFrom(this, a2);
  return this;
}

void sub_18DF147C4(_Unwind_Exception *a1)
{
  uint64_t v8 = v5;
  sub_18DF0C324(v8);
  sub_18DF0C324(v7);
  sub_18DF0C324(v4);
  sub_18DF0C324(v6);
  sub_18DF0C324(v3);
  sub_18DF0C324(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth::~EstimatorHealth(CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *this)
{
  *(void *)this = &unk_1EDD11078;
  CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth::SharedDtor(this);
  sub_18DF0C324((uint64_t *)this + 33);
  sub_18DF0C324((uint64_t *)this + 30);
  sub_18DF0C324((uint64_t *)this + 27);
  sub_18DF0C324((uint64_t *)this + 24);
  sub_18DF0C324((uint64_t *)this + 17);
  sub_18DF0C324((uint64_t *)this + 14);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth::~EstimatorHealth(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth::SharedDtor(CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *this)
{
  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *)CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2)
    {
      int v3 = *(void (**)(void))(*(void *)v2 + 8);
      v3();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth::default_instance(CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *this)
{
  return CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 288) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth::New(CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4 = (unint64_t *)((char *)this + 40);
  uint64_t v5 = (unint64_t *)((char *)this + 48);
  uint64_t v6 = (unint64_t *)((char *)this + 56);
  uint64_t v7 = (CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *)((char *)this + 112);
  uint64_t v8 = (unint64_t *)((char *)this + 184);
  double v113 = (CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *)((char *)this + 192);
  double v114 = (CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *)((char *)this + 136);
  double v111 = (CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *)((char *)this + 240);
  double v112 = (CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *)((char *)this + 216);
  uint64_t v9 = (CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *)((char *)this + 264);
  while (1)
  {
LABEL_2:
    uint64_t v10 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v10 < *((void *)a2 + 2) && (*v10 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v10;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v10 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_7;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_60;
        }
        *((_DWORD *)this + 73) |= 1u;
        int v13 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((void *)this + 1);
        if (!v13) {
          operator new();
        }
        v115[0] = 0;
        int v14 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v14 >= *((void *)a2 + 2) || *v14 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v115))return 0; {
        }
          }
        else
        {
          v115[0] = *v14;
          *((void *)a2 + 1) = v14 + 1;
        }
        int v25 = *((_DWORD *)a2 + 14);
        int v26 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v25 + 1;
        if (v25 >= v26) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::TimeStamp::MergePartialFromCodedStream(v13, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v27 = *((_DWORD *)a2 + 14);
        BOOL v28 = __OFSUB__(v27, 1);
        int v29 = v27 - 1;
        if (v29 < 0 == v28) {
          *((_DWORD *)a2 + 14) = v29;
        }
        uint64_t v30 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        if ((unint64_t)v30 >= v15 || *v30 != 16) {
          continue;
        }
        int v16 = v30 + 1;
        *((void *)a2 + 1) = v16;
        goto LABEL_72;
      case 2u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_60;
        }
        int v16 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
LABEL_72:
        v115[0] = 0;
        if ((unint64_t)v16 >= v15 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v115);
          if (!result) {
            return result;
          }
          unsigned int v31 = v115[0];
        }
        else
        {
          unsigned int v31 = *v16;
          *((void *)a2 + 1) = v16 + 1;
        }
        if (v31 <= 6)
        {
          *((_DWORD *)this + 73) |= 2u;
          *((_DWORD *)this + 4) = v31;
        }
        int v33 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v17 = *((void *)a2 + 2);
        if ((unint64_t)v33 >= v17 || *v33 != 24) {
          continue;
        }
        int v18 = v33 + 1;
        *((void *)a2 + 1) = v18;
LABEL_82:
        v115[0] = 0;
        if ((unint64_t)v18 >= v17 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v115);
          if (!result) {
            return result;
          }
          unsigned int v34 = v115[0];
        }
        else
        {
          unsigned int v34 = *v18;
          *((void *)a2 + 1) = v18 + 1;
        }
        if (v34 <= 3)
        {
          *((_DWORD *)this + 73) |= 4u;
          *((_DWORD *)this + 5) = v34;
        }
        unsigned int v35 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v35 >= *((void *)a2 + 2) || *v35 != 33) {
          continue;
        }
        *((void *)a2 + 1) = v35 + 1;
LABEL_92:
        *(void *)double v115 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v115) & 1) == 0)return 0; {
        *((void *)this + 3) = *(void *)v115;
        }
        *((_DWORD *)this + 73) |= 8u;
        int v36 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v36 >= *((void *)a2 + 2) || *v36 != 41) {
          continue;
        }
        *((void *)a2 + 1) = v36 + 1;
LABEL_96:
        *(void *)double v115 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v115) & 1) == 0)return 0; {
        *((void *)this + 4) = *(void *)v115;
        }
        *((_DWORD *)this + 73) |= 0x10u;
        unsigned int v37 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        if ((unint64_t)v37 >= v19 || *v37 != 48) {
          continue;
        }
        int v20 = v37 + 1;
        *((void *)a2 + 1) = v20;
LABEL_100:
        if ((unint64_t)v20 >= v19 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!result) {
            return result;
          }
          int v38 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v19 = *((void *)a2 + 2);
        }
        else
        {
          unint64_t *v4 = *v20;
          int v38 = v20 + 1;
          *((void *)a2 + 1) = v38;
        }
        *((_DWORD *)this + 73) |= 0x20u;
        if ((unint64_t)v38 >= v19 || *v38 != 56) {
          continue;
        }
        int v21 = v38 + 1;
        *((void *)a2 + 1) = v21;
LABEL_108:
        if ((unint64_t)v21 >= v19 || *v21 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v5);
          if (!result) {
            return result;
          }
          uint64_t v39 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v19 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v5 = *v21;
          uint64_t v39 = v21 + 1;
          *((void *)a2 + 1) = v39;
        }
        *((_DWORD *)this + 73) |= 0x40u;
        if ((unint64_t)v39 >= v19 || *v39 != 64) {
          continue;
        }
        int v22 = v39 + 1;
        *((void *)a2 + 1) = v22;
LABEL_116:
        if ((unint64_t)v22 >= v19 || *v22 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v6);
          if (!result) {
            return result;
          }
          uint64_t v40 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v19 = *((void *)a2 + 2);
        }
        else
        {
          *uint64_t v6 = *v22;
          uint64_t v40 = v22 + 1;
          *((void *)a2 + 1) = v40;
        }
        *((_DWORD *)this + 73) |= 0x80u;
        if ((unint64_t)v40 >= v19 || *v40 != 73) {
          continue;
        }
        *((void *)a2 + 1) = v40 + 1;
LABEL_124:
        *(void *)double v115 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v115) & 1) == 0)return 0; {
        *((void *)this + 8) = *(void *)v115;
        }
        *((_DWORD *)this + 73) |= 0x100u;
        uint64_t v41 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v41 >= *((void *)a2 + 2) || *v41 != 81) {
          continue;
        }
        *((void *)a2 + 1) = v41 + 1;
LABEL_128:
        *(void *)double v115 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v115) & 1) == 0)return 0; {
        *((void *)this + 9) = *(void *)v115;
        }
        *((_DWORD *)this + 73) |= 0x200u;
        uint64_t v42 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v42 >= *((void *)a2 + 2) || *v42 != 89) {
          continue;
        }
        *((void *)a2 + 1) = v42 + 1;
LABEL_132:
        *(void *)double v115 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v115) & 1) == 0)return 0; {
        *((void *)this + 10) = *(void *)v115;
        }
        *((_DWORD *)this + 73) |= 0x400u;
        int v43 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v43 >= *((void *)a2 + 2) || *v43 != 97) {
          continue;
        }
        *((void *)a2 + 1) = v43 + 1;
LABEL_136:
        *(void *)double v115 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v115) & 1) == 0)return 0; {
        *((void *)this + 11) = *(void *)v115;
        }
        *((_DWORD *)this + 73) |= 0x800u;
        int v44 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v44 >= *((void *)a2 + 2) || *v44 != 105) {
          continue;
        }
        *((void *)a2 + 1) = v44 + 1;
LABEL_140:
        *(void *)double v115 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v115) & 1) == 0)return 0; {
        *((void *)this + 12) = *(void *)v115;
        }
        *((_DWORD *)this + 73) |= 0x1000u;
        int v45 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v45 >= *((void *)a2 + 2) || *v45 != 113) {
          continue;
        }
        *((void *)a2 + 1) = v45 + 1;
LABEL_144:
        *(void *)double v115 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v115) & 1) == 0)return 0; {
        *((void *)this + 13) = *(void *)v115;
        }
        *((_DWORD *)this + 73) |= 0x2000u;
        int v46 = (unsigned __int8 *)*((void *)a2 + 1);
        if ((unint64_t)v46 >= *((void *)a2 + 2) || *v46 != 122) {
          continue;
        }
        do
        {
          *((void *)a2 + 1) = v46 + 1;
LABEL_148:
          int v47 = *((_DWORD *)this + 31);
          uint64_t v48 = *((int *)this + 30);
          if ((int)v48 >= v47)
          {
            if (v47 == *((_DWORD *)this + 32))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v7);
              int v47 = *((_DWORD *)this + 31);
            }
            *((_DWORD *)this + 31) = v47 + 1;
            operator new();
          }
          uint64_t v49 = *((void *)this + 14);
          *((_DWORD *)this + 30) = v48 + 1;
          uint64_t v50 = *(CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount **)(v49 + 8 * v48);
          v115[0] = 0;
          double v51 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v51 >= *((void *)a2 + 2) || *v51 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v115))return 0; {
          }
            }
          else
          {
            v115[0] = *v51;
            *((void *)a2 + 1) = v51 + 1;
          }
          int v52 = *((_DWORD *)a2 + 14);
          int v53 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v52 + 1;
          if (v52 >= v53) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::MergePartialFromCodedStream(v50, a2)|| !*((unsigned char *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          int v54 = *((_DWORD *)a2 + 14);
          BOOL v28 = __OFSUB__(v54, 1);
          int v55 = v54 - 1;
          if (v55 < 0 == v28) {
            *((_DWORD *)a2 + 14) = v55;
          }
          int v46 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v56 = *((void *)a2 + 2);
        }
        while ((unint64_t)v46 < v56 && *v46 == 122);
        if ((int)v56 - (int)v46 < 2) {
          continue;
        }
        int v57 = *v46;
        do
        {
          if (v57 != 130 || v46[1] != 1) {
            goto LABEL_2;
          }
          *((void *)a2 + 1) = v46 + 2;
LABEL_168:
          int v58 = *((_DWORD *)this + 37);
          uint64_t v59 = *((int *)this + 36);
          if ((int)v59 >= v58)
          {
            if (v58 == *((_DWORD *)this + 38))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v114);
              int v58 = *((_DWORD *)this + 37);
            }
            *((_DWORD *)this + 37) = v58 + 1;
            operator new();
          }
          uint64_t v60 = *((void *)this + 17);
          *((_DWORD *)this + 36) = v59 + 1;
          double v61 = *(CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount **)(v60 + 8 * v59);
          v115[0] = 0;
          double v62 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v62 >= *((void *)a2 + 2) || *v62 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v115))return 0; {
          }
            }
          else
          {
            v115[0] = *v62;
            *((void *)a2 + 1) = v62 + 1;
          }
          int v63 = *((_DWORD *)a2 + 14);
          int v64 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v63 + 1;
          if (v63 >= v64) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::MergePartialFromCodedStream(v61, a2)|| !*((unsigned char *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          int v65 = *((_DWORD *)a2 + 14);
          BOOL v28 = __OFSUB__(v65, 1);
          int v66 = v65 - 1;
          if (v66 < 0 == v28) {
            *((_DWORD *)a2 + 14) = v66;
          }
          int v46 = (unsigned __int8 *)*((void *)a2 + 1);
          if (*((_DWORD *)a2 + 4) - (int)v46 <= 1) {
            goto LABEL_2;
          }
          int v57 = *v46;
        }
        while (v57 != 137);
        if (v46[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v46 + 2;
LABEL_188:
        *(void *)double v115 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v115) & 1) == 0)return 0; {
        *((void *)this + 20) = *(void *)v115;
        }
        *((_DWORD *)this + 73) |= 0x10000u;
        int v67 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v67 < 2 || *v67 != 145 || v67[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v67 + 2;
LABEL_193:
        *(void *)double v115 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v115) & 1) == 0)return 0; {
        *((void *)this + 21) = *(void *)v115;
        }
        *((_DWORD *)this + 73) |= 0x20000u;
        double v68 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v68 < 2 || *v68 != 153 || v68[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v68 + 2;
LABEL_198:
        *(void *)double v115 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v115) & 1) == 0)return 0; {
        *((void *)this + 22) = *(void *)v115;
        }
        *((_DWORD *)this + 73) |= 0x40000u;
        unsigned __int8 v69 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v24 = *((void *)a2 + 2);
        if ((int)v24 - (int)v69 >= 2 && *v69 == 160 && v69[1] == 1)
        {
          int v23 = v69 + 2;
          *((void *)a2 + 1) = v23;
LABEL_203:
          if ((unint64_t)v23 >= v24 || (char)*v23 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v8);
            if (!result) {
              return result;
            }
            unsigned int v70 = (unsigned __int8 *)*((void *)a2 + 1);
            unint64_t v24 = *((void *)a2 + 2);
          }
          else
          {
            *uint64_t v8 = *v23;
            unsigned int v70 = v23 + 1;
            *((void *)a2 + 1) = v70;
          }
          *((_DWORD *)this + 73) |= 0x80000u;
          if ((int)v24 - (int)v70 >= 2)
          {
            int v71 = *v70;
            do
            {
              if (v71 != 170 || v70[1] != 1) {
                goto LABEL_2;
              }
              *((void *)a2 + 1) = v70 + 2;
LABEL_212:
              int v72 = *((_DWORD *)this + 51);
              uint64_t v73 = *((int *)this + 50);
              if ((int)v73 >= v72)
              {
                if (v72 == *((_DWORD *)this + 52))
                {
                  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v113);
                  int v72 = *((_DWORD *)this + 51);
                }
                *((_DWORD *)this + 51) = v72 + 1;
                operator new();
              }
              uint64_t v74 = *((void *)this + 24);
              *((_DWORD *)this + 50) = v73 + 1;
              long long v75 = *(CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount **)(v74 + 8 * v73);
              v115[0] = 0;
              long long v76 = (char *)*((void *)a2 + 1);
              if ((unint64_t)v76 >= *((void *)a2 + 2) || *v76 < 0)
              {
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v115))return 0; {
              }
                }
              else
              {
                v115[0] = *v76;
                *((void *)a2 + 1) = v76 + 1;
              }
              int v77 = *((_DWORD *)a2 + 14);
              int v78 = *((_DWORD *)a2 + 15);
              *((_DWORD *)a2 + 14) = v77 + 1;
              if (v77 >= v78) {
                return 0;
              }
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
              if (!CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::MergePartialFromCodedStream(v75, a2)|| !*((unsigned char *)a2 + 36))
              {
                return 0;
              }
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
              int v79 = *((_DWORD *)a2 + 14);
              BOOL v28 = __OFSUB__(v79, 1);
              int v80 = v79 - 1;
              if (v80 < 0 == v28) {
                *((_DWORD *)a2 + 14) = v80;
              }
              unsigned int v70 = (unsigned __int8 *)*((void *)a2 + 1);
              if (*((_DWORD *)a2 + 4) - (int)v70 <= 1) {
                goto LABEL_2;
              }
              int v71 = *v70;
            }
            while (v71 != 178);
            while (1)
            {
              if (v70[1] != 1) {
                goto LABEL_2;
              }
              *((void *)a2 + 1) = v70 + 2;
LABEL_230:
              int v81 = *((_DWORD *)this + 57);
              uint64_t v82 = *((int *)this + 56);
              if ((int)v82 >= v81)
              {
                if (v81 == *((_DWORD *)this + 58))
                {
                  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v112);
                  int v81 = *((_DWORD *)this + 57);
                }
                *((_DWORD *)this + 57) = v81 + 1;
                operator new();
              }
              uint64_t v83 = *((void *)this + 27);
              *((_DWORD *)this + 56) = v82 + 1;
              uint64_t v84 = *(CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount **)(v83 + 8 * v82);
              v115[0] = 0;
              unsigned __int8 v85 = (char *)*((void *)a2 + 1);
              if ((unint64_t)v85 >= *((void *)a2 + 2) || *v85 < 0)
              {
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v115))return 0; {
              }
                }
              else
              {
                v115[0] = *v85;
                *((void *)a2 + 1) = v85 + 1;
              }
              int v86 = *((_DWORD *)a2 + 14);
              int v87 = *((_DWORD *)a2 + 15);
              *((_DWORD *)a2 + 14) = v86 + 1;
              if (v86 >= v87) {
                return 0;
              }
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
              if (!CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::MergePartialFromCodedStream(v84, a2)|| !*((unsigned char *)a2 + 36))
              {
                return 0;
              }
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
              int v88 = *((_DWORD *)a2 + 14);
              BOOL v28 = __OFSUB__(v88, 1);
              int v89 = v88 - 1;
              if (v89 < 0 == v28) {
                *((_DWORD *)a2 + 14) = v89;
              }
              unsigned int v70 = (unsigned __int8 *)*((void *)a2 + 1);
              if (*((_DWORD *)a2 + 4) - (int)v70 <= 1) {
                goto LABEL_2;
              }
              int v90 = *v70;
              if (v90 == 186) {
                break;
              }
              if (v90 != 178) {
                goto LABEL_2;
              }
            }
            while (1)
            {
              if (v70[1] != 1) {
                goto LABEL_2;
              }
              *((void *)a2 + 1) = v70 + 2;
LABEL_249:
              int v91 = *((_DWORD *)this + 63);
              uint64_t v92 = *((int *)this + 62);
              if ((int)v92 >= v91)
              {
                if (v91 == *((_DWORD *)this + 64))
                {
                  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v111);
                  int v91 = *((_DWORD *)this + 63);
                }
                *((_DWORD *)this + 63) = v91 + 1;
                operator new();
              }
              uint64_t v93 = *((void *)this + 30);
              *((_DWORD *)this + 62) = v92 + 1;
              double v94 = *(CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount **)(v93 + 8 * v92);
              v115[0] = 0;
              char v95 = (char *)*((void *)a2 + 1);
              if ((unint64_t)v95 >= *((void *)a2 + 2) || *v95 < 0)
              {
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v115))return 0; {
              }
                }
              else
              {
                v115[0] = *v95;
                *((void *)a2 + 1) = v95 + 1;
              }
              int v96 = *((_DWORD *)a2 + 14);
              int v97 = *((_DWORD *)a2 + 15);
              *((_DWORD *)a2 + 14) = v96 + 1;
              if (v96 >= v97) {
                return 0;
              }
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
              if (!CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::MergePartialFromCodedStream(v94, a2)|| !*((unsigned char *)a2 + 36))
              {
                return 0;
              }
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
              int v98 = *((_DWORD *)a2 + 14);
              BOOL v28 = __OFSUB__(v98, 1);
              int v99 = v98 - 1;
              if (v99 < 0 == v28) {
                *((_DWORD *)a2 + 14) = v99;
              }
              unsigned int v70 = (unsigned __int8 *)*((void *)a2 + 1);
              if (*((_DWORD *)a2 + 4) - (int)v70 <= 1) {
                goto LABEL_2;
              }
              int v100 = *v70;
              if (v100 == 194) {
                break;
              }
              if (v100 != 186) {
                goto LABEL_2;
              }
            }
            if (v70[1] == 1)
            {
              do
              {
                *((void *)a2 + 1) = v70 + 2;
LABEL_270:
                uint64_t v101 = *((int *)this + 68);
                int v102 = *((_DWORD *)this + 69);
                if ((int)v101 >= v102)
                {
                  if (v102 == *((_DWORD *)this + 70))
                  {
                    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v9);
                    int v102 = *((_DWORD *)this + 69);
                  }
                  *((_DWORD *)this + 69) = v102 + 1;
                  operator new();
                }
                uint64_t v103 = *((void *)this + 33);
                *((_DWORD *)this + 68) = v101 + 1;
                double v104 = *(CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount **)(v103 + 8 * v101);
                v115[0] = 0;
                double v105 = (char *)*((void *)a2 + 1);
                if ((unint64_t)v105 >= *((void *)a2 + 2) || *v105 < 0)
                {
                  if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v115))return 0; {
                }
                  }
                else
                {
                  v115[0] = *v105;
                  *((void *)a2 + 1) = v105 + 1;
                }
                int v106 = *((_DWORD *)a2 + 14);
                int v107 = *((_DWORD *)a2 + 15);
                *((_DWORD *)a2 + 14) = v106 + 1;
                if (v106 >= v107) {
                  return 0;
                }
                wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
                if (!CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::MergePartialFromCodedStream(v104, a2)|| !*((unsigned char *)a2 + 36))
                {
                  return 0;
                }
                wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
                int v108 = *((_DWORD *)a2 + 14);
                BOOL v28 = __OFSUB__(v108, 1);
                int v109 = v108 - 1;
                if (v109 < 0 == v28) {
                  *((_DWORD *)a2 + 14) = v109;
                }
                unsigned int v70 = (unsigned __int8 *)*((void *)a2 + 1);
                double v110 = (unsigned __int8 *)*((void *)a2 + 2);
              }
              while ((int)v110 - (int)v70 > 1 && *v70 == 194 && v70[1] == 1);
              if (v70 == v110 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
              {
                *((_DWORD *)a2 + 8) = 0;
                uint64_t result = 1;
                *((unsigned char *)a2 + 36) = 1;
                return result;
              }
            }
          }
        }
        break;
      case 3u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_60;
        }
        int v18 = (char *)*((void *)a2 + 1);
        unint64_t v17 = *((void *)a2 + 2);
        goto LABEL_82;
      case 4u:
        int v12 = TagFallback & 7;
        if (v12 == 1) {
          goto LABEL_92;
        }
        goto LABEL_60;
      case 5u:
        int v12 = TagFallback & 7;
        if (v12 == 1) {
          goto LABEL_96;
        }
        goto LABEL_60;
      case 6u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_60;
        }
        int v20 = (char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        goto LABEL_100;
      case 7u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_60;
        }
        int v21 = (char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        goto LABEL_108;
      case 8u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_60;
        }
        int v22 = (char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        goto LABEL_116;
      case 9u:
        int v12 = TagFallback & 7;
        if (v12 == 1) {
          goto LABEL_124;
        }
        goto LABEL_60;
      case 0xAu:
        int v12 = TagFallback & 7;
        if (v12 == 1) {
          goto LABEL_128;
        }
        goto LABEL_60;
      case 0xBu:
        int v12 = TagFallback & 7;
        if (v12 == 1) {
          goto LABEL_132;
        }
        goto LABEL_60;
      case 0xCu:
        int v12 = TagFallback & 7;
        if (v12 == 1) {
          goto LABEL_136;
        }
        goto LABEL_60;
      case 0xDu:
        int v12 = TagFallback & 7;
        if (v12 == 1) {
          goto LABEL_140;
        }
        goto LABEL_60;
      case 0xEu:
        int v12 = TagFallback & 7;
        if (v12 == 1) {
          goto LABEL_144;
        }
        goto LABEL_60;
      case 0xFu:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_148;
        }
        goto LABEL_60;
      case 0x10u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_168;
        }
        goto LABEL_60;
      case 0x11u:
        int v12 = TagFallback & 7;
        if (v12 == 1) {
          goto LABEL_188;
        }
        goto LABEL_60;
      case 0x12u:
        int v12 = TagFallback & 7;
        if (v12 == 1) {
          goto LABEL_193;
        }
        goto LABEL_60;
      case 0x13u:
        int v12 = TagFallback & 7;
        if (v12 == 1) {
          goto LABEL_198;
        }
        goto LABEL_60;
      case 0x14u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_60;
        }
        int v23 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v24 = *((void *)a2 + 2);
        goto LABEL_203;
      case 0x15u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_212;
        }
        goto LABEL_60;
      case 0x16u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_230;
        }
        goto LABEL_60;
      case 0x17u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_249;
        }
        goto LABEL_60;
      case 0x18u:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_60;
        }
        goto LABEL_270;
      default:
        int v12 = TagFallback & 7;
LABEL_60:
        if (v12 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 292);
  if (v6)
  {
    uint64_t v14 = *(void *)(this + 8);
    if (!v14)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto((CoreNavigation::CLP::LogEntry::Raven *)this);
      uint64_t v14 = *(void *)(CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v14, a2, a4);
    int v6 = *(_DWORD *)(v5 + 292);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_44;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 16), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 292);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_45;
  }
LABEL_44:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 20), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 292);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_46;
  }
LABEL_45:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 292);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_47;
  }
LABEL_46:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 292);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_48;
  }
LABEL_47:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(void *)(v5 + 40), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 292);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_49;
  }
LABEL_48:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(void *)(v5 + 48), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 292);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_50;
  }
LABEL_49:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(void *)(v5 + 56), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 292);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_51;
  }
LABEL_50:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (uint64_t)a2, *(double *)(v5 + 64), a3);
  int v6 = *(_DWORD *)(v5 + 292);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_52;
  }
LABEL_51:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (uint64_t)a2, *(double *)(v5 + 72), a3);
  int v6 = *(_DWORD *)(v5 + 292);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_53;
  }
LABEL_52:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, (uint64_t)a2, *(double *)(v5 + 80), a3);
  int v6 = *(_DWORD *)(v5 + 292);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_54;
  }
LABEL_53:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, (uint64_t)a2, *(double *)(v5 + 88), a3);
  int v6 = *(_DWORD *)(v5 + 292);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
LABEL_54:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, (uint64_t)a2, *(double *)(v5 + 96), a3);
  if ((*(_DWORD *)(v5 + 292) & 0x2000) != 0) {
LABEL_15:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, (uint64_t)a2, *(double *)(v5 + 104), a3);
LABEL_16:
  if (*(int *)(v5 + 120) >= 1)
  {
    uint64_t v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, *(void *)(*(void *)(v5 + 112) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 120));
  }
  if (*(int *)(v5 + 144) >= 1)
  {
    uint64_t v8 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, *(void *)(*(void *)(v5 + 136) + 8 * v8++), a2, a4);
    while (v8 < *(int *)(v5 + 144));
  }
  int v9 = *(_DWORD *)(v5 + 292);
  if ((v9 & 0x10000) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, (uint64_t)a2, *(double *)(v5 + 160), a3);
    int v9 = *(_DWORD *)(v5 + 292);
    if ((v9 & 0x20000) == 0)
    {
LABEL_24:
      if ((v9 & 0x40000) == 0) {
        goto LABEL_25;
      }
      goto LABEL_58;
    }
  }
  else if ((v9 & 0x20000) == 0)
  {
    goto LABEL_24;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, (uint64_t)a2, *(double *)(v5 + 168), a3);
  int v9 = *(_DWORD *)(v5 + 292);
  if ((v9 & 0x40000) == 0)
  {
LABEL_25:
    if ((v9 & 0x80000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_26;
  }
LABEL_58:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, (uint64_t)a2, *(double *)(v5 + 176), a3);
  if ((*(_DWORD *)(v5 + 292) & 0x80000) != 0) {
LABEL_26:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14, *(void *)(v5 + 184), (uint64_t)a2, a4);
LABEL_27:
  if (*(int *)(v5 + 200) >= 1)
  {
    uint64_t v10 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x15, *(void *)(*(void *)(v5 + 192) + 8 * v10++), a2, a4);
    while (v10 < *(int *)(v5 + 200));
  }
  if (*(int *)(v5 + 224) >= 1)
  {
    uint64_t v11 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x16, *(void *)(*(void *)(v5 + 216) + 8 * v11++), a2, a4);
    while (v11 < *(int *)(v5 + 224));
  }
  if (*(int *)(v5 + 248) >= 1)
  {
    uint64_t v12 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x17, *(void *)(*(void *)(v5 + 240) + 8 * v12++), a2, a4);
    while (v12 < *(int *)(v5 + 248));
  }
  if (*(int *)(v5 + 272) >= 1)
  {
    uint64_t v13 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x18, *(void *)(*(void *)(v5 + 264) + 8 * v13++), a2, a4);
    while (v13 < *(int *)(v5 + 272));
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth::ByteSize(CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *this)
{
  int v2 = *((_DWORD *)this + 73);
  if (!(_BYTE)v2)
  {
    int v4 = 0;
    goto LABEL_34;
  }
  if ((v2 & 1) == 0)
  {
    int v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  uint64_t v5 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((void *)this + 1);
  if (!v5)
  {
    CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(0);
    uint64_t v5 = *(CoreNavigation::CLP::LogEntry::Raven::TimeStamp **)(CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth::default_instance_
                                                             + 8);
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::TimeStamp::ByteSize(v5);
  int v7 = (int)v6;
  if (v6 >= 0x80) {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
  }
  else {
    int v8 = 1;
  }
  int v3 = v7 + v8 + 1;
  int v2 = *((_DWORD *)this + 73);
  if ((v2 & 2) != 0)
  {
LABEL_12:
    int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if ((v9 & 0x80000000) != 0)
    {
      int v10 = 10;
    }
    else if (v9 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9);
      int v2 = *((_DWORD *)this + 73);
    }
    else
    {
      int v10 = 1;
    }
    v3 += v10 + 1;
  }
LABEL_18:
  if ((v2 & 4) != 0)
  {
    uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
    if ((v11 & 0x80000000) != 0)
    {
      int v12 = 10;
    }
    else if (v11 >= 0x80)
    {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11);
      int v2 = *((_DWORD *)this + 73);
    }
    else
    {
      int v12 = 1;
    }
    v3 += v12 + 1;
  }
  int v13 = v3 + 9;
  if ((v2 & 8) == 0) {
    int v13 = v3;
  }
  if ((v2 & 0x10) != 0) {
    int v4 = v13 + 9;
  }
  else {
    int v4 = v13;
  }
  if ((v2 & 0x20) != 0)
  {
    v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 5))
        + 1;
    int v2 = *((_DWORD *)this + 73);
    if ((v2 & 0x40) == 0)
    {
LABEL_32:
      if ((v2 & 0x80) == 0) {
        goto LABEL_34;
      }
      goto LABEL_33;
    }
  }
  else if ((v2 & 0x40) == 0)
  {
    goto LABEL_32;
  }
  v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                    + 6))
      + 1;
  int v2 = *((_DWORD *)this + 73);
  if ((v2 & 0x80) != 0)
  {
LABEL_33:
    v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                      + 7))
        + 1;
    int v2 = *((_DWORD *)this + 73);
  }
LABEL_34:
  int v14 = v4 + 9;
  if ((v2 & 0x100) == 0) {
    int v14 = v4;
  }
  if ((v2 & 0x200) != 0) {
    v14 += 9;
  }
  if ((v2 & 0x400) != 0) {
    v14 += 9;
  }
  if ((v2 & 0x800) != 0) {
    v14 += 9;
  }
  if ((v2 & 0x1000) != 0) {
    v14 += 9;
  }
  if ((v2 & 0x2000) != 0) {
    v14 += 9;
  }
  if ((v2 & 0xFF00) != 0) {
    int v4 = v14;
  }
  if ((v2 & 0xFF0000) != 0)
  {
    int v15 = v4 + 10;
    if ((v2 & 0x10000) == 0) {
      int v15 = v4;
    }
    if ((v2 & 0x20000) != 0) {
      v15 += 10;
    }
    if ((v2 & 0x40000) != 0) {
      int v4 = v15 + 10;
    }
    else {
      int v4 = v15;
    }
    if ((v2 & 0x80000) != 0) {
      v4 += wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
    }
                                                                                        + 23))
          + 2;
  }
  int v16 = *((_DWORD *)this + 30);
  int v17 = v16 + v4;
  if (v16 >= 1)
  {
    uint64_t v18 = 0;
    do
    {
      unint64_t v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::ByteSize(*(CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount **)(*((void *)this + 14) + 8 * v18));
      int v20 = (int)v19;
      if (v19 >= 0x80) {
        int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19);
      }
      else {
        int v21 = 1;
      }
      v17 += v20 + v21;
      ++v18;
    }
    while (v18 < *((int *)this + 30));
  }
  int v22 = *((_DWORD *)this + 36);
  int v23 = v17 + 2 * v22;
  if (v22 >= 1)
  {
    uint64_t v24 = 0;
    do
    {
      int v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::ByteSize(*(CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount **)(*((void *)this + 17) + 8 * v24));
      int v26 = (int)v25;
      if (v25 >= 0x80) {
        int v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25);
      }
      else {
        int v27 = 1;
      }
      v23 += v26 + v27;
      ++v24;
    }
    while (v24 < *((int *)this + 36));
  }
  int v28 = *((_DWORD *)this + 50);
  int v29 = v23 + 2 * v28;
  if (v28 >= 1)
  {
    uint64_t v30 = 0;
    do
    {
      unsigned int v31 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::ByteSize(*(CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount **)(*((void *)this + 24) + 8 * v30));
      int v32 = (int)v31;
      if (v31 >= 0x80) {
        int v33 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v31);
      }
      else {
        int v33 = 1;
      }
      v29 += v32 + v33;
      ++v30;
    }
    while (v30 < *((int *)this + 50));
  }
  int v34 = *((_DWORD *)this + 56);
  int v35 = v29 + 2 * v34;
  if (v34 >= 1)
  {
    uint64_t v36 = 0;
    do
    {
      unsigned int v37 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::ByteSize(*(CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount **)(*((void *)this + 27) + 8 * v36));
      int v38 = (int)v37;
      if (v37 >= 0x80) {
        int v39 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v37);
      }
      else {
        int v39 = 1;
      }
      v35 += v38 + v39;
      ++v36;
    }
    while (v36 < *((int *)this + 56));
  }
  int v40 = *((_DWORD *)this + 62);
  int v41 = v35 + 2 * v40;
  if (v40 >= 1)
  {
    uint64_t v42 = 0;
    do
    {
      int v43 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::ByteSize(*(CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount **)(*((void *)this + 30) + 8 * v42));
      int v44 = (int)v43;
      if (v43 >= 0x80) {
        int v45 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v43);
      }
      else {
        int v45 = 1;
      }
      v41 += v44 + v45;
      ++v42;
    }
    while (v42 < *((int *)this + 62));
  }
  int v46 = *((_DWORD *)this + 68);
  uint64_t v47 = (v41 + 2 * v46);
  if (v46 >= 1)
  {
    uint64_t v48 = 0;
    do
    {
      uint64_t v49 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount::ByteSize(*(CoreNavigation::CLP::LogEntry::Raven::MeasurementTypeCount **)(*((void *)this + 33) + 8 * v48));
      int v50 = (int)v49;
      if (v49 >= 0x80) {
        int v51 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v49);
      }
      else {
        int v51 = 1;
      }
      uint64_t v47 = (v50 + v47 + v51);
      ++v48;
    }
    while (v48 < *((int *)this + 68));
  }
  *((_DWORD *)this + 72) = v47;
  return v47;
}

double CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth::CopyFrom(CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *this, const CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth::IsInitialized(CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *a2)
{
  if (a2 != (CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth *)this)
  {
    uint64_t v3 = this;
    uint64_t v4 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v4;
    uint64_t v5 = *(void *)(this + 24);
    *(void *)(this + 24) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v5;
    uint64_t v6 = *(void *)(this + 32);
    *(void *)(this + 32) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v6;
    uint64_t v7 = *(void *)(this + 40);
    *(void *)(this + 40) = *((void *)a2 + 5);
    *((void *)a2 + 5) = v7;
    uint64_t v8 = *(void *)(this + 48);
    *(void *)(this + 48) = *((void *)a2 + 6);
    *((void *)a2 + 6) = v8;
    uint64_t v9 = *(void *)(this + 56);
    *(void *)(this + 56) = *((void *)a2 + 7);
    *((void *)a2 + 7) = v9;
    uint64_t v10 = *(void *)(this + 64);
    *(void *)(this + 64) = *((void *)a2 + 8);
    *((void *)a2 + 8) = v10;
    uint64_t v11 = *(void *)(this + 72);
    *(void *)(this + 72) = *((void *)a2 + 9);
    *((void *)a2 + 9) = v11;
    uint64_t v12 = *(void *)(this + 80);
    *(void *)(this + 80) = *((void *)a2 + 10);
    *((void *)a2 + 10) = v12;
    uint64_t v13 = *(void *)(this + 88);
    *(void *)(this + 88) = *((void *)a2 + 11);
    *((void *)a2 + 11) = v13;
    uint64_t v14 = *(void *)(this + 96);
    *(void *)(this + 96) = *((void *)a2 + 12);
    *((void *)a2 + 12) = v14;
    uint64_t v15 = *(void *)(this + 104);
    *(void *)(this + 104) = *((void *)a2 + 13);
    *((void *)a2 + 13) = v15;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    uint64_t v16 = *(void *)(v3 + 160);
    *(void *)(v3 + 160) = *((void *)a2 + 20);
    *((void *)a2 + 20) = v16;
    uint64_t v17 = *(void *)(v3 + 168);
    *(void *)(v3 + 168) = *((void *)a2 + 21);
    *((void *)a2 + 21) = v17;
    uint64_t v18 = *(void *)(v3 + 176);
    *(void *)(v3 + 176) = *((void *)a2 + 22);
    *((void *)a2 + 22) = v18;
    uint64_t v19 = *(void *)(v3 + 184);
    *(void *)(v3 + 184) = *((void *)a2 + 23);
    *((void *)a2 + 23) = v19;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    this = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    int v20 = *(_DWORD *)(v3 + 292);
    *(_DWORD *)(v3 + 292) = *((_DWORD *)a2 + 73);
    *((_DWORD *)a2 + 73) = v20;
    int v21 = *(_DWORD *)(v3 + 288);
    *(_DWORD *)(v3 + 288) = *((_DWORD *)a2 + 72);
    *((_DWORD *)a2 + 72) = v21;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::Raven::EstimatorHealth::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.Raven.EstimatorHealth");
}

BOOL CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity_UserActivityType_IsValid(CoreNavigation::CLP::LogEntry::Raven *this)
{
  return this < 0xA;
}

BOOL CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity_MovingStateType_IsValid(CoreNavigation::CLP::LogEntry::Raven *this)
{
  return this < 4;
}

BOOL CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity_MountStateType_IsValid(CoreNavigation::CLP::LogEntry::Raven *this)
{
  return this < 4;
}

BOOL CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity_PositionContextStateType_IsValid(CoreNavigation::CLP::LogEntry::Raven *this)
{
  return this < 3;
}

BOOL CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity_SignalEnvironmentType_IsValid(CoreNavigation::CLP::LogEntry::Raven *this)
{
  return this < 8;
}

BOOL CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity_UserFitnessSessionType_IsValid(CoreNavigation::CLP::LogEntry::Raven *this)
{
  return this < 0xA;
}

double CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity::SharedCtor(CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity *this)
{
  double result = 0.0;
  *(_OWORD *)((char *)this + 216) = 0u;
  *(_OWORD *)((char *)this + 200) = 0u;
  *(_OWORD *)((char *)this + 184) = 0u;
  *(_OWORD *)((char *)this + 168) = 0u;
  *(_OWORD *)((char *)this + 152) = 0u;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity *CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity::EstimatorActivity(CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity *this, const CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity *a2)
{
  *(void *)this = &unk_1EDD110F0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 152) = 0u;
  *(_OWORD *)((char *)this + 168) = 0u;
  *(_OWORD *)((char *)this + 184) = 0u;
  *(_OWORD *)((char *)this + 200) = 0u;
  *(_OWORD *)((char *)this + 216) = 0u;
  CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity::MergeFrom(this, a2);
  return this;
}

void sub_18DF16890(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity::~EstimatorActivity(CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity *this)
{
  *(void *)this = &unk_1EDD110F0;
  CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity::~EstimatorActivity(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity::SharedDtor(CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity *this)
{
  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity *)CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2)
    {
      uint64_t v3 = *(void (**)(void))(*(void *)v2 + 8);
      v3();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity::default_instance(CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity *this)
{
  return CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 224) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity::New(CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (2)
  {
    uint64_t v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_72;
        }
        *((_DWORD *)this + 57) |= 1u;
        uint64_t v7 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((void *)this + 1);
        if (!v7) {
          operator new();
        }
        v62[0] = 0;
        uint64_t v8 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v62))return 0; {
        }
          }
        else
        {
          v62[0] = *v8;
          *((void *)a2 + 1) = v8 + 1;
        }
        int v21 = *((_DWORD *)a2 + 14);
        int v22 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v21 + 1;
        if (v21 >= v22) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::TimeStamp::MergePartialFromCodedStream(v7, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v23 = *((_DWORD *)a2 + 14);
        BOOL v24 = __OFSUB__(v23, 1);
        int v25 = v23 - 1;
        if (v25 < 0 == v24) {
          *((_DWORD *)a2 + 14) = v25;
        }
        int v26 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
        if ((unint64_t)v26 >= v11 || *v26 != 16) {
          continue;
        }
        uint64_t v12 = v26 + 1;
        *((void *)a2 + 1) = v12;
        goto LABEL_84;
      case 2u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_72;
        }
        uint64_t v12 = (char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
LABEL_84:
        v62[0] = 0;
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v62);
          if (!result) {
            return result;
          }
          unsigned int v27 = v62[0];
        }
        else
        {
          unsigned int v27 = *v12;
          *((void *)a2 + 1) = v12 + 1;
        }
        if (v27 <= 9)
        {
          *((_DWORD *)this + 57) |= 2u;
          *((_DWORD *)this + 6) = v27;
        }
        int v29 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v29 >= *((void *)a2 + 2) || *v29 != 25) {
          continue;
        }
        *((void *)a2 + 1) = v29 + 1;
LABEL_94:
        *(void *)double v62 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v62) & 1) == 0)return 0; {
        *((void *)this + 2) = *(void *)v62;
        }
        *((_DWORD *)this + 57) |= 4u;
        uint64_t v30 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        if ((unint64_t)v30 >= v13 || *v30 != 32) {
          continue;
        }
        uint64_t v14 = v30 + 1;
        *((void *)a2 + 1) = v14;
LABEL_98:
        v62[0] = 0;
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v62);
          if (!result) {
            return result;
          }
          unsigned int v31 = v62[0];
        }
        else
        {
          unsigned int v31 = *v14;
          *((void *)a2 + 1) = v14 + 1;
        }
        if (v31 <= 3)
        {
          *((_DWORD *)this + 57) |= 8u;
          *((_DWORD *)this + 7) = v31;
        }
        int v32 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v32 >= *((void *)a2 + 2) || *v32 != 41) {
          continue;
        }
        *((void *)a2 + 1) = v32 + 1;
LABEL_108:
        *(void *)double v62 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v62) & 1) == 0)return 0; {
        *((void *)this + 4) = *(void *)v62;
        }
        *((_DWORD *)this + 57) |= 0x10u;
        int v33 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v33 >= *((void *)a2 + 2) || *v33 != 49) {
          continue;
        }
        *((void *)a2 + 1) = v33 + 1;
LABEL_112:
        *(void *)double v62 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v62) & 1) == 0)return 0; {
        *((void *)this + 5) = *(void *)v62;
        }
        *((_DWORD *)this + 57) |= 0x20u;
        int v34 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        if ((unint64_t)v34 >= v15 || *v34 != 56) {
          continue;
        }
        uint64_t v16 = v34 + 1;
        *((void *)a2 + 1) = v16;
LABEL_116:
        v62[0] = 0;
        if ((unint64_t)v16 >= v15 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v62);
          if (!result) {
            return result;
          }
          unsigned int v35 = v62[0];
        }
        else
        {
          unsigned int v35 = *v16;
          *((void *)a2 + 1) = v16 + 1;
        }
        if (v35 <= 9)
        {
          *((_DWORD *)this + 57) |= 0x40u;
          *((_DWORD *)this + 12) = v35;
        }
        uint64_t v36 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v17 = *((void *)a2 + 2);
        if ((unint64_t)v36 >= v17 || *v36 != 64) {
          continue;
        }
        uint64_t v18 = v36 + 1;
        *((void *)a2 + 1) = v18;
LABEL_126:
        v62[0] = 0;
        if ((unint64_t)v18 >= v17 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v62);
          if (!result) {
            return result;
          }
          unsigned int v37 = v62[0];
        }
        else
        {
          unsigned int v37 = *v18;
          *((void *)a2 + 1) = v18 + 1;
        }
        if (v37 <= 3)
        {
          *((_DWORD *)this + 57) |= 0x80u;
          *((_DWORD *)this + 13) = v37;
        }
        int v38 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        if ((unint64_t)v38 >= v19 || *v38 != 72) {
          continue;
        }
        int v20 = v38 + 1;
        *((void *)a2 + 1) = v20;
LABEL_136:
        v62[0] = 0;
        if ((unint64_t)v20 >= v19 || *v20 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v62);
          if (!result) {
            return result;
          }
          unsigned int v39 = v62[0];
        }
        else
        {
          unsigned int v39 = *v20;
          *((void *)a2 + 1) = v20 + 1;
        }
        if (v39 <= 2)
        {
          *((_DWORD *)this + 57) |= 0x100u;
          *((_DWORD *)this + 34) = v39;
        }
        int v40 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v40 < 2 || *v40 != 161 || v40[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v40 + 2;
LABEL_147:
        *(void *)double v62 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v62) & 1) == 0)return 0; {
        *((void *)this + 7) = *(void *)v62;
        }
        *((_DWORD *)this + 57) |= 0x200u;
        int v41 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v41 < 2 || *v41 != 169 || v41[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v41 + 2;
LABEL_152:
        *(void *)double v62 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v62) & 1) == 0)return 0; {
        *((void *)this + 8) = *(void *)v62;
        }
        *((_DWORD *)this + 57) |= 0x400u;
        uint64_t v42 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v42 < 2 || *v42 != 177 || v42[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v42 + 2;
LABEL_157:
        *(void *)double v62 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v62) & 1) == 0)return 0; {
        *((void *)this + 9) = *(void *)v62;
        }
        *((_DWORD *)this + 57) |= 0x800u;
        int v43 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v43 < 2 || *v43 != 185 || v43[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v43 + 2;
LABEL_162:
        *(void *)double v62 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v62) & 1) == 0)return 0; {
        *((void *)this + 10) = *(void *)v62;
        }
        *((_DWORD *)this + 57) |= 0x1000u;
        int v44 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v44 < 2 || *v44 != 193 || v44[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v44 + 2;
LABEL_167:
        *(void *)double v62 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v62) & 1) == 0)return 0; {
        *((void *)this + 11) = *(void *)v62;
        }
        *((_DWORD *)this + 57) |= 0x2000u;
        int v45 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v45 < 2 || *v45 != 201 || v45[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v45 + 2;
LABEL_172:
        *(void *)double v62 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v62) & 1) == 0)return 0; {
        *((void *)this + 12) = *(void *)v62;
        }
        *((_DWORD *)this + 57) |= 0x4000u;
        int v46 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v46 < 2 || *v46 != 209 || v46[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v46 + 2;
LABEL_177:
        *(void *)double v62 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v62) & 1) == 0)return 0; {
        *((void *)this + 13) = *(void *)v62;
        }
        *((_DWORD *)this + 57) |= 0x8000u;
        uint64_t v47 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v47 < 2 || *v47 != 217 || v47[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v47 + 2;
LABEL_182:
        *(void *)double v62 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v62) & 1) == 0)return 0; {
        *((void *)this + 14) = *(void *)v62;
        }
        *((_DWORD *)this + 57) |= 0x10000u;
        uint64_t v48 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v48 < 2 || *v48 != 225 || v48[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v48 + 2;
LABEL_187:
        *(void *)double v62 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v62) & 1) == 0)return 0; {
        *((void *)this + 15) = *(void *)v62;
        }
        *((_DWORD *)this + 57) |= 0x20000u;
        uint64_t v49 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v49 < 2 || *v49 != 233 || v49[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v49 + 2;
LABEL_192:
        *(void *)double v62 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v62) & 1) == 0)return 0; {
        *((void *)this + 16) = *(void *)v62;
        }
        *((_DWORD *)this + 57) |= 0x40000u;
        int v50 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v50 < 2 || *v50 != 145 || v50[1] != 3) {
          continue;
        }
        *((void *)a2 + 1) = v50 + 2;
LABEL_197:
        *(void *)double v62 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v62) & 1) == 0)return 0; {
        *((void *)this + 18) = *(void *)v62;
        }
        *((_DWORD *)this + 57) |= 0x80000u;
        int v51 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v51 < 2 || *v51 != 153 || v51[1] != 3) {
          continue;
        }
        *((void *)a2 + 1) = v51 + 2;
LABEL_202:
        *(void *)double v62 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v62) & 1) == 0)return 0; {
        *((void *)this + 19) = *(void *)v62;
        }
        *((_DWORD *)this + 57) |= 0x100000u;
        int v52 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v52 < 2 || *v52 != 161 || v52[1] != 3) {
          continue;
        }
        *((void *)a2 + 1) = v52 + 2;
LABEL_207:
        *(void *)double v62 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v62) & 1) == 0)return 0; {
        *((void *)this + 20) = *(void *)v62;
        }
        *((_DWORD *)this + 57) |= 0x200000u;
        int v53 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v53 < 2 || *v53 != 169 || v53[1] != 3) {
          continue;
        }
        *((void *)a2 + 1) = v53 + 2;
LABEL_212:
        *(void *)double v62 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v62) & 1) == 0)return 0; {
        *((void *)this + 21) = *(void *)v62;
        }
        *((_DWORD *)this + 57) |= 0x400000u;
        int v54 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v54 < 2 || *v54 != 225 || v54[1] != 3) {
          continue;
        }
        *((void *)a2 + 1) = v54 + 2;
LABEL_217:
        *(void *)double v62 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v62) & 1) == 0)return 0; {
        *((void *)this + 22) = *(void *)v62;
        }
        *((_DWORD *)this + 57) |= 0x800000u;
        int v55 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v55 < 2 || *v55 != 233 || v55[1] != 3) {
          continue;
        }
        *((void *)a2 + 1) = v55 + 2;
LABEL_222:
        *(void *)double v62 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v62) & 1) == 0)return 0; {
        *((void *)this + 23) = *(void *)v62;
        }
        *((_DWORD *)this + 57) |= 0x1000000u;
        unint64_t v56 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v56 < 2 || *v56 != 241 || v56[1] != 3) {
          continue;
        }
        *((void *)a2 + 1) = v56 + 2;
LABEL_227:
        *(void *)double v62 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v62) & 1) == 0)return 0; {
        *((void *)this + 24) = *(void *)v62;
        }
        *((_DWORD *)this + 57) |= 0x2000000u;
        int v57 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v57 < 2 || *v57 != 249 || v57[1] != 3) {
          continue;
        }
        *((void *)a2 + 1) = v57 + 2;
LABEL_232:
        *(void *)double v62 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v62) & 1) == 0)return 0; {
        *((void *)this + 25) = *(void *)v62;
        }
        *((_DWORD *)this + 57) |= 0x4000000u;
        int v58 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v58 < 2 || *v58 != 177 || v58[1] != 4) {
          continue;
        }
        *((void *)a2 + 1) = v58 + 2;
LABEL_237:
        *(void *)double v62 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v62) & 1) == 0)return 0; {
        *((void *)this + 26) = *(void *)v62;
        }
        *((_DWORD *)this + 57) |= 0x8000000u;
        uint64_t v59 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v59 < 2 || *v59 != 185 || v59[1] != 4) {
          continue;
        }
        *((void *)a2 + 1) = v59 + 2;
LABEL_242:
        *(void *)double v62 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v62))
        {
          *((void *)this + 27) = *(void *)v62;
          *((_DWORD *)this + 57) |= 0x10000000u;
          uint64_t v60 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
          if ((int)v9 - (int)v60 >= 2 && *v60 == 128 && v60[1] == 5)
          {
            uint64_t v10 = (char *)(v60 + 2);
            *((void *)a2 + 1) = v10;
LABEL_247:
            v62[0] = 0;
            if ((unint64_t)v10 >= v9 || *v10 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v62);
              if (!result) {
                return result;
              }
              unsigned int v61 = v62[0];
            }
            else
            {
              unsigned int v61 = *v10;
              *((void *)a2 + 1) = v10 + 1;
            }
            if (v61 <= 7)
            {
              *((_DWORD *)this + 57) |= 0x20000000u;
              *((_DWORD *)this + 35) = v61;
            }
            if (*((void *)a2 + 1) == *((void *)a2 + 2)
              && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
            {
              *((_DWORD *)a2 + 8) = 0;
              uint64_t result = 1;
              *((unsigned char *)a2 + 36) = 1;
              return result;
            }
          }
          continue;
        }
        return 0;
      case 3u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_94;
        }
        goto LABEL_72;
      case 4u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_72;
        }
        uint64_t v14 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_98;
      case 5u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_108;
        }
        goto LABEL_72;
      case 6u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_112;
        }
        goto LABEL_72;
      case 7u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_72;
        }
        uint64_t v16 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_116;
      case 8u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_72;
        }
        uint64_t v18 = (char *)*((void *)a2 + 1);
        unint64_t v17 = *((void *)a2 + 2);
        goto LABEL_126;
      case 9u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_72;
        }
        int v20 = (char *)*((void *)a2 + 1);
        unint64_t v19 = *((void *)a2 + 2);
        goto LABEL_136;
      case 0xAu:
      case 0xBu:
      case 0xCu:
      case 0xDu:
      case 0xEu:
      case 0xFu:
      case 0x10u:
      case 0x11u:
      case 0x12u:
      case 0x13u:
      case 0x1Eu:
      case 0x1Fu:
      case 0x20u:
      case 0x21u:
      case 0x22u:
      case 0x23u:
      case 0x24u:
      case 0x25u:
      case 0x26u:
      case 0x27u:
      case 0x28u:
      case 0x29u:
      case 0x2Au:
      case 0x2Bu:
      case 0x2Cu:
      case 0x2Du:
      case 0x2Eu:
      case 0x2Fu:
      case 0x30u:
      case 0x31u:
      case 0x36u:
      case 0x37u:
      case 0x38u:
      case 0x39u:
      case 0x3Au:
      case 0x3Bu:
      case 0x40u:
      case 0x41u:
      case 0x42u:
      case 0x43u:
      case 0x44u:
      case 0x45u:
        goto LABEL_16;
      case 0x14u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_147;
        }
        goto LABEL_72;
      case 0x15u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_152;
        }
        goto LABEL_72;
      case 0x16u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_157;
        }
        goto LABEL_72;
      case 0x17u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_162;
        }
        goto LABEL_72;
      case 0x18u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_167;
        }
        goto LABEL_72;
      case 0x19u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_172;
        }
        goto LABEL_72;
      case 0x1Au:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_177;
        }
        goto LABEL_72;
      case 0x1Bu:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_182;
        }
        goto LABEL_72;
      case 0x1Cu:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_187;
        }
        goto LABEL_72;
      case 0x1Du:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_192;
        }
        goto LABEL_72;
      case 0x32u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_197;
        }
        goto LABEL_72;
      case 0x33u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_202;
        }
        goto LABEL_72;
      case 0x34u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_207;
        }
        goto LABEL_72;
      case 0x35u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_212;
        }
        goto LABEL_72;
      case 0x3Cu:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_217;
        }
        goto LABEL_72;
      case 0x3Du:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_222;
        }
        goto LABEL_72;
      case 0x3Eu:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_227;
        }
        goto LABEL_72;
      case 0x3Fu:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_232;
        }
        goto LABEL_72;
      case 0x46u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_237;
        }
        goto LABEL_72;
      case 0x47u:
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_72;
        }
        goto LABEL_242;
      default:
        if (TagFallback >> 3 == 80)
        {
          int v6 = TagFallback & 7;
          if ((TagFallback & 7) == 0)
          {
            uint64_t v10 = (char *)*((void *)a2 + 1);
            unint64_t v9 = *((void *)a2 + 2);
            goto LABEL_247;
          }
        }
        else
        {
LABEL_16:
          int v6 = TagFallback & 7;
        }
LABEL_72:
        if (v6 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 228);
  if (v6)
  {
    uint64_t v7 = *(void *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto((CoreNavigation::CLP::LogEntry::Raven *)this);
      uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 228);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_36;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_37;
  }
LABEL_36:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_38;
  }
LABEL_37:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 28), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_39;
  }
LABEL_38:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_40;
  }
LABEL_39:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(double *)(v5 + 40), a3);
  int v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_41;
  }
LABEL_40:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(unsigned int *)(v5 + 48), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_42;
  }
LABEL_41:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned int *)(v5 + 52), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_43;
  }
LABEL_42:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned int *)(v5 + 136), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_44;
  }
LABEL_43:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14, (uint64_t)a2, *(double *)(v5 + 56), a3);
  int v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_45;
  }
LABEL_44:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x15, (uint64_t)a2, *(double *)(v5 + 64), a3);
  int v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_46;
  }
LABEL_45:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x16, (uint64_t)a2, *(double *)(v5 + 72), a3);
  int v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_47;
  }
LABEL_46:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x17, (uint64_t)a2, *(double *)(v5 + 80), a3);
  int v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_48;
  }
LABEL_47:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x18, (uint64_t)a2, *(double *)(v5 + 88), a3);
  int v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_49;
  }
LABEL_48:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x19, (uint64_t)a2, *(double *)(v5 + 96), a3);
  int v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_50;
  }
LABEL_49:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1A, (uint64_t)a2, *(double *)(v5 + 104), a3);
  int v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x10000) == 0)
  {
LABEL_18:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_51;
  }
LABEL_50:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1B, (uint64_t)a2, *(double *)(v5 + 112), a3);
  int v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x20000) == 0)
  {
LABEL_19:
    if ((v6 & 0x40000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_52;
  }
LABEL_51:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1C, (uint64_t)a2, *(double *)(v5 + 120), a3);
  int v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x40000) == 0)
  {
LABEL_20:
    if ((v6 & 0x80000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_53;
  }
LABEL_52:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1D, (uint64_t)a2, *(double *)(v5 + 128), a3);
  int v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x80000) == 0)
  {
LABEL_21:
    if ((v6 & 0x100000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_54;
  }
LABEL_53:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x32, (uint64_t)a2, *(double *)(v5 + 144), a3);
  int v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x100000) == 0)
  {
LABEL_22:
    if ((v6 & 0x200000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_55;
  }
LABEL_54:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x33, (uint64_t)a2, *(double *)(v5 + 152), a3);
  int v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x200000) == 0)
  {
LABEL_23:
    if ((v6 & 0x400000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_56;
  }
LABEL_55:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x34, (uint64_t)a2, *(double *)(v5 + 160), a3);
  int v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x400000) == 0)
  {
LABEL_24:
    if ((v6 & 0x800000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_57;
  }
LABEL_56:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x35, (uint64_t)a2, *(double *)(v5 + 168), a3);
  int v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x800000) == 0)
  {
LABEL_25:
    if ((v6 & 0x1000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_58;
  }
LABEL_57:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3C, (uint64_t)a2, *(double *)(v5 + 176), a3);
  int v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x1000000) == 0)
  {
LABEL_26:
    if ((v6 & 0x2000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_59;
  }
LABEL_58:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3D, (uint64_t)a2, *(double *)(v5 + 184), a3);
  int v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x2000000) == 0)
  {
LABEL_27:
    if ((v6 & 0x4000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_60;
  }
LABEL_59:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3E, (uint64_t)a2, *(double *)(v5 + 192), a3);
  int v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x4000000) == 0)
  {
LABEL_28:
    if ((v6 & 0x8000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_61;
  }
LABEL_60:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x3F, (uint64_t)a2, *(double *)(v5 + 200), a3);
  int v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x8000000) == 0)
  {
LABEL_29:
    if ((v6 & 0x10000000) == 0) {
      goto LABEL_30;
    }
LABEL_62:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x47, (uint64_t)a2, *(double *)(v5 + 216), a3);
    if ((*(_DWORD *)(v5 + 228) & 0x20000000) == 0) {
      return this;
    }
    goto LABEL_63;
  }
LABEL_61:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x46, (uint64_t)a2, *(double *)(v5 + 208), a3);
  int v6 = *(_DWORD *)(v5 + 228);
  if ((v6 & 0x10000000) != 0) {
    goto LABEL_62;
  }
LABEL_30:
  if ((v6 & 0x20000000) == 0) {
    return this;
  }
LABEL_63:
  uint64_t v8 = *(unsigned int *)(v5 + 140);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x50, v8, (uint64_t)a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity::ByteSize(CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity *this)
{
  unsigned int v2 = *((_DWORD *)this + 57);
  if (!(_BYTE)v2)
  {
    uint64_t v4 = 0;
    goto LABEL_46;
  }
  if (v2)
  {
    uint64_t v5 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((void *)this + 1);
    if (!v5)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(0);
      uint64_t v5 = *(CoreNavigation::CLP::LogEntry::Raven::TimeStamp **)(CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity::default_instance_
                                                               + 8);
    }
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::TimeStamp::ByteSize(v5);
    int v7 = (int)v6;
    if (v6 >= 0x80) {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
    }
    else {
      int v8 = 1;
    }
    int v3 = v7 + v8 + 1;
    unsigned int v2 = *((_DWORD *)this + 57);
    if ((v2 & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  int v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_12:
    unint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    if ((v9 & 0x80000000) != 0)
    {
      int v10 = 10;
    }
    else if (v9 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9);
      unsigned int v2 = *((_DWORD *)this + 57);
    }
    else
    {
      int v10 = 1;
    }
    v3 += v10 + 1;
  }
LABEL_18:
  if ((v2 & 4) != 0) {
    v3 += 9;
  }
  if ((v2 & 8) != 0)
  {
    unint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
    if ((v11 & 0x80000000) != 0)
    {
      int v12 = 11;
    }
    else if (v11 >= 0x80)
    {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11) + 1;
      unsigned int v2 = *((_DWORD *)this + 57);
    }
    else
    {
      int v12 = 2;
    }
    v3 += v12;
  }
  unsigned int v13 = v3 + 9;
  if ((v2 & 0x10) == 0) {
    unsigned int v13 = v3;
  }
  if ((v2 & 0x20) != 0) {
    uint64_t v4 = v13 + 9;
  }
  else {
    uint64_t v4 = v13;
  }
  if ((v2 & 0x40) != 0)
  {
    uint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
    if ((v14 & 0x80000000) != 0)
    {
      int v15 = 11;
    }
    else if (v14 >= 0x80)
    {
      int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14) + 1;
      unsigned int v2 = *((_DWORD *)this + 57);
    }
    else
    {
      int v15 = 2;
    }
    uint64_t v4 = (v15 + v4);
  }
  if ((v2 & 0x80) != 0)
  {
    uint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
    if ((v16 & 0x80000000) != 0)
    {
      int v17 = 11;
    }
    else if (v16 >= 0x80)
    {
      int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16) + 1;
      unsigned int v2 = *((_DWORD *)this + 57);
    }
    else
    {
      int v17 = 2;
    }
    uint64_t v4 = (v17 + v4);
  }
LABEL_46:
  if ((v2 & 0xFF00) != 0)
  {
    if ((v2 & 0x100) != 0)
    {
      uint64_t v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 34);
      if ((v18 & 0x80000000) != 0)
      {
        int v19 = 11;
      }
      else if (v18 >= 0x80)
      {
        int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18) + 1;
        unsigned int v2 = *((_DWORD *)this + 57);
      }
      else
      {
        int v19 = 2;
      }
      LODWORD(v4) = v19 + v4;
    }
    unsigned int v20 = v4 + 10;
    if ((v2 & 0x200) == 0) {
      unsigned int v20 = v4;
    }
    if ((v2 & 0x400) != 0) {
      v20 += 10;
    }
    if ((v2 & 0x800) != 0) {
      v20 += 10;
    }
    if ((v2 & 0x1000) != 0) {
      v20 += 10;
    }
    if ((v2 & 0x2000) != 0) {
      v20 += 10;
    }
    if ((v2 & 0x4000) != 0) {
      v20 += 10;
    }
    if ((v2 & 0x8000) != 0) {
      uint64_t v4 = v20 + 10;
    }
    else {
      uint64_t v4 = v20;
    }
  }
  if ((v2 & 0xFF0000) != 0)
  {
    unsigned int v21 = v4 + 10;
    if ((v2 & 0x10000) == 0) {
      unsigned int v21 = v4;
    }
    if ((v2 & 0x20000) != 0) {
      v21 += 10;
    }
    if ((v2 & 0x40000) != 0) {
      v21 += 10;
    }
    if ((v2 & 0x80000) != 0) {
      v21 += 10;
    }
    if ((v2 & 0x100000) != 0) {
      v21 += 10;
    }
    if ((v2 & 0x200000) != 0) {
      v21 += 10;
    }
    if ((v2 & 0x400000) != 0) {
      v21 += 10;
    }
    if ((v2 & 0x800000) != 0) {
      uint64_t v4 = v21 + 10;
    }
    else {
      uint64_t v4 = v21;
    }
  }
  if (HIBYTE(v2))
  {
    unsigned int v22 = v4 + 10;
    if ((v2 & 0x1000000) == 0) {
      unsigned int v22 = v4;
    }
    if ((v2 & 0x2000000) != 0) {
      v22 += 10;
    }
    if ((v2 & 0x4000000) != 0) {
      v22 += 10;
    }
    if ((v2 & 0x8000000) != 0) {
      v22 += 10;
    }
    if ((v2 & 0x10000000) != 0) {
      uint64_t v4 = v22 + 10;
    }
    else {
      uint64_t v4 = v22;
    }
    if ((v2 & 0x20000000) != 0)
    {
      int v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 35);
      if ((v23 & 0x80000000) != 0)
      {
        int v24 = 12;
      }
      else if (v23 >= 0x80)
      {
        int v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v23) + 2;
      }
      else
      {
        int v24 = 3;
      }
      uint64_t v4 = (v24 + v4);
    }
  }
  *((_DWORD *)this + 56) = v4;
  return v4;
}

void CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity::CopyFrom(CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity *this, const CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity::IsInitialized(CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity::Swap(CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity *this, CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    LODWORD(v2) = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
    uint64_t v3 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    LODWORD(v2) = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    uint64_t v4 = *((void *)this + 4);
    *((void *)this + 4) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v4;
    uint64_t v5 = *((void *)this + 5);
    *((void *)this + 5) = *((void *)a2 + 5);
    *((void *)a2 + 5) = v5;
    LODWORD(v2) = *((_DWORD *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v2;
    LODWORD(v2) = *((_DWORD *)this + 13);
    *((_DWORD *)this + 13) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v2;
    LODWORD(v2) = *((_DWORD *)this + 34);
    *((_DWORD *)this + 34) = *((_DWORD *)a2 + 34);
    *((_DWORD *)a2 + 34) = v2;
    uint64_t v6 = *((void *)this + 7);
    *((void *)this + 7) = *((void *)a2 + 7);
    *((void *)a2 + 7) = v6;
    uint64_t v7 = *((void *)this + 8);
    *((void *)this + 8) = *((void *)a2 + 8);
    *((void *)a2 + 8) = v7;
    uint64_t v8 = *((void *)this + 9);
    *((void *)this + 9) = *((void *)a2 + 9);
    *((void *)a2 + 9) = v8;
    uint64_t v9 = *((void *)this + 10);
    *((void *)this + 10) = *((void *)a2 + 10);
    *((void *)a2 + 10) = v9;
    uint64_t v10 = *((void *)this + 11);
    *((void *)this + 11) = *((void *)a2 + 11);
    *((void *)a2 + 11) = v10;
    uint64_t v11 = *((void *)this + 12);
    *((void *)this + 12) = *((void *)a2 + 12);
    *((void *)a2 + 12) = v11;
    uint64_t v12 = *((void *)this + 13);
    *((void *)this + 13) = *((void *)a2 + 13);
    *((void *)a2 + 13) = v12;
    uint64_t v13 = *((void *)this + 14);
    *((void *)this + 14) = *((void *)a2 + 14);
    *((void *)a2 + 14) = v13;
    uint64_t v14 = *((void *)this + 15);
    *((void *)this + 15) = *((void *)a2 + 15);
    *((void *)a2 + 15) = v14;
    uint64_t v15 = *((void *)this + 16);
    *((void *)this + 16) = *((void *)a2 + 16);
    *((void *)a2 + 16) = v15;
    uint64_t v16 = *((void *)this + 18);
    *((void *)this + 18) = *((void *)a2 + 18);
    *((void *)a2 + 18) = v16;
    uint64_t v17 = *((void *)this + 19);
    *((void *)this + 19) = *((void *)a2 + 19);
    *((void *)a2 + 19) = v17;
    uint64_t v18 = *((void *)this + 20);
    *((void *)this + 20) = *((void *)a2 + 20);
    *((void *)a2 + 20) = v18;
    uint64_t v19 = *((void *)this + 21);
    *((void *)this + 21) = *((void *)a2 + 21);
    *((void *)a2 + 21) = v19;
    uint64_t v20 = *((void *)this + 22);
    *((void *)this + 22) = *((void *)a2 + 22);
    *((void *)a2 + 22) = v20;
    uint64_t v21 = *((void *)this + 23);
    *((void *)this + 23) = *((void *)a2 + 23);
    *((void *)a2 + 23) = v21;
    uint64_t v22 = *((void *)this + 24);
    *((void *)this + 24) = *((void *)a2 + 24);
    *((void *)a2 + 24) = v22;
    uint64_t v23 = *((void *)this + 25);
    *((void *)this + 25) = *((void *)a2 + 25);
    *((void *)a2 + 25) = v23;
    uint64_t v24 = *((void *)this + 26);
    *((void *)this + 26) = *((void *)a2 + 26);
    *((void *)a2 + 26) = v24;
    double result = *((double *)this + 27);
    *((void *)this + 27) = *((void *)a2 + 27);
    *((double *)a2 + 27) = result;
    LODWORD(v2) = *((_DWORD *)this + 35);
    *((_DWORD *)this + 35) = *((_DWORD *)a2 + 35);
    *((_DWORD *)a2 + 35) = v2;
    LODWORD(v2) = *((_DWORD *)this + 57);
    *((_DWORD *)this + 57) = *((_DWORD *)a2 + 57);
    *((_DWORD *)a2 + 57) = v2;
    LODWORD(v2) = *((_DWORD *)this + 56);
    *((_DWORD *)this + 56) = *((_DWORD *)a2 + 56);
    *((_DWORD *)a2 + 56) = v2;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.Raven.EstimatorActivity");
}

double CoreNavigation::CLP::LogEntry::Raven::NrParameters::SharedCtor(CoreNavigation::CLP::LogEntry::Raven::NrParameters *this)
{
  *((_DWORD *)this + 39) = 0;
  *((_DWORD *)this + 40) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 136) = 0u;
  *((_WORD *)this + 76) = 0;
  return result;
}

CoreNavigation::CLP::LogEntry::Raven::NrParameters *CoreNavigation::CLP::LogEntry::Raven::NrParameters::NrParameters(CoreNavigation::CLP::LogEntry::Raven::NrParameters *this, const CoreNavigation::CLP::LogEntry::Raven::NrParameters *a2)
{
  *(void *)this = &unk_1EDD10D30;
  *((_DWORD *)this + 39) = 0;
  *((_DWORD *)this + 40) = 0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 136) = 0u;
  *((_WORD *)this + 76) = 0;
  CoreNavigation::CLP::LogEntry::Raven::NrParameters::MergeFrom(this, a2);
  return this;
}

void sub_18DF184BC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Raven::NrParameters::~NrParameters(CoreNavigation::CLP::LogEntry::Raven::NrParameters *this)
{
  *(void *)this = &unk_1EDD10D30;
  CoreNavigation::CLP::LogEntry::Raven::NrParameters::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::Raven::NrParameters::~NrParameters(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::Raven::NrParameters::SharedDtor(CoreNavigation::CLP::LogEntry::Raven::NrParameters *this)
{
  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::Raven::NrParameters *)CoreNavigation::CLP::LogEntry::Raven::NrParameters::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2)
    {
      uint64_t v3 = *(void (**)(void))(*(void *)v2 + 8);
      v3();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::NrParameters::default_instance(CoreNavigation::CLP::LogEntry::Raven::NrParameters *this)
{
  return CoreNavigation::CLP::LogEntry::Raven::NrParameters::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::NrParameters::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 156) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::Raven::NrParameters::New(CoreNavigation::CLP::LogEntry::Raven::NrParameters *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::NrParameters::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Raven::NrParameters *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (2)
  {
    uint64_t v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_51;
        }
        *((_DWORD *)this + 40) |= 1u;
        uint64_t v7 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((void *)this + 1);
        if (!v7) {
          operator new();
        }
        v39[0] = 0;
        uint64_t v8 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v39))return 0; {
        }
          }
        else
        {
          v39[0] = *v8;
          *((void *)a2 + 1) = v8 + 1;
        }
        int v12 = *((_DWORD *)a2 + 14);
        int v13 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v12 + 1;
        if (v12 >= v13) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::TimeStamp::MergePartialFromCodedStream(v7, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v14 = *((_DWORD *)a2 + 14);
        BOOL v15 = __OFSUB__(v14, 1);
        int v16 = v14 - 1;
        if (v16 < 0 == v15) {
          *((_DWORD *)a2 + 14) = v16;
        }
        uint64_t v17 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v17 >= *((void *)a2 + 2) || *v17 != 17) {
          continue;
        }
        *((void *)a2 + 1) = v17 + 1;
        goto LABEL_63;
      case 2u:
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_51;
        }
LABEL_63:
        *(void *)unsigned int v39 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v39) & 1) == 0)return 0; {
        *((void *)this + 2) = *(void *)v39;
        }
        *((_DWORD *)this + 40) |= 2u;
        uint64_t v18 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v18 >= *((void *)a2 + 2) || *v18 != 25) {
          continue;
        }
        *((void *)a2 + 1) = v18 + 1;
LABEL_67:
        *(void *)unsigned int v39 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v39) & 1) == 0)return 0; {
        *((void *)this + 3) = *(void *)v39;
        }
        *((_DWORD *)this + 40) |= 4u;
        uint64_t v19 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v19 >= *((void *)a2 + 2) || *v19 != 33) {
          continue;
        }
        *((void *)a2 + 1) = v19 + 1;
LABEL_71:
        *(void *)unsigned int v39 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v39) & 1) == 0)return 0; {
        *((void *)this + 4) = *(void *)v39;
        }
        *((_DWORD *)this + 40) |= 8u;
        uint64_t v20 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        if ((unint64_t)v20 >= v9 || *v20 != 40) {
          continue;
        }
        uint64_t v10 = v20 + 1;
        *((void *)a2 + 1) = v10;
LABEL_75:
        v39[0] = 0;
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v39);
          if (!result) {
            return result;
          }
          unsigned int v21 = v39[0];
          uint64_t v22 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v21 = *v10;
          uint64_t v22 = v10 + 1;
          *((void *)a2 + 1) = v22;
        }
        *((unsigned char *)this + 152) = v21 != 0;
        *((_DWORD *)this + 40) |= 0x10u;
        if ((unint64_t)v22 >= v9 || *v22 != 48) {
          continue;
        }
        uint64_t v11 = v22 + 1;
        *((void *)a2 + 1) = v11;
LABEL_83:
        v39[0] = 0;
        if ((unint64_t)v11 >= v9 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v39);
          if (!result) {
            return result;
          }
          unsigned int v24 = v39[0];
          int v25 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v24 = *v11;
          int v25 = v11 + 1;
          *((void *)a2 + 1) = v25;
        }
        *((unsigned char *)this + 153) = v24 != 0;
        *((_DWORD *)this + 40) |= 0x20u;
        if ((unint64_t)v25 >= v9 || *v25 != 57) {
          continue;
        }
        *((void *)a2 + 1) = v25 + 1;
LABEL_91:
        *(void *)unsigned int v39 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v39) & 1) == 0)return 0; {
        *((void *)this + 5) = *(void *)v39;
        }
        *((_DWORD *)this + 40) |= 0x40u;
        int v26 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v26 >= *((void *)a2 + 2) || *v26 != 65) {
          continue;
        }
        *((void *)a2 + 1) = v26 + 1;
LABEL_95:
        *(void *)unsigned int v39 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v39) & 1) == 0)return 0; {
        *((void *)this + 6) = *(void *)v39;
        }
        *((_DWORD *)this + 40) |= 0x80u;
        unsigned int v27 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v27 >= *((void *)a2 + 2) || *v27 != 73) {
          continue;
        }
        *((void *)a2 + 1) = v27 + 1;
LABEL_99:
        *(void *)unsigned int v39 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v39) & 1) == 0)return 0; {
        *((void *)this + 7) = *(void *)v39;
        }
        *((_DWORD *)this + 40) |= 0x100u;
        int v28 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v28 >= *((void *)a2 + 2) || *v28 != 81) {
          continue;
        }
        *((void *)a2 + 1) = v28 + 1;
LABEL_103:
        *(void *)unsigned int v39 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v39) & 1) == 0)return 0; {
        *((void *)this + 8) = *(void *)v39;
        }
        *((_DWORD *)this + 40) |= 0x200u;
        int v29 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v29 >= *((void *)a2 + 2) || *v29 != 89) {
          continue;
        }
        *((void *)a2 + 1) = v29 + 1;
LABEL_107:
        *(void *)unsigned int v39 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v39) & 1) == 0)return 0; {
        *((void *)this + 9) = *(void *)v39;
        }
        *((_DWORD *)this + 40) |= 0x400u;
        uint64_t v30 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v30 >= *((void *)a2 + 2) || *v30 != 97) {
          continue;
        }
        *((void *)a2 + 1) = v30 + 1;
LABEL_111:
        *(void *)unsigned int v39 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v39) & 1) == 0)return 0; {
        *((void *)this + 10) = *(void *)v39;
        }
        *((_DWORD *)this + 40) |= 0x800u;
        unsigned int v31 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v31 >= *((void *)a2 + 2) || *v31 != 105) {
          continue;
        }
        *((void *)a2 + 1) = v31 + 1;
LABEL_115:
        *(void *)unsigned int v39 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v39) & 1) == 0)return 0; {
        *((void *)this + 11) = *(void *)v39;
        }
        *((_DWORD *)this + 40) |= 0x1000u;
        int v32 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v32 >= *((void *)a2 + 2) || *v32 != 113) {
          continue;
        }
        *((void *)a2 + 1) = v32 + 1;
LABEL_119:
        *(void *)unsigned int v39 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v39) & 1) == 0)return 0; {
        *((void *)this + 12) = *(void *)v39;
        }
        *((_DWORD *)this + 40) |= 0x2000u;
        int v33 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v33 >= *((void *)a2 + 2) || *v33 != 121) {
          continue;
        }
        *((void *)a2 + 1) = v33 + 1;
LABEL_123:
        *(void *)unsigned int v39 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v39) & 1) == 0)return 0; {
        *((void *)this + 13) = *(void *)v39;
        }
        *((_DWORD *)this + 40) |= 0x4000u;
        int v34 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v34 < 2 || *v34 != 129 || v34[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v34 + 2;
LABEL_128:
        *(void *)unsigned int v39 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v39) & 1) == 0)return 0; {
        *((void *)this + 14) = *(void *)v39;
        }
        *((_DWORD *)this + 40) |= 0x8000u;
        unsigned int v35 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v35 < 2 || *v35 != 137 || v35[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v35 + 2;
LABEL_133:
        *(void *)unsigned int v39 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v39) & 1) == 0)return 0; {
        *((void *)this + 15) = *(void *)v39;
        }
        *((_DWORD *)this + 40) |= 0x10000u;
        uint64_t v36 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v36 < 2 || *v36 != 145 || v36[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v36 + 2;
LABEL_138:
        *(void *)unsigned int v39 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v39) & 1) == 0)return 0; {
        *((void *)this + 16) = *(void *)v39;
        }
        *((_DWORD *)this + 40) |= 0x20000u;
        unsigned int v37 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v37 < 2 || *v37 != 153 || v37[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v37 + 2;
LABEL_143:
        *(void *)unsigned int v39 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v39) & 1) == 0)return 0; {
        *((void *)this + 17) = *(void *)v39;
        }
        *((_DWORD *)this + 40) |= 0x40000u;
        int v38 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v38 < 2 || *v38 != 161 || v38[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v38 + 2;
LABEL_148:
        *(void *)unsigned int v39 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v39))
        {
          *((void *)this + 18) = *(void *)v39;
          *((_DWORD *)this + 40) |= 0x80000u;
          if (*((void *)a2 + 1) == *((void *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_67;
        }
        goto LABEL_51;
      case 4u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_71;
        }
        goto LABEL_51;
      case 5u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_51;
        }
        uint64_t v10 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        goto LABEL_75;
      case 6u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_51;
        }
        uint64_t v11 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        goto LABEL_83;
      case 7u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_91;
        }
        goto LABEL_51;
      case 8u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_95;
        }
        goto LABEL_51;
      case 9u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_99;
        }
        goto LABEL_51;
      case 0xAu:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_103;
        }
        goto LABEL_51;
      case 0xBu:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_107;
        }
        goto LABEL_51;
      case 0xCu:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_111;
        }
        goto LABEL_51;
      case 0xDu:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_115;
        }
        goto LABEL_51;
      case 0xEu:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_119;
        }
        goto LABEL_51;
      case 0xFu:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_123;
        }
        goto LABEL_51;
      case 0x10u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_128;
        }
        goto LABEL_51;
      case 0x11u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_133;
        }
        goto LABEL_51;
      case 0x12u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_138;
        }
        goto LABEL_51;
      case 0x13u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_143;
        }
        goto LABEL_51;
      case 0x14u:
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_51;
        }
        goto LABEL_148;
      default:
        int v6 = TagFallback & 7;
LABEL_51:
        if (v6 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::NrParameters::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 160);
  if (v6)
  {
    uint64_t v7 = *(void *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto((CoreNavigation::CLP::LogEntry::Raven *)this);
      uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::Raven::NrParameters::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 160);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_26;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 160);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_27;
  }
LABEL_26:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 160);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_28;
  }
LABEL_27:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 160);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_29;
  }
LABEL_28:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(unsigned __int8 *)(v5 + 152), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 160);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_30;
  }
LABEL_29:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned __int8 *)(v5 + 153), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 160);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_31;
  }
LABEL_30:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (uint64_t)a2, *(double *)(v5 + 40), a3);
  int v6 = *(_DWORD *)(v5 + 160);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_32;
  }
LABEL_31:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (uint64_t)a2, *(double *)(v5 + 48), a3);
  int v6 = *(_DWORD *)(v5 + 160);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_33;
  }
LABEL_32:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (uint64_t)a2, *(double *)(v5 + 56), a3);
  int v6 = *(_DWORD *)(v5 + 160);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_34;
  }
LABEL_33:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (uint64_t)a2, *(double *)(v5 + 64), a3);
  int v6 = *(_DWORD *)(v5 + 160);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_35;
  }
LABEL_34:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, (uint64_t)a2, *(double *)(v5 + 72), a3);
  int v6 = *(_DWORD *)(v5 + 160);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_36;
  }
LABEL_35:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, (uint64_t)a2, *(double *)(v5 + 80), a3);
  int v6 = *(_DWORD *)(v5 + 160);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_37;
  }
LABEL_36:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, (uint64_t)a2, *(double *)(v5 + 88), a3);
  int v6 = *(_DWORD *)(v5 + 160);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_38;
  }
LABEL_37:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, (uint64_t)a2, *(double *)(v5 + 96), a3);
  int v6 = *(_DWORD *)(v5 + 160);
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_39;
  }
LABEL_38:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, (uint64_t)a2, *(double *)(v5 + 104), a3);
  int v6 = *(_DWORD *)(v5 + 160);
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_40;
  }
LABEL_39:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, (uint64_t)a2, *(double *)(v5 + 112), a3);
  int v6 = *(_DWORD *)(v5 + 160);
  if ((v6 & 0x10000) == 0)
  {
LABEL_18:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_41;
  }
LABEL_40:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, (uint64_t)a2, *(double *)(v5 + 120), a3);
  int v6 = *(_DWORD *)(v5 + 160);
  if ((v6 & 0x20000) == 0)
  {
LABEL_19:
    if ((v6 & 0x40000) == 0) {
      goto LABEL_20;
    }
LABEL_42:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, (uint64_t)a2, *(double *)(v5 + 136), a3);
    if ((*(_DWORD *)(v5 + 160) & 0x80000) == 0) {
      return this;
    }
    goto LABEL_43;
  }
LABEL_41:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, (uint64_t)a2, *(double *)(v5 + 128), a3);
  int v6 = *(_DWORD *)(v5 + 160);
  if ((v6 & 0x40000) != 0) {
    goto LABEL_42;
  }
LABEL_20:
  if ((v6 & 0x80000) == 0) {
    return this;
  }
LABEL_43:
  double v8 = *(double *)(v5 + 144);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14, (uint64_t)a2, v8, a3);
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::NrParameters::ByteSize(CoreNavigation::CLP::LogEntry::Raven::NrParameters *this)
{
  int v2 = *((_DWORD *)this + 40);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      uint64_t v5 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((void *)this + 1);
      if (!v5)
      {
        CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(0);
        uint64_t v5 = *(CoreNavigation::CLP::LogEntry::Raven::TimeStamp **)(CoreNavigation::CLP::LogEntry::Raven::NrParameters::default_instance_
                                                                 + 8);
      }
      int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::TimeStamp::ByteSize(v5);
      int v7 = (int)v6;
      if (v6 >= 0x80) {
        int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
      }
      else {
        int v8 = 1;
      }
      unsigned int v3 = v7 + v8 + 1;
      int v2 = *((_DWORD *)this + 40);
    }
    else
    {
      unsigned int v3 = 0;
    }
    if ((v2 & 2) != 0) {
      v3 += 9;
    }
    if ((v2 & 4) != 0) {
      v3 += 9;
    }
    if ((v2 & 8) != 0) {
      v3 += 9;
    }
    if ((v2 & 0x10) != 0) {
      v3 += 2;
    }
    if ((v2 & 0x20) != 0) {
      v3 += 2;
    }
    if ((v2 & 0x40) != 0) {
      v3 += 9;
    }
    if ((v2 & 0x80) != 0) {
      uint64_t result = v3 + 9;
    }
    else {
      uint64_t result = v3;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  if ((v2 & 0xFF00) != 0)
  {
    unsigned int v9 = result + 9;
    if ((v2 & 0x100) == 0) {
      unsigned int v9 = result;
    }
    if ((v2 & 0x200) != 0) {
      v9 += 9;
    }
    if ((v2 & 0x400) != 0) {
      v9 += 9;
    }
    if ((v2 & 0x800) != 0) {
      v9 += 9;
    }
    if ((v2 & 0x1000) != 0) {
      v9 += 9;
    }
    if ((v2 & 0x2000) != 0) {
      v9 += 9;
    }
    if ((v2 & 0x4000) != 0) {
      v9 += 9;
    }
    if ((v2 & 0x8000) != 0) {
      uint64_t result = v9 + 10;
    }
    else {
      uint64_t result = v9;
    }
  }
  if ((v2 & 0xFF0000) != 0)
  {
    unsigned int v10 = result + 10;
    if ((v2 & 0x10000) == 0) {
      unsigned int v10 = result;
    }
    if ((v2 & 0x20000) != 0) {
      v10 += 10;
    }
    if ((v2 & 0x40000) != 0) {
      v10 += 10;
    }
    if ((v2 & 0x80000) != 0) {
      uint64_t result = v10 + 10;
    }
    else {
      uint64_t result = v10;
    }
  }
  *((_DWORD *)this + 39) = result;
  return result;
}

double CoreNavigation::CLP::LogEntry::Raven::NrParameters::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Raven::NrParameters *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::Raven::NrParameters::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::Raven::NrParameters::CopyFrom(CoreNavigation::CLP::LogEntry::Raven::NrParameters *this, const CoreNavigation::CLP::LogEntry::Raven::NrParameters *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Raven::NrParameters *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::Raven::NrParameters::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::NrParameters::IsInitialized(CoreNavigation::CLP::LogEntry::Raven::NrParameters *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::Raven::NrParameters::Swap(CoreNavigation::CLP::LogEntry::Raven::NrParameters *this, CoreNavigation::CLP::LogEntry::Raven::NrParameters *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    uint64_t v3 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    uint64_t v4 = *((void *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v4;
    uint64_t v5 = *((void *)this + 4);
    *((void *)this + 4) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v5;
    LOBYTE(v2) = *((unsigned char *)this + 152);
    *((unsigned char *)this + 152) = *((unsigned char *)a2 + 152);
    *((unsigned char *)a2 + 152) = v2;
    LOBYTE(v2) = *((unsigned char *)this + 153);
    *((unsigned char *)this + 153) = *((unsigned char *)a2 + 153);
    *((unsigned char *)a2 + 153) = v2;
    uint64_t v6 = *((void *)this + 5);
    *((void *)this + 5) = *((void *)a2 + 5);
    *((void *)a2 + 5) = v6;
    uint64_t v7 = *((void *)this + 6);
    *((void *)this + 6) = *((void *)a2 + 6);
    *((void *)a2 + 6) = v7;
    uint64_t v8 = *((void *)this + 7);
    *((void *)this + 7) = *((void *)a2 + 7);
    *((void *)a2 + 7) = v8;
    uint64_t v9 = *((void *)this + 8);
    *((void *)this + 8) = *((void *)a2 + 8);
    *((void *)a2 + 8) = v9;
    uint64_t v10 = *((void *)this + 9);
    *((void *)this + 9) = *((void *)a2 + 9);
    *((void *)a2 + 9) = v10;
    uint64_t v11 = *((void *)this + 10);
    *((void *)this + 10) = *((void *)a2 + 10);
    *((void *)a2 + 10) = v11;
    uint64_t v12 = *((void *)this + 11);
    *((void *)this + 11) = *((void *)a2 + 11);
    *((void *)a2 + 11) = v12;
    uint64_t v13 = *((void *)this + 12);
    *((void *)this + 12) = *((void *)a2 + 12);
    *((void *)a2 + 12) = v13;
    uint64_t v14 = *((void *)this + 13);
    *((void *)this + 13) = *((void *)a2 + 13);
    *((void *)a2 + 13) = v14;
    uint64_t v15 = *((void *)this + 14);
    *((void *)this + 14) = *((void *)a2 + 14);
    *((void *)a2 + 14) = v15;
    uint64_t v16 = *((void *)this + 15);
    *((void *)this + 15) = *((void *)a2 + 15);
    *((void *)a2 + 15) = v16;
    uint64_t v17 = *((void *)this + 16);
    *((void *)this + 16) = *((void *)a2 + 16);
    *((void *)a2 + 16) = v17;
    uint64_t v18 = *((void *)this + 17);
    *((void *)this + 17) = *((void *)a2 + 17);
    *((void *)a2 + 17) = v18;
    double result = *((double *)this + 18);
    *((void *)this + 18) = *((void *)a2 + 18);
    *((double *)a2 + 18) = result;
    LODWORD(v2) = *((_DWORD *)this + 40);
    *((_DWORD *)this + 40) = *((_DWORD *)a2 + 40);
    *((_DWORD *)a2 + 40) = v2;
    LODWORD(v2) = *((_DWORD *)this + 39);
    *((_DWORD *)this + 39) = *((_DWORD *)a2 + 39);
    *((_DWORD *)a2 + 39) = v2;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::Raven::NrParameters::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.Raven.NrParameters");
}

double CoreNavigation::CLP::LogEntry::Raven::NrBiases::SharedCtor(CoreNavigation::CLP::LogEntry::Raven::NrBiases *this)
{
  *((_DWORD *)this + 23) = 0;
  *((_DWORD *)this + 24) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((_WORD *)this + 44) = 0;
  return result;
}

CoreNavigation::CLP::LogEntry::Raven::NrBiases *CoreNavigation::CLP::LogEntry::Raven::NrBiases::NrBiases(CoreNavigation::CLP::LogEntry::Raven::NrBiases *this, const CoreNavigation::CLP::LogEntry::Raven::NrBiases *a2)
{
  *(void *)this = &unk_1EDD115A0;
  *((_DWORD *)this + 23) = 0;
  *((_DWORD *)this + 24) = 0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((_WORD *)this + 44) = 0;
  CoreNavigation::CLP::LogEntry::Raven::NrBiases::MergeFrom(this, a2);
  return this;
}

void sub_18DF19760(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Raven::NrBiases::~NrBiases(CoreNavigation::CLP::LogEntry::Raven::NrBiases *this)
{
  *(void *)this = &unk_1EDD115A0;
  CoreNavigation::CLP::LogEntry::Raven::NrBiases::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::Raven::NrBiases::~NrBiases(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::Raven::NrBiases::SharedDtor(CoreNavigation::CLP::LogEntry::Raven::NrBiases *this)
{
  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::Raven::NrBiases *)CoreNavigation::CLP::LogEntry::Raven::NrBiases::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2)
    {
      uint64_t v3 = *(void (**)(void))(*(void *)v2 + 8);
      v3();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::NrBiases::default_instance(CoreNavigation::CLP::LogEntry::Raven::NrBiases *this)
{
  return CoreNavigation::CLP::LogEntry::Raven::NrBiases::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::NrBiases::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 92) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::Raven::NrBiases::New(CoreNavigation::CLP::LogEntry::Raven::NrBiases *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::NrBiases::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Raven::NrBiases *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (2)
  {
    uint64_t v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_35;
        }
        *((_DWORD *)this + 24) |= 1u;
        uint64_t v7 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((void *)this + 1);
        if (!v7) {
          operator new();
        }
        v31[0] = 0;
        uint64_t v8 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v31))return 0; {
        }
          }
        else
        {
          v31[0] = *v8;
          *((void *)a2 + 1) = v8 + 1;
        }
        int v12 = *((_DWORD *)a2 + 14);
        int v13 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v12 + 1;
        if (v12 >= v13) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::TimeStamp::MergePartialFromCodedStream(v7, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v14 = *((_DWORD *)a2 + 14);
        BOOL v15 = __OFSUB__(v14, 1);
        int v16 = v14 - 1;
        if (v16 < 0 == v15) {
          *((_DWORD *)a2 + 14) = v16;
        }
        uint64_t v17 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        if ((unint64_t)v17 >= v9 || *v17 != 16) {
          continue;
        }
        uint64_t v10 = v17 + 1;
        *((void *)a2 + 1) = v10;
        goto LABEL_47;
      case 2u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_35;
        }
        uint64_t v10 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
LABEL_47:
        v31[0] = 0;
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v31);
          if (!result) {
            return result;
          }
          unsigned int v18 = v31[0];
          uint64_t v19 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v18 = *v10;
          uint64_t v19 = v10 + 1;
          *((void *)a2 + 1) = v19;
        }
        *((unsigned char *)this + 88) = v18 != 0;
        *((_DWORD *)this + 24) |= 2u;
        if ((unint64_t)v19 >= v9 || *v19 != 24) {
          continue;
        }
        uint64_t v11 = v19 + 1;
        *((void *)a2 + 1) = v11;
LABEL_55:
        v31[0] = 0;
        if ((unint64_t)v11 >= v9 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v31);
          if (!result) {
            return result;
          }
          unsigned int v21 = v31[0];
          uint64_t v22 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v21 = *v11;
          uint64_t v22 = v11 + 1;
          *((void *)a2 + 1) = v22;
        }
        *((unsigned char *)this + 89) = v21 != 0;
        *((_DWORD *)this + 24) |= 4u;
        if ((unint64_t)v22 >= v9 || *v22 != 33) {
          continue;
        }
        *((void *)a2 + 1) = v22 + 1;
LABEL_63:
        *(void *)unsigned int v31 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v31) & 1) == 0)return 0; {
        *((void *)this + 2) = *(void *)v31;
        }
        *((_DWORD *)this + 24) |= 8u;
        uint64_t v23 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v23 >= *((void *)a2 + 2) || *v23 != 41) {
          continue;
        }
        *((void *)a2 + 1) = v23 + 1;
LABEL_67:
        *(void *)unsigned int v31 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v31) & 1) == 0)return 0; {
        *((void *)this + 3) = *(void *)v31;
        }
        *((_DWORD *)this + 24) |= 0x10u;
        unsigned int v24 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v24 >= *((void *)a2 + 2) || *v24 != 49) {
          continue;
        }
        *((void *)a2 + 1) = v24 + 1;
LABEL_71:
        *(void *)unsigned int v31 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v31) & 1) == 0)return 0; {
        *((void *)this + 4) = *(void *)v31;
        }
        *((_DWORD *)this + 24) |= 0x20u;
        int v25 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v25 >= *((void *)a2 + 2) || *v25 != 57) {
          continue;
        }
        *((void *)a2 + 1) = v25 + 1;
LABEL_75:
        *(void *)unsigned int v31 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v31) & 1) == 0)return 0; {
        *((void *)this + 5) = *(void *)v31;
        }
        *((_DWORD *)this + 24) |= 0x40u;
        int v26 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v26 >= *((void *)a2 + 2) || *v26 != 65) {
          continue;
        }
        *((void *)a2 + 1) = v26 + 1;
LABEL_79:
        *(void *)unsigned int v31 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v31) & 1) == 0)return 0; {
        *((void *)this + 6) = *(void *)v31;
        }
        *((_DWORD *)this + 24) |= 0x80u;
        unsigned int v27 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v27 >= *((void *)a2 + 2) || *v27 != 73) {
          continue;
        }
        *((void *)a2 + 1) = v27 + 1;
LABEL_83:
        *(void *)unsigned int v31 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v31) & 1) == 0)return 0; {
        *((void *)this + 7) = *(void *)v31;
        }
        *((_DWORD *)this + 24) |= 0x100u;
        int v28 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v28 >= *((void *)a2 + 2) || *v28 != 81) {
          continue;
        }
        *((void *)a2 + 1) = v28 + 1;
LABEL_87:
        *(void *)unsigned int v31 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v31) & 1) == 0)return 0; {
        *((void *)this + 8) = *(void *)v31;
        }
        *((_DWORD *)this + 24) |= 0x200u;
        int v29 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v29 >= *((void *)a2 + 2) || *v29 != 89) {
          continue;
        }
        *((void *)a2 + 1) = v29 + 1;
LABEL_91:
        *(void *)unsigned int v31 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v31) & 1) == 0)return 0; {
        *((void *)this + 9) = *(void *)v31;
        }
        *((_DWORD *)this + 24) |= 0x400u;
        uint64_t v30 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v30 >= *((void *)a2 + 2) || *v30 != 97) {
          continue;
        }
        *((void *)a2 + 1) = v30 + 1;
LABEL_95:
        *(void *)unsigned int v31 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v31))
        {
          *((void *)this + 10) = *(void *)v31;
          *((_DWORD *)this + 24) |= 0x800u;
          if (*((void *)a2 + 1) == *((void *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_35;
        }
        uint64_t v11 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        goto LABEL_55;
      case 4u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_63;
        }
        goto LABEL_35;
      case 5u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_67;
        }
        goto LABEL_35;
      case 6u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_71;
        }
        goto LABEL_35;
      case 7u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_75;
        }
        goto LABEL_35;
      case 8u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_79;
        }
        goto LABEL_35;
      case 9u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_83;
        }
        goto LABEL_35;
      case 0xAu:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_87;
        }
        goto LABEL_35;
      case 0xBu:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_91;
        }
        goto LABEL_35;
      case 0xCu:
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_35;
        }
        goto LABEL_95;
      default:
        int v6 = TagFallback & 7;
LABEL_35:
        if (v6 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::NrBiases::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 96);
  if (v6)
  {
    uint64_t v7 = *(void *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto((CoreNavigation::CLP::LogEntry::Raven *)this);
      uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::Raven::NrBiases::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 96);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_18;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned __int8 *)(v5 + 88), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 89), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_22;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (uint64_t)a2, *(double *)(v5 + 40), a3);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_24;
  }
LABEL_23:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (uint64_t)a2, *(double *)(v5 + 48), a3);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_25;
  }
LABEL_24:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (uint64_t)a2, *(double *)(v5 + 56), a3);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
LABEL_26:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, (uint64_t)a2, *(double *)(v5 + 72), a3);
    if ((*(_DWORD *)(v5 + 96) & 0x800) == 0) {
      return this;
    }
    goto LABEL_27;
  }
LABEL_25:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (uint64_t)a2, *(double *)(v5 + 64), a3);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x400) != 0) {
    goto LABEL_26;
  }
LABEL_12:
  if ((v6 & 0x800) == 0) {
    return this;
  }
LABEL_27:
  double v8 = *(double *)(v5 + 80);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, (uint64_t)a2, v8, a3);
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::NrBiases::ByteSize(CoreNavigation::CLP::LogEntry::Raven::NrBiases *this)
{
  int v2 = *((_DWORD *)this + 24);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      uint64_t v5 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((void *)this + 1);
      if (!v5)
      {
        CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(0);
        uint64_t v5 = *(CoreNavigation::CLP::LogEntry::Raven::TimeStamp **)(CoreNavigation::CLP::LogEntry::Raven::NrBiases::default_instance_
                                                                 + 8);
      }
      int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::TimeStamp::ByteSize(v5);
      int v7 = (int)v6;
      if (v6 >= 0x80) {
        int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
      }
      else {
        int v8 = 1;
      }
      unsigned int v3 = v7 + v8 + 1;
      int v2 = *((_DWORD *)this + 24);
    }
    else
    {
      unsigned int v3 = 0;
    }
    if ((v2 & 2) != 0) {
      v3 += 2;
    }
    if ((v2 & 4) != 0) {
      v3 += 2;
    }
    if ((v2 & 8) != 0) {
      v3 += 9;
    }
    if ((v2 & 0x10) != 0) {
      v3 += 9;
    }
    if ((v2 & 0x20) != 0) {
      v3 += 9;
    }
    if ((v2 & 0x40) != 0) {
      v3 += 9;
    }
    if ((v2 & 0x80) != 0) {
      uint64_t result = v3 + 9;
    }
    else {
      uint64_t result = v3;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  if ((v2 & 0xFF00) != 0)
  {
    unsigned int v9 = result + 9;
    if ((v2 & 0x100) == 0) {
      unsigned int v9 = result;
    }
    if ((v2 & 0x200) != 0) {
      v9 += 9;
    }
    if ((v2 & 0x400) != 0) {
      v9 += 9;
    }
    if ((v2 & 0x800) != 0) {
      uint64_t result = v9 + 9;
    }
    else {
      uint64_t result = v9;
    }
  }
  *((_DWORD *)this + 23) = result;
  return result;
}

double CoreNavigation::CLP::LogEntry::Raven::NrBiases::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Raven::NrBiases *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::Raven::NrBiases::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::Raven::NrBiases::CopyFrom(CoreNavigation::CLP::LogEntry::Raven::NrBiases *this, const CoreNavigation::CLP::LogEntry::Raven::NrBiases *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Raven::NrBiases *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::Raven::NrBiases::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::NrBiases::IsInitialized(CoreNavigation::CLP::LogEntry::Raven::NrBiases *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::Raven::NrBiases::Swap(CoreNavigation::CLP::LogEntry::Raven::NrBiases *this, CoreNavigation::CLP::LogEntry::Raven::NrBiases *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    LOBYTE(v2) = *((unsigned char *)this + 88);
    *((unsigned char *)this + 88) = *((unsigned char *)a2 + 88);
    *((unsigned char *)a2 + 88) = v2;
    LOBYTE(v2) = *((unsigned char *)this + 89);
    *((unsigned char *)this + 89) = *((unsigned char *)a2 + 89);
    *((unsigned char *)a2 + 89) = v2;
    uint64_t v3 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    uint64_t v4 = *((void *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v4;
    uint64_t v5 = *((void *)this + 4);
    *((void *)this + 4) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v5;
    uint64_t v6 = *((void *)this + 5);
    *((void *)this + 5) = *((void *)a2 + 5);
    *((void *)a2 + 5) = v6;
    uint64_t v7 = *((void *)this + 6);
    *((void *)this + 6) = *((void *)a2 + 6);
    *((void *)a2 + 6) = v7;
    uint64_t v8 = *((void *)this + 7);
    *((void *)this + 7) = *((void *)a2 + 7);
    *((void *)a2 + 7) = v8;
    uint64_t v9 = *((void *)this + 8);
    *((void *)this + 8) = *((void *)a2 + 8);
    *((void *)a2 + 8) = v9;
    uint64_t v10 = *((void *)this + 9);
    *((void *)this + 9) = *((void *)a2 + 9);
    *((void *)a2 + 9) = v10;
    double result = *((double *)this + 10);
    *((void *)this + 10) = *((void *)a2 + 10);
    *((double *)a2 + 10) = result;
    LODWORD(v2) = *((_DWORD *)this + 24);
    *((_DWORD *)this + 24) = *((_DWORD *)a2 + 24);
    *((_DWORD *)a2 + 24) = v2;
    LODWORD(v2) = *((_DWORD *)this + 23);
    *((_DWORD *)this + 23) = *((_DWORD *)a2 + 23);
    *((_DWORD *)a2 + 23) = v2;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::Raven::NrBiases::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.Raven.NrBiases");
}

double CoreNavigation::CLP::LogEntry::Raven::EstimatorState::SharedCtor(CoreNavigation::CLP::LogEntry::Raven::EstimatorState *this)
{
  *((void *)this + 11) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::Raven::EstimatorState *CoreNavigation::CLP::LogEntry::Raven::EstimatorState::EstimatorState(CoreNavigation::CLP::LogEntry::Raven::EstimatorState *this, const CoreNavigation::CLP::LogEntry::Raven::EstimatorState *a2)
{
  *(void *)this = &unk_1EDD11000;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((void *)this + 11) = 0;
  CoreNavigation::CLP::LogEntry::Raven::EstimatorState::MergeFrom(this, a2);
  return this;
}

void sub_18DF1A4DC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Raven::EstimatorState::~EstimatorState(CoreNavigation::CLP::LogEntry::Raven::EstimatorState *this)
{
  *(void *)this = &unk_1EDD11000;
  CoreNavigation::CLP::LogEntry::Raven::EstimatorState::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::Raven::EstimatorState::~EstimatorState(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::Raven::EstimatorState::SharedDtor(CoreNavigation::CLP::LogEntry::Raven::EstimatorState *this)
{
  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::Raven::EstimatorState *)CoreNavigation::CLP::LogEntry::Raven::EstimatorState::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 2);
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = *((void *)this + 3);
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = *((void *)this + 4);
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
    uint64_t v6 = *((void *)this + 5);
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    uint64_t v7 = *((void *)this + 6);
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
    uint64_t v8 = *((void *)this + 7);
    if (v8) {
      (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
    }
    uint64_t v9 = *((void *)this + 8);
    if (v9) {
      (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
    }
    uint64_t v10 = *((void *)this + 9);
    if (v10) {
      (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
    }
    uint64_t v11 = *((void *)this + 10);
    if (v11)
    {
      int v12 = *(void (**)(void))(*(void *)v11 + 8);
      v12();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::EstimatorState::default_instance(CoreNavigation::CLP::LogEntry::Raven::EstimatorState *this)
{
  return CoreNavigation::CLP::LogEntry::Raven::EstimatorState::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::EstimatorState::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 88) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::Raven::EstimatorState::New(CoreNavigation::CLP::LogEntry::Raven::EstimatorState *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::UserPosition::Clear(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 92);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      this = *(void *)(this + 8);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::Raven::TimeStamp::Clear(this);
        int v2 = *(_DWORD *)(v1 + 92);
      }
    }
    *(void *)(v1 + 64) = 0;
    *(_OWORD *)(v1 + 32) = 0u;
    *(_OWORD *)(v1 + 48) = 0u;
    *(_OWORD *)(v1 + 16) = 0u;
  }
  if ((v2 & 0xFF00) != 0)
  {
    *(void *)(v1 + 72) = 0;
    *(void *)(v1 + 80) = 0;
  }
  *(_DWORD *)(v1 + 92) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::UserVelocity::Clear(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 132);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      this = *(void *)(this + 8);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::Raven::TimeStamp::Clear(this);
        int v2 = *(_DWORD *)(v1 + 132);
      }
    }
    *(void *)(v1 + 64) = 0;
    *(_OWORD *)(v1 + 32) = 0u;
    *(_OWORD *)(v1 + 48) = 0u;
    *(_OWORD *)(v1 + 16) = 0u;
  }
  if ((v2 & 0xFF00) != 0)
  {
    *(void *)(v1 + 120) = 0;
    *(_OWORD *)(v1 + 104) = 0u;
    *(_OWORD *)(v1 + 88) = 0u;
    *(_OWORD *)(v1 + 72) = 0u;
  }
  *(_DWORD *)(v1 + 132) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DevicePosition::Clear(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 92);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      this = *(void *)(this + 8);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::Raven::TimeStamp::Clear(this);
        int v2 = *(_DWORD *)(v1 + 92);
      }
    }
    *(void *)(v1 + 64) = 0;
    *(_OWORD *)(v1 + 32) = 0u;
    *(_OWORD *)(v1 + 48) = 0u;
    *(_OWORD *)(v1 + 16) = 0u;
  }
  if ((v2 & 0xFF00) != 0)
  {
    *(void *)(v1 + 72) = 0;
    *(void *)(v1 + 80) = 0;
  }
  *(_DWORD *)(v1 + 92) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity::Clear(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 92);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      this = *(void *)(this + 8);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::Raven::TimeStamp::Clear(this);
        int v2 = *(_DWORD *)(v1 + 92);
      }
    }
    *(void *)(v1 + 64) = 0;
    *(_OWORD *)(v1 + 32) = 0u;
    *(_OWORD *)(v1 + 48) = 0u;
    *(_OWORD *)(v1 + 16) = 0u;
  }
  if ((v2 & 0xFF00) != 0)
  {
    *(void *)(v1 + 72) = 0;
    *(void *)(v1 + 80) = 0;
  }
  *(_DWORD *)(v1 + 92) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude::Clear(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 132);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      this = *(void *)(this + 8);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::Raven::TimeStamp::Clear(this);
        int v2 = *(_DWORD *)(v1 + 132);
      }
    }
    *(void *)(v1 + 64) = 0;
    *(_OWORD *)(v1 + 32) = 0u;
    *(_OWORD *)(v1 + 48) = 0u;
    *(_OWORD *)(v1 + 16) = 0u;
  }
  if ((v2 & 0xFF00) != 0)
  {
    *(void *)(v1 + 120) = 0;
    *(_OWORD *)(v1 + 104) = 0u;
    *(_OWORD *)(v1 + 88) = 0u;
    *(_OWORD *)(v1 + 72) = 0u;
  }
  *(_DWORD *)(v1 + 132) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias::Clear(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 92);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      this = *(void *)(this + 8);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::Raven::TimeStamp::Clear(this);
        int v2 = *(_DWORD *)(v1 + 92);
      }
    }
    *(void *)(v1 + 64) = 0;
    *(_OWORD *)(v1 + 32) = 0u;
    *(_OWORD *)(v1 + 48) = 0u;
    *(_OWORD *)(v1 + 16) = 0u;
  }
  if ((v2 & 0xFF00) != 0)
  {
    *(void *)(v1 + 72) = 0;
    *(void *)(v1 + 80) = 0;
  }
  *(_DWORD *)(v1 + 92) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias::Clear(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 92);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      this = *(void *)(this + 8);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::Raven::TimeStamp::Clear(this);
        int v2 = *(_DWORD *)(v1 + 92);
      }
    }
    *(void *)(v1 + 64) = 0;
    *(_OWORD *)(v1 + 32) = 0u;
    *(_OWORD *)(v1 + 48) = 0u;
    *(_OWORD *)(v1 + 16) = 0u;
  }
  if ((v2 & 0xFF00) != 0)
  {
    *(void *)(v1 + 72) = 0;
    *(void *)(v1 + 80) = 0;
  }
  *(_DWORD *)(v1 + 92) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor::Clear(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 92);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      this = *(void *)(this + 8);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::Raven::TimeStamp::Clear(this);
        int v2 = *(_DWORD *)(v1 + 92);
      }
    }
    *(void *)(v1 + 64) = 0;
    *(_OWORD *)(v1 + 32) = 0u;
    *(_OWORD *)(v1 + 48) = 0u;
    *(_OWORD *)(v1 + 16) = 0u;
  }
  if ((v2 & 0xFF00) != 0)
  {
    *(void *)(v1 + 72) = 0;
    *(void *)(v1 + 80) = 0;
  }
  *(_DWORD *)(v1 + 92) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy::Clear(uint64_t this)
{
  uint64_t v1 = this;
  if (*(unsigned char *)(this + 60))
  {
    if (*(unsigned char *)(this + 60))
    {
      this = *(void *)(this + 8);
      if (this) {
        this = CoreNavigation::CLP::LogEntry::Raven::TimeStamp::Clear(this);
      }
    }
    *(void *)(v1 + 48) = 0;
    *(_OWORD *)(v1 + 16) = 0u;
    *(_OWORD *)(v1 + 32) = 0u;
  }
  *(_DWORD *)(v1 + 60) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::EstimatorState::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Raven::EstimatorState *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (1)
  {
    uint64_t v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 < *((void *)a2 + 2) && (*v4 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_6;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_6:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_31;
        }
        *((_DWORD *)this + 23) |= 1u;
        uint64_t v7 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((void *)this + 1);
        if (!v7) {
          operator new();
        }
        unsigned int v78 = 0;
        uint64_t v8 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v78))return 0; {
        }
          }
        else
        {
          unsigned int v78 = *v8;
          *((void *)a2 + 1) = v8 + 1;
        }
        int v9 = *((_DWORD *)a2 + 14);
        int v10 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v9 + 1;
        if (v9 >= v10) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::TimeStamp::MergePartialFromCodedStream(v7, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v11 = *((_DWORD *)a2 + 14);
        BOOL v12 = __OFSUB__(v11, 1);
        int v13 = v11 - 1;
        if (v13 < 0 == v12) {
          *((_DWORD *)a2 + 14) = v13;
        }
        int v14 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v14 >= *((void *)a2 + 2) || *v14 != 18) {
          continue;
        }
        *((void *)a2 + 1) = v14 + 1;
        goto LABEL_43;
      case 2u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_31;
        }
LABEL_43:
        *((_DWORD *)this + 23) |= 2u;
        BOOL v15 = (CoreNavigation::CLP::LogEntry::Raven::UserPosition *)*((void *)this + 2);
        if (!v15) {
          operator new();
        }
        unsigned int v78 = 0;
        int v16 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v16 >= *((void *)a2 + 2) || *v16 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v78))return 0; {
        }
          }
        else
        {
          unsigned int v78 = *v16;
          *((void *)a2 + 1) = v16 + 1;
        }
        int v17 = *((_DWORD *)a2 + 14);
        int v18 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v17 + 1;
        if (v17 >= v18) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::UserPosition::MergePartialFromCodedStream(v15, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v19 = *((_DWORD *)a2 + 14);
        BOOL v12 = __OFSUB__(v19, 1);
        int v20 = v19 - 1;
        if (v20 < 0 == v12) {
          *((_DWORD *)a2 + 14) = v20;
        }
        unsigned int v21 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v21 >= *((void *)a2 + 2) || *v21 != 26) {
          continue;
        }
        *((void *)a2 + 1) = v21 + 1;
LABEL_57:
        *((_DWORD *)this + 23) |= 4u;
        uint64_t v22 = (CoreNavigation::CLP::LogEntry::Raven::UserVelocity *)*((void *)this + 3);
        if (!v22) {
          operator new();
        }
        unsigned int v78 = 0;
        uint64_t v23 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v23 >= *((void *)a2 + 2) || *v23 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v78))return 0; {
        }
          }
        else
        {
          unsigned int v78 = *v23;
          *((void *)a2 + 1) = v23 + 1;
        }
        int v24 = *((_DWORD *)a2 + 14);
        int v25 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v24 + 1;
        if (v24 >= v25) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::UserVelocity::MergePartialFromCodedStream(v22, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v26 = *((_DWORD *)a2 + 14);
        BOOL v12 = __OFSUB__(v26, 1);
        int v27 = v26 - 1;
        if (v27 < 0 == v12) {
          *((_DWORD *)a2 + 14) = v27;
        }
        int v28 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v28 >= *((void *)a2 + 2) || *v28 != 34) {
          continue;
        }
        *((void *)a2 + 1) = v28 + 1;
LABEL_71:
        *((_DWORD *)this + 23) |= 8u;
        int v29 = (CoreNavigation::CLP::LogEntry::Raven::DevicePosition *)*((void *)this + 4);
        if (!v29) {
          operator new();
        }
        unsigned int v78 = 0;
        uint64_t v30 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v30 >= *((void *)a2 + 2) || *v30 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v78))return 0; {
        }
          }
        else
        {
          unsigned int v78 = *v30;
          *((void *)a2 + 1) = v30 + 1;
        }
        int v31 = *((_DWORD *)a2 + 14);
        int v32 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v31 + 1;
        if (v31 >= v32) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::DevicePosition::MergePartialFromCodedStream(v29, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v33 = *((_DWORD *)a2 + 14);
        BOOL v12 = __OFSUB__(v33, 1);
        int v34 = v33 - 1;
        if (v34 < 0 == v12) {
          *((_DWORD *)a2 + 14) = v34;
        }
        unsigned int v35 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v35 >= *((void *)a2 + 2) || *v35 != 42) {
          continue;
        }
        *((void *)a2 + 1) = v35 + 1;
LABEL_85:
        *((_DWORD *)this + 23) |= 0x10u;
        uint64_t v36 = (CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity *)*((void *)this + 5);
        if (!v36) {
          operator new();
        }
        unsigned int v78 = 0;
        unsigned int v37 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v37 >= *((void *)a2 + 2) || *v37 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v78))return 0; {
        }
          }
        else
        {
          unsigned int v78 = *v37;
          *((void *)a2 + 1) = v37 + 1;
        }
        int v38 = *((_DWORD *)a2 + 14);
        int v39 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v38 + 1;
        if (v38 >= v39) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity::MergePartialFromCodedStream(v36, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v40 = *((_DWORD *)a2 + 14);
        BOOL v12 = __OFSUB__(v40, 1);
        int v41 = v40 - 1;
        if (v41 < 0 == v12) {
          *((_DWORD *)a2 + 14) = v41;
        }
        uint64_t v42 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v42 >= *((void *)a2 + 2) || *v42 != 50) {
          continue;
        }
        *((void *)a2 + 1) = v42 + 1;
LABEL_99:
        *((_DWORD *)this + 23) |= 0x20u;
        int v43 = (CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude *)*((void *)this + 6);
        if (!v43) {
          operator new();
        }
        unsigned int v78 = 0;
        int v44 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v44 >= *((void *)a2 + 2) || *v44 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v78))return 0; {
        }
          }
        else
        {
          unsigned int v78 = *v44;
          *((void *)a2 + 1) = v44 + 1;
        }
        int v45 = *((_DWORD *)a2 + 14);
        int v46 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v45 + 1;
        if (v45 >= v46) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude::MergePartialFromCodedStream(v43, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v47 = *((_DWORD *)a2 + 14);
        BOOL v12 = __OFSUB__(v47, 1);
        int v48 = v47 - 1;
        if (v48 < 0 == v12) {
          *((_DWORD *)a2 + 14) = v48;
        }
        uint64_t v49 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v49 >= *((void *)a2 + 2) || *v49 != 58) {
          continue;
        }
        *((void *)a2 + 1) = v49 + 1;
LABEL_113:
        *((_DWORD *)this + 23) |= 0x40u;
        int v50 = (CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias *)*((void *)this + 7);
        if (!v50) {
          operator new();
        }
        unsigned int v78 = 0;
        int v51 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v51 >= *((void *)a2 + 2) || *v51 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v78))return 0; {
        }
          }
        else
        {
          unsigned int v78 = *v51;
          *((void *)a2 + 1) = v51 + 1;
        }
        int v52 = *((_DWORD *)a2 + 14);
        int v53 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v52 + 1;
        if (v52 >= v53) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias::MergePartialFromCodedStream(v50, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v54 = *((_DWORD *)a2 + 14);
        BOOL v12 = __OFSUB__(v54, 1);
        int v55 = v54 - 1;
        if (v55 < 0 == v12) {
          *((_DWORD *)a2 + 14) = v55;
        }
        unint64_t v56 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v56 >= *((void *)a2 + 2) || *v56 != 66) {
          continue;
        }
        *((void *)a2 + 1) = v56 + 1;
LABEL_127:
        *((_DWORD *)this + 23) |= 0x80u;
        int v57 = (CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias *)*((void *)this + 8);
        if (!v57) {
          operator new();
        }
        unsigned int v78 = 0;
        int v58 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v58 >= *((void *)a2 + 2) || *v58 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v78))return 0; {
        }
          }
        else
        {
          unsigned int v78 = *v58;
          *((void *)a2 + 1) = v58 + 1;
        }
        int v59 = *((_DWORD *)a2 + 14);
        int v60 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v59 + 1;
        if (v59 >= v60) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias::MergePartialFromCodedStream(v57, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v61 = *((_DWORD *)a2 + 14);
        BOOL v12 = __OFSUB__(v61, 1);
        int v62 = v61 - 1;
        if (v62 < 0 == v12) {
          *((_DWORD *)a2 + 14) = v62;
        }
        int v63 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v63 >= *((void *)a2 + 2) || *v63 != 74) {
          continue;
        }
        *((void *)a2 + 1) = v63 + 1;
LABEL_141:
        *((_DWORD *)this + 23) |= 0x100u;
        int v64 = (CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor *)*((void *)this + 9);
        if (!v64) {
          operator new();
        }
        unsigned int v78 = 0;
        int v65 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v65 >= *((void *)a2 + 2) || *v65 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v78))return 0; {
        }
          }
        else
        {
          unsigned int v78 = *v65;
          *((void *)a2 + 1) = v65 + 1;
        }
        int v66 = *((_DWORD *)a2 + 14);
        int v67 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v66 + 1;
        if (v66 >= v67) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor::MergePartialFromCodedStream(v64, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v68 = *((_DWORD *)a2 + 14);
        BOOL v12 = __OFSUB__(v68, 1);
        int v69 = v68 - 1;
        if (v69 < 0 == v12) {
          *((_DWORD *)a2 + 14) = v69;
        }
        unsigned int v70 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v70 >= *((void *)a2 + 2) || *v70 != 82) {
          continue;
        }
        *((void *)a2 + 1) = v70 + 1;
LABEL_155:
        *((_DWORD *)this + 23) |= 0x200u;
        int v71 = (CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy *)*((void *)this + 10);
        if (!v71) {
          operator new();
        }
        unsigned int v78 = 0;
        int v72 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v72 >= *((void *)a2 + 2) || *v72 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v78))return 0; {
        }
          }
        else
        {
          unsigned int v78 = *v72;
          *((void *)a2 + 1) = v72 + 1;
        }
        int v73 = *((_DWORD *)a2 + 14);
        int v74 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v73 + 1;
        if (v73 >= v74) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy::MergePartialFromCodedStream(v71, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v75 = *((_DWORD *)a2 + 14);
        BOOL v12 = __OFSUB__(v75, 1);
        int v76 = v75 - 1;
        if (v76 < 0 == v12) {
          *((_DWORD *)a2 + 14) = v76;
        }
        if (*((void *)a2 + 1) == *((void *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
        break;
      case 3u:
        int v6 = TagFallback & 7;
        if (v6 == 2) {
          goto LABEL_57;
        }
        goto LABEL_31;
      case 4u:
        int v6 = TagFallback & 7;
        if (v6 == 2) {
          goto LABEL_71;
        }
        goto LABEL_31;
      case 5u:
        int v6 = TagFallback & 7;
        if (v6 == 2) {
          goto LABEL_85;
        }
        goto LABEL_31;
      case 6u:
        int v6 = TagFallback & 7;
        if (v6 == 2) {
          goto LABEL_99;
        }
        goto LABEL_31;
      case 7u:
        int v6 = TagFallback & 7;
        if (v6 == 2) {
          goto LABEL_113;
        }
        goto LABEL_31;
      case 8u:
        int v6 = TagFallback & 7;
        if (v6 == 2) {
          goto LABEL_127;
        }
        goto LABEL_31;
      case 9u:
        int v6 = TagFallback & 7;
        if (v6 == 2) {
          goto LABEL_141;
        }
        goto LABEL_31;
      case 0xAu:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_31;
        }
        goto LABEL_155;
      default:
        int v6 = TagFallback & 7;
LABEL_31:
        if (v6 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::EstimatorState::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 92);
  if (v6)
  {
    uint64_t v7 = *(void *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto((CoreNavigation::CLP::LogEntry::Raven *)this);
      uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::Raven::EstimatorState::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 92);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_18;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto((CoreNavigation::CLP::LogEntry::Raven *)this);
    uint64_t v8 = *(void *)(CoreNavigation::CLP::LogEntry::Raven::EstimatorState::default_instance_ + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_21;
  }
LABEL_18:
  uint64_t v9 = *(void *)(v5 + 24);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto((CoreNavigation::CLP::LogEntry::Raven *)this);
    uint64_t v9 = *(void *)(CoreNavigation::CLP::LogEntry::Raven::EstimatorState::default_instance_ + 24);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v9, a2, a4);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_24;
  }
LABEL_21:
  uint64_t v10 = *(void *)(v5 + 32);
  if (!v10)
  {
    CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto((CoreNavigation::CLP::LogEntry::Raven *)this);
    uint64_t v10 = *(void *)(CoreNavigation::CLP::LogEntry::Raven::EstimatorState::default_instance_ + 32);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v10, a2, a4);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_27;
  }
LABEL_24:
  uint64_t v11 = *(void *)(v5 + 40);
  if (!v11)
  {
    CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto((CoreNavigation::CLP::LogEntry::Raven *)this);
    uint64_t v11 = *(void *)(CoreNavigation::CLP::LogEntry::Raven::EstimatorState::default_instance_ + 40);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v11, a2, a4);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_30;
  }
LABEL_27:
  uint64_t v12 = *(void *)(v5 + 48);
  if (!v12)
  {
    CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto((CoreNavigation::CLP::LogEntry::Raven *)this);
    uint64_t v12 = *(void *)(CoreNavigation::CLP::LogEntry::Raven::EstimatorState::default_instance_ + 48);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v12, a2, a4);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_33;
  }
LABEL_30:
  uint64_t v13 = *(void *)(v5 + 56);
  if (!v13)
  {
    CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto((CoreNavigation::CLP::LogEntry::Raven *)this);
    uint64_t v13 = *(void *)(CoreNavigation::CLP::LogEntry::Raven::EstimatorState::default_instance_ + 56);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v13, a2, a4);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_36;
  }
LABEL_33:
  uint64_t v14 = *(void *)(v5 + 64);
  if (!v14)
  {
    CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto((CoreNavigation::CLP::LogEntry::Raven *)this);
    uint64_t v14 = *(void *)(CoreNavigation::CLP::LogEntry::Raven::EstimatorState::default_instance_ + 64);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v14, a2, a4);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      return this;
    }
    goto LABEL_39;
  }
LABEL_36:
  uint64_t v15 = *(void *)(v5 + 72);
  if (!v15)
  {
    CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto((CoreNavigation::CLP::LogEntry::Raven *)this);
    uint64_t v15 = *(void *)(CoreNavigation::CLP::LogEntry::Raven::EstimatorState::default_instance_ + 72);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v15, a2, a4);
  if ((*(_DWORD *)(v5 + 92) & 0x200) != 0)
  {
LABEL_39:
    uint64_t v16 = *(void *)(v5 + 80);
    if (!v16)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto((CoreNavigation::CLP::LogEntry::Raven *)this);
      uint64_t v16 = *(void *)(CoreNavigation::CLP::LogEntry::Raven::EstimatorState::default_instance_ + 80);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, v16, a2, a4);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::EstimatorState::ByteSize(CoreNavigation::CLP::LogEntry::Raven::EstimatorState *this)
{
  int v2 = *((_DWORD *)this + 23);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_61;
  }
  if ((v2 & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  uint64_t v4 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((void *)this + 1);
  if (!v4)
  {
    CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(0);
    uint64_t v4 = *(CoreNavigation::CLP::LogEntry::Raven::TimeStamp **)(CoreNavigation::CLP::LogEntry::Raven::EstimatorState::default_instance_
                                                             + 8);
  }
  uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::TimeStamp::ByteSize(v4);
  int v6 = (int)v5;
  if (v5 >= 0x80) {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
  }
  else {
    int v7 = 1;
  }
  uint64_t v3 = (v6 + v7 + 1);
  int v2 = *((_DWORD *)this + 23);
  if ((v2 & 2) != 0)
  {
LABEL_12:
    uint64_t v8 = (CoreNavigation::CLP::LogEntry::Raven::UserPosition *)*((void *)this + 2);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(0);
      uint64_t v8 = *(CoreNavigation::CLP::LogEntry::Raven::UserPosition **)(CoreNavigation::CLP::LogEntry::Raven::EstimatorState::default_instance_
                                                                  + 16);
    }
    uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::UserPosition::ByteSize(v8);
    int v10 = (int)v9;
    if (v9 >= 0x80) {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9);
    }
    else {
      int v11 = 1;
    }
    uint64_t v3 = (v3 + v10 + v11 + 1);
    int v2 = *((_DWORD *)this + 23);
  }
LABEL_18:
  if ((v2 & 4) != 0)
  {
    uint64_t v12 = (CoreNavigation::CLP::LogEntry::Raven::UserVelocity *)*((void *)this + 3);
    if (!v12)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(0);
      uint64_t v12 = *(CoreNavigation::CLP::LogEntry::Raven::UserVelocity **)(CoreNavigation::CLP::LogEntry::Raven::EstimatorState::default_instance_
                                                                   + 24);
    }
    uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::UserVelocity::ByteSize(v12);
    int v14 = (int)v13;
    if (v13 >= 0x80) {
      int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
    }
    else {
      int v15 = 1;
    }
    uint64_t v3 = (v3 + v14 + v15 + 1);
    int v2 = *((_DWORD *)this + 23);
    if ((v2 & 8) == 0)
    {
LABEL_20:
      if ((v2 & 0x10) == 0) {
        goto LABEL_21;
      }
      goto LABEL_37;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_20;
  }
  uint64_t v16 = (CoreNavigation::CLP::LogEntry::Raven::DevicePosition *)*((void *)this + 4);
  if (!v16)
  {
    CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(0);
    uint64_t v16 = *(CoreNavigation::CLP::LogEntry::Raven::DevicePosition **)(CoreNavigation::CLP::LogEntry::Raven::EstimatorState::default_instance_
                                                                   + 32);
  }
  int v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::DevicePosition::ByteSize(v16);
  int v18 = (int)v17;
  if (v17 >= 0x80) {
    int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17);
  }
  else {
    int v19 = 1;
  }
  uint64_t v3 = (v3 + v18 + v19 + 1);
  int v2 = *((_DWORD *)this + 23);
  if ((v2 & 0x10) == 0)
  {
LABEL_21:
    if ((v2 & 0x20) == 0) {
      goto LABEL_22;
    }
    goto LABEL_43;
  }
LABEL_37:
  int v20 = (CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity *)*((void *)this + 5);
  if (!v20)
  {
    CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(0);
    int v20 = *(CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity **)(CoreNavigation::CLP::LogEntry::Raven::EstimatorState::default_instance_
                                                                   + 40);
  }
  unsigned int v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity::ByteSize(v20);
  int v22 = (int)v21;
  if (v21 >= 0x80) {
    int v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21);
  }
  else {
    int v23 = 1;
  }
  uint64_t v3 = (v3 + v22 + v23 + 1);
  int v2 = *((_DWORD *)this + 23);
  if ((v2 & 0x20) == 0)
  {
LABEL_22:
    if ((v2 & 0x40) == 0) {
      goto LABEL_23;
    }
    goto LABEL_49;
  }
LABEL_43:
  int v24 = (CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude *)*((void *)this + 6);
  if (!v24)
  {
    CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(0);
    int v24 = *(CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude **)(CoreNavigation::CLP::LogEntry::Raven::EstimatorState::default_instance_
                                                                   + 48);
  }
  int v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude::ByteSize(v24);
  int v26 = (int)v25;
  if (v25 >= 0x80) {
    int v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25);
  }
  else {
    int v27 = 1;
  }
  uint64_t v3 = (v3 + v26 + v27 + 1);
  int v2 = *((_DWORD *)this + 23);
  if ((v2 & 0x40) == 0)
  {
LABEL_23:
    if ((v2 & 0x80) == 0) {
      goto LABEL_61;
    }
    goto LABEL_55;
  }
LABEL_49:
  int v28 = (CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias *)*((void *)this + 7);
  if (!v28)
  {
    CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(0);
    int v28 = *(CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias **)(CoreNavigation::CLP::LogEntry::Raven::EstimatorState::default_instance_
                                                                       + 56);
  }
  int v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias::ByteSize(v28);
  int v30 = (int)v29;
  if (v29 >= 0x80) {
    int v31 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v29);
  }
  else {
    int v31 = 1;
  }
  uint64_t v3 = (v3 + v30 + v31 + 1);
  int v2 = *((_DWORD *)this + 23);
  if ((v2 & 0x80) != 0)
  {
LABEL_55:
    int v32 = (CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias *)*((void *)this + 8);
    if (!v32)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(0);
      int v32 = *(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias **)(CoreNavigation::CLP::LogEntry::Raven::EstimatorState::default_instance_
                                                                              + 64);
    }
    int v33 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias::ByteSize(v32);
    int v34 = (int)v33;
    if (v33 >= 0x80) {
      int v35 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v33);
    }
    else {
      int v35 = 1;
    }
    uint64_t v3 = (v3 + v34 + v35 + 1);
    int v2 = *((_DWORD *)this + 23);
  }
LABEL_61:
  if ((v2 & 0xFF00) != 0)
  {
    if ((v2 & 0x100) != 0)
    {
      uint64_t v36 = (CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor *)*((void *)this + 9);
      if (!v36)
      {
        CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(0);
        uint64_t v36 = *(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor **)(CoreNavigation::CLP::LogEntry::Raven::EstimatorState::default_instance_
                                                                                       + 72);
      }
      unsigned int v37 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor::ByteSize(v36);
      int v38 = (int)v37;
      if (v37 >= 0x80) {
        int v39 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v37);
      }
      else {
        int v39 = 1;
      }
      uint64_t v3 = (v3 + v38 + v39 + 1);
      int v2 = *((_DWORD *)this + 23);
    }
    if ((v2 & 0x200) != 0)
    {
      int v40 = (CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy *)*((void *)this + 10);
      if (!v40)
      {
        CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(0);
        int v40 = *(CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy **)(CoreNavigation::CLP::LogEntry::Raven::EstimatorState::default_instance_
                                                                                       + 80);
      }
      int v41 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy::ByteSize(v40);
      int v42 = (int)v41;
      if (v41 >= 0x80) {
        int v43 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v41);
      }
      else {
        int v43 = 1;
      }
      uint64_t v3 = (v3 + v42 + v43 + 1);
    }
  }
  *((_DWORD *)this + 22) = v3;
  return v3;
}

double CoreNavigation::CLP::LogEntry::Raven::EstimatorState::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Raven::EstimatorState *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::Raven::EstimatorState::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::Raven::UserPosition::MergeFrom(CoreNavigation::CLP::LogEntry::Raven::UserPosition *this, const CoreNavigation::CLP::LogEntry::Raven::UserPosition *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  int v5 = *((_DWORD *)a2 + 23);
  if (!(_BYTE)v5) {
    goto LABEL_13;
  }
  if (v5)
  {
    *((_DWORD *)this + 23) |= 1u;
    int v6 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((void *)this + 1);
    if (!v6) {
      operator new();
    }
    int v7 = (const CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((void *)a2 + 1);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
      int v7 = *(const CoreNavigation::CLP::LogEntry::Raven::TimeStamp **)(CoreNavigation::CLP::LogEntry::Raven::UserPosition::default_instance_
                                                                     + 8);
    }
    double result = CoreNavigation::CLP::LogEntry::Raven::TimeStamp::MergeFrom(v6, v7);
    int v5 = *((_DWORD *)a2 + 23);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_25;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }
  double result = *((double *)a2 + 2);
  *((_DWORD *)this + 23) |= 2u;
  *((double *)this + 2) = result;
  int v5 = *((_DWORD *)a2 + 23);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_26;
  }
LABEL_25:
  double result = *((double *)a2 + 3);
  *((_DWORD *)this + 23) |= 4u;
  *((double *)this + 3) = result;
  int v5 = *((_DWORD *)a2 + 23);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_27;
  }
LABEL_26:
  double result = *((double *)a2 + 4);
  *((_DWORD *)this + 23) |= 8u;
  *((double *)this + 4) = result;
  int v5 = *((_DWORD *)a2 + 23);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_28:
    double result = *((double *)a2 + 6);
    *((_DWORD *)this + 23) |= 0x20u;
    *((double *)this + 6) = result;
    int v5 = *((_DWORD *)a2 + 23);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_29;
  }
LABEL_27:
  double result = *((double *)a2 + 5);
  *((_DWORD *)this + 23) |= 0x10u;
  *((double *)this + 5) = result;
  int v5 = *((_DWORD *)a2 + 23);
  if ((v5 & 0x20) != 0) {
    goto LABEL_28;
  }
LABEL_10:
  if ((v5 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_29:
  double result = *((double *)a2 + 7);
  *((_DWORD *)this + 23) |= 0x40u;
  *((double *)this + 7) = result;
  int v5 = *((_DWORD *)a2 + 23);
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    double result = *((double *)a2 + 8);
    *((_DWORD *)this + 23) |= 0x80u;
    *((double *)this + 8) = result;
    int v5 = *((_DWORD *)a2 + 23);
  }
LABEL_13:
  if ((v5 & 0xFF00) != 0)
  {
    if ((v5 & 0x100) != 0)
    {
      double result = *((double *)a2 + 9);
      *((_DWORD *)this + 23) |= 0x100u;
      *((double *)this + 9) = result;
      int v5 = *((_DWORD *)a2 + 23);
    }
    if ((v5 & 0x200) != 0)
    {
      double result = *((double *)a2 + 10);
      *((_DWORD *)this + 23) |= 0x200u;
      *((double *)this + 10) = result;
    }
  }
  return result;
}

void sub_18DF1C0A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::Raven::UserVelocity::MergeFrom(CoreNavigation::CLP::LogEntry::Raven::UserVelocity *this, const CoreNavigation::CLP::LogEntry::Raven::UserVelocity *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  int v5 = *((_DWORD *)a2 + 33);
  if (!(_BYTE)v5) {
    goto LABEL_13;
  }
  if (v5)
  {
    *((_DWORD *)this + 33) |= 1u;
    int v6 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((void *)this + 1);
    if (!v6) {
      operator new();
    }
    int v7 = (const CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((void *)a2 + 1);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
      int v7 = *(const CoreNavigation::CLP::LogEntry::Raven::TimeStamp **)(CoreNavigation::CLP::LogEntry::Raven::UserVelocity::default_instance_
                                                                     + 8);
    }
    double result = CoreNavigation::CLP::LogEntry::Raven::TimeStamp::MergeFrom(v6, v7);
    int v5 = *((_DWORD *)a2 + 33);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_29;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }
  double result = *((double *)a2 + 2);
  *((_DWORD *)this + 33) |= 2u;
  *((double *)this + 2) = result;
  int v5 = *((_DWORD *)a2 + 33);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_30;
  }
LABEL_29:
  double result = *((double *)a2 + 3);
  *((_DWORD *)this + 33) |= 4u;
  *((double *)this + 3) = result;
  int v5 = *((_DWORD *)a2 + 33);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_31;
  }
LABEL_30:
  double result = *((double *)a2 + 4);
  *((_DWORD *)this + 33) |= 8u;
  *((double *)this + 4) = result;
  int v5 = *((_DWORD *)a2 + 33);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_32:
    double result = *((double *)a2 + 6);
    *((_DWORD *)this + 33) |= 0x20u;
    *((double *)this + 6) = result;
    int v5 = *((_DWORD *)a2 + 33);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_33;
  }
LABEL_31:
  double result = *((double *)a2 + 5);
  *((_DWORD *)this + 33) |= 0x10u;
  *((double *)this + 5) = result;
  int v5 = *((_DWORD *)a2 + 33);
  if ((v5 & 0x20) != 0) {
    goto LABEL_32;
  }
LABEL_10:
  if ((v5 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_33:
  double result = *((double *)a2 + 7);
  *((_DWORD *)this + 33) |= 0x40u;
  *((double *)this + 7) = result;
  int v5 = *((_DWORD *)a2 + 33);
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    double result = *((double *)a2 + 8);
    *((_DWORD *)this + 33) |= 0x80u;
    *((double *)this + 8) = result;
    int v5 = *((_DWORD *)a2 + 33);
  }
LABEL_13:
  if ((v5 & 0xFF00) == 0) {
    return result;
  }
  if ((v5 & 0x100) != 0)
  {
    double result = *((double *)a2 + 9);
    *((_DWORD *)this + 33) |= 0x100u;
    *((double *)this + 9) = result;
    int v5 = *((_DWORD *)a2 + 33);
    if ((v5 & 0x200) == 0)
    {
LABEL_16:
      if ((v5 & 0x400) == 0) {
        goto LABEL_17;
      }
      goto LABEL_37;
    }
  }
  else if ((v5 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  double result = *((double *)a2 + 10);
  *((_DWORD *)this + 33) |= 0x200u;
  *((double *)this + 10) = result;
  int v5 = *((_DWORD *)a2 + 33);
  if ((v5 & 0x400) == 0)
  {
LABEL_17:
    if ((v5 & 0x800) == 0) {
      goto LABEL_18;
    }
    goto LABEL_38;
  }
LABEL_37:
  double result = *((double *)a2 + 11);
  *((_DWORD *)this + 33) |= 0x400u;
  *((double *)this + 11) = result;
  int v5 = *((_DWORD *)a2 + 33);
  if ((v5 & 0x800) == 0)
  {
LABEL_18:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_39;
  }
LABEL_38:
  double result = *((double *)a2 + 12);
  *((_DWORD *)this + 33) |= 0x800u;
  *((double *)this + 12) = result;
  int v5 = *((_DWORD *)a2 + 33);
  if ((v5 & 0x1000) == 0)
  {
LABEL_19:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_40;
  }
LABEL_39:
  double result = *((double *)a2 + 13);
  *((_DWORD *)this + 33) |= 0x1000u;
  *((double *)this + 13) = result;
  int v5 = *((_DWORD *)a2 + 33);
  if ((v5 & 0x2000) == 0)
  {
LABEL_20:
    if ((v5 & 0x4000) == 0) {
      return result;
    }
    goto LABEL_21;
  }
LABEL_40:
  double result = *((double *)a2 + 14);
  *((_DWORD *)this + 33) |= 0x2000u;
  *((double *)this + 14) = result;
  if ((*((_DWORD *)a2 + 33) & 0x4000) == 0) {
    return result;
  }
LABEL_21:
  double result = *((double *)a2 + 15);
  *((_DWORD *)this + 33) |= 0x4000u;
  *((double *)this + 15) = result;
  return result;
}

void sub_18DF1C394(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::Raven::DevicePosition::MergeFrom(CoreNavigation::CLP::LogEntry::Raven::DevicePosition *this, const CoreNavigation::CLP::LogEntry::Raven::DevicePosition *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  int v5 = *((_DWORD *)a2 + 23);
  if (!(_BYTE)v5) {
    goto LABEL_13;
  }
  if (v5)
  {
    *((_DWORD *)this + 23) |= 1u;
    int v6 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((void *)this + 1);
    if (!v6) {
      operator new();
    }
    int v7 = (const CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((void *)a2 + 1);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
      int v7 = *(const CoreNavigation::CLP::LogEntry::Raven::TimeStamp **)(CoreNavigation::CLP::LogEntry::Raven::DevicePosition::default_instance_
                                                                     + 8);
    }
    double result = CoreNavigation::CLP::LogEntry::Raven::TimeStamp::MergeFrom(v6, v7);
    int v5 = *((_DWORD *)a2 + 23);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_25;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }
  double result = *((double *)a2 + 2);
  *((_DWORD *)this + 23) |= 2u;
  *((double *)this + 2) = result;
  int v5 = *((_DWORD *)a2 + 23);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_26;
  }
LABEL_25:
  double result = *((double *)a2 + 3);
  *((_DWORD *)this + 23) |= 4u;
  *((double *)this + 3) = result;
  int v5 = *((_DWORD *)a2 + 23);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_27;
  }
LABEL_26:
  double result = *((double *)a2 + 4);
  *((_DWORD *)this + 23) |= 8u;
  *((double *)this + 4) = result;
  int v5 = *((_DWORD *)a2 + 23);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_28:
    double result = *((double *)a2 + 6);
    *((_DWORD *)this + 23) |= 0x20u;
    *((double *)this + 6) = result;
    int v5 = *((_DWORD *)a2 + 23);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_29;
  }
LABEL_27:
  double result = *((double *)a2 + 5);
  *((_DWORD *)this + 23) |= 0x10u;
  *((double *)this + 5) = result;
  int v5 = *((_DWORD *)a2 + 23);
  if ((v5 & 0x20) != 0) {
    goto LABEL_28;
  }
LABEL_10:
  if ((v5 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_29:
  double result = *((double *)a2 + 7);
  *((_DWORD *)this + 23) |= 0x40u;
  *((double *)this + 7) = result;
  int v5 = *((_DWORD *)a2 + 23);
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    double result = *((double *)a2 + 8);
    *((_DWORD *)this + 23) |= 0x80u;
    *((double *)this + 8) = result;
    int v5 = *((_DWORD *)a2 + 23);
  }
LABEL_13:
  if ((v5 & 0xFF00) != 0)
  {
    if ((v5 & 0x100) != 0)
    {
      double result = *((double *)a2 + 9);
      *((_DWORD *)this + 23) |= 0x100u;
      *((double *)this + 9) = result;
      int v5 = *((_DWORD *)a2 + 23);
    }
    if ((v5 & 0x200) != 0)
    {
      double result = *((double *)a2 + 10);
      *((_DWORD *)this + 23) |= 0x200u;
      *((double *)this + 10) = result;
    }
  }
  return result;
}

void sub_18DF1C5D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity::MergeFrom(CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity *this, const CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  int v5 = *((_DWORD *)a2 + 23);
  if (!(_BYTE)v5) {
    goto LABEL_13;
  }
  if (v5)
  {
    *((_DWORD *)this + 23) |= 1u;
    int v6 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((void *)this + 1);
    if (!v6) {
      operator new();
    }
    int v7 = (const CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((void *)a2 + 1);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
      int v7 = *(const CoreNavigation::CLP::LogEntry::Raven::TimeStamp **)(CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity::default_instance_
                                                                     + 8);
    }
    double result = CoreNavigation::CLP::LogEntry::Raven::TimeStamp::MergeFrom(v6, v7);
    int v5 = *((_DWORD *)a2 + 23);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_25;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }
  double result = *((double *)a2 + 2);
  *((_DWORD *)this + 23) |= 2u;
  *((double *)this + 2) = result;
  int v5 = *((_DWORD *)a2 + 23);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_26;
  }
LABEL_25:
  double result = *((double *)a2 + 3);
  *((_DWORD *)this + 23) |= 4u;
  *((double *)this + 3) = result;
  int v5 = *((_DWORD *)a2 + 23);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_27;
  }
LABEL_26:
  double result = *((double *)a2 + 4);
  *((_DWORD *)this + 23) |= 8u;
  *((double *)this + 4) = result;
  int v5 = *((_DWORD *)a2 + 23);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_28:
    double result = *((double *)a2 + 6);
    *((_DWORD *)this + 23) |= 0x20u;
    *((double *)this + 6) = result;
    int v5 = *((_DWORD *)a2 + 23);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_29;
  }
LABEL_27:
  double result = *((double *)a2 + 5);
  *((_DWORD *)this + 23) |= 0x10u;
  *((double *)this + 5) = result;
  int v5 = *((_DWORD *)a2 + 23);
  if ((v5 & 0x20) != 0) {
    goto LABEL_28;
  }
LABEL_10:
  if ((v5 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_29:
  double result = *((double *)a2 + 7);
  *((_DWORD *)this + 23) |= 0x40u;
  *((double *)this + 7) = result;
  int v5 = *((_DWORD *)a2 + 23);
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    double result = *((double *)a2 + 8);
    *((_DWORD *)this + 23) |= 0x80u;
    *((double *)this + 8) = result;
    int v5 = *((_DWORD *)a2 + 23);
  }
LABEL_13:
  if ((v5 & 0xFF00) != 0)
  {
    if ((v5 & 0x100) != 0)
    {
      double result = *((double *)a2 + 9);
      *((_DWORD *)this + 23) |= 0x100u;
      *((double *)this + 9) = result;
      int v5 = *((_DWORD *)a2 + 23);
    }
    if ((v5 & 0x200) != 0)
    {
      double result = *((double *)a2 + 10);
      *((_DWORD *)this + 23) |= 0x200u;
      *((double *)this + 10) = result;
    }
  }
  return result;
}

void sub_18DF1C81C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude::MergeFrom(CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude *this, const CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  int v5 = *((_DWORD *)a2 + 33);
  if (!(_BYTE)v5) {
    goto LABEL_13;
  }
  if (v5)
  {
    *((_DWORD *)this + 33) |= 1u;
    int v6 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((void *)this + 1);
    if (!v6) {
      operator new();
    }
    int v7 = (const CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((void *)a2 + 1);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
      int v7 = *(const CoreNavigation::CLP::LogEntry::Raven::TimeStamp **)(CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude::default_instance_
                                                                     + 8);
    }
    double result = CoreNavigation::CLP::LogEntry::Raven::TimeStamp::MergeFrom(v6, v7);
    int v5 = *((_DWORD *)a2 + 33);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_29;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }
  double result = *((double *)a2 + 2);
  *((_DWORD *)this + 33) |= 2u;
  *((double *)this + 2) = result;
  int v5 = *((_DWORD *)a2 + 33);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_30;
  }
LABEL_29:
  double result = *((double *)a2 + 3);
  *((_DWORD *)this + 33) |= 4u;
  *((double *)this + 3) = result;
  int v5 = *((_DWORD *)a2 + 33);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_31;
  }
LABEL_30:
  double result = *((double *)a2 + 4);
  *((_DWORD *)this + 33) |= 8u;
  *((double *)this + 4) = result;
  int v5 = *((_DWORD *)a2 + 33);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_32:
    double result = *((double *)a2 + 6);
    *((_DWORD *)this + 33) |= 0x20u;
    *((double *)this + 6) = result;
    int v5 = *((_DWORD *)a2 + 33);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_33;
  }
LABEL_31:
  double result = *((double *)a2 + 5);
  *((_DWORD *)this + 33) |= 0x10u;
  *((double *)this + 5) = result;
  int v5 = *((_DWORD *)a2 + 33);
  if ((v5 & 0x20) != 0) {
    goto LABEL_32;
  }
LABEL_10:
  if ((v5 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_33:
  double result = *((double *)a2 + 7);
  *((_DWORD *)this + 33) |= 0x40u;
  *((double *)this + 7) = result;
  int v5 = *((_DWORD *)a2 + 33);
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    double result = *((double *)a2 + 8);
    *((_DWORD *)this + 33) |= 0x80u;
    *((double *)this + 8) = result;
    int v5 = *((_DWORD *)a2 + 33);
  }
LABEL_13:
  if ((v5 & 0xFF00) == 0) {
    return result;
  }
  if ((v5 & 0x100) != 0)
  {
    double result = *((double *)a2 + 9);
    *((_DWORD *)this + 33) |= 0x100u;
    *((double *)this + 9) = result;
    int v5 = *((_DWORD *)a2 + 33);
    if ((v5 & 0x200) == 0)
    {
LABEL_16:
      if ((v5 & 0x400) == 0) {
        goto LABEL_17;
      }
      goto LABEL_37;
    }
  }
  else if ((v5 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  double result = *((double *)a2 + 10);
  *((_DWORD *)this + 33) |= 0x200u;
  *((double *)this + 10) = result;
  int v5 = *((_DWORD *)a2 + 33);
  if ((v5 & 0x400) == 0)
  {
LABEL_17:
    if ((v5 & 0x800) == 0) {
      goto LABEL_18;
    }
    goto LABEL_38;
  }
LABEL_37:
  double result = *((double *)a2 + 11);
  *((_DWORD *)this + 33) |= 0x400u;
  *((double *)this + 11) = result;
  int v5 = *((_DWORD *)a2 + 33);
  if ((v5 & 0x800) == 0)
  {
LABEL_18:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_39;
  }
LABEL_38:
  double result = *((double *)a2 + 12);
  *((_DWORD *)this + 33) |= 0x800u;
  *((double *)this + 12) = result;
  int v5 = *((_DWORD *)a2 + 33);
  if ((v5 & 0x1000) == 0)
  {
LABEL_19:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_40;
  }
LABEL_39:
  double result = *((double *)a2 + 13);
  *((_DWORD *)this + 33) |= 0x1000u;
  *((double *)this + 13) = result;
  int v5 = *((_DWORD *)a2 + 33);
  if ((v5 & 0x2000) == 0)
  {
LABEL_20:
    if ((v5 & 0x4000) == 0) {
      return result;
    }
    goto LABEL_21;
  }
LABEL_40:
  double result = *((double *)a2 + 14);
  *((_DWORD *)this + 33) |= 0x2000u;
  *((double *)this + 14) = result;
  if ((*((_DWORD *)a2 + 33) & 0x4000) == 0) {
    return result;
  }
LABEL_21:
  double result = *((double *)a2 + 15);
  *((_DWORD *)this + 33) |= 0x4000u;
  *((double *)this + 15) = result;
  return result;
}

void sub_18DF1CB08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias::MergeFrom(CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias *this, const CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  int v5 = *((_DWORD *)a2 + 23);
  if (!(_BYTE)v5) {
    goto LABEL_13;
  }
  if (v5)
  {
    *((_DWORD *)this + 23) |= 1u;
    int v6 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((void *)this + 1);
    if (!v6) {
      operator new();
    }
    int v7 = (const CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((void *)a2 + 1);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
      int v7 = *(const CoreNavigation::CLP::LogEntry::Raven::TimeStamp **)(CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias::default_instance_
                                                                     + 8);
    }
    double result = CoreNavigation::CLP::LogEntry::Raven::TimeStamp::MergeFrom(v6, v7);
    int v5 = *((_DWORD *)a2 + 23);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_25;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }
  double result = *((double *)a2 + 2);
  *((_DWORD *)this + 23) |= 2u;
  *((double *)this + 2) = result;
  int v5 = *((_DWORD *)a2 + 23);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_26;
  }
LABEL_25:
  double result = *((double *)a2 + 3);
  *((_DWORD *)this + 23) |= 4u;
  *((double *)this + 3) = result;
  int v5 = *((_DWORD *)a2 + 23);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_27;
  }
LABEL_26:
  double result = *((double *)a2 + 4);
  *((_DWORD *)this + 23) |= 8u;
  *((double *)this + 4) = result;
  int v5 = *((_DWORD *)a2 + 23);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_28:
    double result = *((double *)a2 + 6);
    *((_DWORD *)this + 23) |= 0x20u;
    *((double *)this + 6) = result;
    int v5 = *((_DWORD *)a2 + 23);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_29;
  }
LABEL_27:
  double result = *((double *)a2 + 5);
  *((_DWORD *)this + 23) |= 0x10u;
  *((double *)this + 5) = result;
  int v5 = *((_DWORD *)a2 + 23);
  if ((v5 & 0x20) != 0) {
    goto LABEL_28;
  }
LABEL_10:
  if ((v5 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_29:
  double result = *((double *)a2 + 7);
  *((_DWORD *)this + 23) |= 0x40u;
  *((double *)this + 7) = result;
  int v5 = *((_DWORD *)a2 + 23);
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    double result = *((double *)a2 + 8);
    *((_DWORD *)this + 23) |= 0x80u;
    *((double *)this + 8) = result;
    int v5 = *((_DWORD *)a2 + 23);
  }
LABEL_13:
  if ((v5 & 0xFF00) != 0)
  {
    if ((v5 & 0x100) != 0)
    {
      double result = *((double *)a2 + 9);
      *((_DWORD *)this + 23) |= 0x100u;
      *((double *)this + 9) = result;
      int v5 = *((_DWORD *)a2 + 23);
    }
    if ((v5 & 0x200) != 0)
    {
      double result = *((double *)a2 + 10);
      *((_DWORD *)this + 23) |= 0x200u;
      *((double *)this + 10) = result;
    }
  }
  return result;
}

void sub_18DF1CD4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias::MergeFrom(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias *this, const CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  int v5 = *((_DWORD *)a2 + 23);
  if (!(_BYTE)v5) {
    goto LABEL_13;
  }
  if (v5)
  {
    *((_DWORD *)this + 23) |= 1u;
    int v6 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((void *)this + 1);
    if (!v6) {
      operator new();
    }
    int v7 = (const CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((void *)a2 + 1);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
      int v7 = *(const CoreNavigation::CLP::LogEntry::Raven::TimeStamp **)(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias::default_instance_
                                                                     + 8);
    }
    double result = CoreNavigation::CLP::LogEntry::Raven::TimeStamp::MergeFrom(v6, v7);
    int v5 = *((_DWORD *)a2 + 23);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_25;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }
  double result = *((double *)a2 + 2);
  *((_DWORD *)this + 23) |= 2u;
  *((double *)this + 2) = result;
  int v5 = *((_DWORD *)a2 + 23);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_26;
  }
LABEL_25:
  double result = *((double *)a2 + 3);
  *((_DWORD *)this + 23) |= 4u;
  *((double *)this + 3) = result;
  int v5 = *((_DWORD *)a2 + 23);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_27;
  }
LABEL_26:
  double result = *((double *)a2 + 4);
  *((_DWORD *)this + 23) |= 8u;
  *((double *)this + 4) = result;
  int v5 = *((_DWORD *)a2 + 23);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_28:
    double result = *((double *)a2 + 6);
    *((_DWORD *)this + 23) |= 0x20u;
    *((double *)this + 6) = result;
    int v5 = *((_DWORD *)a2 + 23);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_29;
  }
LABEL_27:
  double result = *((double *)a2 + 5);
  *((_DWORD *)this + 23) |= 0x10u;
  *((double *)this + 5) = result;
  int v5 = *((_DWORD *)a2 + 23);
  if ((v5 & 0x20) != 0) {
    goto LABEL_28;
  }
LABEL_10:
  if ((v5 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_29:
  double result = *((double *)a2 + 7);
  *((_DWORD *)this + 23) |= 0x40u;
  *((double *)this + 7) = result;
  int v5 = *((_DWORD *)a2 + 23);
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    double result = *((double *)a2 + 8);
    *((_DWORD *)this + 23) |= 0x80u;
    *((double *)this + 8) = result;
    int v5 = *((_DWORD *)a2 + 23);
  }
LABEL_13:
  if ((v5 & 0xFF00) != 0)
  {
    if ((v5 & 0x100) != 0)
    {
      double result = *((double *)a2 + 9);
      *((_DWORD *)this + 23) |= 0x100u;
      *((double *)this + 9) = result;
      int v5 = *((_DWORD *)a2 + 23);
    }
    if ((v5 & 0x200) != 0)
    {
      double result = *((double *)a2 + 10);
      *((_DWORD *)this + 23) |= 0x200u;
      *((double *)this + 10) = result;
    }
  }
  return result;
}

void sub_18DF1CF90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor::MergeFrom(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor *this, const CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  int v5 = *((_DWORD *)a2 + 23);
  if (!(_BYTE)v5) {
    goto LABEL_13;
  }
  if (v5)
  {
    *((_DWORD *)this + 23) |= 1u;
    int v6 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((void *)this + 1);
    if (!v6) {
      operator new();
    }
    int v7 = (const CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((void *)a2 + 1);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
      int v7 = *(const CoreNavigation::CLP::LogEntry::Raven::TimeStamp **)(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor::default_instance_
                                                                     + 8);
    }
    double result = CoreNavigation::CLP::LogEntry::Raven::TimeStamp::MergeFrom(v6, v7);
    int v5 = *((_DWORD *)a2 + 23);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_25;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }
  double result = *((double *)a2 + 2);
  *((_DWORD *)this + 23) |= 2u;
  *((double *)this + 2) = result;
  int v5 = *((_DWORD *)a2 + 23);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_26;
  }
LABEL_25:
  double result = *((double *)a2 + 3);
  *((_DWORD *)this + 23) |= 4u;
  *((double *)this + 3) = result;
  int v5 = *((_DWORD *)a2 + 23);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_27;
  }
LABEL_26:
  double result = *((double *)a2 + 4);
  *((_DWORD *)this + 23) |= 8u;
  *((double *)this + 4) = result;
  int v5 = *((_DWORD *)a2 + 23);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_28:
    double result = *((double *)a2 + 6);
    *((_DWORD *)this + 23) |= 0x20u;
    *((double *)this + 6) = result;
    int v5 = *((_DWORD *)a2 + 23);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_29;
  }
LABEL_27:
  double result = *((double *)a2 + 5);
  *((_DWORD *)this + 23) |= 0x10u;
  *((double *)this + 5) = result;
  int v5 = *((_DWORD *)a2 + 23);
  if ((v5 & 0x20) != 0) {
    goto LABEL_28;
  }
LABEL_10:
  if ((v5 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_29:
  double result = *((double *)a2 + 7);
  *((_DWORD *)this + 23) |= 0x40u;
  *((double *)this + 7) = result;
  int v5 = *((_DWORD *)a2 + 23);
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    double result = *((double *)a2 + 8);
    *((_DWORD *)this + 23) |= 0x80u;
    *((double *)this + 8) = result;
    int v5 = *((_DWORD *)a2 + 23);
  }
LABEL_13:
  if ((v5 & 0xFF00) != 0)
  {
    if ((v5 & 0x100) != 0)
    {
      double result = *((double *)a2 + 9);
      *((_DWORD *)this + 23) |= 0x100u;
      *((double *)this + 9) = result;
      int v5 = *((_DWORD *)a2 + 23);
    }
    if ((v5 & 0x200) != 0)
    {
      double result = *((double *)a2 + 10);
      *((_DWORD *)this + 23) |= 0x200u;
      *((double *)this + 10) = result;
    }
  }
  return result;
}

void sub_18DF1D1D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy::MergeFrom(CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy *this, const CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 60);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 60))
    {
      *((_DWORD *)this + 15) |= 1u;
      int v6 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((void *)this + 1);
      if (!v6) {
        operator new();
      }
      int v7 = (const CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((void *)a2 + 1);
      if (!v7)
      {
        CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
        int v7 = *(const CoreNavigation::CLP::LogEntry::Raven::TimeStamp **)(CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy::default_instance_
                                                                       + 8);
      }
      double result = CoreNavigation::CLP::LogEntry::Raven::TimeStamp::MergeFrom(v6, v7);
      int v5 = *((_DWORD *)a2 + 15);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_18;
      }
    }
    else if ((*((unsigned char *)a2 + 60) & 2) == 0)
    {
      goto LABEL_6;
    }
    double result = *((double *)a2 + 2);
    *((_DWORD *)this + 15) |= 2u;
    *((double *)this + 2) = result;
    int v5 = *((_DWORD *)a2 + 15);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_19;
    }
LABEL_18:
    double result = *((double *)a2 + 3);
    *((_DWORD *)this + 15) |= 4u;
    *((double *)this + 3) = result;
    int v5 = *((_DWORD *)a2 + 15);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_20;
    }
LABEL_19:
    double result = *((double *)a2 + 4);
    *((_DWORD *)this + 15) |= 8u;
    *((double *)this + 4) = result;
    int v5 = *((_DWORD *)a2 + 15);
    if ((v5 & 0x10) == 0)
    {
LABEL_9:
      if ((v5 & 0x20) == 0) {
        return result;
      }
      goto LABEL_10;
    }
LABEL_20:
    double result = *((double *)a2 + 5);
    *((_DWORD *)this + 15) |= 0x10u;
    *((double *)this + 5) = result;
    if ((*((_DWORD *)a2 + 15) & 0x20) == 0) {
      return result;
    }
LABEL_10:
    double result = *((double *)a2 + 6);
    *((_DWORD *)this + 15) |= 0x20u;
    *((double *)this + 6) = result;
  }
  return result;
}

void sub_18DF1D394(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::Raven::EstimatorState::CopyFrom(CoreNavigation::CLP::LogEntry::Raven::EstimatorState *this, const CoreNavigation::CLP::LogEntry::Raven::EstimatorState *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Raven::EstimatorState *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::Raven::EstimatorState::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::EstimatorState::IsInitialized(CoreNavigation::CLP::LogEntry::Raven::EstimatorState *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::EstimatorState::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::Raven::EstimatorState *a2)
{
  if (a2 != (CoreNavigation::CLP::LogEntry::Raven::EstimatorState *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    uint64_t v3 = *(void *)(this + 16);
    *(void *)(this + 16) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    uint64_t v4 = *(void *)(this + 24);
    *(void *)(this + 24) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v4;
    uint64_t v5 = *(void *)(this + 32);
    *(void *)(this + 32) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v5;
    uint64_t v6 = *(void *)(this + 40);
    *(void *)(this + 40) = *((void *)a2 + 5);
    *((void *)a2 + 5) = v6;
    uint64_t v7 = *(void *)(this + 48);
    *(void *)(this + 48) = *((void *)a2 + 6);
    *((void *)a2 + 6) = v7;
    uint64_t v8 = *(void *)(this + 56);
    *(void *)(this + 56) = *((void *)a2 + 7);
    *((void *)a2 + 7) = v8;
    uint64_t v9 = *(void *)(this + 64);
    *(void *)(this + 64) = *((void *)a2 + 8);
    *((void *)a2 + 8) = v9;
    uint64_t v10 = *(void *)(this + 72);
    *(void *)(this + 72) = *((void *)a2 + 9);
    *((void *)a2 + 9) = v10;
    uint64_t v11 = *(void *)(this + 80);
    *(void *)(this + 80) = *((void *)a2 + 10);
    *((void *)a2 + 10) = v11;
    LODWORD(v11) = *(_DWORD *)(this + 92);
    *(_DWORD *)(this + 92) = *((_DWORD *)a2 + 23);
    *((_DWORD *)a2 + 23) = v11;
    LODWORD(v11) = *(_DWORD *)(this + 88);
    *(_DWORD *)(this + 88) = *((_DWORD *)a2 + 22);
    *((_DWORD *)a2 + 22) = v11;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::Raven::EstimatorState::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.Raven.EstimatorState");
}

double CoreNavigation::CLP::LogEntry::Raven::UserPosition::SharedCtor(CoreNavigation::CLP::LogEntry::Raven::UserPosition *this)
{
  *((void *)this + 11) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::Raven::UserPosition *CoreNavigation::CLP::LogEntry::Raven::UserPosition::UserPosition(CoreNavigation::CLP::LogEntry::Raven::UserPosition *this, const CoreNavigation::CLP::LogEntry::Raven::UserPosition *a2)
{
  *(void *)this = &unk_1EDD10DA8;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((void *)this + 11) = 0;
  CoreNavigation::CLP::LogEntry::Raven::UserPosition::MergeFrom(this, a2);
  return this;
}

void sub_18DF1D5B8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Raven::UserPosition::~UserPosition(CoreNavigation::CLP::LogEntry::Raven::UserPosition *this)
{
  *(void *)this = &unk_1EDD10DA8;
  CoreNavigation::CLP::LogEntry::Raven::UserPosition::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::Raven::UserPosition::~UserPosition(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::Raven::UserPosition::SharedDtor(CoreNavigation::CLP::LogEntry::Raven::UserPosition *this)
{
  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::Raven::UserPosition *)CoreNavigation::CLP::LogEntry::Raven::UserPosition::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2)
    {
      uint64_t v3 = *(void (**)(void))(*(void *)v2 + 8);
      v3();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::UserPosition::default_instance(CoreNavigation::CLP::LogEntry::Raven::UserPosition *this)
{
  return CoreNavigation::CLP::LogEntry::Raven::UserPosition::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::UserPosition::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 88) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::Raven::UserPosition::New(CoreNavigation::CLP::LogEntry::Raven::UserPosition *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::UserPosition::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Raven::UserPosition *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (2)
  {
    uint64_t v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_31;
        }
        *((_DWORD *)this + 23) |= 1u;
        uint64_t v7 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((void *)this + 1);
        if (!v7) {
          operator new();
        }
        v24[0] = 0;
        uint64_t v8 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v24))return 0; {
        }
          }
        else
        {
          v24[0] = *v8;
          *((void *)a2 + 1) = v8 + 1;
        }
        int v9 = *((_DWORD *)a2 + 14);
        int v10 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v9 + 1;
        if (v9 >= v10) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::TimeStamp::MergePartialFromCodedStream(v7, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v11 = *((_DWORD *)a2 + 14);
        BOOL v12 = __OFSUB__(v11, 1);
        int v13 = v11 - 1;
        if (v13 < 0 == v12) {
          *((_DWORD *)a2 + 14) = v13;
        }
        int v14 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v14 >= *((void *)a2 + 2) || *v14 != 17) {
          continue;
        }
        *((void *)a2 + 1) = v14 + 1;
        goto LABEL_43;
      case 2u:
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_31;
        }
LABEL_43:
        *(void *)int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0; {
        *((void *)this + 2) = *(void *)v24;
        }
        *((_DWORD *)this + 23) |= 2u;
        int v15 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v15 >= *((void *)a2 + 2) || *v15 != 25) {
          continue;
        }
        *((void *)a2 + 1) = v15 + 1;
LABEL_47:
        *(void *)int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0; {
        *((void *)this + 3) = *(void *)v24;
        }
        *((_DWORD *)this + 23) |= 4u;
        uint64_t v16 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v16 >= *((void *)a2 + 2) || *v16 != 33) {
          continue;
        }
        *((void *)a2 + 1) = v16 + 1;
LABEL_51:
        *(void *)int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0; {
        *((void *)this + 4) = *(void *)v24;
        }
        *((_DWORD *)this + 23) |= 8u;
        int v17 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v17 >= *((void *)a2 + 2) || *v17 != 41) {
          continue;
        }
        *((void *)a2 + 1) = v17 + 1;
LABEL_55:
        *(void *)int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0; {
        *((void *)this + 5) = *(void *)v24;
        }
        *((_DWORD *)this + 23) |= 0x10u;
        int v18 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v18 >= *((void *)a2 + 2) || *v18 != 49) {
          continue;
        }
        *((void *)a2 + 1) = v18 + 1;
LABEL_59:
        *(void *)int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0; {
        *((void *)this + 6) = *(void *)v24;
        }
        *((_DWORD *)this + 23) |= 0x20u;
        int v19 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v19 >= *((void *)a2 + 2) || *v19 != 57) {
          continue;
        }
        *((void *)a2 + 1) = v19 + 1;
LABEL_63:
        *(void *)int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0; {
        *((void *)this + 7) = *(void *)v24;
        }
        *((_DWORD *)this + 23) |= 0x40u;
        int v20 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v20 >= *((void *)a2 + 2) || *v20 != 65) {
          continue;
        }
        *((void *)a2 + 1) = v20 + 1;
LABEL_67:
        *(void *)int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0; {
        *((void *)this + 8) = *(void *)v24;
        }
        *((_DWORD *)this + 23) |= 0x80u;
        unsigned int v21 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v21 >= *((void *)a2 + 2) || *v21 != 73) {
          continue;
        }
        *((void *)a2 + 1) = v21 + 1;
LABEL_71:
        *(void *)int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0; {
        *((void *)this + 9) = *(void *)v24;
        }
        *((_DWORD *)this + 23) |= 0x100u;
        int v22 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v22 >= *((void *)a2 + 2) || *v22 != 81) {
          continue;
        }
        *((void *)a2 + 1) = v22 + 1;
LABEL_75:
        *(void *)int v24 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24))
        {
          *((void *)this + 10) = *(void *)v24;
          *((_DWORD *)this + 23) |= 0x200u;
          if (*((void *)a2 + 1) == *((void *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_47;
        }
        goto LABEL_31;
      case 4u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_51;
        }
        goto LABEL_31;
      case 5u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_55;
        }
        goto LABEL_31;
      case 6u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_59;
        }
        goto LABEL_31;
      case 7u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_63;
        }
        goto LABEL_31;
      case 8u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_67;
        }
        goto LABEL_31;
      case 9u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_71;
        }
        goto LABEL_31;
      case 0xAu:
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_31;
        }
        goto LABEL_75;
      default:
        int v6 = TagFallback & 7;
LABEL_31:
        if (v6 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::UserPosition::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 92);
  if (v6)
  {
    uint64_t v7 = *(void *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto((CoreNavigation::CLP::LogEntry::Raven *)this);
      uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::Raven::UserPosition::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 92);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(v5 + 40), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(double *)(v5 + 48), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (uint64_t)a2, *(double *)(v5 + 56), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
LABEL_22:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (uint64_t)a2, *(double *)(v5 + 72), a3);
    if ((*(_DWORD *)(v5 + 92) & 0x200) == 0) {
      return this;
    }
    goto LABEL_23;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (uint64_t)a2, *(double *)(v5 + 64), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x100) != 0) {
    goto LABEL_22;
  }
LABEL_10:
  if ((v6 & 0x200) == 0) {
    return this;
  }
LABEL_23:
  double v8 = *(double *)(v5 + 80);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (uint64_t)a2, v8, a3);
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::UserPosition::ByteSize(CoreNavigation::CLP::LogEntry::Raven::UserPosition *this)
{
  int v2 = *((_DWORD *)this + 23);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      uint64_t v4 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((void *)this + 1);
      if (!v4)
      {
        CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(0);
        uint64_t v4 = *(CoreNavigation::CLP::LogEntry::Raven::TimeStamp **)(CoreNavigation::CLP::LogEntry::Raven::UserPosition::default_instance_
                                                                 + 8);
      }
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::TimeStamp::ByteSize(v4);
      int v6 = (int)v5;
      if (v5 >= 0x80) {
        int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
      }
      else {
        int v7 = 1;
      }
      unsigned int v3 = v6 + v7 + 1;
      int v2 = *((_DWORD *)this + 23);
    }
    else
    {
      unsigned int v3 = 0;
    }
    if ((v2 & 2) != 0) {
      v3 += 9;
    }
    if ((v2 & 4) != 0) {
      v3 += 9;
    }
    if ((v2 & 8) != 0) {
      v3 += 9;
    }
    if ((v2 & 0x10) != 0) {
      v3 += 9;
    }
    if ((v2 & 0x20) != 0) {
      v3 += 9;
    }
    if ((v2 & 0x40) != 0) {
      v3 += 9;
    }
    if ((v2 & 0x80) != 0) {
      v3 += 9;
    }
  }
  else
  {
    unsigned int v3 = 0;
  }
  unsigned int v8 = v3 + 9;
  if ((v2 & 0x100) == 0) {
    unsigned int v8 = v3;
  }
  if ((v2 & 0x200) != 0) {
    v8 += 9;
  }
  if ((v2 & 0xFF00) != 0) {
    uint64_t result = v8;
  }
  else {
    uint64_t result = v3;
  }
  *((_DWORD *)this + 22) = result;
  return result;
}

double CoreNavigation::CLP::LogEntry::Raven::UserPosition::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Raven::UserPosition *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::Raven::UserPosition::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::Raven::UserPosition::CopyFrom(CoreNavigation::CLP::LogEntry::Raven::UserPosition *this, const CoreNavigation::CLP::LogEntry::Raven::UserPosition *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Raven::UserPosition *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::Raven::UserPosition::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::UserPosition::IsInitialized(CoreNavigation::CLP::LogEntry::Raven::UserPosition *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::Raven::UserPosition::Swap(CoreNavigation::CLP::LogEntry::Raven::UserPosition *this, CoreNavigation::CLP::LogEntry::Raven::UserPosition *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    uint64_t v3 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    uint64_t v4 = *((void *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v4;
    uint64_t v5 = *((void *)this + 4);
    *((void *)this + 4) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v5;
    uint64_t v6 = *((void *)this + 5);
    *((void *)this + 5) = *((void *)a2 + 5);
    *((void *)a2 + 5) = v6;
    uint64_t v7 = *((void *)this + 6);
    *((void *)this + 6) = *((void *)a2 + 6);
    *((void *)a2 + 6) = v7;
    uint64_t v8 = *((void *)this + 7);
    *((void *)this + 7) = *((void *)a2 + 7);
    *((void *)a2 + 7) = v8;
    uint64_t v9 = *((void *)this + 8);
    *((void *)this + 8) = *((void *)a2 + 8);
    *((void *)a2 + 8) = v9;
    uint64_t v10 = *((void *)this + 9);
    *((void *)this + 9) = *((void *)a2 + 9);
    *((void *)a2 + 9) = v10;
    double result = *((double *)this + 10);
    *((void *)this + 10) = *((void *)a2 + 10);
    *((double *)a2 + 10) = result;
    LODWORD(v2) = *((_DWORD *)this + 23);
    *((_DWORD *)this + 23) = *((_DWORD *)a2 + 23);
    *((_DWORD *)a2 + 23) = v2;
    LODWORD(v2) = *((_DWORD *)this + 22);
    *((_DWORD *)this + 22) = *((_DWORD *)a2 + 22);
    *((_DWORD *)a2 + 22) = v2;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::Raven::UserPosition::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.Raven.UserPosition");
}

double CoreNavigation::CLP::LogEntry::Raven::UserVelocity::SharedCtor(CoreNavigation::CLP::LogEntry::Raven::UserVelocity *this)
{
  double result = 0.0;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::Raven::UserVelocity *CoreNavigation::CLP::LogEntry::Raven::UserVelocity::UserVelocity(CoreNavigation::CLP::LogEntry::Raven::UserVelocity *this, const CoreNavigation::CLP::LogEntry::Raven::UserVelocity *a2)
{
  *(void *)this = &unk_1EDD10E20;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  CoreNavigation::CLP::LogEntry::Raven::UserVelocity::MergeFrom(this, a2);
  return this;
}

void sub_18DF1E1D0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Raven::UserVelocity::~UserVelocity(CoreNavigation::CLP::LogEntry::Raven::UserVelocity *this)
{
  *(void *)this = &unk_1EDD10E20;
  CoreNavigation::CLP::LogEntry::Raven::UserVelocity::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::Raven::UserVelocity::~UserVelocity(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::Raven::UserVelocity::SharedDtor(CoreNavigation::CLP::LogEntry::Raven::UserVelocity *this)
{
  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::Raven::UserVelocity *)CoreNavigation::CLP::LogEntry::Raven::UserVelocity::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2)
    {
      uint64_t v3 = *(void (**)(void))(*(void *)v2 + 8);
      v3();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::UserVelocity::default_instance(CoreNavigation::CLP::LogEntry::Raven::UserVelocity *this)
{
  return CoreNavigation::CLP::LogEntry::Raven::UserVelocity::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::UserVelocity::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 128) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::Raven::UserVelocity::New(CoreNavigation::CLP::LogEntry::Raven::UserVelocity *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::UserVelocity::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Raven::UserVelocity *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (2)
  {
    uint64_t v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_41;
        }
        *((_DWORD *)this + 33) |= 1u;
        uint64_t v7 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((void *)this + 1);
        if (!v7) {
          operator new();
        }
        v29[0] = 0;
        uint64_t v8 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v29))return 0; {
        }
          }
        else
        {
          v29[0] = *v8;
          *((void *)a2 + 1) = v8 + 1;
        }
        int v9 = *((_DWORD *)a2 + 14);
        int v10 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v9 + 1;
        if (v9 >= v10) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::TimeStamp::MergePartialFromCodedStream(v7, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v11 = *((_DWORD *)a2 + 14);
        BOOL v12 = __OFSUB__(v11, 1);
        int v13 = v11 - 1;
        if (v13 < 0 == v12) {
          *((_DWORD *)a2 + 14) = v13;
        }
        int v14 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v14 >= *((void *)a2 + 2) || *v14 != 17) {
          continue;
        }
        *((void *)a2 + 1) = v14 + 1;
        goto LABEL_53;
      case 2u:
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_41;
        }
LABEL_53:
        *(void *)int v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v29) & 1) == 0)return 0; {
        *((void *)this + 2) = *(void *)v29;
        }
        *((_DWORD *)this + 33) |= 2u;
        int v15 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v15 >= *((void *)a2 + 2) || *v15 != 25) {
          continue;
        }
        *((void *)a2 + 1) = v15 + 1;
LABEL_57:
        *(void *)int v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v29) & 1) == 0)return 0; {
        *((void *)this + 3) = *(void *)v29;
        }
        *((_DWORD *)this + 33) |= 4u;
        uint64_t v16 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v16 >= *((void *)a2 + 2) || *v16 != 33) {
          continue;
        }
        *((void *)a2 + 1) = v16 + 1;
LABEL_61:
        *(void *)int v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v29) & 1) == 0)return 0; {
        *((void *)this + 4) = *(void *)v29;
        }
        *((_DWORD *)this + 33) |= 8u;
        int v17 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v17 >= *((void *)a2 + 2) || *v17 != 41) {
          continue;
        }
        *((void *)a2 + 1) = v17 + 1;
LABEL_65:
        *(void *)int v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v29) & 1) == 0)return 0; {
        *((void *)this + 5) = *(void *)v29;
        }
        *((_DWORD *)this + 33) |= 0x10u;
        int v18 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v18 >= *((void *)a2 + 2) || *v18 != 49) {
          continue;
        }
        *((void *)a2 + 1) = v18 + 1;
LABEL_69:
        *(void *)int v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v29) & 1) == 0)return 0; {
        *((void *)this + 6) = *(void *)v29;
        }
        *((_DWORD *)this + 33) |= 0x20u;
        int v19 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v19 >= *((void *)a2 + 2) || *v19 != 57) {
          continue;
        }
        *((void *)a2 + 1) = v19 + 1;
LABEL_73:
        *(void *)int v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v29) & 1) == 0)return 0; {
        *((void *)this + 7) = *(void *)v29;
        }
        *((_DWORD *)this + 33) |= 0x40u;
        int v20 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v20 >= *((void *)a2 + 2) || *v20 != 65) {
          continue;
        }
        *((void *)a2 + 1) = v20 + 1;
LABEL_77:
        *(void *)int v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v29) & 1) == 0)return 0; {
        *((void *)this + 8) = *(void *)v29;
        }
        *((_DWORD *)this + 33) |= 0x80u;
        unsigned int v21 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v21 >= *((void *)a2 + 2) || *v21 != 73) {
          continue;
        }
        *((void *)a2 + 1) = v21 + 1;
LABEL_81:
        *(void *)int v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v29) & 1) == 0)return 0; {
        *((void *)this + 9) = *(void *)v29;
        }
        *((_DWORD *)this + 33) |= 0x100u;
        int v22 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v22 >= *((void *)a2 + 2) || *v22 != 81) {
          continue;
        }
        *((void *)a2 + 1) = v22 + 1;
LABEL_85:
        *(void *)int v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v29) & 1) == 0)return 0; {
        *((void *)this + 10) = *(void *)v29;
        }
        *((_DWORD *)this + 33) |= 0x200u;
        int v23 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v23 >= *((void *)a2 + 2) || *v23 != 89) {
          continue;
        }
        *((void *)a2 + 1) = v23 + 1;
LABEL_89:
        *(void *)int v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v29) & 1) == 0)return 0; {
        *((void *)this + 11) = *(void *)v29;
        }
        *((_DWORD *)this + 33) |= 0x400u;
        int v24 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v24 >= *((void *)a2 + 2) || *v24 != 97) {
          continue;
        }
        *((void *)a2 + 1) = v24 + 1;
LABEL_93:
        *(void *)int v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v29) & 1) == 0)return 0; {
        *((void *)this + 12) = *(void *)v29;
        }
        *((_DWORD *)this + 33) |= 0x800u;
        int v25 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v25 >= *((void *)a2 + 2) || *v25 != 105) {
          continue;
        }
        *((void *)a2 + 1) = v25 + 1;
LABEL_97:
        *(void *)int v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v29) & 1) == 0)return 0; {
        *((void *)this + 13) = *(void *)v29;
        }
        *((_DWORD *)this + 33) |= 0x1000u;
        int v26 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v26 >= *((void *)a2 + 2) || *v26 != 113) {
          continue;
        }
        *((void *)a2 + 1) = v26 + 1;
LABEL_101:
        *(void *)int v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v29) & 1) == 0)return 0; {
        *((void *)this + 14) = *(void *)v29;
        }
        *((_DWORD *)this + 33) |= 0x2000u;
        int v27 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v27 >= *((void *)a2 + 2) || *v27 != 121) {
          continue;
        }
        *((void *)a2 + 1) = v27 + 1;
LABEL_105:
        *(void *)int v29 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v29))
        {
          *((void *)this + 15) = *(void *)v29;
          *((_DWORD *)this + 33) |= 0x4000u;
          if (*((void *)a2 + 1) == *((void *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_57;
        }
        goto LABEL_41;
      case 4u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_61;
        }
        goto LABEL_41;
      case 5u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_65;
        }
        goto LABEL_41;
      case 6u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_69;
        }
        goto LABEL_41;
      case 7u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_73;
        }
        goto LABEL_41;
      case 8u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_77;
        }
        goto LABEL_41;
      case 9u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_81;
        }
        goto LABEL_41;
      case 0xAu:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_85;
        }
        goto LABEL_41;
      case 0xBu:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_89;
        }
        goto LABEL_41;
      case 0xCu:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_93;
        }
        goto LABEL_41;
      case 0xDu:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_97;
        }
        goto LABEL_41;
      case 0xEu:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_101;
        }
        goto LABEL_41;
      case 0xFu:
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_41;
        }
        goto LABEL_105;
      default:
        int v6 = TagFallback & 7;
LABEL_41:
        if (v6 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::UserVelocity::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 132);
  if (v6)
  {
    uint64_t v7 = *(void *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto((CoreNavigation::CLP::LogEntry::Raven *)this);
      uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::Raven::UserVelocity::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 132);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_21;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_22;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_23;
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_24;
  }
LABEL_23:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(v5 + 40), a3);
  int v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_25;
  }
LABEL_24:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(double *)(v5 + 48), a3);
  int v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_26;
  }
LABEL_25:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (uint64_t)a2, *(double *)(v5 + 56), a3);
  int v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_27;
  }
LABEL_26:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (uint64_t)a2, *(double *)(v5 + 64), a3);
  int v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_28;
  }
LABEL_27:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (uint64_t)a2, *(double *)(v5 + 72), a3);
  int v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_29;
  }
LABEL_28:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (uint64_t)a2, *(double *)(v5 + 80), a3);
  int v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_30;
  }
LABEL_29:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, (uint64_t)a2, *(double *)(v5 + 88), a3);
  int v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_31;
  }
LABEL_30:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, (uint64_t)a2, *(double *)(v5 + 96), a3);
  int v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_15;
    }
LABEL_32:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, (uint64_t)a2, *(double *)(v5 + 112), a3);
    if ((*(_DWORD *)(v5 + 132) & 0x4000) == 0) {
      return this;
    }
    goto LABEL_33;
  }
LABEL_31:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, (uint64_t)a2, *(double *)(v5 + 104), a3);
  int v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 0x2000) != 0) {
    goto LABEL_32;
  }
LABEL_15:
  if ((v6 & 0x4000) == 0) {
    return this;
  }
LABEL_33:
  double v8 = *(double *)(v5 + 120);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, (uint64_t)a2, v8, a3);
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::UserVelocity::ByteSize(CoreNavigation::CLP::LogEntry::Raven::UserVelocity *this)
{
  int v2 = *((_DWORD *)this + 33);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      uint64_t v5 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((void *)this + 1);
      if (!v5)
      {
        CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(0);
        uint64_t v5 = *(CoreNavigation::CLP::LogEntry::Raven::TimeStamp **)(CoreNavigation::CLP::LogEntry::Raven::UserVelocity::default_instance_
                                                                 + 8);
      }
      int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::TimeStamp::ByteSize(v5);
      int v7 = (int)v6;
      if (v6 >= 0x80) {
        int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
      }
      else {
        int v8 = 1;
      }
      unsigned int v3 = v7 + v8 + 1;
      int v2 = *((_DWORD *)this + 33);
    }
    else
    {
      unsigned int v3 = 0;
    }
    if ((v2 & 2) != 0) {
      v3 += 9;
    }
    if ((v2 & 4) != 0) {
      v3 += 9;
    }
    if ((v2 & 8) != 0) {
      v3 += 9;
    }
    if ((v2 & 0x10) != 0) {
      v3 += 9;
    }
    if ((v2 & 0x20) != 0) {
      v3 += 9;
    }
    if ((v2 & 0x40) != 0) {
      v3 += 9;
    }
    if ((v2 & 0x80) != 0) {
      uint64_t result = v3 + 9;
    }
    else {
      uint64_t result = v3;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  if ((v2 & 0xFF00) != 0)
  {
    unsigned int v9 = result + 9;
    if ((v2 & 0x100) == 0) {
      unsigned int v9 = result;
    }
    if ((v2 & 0x200) != 0) {
      v9 += 9;
    }
    if ((v2 & 0x400) != 0) {
      v9 += 9;
    }
    if ((v2 & 0x800) != 0) {
      v9 += 9;
    }
    if ((v2 & 0x1000) != 0) {
      v9 += 9;
    }
    if ((v2 & 0x2000) != 0) {
      v9 += 9;
    }
    if ((v2 & 0x4000) != 0) {
      uint64_t result = v9 + 9;
    }
    else {
      uint64_t result = v9;
    }
  }
  *((_DWORD *)this + 32) = result;
  return result;
}

double CoreNavigation::CLP::LogEntry::Raven::UserVelocity::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Raven::UserVelocity *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::Raven::UserVelocity::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::Raven::UserVelocity::CopyFrom(CoreNavigation::CLP::LogEntry::Raven::UserVelocity *this, const CoreNavigation::CLP::LogEntry::Raven::UserVelocity *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Raven::UserVelocity *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::Raven::UserVelocity::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::UserVelocity::IsInitialized(CoreNavigation::CLP::LogEntry::Raven::UserVelocity *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::Raven::UserVelocity::Swap(CoreNavigation::CLP::LogEntry::Raven::UserVelocity *this, CoreNavigation::CLP::LogEntry::Raven::UserVelocity *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    uint64_t v3 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    uint64_t v4 = *((void *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v4;
    uint64_t v5 = *((void *)this + 4);
    *((void *)this + 4) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v5;
    uint64_t v6 = *((void *)this + 5);
    *((void *)this + 5) = *((void *)a2 + 5);
    *((void *)a2 + 5) = v6;
    uint64_t v7 = *((void *)this + 6);
    *((void *)this + 6) = *((void *)a2 + 6);
    *((void *)a2 + 6) = v7;
    uint64_t v8 = *((void *)this + 7);
    *((void *)this + 7) = *((void *)a2 + 7);
    *((void *)a2 + 7) = v8;
    uint64_t v9 = *((void *)this + 8);
    *((void *)this + 8) = *((void *)a2 + 8);
    *((void *)a2 + 8) = v9;
    uint64_t v10 = *((void *)this + 9);
    *((void *)this + 9) = *((void *)a2 + 9);
    *((void *)a2 + 9) = v10;
    uint64_t v11 = *((void *)this + 10);
    *((void *)this + 10) = *((void *)a2 + 10);
    *((void *)a2 + 10) = v11;
    uint64_t v12 = *((void *)this + 11);
    *((void *)this + 11) = *((void *)a2 + 11);
    *((void *)a2 + 11) = v12;
    uint64_t v13 = *((void *)this + 12);
    *((void *)this + 12) = *((void *)a2 + 12);
    *((void *)a2 + 12) = v13;
    uint64_t v14 = *((void *)this + 13);
    *((void *)this + 13) = *((void *)a2 + 13);
    *((void *)a2 + 13) = v14;
    uint64_t v15 = *((void *)this + 14);
    *((void *)this + 14) = *((void *)a2 + 14);
    *((void *)a2 + 14) = v15;
    double result = *((double *)this + 15);
    *((void *)this + 15) = *((void *)a2 + 15);
    *((double *)a2 + 15) = result;
    LODWORD(v2) = *((_DWORD *)this + 33);
    *((_DWORD *)this + 33) = *((_DWORD *)a2 + 33);
    *((_DWORD *)a2 + 33) = v2;
    LODWORD(v2) = *((_DWORD *)this + 32);
    *((_DWORD *)this + 32) = *((_DWORD *)a2 + 32);
    *((_DWORD *)a2 + 32) = v2;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::Raven::UserVelocity::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.Raven.UserVelocity");
}

double CoreNavigation::CLP::LogEntry::Raven::DevicePosition::SharedCtor(CoreNavigation::CLP::LogEntry::Raven::DevicePosition *this)
{
  *((void *)this + 11) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::Raven::DevicePosition *CoreNavigation::CLP::LogEntry::Raven::DevicePosition::DevicePosition(CoreNavigation::CLP::LogEntry::Raven::DevicePosition *this, const CoreNavigation::CLP::LogEntry::Raven::DevicePosition *a2)
{
  *(void *)this = &unk_1EDD10F10;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((void *)this + 11) = 0;
  CoreNavigation::CLP::LogEntry::Raven::DevicePosition::MergeFrom(this, a2);
  return this;
}

void sub_18DF1F0BC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Raven::DevicePosition::~DevicePosition(CoreNavigation::CLP::LogEntry::Raven::DevicePosition *this)
{
  *(void *)this = &unk_1EDD10F10;
  CoreNavigation::CLP::LogEntry::Raven::DevicePosition::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::Raven::DevicePosition::~DevicePosition(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::Raven::DevicePosition::SharedDtor(CoreNavigation::CLP::LogEntry::Raven::DevicePosition *this)
{
  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::Raven::DevicePosition *)CoreNavigation::CLP::LogEntry::Raven::DevicePosition::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2)
    {
      uint64_t v3 = *(void (**)(void))(*(void *)v2 + 8);
      v3();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DevicePosition::default_instance(CoreNavigation::CLP::LogEntry::Raven::DevicePosition *this)
{
  return CoreNavigation::CLP::LogEntry::Raven::DevicePosition::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DevicePosition::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 88) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::Raven::DevicePosition::New(CoreNavigation::CLP::LogEntry::Raven::DevicePosition *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DevicePosition::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Raven::DevicePosition *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (2)
  {
    uint64_t v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_31;
        }
        *((_DWORD *)this + 23) |= 1u;
        uint64_t v7 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((void *)this + 1);
        if (!v7) {
          operator new();
        }
        v24[0] = 0;
        uint64_t v8 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v24))return 0; {
        }
          }
        else
        {
          v24[0] = *v8;
          *((void *)a2 + 1) = v8 + 1;
        }
        int v9 = *((_DWORD *)a2 + 14);
        int v10 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v9 + 1;
        if (v9 >= v10) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::TimeStamp::MergePartialFromCodedStream(v7, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v11 = *((_DWORD *)a2 + 14);
        BOOL v12 = __OFSUB__(v11, 1);
        int v13 = v11 - 1;
        if (v13 < 0 == v12) {
          *((_DWORD *)a2 + 14) = v13;
        }
        uint64_t v14 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v14 >= *((void *)a2 + 2) || *v14 != 17) {
          continue;
        }
        *((void *)a2 + 1) = v14 + 1;
        goto LABEL_43;
      case 2u:
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_31;
        }
LABEL_43:
        *(void *)int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0; {
        *((void *)this + 2) = *(void *)v24;
        }
        *((_DWORD *)this + 23) |= 2u;
        uint64_t v15 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v15 >= *((void *)a2 + 2) || *v15 != 25) {
          continue;
        }
        *((void *)a2 + 1) = v15 + 1;
LABEL_47:
        *(void *)int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0; {
        *((void *)this + 3) = *(void *)v24;
        }
        *((_DWORD *)this + 23) |= 4u;
        uint64_t v16 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v16 >= *((void *)a2 + 2) || *v16 != 33) {
          continue;
        }
        *((void *)a2 + 1) = v16 + 1;
LABEL_51:
        *(void *)int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0; {
        *((void *)this + 4) = *(void *)v24;
        }
        *((_DWORD *)this + 23) |= 8u;
        int v17 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v17 >= *((void *)a2 + 2) || *v17 != 41) {
          continue;
        }
        *((void *)a2 + 1) = v17 + 1;
LABEL_55:
        *(void *)int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0; {
        *((void *)this + 5) = *(void *)v24;
        }
        *((_DWORD *)this + 23) |= 0x10u;
        int v18 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v18 >= *((void *)a2 + 2) || *v18 != 49) {
          continue;
        }
        *((void *)a2 + 1) = v18 + 1;
LABEL_59:
        *(void *)int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0; {
        *((void *)this + 6) = *(void *)v24;
        }
        *((_DWORD *)this + 23) |= 0x20u;
        int v19 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v19 >= *((void *)a2 + 2) || *v19 != 57) {
          continue;
        }
        *((void *)a2 + 1) = v19 + 1;
LABEL_63:
        *(void *)int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0; {
        *((void *)this + 7) = *(void *)v24;
        }
        *((_DWORD *)this + 23) |= 0x40u;
        int v20 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v20 >= *((void *)a2 + 2) || *v20 != 65) {
          continue;
        }
        *((void *)a2 + 1) = v20 + 1;
LABEL_67:
        *(void *)int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0; {
        *((void *)this + 8) = *(void *)v24;
        }
        *((_DWORD *)this + 23) |= 0x80u;
        unsigned int v21 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v21 >= *((void *)a2 + 2) || *v21 != 73) {
          continue;
        }
        *((void *)a2 + 1) = v21 + 1;
LABEL_71:
        *(void *)int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0; {
        *((void *)this + 9) = *(void *)v24;
        }
        *((_DWORD *)this + 23) |= 0x100u;
        int v22 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v22 >= *((void *)a2 + 2) || *v22 != 81) {
          continue;
        }
        *((void *)a2 + 1) = v22 + 1;
LABEL_75:
        *(void *)int v24 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24))
        {
          *((void *)this + 10) = *(void *)v24;
          *((_DWORD *)this + 23) |= 0x200u;
          if (*((void *)a2 + 1) == *((void *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_47;
        }
        goto LABEL_31;
      case 4u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_51;
        }
        goto LABEL_31;
      case 5u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_55;
        }
        goto LABEL_31;
      case 6u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_59;
        }
        goto LABEL_31;
      case 7u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_63;
        }
        goto LABEL_31;
      case 8u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_67;
        }
        goto LABEL_31;
      case 9u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_71;
        }
        goto LABEL_31;
      case 0xAu:
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_31;
        }
        goto LABEL_75;
      default:
        int v6 = TagFallback & 7;
LABEL_31:
        if (v6 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DevicePosition::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 92);
  if (v6)
  {
    uint64_t v7 = *(void *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto((CoreNavigation::CLP::LogEntry::Raven *)this);
      uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::Raven::DevicePosition::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 92);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(v5 + 40), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(double *)(v5 + 48), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (uint64_t)a2, *(double *)(v5 + 56), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
LABEL_22:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (uint64_t)a2, *(double *)(v5 + 72), a3);
    if ((*(_DWORD *)(v5 + 92) & 0x200) == 0) {
      return this;
    }
    goto LABEL_23;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (uint64_t)a2, *(double *)(v5 + 64), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x100) != 0) {
    goto LABEL_22;
  }
LABEL_10:
  if ((v6 & 0x200) == 0) {
    return this;
  }
LABEL_23:
  double v8 = *(double *)(v5 + 80);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (uint64_t)a2, v8, a3);
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DevicePosition::ByteSize(CoreNavigation::CLP::LogEntry::Raven::DevicePosition *this)
{
  int v2 = *((_DWORD *)this + 23);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      uint64_t v4 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((void *)this + 1);
      if (!v4)
      {
        CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(0);
        uint64_t v4 = *(CoreNavigation::CLP::LogEntry::Raven::TimeStamp **)(CoreNavigation::CLP::LogEntry::Raven::DevicePosition::default_instance_
                                                                 + 8);
      }
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::TimeStamp::ByteSize(v4);
      int v6 = (int)v5;
      if (v5 >= 0x80) {
        int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
      }
      else {
        int v7 = 1;
      }
      unsigned int v3 = v6 + v7 + 1;
      int v2 = *((_DWORD *)this + 23);
    }
    else
    {
      unsigned int v3 = 0;
    }
    if ((v2 & 2) != 0) {
      v3 += 9;
    }
    if ((v2 & 4) != 0) {
      v3 += 9;
    }
    if ((v2 & 8) != 0) {
      v3 += 9;
    }
    if ((v2 & 0x10) != 0) {
      v3 += 9;
    }
    if ((v2 & 0x20) != 0) {
      v3 += 9;
    }
    if ((v2 & 0x40) != 0) {
      v3 += 9;
    }
    if ((v2 & 0x80) != 0) {
      v3 += 9;
    }
  }
  else
  {
    unsigned int v3 = 0;
  }
  unsigned int v8 = v3 + 9;
  if ((v2 & 0x100) == 0) {
    unsigned int v8 = v3;
  }
  if ((v2 & 0x200) != 0) {
    v8 += 9;
  }
  if ((v2 & 0xFF00) != 0) {
    uint64_t result = v8;
  }
  else {
    uint64_t result = v3;
  }
  *((_DWORD *)this + 22) = result;
  return result;
}

double CoreNavigation::CLP::LogEntry::Raven::DevicePosition::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Raven::DevicePosition *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::Raven::DevicePosition::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::Raven::DevicePosition::CopyFrom(CoreNavigation::CLP::LogEntry::Raven::DevicePosition *this, const CoreNavigation::CLP::LogEntry::Raven::DevicePosition *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Raven::DevicePosition *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::Raven::DevicePosition::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DevicePosition::IsInitialized(CoreNavigation::CLP::LogEntry::Raven::DevicePosition *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::Raven::DevicePosition::Swap(CoreNavigation::CLP::LogEntry::Raven::DevicePosition *this, CoreNavigation::CLP::LogEntry::Raven::DevicePosition *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    uint64_t v3 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    uint64_t v4 = *((void *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v4;
    uint64_t v5 = *((void *)this + 4);
    *((void *)this + 4) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v5;
    uint64_t v6 = *((void *)this + 5);
    *((void *)this + 5) = *((void *)a2 + 5);
    *((void *)a2 + 5) = v6;
    uint64_t v7 = *((void *)this + 6);
    *((void *)this + 6) = *((void *)a2 + 6);
    *((void *)a2 + 6) = v7;
    uint64_t v8 = *((void *)this + 7);
    *((void *)this + 7) = *((void *)a2 + 7);
    *((void *)a2 + 7) = v8;
    uint64_t v9 = *((void *)this + 8);
    *((void *)this + 8) = *((void *)a2 + 8);
    *((void *)a2 + 8) = v9;
    uint64_t v10 = *((void *)this + 9);
    *((void *)this + 9) = *((void *)a2 + 9);
    *((void *)a2 + 9) = v10;
    double result = *((double *)this + 10);
    *((void *)this + 10) = *((void *)a2 + 10);
    *((double *)a2 + 10) = result;
    LODWORD(v2) = *((_DWORD *)this + 23);
    *((_DWORD *)this + 23) = *((_DWORD *)a2 + 23);
    *((_DWORD *)a2 + 23) = v2;
    LODWORD(v2) = *((_DWORD *)this + 22);
    *((_DWORD *)this + 22) = *((_DWORD *)a2 + 22);
    *((_DWORD *)a2 + 22) = v2;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::Raven::DevicePosition::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.Raven.DevicePosition");
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity::SharedCtor(CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity *this)
{
  *((void *)this + 11) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity *CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity::DeviceVelocity(CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity *this, const CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity *a2)
{
  *(void *)this = &unk_1EDD10F88;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((void *)this + 11) = 0;
  CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity::MergeFrom(this, a2);
  return this;
}

void sub_18DF1FCBC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity::~DeviceVelocity(CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity *this)
{
  *(void *)this = &unk_1EDD10F88;
  CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity::~DeviceVelocity(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity::SharedDtor(CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity *this)
{
  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity *)CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2)
    {
      uint64_t v3 = *(void (**)(void))(*(void *)v2 + 8);
      v3();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity::default_instance(CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity *this)
{
  return CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 88) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity::New(CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (2)
  {
    uint64_t v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_31;
        }
        *((_DWORD *)this + 23) |= 1u;
        uint64_t v7 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((void *)this + 1);
        if (!v7) {
          operator new();
        }
        v24[0] = 0;
        uint64_t v8 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v24))return 0; {
        }
          }
        else
        {
          v24[0] = *v8;
          *((void *)a2 + 1) = v8 + 1;
        }
        int v9 = *((_DWORD *)a2 + 14);
        int v10 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v9 + 1;
        if (v9 >= v10) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::TimeStamp::MergePartialFromCodedStream(v7, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v11 = *((_DWORD *)a2 + 14);
        BOOL v12 = __OFSUB__(v11, 1);
        int v13 = v11 - 1;
        if (v13 < 0 == v12) {
          *((_DWORD *)a2 + 14) = v13;
        }
        uint64_t v14 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v14 >= *((void *)a2 + 2) || *v14 != 17) {
          continue;
        }
        *((void *)a2 + 1) = v14 + 1;
        goto LABEL_43;
      case 2u:
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_31;
        }
LABEL_43:
        *(void *)int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0; {
        *((void *)this + 2) = *(void *)v24;
        }
        *((_DWORD *)this + 23) |= 2u;
        uint64_t v15 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v15 >= *((void *)a2 + 2) || *v15 != 25) {
          continue;
        }
        *((void *)a2 + 1) = v15 + 1;
LABEL_47:
        *(void *)int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0; {
        *((void *)this + 3) = *(void *)v24;
        }
        *((_DWORD *)this + 23) |= 4u;
        uint64_t v16 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v16 >= *((void *)a2 + 2) || *v16 != 33) {
          continue;
        }
        *((void *)a2 + 1) = v16 + 1;
LABEL_51:
        *(void *)int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0; {
        *((void *)this + 4) = *(void *)v24;
        }
        *((_DWORD *)this + 23) |= 8u;
        int v17 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v17 >= *((void *)a2 + 2) || *v17 != 41) {
          continue;
        }
        *((void *)a2 + 1) = v17 + 1;
LABEL_55:
        *(void *)int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0; {
        *((void *)this + 5) = *(void *)v24;
        }
        *((_DWORD *)this + 23) |= 0x10u;
        int v18 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v18 >= *((void *)a2 + 2) || *v18 != 49) {
          continue;
        }
        *((void *)a2 + 1) = v18 + 1;
LABEL_59:
        *(void *)int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0; {
        *((void *)this + 6) = *(void *)v24;
        }
        *((_DWORD *)this + 23) |= 0x20u;
        int v19 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v19 >= *((void *)a2 + 2) || *v19 != 57) {
          continue;
        }
        *((void *)a2 + 1) = v19 + 1;
LABEL_63:
        *(void *)int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0; {
        *((void *)this + 7) = *(void *)v24;
        }
        *((_DWORD *)this + 23) |= 0x40u;
        int v20 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v20 >= *((void *)a2 + 2) || *v20 != 65) {
          continue;
        }
        *((void *)a2 + 1) = v20 + 1;
LABEL_67:
        *(void *)int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0; {
        *((void *)this + 8) = *(void *)v24;
        }
        *((_DWORD *)this + 23) |= 0x80u;
        unsigned int v21 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v21 >= *((void *)a2 + 2) || *v21 != 73) {
          continue;
        }
        *((void *)a2 + 1) = v21 + 1;
LABEL_71:
        *(void *)int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0; {
        *((void *)this + 9) = *(void *)v24;
        }
        *((_DWORD *)this + 23) |= 0x100u;
        int v22 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v22 >= *((void *)a2 + 2) || *v22 != 81) {
          continue;
        }
        *((void *)a2 + 1) = v22 + 1;
LABEL_75:
        *(void *)int v24 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24))
        {
          *((void *)this + 10) = *(void *)v24;
          *((_DWORD *)this + 23) |= 0x200u;
          if (*((void *)a2 + 1) == *((void *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_47;
        }
        goto LABEL_31;
      case 4u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_51;
        }
        goto LABEL_31;
      case 5u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_55;
        }
        goto LABEL_31;
      case 6u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_59;
        }
        goto LABEL_31;
      case 7u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_63;
        }
        goto LABEL_31;
      case 8u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_67;
        }
        goto LABEL_31;
      case 9u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_71;
        }
        goto LABEL_31;
      case 0xAu:
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_31;
        }
        goto LABEL_75;
      default:
        int v6 = TagFallback & 7;
LABEL_31:
        if (v6 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 92);
  if (v6)
  {
    uint64_t v7 = *(void *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto((CoreNavigation::CLP::LogEntry::Raven *)this);
      uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 92);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(v5 + 40), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(double *)(v5 + 48), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (uint64_t)a2, *(double *)(v5 + 56), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
LABEL_22:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (uint64_t)a2, *(double *)(v5 + 72), a3);
    if ((*(_DWORD *)(v5 + 92) & 0x200) == 0) {
      return this;
    }
    goto LABEL_23;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (uint64_t)a2, *(double *)(v5 + 64), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x100) != 0) {
    goto LABEL_22;
  }
LABEL_10:
  if ((v6 & 0x200) == 0) {
    return this;
  }
LABEL_23:
  double v8 = *(double *)(v5 + 80);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (uint64_t)a2, v8, a3);
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity::ByteSize(CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity *this)
{
  int v2 = *((_DWORD *)this + 23);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      uint64_t v4 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((void *)this + 1);
      if (!v4)
      {
        CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(0);
        uint64_t v4 = *(CoreNavigation::CLP::LogEntry::Raven::TimeStamp **)(CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity::default_instance_
                                                                 + 8);
      }
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::TimeStamp::ByteSize(v4);
      int v6 = (int)v5;
      if (v5 >= 0x80) {
        int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
      }
      else {
        int v7 = 1;
      }
      unsigned int v3 = v6 + v7 + 1;
      int v2 = *((_DWORD *)this + 23);
    }
    else
    {
      unsigned int v3 = 0;
    }
    if ((v2 & 2) != 0) {
      v3 += 9;
    }
    if ((v2 & 4) != 0) {
      v3 += 9;
    }
    if ((v2 & 8) != 0) {
      v3 += 9;
    }
    if ((v2 & 0x10) != 0) {
      v3 += 9;
    }
    if ((v2 & 0x20) != 0) {
      v3 += 9;
    }
    if ((v2 & 0x40) != 0) {
      v3 += 9;
    }
    if ((v2 & 0x80) != 0) {
      v3 += 9;
    }
  }
  else
  {
    unsigned int v3 = 0;
  }
  unsigned int v8 = v3 + 9;
  if ((v2 & 0x100) == 0) {
    unsigned int v8 = v3;
  }
  if ((v2 & 0x200) != 0) {
    v8 += 9;
  }
  if ((v2 & 0xFF00) != 0) {
    uint64_t result = v8;
  }
  else {
    uint64_t result = v3;
  }
  *((_DWORD *)this + 22) = result;
  return result;
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity::CopyFrom(CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity *this, const CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity::IsInitialized(CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity::Swap(CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity *this, CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    uint64_t v3 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    uint64_t v4 = *((void *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v4;
    uint64_t v5 = *((void *)this + 4);
    *((void *)this + 4) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v5;
    uint64_t v6 = *((void *)this + 5);
    *((void *)this + 5) = *((void *)a2 + 5);
    *((void *)a2 + 5) = v6;
    uint64_t v7 = *((void *)this + 6);
    *((void *)this + 6) = *((void *)a2 + 6);
    *((void *)a2 + 6) = v7;
    uint64_t v8 = *((void *)this + 7);
    *((void *)this + 7) = *((void *)a2 + 7);
    *((void *)a2 + 7) = v8;
    uint64_t v9 = *((void *)this + 8);
    *((void *)this + 8) = *((void *)a2 + 8);
    *((void *)a2 + 8) = v9;
    uint64_t v10 = *((void *)this + 9);
    *((void *)this + 9) = *((void *)a2 + 9);
    *((void *)a2 + 9) = v10;
    double result = *((double *)this + 10);
    *((void *)this + 10) = *((void *)a2 + 10);
    *((double *)a2 + 10) = result;
    LODWORD(v2) = *((_DWORD *)this + 23);
    *((_DWORD *)this + 23) = *((_DWORD *)a2 + 23);
    *((_DWORD *)a2 + 23) = v2;
    LODWORD(v2) = *((_DWORD *)this + 22);
    *((_DWORD *)this + 22) = *((_DWORD *)a2 + 22);
    *((_DWORD *)a2 + 22) = v2;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::Raven::DeviceVelocity::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.Raven.DeviceVelocity");
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude::SharedCtor(CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude *this)
{
  double result = 0.0;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude *CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude::DeviceAttitude(CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude *this, const CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude *a2)
{
  *(void *)this = &unk_1EDD10E98;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude::MergeFrom(this, a2);
  return this;
}

void sub_18DF208D4(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude::~DeviceAttitude(CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude *this)
{
  *(void *)this = &unk_1EDD10E98;
  CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude::~DeviceAttitude(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude::SharedDtor(CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude *this)
{
  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude *)CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2)
    {
      uint64_t v3 = *(void (**)(void))(*(void *)v2 + 8);
      v3();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude::default_instance(CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude *this)
{
  return CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 128) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude::New(CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (2)
  {
    uint64_t v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_41;
        }
        *((_DWORD *)this + 33) |= 1u;
        uint64_t v7 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((void *)this + 1);
        if (!v7) {
          operator new();
        }
        v29[0] = 0;
        uint64_t v8 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v29))return 0; {
        }
          }
        else
        {
          v29[0] = *v8;
          *((void *)a2 + 1) = v8 + 1;
        }
        int v9 = *((_DWORD *)a2 + 14);
        int v10 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v9 + 1;
        if (v9 >= v10) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::TimeStamp::MergePartialFromCodedStream(v7, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v11 = *((_DWORD *)a2 + 14);
        BOOL v12 = __OFSUB__(v11, 1);
        int v13 = v11 - 1;
        if (v13 < 0 == v12) {
          *((_DWORD *)a2 + 14) = v13;
        }
        uint64_t v14 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v14 >= *((void *)a2 + 2) || *v14 != 17) {
          continue;
        }
        *((void *)a2 + 1) = v14 + 1;
        goto LABEL_53;
      case 2u:
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_41;
        }
LABEL_53:
        *(void *)int v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v29) & 1) == 0)return 0; {
        *((void *)this + 2) = *(void *)v29;
        }
        *((_DWORD *)this + 33) |= 2u;
        uint64_t v15 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v15 >= *((void *)a2 + 2) || *v15 != 25) {
          continue;
        }
        *((void *)a2 + 1) = v15 + 1;
LABEL_57:
        *(void *)int v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v29) & 1) == 0)return 0; {
        *((void *)this + 3) = *(void *)v29;
        }
        *((_DWORD *)this + 33) |= 4u;
        uint64_t v16 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v16 >= *((void *)a2 + 2) || *v16 != 33) {
          continue;
        }
        *((void *)a2 + 1) = v16 + 1;
LABEL_61:
        *(void *)int v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v29) & 1) == 0)return 0; {
        *((void *)this + 4) = *(void *)v29;
        }
        *((_DWORD *)this + 33) |= 8u;
        int v17 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v17 >= *((void *)a2 + 2) || *v17 != 41) {
          continue;
        }
        *((void *)a2 + 1) = v17 + 1;
LABEL_65:
        *(void *)int v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v29) & 1) == 0)return 0; {
        *((void *)this + 5) = *(void *)v29;
        }
        *((_DWORD *)this + 33) |= 0x10u;
        int v18 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v18 >= *((void *)a2 + 2) || *v18 != 49) {
          continue;
        }
        *((void *)a2 + 1) = v18 + 1;
LABEL_69:
        *(void *)int v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v29) & 1) == 0)return 0; {
        *((void *)this + 6) = *(void *)v29;
        }
        *((_DWORD *)this + 33) |= 0x20u;
        int v19 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v19 >= *((void *)a2 + 2) || *v19 != 57) {
          continue;
        }
        *((void *)a2 + 1) = v19 + 1;
LABEL_73:
        *(void *)int v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v29) & 1) == 0)return 0; {
        *((void *)this + 7) = *(void *)v29;
        }
        *((_DWORD *)this + 33) |= 0x40u;
        int v20 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v20 >= *((void *)a2 + 2) || *v20 != 65) {
          continue;
        }
        *((void *)a2 + 1) = v20 + 1;
LABEL_77:
        *(void *)int v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v29) & 1) == 0)return 0; {
        *((void *)this + 8) = *(void *)v29;
        }
        *((_DWORD *)this + 33) |= 0x80u;
        unsigned int v21 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v21 >= *((void *)a2 + 2) || *v21 != 73) {
          continue;
        }
        *((void *)a2 + 1) = v21 + 1;
LABEL_81:
        *(void *)int v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v29) & 1) == 0)return 0; {
        *((void *)this + 9) = *(void *)v29;
        }
        *((_DWORD *)this + 33) |= 0x100u;
        int v22 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v22 >= *((void *)a2 + 2) || *v22 != 81) {
          continue;
        }
        *((void *)a2 + 1) = v22 + 1;
LABEL_85:
        *(void *)int v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v29) & 1) == 0)return 0; {
        *((void *)this + 10) = *(void *)v29;
        }
        *((_DWORD *)this + 33) |= 0x200u;
        int v23 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v23 >= *((void *)a2 + 2) || *v23 != 89) {
          continue;
        }
        *((void *)a2 + 1) = v23 + 1;
LABEL_89:
        *(void *)int v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v29) & 1) == 0)return 0; {
        *((void *)this + 11) = *(void *)v29;
        }
        *((_DWORD *)this + 33) |= 0x400u;
        int v24 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v24 >= *((void *)a2 + 2) || *v24 != 97) {
          continue;
        }
        *((void *)a2 + 1) = v24 + 1;
LABEL_93:
        *(void *)int v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v29) & 1) == 0)return 0; {
        *((void *)this + 12) = *(void *)v29;
        }
        *((_DWORD *)this + 33) |= 0x800u;
        int v25 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v25 >= *((void *)a2 + 2) || *v25 != 105) {
          continue;
        }
        *((void *)a2 + 1) = v25 + 1;
LABEL_97:
        *(void *)int v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v29) & 1) == 0)return 0; {
        *((void *)this + 13) = *(void *)v29;
        }
        *((_DWORD *)this + 33) |= 0x1000u;
        int v26 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v26 >= *((void *)a2 + 2) || *v26 != 113) {
          continue;
        }
        *((void *)a2 + 1) = v26 + 1;
LABEL_101:
        *(void *)int v29 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v29) & 1) == 0)return 0; {
        *((void *)this + 14) = *(void *)v29;
        }
        *((_DWORD *)this + 33) |= 0x2000u;
        int v27 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v27 >= *((void *)a2 + 2) || *v27 != 121) {
          continue;
        }
        *((void *)a2 + 1) = v27 + 1;
LABEL_105:
        *(void *)int v29 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v29))
        {
          *((void *)this + 15) = *(void *)v29;
          *((_DWORD *)this + 33) |= 0x4000u;
          if (*((void *)a2 + 1) == *((void *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_57;
        }
        goto LABEL_41;
      case 4u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_61;
        }
        goto LABEL_41;
      case 5u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_65;
        }
        goto LABEL_41;
      case 6u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_69;
        }
        goto LABEL_41;
      case 7u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_73;
        }
        goto LABEL_41;
      case 8u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_77;
        }
        goto LABEL_41;
      case 9u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_81;
        }
        goto LABEL_41;
      case 0xAu:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_85;
        }
        goto LABEL_41;
      case 0xBu:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_89;
        }
        goto LABEL_41;
      case 0xCu:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_93;
        }
        goto LABEL_41;
      case 0xDu:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_97;
        }
        goto LABEL_41;
      case 0xEu:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_101;
        }
        goto LABEL_41;
      case 0xFu:
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_41;
        }
        goto LABEL_105;
      default:
        int v6 = TagFallback & 7;
LABEL_41:
        if (v6 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 132);
  if (v6)
  {
    uint64_t v7 = *(void *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto((CoreNavigation::CLP::LogEntry::Raven *)this);
      uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 132);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_21;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_22;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_23;
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_24;
  }
LABEL_23:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(v5 + 40), a3);
  int v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_25;
  }
LABEL_24:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(double *)(v5 + 48), a3);
  int v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_26;
  }
LABEL_25:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (uint64_t)a2, *(double *)(v5 + 56), a3);
  int v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_27;
  }
LABEL_26:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (uint64_t)a2, *(double *)(v5 + 64), a3);
  int v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_28;
  }
LABEL_27:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (uint64_t)a2, *(double *)(v5 + 72), a3);
  int v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_29;
  }
LABEL_28:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (uint64_t)a2, *(double *)(v5 + 80), a3);
  int v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_30;
  }
LABEL_29:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, (uint64_t)a2, *(double *)(v5 + 88), a3);
  int v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_31;
  }
LABEL_30:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, (uint64_t)a2, *(double *)(v5 + 96), a3);
  int v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_15;
    }
LABEL_32:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, (uint64_t)a2, *(double *)(v5 + 112), a3);
    if ((*(_DWORD *)(v5 + 132) & 0x4000) == 0) {
      return this;
    }
    goto LABEL_33;
  }
LABEL_31:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, (uint64_t)a2, *(double *)(v5 + 104), a3);
  int v6 = *(_DWORD *)(v5 + 132);
  if ((v6 & 0x2000) != 0) {
    goto LABEL_32;
  }
LABEL_15:
  if ((v6 & 0x4000) == 0) {
    return this;
  }
LABEL_33:
  double v8 = *(double *)(v5 + 120);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, (uint64_t)a2, v8, a3);
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude::ByteSize(CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude *this)
{
  int v2 = *((_DWORD *)this + 33);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      uint64_t v5 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((void *)this + 1);
      if (!v5)
      {
        CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(0);
        uint64_t v5 = *(CoreNavigation::CLP::LogEntry::Raven::TimeStamp **)(CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude::default_instance_
                                                                 + 8);
      }
      int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::TimeStamp::ByteSize(v5);
      int v7 = (int)v6;
      if (v6 >= 0x80) {
        int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
      }
      else {
        int v8 = 1;
      }
      unsigned int v3 = v7 + v8 + 1;
      int v2 = *((_DWORD *)this + 33);
    }
    else
    {
      unsigned int v3 = 0;
    }
    if ((v2 & 2) != 0) {
      v3 += 9;
    }
    if ((v2 & 4) != 0) {
      v3 += 9;
    }
    if ((v2 & 8) != 0) {
      v3 += 9;
    }
    if ((v2 & 0x10) != 0) {
      v3 += 9;
    }
    if ((v2 & 0x20) != 0) {
      v3 += 9;
    }
    if ((v2 & 0x40) != 0) {
      v3 += 9;
    }
    if ((v2 & 0x80) != 0) {
      uint64_t result = v3 + 9;
    }
    else {
      uint64_t result = v3;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  if ((v2 & 0xFF00) != 0)
  {
    unsigned int v9 = result + 9;
    if ((v2 & 0x100) == 0) {
      unsigned int v9 = result;
    }
    if ((v2 & 0x200) != 0) {
      v9 += 9;
    }
    if ((v2 & 0x400) != 0) {
      v9 += 9;
    }
    if ((v2 & 0x800) != 0) {
      v9 += 9;
    }
    if ((v2 & 0x1000) != 0) {
      v9 += 9;
    }
    if ((v2 & 0x2000) != 0) {
      v9 += 9;
    }
    if ((v2 & 0x4000) != 0) {
      uint64_t result = v9 + 9;
    }
    else {
      uint64_t result = v9;
    }
  }
  *((_DWORD *)this + 32) = result;
  return result;
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude::CopyFrom(CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude *this, const CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude::IsInitialized(CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude::Swap(CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude *this, CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    uint64_t v3 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    uint64_t v4 = *((void *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v4;
    uint64_t v5 = *((void *)this + 4);
    *((void *)this + 4) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v5;
    uint64_t v6 = *((void *)this + 5);
    *((void *)this + 5) = *((void *)a2 + 5);
    *((void *)a2 + 5) = v6;
    uint64_t v7 = *((void *)this + 6);
    *((void *)this + 6) = *((void *)a2 + 6);
    *((void *)a2 + 6) = v7;
    uint64_t v8 = *((void *)this + 7);
    *((void *)this + 7) = *((void *)a2 + 7);
    *((void *)a2 + 7) = v8;
    uint64_t v9 = *((void *)this + 8);
    *((void *)this + 8) = *((void *)a2 + 8);
    *((void *)a2 + 8) = v9;
    uint64_t v10 = *((void *)this + 9);
    *((void *)this + 9) = *((void *)a2 + 9);
    *((void *)a2 + 9) = v10;
    uint64_t v11 = *((void *)this + 10);
    *((void *)this + 10) = *((void *)a2 + 10);
    *((void *)a2 + 10) = v11;
    uint64_t v12 = *((void *)this + 11);
    *((void *)this + 11) = *((void *)a2 + 11);
    *((void *)a2 + 11) = v12;
    uint64_t v13 = *((void *)this + 12);
    *((void *)this + 12) = *((void *)a2 + 12);
    *((void *)a2 + 12) = v13;
    uint64_t v14 = *((void *)this + 13);
    *((void *)this + 13) = *((void *)a2 + 13);
    *((void *)a2 + 13) = v14;
    uint64_t v15 = *((void *)this + 14);
    *((void *)this + 14) = *((void *)a2 + 14);
    *((void *)a2 + 14) = v15;
    double result = *((double *)this + 15);
    *((void *)this + 15) = *((void *)a2 + 15);
    *((double *)a2 + 15) = result;
    LODWORD(v2) = *((_DWORD *)this + 33);
    *((_DWORD *)this + 33) = *((_DWORD *)a2 + 33);
    *((_DWORD *)a2 + 33) = v2;
    LODWORD(v2) = *((_DWORD *)this + 32);
    *((_DWORD *)this + 32) = *((_DWORD *)a2 + 32);
    *((_DWORD *)a2 + 32) = v2;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::Raven::DeviceAttitude::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.Raven.DeviceAttitude");
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias::SharedCtor(CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias *this)
{
  *((void *)this + 11) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias *CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias::DeviceRateGyroBias(CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias *this, const CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias *a2)
{
  *(void *)this = &unk_1EDD11258;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((void *)this + 11) = 0;
  CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias::MergeFrom(this, a2);
  return this;
}

void sub_18DF217C0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias::~DeviceRateGyroBias(CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias *this)
{
  *(void *)this = &unk_1EDD11258;
  CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias::~DeviceRateGyroBias(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias::SharedDtor(CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias *this)
{
  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias *)CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2)
    {
      uint64_t v3 = *(void (**)(void))(*(void *)v2 + 8);
      v3();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias::default_instance(CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias *this)
{
  return CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 88) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias::New(CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (2)
  {
    uint64_t v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_31;
        }
        *((_DWORD *)this + 23) |= 1u;
        uint64_t v7 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((void *)this + 1);
        if (!v7) {
          operator new();
        }
        v24[0] = 0;
        uint64_t v8 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v24))return 0; {
        }
          }
        else
        {
          v24[0] = *v8;
          *((void *)a2 + 1) = v8 + 1;
        }
        int v9 = *((_DWORD *)a2 + 14);
        int v10 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v9 + 1;
        if (v9 >= v10) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::TimeStamp::MergePartialFromCodedStream(v7, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v11 = *((_DWORD *)a2 + 14);
        BOOL v12 = __OFSUB__(v11, 1);
        int v13 = v11 - 1;
        if (v13 < 0 == v12) {
          *((_DWORD *)a2 + 14) = v13;
        }
        uint64_t v14 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v14 >= *((void *)a2 + 2) || *v14 != 17) {
          continue;
        }
        *((void *)a2 + 1) = v14 + 1;
        goto LABEL_43;
      case 2u:
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_31;
        }
LABEL_43:
        *(void *)int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0; {
        *((void *)this + 2) = *(void *)v24;
        }
        *((_DWORD *)this + 23) |= 2u;
        uint64_t v15 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v15 >= *((void *)a2 + 2) || *v15 != 25) {
          continue;
        }
        *((void *)a2 + 1) = v15 + 1;
LABEL_47:
        *(void *)int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0; {
        *((void *)this + 3) = *(void *)v24;
        }
        *((_DWORD *)this + 23) |= 4u;
        uint64_t v16 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v16 >= *((void *)a2 + 2) || *v16 != 33) {
          continue;
        }
        *((void *)a2 + 1) = v16 + 1;
LABEL_51:
        *(void *)int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0; {
        *((void *)this + 4) = *(void *)v24;
        }
        *((_DWORD *)this + 23) |= 8u;
        int v17 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v17 >= *((void *)a2 + 2) || *v17 != 41) {
          continue;
        }
        *((void *)a2 + 1) = v17 + 1;
LABEL_55:
        *(void *)int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0; {
        *((void *)this + 5) = *(void *)v24;
        }
        *((_DWORD *)this + 23) |= 0x10u;
        int v18 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v18 >= *((void *)a2 + 2) || *v18 != 49) {
          continue;
        }
        *((void *)a2 + 1) = v18 + 1;
LABEL_59:
        *(void *)int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0; {
        *((void *)this + 6) = *(void *)v24;
        }
        *((_DWORD *)this + 23) |= 0x20u;
        int v19 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v19 >= *((void *)a2 + 2) || *v19 != 57) {
          continue;
        }
        *((void *)a2 + 1) = v19 + 1;
LABEL_63:
        *(void *)int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0; {
        *((void *)this + 7) = *(void *)v24;
        }
        *((_DWORD *)this + 23) |= 0x40u;
        int v20 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v20 >= *((void *)a2 + 2) || *v20 != 65) {
          continue;
        }
        *((void *)a2 + 1) = v20 + 1;
LABEL_67:
        *(void *)int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0; {
        *((void *)this + 8) = *(void *)v24;
        }
        *((_DWORD *)this + 23) |= 0x80u;
        unsigned int v21 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v21 >= *((void *)a2 + 2) || *v21 != 73) {
          continue;
        }
        *((void *)a2 + 1) = v21 + 1;
LABEL_71:
        *(void *)int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0; {
        *((void *)this + 9) = *(void *)v24;
        }
        *((_DWORD *)this + 23) |= 0x100u;
        int v22 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v22 >= *((void *)a2 + 2) || *v22 != 81) {
          continue;
        }
        *((void *)a2 + 1) = v22 + 1;
LABEL_75:
        *(void *)int v24 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24))
        {
          *((void *)this + 10) = *(void *)v24;
          *((_DWORD *)this + 23) |= 0x200u;
          if (*((void *)a2 + 1) == *((void *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_47;
        }
        goto LABEL_31;
      case 4u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_51;
        }
        goto LABEL_31;
      case 5u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_55;
        }
        goto LABEL_31;
      case 6u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_59;
        }
        goto LABEL_31;
      case 7u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_63;
        }
        goto LABEL_31;
      case 8u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_67;
        }
        goto LABEL_31;
      case 9u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_71;
        }
        goto LABEL_31;
      case 0xAu:
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_31;
        }
        goto LABEL_75;
      default:
        int v6 = TagFallback & 7;
LABEL_31:
        if (v6 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 92);
  if (v6)
  {
    uint64_t v7 = *(void *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto((CoreNavigation::CLP::LogEntry::Raven *)this);
      uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 92);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(v5 + 40), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(double *)(v5 + 48), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (uint64_t)a2, *(double *)(v5 + 56), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
LABEL_22:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (uint64_t)a2, *(double *)(v5 + 72), a3);
    if ((*(_DWORD *)(v5 + 92) & 0x200) == 0) {
      return this;
    }
    goto LABEL_23;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (uint64_t)a2, *(double *)(v5 + 64), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x100) != 0) {
    goto LABEL_22;
  }
LABEL_10:
  if ((v6 & 0x200) == 0) {
    return this;
  }
LABEL_23:
  double v8 = *(double *)(v5 + 80);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (uint64_t)a2, v8, a3);
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias::ByteSize(CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias *this)
{
  int v2 = *((_DWORD *)this + 23);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      uint64_t v4 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((void *)this + 1);
      if (!v4)
      {
        CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(0);
        uint64_t v4 = *(CoreNavigation::CLP::LogEntry::Raven::TimeStamp **)(CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias::default_instance_
                                                                 + 8);
      }
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::TimeStamp::ByteSize(v4);
      int v6 = (int)v5;
      if (v5 >= 0x80) {
        int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
      }
      else {
        int v7 = 1;
      }
      unsigned int v3 = v6 + v7 + 1;
      int v2 = *((_DWORD *)this + 23);
    }
    else
    {
      unsigned int v3 = 0;
    }
    if ((v2 & 2) != 0) {
      v3 += 9;
    }
    if ((v2 & 4) != 0) {
      v3 += 9;
    }
    if ((v2 & 8) != 0) {
      v3 += 9;
    }
    if ((v2 & 0x10) != 0) {
      v3 += 9;
    }
    if ((v2 & 0x20) != 0) {
      v3 += 9;
    }
    if ((v2 & 0x40) != 0) {
      v3 += 9;
    }
    if ((v2 & 0x80) != 0) {
      v3 += 9;
    }
  }
  else
  {
    unsigned int v3 = 0;
  }
  unsigned int v8 = v3 + 9;
  if ((v2 & 0x100) == 0) {
    unsigned int v8 = v3;
  }
  if ((v2 & 0x200) != 0) {
    v8 += 9;
  }
  if ((v2 & 0xFF00) != 0) {
    uint64_t result = v8;
  }
  else {
    uint64_t result = v3;
  }
  *((_DWORD *)this + 22) = result;
  return result;
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias::CopyFrom(CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias *this, const CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias::IsInitialized(CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias::Swap(CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias *this, CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    uint64_t v3 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    uint64_t v4 = *((void *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v4;
    uint64_t v5 = *((void *)this + 4);
    *((void *)this + 4) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v5;
    uint64_t v6 = *((void *)this + 5);
    *((void *)this + 5) = *((void *)a2 + 5);
    *((void *)a2 + 5) = v6;
    uint64_t v7 = *((void *)this + 6);
    *((void *)this + 6) = *((void *)a2 + 6);
    *((void *)a2 + 6) = v7;
    uint64_t v8 = *((void *)this + 7);
    *((void *)this + 7) = *((void *)a2 + 7);
    *((void *)a2 + 7) = v8;
    uint64_t v9 = *((void *)this + 8);
    *((void *)this + 8) = *((void *)a2 + 8);
    *((void *)a2 + 8) = v9;
    uint64_t v10 = *((void *)this + 9);
    *((void *)this + 9) = *((void *)a2 + 9);
    *((void *)a2 + 9) = v10;
    double result = *((double *)this + 10);
    *((void *)this + 10) = *((void *)a2 + 10);
    *((double *)a2 + 10) = result;
    LODWORD(v2) = *((_DWORD *)this + 23);
    *((_DWORD *)this + 23) = *((_DWORD *)a2 + 23);
    *((_DWORD *)a2 + 23) = v2;
    LODWORD(v2) = *((_DWORD *)this + 22);
    *((_DWORD *)this + 22) = *((_DWORD *)a2 + 22);
    *((_DWORD *)a2 + 22) = v2;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::Raven::DeviceRateGyroBias::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.Raven.DeviceRateGyroBias");
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias::SharedCtor(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias *this)
{
  *((void *)this + 11) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias *CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias::DeviceAccelerometerBias(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias *this, const CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias *a2)
{
  *(void *)this = &unk_1EDD11348;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((void *)this + 11) = 0;
  CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias::MergeFrom(this, a2);
  return this;
}

void sub_18DF223C0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias::~DeviceAccelerometerBias(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias *this)
{
  *(void *)this = &unk_1EDD11348;
  CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias::~DeviceAccelerometerBias(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias::SharedDtor(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias *this)
{
  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias *)CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2)
    {
      uint64_t v3 = *(void (**)(void))(*(void *)v2 + 8);
      v3();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias::default_instance(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias *this)
{
  return CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 88) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias::New(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (2)
  {
    uint64_t v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_31;
        }
        *((_DWORD *)this + 23) |= 1u;
        uint64_t v7 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((void *)this + 1);
        if (!v7) {
          operator new();
        }
        v24[0] = 0;
        uint64_t v8 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v24))return 0; {
        }
          }
        else
        {
          v24[0] = *v8;
          *((void *)a2 + 1) = v8 + 1;
        }
        int v9 = *((_DWORD *)a2 + 14);
        int v10 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v9 + 1;
        if (v9 >= v10) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::TimeStamp::MergePartialFromCodedStream(v7, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v11 = *((_DWORD *)a2 + 14);
        BOOL v12 = __OFSUB__(v11, 1);
        int v13 = v11 - 1;
        if (v13 < 0 == v12) {
          *((_DWORD *)a2 + 14) = v13;
        }
        uint64_t v14 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v14 >= *((void *)a2 + 2) || *v14 != 17) {
          continue;
        }
        *((void *)a2 + 1) = v14 + 1;
        goto LABEL_43;
      case 2u:
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_31;
        }
LABEL_43:
        *(void *)int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0; {
        *((void *)this + 2) = *(void *)v24;
        }
        *((_DWORD *)this + 23) |= 2u;
        uint64_t v15 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v15 >= *((void *)a2 + 2) || *v15 != 25) {
          continue;
        }
        *((void *)a2 + 1) = v15 + 1;
LABEL_47:
        *(void *)int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0; {
        *((void *)this + 3) = *(void *)v24;
        }
        *((_DWORD *)this + 23) |= 4u;
        uint64_t v16 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v16 >= *((void *)a2 + 2) || *v16 != 33) {
          continue;
        }
        *((void *)a2 + 1) = v16 + 1;
LABEL_51:
        *(void *)int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0; {
        *((void *)this + 4) = *(void *)v24;
        }
        *((_DWORD *)this + 23) |= 8u;
        int v17 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v17 >= *((void *)a2 + 2) || *v17 != 41) {
          continue;
        }
        *((void *)a2 + 1) = v17 + 1;
LABEL_55:
        *(void *)int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0; {
        *((void *)this + 5) = *(void *)v24;
        }
        *((_DWORD *)this + 23) |= 0x10u;
        int v18 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v18 >= *((void *)a2 + 2) || *v18 != 49) {
          continue;
        }
        *((void *)a2 + 1) = v18 + 1;
LABEL_59:
        *(void *)int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0; {
        *((void *)this + 6) = *(void *)v24;
        }
        *((_DWORD *)this + 23) |= 0x20u;
        int v19 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v19 >= *((void *)a2 + 2) || *v19 != 57) {
          continue;
        }
        *((void *)a2 + 1) = v19 + 1;
LABEL_63:
        *(void *)int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0; {
        *((void *)this + 7) = *(void *)v24;
        }
        *((_DWORD *)this + 23) |= 0x40u;
        int v20 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v20 >= *((void *)a2 + 2) || *v20 != 65) {
          continue;
        }
        *((void *)a2 + 1) = v20 + 1;
LABEL_67:
        *(void *)int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0; {
        *((void *)this + 8) = *(void *)v24;
        }
        *((_DWORD *)this + 23) |= 0x80u;
        unsigned int v21 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v21 >= *((void *)a2 + 2) || *v21 != 73) {
          continue;
        }
        *((void *)a2 + 1) = v21 + 1;
LABEL_71:
        *(void *)int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0; {
        *((void *)this + 9) = *(void *)v24;
        }
        *((_DWORD *)this + 23) |= 0x100u;
        int v22 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v22 >= *((void *)a2 + 2) || *v22 != 81) {
          continue;
        }
        *((void *)a2 + 1) = v22 + 1;
LABEL_75:
        *(void *)int v24 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24))
        {
          *((void *)this + 10) = *(void *)v24;
          *((_DWORD *)this + 23) |= 0x200u;
          if (*((void *)a2 + 1) == *((void *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_47;
        }
        goto LABEL_31;
      case 4u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_51;
        }
        goto LABEL_31;
      case 5u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_55;
        }
        goto LABEL_31;
      case 6u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_59;
        }
        goto LABEL_31;
      case 7u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_63;
        }
        goto LABEL_31;
      case 8u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_67;
        }
        goto LABEL_31;
      case 9u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_71;
        }
        goto LABEL_31;
      case 0xAu:
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_31;
        }
        goto LABEL_75;
      default:
        int v6 = TagFallback & 7;
LABEL_31:
        if (v6 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 92);
  if (v6)
  {
    uint64_t v7 = *(void *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto((CoreNavigation::CLP::LogEntry::Raven *)this);
      uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 92);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(v5 + 40), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(double *)(v5 + 48), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (uint64_t)a2, *(double *)(v5 + 56), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
LABEL_22:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (uint64_t)a2, *(double *)(v5 + 72), a3);
    if ((*(_DWORD *)(v5 + 92) & 0x200) == 0) {
      return this;
    }
    goto LABEL_23;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (uint64_t)a2, *(double *)(v5 + 64), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x100) != 0) {
    goto LABEL_22;
  }
LABEL_10:
  if ((v6 & 0x200) == 0) {
    return this;
  }
LABEL_23:
  double v8 = *(double *)(v5 + 80);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (uint64_t)a2, v8, a3);
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias::ByteSize(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias *this)
{
  int v2 = *((_DWORD *)this + 23);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      uint64_t v4 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((void *)this + 1);
      if (!v4)
      {
        CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(0);
        uint64_t v4 = *(CoreNavigation::CLP::LogEntry::Raven::TimeStamp **)(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias::default_instance_
                                                                 + 8);
      }
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::TimeStamp::ByteSize(v4);
      int v6 = (int)v5;
      if (v5 >= 0x80) {
        int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
      }
      else {
        int v7 = 1;
      }
      unsigned int v3 = v6 + v7 + 1;
      int v2 = *((_DWORD *)this + 23);
    }
    else
    {
      unsigned int v3 = 0;
    }
    if ((v2 & 2) != 0) {
      v3 += 9;
    }
    if ((v2 & 4) != 0) {
      v3 += 9;
    }
    if ((v2 & 8) != 0) {
      v3 += 9;
    }
    if ((v2 & 0x10) != 0) {
      v3 += 9;
    }
    if ((v2 & 0x20) != 0) {
      v3 += 9;
    }
    if ((v2 & 0x40) != 0) {
      v3 += 9;
    }
    if ((v2 & 0x80) != 0) {
      v3 += 9;
    }
  }
  else
  {
    unsigned int v3 = 0;
  }
  unsigned int v8 = v3 + 9;
  if ((v2 & 0x100) == 0) {
    unsigned int v8 = v3;
  }
  if ((v2 & 0x200) != 0) {
    v8 += 9;
  }
  if ((v2 & 0xFF00) != 0) {
    uint64_t result = v8;
  }
  else {
    uint64_t result = v3;
  }
  *((_DWORD *)this + 22) = result;
  return result;
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias::CopyFrom(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias *this, const CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias::IsInitialized(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias::Swap(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias *this, CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    uint64_t v3 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    uint64_t v4 = *((void *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v4;
    uint64_t v5 = *((void *)this + 4);
    *((void *)this + 4) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v5;
    uint64_t v6 = *((void *)this + 5);
    *((void *)this + 5) = *((void *)a2 + 5);
    *((void *)a2 + 5) = v6;
    uint64_t v7 = *((void *)this + 6);
    *((void *)this + 6) = *((void *)a2 + 6);
    *((void *)a2 + 6) = v7;
    uint64_t v8 = *((void *)this + 7);
    *((void *)this + 7) = *((void *)a2 + 7);
    *((void *)a2 + 7) = v8;
    uint64_t v9 = *((void *)this + 8);
    *((void *)this + 8) = *((void *)a2 + 8);
    *((void *)a2 + 8) = v9;
    uint64_t v10 = *((void *)this + 9);
    *((void *)this + 9) = *((void *)a2 + 9);
    *((void *)a2 + 9) = v10;
    double result = *((double *)this + 10);
    *((void *)this + 10) = *((void *)a2 + 10);
    *((double *)a2 + 10) = result;
    LODWORD(v2) = *((_DWORD *)this + 23);
    *((_DWORD *)this + 23) = *((_DWORD *)a2 + 23);
    *((_DWORD *)a2 + 23) = v2;
    LODWORD(v2) = *((_DWORD *)this + 22);
    *((_DWORD *)this + 22) = *((_DWORD *)a2 + 22);
    *((_DWORD *)a2 + 22) = v2;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerBias::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.Raven.DeviceAccelerometerBias");
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor::SharedCtor(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor *this)
{
  *((void *)this + 11) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor *CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor::DeviceAccelerometerScaleFactor(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor *this, const CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor *a2)
{
  *(void *)this = &unk_1EDD11438;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((void *)this + 11) = 0;
  CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor::MergeFrom(this, a2);
  return this;
}

void sub_18DF22FC0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor::~DeviceAccelerometerScaleFactor(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor *this)
{
  *(void *)this = &unk_1EDD11438;
  CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor::~DeviceAccelerometerScaleFactor(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor::SharedDtor(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor *this)
{
  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor *)CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2)
    {
      uint64_t v3 = *(void (**)(void))(*(void *)v2 + 8);
      v3();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor::default_instance(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor *this)
{
  return CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 88) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor::New(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (2)
  {
    uint64_t v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_31;
        }
        *((_DWORD *)this + 23) |= 1u;
        uint64_t v7 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((void *)this + 1);
        if (!v7) {
          operator new();
        }
        v24[0] = 0;
        uint64_t v8 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v24))return 0; {
        }
          }
        else
        {
          v24[0] = *v8;
          *((void *)a2 + 1) = v8 + 1;
        }
        int v9 = *((_DWORD *)a2 + 14);
        int v10 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v9 + 1;
        if (v9 >= v10) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::TimeStamp::MergePartialFromCodedStream(v7, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v11 = *((_DWORD *)a2 + 14);
        BOOL v12 = __OFSUB__(v11, 1);
        int v13 = v11 - 1;
        if (v13 < 0 == v12) {
          *((_DWORD *)a2 + 14) = v13;
        }
        uint64_t v14 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v14 >= *((void *)a2 + 2) || *v14 != 17) {
          continue;
        }
        *((void *)a2 + 1) = v14 + 1;
        goto LABEL_43;
      case 2u:
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_31;
        }
LABEL_43:
        *(void *)int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0; {
        *((void *)this + 2) = *(void *)v24;
        }
        *((_DWORD *)this + 23) |= 2u;
        uint64_t v15 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v15 >= *((void *)a2 + 2) || *v15 != 25) {
          continue;
        }
        *((void *)a2 + 1) = v15 + 1;
LABEL_47:
        *(void *)int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0; {
        *((void *)this + 3) = *(void *)v24;
        }
        *((_DWORD *)this + 23) |= 4u;
        uint64_t v16 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v16 >= *((void *)a2 + 2) || *v16 != 33) {
          continue;
        }
        *((void *)a2 + 1) = v16 + 1;
LABEL_51:
        *(void *)int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0; {
        *((void *)this + 4) = *(void *)v24;
        }
        *((_DWORD *)this + 23) |= 8u;
        int v17 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v17 >= *((void *)a2 + 2) || *v17 != 41) {
          continue;
        }
        *((void *)a2 + 1) = v17 + 1;
LABEL_55:
        *(void *)int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0; {
        *((void *)this + 5) = *(void *)v24;
        }
        *((_DWORD *)this + 23) |= 0x10u;
        int v18 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v18 >= *((void *)a2 + 2) || *v18 != 49) {
          continue;
        }
        *((void *)a2 + 1) = v18 + 1;
LABEL_59:
        *(void *)int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0; {
        *((void *)this + 6) = *(void *)v24;
        }
        *((_DWORD *)this + 23) |= 0x20u;
        int v19 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v19 >= *((void *)a2 + 2) || *v19 != 57) {
          continue;
        }
        *((void *)a2 + 1) = v19 + 1;
LABEL_63:
        *(void *)int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0; {
        *((void *)this + 7) = *(void *)v24;
        }
        *((_DWORD *)this + 23) |= 0x40u;
        int v20 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v20 >= *((void *)a2 + 2) || *v20 != 65) {
          continue;
        }
        *((void *)a2 + 1) = v20 + 1;
LABEL_67:
        *(void *)int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0; {
        *((void *)this + 8) = *(void *)v24;
        }
        *((_DWORD *)this + 23) |= 0x80u;
        unsigned int v21 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v21 >= *((void *)a2 + 2) || *v21 != 73) {
          continue;
        }
        *((void *)a2 + 1) = v21 + 1;
LABEL_71:
        *(void *)int v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0; {
        *((void *)this + 9) = *(void *)v24;
        }
        *((_DWORD *)this + 23) |= 0x100u;
        int v22 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v22 >= *((void *)a2 + 2) || *v22 != 81) {
          continue;
        }
        *((void *)a2 + 1) = v22 + 1;
LABEL_75:
        *(void *)int v24 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24))
        {
          *((void *)this + 10) = *(void *)v24;
          *((_DWORD *)this + 23) |= 0x200u;
          if (*((void *)a2 + 1) == *((void *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_47;
        }
        goto LABEL_31;
      case 4u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_51;
        }
        goto LABEL_31;
      case 5u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_55;
        }
        goto LABEL_31;
      case 6u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_59;
        }
        goto LABEL_31;
      case 7u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_63;
        }
        goto LABEL_31;
      case 8u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_67;
        }
        goto LABEL_31;
      case 9u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_71;
        }
        goto LABEL_31;
      case 0xAu:
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_31;
        }
        goto LABEL_75;
      default:
        int v6 = TagFallback & 7;
LABEL_31:
        if (v6 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 92);
  if (v6)
  {
    uint64_t v7 = *(void *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto((CoreNavigation::CLP::LogEntry::Raven *)this);
      uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 92);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_19;
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(v5 + 40), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_20;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(double *)(v5 + 48), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (uint64_t)a2, *(double *)(v5 + 56), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
LABEL_22:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (uint64_t)a2, *(double *)(v5 + 72), a3);
    if ((*(_DWORD *)(v5 + 92) & 0x200) == 0) {
      return this;
    }
    goto LABEL_23;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (uint64_t)a2, *(double *)(v5 + 64), a3);
  int v6 = *(_DWORD *)(v5 + 92);
  if ((v6 & 0x100) != 0) {
    goto LABEL_22;
  }
LABEL_10:
  if ((v6 & 0x200) == 0) {
    return this;
  }
LABEL_23:
  double v8 = *(double *)(v5 + 80);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (uint64_t)a2, v8, a3);
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor::ByteSize(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor *this)
{
  int v2 = *((_DWORD *)this + 23);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      uint64_t v4 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((void *)this + 1);
      if (!v4)
      {
        CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(0);
        uint64_t v4 = *(CoreNavigation::CLP::LogEntry::Raven::TimeStamp **)(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor::default_instance_
                                                                 + 8);
      }
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::TimeStamp::ByteSize(v4);
      int v6 = (int)v5;
      if (v5 >= 0x80) {
        int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
      }
      else {
        int v7 = 1;
      }
      unsigned int v3 = v6 + v7 + 1;
      int v2 = *((_DWORD *)this + 23);
    }
    else
    {
      unsigned int v3 = 0;
    }
    if ((v2 & 2) != 0) {
      v3 += 9;
    }
    if ((v2 & 4) != 0) {
      v3 += 9;
    }
    if ((v2 & 8) != 0) {
      v3 += 9;
    }
    if ((v2 & 0x10) != 0) {
      v3 += 9;
    }
    if ((v2 & 0x20) != 0) {
      v3 += 9;
    }
    if ((v2 & 0x40) != 0) {
      v3 += 9;
    }
    if ((v2 & 0x80) != 0) {
      v3 += 9;
    }
  }
  else
  {
    unsigned int v3 = 0;
  }
  unsigned int v8 = v3 + 9;
  if ((v2 & 0x100) == 0) {
    unsigned int v8 = v3;
  }
  if ((v2 & 0x200) != 0) {
    v8 += 9;
  }
  if ((v2 & 0xFF00) != 0) {
    uint64_t result = v8;
  }
  else {
    uint64_t result = v3;
  }
  *((_DWORD *)this + 22) = result;
  return result;
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor::CopyFrom(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor *this, const CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor::IsInitialized(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor::Swap(CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor *this, CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    uint64_t v3 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    uint64_t v4 = *((void *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v4;
    uint64_t v5 = *((void *)this + 4);
    *((void *)this + 4) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v5;
    uint64_t v6 = *((void *)this + 5);
    *((void *)this + 5) = *((void *)a2 + 5);
    *((void *)a2 + 5) = v6;
    uint64_t v7 = *((void *)this + 6);
    *((void *)this + 6) = *((void *)a2 + 6);
    *((void *)a2 + 6) = v7;
    uint64_t v8 = *((void *)this + 7);
    *((void *)this + 7) = *((void *)a2 + 7);
    *((void *)a2 + 7) = v8;
    uint64_t v9 = *((void *)this + 8);
    *((void *)this + 8) = *((void *)a2 + 8);
    *((void *)a2 + 8) = v9;
    uint64_t v10 = *((void *)this + 9);
    *((void *)this + 9) = *((void *)a2 + 9);
    *((void *)a2 + 9) = v10;
    double result = *((double *)this + 10);
    *((void *)this + 10) = *((void *)a2 + 10);
    *((double *)a2 + 10) = result;
    LODWORD(v2) = *((_DWORD *)this + 23);
    *((_DWORD *)this + 23) = *((_DWORD *)a2 + 23);
    *((_DWORD *)a2 + 23) = v2;
    LODWORD(v2) = *((_DWORD *)this + 22);
    *((_DWORD *)this + 22) = *((_DWORD *)a2 + 22);
    *((_DWORD *)a2 + 22) = v2;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::Raven::DeviceAccelerometerScaleFactor::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.Raven.DeviceAccelerometerScaleFactor");
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy::SharedCtor(CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy *this)
{
  *((void *)this + 7) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy *CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy::DeviceReceiverClockDiscrepancy(CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy *this, const CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy *a2)
{
  *(void *)this = &unk_1EDD114B0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((void *)this + 7) = 0;
  CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy::MergeFrom(this, a2);
  return this;
}

void sub_18DF23BA8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy::~DeviceReceiverClockDiscrepancy(CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy *this)
{
  *(void *)this = &unk_1EDD114B0;
  CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy::~DeviceReceiverClockDiscrepancy(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy::SharedDtor(CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy *this)
{
  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy *)CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2)
    {
      uint64_t v3 = *(void (**)(void))(*(void *)v2 + 8);
      v3();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy::default_instance(CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy *this)
{
  return CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 56) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy::New(CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (2)
  {
    uint64_t v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_23;
        }
        *((_DWORD *)this + 15) |= 1u;
        uint64_t v7 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((void *)this + 1);
        if (!v7) {
          operator new();
        }
        v20[0] = 0;
        uint64_t v8 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v20))return 0; {
        }
          }
        else
        {
          v20[0] = *v8;
          *((void *)a2 + 1) = v8 + 1;
        }
        int v9 = *((_DWORD *)a2 + 14);
        int v10 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v9 + 1;
        if (v9 >= v10) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::TimeStamp::MergePartialFromCodedStream(v7, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v11 = *((_DWORD *)a2 + 14);
        BOOL v12 = __OFSUB__(v11, 1);
        int v13 = v11 - 1;
        if (v13 < 0 == v12) {
          *((_DWORD *)a2 + 14) = v13;
        }
        uint64_t v14 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v14 >= *((void *)a2 + 2) || *v14 != 17) {
          continue;
        }
        *((void *)a2 + 1) = v14 + 1;
        goto LABEL_35;
      case 2u:
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_23;
        }
LABEL_35:
        *(void *)int v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v20) & 1) == 0)return 0; {
        *((void *)this + 2) = *(void *)v20;
        }
        *((_DWORD *)this + 15) |= 2u;
        uint64_t v15 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v15 >= *((void *)a2 + 2) || *v15 != 49) {
          continue;
        }
        *((void *)a2 + 1) = v15 + 1;
LABEL_39:
        *(void *)int v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v20) & 1) == 0)return 0; {
        *((void *)this + 3) = *(void *)v20;
        }
        *((_DWORD *)this + 15) |= 4u;
        uint64_t v16 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v16 >= *((void *)a2 + 2) || *v16 != 57) {
          continue;
        }
        *((void *)a2 + 1) = v16 + 1;
LABEL_43:
        *(void *)int v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v20) & 1) == 0)return 0; {
        *((void *)this + 4) = *(void *)v20;
        }
        *((_DWORD *)this + 15) |= 8u;
        int v17 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v17 >= *((void *)a2 + 2) || *v17 != 65) {
          continue;
        }
        *((void *)a2 + 1) = v17 + 1;
LABEL_47:
        *(void *)int v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v20) & 1) == 0)return 0; {
        *((void *)this + 5) = *(void *)v20;
        }
        *((_DWORD *)this + 15) |= 0x10u;
        int v18 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v18 >= *((void *)a2 + 2) || *v18 != 73) {
          continue;
        }
        *((void *)a2 + 1) = v18 + 1;
LABEL_51:
        *(void *)int v20 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v20))
        {
          *((void *)this + 6) = *(void *)v20;
          *((_DWORD *)this + 15) |= 0x20u;
          if (*((void *)a2 + 1) == *((void *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 6u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_39;
        }
        goto LABEL_23;
      case 7u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_43;
        }
        goto LABEL_23;
      case 8u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_47;
        }
        goto LABEL_23;
      case 9u:
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_23;
        }
        goto LABEL_51;
      default:
        int v6 = TagFallback & 7;
LABEL_23:
        if (v6 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 60);
  if (v6)
  {
    uint64_t v7 = *(void *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto((CoreNavigation::CLP::LogEntry::Raven *)this);
      uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 60);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
LABEL_14:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (uint64_t)a2, *(double *)(v5 + 40), a3);
    if ((*(_DWORD *)(v5 + 60) & 0x20) == 0) {
      return this;
    }
    goto LABEL_15;
  }
LABEL_13:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (uint64_t)a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x10) != 0) {
    goto LABEL_14;
  }
LABEL_6:
  if ((v6 & 0x20) == 0) {
    return this;
  }
LABEL_15:
  double v8 = *(double *)(v5 + 48);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (uint64_t)a2, v8, a3);
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy::ByteSize(CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 60);
  if ((_BYTE)v2)
  {
    if (*((unsigned char *)this + 60))
    {
      uint64_t v5 = (CoreNavigation::CLP::LogEntry::Raven::TimeStamp *)*((void *)this + 1);
      if (!v5)
      {
        CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(0);
        uint64_t v5 = *(CoreNavigation::CLP::LogEntry::Raven::TimeStamp **)(CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy::default_instance_
                                                                 + 8);
      }
      int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::TimeStamp::ByteSize(v5);
      int v7 = (int)v6;
      if (v6 >= 0x80) {
        int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
      }
      else {
        int v8 = 1;
      }
      unsigned int v3 = v7 + v8 + 1;
      int v2 = *((_DWORD *)this + 15);
    }
    else
    {
      unsigned int v3 = 0;
    }
    if ((v2 & 2) != 0) {
      v3 += 9;
    }
    if ((v2 & 4) != 0) {
      v3 += 9;
    }
    if ((v2 & 8) != 0) {
      v3 += 9;
    }
    if ((v2 & 0x10) != 0) {
      v3 += 9;
    }
    if ((v2 & 0x20) != 0) {
      uint64_t result = v3 + 9;
    }
    else {
      uint64_t result = v3;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  *((_DWORD *)this + 14) = result;
  return result;
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy::CopyFrom(CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy *this, const CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy::IsInitialized(CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy::Swap(CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy *this, CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    uint64_t v3 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    uint64_t v4 = *((void *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v4;
    uint64_t v5 = *((void *)this + 4);
    *((void *)this + 4) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v5;
    uint64_t v6 = *((void *)this + 5);
    *((void *)this + 5) = *((void *)a2 + 5);
    *((void *)a2 + 5) = v6;
    double result = *((double *)this + 6);
    *((void *)this + 6) = *((void *)a2 + 6);
    *((double *)a2 + 6) = result;
    LODWORD(v2) = *((_DWORD *)this + 15);
    *((_DWORD *)this + 15) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v2;
    LODWORD(v2) = *((_DWORD *)this + 14);
    *((_DWORD *)this + 14) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v2;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::Raven::DeviceReceiverClockDiscrepancy::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.Raven.DeviceReceiverClockDiscrepancy");
}

uint64_t sub_18DF24494(uint64_t a1)
{
  return *(unsigned int *)(a1 + 56);
}

uint64_t sub_18DF2449C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_18DF244A4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t sub_18DF244AC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_18DF244B4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 164);
}

uint64_t sub_18DF244BC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 288);
}

uint64_t sub_18DF244C4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 224);
}

uint64_t sub_18DF244CC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 156);
}

uint64_t sub_18DF244D4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 92);
}

uint64_t sub_18DF244DC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 88);
}

uint64_t sub_18DF244E4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 88);
}

uint64_t sub_18DF244EC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 128);
}

uint64_t sub_18DF244F4(uint64_t a1)
{
  return *(unsigned int *)(a1 + 88);
}

uint64_t sub_18DF244FC(uint64_t a1)
{
  return *(unsigned int *)(a1 + 88);
}

uint64_t sub_18DF24504(uint64_t a1)
{
  return *(unsigned int *)(a1 + 128);
}

uint64_t sub_18DF2450C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 88);
}

uint64_t sub_18DF24514(uint64_t a1)
{
  return *(unsigned int *)(a1 + 88);
}

uint64_t sub_18DF2451C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 88);
}

uint64_t sub_18DF24524(uint64_t a1)
{
  return *(unsigned int *)(a1 + 56);
}

uint64_t CoreNavigation::CLP::LogEntry::TropicalSavanna::protobuf_ShutdownFile_CoreNavigationCLPTropicalSavannaLogEntry_2eproto(CoreNavigation::CLP::LogEntry::TropicalSavanna *this)
{
  if (CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::default_instance_);
  if (CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp::default_instance_);
  uint64_t result = CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::default_instance_;
  if (CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::default_instance_)
  {
    uint64_t v2 = *(uint64_t (**)(void))(*(void *)CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::default_instance_
                             + 8);
    return v2();
  }
  return result;
}

void CoreNavigation::CLP::LogEntry::TropicalSavanna::protobuf_AddDesc_CoreNavigationCLPTropicalSavannaLogEntry_2eproto_impl(CoreNavigation::CLP::LogEntry::TropicalSavanna *this, uint64_t a2, uint64_t a3, const char *a4)
{
}

void *CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::LogEntry(void *this)
{
  this[1] = 0;
  this[2] = 0;
  *this = &unk_1EDD0F368;
  return this;
}

{
  this[1] = 0;
  this[2] = 0;
  *this = &unk_1EDD0F368;
  return this;
}

double CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp::TimeStamp(CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp *this)
{
  *(void *)this = &unk_1EDD0F3E0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD0F3E0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

double CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::TropicalSavannaHint(CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint *this)
{
  *(void *)this = &unk_1EDD0F2F0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD0F2F0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::InitAsDefaultInstance(uint64_t this)
{
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::InitAsDefaultInstance(uint64_t this)
{
  uint64_t v1 = CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp::default_instance_;
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp::default_instance_;
  *(void *)(this + 16) = v1;
  return this;
}

void CoreNavigation::CLP::LogEntry::TropicalSavanna::protobuf_AddDesc_CoreNavigationCLPTropicalSavannaLogEntry_2eproto(CoreNavigation::CLP::LogEntry::TropicalSavanna *this)
{
  uint64_t v1 = CoreNavigation::CLP::LogEntry::TropicalSavanna::protobuf_AddDesc_CoreNavigationCLPTropicalSavannaLogEntry_2eproto_once_;
  __dmb(0xBu);
  if (v1 != 2)
  {
    v2[0] = MEMORY[0x1E4FBA938] + 16;
    v2[1] = CoreNavigation::CLP::LogEntry::TropicalSavanna::protobuf_AddDesc_CoreNavigationCLPTropicalSavannaLogEntry_2eproto_impl;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
}

void sub_18DF24838(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry *CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::LogEntry(CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry *this, const CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry *a2)
{
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)this = &unk_1EDD0F368;
  CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::MergeFrom(this, a2);
  return this;
}

void sub_18DF248C0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::MergeFrom(CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry *this, const CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  if (*((unsigned char *)a2 + 20))
  {
    *((_DWORD *)this + 5) |= 1u;
    uint64_t v4 = (CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint *)*((void *)this + 1);
    if (!v4) {
      operator new();
    }
    uint64_t v5 = (const CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint *)*((void *)a2 + 1);
    if (!v5)
    {
      CoreNavigation::CLP::LogEntry::TropicalSavanna::protobuf_AddDesc_CoreNavigationCLPTropicalSavannaLogEntry_2eproto(this);
      uint64_t v5 = *(const CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint **)(CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::default_instance_
                                                                                         + 8);
    }
    CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::MergeFrom(v4, v5);
  }
}

void sub_18DF249D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::~LogEntry(CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry *this)
{
  *(void *)this = &unk_1EDD0F368;
  CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::~LogEntry(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::SharedDtor(CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry *this)
{
  CoreNavigation::CLP::LogEntry::TropicalSavanna::protobuf_AddDesc_CoreNavigationCLPTropicalSavannaLogEntry_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry *)CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2)
    {
      char v3 = *(void (**)(void))(*(void *)v2 + 8);
      v3();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::default_instance(CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry *this)
{
  return CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 16) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::New(CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::Clear(uint64_t this)
{
  uint64_t v1 = this;
  if (*(unsigned char *)(this + 20))
  {
    this = *(void *)(this + 8);
    if (this) {
      this = CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::Clear(this);
    }
  }
  *(_DWORD *)(v1 + 20) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::Clear(uint64_t this)
{
  LOBYTE(v1) = *(unsigned char *)(this + 36);
  if ((_BYTE)v1)
  {
    if (*(unsigned char *)(this + 36))
    {
      uint64_t v2 = *(void *)(this + 8);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 36))
        {
          *(void *)(v2 + 8) = 0;
          *(void *)(v2 + 16) = 0;
          *(void *)(v2 + 24) = 0;
        }
        *(_DWORD *)(v2 + 36) = 0;
        int v1 = *(_DWORD *)(this + 36);
      }
    }
    if ((v1 & 2) != 0)
    {
      uint64_t v3 = *(void *)(this + 16);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
          *(void *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
      }
    }
    *(void *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 36) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (1)
  {
    while (1)
    {
      uint64_t v4 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
      }
      else
      {
        unint64_t TagFallback = *v4;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v4 + 1;
      }
      if (TagFallback != 10) {
        break;
      }
      *((_DWORD *)this + 5) |= 1u;
      uint64_t v6 = (CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint *)*((void *)this + 1);
      if (!v6) {
        operator new();
      }
      unsigned int v14 = 0;
      int v7 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v7 >= *((void *)a2 + 2) || *v7 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v14)) {
          return 0;
        }
      }
      else
      {
        unsigned int v14 = *v7;
        *((void *)a2 + 1) = v7 + 1;
      }
      int v8 = *((_DWORD *)a2 + 14);
      int v9 = *((_DWORD *)a2 + 15);
      *((_DWORD *)a2 + 14) = v8 + 1;
      if (v8 >= v9) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
      if (!CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::MergePartialFromCodedStream(v6, a2)|| !*((unsigned char *)a2 + 36))
      {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
      int v10 = *((_DWORD *)a2 + 14);
      BOOL v11 = __OFSUB__(v10, 1);
      int v12 = v10 - 1;
      if (v12 < 0 == v11) {
        *((_DWORD *)a2 + 14) = v12;
      }
      if (*((void *)a2 + 1) == *((void *)a2 + 2)
        && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      break;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  if (*(unsigned char *)(this + 20))
  {
    uint64_t v5 = *(void *)(this + 8);
    if (!v5)
    {
      CoreNavigation::CLP::LogEntry::TropicalSavanna::protobuf_AddDesc_CoreNavigationCLPTropicalSavannaLogEntry_2eproto((CoreNavigation::CLP::LogEntry::TropicalSavanna *)this);
      uint64_t v5 = *(void *)(CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::default_instance_ + 8);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v5, a2, a4);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::ByteSize(CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry *this)
{
  if (*((unsigned char *)this + 20))
  {
    uint64_t v3 = (CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint *)*((void *)this + 1);
    if (!v3)
    {
      CoreNavigation::CLP::LogEntry::TropicalSavanna::protobuf_AddDesc_CoreNavigationCLPTropicalSavannaLogEntry_2eproto(0);
      uint64_t v3 = *(CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint **)(CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::default_instance_
                                                                                   + 8);
    }
    uint64_t v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::ByteSize(v3);
    int v5 = (int)v4;
    if (v4 >= 0x80) {
      int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
    }
    else {
      int v6 = 1;
    }
    uint64_t result = (v5 + v6 + 1);
  }
  else
  {
    uint64_t result = 0;
  }
  *((_DWORD *)this + 4) = result;
  return result;
}

void CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::MergeFrom(CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint *this, const CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 36);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 36))
    {
      *((_DWORD *)this + 9) |= 1u;
      int v5 = (CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp *)*((void *)this + 1);
      if (!v5) {
        operator new();
      }
      int v6 = (const CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp *)*((void *)a2 + 1);
      if (!v6)
      {
        CoreNavigation::CLP::LogEntry::TropicalSavanna::protobuf_AddDesc_CoreNavigationCLPTropicalSavannaLogEntry_2eproto(this);
        int v6 = *(const CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp **)(CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::default_instance_
                                                                                 + 8);
      }
      CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp::MergeFrom(v5, v6);
      int v4 = *((_DWORD *)a2 + 9);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_19;
      }
    }
    else if ((*((unsigned char *)a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    *((_DWORD *)this + 9) |= 2u;
    int v7 = (CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp *)*((void *)this + 2);
    if (!v7) {
      operator new();
    }
    int v8 = (const CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp *)*((void *)a2 + 2);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::TropicalSavanna::protobuf_AddDesc_CoreNavigationCLPTropicalSavannaLogEntry_2eproto(this);
      int v8 = *(const CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp **)(CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::default_instance_
                                                                               + 16);
    }
    CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp::MergeFrom(v7, v8);
    int v4 = *((_DWORD *)a2 + 9);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        return;
      }
LABEL_20:
      unsigned int v10 = *((_DWORD *)a2 + 7);
      if (v10 >= 3) {
        __assert_rtn("set_notification", "CoreNavigationCLPTropicalSavannaLogEntry.pb.h", 618, "::CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint_Notification_IsValid(value)");
      }
      *((_DWORD *)this + 9) |= 8u;
      *((_DWORD *)this + 7) = v10;
      return;
    }
LABEL_19:
    int v9 = *((_DWORD *)a2 + 6);
    *((_DWORD *)this + 9) |= 4u;
    *((_DWORD *)this + 6) = v9;
    if ((*((_DWORD *)a2 + 9) & 8) == 0) {
      return;
    }
    goto LABEL_20;
  }
}

void sub_18DF25130(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::CopyFrom(CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry *this, const CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::IsInitialized(CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry *a2)
{
  if (a2 != (CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 20);
    *(_DWORD *)(this + 20) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::TropicalSavanna::LogEntry::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.TropicalSavanna.LogEntry");
}

double CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp::SharedCtor(CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp *this)
{
  double result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp *CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp::TimeStamp(CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp *this, const CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp *a2)
{
  *(void *)this = &unk_1EDD0F3E0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp::MergeFrom(this, a2);
  return this;
}

void sub_18DF25294(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp::MergeFrom(CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp *this, const CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 36);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 36))
    {
      double result = *((double *)a2 + 1);
      *((_DWORD *)this + 9) |= 1u;
      *((double *)this + 1) = result;
      int v5 = *((_DWORD *)a2 + 9);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          return result;
        }
        goto LABEL_7;
      }
    }
    else if ((*((unsigned char *)a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    double result = *((double *)a2 + 2);
    *((_DWORD *)this + 9) |= 2u;
    *((double *)this + 2) = result;
    if ((*((_DWORD *)a2 + 9) & 4) == 0) {
      return result;
    }
LABEL_7:
    double result = *((double *)a2 + 3);
    *((_DWORD *)this + 9) |= 4u;
    *((double *)this + 3) = result;
  }
  return result;
}

void sub_18DF2537C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp::~TimeStamp(CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp *this)
{
  *(void *)this = &unk_1EDD0F3E0;
  CoreNavigation::CLP::LogEntry::TropicalSavanna::protobuf_AddDesc_CoreNavigationCLPTropicalSavannaLogEntry_2eproto(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp::~TimeStamp(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp::default_instance(CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp *this)
{
  return CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 32) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp::New(CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 36))
  {
    *(void *)(this + 8) = 0;
    *(void *)(this + 16) = 0;
    *(void *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 36) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  do
  {
    while (1)
    {
      while (1)
      {
        int v4 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v4;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((void *)a2 + 1) = v4 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v6 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_27;
        }
        unint64_t v11 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0) {
          return 0;
        }
        *((void *)this + 1) = v11;
        *((_DWORD *)this + 9) |= 1u;
        int v8 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v8 < *((void *)a2 + 2) && *v8 == 17)
        {
          *((void *)a2 + 1) = v8 + 1;
LABEL_17:
          unint64_t v11 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0) {
            return 0;
          }
          *((void *)this + 2) = v11;
          *((_DWORD *)this + 9) |= 2u;
          int v9 = (unsigned char *)*((void *)a2 + 1);
          if ((unint64_t)v9 < *((void *)a2 + 2) && *v9 == 25)
          {
            *((void *)a2 + 1) = v9 + 1;
            goto LABEL_21;
          }
        }
      }
      if (v6 == 2)
      {
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_27;
        }
        goto LABEL_17;
      }
      if (v6 != 3)
      {
        int v7 = TagFallback & 7;
        goto LABEL_27;
      }
      int v7 = TagFallback & 7;
      if (v7 == 1) {
        break;
      }
LABEL_27:
      if (v7 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
    }
      }
LABEL_21:
    unint64_t v11 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0) {
      return 0;
    }
    *((void *)this + 3) = v11;
    *((_DWORD *)this + 9) |= 4u;
  }
  while (*((void *)a2 + 1) != *((void *)a2 + 2)
       || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10));
  *((_DWORD *)a2 + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)a2 + 36) = 1;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = this;
  int v5 = *(_DWORD *)(this + 36);
  if ((v5 & 1) == 0)
  {
    if ((v5 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v4 + 16), a3);
    if ((*(_DWORD *)(v4 + 36) & 4) == 0) {
      return this;
    }
    goto LABEL_7;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
  int v5 = *(_DWORD *)(v4 + 36);
  if ((v5 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 4) == 0) {
    return this;
  }
LABEL_7:
  double v6 = *(double *)(v4 + 24);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, v6, a3);
}

uint64_t CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp::ByteSize(CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp *this)
{
  uint64_t v1 = *((unsigned __int8 *)this + 36);
  if (*((unsigned char *)this + 36))
  {
    unsigned int v2 = ((int)(v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0) {
      v2 += 9;
    }
    if ((v1 & 4) != 0) {
      uint64_t v1 = v2 + 9;
    }
    else {
      uint64_t v1 = v2;
    }
  }
  *((_DWORD *)this + 8) = v1;
  return v1;
}

double CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp::CopyFrom(CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp *this, const CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp::IsInitialized(CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp::Swap(CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp *this, CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    uint64_t v3 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    double result = *((double *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    *((double *)a2 + 3) = result;
    int v5 = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v5;
    int v6 = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v6;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.TropicalSavanna.TimeStamp");
}

BOOL CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint_Notification_IsValid(CoreNavigation::CLP::LogEntry::TropicalSavanna *this)
{
  return this < 3;
}

double CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::SharedCtor(CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint *this)
{
  double result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint *CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::TropicalSavannaHint(CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint *this, const CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint *a2)
{
  *(void *)this = &unk_1EDD0F2F0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::MergeFrom(this, a2);
  return this;
}

void sub_18DF2596C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::~TropicalSavannaHint(CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint *this)
{
  *(void *)this = &unk_1EDD0F2F0;
  CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::~TropicalSavannaHint(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::SharedDtor(CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint *this)
{
  CoreNavigation::CLP::LogEntry::TropicalSavanna::protobuf_AddDesc_CoreNavigationCLPTropicalSavannaLogEntry_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint *)CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 2);
    if (v3)
    {
      uint64_t v4 = *(void (**)(void))(*(void *)v3 + 8);
      v4();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::default_instance(CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint *this)
{
  return CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 32) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::New(CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4 = (unsigned int *)((char *)this + 24);
  while (2)
  {
    int v5 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_20;
        }
        *((_DWORD *)this + 9) |= 1u;
        int v8 = (CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp *)*((void *)this + 1);
        if (!v8) {
          operator new();
        }
        unsigned int v30 = 0;
        int v9 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v9 >= *((void *)a2 + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30))return 0; {
        }
          }
        else
        {
          unsigned int v30 = *v9;
          *((void *)a2 + 1) = v9 + 1;
        }
        int v13 = *((_DWORD *)a2 + 14);
        int v14 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v13 + 1;
        if (v13 >= v14) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp::MergePartialFromCodedStream(v8, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v15 = *((_DWORD *)a2 + 14);
        BOOL v16 = __OFSUB__(v15, 1);
        int v17 = v15 - 1;
        if (v17 < 0 == v16) {
          *((_DWORD *)a2 + 14) = v17;
        }
        int v18 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v18 >= *((void *)a2 + 2) || *v18 != 18) {
          continue;
        }
        *((void *)a2 + 1) = v18 + 1;
        goto LABEL_33;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_20;
        }
LABEL_33:
        *((_DWORD *)this + 9) |= 2u;
        int v19 = (CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp *)*((void *)this + 2);
        if (!v19) {
          operator new();
        }
        unsigned int v31 = 0;
        int v20 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v20 >= *((void *)a2 + 2) || *v20 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v31))return 0; {
        }
          }
        else
        {
          unsigned int v31 = *v20;
          *((void *)a2 + 1) = v20 + 1;
        }
        int v21 = *((_DWORD *)a2 + 14);
        int v22 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v21 + 1;
        if (v21 < v22)
        {
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (CoreNavigation::CLP::LogEntry::TropicalSavanna::TimeStamp::MergePartialFromCodedStream(v19, a2))
          {
            if (*((unsigned char *)a2 + 36))
            {
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
              int v23 = *((_DWORD *)a2 + 14);
              BOOL v16 = __OFSUB__(v23, 1);
              int v24 = v23 - 1;
              if (v24 < 0 == v16) {
                *((_DWORD *)a2 + 14) = v24;
              }
              int v25 = (unsigned char *)*((void *)a2 + 1);
              unint64_t v10 = *((void *)a2 + 2);
              if ((unint64_t)v25 < v10 && *v25 == 24)
              {
                unint64_t v11 = v25 + 1;
                *((void *)a2 + 1) = v11;
LABEL_47:
                if ((unint64_t)v11 >= v10 || *v11 < 0)
                {
                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
                  if (!result) {
                    return result;
                  }
                  int v26 = (unsigned char *)*((void *)a2 + 1);
                  unint64_t v10 = *((void *)a2 + 2);
                }
                else
                {
                  unsigned int *v4 = *v11;
                  int v26 = v11 + 1;
                  *((void *)a2 + 1) = v26;
                }
                *((_DWORD *)this + 9) |= 4u;
                if ((unint64_t)v26 < v10 && *v26 == 32)
                {
                  int v12 = v26 + 1;
                  *((void *)a2 + 1) = v12;
LABEL_55:
                  unsigned int v29 = 0;
                  if ((unint64_t)v12 >= v10 || *v12 < 0)
                  {
                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v29);
                    if (!result) {
                      return result;
                    }
                    unsigned int v28 = v29;
                  }
                  else
                  {
                    unsigned int v28 = *v12;
                    *((void *)a2 + 1) = v12 + 1;
                  }
                  if (v28 <= 2)
                  {
                    *((_DWORD *)this + 9) |= 8u;
                    *((_DWORD *)this + 7) = v28;
                  }
                  if (*((void *)a2 + 1) == *((void *)a2 + 2)
                    && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                  {
                    *((_DWORD *)a2 + 8) = 0;
                    uint64_t result = 1;
                    *((unsigned char *)a2 + 36) = 1;
                    return result;
                  }
                }
              }
              continue;
            }
          }
        }
        return 0;
      case 3u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        unint64_t v11 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
        goto LABEL_47;
      case 4u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        int v12 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
        goto LABEL_55;
      default:
        int v7 = TagFallback & 7;
LABEL_20:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 36);
  if (v6)
  {
    uint64_t v7 = *(void *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::TropicalSavanna::protobuf_AddDesc_CoreNavigationCLPTropicalSavannaLogEntry_2eproto((CoreNavigation::CLP::LogEntry::TropicalSavanna *)this);
      uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 36);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_12:
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
      if ((*(_DWORD *)(v5 + 36) & 8) == 0) {
        return this;
      }
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::TropicalSavanna::protobuf_AddDesc_CoreNavigationCLPTropicalSavannaLogEntry_2eproto((CoreNavigation::CLP::LogEntry::TropicalSavanna *)this);
    uint64_t v8 = *(void *)(CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::default_instance_ + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 36);
  if ((v6 & 4) != 0) {
    goto LABEL_12;
  }
LABEL_4:
  if ((v6 & 8) == 0) {
    return this;
  }
LABEL_13:
  uint64_t v9 = *(unsigned int *)(v5 + 28);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v9, (uint64_t)a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::ByteSize(CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 36);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_37;
  }
  if ((*((unsigned char *)this + 36) & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((*((unsigned char *)this + 36) & 2) == 0) {
      goto LABEL_24;
    }
    goto LABEL_15;
  }
  uint64_t v4 = *((void *)this + 1);
  if (!v4)
  {
    CoreNavigation::CLP::LogEntry::TropicalSavanna::protobuf_AddDesc_CoreNavigationCLPTropicalSavannaLogEntry_2eproto(this);
    uint64_t v4 = *(void *)(CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::default_instance_ + 8);
  }
  int v5 = *(unsigned __int8 *)(v4 + 36);
  if (*(unsigned char *)(v4 + 36))
  {
    int v6 = (v5 << 31 >> 31) & 9;
    if ((v5 & 2) != 0) {
      v6 += 9;
    }
    if ((v5 & 4) != 0) {
      int v5 = v6 + 9;
    }
    else {
      int v5 = v6;
    }
  }
  *(_DWORD *)(v4 + 32) = v5;
  uint64_t v3 = (v5 + 2);
  int v2 = *((_DWORD *)this + 9);
  if ((v2 & 2) != 0)
  {
LABEL_15:
    uint64_t v7 = *((void *)this + 2);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::TropicalSavanna::protobuf_AddDesc_CoreNavigationCLPTropicalSavannaLogEntry_2eproto(this);
      uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::default_instance_ + 16);
    }
    int v8 = *(unsigned __int8 *)(v7 + 36);
    if (*(unsigned char *)(v7 + 36))
    {
      int v9 = (v8 << 31 >> 31) & 9;
      if ((v8 & 2) != 0) {
        v9 += 9;
      }
      if ((v8 & 4) != 0) {
        int v8 = v9 + 9;
      }
      else {
        int v8 = v9;
      }
    }
    *(_DWORD *)(v7 + 32) = v8;
    uint64_t v3 = (v3 + v8 + 2);
    int v2 = *((_DWORD *)this + 9);
  }
LABEL_24:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_37;
    }
    goto LABEL_31;
  }
  unint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  if (v10 >= 0x80)
  {
    int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10) + 1;
    int v2 = *((_DWORD *)this + 9);
  }
  else
  {
    int v11 = 2;
  }
  uint64_t v3 = (v11 + v3);
  if ((v2 & 8) != 0)
  {
LABEL_31:
    int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
    if ((v12 & 0x80000000) != 0)
    {
      int v13 = 11;
    }
    else if (v12 >= 0x80)
    {
      int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12) + 1;
    }
    else
    {
      int v13 = 2;
    }
    uint64_t v3 = (v13 + v3);
  }
LABEL_37:
  *((_DWORD *)this + 8) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::CopyFrom(CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint *this, const CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint *))(*(void *)this
                                                                                                  + 32))(this);
    CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::IsInitialized(CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint *a2)
{
  if (a2 != (CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    uint64_t v3 = *(void *)(this + 16);
    *(void *)(this + 16) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v3;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::TropicalSavanna::TropicalSavannaHint::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.TropicalSavanna.TropicalSavannaHint");
}

uint64_t sub_18DF26318(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_18DF26320(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_18DF26328(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::protobuf_ShutdownFile_CoreNavigationCLPRavenLogEntry_2eproto(CoreNavigation::CLP::LogEntry::Raven *this)
{
  if (CoreNavigation::CLP::LogEntry::Raven::LogEntry::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::Raven::LogEntry::default_instance_ + 8))(CoreNavigation::CLP::LogEntry::Raven::LogEntry::default_instance_);
  }
  if (CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::default_instance_);
  uint64_t result = CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp::default_instance_;
  if (CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp::default_instance_)
  {
    uint64_t v2 = *(uint64_t (**)(void))(*(void *)CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp::default_instance_
                             + 8);
    return v2();
  }
  return result;
}

void CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenLogEntry_2eproto_impl(CoreNavigation::CLP::LogEntry::Raven *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v4 = (CoreNavigation::CLP::LogEntry::Raven *)wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/CoreNavigation/shared/cnprotobuf/CoreNavigationCLPRavenLogEntry.pb.cc", a4);
  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(v4);
  operator new();
}

void *CoreNavigation::CLP::LogEntry::Raven::LogEntry::LogEntry(void *this)
{
  *this = &unk_1EDD11528;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

{
  *this = &unk_1EDD11528;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::RavenPlatformInfo(uint64_t this)
{
  *(void *)this = &unk_1EDD111E0;
  *(void *)(this + 8) = 0;
  *(_DWORD *)(this + 16) = 0;
  *(unsigned char *)(this + 20) = 0;
  uint64_t v1 = MEMORY[0x1E4FBA920];
  *(void *)(this + 24) = MEMORY[0x1E4FBA920];
  *(void *)(this + 32) = v1;
  *(void *)(this + 40) = 0;
  *(void *)(this + 48) = 0;
  return this;
}

{
  uint64_t v1;

  *(void *)this = &unk_1EDD111E0;
  *(void *)(this + 8) = 0;
  *(_DWORD *)(this + 16) = 0;
  *(unsigned char *)(this + 20) = 0;
  uint64_t v1 = MEMORY[0x1E4FBA920];
  *(void *)(this + 24) = MEMORY[0x1E4FBA920];
  *(void *)(this + 32) = v1;
  *(void *)(this + 40) = 0;
  *(void *)(this + 48) = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp::RavenPlatformInfo_TimeStamp(CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp *this)
{
  *(void *)this = &unk_1EDD113C0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD113C0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::LogEntry::InitAsDefaultInstance(uint64_t this)
{
  uint64_t v1 = CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::default_instance_;
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::Raven::RavenOutput::default_instance_;
  *(void *)(this + 16) = v1;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::InitAsDefaultInstance(uint64_t this)
{
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp::default_instance_;
  return this;
}

void CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenLogEntry_2eproto(CoreNavigation::CLP::LogEntry::Raven *this)
{
  uint64_t v1 = CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenLogEntry_2eproto_once_;
  __dmb(0xBu);
  if (v1 != 2)
  {
    v2[0] = MEMORY[0x1E4FBA938] + 16;
    v2[1] = CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenLogEntry_2eproto_impl;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
}

void sub_18DF26678(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void *CoreNavigation::CLP::LogEntry::Raven::LogEntry::SharedCtor(void *this)
{
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::Raven::LogEntry *CoreNavigation::CLP::LogEntry::Raven::LogEntry::LogEntry(CoreNavigation::CLP::LogEntry::Raven::LogEntry *this, const CoreNavigation::CLP::LogEntry::Raven::LogEntry *a2)
{
  *(void *)this = &unk_1EDD11528;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  CoreNavigation::CLP::LogEntry::Raven::LogEntry::MergeFrom(this, a2);
  return this;
}

void sub_18DF26704(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Raven::LogEntry::MergeFrom(CoreNavigation::CLP::LogEntry::Raven::LogEntry *this, const CoreNavigation::CLP::LogEntry::Raven::LogEntry *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v9);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 28);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 28))
    {
      *((_DWORD *)this + 7) |= 1u;
      int v5 = (CoreNavigation::CLP::LogEntry::Raven::RavenOutput *)*((void *)this + 1);
      if (!v5) {
        operator new();
      }
      int v6 = (const CoreNavigation::CLP::LogEntry::Raven::RavenOutput *)*((void *)a2 + 1);
      if (!v6)
      {
        CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenLogEntry_2eproto(this);
        int v6 = *(const CoreNavigation::CLP::LogEntry::Raven::RavenOutput **)(CoreNavigation::CLP::LogEntry::Raven::LogEntry::default_instance_
                                                                         + 8);
      }
      CoreNavigation::CLP::LogEntry::Raven::RavenOutput::MergeFrom(v5, v6);
      int v4 = *((_DWORD *)a2 + 7);
    }
    if ((v4 & 2) != 0)
    {
      *((_DWORD *)this + 7) |= 2u;
      uint64_t v7 = (CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo *)*((void *)this + 2);
      if (!v7) {
        operator new();
      }
      int v8 = (const CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo *)*((void *)a2 + 2);
      if (!v8)
      {
        CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenLogEntry_2eproto(this);
        int v8 = *(const CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo **)(CoreNavigation::CLP::LogEntry::Raven::LogEntry::default_instance_
                                                                               + 16);
      }
      CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::MergeFrom(v7, v8);
    }
  }
}

void sub_18DF268B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Raven::LogEntry::~LogEntry(CoreNavigation::CLP::LogEntry::Raven::LogEntry *this)
{
  *(void *)this = &unk_1EDD11528;
  CoreNavigation::CLP::LogEntry::Raven::LogEntry::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::Raven::LogEntry::~LogEntry(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::Raven::LogEntry::SharedDtor(CoreNavigation::CLP::LogEntry::Raven::LogEntry *this)
{
  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenLogEntry_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::Raven::LogEntry *)CoreNavigation::CLP::LogEntry::Raven::LogEntry::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 2);
    if (v3)
    {
      int v4 = *(void (**)(void))(*(void *)v3 + 8);
      v4();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::LogEntry::default_instance(CoreNavigation::CLP::LogEntry::Raven::LogEntry *this)
{
  return CoreNavigation::CLP::LogEntry::Raven::LogEntry::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::LogEntry::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 24) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::Raven::LogEntry::New(CoreNavigation::CLP::LogEntry::Raven::LogEntry *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::LogEntry::Clear(uint64_t this)
{
  uint64_t v1 = this;
  LOBYTE(v2) = *(unsigned char *)(this + 28);
  if ((_BYTE)v2)
  {
    if (*(unsigned char *)(this + 28))
    {
      this = *(void *)(this + 8);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::Raven::RavenOutput::Clear(this);
        int v2 = *(_DWORD *)(v1 + 28);
      }
    }
    if ((v2 & 2) != 0)
    {
      this = *(void *)(v1 + 16);
      if (this) {
        this = CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::Clear(this);
      }
    }
  }
  *(_DWORD *)(v1 + 28) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::Clear(uint64_t this)
{
  LOBYTE(v1) = *(unsigned char *)(this + 52);
  if ((_BYTE)v1)
  {
    if (*(unsigned char *)(this + 52))
    {
      uint64_t v2 = *(void *)(this + 8);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 36))
        {
          *(void *)(v2 + 8) = 0;
          *(void *)(v2 + 16) = 0;
          *(void *)(v2 + 24) = 0;
        }
        *(_DWORD *)(v2 + 36) = 0;
        int v1 = *(_DWORD *)(this + 52);
      }
    }
    *(_DWORD *)(this + 16) = 0;
    *(unsigned char *)(this + 20) = 0;
    uint64_t v3 = MEMORY[0x1E4FBA920];
    if ((v1 & 8) != 0)
    {
      uint64_t v4 = *(void *)(this + 24);
      if (v4 != MEMORY[0x1E4FBA920])
      {
        if (*(char *)(v4 + 23) < 0)
        {
          **(unsigned char **)uint64_t v4 = 0;
          *(void *)(v4 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v4 = 0;
          *(unsigned char *)(v4 + 23) = 0;
        }
      }
    }
    if ((*(unsigned char *)(this + 52) & 0x10) != 0)
    {
      uint64_t v5 = *(void *)(this + 32);
      if (v5 != v3)
      {
        if (*(char *)(v5 + 23) < 0)
        {
          **(unsigned char **)uint64_t v5 = 0;
          *(void *)(v5 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v5 = 0;
          *(unsigned char *)(v5 + 23) = 0;
        }
      }
    }
    *(void *)(this + 40) = 0;
  }
  *(_DWORD *)(this + 52) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::LogEntry::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Raven::LogEntry *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v4 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v4;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((void *)a2 + 1) = v4 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_17;
        }
        *((_DWORD *)this + 7) |= 1u;
        uint64_t v7 = (CoreNavigation::CLP::LogEntry::Raven::RavenOutput *)*((void *)this + 1);
        if (!v7) {
          operator new();
        }
        unsigned int v22 = 0;
        int v8 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v22))return 0; {
        }
          }
        else
        {
          unsigned int v22 = *v8;
          *((void *)a2 + 1) = v8 + 1;
        }
        int v9 = *((_DWORD *)a2 + 14);
        int v10 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v9 + 1;
        if (v9 >= v10) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::RavenOutput::MergePartialFromCodedStream(v7, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v11 = *((_DWORD *)a2 + 14);
        BOOL v12 = __OFSUB__(v11, 1);
        int v13 = v11 - 1;
        if (v13 < 0 == v12) {
          *((_DWORD *)a2 + 14) = v13;
        }
        int v14 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v14 < *((void *)a2 + 2) && *v14 == 18)
        {
          *((void *)a2 + 1) = v14 + 1;
          goto LABEL_29;
        }
      }
      if (TagFallback >> 3 != 2) {
        break;
      }
      int v6 = TagFallback & 7;
      if (v6 != 2) {
        goto LABEL_17;
      }
LABEL_29:
      *((_DWORD *)this + 7) |= 2u;
      int v15 = (CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo *)*((void *)this + 2);
      if (!v15) {
        operator new();
      }
      unsigned int v23 = 0;
      BOOL v16 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v16 >= *((void *)a2 + 2) || *v16 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v23)) {
          return 0;
        }
      }
      else
      {
        unsigned int v23 = *v16;
        *((void *)a2 + 1) = v16 + 1;
      }
      int v17 = *((_DWORD *)a2 + 14);
      int v18 = *((_DWORD *)a2 + 15);
      *((_DWORD *)a2 + 14) = v17 + 1;
      if (v17 >= v18) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
      if (!CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::MergePartialFromCodedStream(v15, a2)
        || !*((unsigned char *)a2 + 36))
      {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
      int v19 = *((_DWORD *)a2 + 14);
      BOOL v12 = __OFSUB__(v19, 1);
      int v20 = v19 - 1;
      if (v20 < 0 == v12) {
        *((_DWORD *)a2 + 14) = v20;
      }
      if (*((void *)a2 + 1) == *((void *)a2 + 2)
        && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      }
    }
    int v6 = TagFallback & 7;
LABEL_17:
    if (v6 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::LogEntry::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 28);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      return this;
    }
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(this + 8);
  if (!v7)
  {
    CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenLogEntry_2eproto((CoreNavigation::CLP::LogEntry::Raven *)this);
    uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::Raven::LogEntry::default_instance_ + 8);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
  if ((*(_DWORD *)(v5 + 28) & 2) != 0)
  {
LABEL_7:
    uint64_t v8 = *(void *)(v5 + 16);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenLogEntry_2eproto((CoreNavigation::CLP::LogEntry::Raven *)this);
      uint64_t v8 = *(void *)(CoreNavigation::CLP::LogEntry::Raven::LogEntry::default_instance_ + 16);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::LogEntry::ByteSize(CoreNavigation::CLP::LogEntry::Raven::LogEntry *this)
{
  if (!*((unsigned char *)this + 28))
  {
    uint64_t v2 = 0;
    goto LABEL_18;
  }
  if ((*((unsigned char *)this + 28) & 1) == 0)
  {
    uint64_t v2 = 0;
    if ((*((unsigned char *)this + 28) & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  uint64_t v3 = (CoreNavigation::CLP::LogEntry::Raven::RavenOutput *)*((void *)this + 1);
  if (!v3)
  {
    CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenLogEntry_2eproto(0);
    uint64_t v3 = *(CoreNavigation::CLP::LogEntry::Raven::RavenOutput **)(CoreNavigation::CLP::LogEntry::Raven::LogEntry::default_instance_
                                                               + 8);
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::RavenOutput::ByteSize(v3);
  int v5 = (int)v4;
  if (v4 >= 0x80) {
    int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
  }
  else {
    int v6 = 1;
  }
  uint64_t v2 = (v5 + v6 + 1);
  if ((*((_DWORD *)this + 7) & 2) != 0)
  {
LABEL_12:
    uint64_t v7 = (CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo *)*((void *)this + 2);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenLogEntry_2eproto(0);
      uint64_t v7 = *(CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo **)(CoreNavigation::CLP::LogEntry::Raven::LogEntry::default_instance_
                                                                       + 16);
    }
    uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::ByteSize(v7);
    int v9 = (int)v8;
    if (v8 >= 0x80) {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
    }
    else {
      int v10 = 1;
    }
    uint64_t v2 = (v2 + v9 + v10 + 1);
  }
LABEL_18:
  *((_DWORD *)this + 6) = v2;
  return v2;
}

void CoreNavigation::CLP::LogEntry::Raven::LogEntry::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Raven::LogEntry *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::Raven::LogEntry::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::MergeFrom(CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo *this, const CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 52);
  if (!(_BYTE)v4) {
    return;
  }
  if (*((unsigned char *)a2 + 52))
  {
    *((_DWORD *)this + 13) |= 1u;
    int v5 = (CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp *)*((void *)this + 1);
    if (!v5) {
      operator new();
    }
    int v6 = (const CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp *)*((void *)a2 + 1);
    if (!v6)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenLogEntry_2eproto(this);
      int v6 = *(const CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp **)(CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::default_instance_
                                                                                       + 8);
    }
    CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp::MergeFrom(v5, v6);
    int v4 = *((_DWORD *)a2 + 13);
  }
  if ((v4 & 2) != 0)
  {
    unsigned int v7 = *((_DWORD *)a2 + 4);
    if ((CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_Hardware_IsValid((CoreNavigation::CLP::LogEntry::Raven *)v7) & 1) == 0) {
      __assert_rtn("set_hardware", "CoreNavigationCLPRavenLogEntry.pb.h", 865, "::CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_Hardware_IsValid(value)");
    }
    *((_DWORD *)this + 13) |= 2u;
    *((_DWORD *)this + 4) = v7;
    int v4 = *((_DWORD *)a2 + 13);
  }
  if ((v4 & 4) != 0)
  {
    char v8 = *((unsigned char *)a2 + 20);
    *((_DWORD *)this + 13) |= 4u;
    *((unsigned char *)this + 20) = v8;
    int v4 = *((_DWORD *)a2 + 13);
    if ((v4 & 8) == 0)
    {
LABEL_15:
      if ((v4 & 0x10) == 0) {
        goto LABEL_16;
      }
LABEL_23:
      int v11 = (const std::string *)*((void *)a2 + 4);
      *((_DWORD *)this + 13) |= 0x10u;
      BOOL v12 = (std::string *)*((void *)this + 4);
      if (v12 == (std::string *)MEMORY[0x1E4FBA920]) {
        operator new();
      }
      std::string::operator=(v12, v11);
      int v4 = *((_DWORD *)a2 + 13);
      if ((v4 & 0x20) == 0)
      {
LABEL_17:
        if ((v4 & 0x40) == 0) {
          return;
        }
        goto LABEL_28;
      }
      goto LABEL_26;
    }
  }
  else if ((v4 & 8) == 0)
  {
    goto LABEL_15;
  }
  int v9 = (const std::string *)*((void *)a2 + 3);
  *((_DWORD *)this + 13) |= 8u;
  int v10 = (std::string *)*((void *)this + 3);
  if (v10 == (std::string *)MEMORY[0x1E4FBA920]) {
    operator new();
  }
  std::string::operator=(v10, v9);
  int v4 = *((_DWORD *)a2 + 13);
  if ((v4 & 0x10) != 0) {
    goto LABEL_23;
  }
LABEL_16:
  if ((v4 & 0x20) == 0) {
    goto LABEL_17;
  }
LABEL_26:
  unsigned int v13 = *((_DWORD *)a2 + 10);
  if (v13 >= 4) {
    __assert_rtn("set_product_category", "CoreNavigationCLPRavenLogEntry.pb.h", 1050, "::CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_ProductCategory_IsValid(value)");
  }
  *((_DWORD *)this + 13) |= 0x20u;
  *((_DWORD *)this + 10) = v13;
  if ((*((_DWORD *)a2 + 13) & 0x40) != 0)
  {
LABEL_28:
    unsigned int v14 = *((_DWORD *)a2 + 11);
    if (v14 >= 3) {
      __assert_rtn("set_gnss_band_support", "CoreNavigationCLPRavenLogEntry.pb.h", 1073, "::CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_GnssBandSupport_IsValid(value)");
    }
    *((_DWORD *)this + 13) |= 0x40u;
    *((_DWORD *)this + 11) = v14;
  }
}

void sub_18DF27358(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Raven::LogEntry::CopyFrom(CoreNavigation::CLP::LogEntry::Raven::LogEntry *this, const CoreNavigation::CLP::LogEntry::Raven::LogEntry *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Raven::LogEntry *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::Raven::LogEntry::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::LogEntry::IsInitialized(CoreNavigation::CLP::LogEntry::Raven::LogEntry *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::LogEntry::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::Raven::LogEntry *a2)
{
  if (a2 != (CoreNavigation::CLP::LogEntry::Raven::LogEntry *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    uint64_t v3 = *(void *)(this + 16);
    *(void *)(this + 16) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 28);
    *(_DWORD *)(this + 28) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v3;
    LODWORD(v3) = *(_DWORD *)(this + 24);
    *(_DWORD *)(this + 24) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v3;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::Raven::LogEntry::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.Raven.LogEntry");
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_Hardware_IsValid(CoreNavigation::CLP::LogEntry::Raven *this)
{
  unsigned int v1 = this;
  uint64_t result = 1;
  if (v1 >= 0x30)
  {
    unsigned int v3 = v1 - 50;
    if (v3 > 0x32 || ((1 << v3) & 0x4001FFFFFFFFFLL) == 0) {
      return 0;
    }
  }
  return result;
}

BOOL CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_ProductCategory_IsValid(CoreNavigation::CLP::LogEntry::Raven *this)
{
  return this < 4;
}

BOOL CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_GnssBandSupport_IsValid(CoreNavigation::CLP::LogEntry::Raven *this)
{
  return this < 3;
}

double CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp::SharedCtor(CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp *this)
{
  double result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp *CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp::RavenPlatformInfo_TimeStamp(CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp *this, const CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp *a2)
{
  *(void *)this = &unk_1EDD113C0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp::MergeFrom(this, a2);
  return this;
}

void sub_18DF27524(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp::MergeFrom(CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp *this, const CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 36);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 36))
    {
      double result = *((double *)a2 + 1);
      *((_DWORD *)this + 9) |= 1u;
      *((double *)this + 1) = result;
      int v5 = *((_DWORD *)a2 + 9);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          return result;
        }
        goto LABEL_7;
      }
    }
    else if ((*((unsigned char *)a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    double result = *((double *)a2 + 2);
    *((_DWORD *)this + 9) |= 2u;
    *((double *)this + 2) = result;
    if ((*((_DWORD *)a2 + 9) & 4) == 0) {
      return result;
    }
LABEL_7:
    double result = *((double *)a2 + 3);
    *((_DWORD *)this + 9) |= 4u;
    *((double *)this + 3) = result;
  }
  return result;
}

void sub_18DF2760C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp::~RavenPlatformInfo_TimeStamp(CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp *this)
{
  *(void *)this = &unk_1EDD113C0;
  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenLogEntry_2eproto(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp::~RavenPlatformInfo_TimeStamp(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp::default_instance(CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp *this)
{
  return CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 32) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp::New(CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 36))
  {
    *(void *)(this + 8) = 0;
    *(void *)(this + 16) = 0;
    *(void *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 36) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  do
  {
    while (1)
    {
      while (1)
      {
        int v4 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v4;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((void *)a2 + 1) = v4 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v6 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_27;
        }
        unint64_t v11 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0) {
          return 0;
        }
        *((void *)this + 1) = v11;
        *((_DWORD *)this + 9) |= 1u;
        char v8 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v8 < *((void *)a2 + 2) && *v8 == 17)
        {
          *((void *)a2 + 1) = v8 + 1;
LABEL_17:
          unint64_t v11 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0) {
            return 0;
          }
          *((void *)this + 2) = v11;
          *((_DWORD *)this + 9) |= 2u;
          int v9 = (unsigned char *)*((void *)a2 + 1);
          if ((unint64_t)v9 < *((void *)a2 + 2) && *v9 == 25)
          {
            *((void *)a2 + 1) = v9 + 1;
            goto LABEL_21;
          }
        }
      }
      if (v6 == 2)
      {
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_27;
        }
        goto LABEL_17;
      }
      if (v6 != 3)
      {
        int v7 = TagFallback & 7;
        goto LABEL_27;
      }
      int v7 = TagFallback & 7;
      if (v7 == 1) {
        break;
      }
LABEL_27:
      if (v7 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
    }
      }
LABEL_21:
    unint64_t v11 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0) {
      return 0;
    }
    *((void *)this + 3) = v11;
    *((_DWORD *)this + 9) |= 4u;
  }
  while (*((void *)a2 + 1) != *((void *)a2 + 2)
       || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10));
  *((_DWORD *)a2 + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)a2 + 36) = 1;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = this;
  int v5 = *(_DWORD *)(this + 36);
  if ((v5 & 1) == 0)
  {
    if ((v5 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v4 + 16), a3);
    if ((*(_DWORD *)(v4 + 36) & 4) == 0) {
      return this;
    }
    goto LABEL_7;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
  int v5 = *(_DWORD *)(v4 + 36);
  if ((v5 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 4) == 0) {
    return this;
  }
LABEL_7:
  double v6 = *(double *)(v4 + 24);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, v6, a3);
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp::ByteSize(CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp *this)
{
  uint64_t v1 = *((unsigned __int8 *)this + 36);
  if (*((unsigned char *)this + 36))
  {
    unsigned int v2 = ((int)(v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0) {
      v2 += 9;
    }
    if ((v1 & 4) != 0) {
      uint64_t v1 = v2 + 9;
    }
    else {
      uint64_t v1 = v2;
    }
  }
  *((_DWORD *)this + 8) = v1;
  return v1;
}

double CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp::CopyFrom(CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp *this, const CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp::IsInitialized(CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp::Swap(CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp *this, CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    uint64_t v3 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    double result = *((double *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    *((double *)a2 + 3) = result;
    int v5 = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v5;
    int v6 = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v6;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.Raven.RavenPlatformInfo.TimeStamp");
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(_DWORD *)(this + 16) = 0;
  *(unsigned char *)(this + 20) = 0;
  uint64_t v1 = MEMORY[0x1E4FBA920];
  *(void *)(this + 24) = MEMORY[0x1E4FBA920];
  *(void *)(this + 32) = v1;
  *(void *)(this + 40) = 0;
  *(void *)(this + 48) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo *CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::RavenPlatformInfo(CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo *this, const CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo *a2)
{
  *(void *)this = &unk_1EDD111E0;
  *((void *)this + 1) = 0;
  *((_DWORD *)this + 4) = 0;
  *((unsigned char *)this + 20) = 0;
  uint64_t v3 = MEMORY[0x1E4FBA920];
  *((void *)this + 3) = MEMORY[0x1E4FBA920];
  *((void *)this + 4) = v3;
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::MergeFrom(this, a2);
  return this;
}

void sub_18DF27C18(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::~RavenPlatformInfo(CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo *this)
{
  *(void *)this = &unk_1EDD111E0;
  CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::~RavenPlatformInfo(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::SharedDtor(CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo *this)
{
  uint64_t v1 = this;
  uint64_t v2 = *((void *)this + 3);
  uint64_t v3 = MEMORY[0x1E4FBA920];
  if (v2 != MEMORY[0x1E4FBA920] && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    this = (CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo *)MEMORY[0x192FA6240](v2, 0x1012C40EC159624);
  }
  uint64_t v5 = *((void *)v1 + 4);
  if (v5 != v3 && v5 != 0)
  {
    if (*(char *)(v5 + 23) < 0) {
      operator delete(*(void **)v5);
    }
    this = (CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo *)MEMORY[0x192FA6240](v5, 0x1012C40EC159624);
  }
  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenLogEntry_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo *)CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::default_instance_ != v1)
  {
    uint64_t v7 = *((void *)v1 + 1);
    if (v7)
    {
      char v8 = *(void (**)(void))(*(void *)v7 + 8);
      v8();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::default_instance(CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo *this)
{
  return CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 48) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::New(CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4 = MEMORY[0x1E4FBA920];
  while (2)
  {
    uint64_t v5 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_26;
        }
        *((_DWORD *)this + 13) |= 1u;
        char v8 = (CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp *)*((void *)this + 1);
        if (!v8) {
          operator new();
        }
        unsigned int v35 = 0;
        int v9 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v9 >= *((void *)a2 + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v35))return 0; {
        }
          }
        else
        {
          unsigned int v35 = *v9;
          *((void *)a2 + 1) = v9 + 1;
        }
        int v19 = *((_DWORD *)a2 + 14);
        int v20 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v19 + 1;
        if (v19 >= v20) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_TimeStamp::MergePartialFromCodedStream(v8, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v21 = *((_DWORD *)a2 + 14);
        BOOL v22 = __OFSUB__(v21, 1);
        int v23 = v21 - 1;
        if (v23 < 0 == v22) {
          *((_DWORD *)a2 + 14) = v23;
        }
        int v24 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
        if ((unint64_t)v24 >= v10 || *v24 != 16) {
          continue;
        }
        unint64_t v11 = v24 + 1;
        *((void *)a2 + 1) = v11;
        goto LABEL_39;
      case 2u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        unint64_t v11 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
LABEL_39:
        unsigned int v35 = 0;
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v35);
          if (!result) {
            return result;
          }
          unint64_t v25 = v35;
        }
        else
        {
          unint64_t v25 = *v11;
          *((void *)a2 + 1) = v11 + 1;
        }
        if (CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo_Hardware_IsValid((CoreNavigation::CLP::LogEntry::Raven *)v25))
        {
          *((_DWORD *)this + 13) |= 2u;
          *((_DWORD *)this + 4) = v25;
        }
        int v27 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v12 = *((void *)a2 + 2);
        if ((unint64_t)v27 >= v12 || *v27 != 24) {
          continue;
        }
        unsigned int v13 = v27 + 1;
        *((void *)a2 + 1) = v13;
LABEL_49:
        unsigned int v35 = 0;
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v35);
          if (!result) {
            return result;
          }
          unsigned int v28 = v35;
          unsigned int v29 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v12 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v28 = *v13;
          unsigned int v29 = v13 + 1;
          *((void *)a2 + 1) = v29;
        }
        *((unsigned char *)this + 20) = v28 != 0;
        int v14 = *((_DWORD *)this + 13) | 4;
        *((_DWORD *)this + 13) = v14;
        if ((unint64_t)v29 >= v12 || *v29 != 34) {
          continue;
        }
        *((void *)a2 + 1) = v29 + 1;
LABEL_57:
        *((_DWORD *)this + 13) = v14 | 8;
        if (*((void *)this + 3) == v4) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        unsigned int v30 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v30 >= *((void *)a2 + 2) || *v30 != 42) {
          continue;
        }
        *((void *)a2 + 1) = v30 + 1;
LABEL_63:
        *((_DWORD *)this + 13) |= 0x10u;
        if (*((void *)this + 4) == v4) {
          operator new();
        }
        uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadString();
        if (!result) {
          return result;
        }
        unsigned int v31 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        if ((unint64_t)v31 >= v15 || *v31 != 48) {
          continue;
        }
        BOOL v16 = v31 + 1;
        *((void *)a2 + 1) = v16;
LABEL_69:
        unsigned int v35 = 0;
        if ((unint64_t)v16 >= v15 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v35);
          if (!result) {
            return result;
          }
          unsigned int v32 = v35;
        }
        else
        {
          unsigned int v32 = *v16;
          *((void *)a2 + 1) = v16 + 1;
        }
        if (v32 <= 3)
        {
          *((_DWORD *)this + 13) |= 0x20u;
          *((_DWORD *)this + 10) = v32;
        }
        int v33 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v17 = *((void *)a2 + 2);
        if ((unint64_t)v33 >= v17 || *v33 != 56) {
          continue;
        }
        int v18 = v33 + 1;
        *((void *)a2 + 1) = v18;
LABEL_79:
        unsigned int v35 = 0;
        if ((unint64_t)v18 >= v17 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v35);
          if (!result) {
            return result;
          }
          unsigned int v34 = v35;
        }
        else
        {
          unsigned int v34 = *v18;
          *((void *)a2 + 1) = v18 + 1;
        }
        if (v34 <= 2)
        {
          *((_DWORD *)this + 13) |= 0x40u;
          *((_DWORD *)this + 11) = v34;
        }
        if (*((void *)a2 + 1) != *((void *)a2 + 2)
          || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
        {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        break;
      case 3u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        unsigned int v13 = (char *)*((void *)a2 + 1);
        unint64_t v12 = *((void *)a2 + 2);
        goto LABEL_49;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_26;
        }
        int v14 = *((_DWORD *)this + 13);
        goto LABEL_57;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_63;
        }
        goto LABEL_26;
      case 6u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        BOOL v16 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_69;
      case 7u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_26;
        }
        int v18 = (char *)*((void *)a2 + 1);
        unint64_t v17 = *((void *)a2 + 2);
        goto LABEL_79;
      default:
        int v7 = TagFallback & 7;
LABEL_26:
        if (v7 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback))continue; {
        return 0;
        }
    }
    return result;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 52);
  if (v6)
  {
    uint64_t v7 = *(void *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenLogEntry_2eproto((CoreNavigation::CLP::LogEntry::Raven *)this);
      uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 52);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 16), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned __int8 *)(v5 + 20), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
LABEL_16:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 52) & 0x40) == 0) {
      return this;
    }
    goto LABEL_17;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteString();
  int v6 = *(_DWORD *)(v5 + 52);
  if ((v6 & 0x20) != 0) {
    goto LABEL_16;
  }
LABEL_7:
  if ((v6 & 0x40) == 0) {
    return this;
  }
LABEL_17:
  uint64_t v8 = *(unsigned int *)(v5 + 44);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v8, (uint64_t)a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::ByteSize(CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 52);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_59;
  }
  if ((*((unsigned char *)this + 52) & 1) == 0)
  {
    LODWORD(v3) = 0;
    if ((*((unsigned char *)this + 52) & 2) == 0) {
      goto LABEL_21;
    }
    goto LABEL_15;
  }
  uint64_t v4 = *((void *)this + 1);
  if (!v4)
  {
    CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenLogEntry_2eproto(this);
    uint64_t v4 = *(void *)(CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::default_instance_ + 8);
  }
  int v5 = *(unsigned __int8 *)(v4 + 36);
  if (*(unsigned char *)(v4 + 36))
  {
    int v6 = (v5 << 31 >> 31) & 9;
    if ((v5 & 2) != 0) {
      v6 += 9;
    }
    if ((v5 & 4) != 0) {
      int v5 = v6 + 9;
    }
    else {
      int v5 = v6;
    }
  }
  *(_DWORD *)(v4 + 32) = v5;
  LODWORD(v3) = v5 + 2;
  int v2 = *((_DWORD *)this + 13);
  if ((v2 & 2) != 0)
  {
LABEL_15:
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if ((v7 & 0x80000000) != 0)
    {
      int v8 = 11;
    }
    else if (v7 >= 0x80)
    {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7) + 1;
      int v2 = *((_DWORD *)this + 13);
    }
    else
    {
      int v8 = 2;
    }
    LODWORD(v3) = v8 + v3;
  }
LABEL_21:
  if ((v2 & 4) != 0) {
    uint64_t v3 = (v3 + 2);
  }
  else {
    uint64_t v3 = v3;
  }
  if ((v2 & 8) != 0)
  {
    uint64_t v9 = *((void *)this + 3);
    int v10 = *(unsigned __int8 *)(v9 + 23);
    char v11 = v10;
    uint64_t v12 = *(void *)(v9 + 8);
    if ((v10 & 0x80u) == 0) {
      unint64_t v13 = *(unsigned __int8 *)(v9 + 23);
    }
    else {
      unint64_t v13 = v12;
    }
    if (v13 >= 0x80)
    {
      int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v13);
      int v10 = *(unsigned __int8 *)(v9 + 23);
      uint64_t v12 = *(void *)(v9 + 8);
      int v2 = *((_DWORD *)this + 13);
      char v11 = *(unsigned char *)(v9 + 23);
    }
    else
    {
      int v14 = 1;
    }
    if (v11 < 0) {
      int v10 = v12;
    }
    uint64_t v3 = (v3 + v14 + v10 + 1);
    if ((v2 & 0x10) == 0)
    {
LABEL_26:
      if ((v2 & 0x20) == 0) {
        goto LABEL_27;
      }
      goto LABEL_47;
    }
  }
  else if ((v2 & 0x10) == 0)
  {
    goto LABEL_26;
  }
  uint64_t v15 = *((void *)this + 4);
  int v16 = *(unsigned __int8 *)(v15 + 23);
  char v17 = v16;
  uint64_t v18 = *(void *)(v15 + 8);
  if ((v16 & 0x80u) == 0) {
    unint64_t v19 = *(unsigned __int8 *)(v15 + 23);
  }
  else {
    unint64_t v19 = v18;
  }
  if (v19 >= 0x80)
  {
    int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v19);
    int v16 = *(unsigned __int8 *)(v15 + 23);
    uint64_t v18 = *(void *)(v15 + 8);
    int v2 = *((_DWORD *)this + 13);
    char v17 = *(unsigned char *)(v15 + 23);
  }
  else
  {
    int v20 = 1;
  }
  if (v17 < 0) {
    int v16 = v18;
  }
  uint64_t v3 = (v3 + v20 + v16 + 1);
  if ((v2 & 0x20) == 0)
  {
LABEL_27:
    if ((v2 & 0x40) == 0) {
      goto LABEL_59;
    }
    goto LABEL_53;
  }
LABEL_47:
  int v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
  if ((v21 & 0x80000000) != 0)
  {
    int v22 = 11;
  }
  else if (v21 >= 0x80)
  {
    int v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21) + 1;
    int v2 = *((_DWORD *)this + 13);
  }
  else
  {
    int v22 = 2;
  }
  uint64_t v3 = (v22 + v3);
  if ((v2 & 0x40) != 0)
  {
LABEL_53:
    int v23 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
    if ((v23 & 0x80000000) != 0)
    {
      int v24 = 11;
    }
    else if (v23 >= 0x80)
    {
      int v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v23) + 1;
    }
    else
    {
      int v24 = 2;
    }
    uint64_t v3 = (v24 + v3);
  }
LABEL_59:
  *((_DWORD *)this + 12) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::CopyFrom(CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo *this, const CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::IsInitialized(CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo *a2)
{
  if (a2 != (CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    LODWORD(v2) = *(_DWORD *)(this + 16);
    *(_DWORD *)(this + 16) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    LOBYTE(v2) = *(unsigned char *)(this + 20);
    *(unsigned char *)(this + 20) = *((unsigned char *)a2 + 20);
    *((unsigned char *)a2 + 20) = v2;
    uint64_t v3 = *(void *)(this + 24);
    *(void *)(this + 24) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v3;
    uint64_t v4 = *(void *)(this + 32);
    *(void *)(this + 32) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 44);
    *(_DWORD *)(this + 44) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 52);
    *(_DWORD *)(this + 52) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 48);
    *(_DWORD *)(this + 48) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v4;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::Raven::RavenPlatformInfo::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.Raven.RavenPlatformInfo");
}

uint64_t sub_18DF28848(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_18DF28850(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_18DF28858(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_ShutdownFile_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *this)
{
  if (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate::default_instance_);
  if (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_);
  if (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::default_instance_);
  if (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::default_instance_);
  if (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::default_instance_);
  if (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets::default_instance_);
  if (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::default_instance_);
  if (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::default_instance_);
  if (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::default_instance_);
  if (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::default_instance_);
  if (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::default_instance_);
  if (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::default_instance_);
  if (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel::default_instance_);
  if (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::default_instance_);
  if (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::default_instance_);
  if (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::default_instance_);
  if (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::default_instance_);
  uint64_t result = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections::default_instance_;
  if (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections::default_instance_)
  {
    uint64_t v2 = *(uint64_t (**)(void))(*(void *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections::default_instance_
                             + 8);
    return v2();
  }
  return result;
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto_impl(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *this, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v4 = (CoreNavigation::CLP::LogEntry::PrivateData *)wireless_diagnostics::google::protobuf::internal::VerifyVersion((wireless_diagnostics::google::protobuf::internal *)0x1E9808, 2005000, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/CoreNavigation/shared/cnprotobuf/CoreNavigationCLPGnssMsmtAnalysisToolData.pb.cc", a4);
  CoreNavigation::CLP::LogEntry::PrivateData::protobuf_AddDesc_CoreNavigationCLPGnssMeasApi_2eproto(v4);
  CoreNavigation::CLP::LogEntry::Raven::protobuf_AddDesc_CoreNavigationCLPRavenOutput_2eproto(v5);
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto(v6);
  operator new();
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate::RavenUserActivityEstimate(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate *this)
{
  *(void *)this = &unk_1EDD0FB60;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 84) = 0u;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD0FB60;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 84) = 0u;
  return result;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::GnssMsmtAnalysisToolDataCapture(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *this)
{
  *(void *)this = &unk_1EDD0FBD8;
  *((void *)this + 20) = 0;
  *((void *)this + 21) = 0;
  *((_DWORD *)this + 44) = 0;
  *((void *)this + 23) = 0;
  *((void *)this + 24) = 0;
  *((_DWORD *)this + 50) = 0;
  *((void *)this + 26) = 0;
  *((void *)this + 27) = 0;
  *((_DWORD *)this + 56) = 0;
  *((void *)this + 29) = 0;
  *((_DWORD *)this + 60) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 52) = 0u;
  *(_OWORD *)((char *)this + 100) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((_DWORD *)this + 38) = 0;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD0FBD8;
  *((void *)this + 20) = 0;
  *((void *)this + 21) = 0;
  *((_DWORD *)this + 44) = 0;
  *((void *)this + 23) = 0;
  *((void *)this + 24) = 0;
  *((_DWORD *)this + 50) = 0;
  *((void *)this + 26) = 0;
  *((void *)this + 27) = 0;
  *((_DWORD *)this + 56) = 0;
  *((void *)this + 29) = 0;
  *((_DWORD *)this + 60) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 52) = 0u;
  *(_OWORD *)((char *)this + 100) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *((_DWORD *)this + 38) = 0;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  return result;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::SatelliteVisibility(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility *this)
{
  *(void *)this = &unk_1EDD02650;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((unsigned char *)this + 32) = 0;
  *(void *)&double result = 2;
  *(void *)((char *)this + 36) = 2;
  *((_DWORD *)this + 11) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD02650;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((unsigned char *)this + 32) = 0;
  *(void *)&double result = 2;
  *(void *)((char *)this + 36) = 2;
  *((_DWORD *)this + 11) = 0;
  return result;
}

void *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::PerBandMeasurementCount(void *this)
{
  this[1] = 0;
  this[2] = 0;
  *this = &unk_1EDD0FA70;
  return this;
}

{
  this[1] = 0;
  this[2] = 0;
  *this = &unk_1EDD0FA70;
  return this;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::TimeStamps(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps *this)
{
  *(void *)this = &unk_1EDD0F548;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((void *)this + 7) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD0F548;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((void *)this + 7) = 0;
  return result;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets::ClockOffsets(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets *this)
{
  *(void *)this = &unk_1EDD0F5C0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 36) = 0u;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD0F5C0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 36) = 0u;
  return result;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::MeasurementData(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData *this)
{
  *(void *)this = &unk_1EDD0F7A0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 152) = 0u;
  *(_OWORD *)((char *)this + 168) = 0u;
  *(_OWORD *)((char *)this + 184) = 0u;
  *(_OWORD *)((char *)this + 200) = 0u;
  *(_OWORD *)((char *)this + 216) = 0u;
  *(_OWORD *)((char *)this + 232) = 0u;
  *((void *)this + 31) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD0F7A0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 152) = 0u;
  *(_OWORD *)((char *)this + 168) = 0u;
  *(_OWORD *)((char *)this + 184) = 0u;
  *(_OWORD *)((char *)this + 200) = 0u;
  *(_OWORD *)((char *)this + 216) = 0u;
  *(_OWORD *)((char *)this + 232) = 0u;
  *((void *)this + 31) = 0;
  return result;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::SatelliteState(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState *this)
{
  *(void *)this = &unk_1EDD0F6B0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((void *)this + 5) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD0F6B0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((void *)this + 5) = 0;
  return result;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::UserToSatelliteState(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState *this)
{
  *(void *)this = &unk_1EDD0F818;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((void *)this + 5) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD0F818;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((void *)this + 5) = 0;
  return result;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::PerConstellationCounts(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *this)
{
  *(void *)this = &unk_1EDD0F9F8;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD0F9F8;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 0;
  return result;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::GnssPreprocessedMeasurementsEvent(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent *this)
{
  *(void *)this = &unk_1EDD0FC50;
  *((unsigned char *)this + 80) = 0;
  *((_DWORD *)this + 21) = 0;
  *((_DWORD *)this + 22) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *((_DWORD *)this + 18) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD0FC50;
  *((unsigned char *)this + 80) = 0;
  *((_DWORD *)this + 21) = 0;
  *((_DWORD *)this + 22) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *((_DWORD *)this + 18) = 0;
  return result;
}

void *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::CNTimeSpan(void *this)
{
  *this = &unk_1EDD0F4D0;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

{
  *this = &unk_1EDD0F4D0;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel::GnssReceiverClockModel(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel *this)
{
  *(void *)this = &unk_1EDD0F908;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((void *)this + 5) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD0F908;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((void *)this + 5) = 0;
  return result;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::GnssSvAndMeasurementData(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData *this)
{
  *(void *)this = &unk_1EDD0FAE8;
  *((void *)this + 10) = 0;
  *((void *)this + 11) = 0;
  *((_DWORD *)this + 24) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *((_DWORD *)this + 18) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD0FAE8;
  *((void *)this + 10) = 0;
  *((void *)this + 11) = 0;
  *((_DWORD *)this + 24) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *((_DWORD *)this + 18) = 0;
  return result;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::PolynomialEphemerides(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides *this)
{
  *(void *)this = &unk_1EDD0F890;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *((void *)this + 13) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD0F890;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *((void *)this + 13) = 0;
  return result;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::GnssObservable(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable *this)
{
  *(void *)this = &unk_1EDD0F638;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 86) = 0u;
  *((void *)this + 13) = 0;
  *((void *)this + 14) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD0F638;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 86) = 0u;
  *((void *)this + 13) = 0;
  *((void *)this + 14) = 0;
  return result;
}

void *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::GNSSSatelliteID(void *this)
{
  this[1] = 0;
  this[2] = 0;
  *this = &unk_1EDD0F728;
  return this;
}

{
  this[1] = 0;
  this[2] = 0;
  *this = &unk_1EDD0F728;
  return this;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections::MeasurementCorrections(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections *this)
{
  *(void *)this = &unk_1EDD0F980;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD0F980;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

void *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::InitAsDefaultInstance(void *this)
{
  uint64_t v1 = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets::default_instance_;
  this[1] = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::default_instance_;
  this[2] = v1;
  uint64_t v2 = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::default_instance_;
  this[3] = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::default_instance_;
  this[4] = v2;
  this[5] = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::default_instance_;
  uint64_t v3 = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::default_instance_;
  this[9] = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::default_instance_;
  this[10] = v3;
  this[11] = v3;
  uint64_t v4 = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate::default_instance_;
  this[15] = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::default_instance_;
  this[16] = v4;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::InitAsDefaultInstance(uint64_t this)
{
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::default_instance_;
  return this;
}

void *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::InitAsDefaultInstance(void *this)
{
  uint64_t v1 = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime::default_instance_;
  this[2] = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::default_instance_;
  this[3] = v1;
  uint64_t v2 = CoreNavigation::CLP::LogEntry::Raven::TimeStruct::default_instance_;
  this[4] = CoreNavigation::CLP::LogEntry::Raven::TimeStruct::default_instance_;
  this[5] = v2;
  return this;
}

void *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::InitAsDefaultInstance(void *this)
{
  uint64_t v1 = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::default_instance_;
  this[1] = CoreNavigation::CLP::LogEntry::PrivateData::SvId::default_instance_;
  this[2] = v1;
  uint64_t v2 = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::default_instance_;
  this[5] = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::default_instance_;
  this[6] = v2;
  return this;
}

void *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::InitAsDefaultInstance(void *this)
{
  uint64_t v1 = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::default_instance_;
  this[1] = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::default_instance_;
  this[2] = v1;
  uint64_t v2 = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets::default_instance_;
  this[3] = v1;
  this[4] = v2;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::InitAsDefaultInstance(uint64_t this)
{
  uint64_t v1 = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::default_instance_;
  *(void *)(this + 24) = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::default_instance_;
  *(void *)(this + 32) = v1;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::InitAsDefaultInstance(uint64_t this)
{
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::default_instance_;
  *(void *)(this + 48) = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::InitAsDefaultInstance(uint64_t this)
{
  uint64_t v1 = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::default_instance_;
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::default_instance_;
  *(void *)(this + 16) = v1;
  return this;
}

void *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::InitAsDefaultInstance(void *this)
{
  uint64_t v1 = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::default_instance_;
  this[1] = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::default_instance_;
  this[2] = v1;
  this[3] = v1;
  this[4] = v1;
  return this;
}

void *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::InitAsDefaultInstance(void *this)
{
  uint64_t v1 = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::default_instance_;
  this[1] = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::default_instance_;
  this[2] = v1;
  this[7] = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections::default_instance_;
  return this;
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *this)
{
  uint64_t v1 = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto_once_;
  __dmb(0xBu);
  if (v1 != 2)
  {
    v2[0] = MEMORY[0x1E4FBA938] + 16;
    v2[1] = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto_impl;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
}

void sub_18DF29980(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

BOOL CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::LineOfSight_IsValid(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *this)
{
  return this < 3;
}

BOOL CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::Constellation_IsValid(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *this)
{
  return this < 7;
}

BOOL CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSObservableType_IsValid(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *this)
{
  return this < 7;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate::SharedCtor(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate *this)
{
  double result = 0.0;
  *(_OWORD *)((char *)this + 84) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate::RavenUserActivityEstimate(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate *a2)
{
  *(void *)this = &unk_1EDD0FB60;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 84) = 0u;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate::MergeFrom(this, a2);
  return this;
}

void sub_18DF29A74(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate::MergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  int v5 = *((_DWORD *)a2 + 24);
  if (!(_BYTE)v5) {
    goto LABEL_15;
  }
  if (v5)
  {
    unsigned int v6 = *((_DWORD *)a2 + 22);
    if (v6 >= 0xA) {
      __assert_rtn("set_user_activity", "CoreNavigationCLPGnssMsmtAnalysisToolData.pb.h", 3016, "::CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity_UserActivityType_IsValid(value)");
    }
    *((_DWORD *)this + 24) |= 1u;
    *((_DWORD *)this + 22) = v6;
    int v5 = *((_DWORD *)a2 + 24);
  }
  if ((v5 & 2) != 0)
  {
    double result = *((double *)a2 + 1);
    *((_DWORD *)this + 24) |= 2u;
    *((double *)this + 1) = result;
    int v5 = *((_DWORD *)a2 + 24);
    if ((v5 & 4) == 0)
    {
LABEL_9:
      if ((v5 & 8) == 0) {
        goto LABEL_10;
      }
      goto LABEL_26;
    }
  }
  else if ((v5 & 4) == 0)
  {
    goto LABEL_9;
  }
  double result = *((double *)a2 + 2);
  *((_DWORD *)this + 24) |= 4u;
  *((double *)this + 2) = result;
  int v5 = *((_DWORD *)a2 + 24);
  if ((v5 & 8) == 0)
  {
LABEL_10:
    if ((v5 & 0x10) == 0) {
      goto LABEL_11;
    }
    goto LABEL_27;
  }
LABEL_26:
  double result = *((double *)a2 + 3);
  *((_DWORD *)this + 24) |= 8u;
  *((double *)this + 3) = result;
  int v5 = *((_DWORD *)a2 + 24);
  if ((v5 & 0x10) == 0)
  {
LABEL_11:
    if ((v5 & 0x20) == 0) {
      goto LABEL_12;
    }
LABEL_28:
    double result = *((double *)a2 + 5);
    *((_DWORD *)this + 24) |= 0x20u;
    *((double *)this + 5) = result;
    int v5 = *((_DWORD *)a2 + 24);
    if ((v5 & 0x40) == 0)
    {
LABEL_13:
      if ((v5 & 0x80) == 0) {
        goto LABEL_15;
      }
      goto LABEL_14;
    }
    goto LABEL_29;
  }
LABEL_27:
  double result = *((double *)a2 + 4);
  *((_DWORD *)this + 24) |= 0x10u;
  *((double *)this + 4) = result;
  int v5 = *((_DWORD *)a2 + 24);
  if ((v5 & 0x20) != 0) {
    goto LABEL_28;
  }
LABEL_12:
  if ((v5 & 0x40) == 0) {
    goto LABEL_13;
  }
LABEL_29:
  double result = *((double *)a2 + 6);
  *((_DWORD *)this + 24) |= 0x40u;
  *((double *)this + 6) = result;
  int v5 = *((_DWORD *)a2 + 24);
  if ((v5 & 0x80) != 0)
  {
LABEL_14:
    double result = *((double *)a2 + 7);
    *((_DWORD *)this + 24) |= 0x80u;
    *((double *)this + 7) = result;
    int v5 = *((_DWORD *)a2 + 24);
  }
LABEL_15:
  if ((v5 & 0xFF00) == 0) {
    return result;
  }
  if ((v5 & 0x100) != 0)
  {
    double result = *((double *)a2 + 8);
    *((_DWORD *)this + 24) |= 0x100u;
    *((double *)this + 8) = result;
    int v5 = *((_DWORD *)a2 + 24);
    if ((v5 & 0x200) == 0)
    {
LABEL_18:
      if ((v5 & 0x400) == 0) {
        return result;
      }
      goto LABEL_19;
    }
  }
  else if ((v5 & 0x200) == 0)
  {
    goto LABEL_18;
  }
  double result = *((double *)a2 + 9);
  *((_DWORD *)this + 24) |= 0x200u;
  *((double *)this + 9) = result;
  if ((*((_DWORD *)a2 + 24) & 0x400) != 0)
  {
LABEL_19:
    double result = *((double *)a2 + 10);
    *((_DWORD *)this + 24) |= 0x400u;
    *((double *)this + 10) = result;
  }
  return result;
}

void sub_18DF29C8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate::~RavenUserActivityEstimate(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate *this)
{
  *(void *)this = &unk_1EDD0FB60;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate::~RavenUserActivityEstimate(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate::default_instance(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate *this)
{
  return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 92) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate::New(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 96);
  if ((_BYTE)v1)
  {
    *(_DWORD *)(this + 88) = 0;
    *(_OWORD *)(this + 8) = 0u;
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 40) = 0u;
    *(void *)(this + 56) = 0;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(void *)(this + 64) = 0;
    *(void *)(this + 72) = 0;
    *(void *)(this + 80) = 0;
  }
  *(_DWORD *)(this + 96) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (2)
  {
    uint64_t v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_31;
        }
        v20[0] = 0;
        uint64_t v7 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v7 >= *((void *)a2 + 2) || *v7 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v20);
          if (!result) {
            return result;
          }
          unsigned int v8 = v20[0];
        }
        else
        {
          unsigned int v8 = *v7;
          *((void *)a2 + 1) = v7 + 1;
        }
        if (v8 <= 9)
        {
          *((_DWORD *)this + 24) |= 1u;
          *((_DWORD *)this + 22) = v8;
        }
        int v10 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v10 < *((void *)a2 + 2) && *v10 == 17)
        {
          *((void *)a2 + 1) = v10 + 1;
          goto LABEL_41;
        }
        continue;
      case 2u:
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_31;
        }
LABEL_41:
        *(void *)int v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v20) & 1) == 0)return 0; {
        *((void *)this + 1) = *(void *)v20;
        }
        *((_DWORD *)this + 24) |= 2u;
        char v11 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v11 >= *((void *)a2 + 2) || *v11 != 25) {
          continue;
        }
        *((void *)a2 + 1) = v11 + 1;
LABEL_45:
        *(void *)int v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v20) & 1) == 0)return 0; {
        *((void *)this + 2) = *(void *)v20;
        }
        *((_DWORD *)this + 24) |= 4u;
        uint64_t v12 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v12 >= *((void *)a2 + 2) || *v12 != 33) {
          continue;
        }
        *((void *)a2 + 1) = v12 + 1;
LABEL_49:
        *(void *)int v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v20) & 1) == 0)return 0; {
        *((void *)this + 3) = *(void *)v20;
        }
        *((_DWORD *)this + 24) |= 8u;
        unint64_t v13 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v13 >= *((void *)a2 + 2) || *v13 != 41) {
          continue;
        }
        *((void *)a2 + 1) = v13 + 1;
LABEL_53:
        *(void *)int v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v20) & 1) == 0)return 0; {
        *((void *)this + 4) = *(void *)v20;
        }
        *((_DWORD *)this + 24) |= 0x10u;
        int v14 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v14 >= *((void *)a2 + 2) || *v14 != 49) {
          continue;
        }
        *((void *)a2 + 1) = v14 + 1;
LABEL_57:
        *(void *)int v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v20) & 1) == 0)return 0; {
        *((void *)this + 5) = *(void *)v20;
        }
        *((_DWORD *)this + 24) |= 0x20u;
        uint64_t v15 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v15 >= *((void *)a2 + 2) || *v15 != 57) {
          continue;
        }
        *((void *)a2 + 1) = v15 + 1;
LABEL_61:
        *(void *)int v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v20) & 1) == 0)return 0; {
        *((void *)this + 6) = *(void *)v20;
        }
        *((_DWORD *)this + 24) |= 0x40u;
        int v16 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v16 >= *((void *)a2 + 2) || *v16 != 65) {
          continue;
        }
        *((void *)a2 + 1) = v16 + 1;
LABEL_65:
        *(void *)int v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v20) & 1) == 0)return 0; {
        *((void *)this + 7) = *(void *)v20;
        }
        *((_DWORD *)this + 24) |= 0x80u;
        char v17 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v17 >= *((void *)a2 + 2) || *v17 != 73) {
          continue;
        }
        *((void *)a2 + 1) = v17 + 1;
LABEL_69:
        *(void *)int v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v20) & 1) == 0)return 0; {
        *((void *)this + 8) = *(void *)v20;
        }
        *((_DWORD *)this + 24) |= 0x100u;
        uint64_t v18 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v18 >= *((void *)a2 + 2) || *v18 != 81) {
          continue;
        }
        *((void *)a2 + 1) = v18 + 1;
LABEL_73:
        *(void *)int v20 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v20) & 1) == 0)return 0; {
        *((void *)this + 9) = *(void *)v20;
        }
        *((_DWORD *)this + 24) |= 0x200u;
        unint64_t v19 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v19 >= *((void *)a2 + 2) || *v19 != 89) {
          continue;
        }
        *((void *)a2 + 1) = v19 + 1;
LABEL_77:
        *(void *)int v20 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v20))
        {
          *((void *)this + 10) = *(void *)v20;
          *((_DWORD *)this + 24) |= 0x400u;
          if (*((void *)a2 + 1) == *((void *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_45;
        }
        goto LABEL_31;
      case 4u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_49;
        }
        goto LABEL_31;
      case 5u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_53;
        }
        goto LABEL_31;
      case 6u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_57;
        }
        goto LABEL_31;
      case 7u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_61;
        }
        goto LABEL_31;
      case 8u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_65;
        }
        goto LABEL_31;
      case 9u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_69;
        }
        goto LABEL_31;
      case 0xAu:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_73;
        }
        goto LABEL_31;
      case 0xBu:
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_31;
        }
        goto LABEL_77;
      default:
        int v6 = TagFallback & 7;
LABEL_31:
        if (v6 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 96);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 88), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 96);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_15;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 8), a3);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_17;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_18;
  }
LABEL_17:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_19;
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(double *)(v5 + 40), a3);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_20;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (uint64_t)a2, *(double *)(v5 + 48), a3);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (uint64_t)a2, *(double *)(v5 + 56), a3);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
LABEL_22:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (uint64_t)a2, *(double *)(v5 + 72), a3);
    if ((*(_DWORD *)(v5 + 96) & 0x400) == 0) {
      return this;
    }
    goto LABEL_23;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (uint64_t)a2, *(double *)(v5 + 64), a3);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x200) != 0) {
    goto LABEL_22;
  }
LABEL_11:
  if ((v6 & 0x400) == 0) {
    return this;
  }
LABEL_23:
  double v7 = *(double *)(v5 + 80);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, (uint64_t)a2, v7, a3);
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate::ByteSize(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate *this)
{
  int v2 = *((_DWORD *)this + 24);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      uint64_t v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 22);
      if ((v4 & 0x80000000) != 0)
      {
        unsigned int v3 = 11;
      }
      else if (v4 >= 0x80)
      {
        unsigned int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
        int v2 = *((_DWORD *)this + 24);
      }
      else
      {
        unsigned int v3 = 2;
      }
    }
    else
    {
      unsigned int v3 = 0;
    }
    if ((v2 & 2) != 0) {
      v3 += 9;
    }
    if ((v2 & 4) != 0) {
      v3 += 9;
    }
    if ((v2 & 8) != 0) {
      v3 += 9;
    }
    if ((v2 & 0x10) != 0) {
      v3 += 9;
    }
    if ((v2 & 0x20) != 0) {
      v3 += 9;
    }
    if ((v2 & 0x40) != 0) {
      v3 += 9;
    }
    if ((v2 & 0x80) != 0) {
      v3 += 9;
    }
  }
  else
  {
    unsigned int v3 = 0;
  }
  unsigned int v5 = v3 + 9;
  if ((v2 & 0x100) == 0) {
    unsigned int v5 = v3;
  }
  if ((v2 & 0x200) != 0) {
    v5 += 9;
  }
  if ((v2 & 0x400) != 0) {
    v5 += 9;
  }
  if ((v2 & 0xFF00) != 0) {
    uint64_t result = v5;
  }
  else {
    uint64_t result = v3;
  }
  *((_DWORD *)this + 23) = result;
  return result;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate::CopyFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate::IsInitialized(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate::Swap(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate *this, CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate *a2)
{
  if (a2 != this)
  {
    int v2 = *((_DWORD *)this + 22);
    *((_DWORD *)this + 22) = *((_DWORD *)a2 + 22);
    *((_DWORD *)a2 + 22) = v2;
    uint64_t v3 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v3;
    uint64_t v4 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v4;
    uint64_t v5 = *((void *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v5;
    uint64_t v6 = *((void *)this + 4);
    *((void *)this + 4) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v6;
    uint64_t v7 = *((void *)this + 5);
    *((void *)this + 5) = *((void *)a2 + 5);
    *((void *)a2 + 5) = v7;
    uint64_t v8 = *((void *)this + 6);
    *((void *)this + 6) = *((void *)a2 + 6);
    *((void *)a2 + 6) = v8;
    uint64_t v9 = *((void *)this + 7);
    *((void *)this + 7) = *((void *)a2 + 7);
    *((void *)a2 + 7) = v9;
    uint64_t v10 = *((void *)this + 8);
    *((void *)this + 8) = *((void *)a2 + 8);
    *((void *)a2 + 8) = v10;
    uint64_t v11 = *((void *)this + 9);
    *((void *)this + 9) = *((void *)a2 + 9);
    *((void *)a2 + 9) = v11;
    double result = *((double *)this + 10);
    *((void *)this + 10) = *((void *)a2 + 10);
    *((double *)a2 + 10) = result;
    int v13 = *((_DWORD *)this + 24);
    *((_DWORD *)this + 24) = *((_DWORD *)a2 + 24);
    *((_DWORD *)a2 + 24) = v13;
    int v14 = *((_DWORD *)this + 23);
    *((_DWORD *)this + 23) = *((_DWORD *)a2 + 23);
    *((_DWORD *)a2 + 23) = v14;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.InternalToolData.GnssMsmtAnalysisToolData.RavenUserActivityEstimate");
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::SharedCtor(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *this)
{
  *((void *)this + 29) = 0;
  *((_DWORD *)this + 60) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((void *)this + 5) = 0;
  *((void *)this + 10) = 0;
  *((void *)this + 11) = 0;
  *((void *)this + 9) = 0;
  *((void *)this + 15) = 0;
  *((void *)this + 16) = 0;
  return result;
}

CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::GnssMsmtAnalysisToolDataCapture(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *a2)
{
  *(void *)this = &unk_1EDD0FBD8;
  *((void *)this + 21) = 0;
  *((_DWORD *)this + 44) = 0;
  *((void *)this + 20) = 0;
  *((void *)this + 24) = 0;
  *((_DWORD *)this + 50) = 0;
  *((void *)this + 23) = 0;
  *((void *)this + 27) = 0;
  *((_DWORD *)this + 56) = 0;
  *((void *)this + 26) = 0;
  *((void *)this + 29) = 0;
  *((_DWORD *)this + 60) = 0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 52) = 0u;
  *(_OWORD *)((char *)this + 100) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 136) = 0u;
  *((_DWORD *)this + 38) = 0;
  *(_OWORD *)((char *)this + 120) = 0u;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::MergeFrom(this, a2);
  return this;
}

void sub_18DF2A8B8(_Unwind_Exception *a1)
{
  uint64_t v8 = v5;
  sub_18DF0C324(v8);
  sub_18DF0C324(v6);
  sub_18DF0C324(v4);
  sub_18DF0C324(v7);
  sub_18DF0C324(v3);
  sub_18DF0C324(v2);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::MergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v57);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *)((char *)this + 48));
  if (*((int *)a2 + 14) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData **)(*((void *)a2 + 6) + 8 * v4);
      int v6 = *((_DWORD *)this + 15);
      uint64_t v7 = *((int *)this + 14);
      if ((int)v7 >= v6)
      {
        if (v6 == *((_DWORD *)this + 16))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *)((char *)this + 48));
          int v6 = *((_DWORD *)this + 15);
        }
        *((_DWORD *)this + 15) = v6 + 1;
        operator new();
      }
      uint64_t v8 = *((void *)this + 6);
      *((_DWORD *)this + 14) = v7 + 1;
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::MergeFrom(*(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData **)(v8 + 8 * v7), v5);
      ++v4;
    }
    while (v4 < *((int *)a2 + 14));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *)((char *)this + 96));
  if (*((int *)a2 + 26) >= 1)
  {
    uint64_t v9 = 0;
    do
    {
      uint64_t v10 = *(const CoreNavigation::CLP::LogEntry::PrivateData::ReceiverBandCorrections **)(*((void *)a2 + 12) + 8 * v9);
      int v11 = *((_DWORD *)this + 27);
      uint64_t v12 = *((int *)this + 26);
      if ((int)v12 >= v11)
      {
        if (v11 == *((_DWORD *)this + 28))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *)((char *)this + 96));
          int v11 = *((_DWORD *)this + 27);
        }
        *((_DWORD *)this + 27) = v11 + 1;
        operator new();
      }
      uint64_t v13 = *((void *)this + 12);
      *((_DWORD *)this + 26) = v12 + 1;
      CoreNavigation::CLP::LogEntry::PrivateData::ReceiverBandCorrections::MergeFrom(*(CoreNavigation::CLP::LogEntry::PrivateData::ReceiverBandCorrections **)(v13 + 8 * v12), v10);
      ++v9;
    }
    while (v9 < *((int *)a2 + 26));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *)((char *)this + 136));
  if (*((int *)a2 + 36) >= 1)
  {
    uint64_t v14 = 0;
    do
    {
      uint64_t v15 = *(const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount **)(*((void *)a2 + 17) + 8 * v14);
      int v16 = *((_DWORD *)this + 37);
      uint64_t v17 = *((int *)this + 36);
      if ((int)v17 >= v16)
      {
        if (v16 == *((_DWORD *)this + 38))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *)((char *)this + 136));
          int v16 = *((_DWORD *)this + 37);
        }
        *((_DWORD *)this + 37) = v16 + 1;
        operator new();
      }
      uint64_t v18 = *((void *)this + 17);
      *((_DWORD *)this + 36) = v17 + 1;
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::MergeFrom(*(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount **)(v18 + 8 * v17), v15);
      ++v14;
    }
    while (v14 < *((int *)a2 + 36));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *)((char *)this + 160));
  if (*((int *)a2 + 42) >= 1)
  {
    uint64_t v19 = 0;
    do
    {
      int v20 = *(const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount **)(*((void *)a2 + 20) + 8 * v19);
      int v21 = *((_DWORD *)this + 43);
      uint64_t v22 = *((int *)this + 42);
      if ((int)v22 >= v21)
      {
        if (v21 == *((_DWORD *)this + 44))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *)((char *)this + 160));
          int v21 = *((_DWORD *)this + 43);
        }
        *((_DWORD *)this + 43) = v21 + 1;
        operator new();
      }
      uint64_t v23 = *((void *)this + 20);
      *((_DWORD *)this + 42) = v22 + 1;
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::MergeFrom(*(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount **)(v23 + 8 * v22), v20);
      ++v19;
    }
    while (v19 < *((int *)a2 + 42));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *)((char *)this + 184));
  if (*((int *)a2 + 48) >= 1)
  {
    uint64_t v24 = 0;
    do
    {
      unint64_t v25 = *(const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount **)(*((void *)a2 + 23) + 8 * v24);
      int v26 = *((_DWORD *)this + 49);
      uint64_t v27 = *((int *)this + 48);
      if ((int)v27 >= v26)
      {
        if (v26 == *((_DWORD *)this + 50))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *)((char *)this + 184));
          int v26 = *((_DWORD *)this + 49);
        }
        *((_DWORD *)this + 49) = v26 + 1;
        operator new();
      }
      uint64_t v28 = *((void *)this + 23);
      *((_DWORD *)this + 48) = v27 + 1;
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::MergeFrom(*(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount **)(v28 + 8 * v27), v25);
      ++v24;
    }
    while (v24 < *((int *)a2 + 48));
  }
  unsigned int v29 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *)((char *)this + 208));
  if (*((int *)a2 + 54) >= 1)
  {
    uint64_t v30 = 0;
    do
    {
      unsigned int v31 = *(const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility **)(*((void *)a2 + 26) + 8 * v30);
      int v32 = *((_DWORD *)this + 55);
      uint64_t v33 = *((int *)this + 54);
      if ((int)v33 >= v32)
      {
        if (v32 == *((_DWORD *)this + 56))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *)((char *)this + 208));
          int v32 = *((_DWORD *)this + 55);
        }
        *((_DWORD *)this + 55) = v32 + 1;
        operator new();
      }
      uint64_t v34 = *((void *)this + 26);
      *((_DWORD *)this + 54) = v33 + 1;
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::MergeFrom(*(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility **)(v34 + 8 * v33), v31);
      ++v30;
    }
    while (v30 < *((int *)a2 + 54));
  }
  int v35 = *((_DWORD *)a2 + 60);
  if (!(_BYTE)v35) {
    goto LABEL_95;
  }
  if (v35)
  {
    *((_DWORD *)this + 60) |= 1u;
    uint64_t v36 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps *)*((void *)this + 1);
    if (!v36) {
      operator new();
    }
    unsigned int v37 = (const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps *)*((void *)a2 + 1);
    if (!v37)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(v29);
      unsigned int v37 = *(const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_ + 8);
    }
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::MergeFrom(v36, v37);
    int v35 = *((_DWORD *)a2 + 60);
    if ((v35 & 2) == 0)
    {
LABEL_54:
      if ((v35 & 4) == 0) {
        goto LABEL_55;
      }
      goto LABEL_70;
    }
  }
  else if ((v35 & 2) == 0)
  {
    goto LABEL_54;
  }
  *((_DWORD *)this + 60) |= 2u;
  int v38 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets *)*((void *)this + 2);
  if (!v38) {
    operator new();
  }
  int v39 = (const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets *)*((void *)a2 + 2);
  if (!v39)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(v29);
    int v39 = *(const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_ + 16);
  }
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets::MergeFrom(v38, v39);
  int v35 = *((_DWORD *)a2 + 60);
  if ((v35 & 4) == 0)
  {
LABEL_55:
    if ((v35 & 8) == 0) {
      goto LABEL_56;
    }
    goto LABEL_75;
  }
LABEL_70:
  *((_DWORD *)this + 60) |= 4u;
  int v40 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *)*((void *)this + 3);
  if (!v40) {
    operator new();
  }
  int v41 = (const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *)*((void *)a2 + 3);
  if (!v41)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(v29);
    int v41 = *(const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_
                                                                                    + 24);
  }
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::MergeFrom(v40, v41);
  int v35 = *((_DWORD *)a2 + 60);
  if ((v35 & 8) == 0)
  {
LABEL_56:
    if ((v35 & 0x10) == 0) {
      goto LABEL_57;
    }
LABEL_80:
    *((_DWORD *)this + 60) |= 0x10u;
    int v44 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError *)*((void *)this + 5);
    if (!v44) {
      operator new();
    }
    int v45 = (const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError *)*((void *)a2 + 5);
    if (!v45)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(v29);
      int v45 = *(const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_
                                                                                           + 40);
    }
    CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::MergeFrom(v44, v45);
    int v35 = *((_DWORD *)a2 + 60);
    if ((v35 & 0x40) == 0)
    {
LABEL_58:
      if ((v35 & 0x80) == 0) {
        goto LABEL_95;
      }
      goto LABEL_90;
    }
    goto LABEL_85;
  }
LABEL_75:
  *((_DWORD *)this + 60) |= 8u;
  int v42 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *)*((void *)this + 4);
  if (!v42) {
    operator new();
  }
  int v43 = (const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *)*((void *)a2 + 4);
  if (!v43)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(v29);
    int v43 = *(const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_
                                                                                    + 32);
  }
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::MergeFrom(v42, v43);
  int v35 = *((_DWORD *)a2 + 60);
  if ((v35 & 0x10) != 0) {
    goto LABEL_80;
  }
LABEL_57:
  if ((v35 & 0x40) == 0) {
    goto LABEL_58;
  }
LABEL_85:
  *((_DWORD *)this + 60) |= 0x40u;
  int v46 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *)*((void *)this + 9);
  if (!v46) {
    operator new();
  }
  int v47 = (const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *)*((void *)a2 + 9);
  if (!v47)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(v29);
    int v47 = *(const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_ + 72);
  }
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::MergeFrom(v46, v47);
  int v35 = *((_DWORD *)a2 + 60);
  if ((v35 & 0x80) != 0)
  {
LABEL_90:
    *((_DWORD *)this + 60) |= 0x80u;
    int v48 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *)*((void *)this + 10);
    if (!v48) {
      operator new();
    }
    uint64_t v49 = (const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *)*((void *)a2 + 10);
    if (!v49)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(v29);
      uint64_t v49 = *(const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_ + 80);
    }
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::MergeFrom(v48, v49);
    int v35 = *((_DWORD *)a2 + 60);
  }
LABEL_95:
  if ((v35 & 0xFF00) == 0) {
    return;
  }
  if ((v35 & 0x100) != 0)
  {
    *((_DWORD *)this + 60) |= 0x100u;
    int v50 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *)*((void *)this + 11);
    if (!v50) {
      operator new();
    }
    int v51 = (const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *)*((void *)a2 + 11);
    if (!v51)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(v29);
      int v51 = *(const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_ + 88);
    }
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::MergeFrom(v50, v51);
    int v35 = *((_DWORD *)a2 + 60);
    if ((v35 & 0x400) == 0)
    {
LABEL_98:
      if ((v35 & 0x800) == 0) {
        goto LABEL_99;
      }
      goto LABEL_111;
    }
  }
  else if ((v35 & 0x400) == 0)
  {
    goto LABEL_98;
  }
  *((_DWORD *)this + 60) |= 0x400u;
  int v52 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent *)*((void *)this + 15);
  if (!v52) {
    operator new();
  }
  int v53 = (const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent *)*((void *)a2 + 15);
  if (!v53)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(v29);
    int v53 = *(const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_ + 120);
  }
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::MergeFrom(v52, v53);
  int v35 = *((_DWORD *)a2 + 60);
  if ((v35 & 0x800) == 0)
  {
LABEL_99:
    if ((v35 & 0x1000) == 0) {
      return;
    }
    goto LABEL_116;
  }
LABEL_111:
  *((_DWORD *)this + 60) |= 0x800u;
  int v54 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate *)*((void *)this + 16);
  if (!v54) {
    operator new();
  }
  int v55 = (const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate *)*((void *)a2 + 16);
  if (!v55)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(v29);
    int v55 = *(const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_ + 128);
  }
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate::MergeFrom(v54, v55);
  if ((*((_DWORD *)a2 + 60) & 0x1000) != 0)
  {
LABEL_116:
    unsigned int v56 = *((_DWORD *)a2 + 58);
    if (v56 >= 8) {
      __assert_rtn("set_raven_signal_environment_estimate", "CoreNavigationCLPGnssMsmtAnalysisToolData.pb.h", 3733, "::CoreNavigation::CLP::LogEntry::Raven::EstimatorActivity_SignalEnvironmentType_IsValid(value)");
    }
    *((_DWORD *)this + 60) |= 0x1000u;
    *((_DWORD *)this + 58) = v56;
  }
}

void sub_18DF2B50C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::~GnssMsmtAnalysisToolDataCapture(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *this)
{
  *(void *)this = &unk_1EDD0FBD8;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::SharedDtor(this);
  sub_18DF0C324((uint64_t *)this + 26);
  sub_18DF0C324((uint64_t *)this + 23);
  sub_18DF0C324((uint64_t *)this + 20);
  sub_18DF0C324((uint64_t *)this + 17);
  sub_18DF0C324((uint64_t *)this + 12);
  sub_18DF0C324((uint64_t *)this + 6);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::~GnssMsmtAnalysisToolDataCapture(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::SharedDtor(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *this)
{
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 2);
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = *((void *)this + 3);
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = *((void *)this + 4);
    if (v5) {
      (*(void (**)(uint64_t))(*(void *)v5 + 8))(v5);
    }
    uint64_t v6 = *((void *)this + 5);
    if (v6) {
      (*(void (**)(uint64_t))(*(void *)v6 + 8))(v6);
    }
    uint64_t v7 = *((void *)this + 9);
    if (v7) {
      (*(void (**)(uint64_t))(*(void *)v7 + 8))(v7);
    }
    uint64_t v8 = *((void *)this + 10);
    if (v8) {
      (*(void (**)(uint64_t))(*(void *)v8 + 8))(v8);
    }
    uint64_t v9 = *((void *)this + 11);
    if (v9) {
      (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
    }
    uint64_t v10 = *((void *)this + 15);
    if (v10) {
      (*(void (**)(uint64_t))(*(void *)v10 + 8))(v10);
    }
    uint64_t v11 = *((void *)this + 16);
    if (v11)
    {
      uint64_t v12 = *(void (**)(void))(*(void *)v11 + 8);
      v12();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *this)
{
  return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 236) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::New(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::Clear(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *this)
{
  int v2 = *((_DWORD *)this + 60);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      uint64_t v3 = *((void *)this + 1);
      if (v3)
      {
        CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::Clear(v3);
        int v2 = *((_DWORD *)this + 60);
      }
    }
    if ((v2 & 2) != 0)
    {
      uint64_t v4 = *((void *)this + 2);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 48))
        {
          *(_DWORD *)(v4 + 40) = 0;
          *(_OWORD *)(v4 + 24) = 0u;
          *(_OWORD *)(v4 + 8) = 0u;
        }
        *(_DWORD *)(v4 + 48) = 0;
        int v2 = *((_DWORD *)this + 60);
      }
    }
    if ((v2 & 4) != 0)
    {
      uint64_t v5 = *((void *)this + 3);
      if (v5)
      {
        CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::Clear(v5);
        int v2 = *((_DWORD *)this + 60);
      }
    }
    if ((v2 & 8) != 0)
    {
      uint64_t v6 = *((void *)this + 4);
      if (v6)
      {
        CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::Clear(v6);
        int v2 = *((_DWORD *)this + 60);
      }
    }
    if ((v2 & 0x10) != 0)
    {
      uint64_t v7 = *((void *)this + 5);
      if (v7)
      {
        CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::Clear(v7);
        int v2 = *((_DWORD *)this + 60);
      }
    }
    if ((v2 & 0x40) != 0)
    {
      uint64_t v8 = *((void *)this + 9);
      if (v8)
      {
        if (*(unsigned char *)(v8 + 40))
        {
          *(void *)(v8 + 8) = 0;
          *(void *)(v8 + 16) = 0;
          *(_DWORD *)(v8 + 32) = 0;
          *(void *)(v8 + 24) = 0;
        }
        *(_DWORD *)(v8 + 40) = 0;
        int v2 = *((_DWORD *)this + 60);
      }
    }
    if ((v2 & 0x80) != 0)
    {
      uint64_t v9 = *((void *)this + 10);
      if (v9)
      {
        if (*(unsigned char *)(v9 + 40))
        {
          *(void *)(v9 + 8) = 0;
          *(void *)(v9 + 16) = 0;
          *(_DWORD *)(v9 + 32) = 0;
          *(void *)(v9 + 24) = 0;
        }
        *(_DWORD *)(v9 + 40) = 0;
        int v2 = *((_DWORD *)this + 60);
      }
    }
  }
  if ((v2 & 0xFF00) != 0)
  {
    if ((v2 & 0x100) != 0)
    {
      uint64_t v10 = *((void *)this + 11);
      if (v10)
      {
        if (*(unsigned char *)(v10 + 40))
        {
          *(void *)(v10 + 8) = 0;
          *(void *)(v10 + 16) = 0;
          *(_DWORD *)(v10 + 32) = 0;
          *(void *)(v10 + 24) = 0;
        }
        *(_DWORD *)(v10 + 40) = 0;
        int v2 = *((_DWORD *)this + 60);
      }
    }
    if ((v2 & 0x400) != 0)
    {
      uint64_t v11 = *((void *)this + 15);
      if (v11)
      {
        CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::Clear(v11);
        int v2 = *((_DWORD *)this + 60);
      }
    }
    if ((v2 & 0x800) != 0)
    {
      uint64_t v12 = *((void *)this + 16);
      if (v12)
      {
        int v13 = *(_DWORD *)(v12 + 96);
        if ((_BYTE)v13)
        {
          *(_DWORD *)(v12 + 88) = 0;
          *(_OWORD *)(v12 + 8) = 0u;
          *(_OWORD *)(v12 + 24) = 0u;
          *(_OWORD *)(v12 + 40) = 0u;
          *(void *)(v12 + 56) = 0;
        }
        if ((v13 & 0xFF00) != 0)
        {
          *(void *)(v12 + 64) = 0;
          *(void *)(v12 + 72) = 0;
          *(void *)(v12 + 80) = 0;
        }
        *(_DWORD *)(v12 + 96) = 0;
      }
    }
    *((_DWORD *)this + 58) = 0;
  }
  if (*((int *)this + 14) >= 1)
  {
    uint64_t v14 = 0;
    do
    {
      uint64_t v15 = *(void *)(*((void *)this + 6) + 8 * v14);
      (*(void (**)(uint64_t))(*(void *)v15 + 32))(v15);
      ++v14;
    }
    while (v14 < *((int *)this + 14));
  }
  *((_DWORD *)this + 14) = 0;
  sub_18DF0C208((uint64_t)this + 96);
  sub_18DF0C208((uint64_t)this + 136);
  sub_18DF0C208((uint64_t)this + 160);
  uint64_t result = sub_18DF0C208((uint64_t)this + 184);
  if (*((int *)this + 54) >= 1)
  {
    uint64_t v17 = 0;
    do
    {
      uint64_t v18 = *(void *)(*((void *)this + 26) + 8 * v17);
      uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v18 + 32))(v18);
      ++v17;
    }
    while (v17 < *((int *)this + 54));
  }
  *((_DWORD *)this + 54) = 0;
  *((_DWORD *)this + 60) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::Clear(uint64_t this)
{
  LOBYTE(v1) = *(unsigned char *)(this + 60);
  if ((_BYTE)v1)
  {
    *(void *)(this + 8) = 0;
    if ((v1 & 2) != 0)
    {
      uint64_t v2 = *(void *)(this + 16);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 24))
        {
          *(_DWORD *)(v2 + 16) = 0;
          *(void *)(v2 + 8) = 0;
        }
        *(_DWORD *)(v2 + 24) = 0;
        int v1 = *(_DWORD *)(this + 60);
      }
    }
    if ((v1 & 4) != 0)
    {
      uint64_t v3 = *(void *)(this + 24);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 28))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
        }
        *(_DWORD *)(v3 + 28) = 0;
        int v1 = *(_DWORD *)(this + 60);
      }
    }
    if ((v1 & 8) != 0)
    {
      uint64_t v4 = *(void *)(this + 32);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 28))
        {
          *(void *)(v4 + 8) = 0;
          *(void *)(v4 + 16) = 0;
        }
        *(_DWORD *)(v4 + 28) = 0;
        int v1 = *(_DWORD *)(this + 60);
      }
    }
    if ((v1 & 0x10) != 0)
    {
      uint64_t v5 = *(void *)(this + 40);
      if (v5)
      {
        if (*(unsigned char *)(v5 + 28))
        {
          *(void *)(v5 + 8) = 0;
          *(void *)(v5 + 16) = 0;
        }
        *(_DWORD *)(v5 + 28) = 0;
      }
    }
    *(void *)(this + 48) = 0;
  }
  *(_DWORD *)(this + 60) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 48))
  {
    *(_DWORD *)(this + 40) = 0;
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 8) = 0u;
  }
  *(_DWORD *)(this + 48) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 40))
  {
    *(void *)(this + 8) = 0;
    *(void *)(this + 16) = 0;
    *(_DWORD *)(this + 32) = 0;
    *(void *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 40) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::Clear(uint64_t this)
{
  uint64_t v1 = this;
  LOBYTE(v2) = *(unsigned char *)(this + 88);
  if ((_BYTE)v2)
  {
    if (*(unsigned char *)(this + 88))
    {
      uint64_t v3 = *(void *)(this + 8);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 28))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
        }
        *(_DWORD *)(v3 + 28) = 0;
        int v2 = *(_DWORD *)(this + 88);
      }
    }
    *(unsigned char *)(this + 80) = 0;
    *(_OWORD *)(this + 16) = 0u;
    *(_OWORD *)(this + 32) = 0u;
    if ((v2 & 0x40) != 0)
    {
      uint64_t v4 = *(void *)(this + 48);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 44))
        {
          *(_OWORD *)(v4 + 24) = 0uLL;
          *(_OWORD *)(v4 + 8) = 0uLL;
        }
        *(_DWORD *)(v4 + 44) = 0;
      }
    }
  }
  if (*(int *)(this + 64) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v6 = *(void *)(*(void *)(v1 + 56) + 8 * v5);
      this = (*(uint64_t (**)(uint64_t))(*(void *)v6 + 32))(v6);
      ++v5;
    }
    while (v5 < *(int *)(v1 + 64));
  }
  *(_DWORD *)(v1 + 64) = 0;
  *(_DWORD *)(v1 + 88) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *)((char *)this + 48);
  uint64_t v5 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *)((char *)this + 96);
  uint64_t v6 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *)((char *)this + 136);
  uint64_t v7 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *)((char *)this + 160);
  uint64_t v8 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *)((char *)this + 184);
  uint64_t v9 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *)((char *)this + 208);
  while (1)
  {
LABEL_2:
    uint64_t v10 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v10 < *((void *)a2 + 2) && (*v10 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v10;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v10 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_7;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_46;
        }
        *((_DWORD *)this + 60) |= 1u;
        int v13 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps *)*((void *)this + 1);
        if (!v13) {
          operator new();
        }
        unsigned int v149 = 0;
        uint64_t v14 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v14 >= *((void *)a2 + 2) || *v14 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v149))return 0; {
        }
          }
        else
        {
          unsigned int v149 = *v14;
          *((void *)a2 + 1) = v14 + 1;
        }
        int v17 = *((_DWORD *)a2 + 14);
        int v18 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v17 + 1;
        if (v17 >= v18) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::MergePartialFromCodedStream(v13, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v19 = *((_DWORD *)a2 + 14);
        BOOL v20 = __OFSUB__(v19, 1);
        int v21 = v19 - 1;
        if (v21 < 0 == v20) {
          *((_DWORD *)a2 + 14) = v21;
        }
        uint64_t v22 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v22 >= *((void *)a2 + 2) || *v22 != 18) {
          continue;
        }
        *((void *)a2 + 1) = v22 + 1;
        goto LABEL_58;
      case 2u:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_46;
        }
LABEL_58:
        *((_DWORD *)this + 60) |= 2u;
        uint64_t v23 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets *)*((void *)this + 2);
        if (!v23) {
          operator new();
        }
        unsigned int v149 = 0;
        uint64_t v24 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v24 >= *((void *)a2 + 2) || *v24 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v149))return 0; {
        }
          }
        else
        {
          unsigned int v149 = *v24;
          *((void *)a2 + 1) = v24 + 1;
        }
        int v25 = *((_DWORD *)a2 + 14);
        int v26 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v25 + 1;
        if (v25 >= v26) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets::MergePartialFromCodedStream(v23, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v27 = *((_DWORD *)a2 + 14);
        BOOL v20 = __OFSUB__(v27, 1);
        int v28 = v27 - 1;
        if (v28 < 0 == v20) {
          *((_DWORD *)a2 + 14) = v28;
        }
        unsigned int v29 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v29 >= *((void *)a2 + 2) || *v29 != 26) {
          continue;
        }
        *((void *)a2 + 1) = v29 + 1;
LABEL_72:
        *((_DWORD *)this + 60) |= 4u;
        uint64_t v30 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *)*((void *)this + 3);
        if (!v30) {
          operator new();
        }
        unsigned int v149 = 0;
        unsigned int v31 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v31 >= *((void *)a2 + 2) || *v31 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v149))return 0; {
        }
          }
        else
        {
          unsigned int v149 = *v31;
          *((void *)a2 + 1) = v31 + 1;
        }
        int v32 = *((_DWORD *)a2 + 14);
        int v33 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v32 + 1;
        if (v32 >= v33) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::MergePartialFromCodedStream(v30, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v34 = *((_DWORD *)a2 + 14);
        BOOL v20 = __OFSUB__(v34, 1);
        int v35 = v34 - 1;
        if (v35 < 0 == v20) {
          *((_DWORD *)a2 + 14) = v35;
        }
        uint64_t v36 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v36 >= *((void *)a2 + 2) || *v36 != 34) {
          continue;
        }
        *((void *)a2 + 1) = v36 + 1;
LABEL_86:
        *((_DWORD *)this + 60) |= 8u;
        unsigned int v37 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *)*((void *)this + 4);
        if (!v37) {
          operator new();
        }
        unsigned int v149 = 0;
        int v38 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v38 >= *((void *)a2 + 2) || *v38 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v149))return 0; {
        }
          }
        else
        {
          unsigned int v149 = *v38;
          *((void *)a2 + 1) = v38 + 1;
        }
        int v39 = *((_DWORD *)a2 + 14);
        int v40 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v39 + 1;
        if (v39 >= v40) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::MergePartialFromCodedStream(v37, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v41 = *((_DWORD *)a2 + 14);
        BOOL v20 = __OFSUB__(v41, 1);
        int v42 = v41 - 1;
        if (v42 < 0 == v20) {
          *((_DWORD *)a2 + 14) = v42;
        }
        int v43 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v43 >= *((void *)a2 + 2) || *v43 != 42) {
          continue;
        }
        *((void *)a2 + 1) = v43 + 1;
LABEL_100:
        *((_DWORD *)this + 60) |= 0x10u;
        int v44 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError *)*((void *)this + 5);
        if (!v44) {
          operator new();
        }
        unsigned int v149 = 0;
        int v45 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v45 >= *((void *)a2 + 2) || *v45 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v149))return 0; {
        }
          }
        else
        {
          unsigned int v149 = *v45;
          *((void *)a2 + 1) = v45 + 1;
        }
        int v46 = *((_DWORD *)a2 + 14);
        int v47 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v46 + 1;
        if (v46 >= v47) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::MergePartialFromCodedStream(v44, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v48 = *((_DWORD *)a2 + 14);
        BOOL v20 = __OFSUB__(v48, 1);
        int v49 = v48 - 1;
        if (v49 < 0 == v20) {
          *((_DWORD *)a2 + 14) = v49;
        }
        int v50 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v50 >= *((void *)a2 + 2) || *v50 != 50) {
          continue;
        }
        do
        {
          *((void *)a2 + 1) = v50 + 1;
LABEL_114:
          int v51 = *((_DWORD *)this + 15);
          uint64_t v52 = *((int *)this + 14);
          if ((int)v52 >= v51)
          {
            if (v51 == *((_DWORD *)this + 16))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
              int v51 = *((_DWORD *)this + 15);
            }
            *((_DWORD *)this + 15) = v51 + 1;
            operator new();
          }
          uint64_t v53 = *((void *)this + 6);
          *((_DWORD *)this + 14) = v52 + 1;
          int v54 = *(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData **)(v53 + 8 * v52);
          unsigned int v149 = 0;
          int v55 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v55 >= *((void *)a2 + 2) || *v55 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v149))return 0; {
          }
            }
          else
          {
            unsigned int v149 = *v55;
            *((void *)a2 + 1) = v55 + 1;
          }
          int v56 = *((_DWORD *)a2 + 14);
          int v57 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v56 + 1;
          if (v56 >= v57) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::MergePartialFromCodedStream(v54, a2)|| !*((unsigned char *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          int v58 = *((_DWORD *)a2 + 14);
          BOOL v20 = __OFSUB__(v58, 1);
          int v59 = v58 - 1;
          if (v59 < 0 == v20) {
            *((_DWORD *)a2 + 14) = v59;
          }
          int v50 = (unsigned char *)*((void *)a2 + 1);
          if ((unint64_t)v50 >= *((void *)a2 + 2)) {
            goto LABEL_2;
          }
          int v60 = *v50;
        }
        while (v60 == 50);
        if (v60 != 58) {
          continue;
        }
        *((void *)a2 + 1) = v50 + 1;
LABEL_132:
        *((_DWORD *)this + 60) |= 0x40u;
        int v61 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *)*((void *)this + 9);
        if (!v61) {
          operator new();
        }
        unsigned int v149 = 0;
        int v62 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v62 >= *((void *)a2 + 2) || *v62 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v149))return 0; {
        }
          }
        else
        {
          unsigned int v149 = *v62;
          *((void *)a2 + 1) = v62 + 1;
        }
        int v63 = *((_DWORD *)a2 + 14);
        int v64 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v63 + 1;
        if (v63 >= v64) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::MergePartialFromCodedStream(v61, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v65 = *((_DWORD *)a2 + 14);
        BOOL v20 = __OFSUB__(v65, 1);
        int v66 = v65 - 1;
        if (v66 < 0 == v20) {
          *((_DWORD *)a2 + 14) = v66;
        }
        int v67 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v67 >= *((void *)a2 + 2) || *v67 != 66) {
          continue;
        }
        *((void *)a2 + 1) = v67 + 1;
LABEL_146:
        *((_DWORD *)this + 60) |= 0x80u;
        int v68 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *)*((void *)this + 10);
        if (!v68) {
          operator new();
        }
        unsigned int v149 = 0;
        int v69 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v69 >= *((void *)a2 + 2) || *v69 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v149))return 0; {
        }
          }
        else
        {
          unsigned int v149 = *v69;
          *((void *)a2 + 1) = v69 + 1;
        }
        int v70 = *((_DWORD *)a2 + 14);
        int v71 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v70 + 1;
        if (v70 >= v71) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::MergePartialFromCodedStream(v68, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v72 = *((_DWORD *)a2 + 14);
        BOOL v20 = __OFSUB__(v72, 1);
        int v73 = v72 - 1;
        if (v73 < 0 == v20) {
          *((_DWORD *)a2 + 14) = v73;
        }
        int v74 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v74 >= *((void *)a2 + 2) || *v74 != 74) {
          continue;
        }
        *((void *)a2 + 1) = v74 + 1;
LABEL_160:
        *((_DWORD *)this + 60) |= 0x100u;
        int v75 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *)*((void *)this + 11);
        if (!v75) {
          operator new();
        }
        unsigned int v149 = 0;
        int v76 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v76 >= *((void *)a2 + 2) || *v76 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v149))return 0; {
        }
          }
        else
        {
          unsigned int v149 = *v76;
          *((void *)a2 + 1) = v76 + 1;
        }
        int v77 = *((_DWORD *)a2 + 14);
        int v78 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v77 + 1;
        if (v77 >= v78) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::MergePartialFromCodedStream(v75, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v79 = *((_DWORD *)a2 + 14);
        BOOL v20 = __OFSUB__(v79, 1);
        int v80 = v79 - 1;
        if (v80 < 0 == v20) {
          *((_DWORD *)a2 + 14) = v80;
        }
        int v81 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v81 >= *((void *)a2 + 2) || *v81 != 82) {
          continue;
        }
        do
        {
          *((void *)a2 + 1) = v81 + 1;
LABEL_174:
          int v82 = *((_DWORD *)this + 27);
          uint64_t v83 = *((int *)this + 26);
          if ((int)v83 >= v82)
          {
            if (v82 == *((_DWORD *)this + 28))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v5);
              int v82 = *((_DWORD *)this + 27);
            }
            *((_DWORD *)this + 27) = v82 + 1;
            operator new();
          }
          uint64_t v84 = *((void *)this + 12);
          *((_DWORD *)this + 26) = v83 + 1;
          unsigned __int8 v85 = *(CoreNavigation::CLP::LogEntry::PrivateData::ReceiverBandCorrections **)(v84 + 8 * v83);
          unsigned int v149 = 0;
          int v86 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v86 >= *((void *)a2 + 2) || *v86 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v149))return 0; {
          }
            }
          else
          {
            unsigned int v149 = *v86;
            *((void *)a2 + 1) = v86 + 1;
          }
          int v87 = *((_DWORD *)a2 + 14);
          int v88 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v87 + 1;
          if (v87 >= v88) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!CoreNavigation::CLP::LogEntry::PrivateData::ReceiverBandCorrections::MergePartialFromCodedStream(v85, a2)|| !*((unsigned char *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          int v89 = *((_DWORD *)a2 + 14);
          BOOL v20 = __OFSUB__(v89, 1);
          int v90 = v89 - 1;
          if (v90 < 0 == v20) {
            *((_DWORD *)a2 + 14) = v90;
          }
          int v81 = (unsigned char *)*((void *)a2 + 1);
          if ((unint64_t)v81 >= *((void *)a2 + 2)) {
            goto LABEL_2;
          }
          int v91 = *v81;
        }
        while (v91 == 82);
        if (v91 != 90) {
          continue;
        }
        *((void *)a2 + 1) = v81 + 1;
LABEL_192:
        *((_DWORD *)this + 60) |= 0x400u;
        uint64_t v92 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent *)*((void *)this + 15);
        if (!v92) {
          operator new();
        }
        unsigned int v149 = 0;
        uint64_t v93 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v93 >= *((void *)a2 + 2) || *v93 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v149))return 0; {
        }
          }
        else
        {
          unsigned int v149 = *v93;
          *((void *)a2 + 1) = v93 + 1;
        }
        int v94 = *((_DWORD *)a2 + 14);
        int v95 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v94 + 1;
        if (v94 >= v95) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::MergePartialFromCodedStream(v92, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v96 = *((_DWORD *)a2 + 14);
        BOOL v20 = __OFSUB__(v96, 1);
        int v97 = v96 - 1;
        if (v97 < 0 == v20) {
          *((_DWORD *)a2 + 14) = v97;
        }
        int v98 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v98 >= *((void *)a2 + 2) || *v98 != 98) {
          continue;
        }
        *((void *)a2 + 1) = v98 + 1;
LABEL_206:
        *((_DWORD *)this + 60) |= 0x800u;
        int v99 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate *)*((void *)this + 16);
        if (!v99) {
          operator new();
        }
        unsigned int v149 = 0;
        int v100 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v100 >= *((void *)a2 + 2) || *v100 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v149))return 0; {
        }
          }
        else
        {
          unsigned int v149 = *v100;
          *((void *)a2 + 1) = v100 + 1;
        }
        int v101 = *((_DWORD *)a2 + 14);
        int v102 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v101 + 1;
        if (v101 >= v102) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate::MergePartialFromCodedStream(v99, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v103 = *((_DWORD *)a2 + 14);
        BOOL v20 = __OFSUB__(v103, 1);
        int v104 = v103 - 1;
        if (v104 < 0 == v20) {
          *((_DWORD *)a2 + 14) = v104;
        }
        double v105 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        if ((unint64_t)v105 < v15 && *v105 == 104)
        {
          int v16 = v105 + 1;
          *((void *)a2 + 1) = v16;
LABEL_220:
          unsigned int v149 = 0;
          if ((unint64_t)v16 >= v15 || *v16 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v149);
            if (!result) {
              return result;
            }
            unsigned int v106 = v149;
          }
          else
          {
            unsigned int v106 = *v16;
            *((void *)a2 + 1) = v16 + 1;
          }
          if (v106 <= 7)
          {
            *((_DWORD *)this + 60) |= 0x1000u;
            *((_DWORD *)this + 58) = v106;
          }
          int v108 = (unsigned __int8 *)*((void *)a2 + 1);
          if ((unint64_t)v108 < *((void *)a2 + 2) && *v108 == 114)
          {
            do
            {
              *((void *)a2 + 1) = v108 + 1;
LABEL_230:
              int v109 = *((_DWORD *)this + 37);
              uint64_t v110 = *((int *)this + 36);
              if ((int)v110 >= v109)
              {
                if (v109 == *((_DWORD *)this + 38))
                {
                  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v6);
                  int v109 = *((_DWORD *)this + 37);
                }
                *((_DWORD *)this + 37) = v109 + 1;
                operator new();
              }
              uint64_t v111 = *((void *)this + 17);
              *((_DWORD *)this + 36) = v110 + 1;
              double v112 = *(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount **)(v111 + 8 * v110);
              unsigned int v149 = 0;
              double v113 = (char *)*((void *)a2 + 1);
              if ((unint64_t)v113 >= *((void *)a2 + 2) || *v113 < 0)
              {
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v149))return 0; {
              }
                }
              else
              {
                unsigned int v149 = *v113;
                *((void *)a2 + 1) = v113 + 1;
              }
              int v114 = *((_DWORD *)a2 + 14);
              int v115 = *((_DWORD *)a2 + 15);
              *((_DWORD *)a2 + 14) = v114 + 1;
              if (v114 >= v115) {
                return 0;
              }
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
              if (!CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::MergePartialFromCodedStream(v112, a2)|| !*((unsigned char *)a2 + 36))
              {
                return 0;
              }
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
              int v116 = *((_DWORD *)a2 + 14);
              BOOL v20 = __OFSUB__(v116, 1);
              int v117 = v116 - 1;
              if (v117 < 0 == v20) {
                *((_DWORD *)a2 + 14) = v117;
              }
              int v108 = (unsigned __int8 *)*((void *)a2 + 1);
              if ((unint64_t)v108 >= *((void *)a2 + 2)) {
                goto LABEL_2;
              }
              int v118 = *v108;
            }
            while (v118 == 114);
            if (v118 == 122)
            {
              do
              {
                *((void *)a2 + 1) = v108 + 1;
LABEL_248:
                int v119 = *((_DWORD *)this + 43);
                uint64_t v120 = *((int *)this + 42);
                if ((int)v120 >= v119)
                {
                  if (v119 == *((_DWORD *)this + 44))
                  {
                    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v7);
                    int v119 = *((_DWORD *)this + 43);
                  }
                  *((_DWORD *)this + 43) = v119 + 1;
                  operator new();
                }
                uint64_t v121 = *((void *)this + 20);
                *((_DWORD *)this + 42) = v120 + 1;
                double v122 = *(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount **)(v121 + 8 * v120);
                unsigned int v149 = 0;
                double v123 = (char *)*((void *)a2 + 1);
                if ((unint64_t)v123 >= *((void *)a2 + 2) || *v123 < 0)
                {
                  if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v149))return 0; {
                }
                  }
                else
                {
                  unsigned int v149 = *v123;
                  *((void *)a2 + 1) = v123 + 1;
                }
                int v124 = *((_DWORD *)a2 + 14);
                int v125 = *((_DWORD *)a2 + 15);
                *((_DWORD *)a2 + 14) = v124 + 1;
                if (v124 >= v125) {
                  return 0;
                }
                wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
                if (!CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::MergePartialFromCodedStream(v122, a2)|| !*((unsigned char *)a2 + 36))
                {
                  return 0;
                }
                wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
                int v126 = *((_DWORD *)a2 + 14);
                BOOL v20 = __OFSUB__(v126, 1);
                int v127 = v126 - 1;
                if (v127 < 0 == v20) {
                  *((_DWORD *)a2 + 14) = v127;
                }
                int v108 = (unsigned __int8 *)*((void *)a2 + 1);
                unint64_t v128 = *((void *)a2 + 2);
              }
              while ((unint64_t)v108 < v128 && *v108 == 122);
              if ((int)v128 - (int)v108 >= 2)
              {
                int v129 = *v108;
                do
                {
                  if (v129 != 130 || v108[1] != 1) {
                    goto LABEL_2;
                  }
                  *((void *)a2 + 1) = v108 + 2;
LABEL_268:
                  int v130 = *((_DWORD *)this + 49);
                  uint64_t v131 = *((int *)this + 48);
                  if ((int)v131 >= v130)
                  {
                    if (v130 == *((_DWORD *)this + 50))
                    {
                      wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v8);
                      int v130 = *((_DWORD *)this + 49);
                    }
                    *((_DWORD *)this + 49) = v130 + 1;
                    operator new();
                  }
                  uint64_t v132 = *((void *)this + 23);
                  *((_DWORD *)this + 48) = v131 + 1;
                  long long v133 = *(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount **)(v132 + 8 * v131);
                  unsigned int v149 = 0;
                  uint64_t v134 = (char *)*((void *)a2 + 1);
                  if ((unint64_t)v134 >= *((void *)a2 + 2) || *v134 < 0)
                  {
                    if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v149))return 0; {
                  }
                    }
                  else
                  {
                    unsigned int v149 = *v134;
                    *((void *)a2 + 1) = v134 + 1;
                  }
                  int v135 = *((_DWORD *)a2 + 14);
                  int v136 = *((_DWORD *)a2 + 15);
                  *((_DWORD *)a2 + 14) = v135 + 1;
                  if (v135 >= v136) {
                    return 0;
                  }
                  wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
                  if (!CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::MergePartialFromCodedStream(v133, a2)|| !*((unsigned char *)a2 + 36))
                  {
                    return 0;
                  }
                  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
                  int v137 = *((_DWORD *)a2 + 14);
                  BOOL v20 = __OFSUB__(v137, 1);
                  int v138 = v137 - 1;
                  if (v138 < 0 == v20) {
                    *((_DWORD *)a2 + 14) = v138;
                  }
                  int v108 = (unsigned __int8 *)*((void *)a2 + 1);
                  if (*((_DWORD *)a2 + 4) - (int)v108 <= 1) {
                    goto LABEL_2;
                  }
                  int v129 = *v108;
                }
                while (v129 != 138);
                if (v108[1] == 1)
                {
                  do
                  {
                    *((void *)a2 + 1) = v108 + 2;
LABEL_288:
                    int v139 = *((_DWORD *)this + 55);
                    uint64_t v140 = *((int *)this + 54);
                    if ((int)v140 >= v139)
                    {
                      if (v139 == *((_DWORD *)this + 56))
                      {
                        wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v9);
                        int v139 = *((_DWORD *)this + 55);
                      }
                      *((_DWORD *)this + 55) = v139 + 1;
                      operator new();
                    }
                    uint64_t v141 = *((void *)this + 26);
                    *((_DWORD *)this + 54) = v140 + 1;
                    double v142 = *(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility **)(v141 + 8 * v140);
                    unsigned int v149 = 0;
                    double v143 = (char *)*((void *)a2 + 1);
                    if ((unint64_t)v143 >= *((void *)a2 + 2) || *v143 < 0)
                    {
                      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v149))return 0; {
                    }
                      }
                    else
                    {
                      unsigned int v149 = *v143;
                      *((void *)a2 + 1) = v143 + 1;
                    }
                    int v144 = *((_DWORD *)a2 + 14);
                    int v145 = *((_DWORD *)a2 + 15);
                    *((_DWORD *)a2 + 14) = v144 + 1;
                    if (v144 >= v145) {
                      return 0;
                    }
                    wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
                    if (!CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::MergePartialFromCodedStream(v142, a2)|| !*((unsigned char *)a2 + 36))
                    {
                      return 0;
                    }
                    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
                    int v146 = *((_DWORD *)a2 + 14);
                    BOOL v20 = __OFSUB__(v146, 1);
                    int v147 = v146 - 1;
                    if (v147 < 0 == v20) {
                      *((_DWORD *)a2 + 14) = v147;
                    }
                    int v108 = (unsigned __int8 *)*((void *)a2 + 1);
                    __double2 v148 = (unsigned __int8 *)*((void *)a2 + 2);
                  }
                  while ((int)v148 - (int)v108 > 1 && *v108 == 138 && v108[1] == 1);
                  if (v108 == v148 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                  {
                    *((_DWORD *)a2 + 8) = 0;
                    uint64_t result = 1;
                    *((unsigned char *)a2 + 36) = 1;
                    return result;
                  }
                }
              }
            }
          }
        }
        break;
      case 3u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_72;
        }
        goto LABEL_46;
      case 4u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_86;
        }
        goto LABEL_46;
      case 5u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_100;
        }
        goto LABEL_46;
      case 6u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_114;
        }
        goto LABEL_46;
      case 7u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_132;
        }
        goto LABEL_46;
      case 8u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_146;
        }
        goto LABEL_46;
      case 9u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_160;
        }
        goto LABEL_46;
      case 0xAu:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_174;
        }
        goto LABEL_46;
      case 0xBu:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_192;
        }
        goto LABEL_46;
      case 0xCu:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_206;
        }
        goto LABEL_46;
      case 0xDu:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_46;
        }
        int v16 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_220;
      case 0xEu:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_230;
        }
        goto LABEL_46;
      case 0xFu:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_248;
        }
        goto LABEL_46;
      case 0x10u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_268;
        }
        goto LABEL_46;
      case 0x11u:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_46;
        }
        goto LABEL_288;
      default:
        int v12 = TagFallback & 7;
LABEL_46:
        if (v12 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 240);
  if (v6)
  {
    uint64_t v7 = *(void *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
      uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_
                     + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 240);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
    uint64_t v8 = *(void *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_
                   + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 240);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_16;
  }
LABEL_13:
  uint64_t v9 = *(void *)(v5 + 24);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
    uint64_t v9 = *(void *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_
                   + 24);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v9, a2, a4);
  int v6 = *(_DWORD *)(v5 + 240);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_22;
    }
    goto LABEL_19;
  }
LABEL_16:
  uint64_t v10 = *(void *)(v5 + 32);
  if (!v10)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
    uint64_t v10 = *(void *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_
                    + 32);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v10, a2, a4);
  if ((*(_DWORD *)(v5 + 240) & 0x10) != 0)
  {
LABEL_19:
    uint64_t v11 = *(void *)(v5 + 40);
    if (!v11)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
      uint64_t v11 = *(void *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_
                      + 40);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v11, a2, a4);
  }
LABEL_22:
  if (*(int *)(v5 + 56) >= 1)
  {
    uint64_t v12 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(void *)(*(void *)(v5 + 48) + 8 * v12++), a2, a4);
    while (v12 < *(int *)(v5 + 56));
  }
  int v13 = *(_DWORD *)(v5 + 240);
  if ((v13 & 0x40) != 0)
  {
    uint64_t v14 = *(void *)(v5 + 72);
    if (!v14)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
      uint64_t v14 = *(void *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_
                      + 72);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v14, a2, a4);
    int v13 = *(_DWORD *)(v5 + 240);
    if ((v13 & 0x80) == 0)
    {
LABEL_27:
      if ((v13 & 0x100) == 0) {
        goto LABEL_38;
      }
      goto LABEL_35;
    }
  }
  else if ((v13 & 0x80) == 0)
  {
    goto LABEL_27;
  }
  uint64_t v15 = *(void *)(v5 + 80);
  if (!v15)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
    uint64_t v15 = *(void *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_
                    + 80);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v15, a2, a4);
  if ((*(_DWORD *)(v5 + 240) & 0x100) != 0)
  {
LABEL_35:
    uint64_t v16 = *(void *)(v5 + 88);
    if (!v16)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
      uint64_t v16 = *(void *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_
                      + 88);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v16, a2, a4);
  }
LABEL_38:
  if (*(int *)(v5 + 104) >= 1)
  {
    uint64_t v17 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(void *)(*(void *)(v5 + 96) + 8 * v17++), a2, a4);
    while (v17 < *(int *)(v5 + 104));
  }
  int v18 = *(_DWORD *)(v5 + 240);
  if ((v18 & 0x400) != 0)
  {
    uint64_t v23 = *(void *)(v5 + 120);
    if (!v23)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
      uint64_t v23 = *(void *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_
                      + 120);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, v23, a2, a4);
    int v18 = *(_DWORD *)(v5 + 240);
    if ((v18 & 0x800) == 0)
    {
LABEL_43:
      if ((v18 & 0x1000) == 0) {
        goto LABEL_45;
      }
      goto LABEL_44;
    }
  }
  else if ((v18 & 0x800) == 0)
  {
    goto LABEL_43;
  }
  uint64_t v24 = *(void *)(v5 + 128);
  if (!v24)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
    uint64_t v24 = *(void *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_
                    + 128);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, v24, a2, a4);
  if ((*(_DWORD *)(v5 + 240) & 0x1000) != 0) {
LABEL_44:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, *(unsigned int *)(v5 + 232), (uint64_t)a2, a4);
LABEL_45:
  if (*(int *)(v5 + 144) >= 1)
  {
    uint64_t v19 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, *(void *)(*(void *)(v5 + 136) + 8 * v19++), a2, a4);
    while (v19 < *(int *)(v5 + 144));
  }
  if (*(int *)(v5 + 168) >= 1)
  {
    uint64_t v20 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, *(void *)(*(void *)(v5 + 160) + 8 * v20++), a2, a4);
    while (v20 < *(int *)(v5 + 168));
  }
  if (*(int *)(v5 + 192) >= 1)
  {
    uint64_t v21 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, *(void *)(*(void *)(v5 + 184) + 8 * v21++), a2, a4);
    while (v21 < *(int *)(v5 + 192));
  }
  if (*(int *)(v5 + 216) >= 1)
  {
    uint64_t v22 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, *(void *)(*(void *)(v5 + 208) + 8 * v22++), a2, a4);
    while (v22 < *(int *)(v5 + 216));
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::ByteSize(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *this)
{
  int v2 = *((_DWORD *)this + 60);
  if (!(_BYTE)v2)
  {
    int v3 = 0;
    goto LABEL_54;
  }
  if ((v2 & 1) == 0)
  {
    int v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  uint64_t v4 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps *)*((void *)this + 1);
  if (!v4)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(0);
    uint64_t v4 = *(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_ + 8);
  }
  uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::ByteSize(v4);
  int v6 = (int)v5;
  if (v5 >= 0x80) {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
  }
  else {
    int v7 = 1;
  }
  int v3 = v6 + v7 + 1;
  int v2 = *((_DWORD *)this + 60);
  if ((v2 & 2) != 0)
  {
LABEL_12:
    uint64_t v8 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets *)*((void *)this + 2);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(0);
      uint64_t v8 = *(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_ + 16);
    }
    uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets::ByteSize(v8);
    int v10 = (int)v9;
    if (v9 >= 0x80) {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9);
    }
    else {
      int v11 = 1;
    }
    v3 += v10 + v11 + 1;
    int v2 = *((_DWORD *)this + 60);
  }
LABEL_18:
  if ((v2 & 4) != 0)
  {
    uint64_t v12 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *)*((void *)this + 3);
    if (!v12)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(0);
      uint64_t v12 = *(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_
                                                                                + 24);
    }
    int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::ByteSize(v12);
    int v14 = (int)v13;
    if (v13 >= 0x80) {
      int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
    }
    else {
      int v15 = 1;
    }
    v3 += v14 + v15 + 1;
    int v2 = *((_DWORD *)this + 60);
    if ((v2 & 8) == 0)
    {
LABEL_20:
      if ((v2 & 0x10) == 0) {
        goto LABEL_21;
      }
      goto LABEL_36;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_20;
  }
  uint64_t v16 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *)*((void *)this + 4);
  if (!v16)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(0);
    uint64_t v16 = *(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_
                                                                              + 32);
  }
  uint64_t v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::ByteSize(v16);
  int v18 = (int)v17;
  if (v17 >= 0x80) {
    int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17);
  }
  else {
    int v19 = 1;
  }
  v3 += v18 + v19 + 1;
  int v2 = *((_DWORD *)this + 60);
  if ((v2 & 0x10) == 0)
  {
LABEL_21:
    if ((v2 & 0x40) == 0) {
      goto LABEL_22;
    }
    goto LABEL_42;
  }
LABEL_36:
  uint64_t v20 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError *)*((void *)this + 5);
  if (!v20)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(0);
    uint64_t v20 = *(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_
                                                                                   + 40);
  }
  uint64_t v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::ByteSize(v20);
  int v22 = (int)v21;
  if (v21 >= 0x80) {
    int v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21);
  }
  else {
    int v23 = 1;
  }
  v3 += v22 + v23 + 1;
  int v2 = *((_DWORD *)this + 60);
  if ((v2 & 0x40) == 0)
  {
LABEL_22:
    if ((v2 & 0x80) == 0) {
      goto LABEL_54;
    }
    goto LABEL_48;
  }
LABEL_42:
  uint64_t v24 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *)*((void *)this + 9);
  if (!v24)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(0);
    uint64_t v24 = *(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_ + 72);
  }
  int v25 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::ByteSize(v24);
  int v26 = (int)v25;
  if (v25 >= 0x80) {
    int v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v25);
  }
  else {
    int v27 = 1;
  }
  v3 += v26 + v27 + 1;
  int v2 = *((_DWORD *)this + 60);
  if ((v2 & 0x80) != 0)
  {
LABEL_48:
    int v28 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *)*((void *)this + 10);
    if (!v28)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(0);
      int v28 = *(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_ + 80);
    }
    unsigned int v29 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::ByteSize(v28);
    int v30 = (int)v29;
    if (v29 >= 0x80) {
      int v31 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v29);
    }
    else {
      int v31 = 1;
    }
    v3 += v30 + v31 + 1;
    int v2 = *((_DWORD *)this + 60);
  }
LABEL_54:
  if ((v2 & 0xFF00) == 0) {
    goto LABEL_84;
  }
  if ((v2 & 0x100) != 0)
  {
    int v32 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *)*((void *)this + 11);
    if (!v32)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(0);
      int v32 = *(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_ + 88);
    }
    int v33 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::ByteSize(v32);
    int v34 = (int)v33;
    if (v33 >= 0x80) {
      int v35 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v33);
    }
    else {
      int v35 = 1;
    }
    v3 += v34 + v35 + 1;
    int v2 = *((_DWORD *)this + 60);
    if ((v2 & 0x400) == 0)
    {
LABEL_57:
      if ((v2 & 0x800) == 0) {
        goto LABEL_58;
      }
      goto LABEL_72;
    }
  }
  else if ((v2 & 0x400) == 0)
  {
    goto LABEL_57;
  }
  uint64_t v36 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent *)*((void *)this + 15);
  if (!v36)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(0);
    uint64_t v36 = *(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_ + 120);
  }
  unsigned int v37 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::ByteSize(v36);
  int v38 = (int)v37;
  if (v37 >= 0x80) {
    int v39 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v37);
  }
  else {
    int v39 = 1;
  }
  v3 += v38 + v39 + 1;
  int v2 = *((_DWORD *)this + 60);
  if ((v2 & 0x800) == 0)
  {
LABEL_58:
    if ((v2 & 0x1000) == 0) {
      goto LABEL_84;
    }
    goto LABEL_78;
  }
LABEL_72:
  int v40 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate *)*((void *)this + 16);
  if (!v40)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(0);
    int v40 = *(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::default_instance_ + 128);
  }
  int v41 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::RavenUserActivityEstimate::ByteSize(v40);
  int v42 = (int)v41;
  if (v41 >= 0x80) {
    int v43 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v41);
  }
  else {
    int v43 = 1;
  }
  v3 += v42 + v43 + 1;
  if ((*((_DWORD *)this + 60) & 0x1000) != 0)
  {
LABEL_78:
    int v44 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 58);
    if ((v44 & 0x80000000) != 0)
    {
      int v45 = 10;
    }
    else if (v44 >= 0x80)
    {
      int v45 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v44);
    }
    else
    {
      int v45 = 1;
    }
    v3 += v45 + 1;
  }
LABEL_84:
  int v46 = *((_DWORD *)this + 14);
  int v47 = v46 + v3;
  if (v46 >= 1)
  {
    uint64_t v48 = 0;
    do
    {
      int v49 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::ByteSize(*(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData **)(*((void *)this + 6) + 8 * v48));
      int v50 = (int)v49;
      if (v49 >= 0x80) {
        int v51 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v49);
      }
      else {
        int v51 = 1;
      }
      v47 += v50 + v51;
      ++v48;
    }
    while (v48 < *((int *)this + 14));
  }
  int v52 = *((_DWORD *)this + 26);
  int v53 = v52 + v47;
  if (v52 >= 1)
  {
    uint64_t v54 = 0;
    do
    {
      int v55 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::ReceiverBandCorrections::ByteSize(*(CoreNavigation::CLP::LogEntry::PrivateData::ReceiverBandCorrections **)(*((void *)this + 12) + 8 * v54));
      int v56 = (int)v55;
      if (v55 >= 0x80) {
        int v57 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v55);
      }
      else {
        int v57 = 1;
      }
      v53 += v56 + v57;
      ++v54;
    }
    while (v54 < *((int *)this + 26));
  }
  int v58 = *((_DWORD *)this + 36);
  int v59 = v58 + v53;
  if (v58 >= 1)
  {
    uint64_t v60 = 0;
    do
    {
      int v61 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::ByteSize(*(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount **)(*((void *)this + 17) + 8 * v60));
      int v62 = (int)v61;
      if (v61 >= 0x80) {
        int v63 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v61);
      }
      else {
        int v63 = 1;
      }
      v59 += v62 + v63;
      ++v60;
    }
    while (v60 < *((int *)this + 36));
  }
  int v64 = *((_DWORD *)this + 42);
  int v65 = v64 + v59;
  if (v64 >= 1)
  {
    uint64_t v66 = 0;
    do
    {
      int v67 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::ByteSize(*(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount **)(*((void *)this + 20) + 8 * v66));
      int v68 = (int)v67;
      if (v67 >= 0x80) {
        int v69 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v67);
      }
      else {
        int v69 = 1;
      }
      v65 += v68 + v69;
      ++v66;
    }
    while (v66 < *((int *)this + 42));
  }
  int v70 = *((_DWORD *)this + 48);
  int v71 = v65 + 2 * v70;
  if (v70 >= 1)
  {
    uint64_t v72 = 0;
    do
    {
      int v73 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::ByteSize(*(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount **)(*((void *)this + 23) + 8 * v72));
      int v74 = (int)v73;
      if (v73 >= 0x80) {
        int v75 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v73);
      }
      else {
        int v75 = 1;
      }
      v71 += v74 + v75;
      ++v72;
    }
    while (v72 < *((int *)this + 48));
  }
  int v76 = *((_DWORD *)this + 54);
  uint64_t v77 = (v71 + 2 * v76);
  if (v76 >= 1)
  {
    uint64_t v78 = 0;
    do
    {
      int v79 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::ByteSize(*(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility **)(*((void *)this + 26) + 8 * v78));
      int v80 = (int)v79;
      if (v79 >= 0x80) {
        int v81 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v79);
      }
      else {
        int v81 = 1;
      }
      uint64_t v77 = (v80 + v77 + v81);
      ++v78;
    }
    while (v78 < *((int *)this + 54));
  }
  *((_DWORD *)this + 59) = v77;
  return v77;
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::MergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v15);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 60);
  if (!(_BYTE)v5) {
    return result;
  }
  if (*((unsigned char *)a2 + 60))
  {
    uint64_t v6 = *((void *)a2 + 1);
    *((_DWORD *)this + 15) |= 1u;
    *((void *)this + 1) = v6;
    int v5 = *((_DWORD *)a2 + 15);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_18;
    }
  }
  else if ((*((unsigned char *)a2 + 60) & 2) == 0)
  {
    goto LABEL_6;
  }
  *((_DWORD *)this + 15) |= 2u;
  int v7 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime *)*((void *)this + 2);
  if (!v7) {
    operator new();
  }
  uint64_t v8 = (const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime *)*((void *)a2 + 2);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
    uint64_t v8 = *(const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::default_instance_
                                                                                 + 16);
  }
  double result = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::MergeFrom(v7, v8);
  int v5 = *((_DWORD *)a2 + 15);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
LABEL_23:
    *((_DWORD *)this + 15) |= 8u;
    int v11 = (CoreNavigation::CLP::LogEntry::Raven::TimeStruct *)*((void *)this + 4);
    if (!v11) {
      operator new();
    }
    uint64_t v12 = (const CoreNavigation::CLP::LogEntry::Raven::TimeStruct *)*((void *)a2 + 4);
    if (!v12)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
      uint64_t v12 = *(const CoreNavigation::CLP::LogEntry::Raven::TimeStruct **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::default_instance_
                                                                       + 32);
    }
    double result = CoreNavigation::CLP::LogEntry::Raven::TimeStruct::MergeFrom(v11, v12);
    int v5 = *((_DWORD *)a2 + 15);
    if ((v5 & 0x10) == 0)
    {
LABEL_9:
      if ((v5 & 0x20) == 0) {
        return result;
      }
      goto LABEL_10;
    }
    goto LABEL_28;
  }
LABEL_18:
  *((_DWORD *)this + 15) |= 4u;
  uint64_t v9 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime *)*((void *)this + 3);
  if (!v9) {
    operator new();
  }
  int v10 = (const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime *)*((void *)a2 + 3);
  if (!v10)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
    int v10 = *(const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::default_instance_
                                                                                  + 24);
  }
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime::MergeFrom(v9, v10);
  int v5 = *((_DWORD *)a2 + 15);
  if ((v5 & 8) != 0) {
    goto LABEL_23;
  }
LABEL_8:
  if ((v5 & 0x10) == 0) {
    goto LABEL_9;
  }
LABEL_28:
  *((_DWORD *)this + 15) |= 0x10u;
  int v13 = (CoreNavigation::CLP::LogEntry::Raven::TimeStruct *)*((void *)this + 5);
  if (!v13) {
    operator new();
  }
  int v14 = (const CoreNavigation::CLP::LogEntry::Raven::TimeStruct *)*((void *)a2 + 5);
  if (!v14)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
    int v14 = *(const CoreNavigation::CLP::LogEntry::Raven::TimeStruct **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::default_instance_
                                                                     + 40);
  }
  double result = CoreNavigation::CLP::LogEntry::Raven::TimeStruct::MergeFrom(v13, v14);
  if ((*((_DWORD *)a2 + 15) & 0x20) != 0)
  {
LABEL_10:
    double result = *((double *)a2 + 6);
    *((_DWORD *)this + 15) |= 0x20u;
    *((double *)this + 6) = result;
  }
  return result;
}

void sub_18DF2DF5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets::MergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 48);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 48))
    {
      double result = *((double *)a2 + 1);
      *((_DWORD *)this + 12) |= 1u;
      *((double *)this + 1) = result;
      int v5 = *((_DWORD *)a2 + 12);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_13;
      }
    }
    else if ((*((unsigned char *)a2 + 48) & 2) == 0)
    {
      goto LABEL_6;
    }
    double result = *((double *)a2 + 2);
    *((_DWORD *)this + 12) |= 2u;
    *((double *)this + 2) = result;
    int v5 = *((_DWORD *)a2 + 12);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_14;
    }
LABEL_13:
    double result = *((double *)a2 + 3);
    *((_DWORD *)this + 12) |= 4u;
    *((double *)this + 3) = result;
    int v5 = *((_DWORD *)a2 + 12);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0) {
        return result;
      }
      goto LABEL_9;
    }
LABEL_14:
    double result = *((double *)a2 + 4);
    *((_DWORD *)this + 12) |= 8u;
    *((double *)this + 4) = result;
    if ((*((_DWORD *)a2 + 12) & 0x10) == 0) {
      return result;
    }
LABEL_9:
    int v6 = *((_DWORD *)a2 + 10);
    *((_DWORD *)this + 12) |= 0x10u;
    *((_DWORD *)this + 10) = v6;
  }
  return result;
}

void sub_18DF2E088(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::MergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 40);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 40))
    {
      int v6 = *((_DWORD *)a2 + 2);
      *((_DWORD *)this + 10) |= 1u;
      *((_DWORD *)this + 2) = v6;
      int v4 = *((_DWORD *)a2 + 10);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_15;
      }
    }
    else if ((*((unsigned char *)a2 + 40) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v7 = *((_DWORD *)a2 + 3);
    *((_DWORD *)this + 10) |= 2u;
    *((_DWORD *)this + 3) = v7;
    int v4 = *((_DWORD *)a2 + 10);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_16;
    }
LABEL_15:
    int v8 = *((_DWORD *)a2 + 4);
    *((_DWORD *)this + 10) |= 4u;
    *((_DWORD *)this + 4) = v8;
    int v4 = *((_DWORD *)a2 + 10);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_17;
    }
LABEL_16:
    int v9 = *((_DWORD *)a2 + 5);
    *((_DWORD *)this + 10) |= 8u;
    *((_DWORD *)this + 5) = v9;
    int v4 = *((_DWORD *)a2 + 10);
    if ((v4 & 0x10) == 0)
    {
LABEL_9:
      if ((v4 & 0x20) == 0) {
        goto LABEL_10;
      }
      goto LABEL_18;
    }
LABEL_17:
    int v10 = *((_DWORD *)a2 + 6);
    *((_DWORD *)this + 10) |= 0x10u;
    *((_DWORD *)this + 6) = v10;
    int v4 = *((_DWORD *)a2 + 10);
    if ((v4 & 0x20) == 0)
    {
LABEL_10:
      if ((v4 & 0x40) == 0) {
        return;
      }
      goto LABEL_11;
    }
LABEL_18:
    int v11 = *((_DWORD *)a2 + 7);
    *((_DWORD *)this + 10) |= 0x20u;
    *((_DWORD *)this + 7) = v11;
    if ((*((_DWORD *)a2 + 10) & 0x40) == 0) {
      return;
    }
LABEL_11:
    int v5 = *((_DWORD *)a2 + 8);
    *((_DWORD *)this + 10) |= 0x40u;
    *((_DWORD *)this + 8) = v5;
  }
}

void sub_18DF2E1F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::MergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v17);
  }
  int v4 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent *)((char *)this + 56));
  if (*((int *)a2 + 16) >= 1)
  {
    uint64_t v6 = 0;
    do
    {
      int v7 = *(const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData **)(*((void *)a2 + 7) + 8 * v6);
      int v8 = *((_DWORD *)this + 17);
      uint64_t v9 = *((int *)this + 16);
      if ((int)v9 >= v8)
      {
        if (v8 == *((_DWORD *)this + 18))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent *)((char *)this + 56));
          int v8 = *((_DWORD *)this + 17);
        }
        *((_DWORD *)this + 17) = v8 + 1;
        operator new();
      }
      uint64_t v10 = *((void *)this + 7);
      *((_DWORD *)this + 16) = v9 + 1;
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::MergeFrom(*(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData **)(v10 + 8 * v9), v7);
      ++v6;
    }
    while (v6 < *((int *)a2 + 16));
  }
  LOBYTE(v11) = *((unsigned char *)a2 + 88);
  if ((_BYTE)v11)
  {
    if (*((unsigned char *)a2 + 88))
    {
      *((_DWORD *)this + 22) |= 1u;
      uint64_t v12 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *)*((void *)this + 1);
      if (!v12) {
        operator new();
      }
      int v13 = (const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *)*((void *)a2 + 1);
      if (!v13)
      {
        CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(v4);
        int v13 = *(const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::default_instance_ + 8);
      }
      double result = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::MergeFrom(v12, v13);
      int v11 = *((_DWORD *)a2 + 22);
      if ((v11 & 2) == 0)
      {
LABEL_14:
        if ((v11 & 4) == 0) {
          goto LABEL_15;
        }
        goto LABEL_26;
      }
    }
    else if ((*((unsigned char *)a2 + 88) & 2) == 0)
    {
      goto LABEL_14;
    }
    double result = *((double *)a2 + 2);
    *((_DWORD *)this + 22) |= 2u;
    *((double *)this + 2) = result;
    int v11 = *((_DWORD *)a2 + 22);
    if ((v11 & 4) == 0)
    {
LABEL_15:
      if ((v11 & 8) == 0) {
        goto LABEL_16;
      }
      goto LABEL_27;
    }
LABEL_26:
    double result = *((double *)a2 + 3);
    *((_DWORD *)this + 22) |= 4u;
    *((double *)this + 3) = result;
    int v11 = *((_DWORD *)a2 + 22);
    if ((v11 & 8) == 0)
    {
LABEL_16:
      if ((v11 & 0x10) == 0) {
        goto LABEL_17;
      }
      goto LABEL_28;
    }
LABEL_27:
    double result = *((double *)a2 + 4);
    *((_DWORD *)this + 22) |= 8u;
    *((double *)this + 4) = result;
    int v11 = *((_DWORD *)a2 + 22);
    if ((v11 & 0x10) == 0)
    {
LABEL_17:
      if ((v11 & 0x20) == 0) {
        goto LABEL_18;
      }
      goto LABEL_29;
    }
LABEL_28:
    double result = *((double *)a2 + 5);
    *((_DWORD *)this + 22) |= 0x10u;
    *((double *)this + 5) = result;
    int v11 = *((_DWORD *)a2 + 22);
    if ((v11 & 0x20) == 0)
    {
LABEL_18:
      if ((v11 & 0x40) == 0) {
        return result;
      }
      goto LABEL_30;
    }
LABEL_29:
    char v14 = *((unsigned char *)a2 + 80);
    *((_DWORD *)this + 22) |= 0x20u;
    *((unsigned char *)this + 80) = v14;
    if ((*((_DWORD *)a2 + 22) & 0x40) == 0) {
      return result;
    }
LABEL_30:
    *((_DWORD *)this + 22) |= 0x40u;
    int v15 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel *)*((void *)this + 6);
    if (!v15) {
      operator new();
    }
    uint64_t v16 = (const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel *)*((void *)a2 + 6);
    if (!v16)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(v4);
      uint64_t v16 = *(const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::default_instance_ + 48);
    }
    return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel::MergeFrom(v15, v16);
  }
  return result;
}

void sub_18DF2E534(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::CopyFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::IsInitialized(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *this)
{
  return 1;
}

CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::Swap(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *this, CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *a2)
{
  if (a2 != this)
  {
    int v3 = this;
    uint64_t v4 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v4;
    uint64_t v5 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v5;
    uint64_t v6 = *((void *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v6;
    uint64_t v7 = *((void *)this + 4);
    *((void *)this + 4) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v7;
    uint64_t v8 = *((void *)this + 5);
    *((void *)this + 5) = *((void *)a2 + 5);
    *((void *)a2 + 5) = v8;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    uint64_t v9 = *((void *)v3 + 9);
    *((void *)v3 + 9) = *((void *)a2 + 9);
    *((void *)a2 + 9) = v9;
    uint64_t v10 = *((void *)v3 + 10);
    *((void *)v3 + 10) = *((void *)a2 + 10);
    *((void *)a2 + 10) = v10;
    uint64_t v11 = *((void *)v3 + 11);
    *((void *)v3 + 11) = *((void *)a2 + 11);
    *((void *)a2 + 11) = v11;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    uint64_t v12 = *((void *)v3 + 15);
    *((void *)v3 + 15) = *((void *)a2 + 15);
    *((void *)a2 + 15) = v12;
    uint64_t v13 = *((void *)v3 + 16);
    *((void *)v3 + 16) = *((void *)a2 + 16);
    *((void *)a2 + 16) = v13;
    LODWORD(v13) = *((_DWORD *)v3 + 58);
    *((_DWORD *)v3 + 58) = *((_DWORD *)a2 + 58);
    *((_DWORD *)a2 + 58) = v13;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    this = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    int v14 = *((_DWORD *)v3 + 60);
    *((_DWORD *)v3 + 60) = *((_DWORD *)a2 + 60);
    *((_DWORD *)a2 + 60) = v14;
    int v15 = *((_DWORD *)v3 + 59);
    *((_DWORD *)v3 + 59) = *((_DWORD *)a2 + 59);
    *((_DWORD *)a2 + 59) = v15;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssMsmtAnalysisToolDataCapture::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.InternalToolData.GnssMsmtAnalysisToolData.GnssMsmtAnalysisToolDataCapture");
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::SharedCtor(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility *this)
{
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((unsigned char *)this + 32) = 0;
  *((void *)this + 3) = 0;
  *(void *)&double result = 2;
  *(void *)((char *)this + 36) = 2;
  *((_DWORD *)this + 11) = 0;
  return result;
}

CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::SatelliteVisibility(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility *a2)
{
  *(void *)this = &unk_1EDD02650;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  *((unsigned char *)this + 32) = 0;
  *(void *)((char *)this + 36) = 2;
  *((_DWORD *)this + 11) = 0;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::MergeFrom(this, a2);
  return this;
}

void sub_18DF2E7CC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::MergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 44);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 44))
    {
      *((_DWORD *)this + 11) |= 1u;
      uint64_t v5 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *)*((void *)this + 1);
      if (!v5) {
        operator new();
      }
      uint64_t v6 = (const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *)*((void *)a2 + 1);
      if (!v6)
      {
        CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
        uint64_t v6 = *(const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::default_instance_ + 8);
      }
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::MergeFrom(v5, v6);
      int v4 = *((_DWORD *)a2 + 11);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_16;
      }
    }
    else if ((*((unsigned char *)a2 + 44) & 2) == 0)
    {
      goto LABEL_6;
    }
    uint64_t v7 = *((void *)a2 + 2);
    *((_DWORD *)this + 11) |= 2u;
    *((void *)this + 2) = v7;
    int v4 = *((_DWORD *)a2 + 11);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_17;
    }
LABEL_16:
    uint64_t v8 = *((void *)a2 + 3);
    *((_DWORD *)this + 11) |= 4u;
    *((void *)this + 3) = v8;
    int v4 = *((_DWORD *)a2 + 11);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        return;
      }
LABEL_18:
      unsigned int v10 = *((_DWORD *)a2 + 9);
      if (v10 >= 3) {
        __assert_rtn("set_los_status", "CoreNavigationCLPGnssMsmtAnalysisToolData.pb.h", 3968, "::CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::LineOfSight_IsValid(value)");
      }
      *((_DWORD *)this + 11) |= 0x10u;
      *((_DWORD *)this + 9) = v10;
      return;
    }
LABEL_17:
    char v9 = *((unsigned char *)a2 + 32);
    *((_DWORD *)this + 11) |= 8u;
    *((unsigned char *)this + 32) = v9;
    if ((*((_DWORD *)a2 + 11) & 0x10) == 0) {
      return;
    }
    goto LABEL_18;
  }
}

void sub_18DF2E984(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::~SatelliteVisibility(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility *this)
{
  *(void *)this = &unk_1EDD02650;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::~SatelliteVisibility(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::SharedDtor(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility *this)
{
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2)
    {
      int v3 = *(void (**)(void))(*(void *)v2 + 8);
      v3();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::default_instance(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility *this)
{
  return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 40) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::New(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 44))
  {
    if (*(unsigned char *)(this + 44))
    {
      uint64_t v1 = *(void *)(this + 8);
      if (v1)
      {
        if (*(unsigned char *)(v1 + 20)) {
          *(void *)(v1 + 8) = 0;
        }
        *(_DWORD *)(v1 + 20) = 0;
      }
    }
    *(void *)(this + 16) = 0;
    *(void *)(this + 24) = 0;
    *(unsigned char *)(this + 32) = 0;
    *(_DWORD *)(this + 36) = 2;
  }
  *(_DWORD *)(this + 44) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 20)) {
    *(void *)(this + 8) = 0;
  }
  *(_DWORD *)(this + 20) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (2)
  {
    int v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_21;
        }
        *((_DWORD *)this + 11) |= 1u;
        uint64_t v7 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *)*((void *)this + 1);
        if (!v7) {
          operator new();
        }
        v24[0] = 0;
        uint64_t v8 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v24))return 0; {
        }
          }
        else
        {
          v24[0] = *v8;
          *((void *)a2 + 1) = v8 + 1;
        }
        int v12 = *((_DWORD *)a2 + 14);
        int v13 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v12 + 1;
        if (v12 >= v13) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::MergePartialFromCodedStream(v7, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v14 = *((_DWORD *)a2 + 14);
        BOOL v15 = __OFSUB__(v14, 1);
        int v16 = v14 - 1;
        if (v16 < 0 == v15) {
          *((_DWORD *)a2 + 14) = v16;
        }
        uint64_t v17 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v17 >= *((void *)a2 + 2) || *v17 != 17) {
          continue;
        }
        *((void *)a2 + 1) = v17 + 1;
        goto LABEL_34;
      case 2u:
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_21;
        }
LABEL_34:
        *(void *)uint64_t v24 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24) & 1) == 0)return 0; {
        *((void *)this + 2) = *(void *)v24;
        }
        *((_DWORD *)this + 11) |= 2u;
        int v18 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v18 >= *((void *)a2 + 2) || *v18 != 25) {
          continue;
        }
        *((void *)a2 + 1) = v18 + 1;
LABEL_38:
        *(void *)uint64_t v24 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v24))
        {
          *((void *)this + 3) = *(void *)v24;
          *((_DWORD *)this + 11) |= 4u;
          int v19 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
          if ((unint64_t)v19 < v9 && *v19 == 32)
          {
            unsigned int v10 = v19 + 1;
            *((void *)a2 + 1) = v10;
LABEL_42:
            v24[0] = 0;
            if ((unint64_t)v10 >= v9 || *v10 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v24);
              if (!result) {
                return result;
              }
              unsigned int v20 = v24[0];
              uint64_t v21 = (unsigned char *)*((void *)a2 + 1);
              unint64_t v9 = *((void *)a2 + 2);
            }
            else
            {
              unsigned int v20 = *v10;
              uint64_t v21 = v10 + 1;
              *((void *)a2 + 1) = v21;
            }
            *((unsigned char *)this + 32) = v20 != 0;
            *((_DWORD *)this + 11) |= 8u;
            if ((unint64_t)v21 < v9 && *v21 == 40)
            {
              uint64_t v11 = v21 + 1;
              *((void *)a2 + 1) = v11;
LABEL_50:
              v24[0] = 0;
              if ((unint64_t)v11 >= v9 || *v11 < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v24);
                if (!result) {
                  return result;
                }
                unsigned int v23 = v24[0];
              }
              else
              {
                unsigned int v23 = *v11;
                *((void *)a2 + 1) = v11 + 1;
              }
              if (v23 <= 2)
              {
                *((_DWORD *)this + 11) |= 0x10u;
                *((_DWORD *)this + 9) = v23;
              }
              if (*((void *)a2 + 1) == *((void *)a2 + 2)
                && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
              {
                *((_DWORD *)a2 + 8) = 0;
                uint64_t result = 1;
                *((unsigned char *)a2 + 36) = 1;
                return result;
              }
            }
          }
          continue;
        }
        return 0;
      case 3u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_38;
        }
        goto LABEL_21;
      case 4u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_21;
        }
        unsigned int v10 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        goto LABEL_42;
      case 5u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_21;
        }
        uint64_t v11 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        goto LABEL_50;
      default:
        int v6 = TagFallback & 7;
LABEL_21:
        if (v6 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 44);
  if (v6)
  {
    uint64_t v7 = *(void *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
      uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::default_instance_
                     + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 44);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_12:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned __int8 *)(v5 + 32), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 44) & 0x10) == 0) {
      return this;
    }
    goto LABEL_13;
  }
LABEL_11:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 8) != 0) {
    goto LABEL_12;
  }
LABEL_5:
  if ((v6 & 0x10) == 0) {
    return this;
  }
LABEL_13:
  uint64_t v8 = *(unsigned int *)(v5 + 36);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v8, (uint64_t)a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::ByteSize(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 44);
  if ((_BYTE)v2)
  {
    if (*((unsigned char *)this + 44))
    {
      uint64_t v5 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *)*((void *)this + 1);
      if (!v5)
      {
        CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(0);
        uint64_t v5 = *(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::default_instance_ + 8);
      }
      int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::ByteSize(v5);
      int v7 = (int)v6;
      if (v6 >= 0x80) {
        int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
      }
      else {
        int v8 = 1;
      }
      unsigned int v3 = v7 + v8 + 1;
      int v2 = *((_DWORD *)this + 11);
    }
    else
    {
      unsigned int v3 = 0;
    }
    if ((v2 & 2) != 0) {
      v3 += 9;
    }
    if ((v2 & 4) != 0) {
      v3 += 9;
    }
    if ((v2 & 8) != 0) {
      uint64_t v4 = v3 + 2;
    }
    else {
      uint64_t v4 = v3;
    }
    if ((v2 & 0x10) != 0)
    {
      unint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 9);
      if ((v9 & 0x80000000) != 0)
      {
        int v10 = 11;
      }
      else if (v9 >= 0x80)
      {
        int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9) + 1;
      }
      else
      {
        int v10 = 2;
      }
      uint64_t v4 = (v10 + v4);
    }
  }
  else
  {
    uint64_t v4 = 0;
  }
  *((_DWORD *)this + 10) = v4;
  return v4;
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::MergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 20);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 20))
    {
      unsigned int v5 = *((_DWORD *)a2 + 2);
      if (v5 >= 7) {
        __assert_rtn("set_constellation", "CoreNavigationCLPGnssMsmtAnalysisToolData.pb.h", 6927, "::CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::Constellation_IsValid(value)");
      }
      *((_DWORD *)this + 5) |= 1u;
      *((_DWORD *)this + 2) = v5;
      int v4 = *((_DWORD *)a2 + 5);
    }
    if ((v4 & 2) != 0)
    {
      int v6 = *((_DWORD *)a2 + 3);
      *((_DWORD *)this + 5) |= 2u;
      *((_DWORD *)this + 3) = v6;
    }
  }
}

void sub_18DF2F26C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::CopyFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::IsInitialized(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::Swap(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility *this, CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    uint64_t v3 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    double result = *((double *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    *((double *)a2 + 3) = result;
    LOBYTE(v2) = *((unsigned char *)this + 32);
    *((unsigned char *)this + 32) = *((unsigned char *)a2 + 32);
    *((unsigned char *)a2 + 32) = v2;
    LODWORD(v2) = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v2;
    LODWORD(v2) = *((_DWORD *)this + 11);
    *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v2;
    LODWORD(v2) = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v2;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteVisibility::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.InternalToolData.GnssMsmtAnalysisToolData.SatelliteVisibility");
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::PerBandMeasurementCount(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount *a2)
{
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)this = &unk_1EDD0FA70;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::MergeFrom(this, a2);
  return this;
}

void sub_18DF2F3F8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::MergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 20);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 20))
    {
      unsigned int v5 = *((_DWORD *)a2 + 2);
      if (v5 >= 0xD) {
        __assert_rtn("set_gnss_band", "CoreNavigationCLPGnssMsmtAnalysisToolData.pb.h", 3995, "::CoreNavigation::CLP::LogEntry::PrivateData::Band_IsValid(value)");
      }
      *((_DWORD *)this + 5) |= 1u;
      *((_DWORD *)this + 2) = v5;
      int v4 = *((_DWORD *)a2 + 5);
    }
    if ((v4 & 2) != 0)
    {
      int v6 = *((_DWORD *)a2 + 3);
      *((_DWORD *)this + 5) |= 2u;
      *((_DWORD *)this + 3) = v6;
    }
  }
}

void sub_18DF2F4E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::~PerBandMeasurementCount(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount *this)
{
  *(void *)this = &unk_1EDD0FA70;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::~PerBandMeasurementCount(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::default_instance(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount *this)
{
  return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 16) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::New(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 20)) {
    *(void *)(this + 8) = 0;
  }
  *(_DWORD *)(this + 20) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (1)
  {
    while (1)
    {
      int v4 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v4;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v4 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v6 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_15;
      }
      unsigned int v15 = 0;
      unint64_t v9 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v9 >= *((void *)a2 + 2) || *v9 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v15);
        if (!result) {
          return result;
        }
        unsigned int v10 = v15;
      }
      else
      {
        unsigned int v10 = *v9;
        *((void *)a2 + 1) = v9 + 1;
      }
      if (v10 <= 0xC)
      {
        *((_DWORD *)this + 5) |= 1u;
        *((_DWORD *)this + 2) = v10;
      }
      uint64_t v11 = (unsigned char *)*((void *)a2 + 1);
      unint64_t v7 = *((void *)a2 + 2);
      if ((unint64_t)v11 < v7 && *v11 == 16)
      {
        int v8 = v11 + 1;
        *((void *)a2 + 1) = v8;
LABEL_25:
        unsigned int v16 = 0;
        if ((unint64_t)v8 >= v7 || *v8 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v16);
          if (!result) {
            return result;
          }
          unsigned int v12 = v16;
          int v13 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v7 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v12 = *v8;
          int v13 = (unsigned __int8 *)(v8 + 1);
          *((void *)a2 + 1) = v13;
        }
        *((_DWORD *)this + 3) = v12;
        *((_DWORD *)this + 5) |= 2u;
        if (v13 == (unsigned __int8 *)v7 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v6 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        int v8 = (char *)*((void *)a2 + 1);
        unint64_t v7 = *((void *)a2 + 2);
        goto LABEL_25;
      }
    }
    else
    {
      int v6 = TagFallback & 7;
    }
LABEL_15:
    if (v6 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 20);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
  {
    uint64_t v7 = *(unsigned int *)(v5 + 12);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, (uint64_t)a2, a4);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::ByteSize(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount *this)
{
  char v2 = *((unsigned char *)this + 20);
  if (v2)
  {
    if (*((unsigned char *)this + 20))
    {
      int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
      if ((v4 & 0x80000000) != 0)
      {
        uint64_t v3 = 11;
        if ((v2 & 2) == 0) {
          goto LABEL_19;
        }
      }
      else if (v4 >= 0x80)
      {
        uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
        if ((*((_DWORD *)this + 5) & 2) == 0) {
          goto LABEL_19;
        }
      }
      else
      {
        uint64_t v3 = 2;
        if ((v2 & 2) == 0) {
          goto LABEL_19;
        }
      }
    }
    else
    {
      uint64_t v3 = 0;
      if ((*((unsigned char *)this + 20) & 2) == 0) {
        goto LABEL_19;
      }
    }
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
    if ((v5 & 0x80000000) != 0)
    {
      int v6 = 11;
    }
    else if (v5 >= 0x80)
    {
      int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    }
    else
    {
      int v6 = 2;
    }
    uint64_t v3 = (v6 + v3);
  }
  else
  {
    uint64_t v3 = 0;
  }
LABEL_19:
  *((_DWORD *)this + 4) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::CopyFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::IsInitialized(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount *this)
{
  return 1;
}

CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::Swap(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount *this, CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount *a2)
{
  if (a2 != this)
  {
    int v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    int v3 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    int v4 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v4;
    int v5 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v5;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerBandMeasurementCount::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.InternalToolData.GnssMsmtAnalysisToolData.PerBandMeasurementCount");
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::SharedCtor(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps *this)
{
  *((void *)this + 7) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::TimeStamps(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps *a2)
{
  *(void *)this = &unk_1EDD0F548;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((void *)this + 7) = 0;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::MergeFrom(this, a2);
  return this;
}

void sub_18DF2FAFC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::~TimeStamps(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps *this)
{
  *(void *)this = &unk_1EDD0F548;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::~TimeStamps(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::SharedDtor(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps *this)
{
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 2);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 3);
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = *((void *)this + 4);
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = *((void *)this + 5);
    if (v5)
    {
      int v6 = *(void (**)(void))(*(void *)v5 + 8);
      v6();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::default_instance(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps *this)
{
  return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 56) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::New(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4 = (unint64_t *)((char *)this + 8);
  while (1)
  {
    uint64_t v5 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v5 < *((void *)a2 + 2) && (*v5 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_7;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_22;
        }
        unint64_t v9 = (char *)*((void *)a2 + 1);
        unint64_t v8 = *((void *)a2 + 2);
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, v4);
          if (!result) {
            return result;
          }
          unsigned int v10 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v8 = *((void *)a2 + 2);
        }
        else
        {
          unint64_t *v4 = *v9;
          unsigned int v10 = v9 + 1;
          *((void *)a2 + 1) = v10;
        }
        int v11 = *((_DWORD *)this + 15) | 1;
        *((_DWORD *)this + 15) = v11;
        if ((unint64_t)v10 < v8 && *v10 == 18)
        {
          *((void *)a2 + 1) = v10 + 1;
          goto LABEL_30;
        }
        continue;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_22;
        }
        int v11 = *((_DWORD *)this + 15);
LABEL_30:
        *((_DWORD *)this + 15) = v11 | 2;
        int v13 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime *)*((void *)this + 2);
        if (!v13) {
          operator new();
        }
        v42[0] = 0;
        int v14 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v14 >= *((void *)a2 + 2) || *v14 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v42))return 0; {
        }
          }
        else
        {
          v42[0] = *v14;
          *((void *)a2 + 1) = v14 + 1;
        }
        int v15 = *((_DWORD *)a2 + 14);
        int v16 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v15 + 1;
        if (v15 >= v16) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::MergePartialFromCodedStream(v13, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v17 = *((_DWORD *)a2 + 14);
        BOOL v18 = __OFSUB__(v17, 1);
        int v19 = v17 - 1;
        if (v19 < 0 == v18) {
          *((_DWORD *)a2 + 14) = v19;
        }
        unsigned int v20 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v20 >= *((void *)a2 + 2) || *v20 != 26) {
          continue;
        }
        *((void *)a2 + 1) = v20 + 1;
LABEL_44:
        *((_DWORD *)this + 15) |= 4u;
        uint64_t v21 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime *)*((void *)this + 3);
        if (!v21) {
          operator new();
        }
        v42[0] = 0;
        int v22 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v22 >= *((void *)a2 + 2) || *v22 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v42))return 0; {
        }
          }
        else
        {
          v42[0] = *v22;
          *((void *)a2 + 1) = v22 + 1;
        }
        int v23 = *((_DWORD *)a2 + 14);
        int v24 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v23 + 1;
        if (v23 >= v24) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime::MergePartialFromCodedStream(v21, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v25 = *((_DWORD *)a2 + 14);
        BOOL v18 = __OFSUB__(v25, 1);
        int v26 = v25 - 1;
        if (v26 < 0 == v18) {
          *((_DWORD *)a2 + 14) = v26;
        }
        int v27 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v27 >= *((void *)a2 + 2) || *v27 != 34) {
          continue;
        }
        *((void *)a2 + 1) = v27 + 1;
LABEL_58:
        *((_DWORD *)this + 15) |= 8u;
        int v28 = (CoreNavigation::CLP::LogEntry::Raven::TimeStruct *)*((void *)this + 4);
        if (!v28) {
          operator new();
        }
        v42[0] = 0;
        unsigned int v29 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v29 >= *((void *)a2 + 2) || *v29 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v42))return 0; {
        }
          }
        else
        {
          v42[0] = *v29;
          *((void *)a2 + 1) = v29 + 1;
        }
        int v30 = *((_DWORD *)a2 + 14);
        int v31 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v30 + 1;
        if (v30 >= v31) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::TimeStruct::MergePartialFromCodedStream(v28, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v32 = *((_DWORD *)a2 + 14);
        BOOL v18 = __OFSUB__(v32, 1);
        int v33 = v32 - 1;
        if (v33 < 0 == v18) {
          *((_DWORD *)a2 + 14) = v33;
        }
        int v34 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v34 >= *((void *)a2 + 2) || *v34 != 42) {
          continue;
        }
        *((void *)a2 + 1) = v34 + 1;
LABEL_72:
        *((_DWORD *)this + 15) |= 0x10u;
        int v35 = (CoreNavigation::CLP::LogEntry::Raven::TimeStruct *)*((void *)this + 5);
        if (!v35) {
          operator new();
        }
        v42[0] = 0;
        uint64_t v36 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v36 >= *((void *)a2 + 2) || *v36 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v42))return 0; {
        }
          }
        else
        {
          v42[0] = *v36;
          *((void *)a2 + 1) = v36 + 1;
        }
        int v37 = *((_DWORD *)a2 + 14);
        int v38 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v37 + 1;
        if (v37 >= v38) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::Raven::TimeStruct::MergePartialFromCodedStream(v35, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v39 = *((_DWORD *)a2 + 14);
        BOOL v18 = __OFSUB__(v39, 1);
        int v40 = v39 - 1;
        if (v40 < 0 == v18) {
          *((_DWORD *)a2 + 14) = v40;
        }
        int v41 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v41 >= *((void *)a2 + 2) || *v41 != 49) {
          continue;
        }
        *((void *)a2 + 1) = v41 + 1;
LABEL_86:
        *(void *)int v42 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v42) & 1) == 0)return 0; {
        *((void *)this + 6) = *(void *)v42;
        }
        *((_DWORD *)this + 15) |= 0x20u;
        if (*((void *)a2 + 1) == *((void *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
        break;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_44;
        }
        goto LABEL_22;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_58;
        }
        goto LABEL_22;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_72;
        }
        goto LABEL_22;
      case 6u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_22;
        }
        goto LABEL_86;
      default:
        int v7 = TagFallback & 7;
LABEL_22:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 60);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 60);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v7 = *(void *)(v5 + 16);
  if (!v7)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
    uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::default_instance_
                   + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
LABEL_12:
  uint64_t v8 = *(void *)(v5 + 24);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
    uint64_t v8 = *(void *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::default_instance_
                   + 24);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
LABEL_15:
  uint64_t v9 = *(void *)(v5 + 32);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
    uint64_t v9 = *(void *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::default_instance_
                   + 32);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v9, a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      return this;
    }
    goto LABEL_21;
  }
LABEL_18:
  uint64_t v10 = *(void *)(v5 + 40);
  if (!v10)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
    uint64_t v10 = *(void *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::default_instance_
                    + 40);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v10, a2, a4);
  if ((*(_DWORD *)(v5 + 60) & 0x20) != 0)
  {
LABEL_21:
    double v11 = *(double *)(v5 + 48);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, v11, a3);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::ByteSize(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 60);
  if (!(_BYTE)v2)
  {
    uint64_t result = 0;
    goto LABEL_38;
  }
  if (*((unsigned char *)this + 60))
  {
    unsigned int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                     + 1))
       + 1;
    int v2 = *((_DWORD *)this + 15);
    if ((v2 & 2) == 0) {
      goto LABEL_13;
    }
  }
  else
  {
    unsigned int v3 = 0;
    if ((*((unsigned char *)this + 60) & 2) == 0) {
      goto LABEL_13;
    }
  }
  uint64_t v5 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime *)*((void *)this + 2);
  if (!v5)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(0);
    uint64_t v5 = *(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::default_instance_
                                                                           + 16);
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::ByteSize(v5);
  int v7 = (int)v6;
  if (v6 >= 0x80) {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
  }
  else {
    int v8 = 1;
  }
  v3 += v7 + v8 + 1;
  int v2 = *((_DWORD *)this + 15);
LABEL_13:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_15;
    }
LABEL_23:
    int v13 = (CoreNavigation::CLP::LogEntry::Raven::TimeStruct *)*((void *)this + 4);
    if (!v13)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(0);
      int v13 = *(CoreNavigation::CLP::LogEntry::Raven::TimeStruct **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::default_instance_
                                                                 + 32);
    }
    int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::TimeStruct::ByteSize(v13);
    int v15 = (int)v14;
    if (v14 >= 0x80) {
      int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14);
    }
    else {
      int v16 = 1;
    }
    v3 += v15 + v16 + 1;
    int v2 = *((_DWORD *)this + 15);
    if ((v2 & 0x10) == 0) {
      goto LABEL_35;
    }
    goto LABEL_29;
  }
  uint64_t v9 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime *)*((void *)this + 3);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(0);
    uint64_t v9 = *(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::default_instance_
                                                                           + 24);
  }
  uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime::ByteSize(v9);
  int v11 = (int)v10;
  if (v10 >= 0x80) {
    int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
  }
  else {
    int v12 = 1;
  }
  v3 += v11 + v12 + 1;
  int v2 = *((_DWORD *)this + 15);
  if ((v2 & 8) != 0) {
    goto LABEL_23;
  }
LABEL_15:
  if ((v2 & 0x10) != 0)
  {
LABEL_29:
    int v17 = (CoreNavigation::CLP::LogEntry::Raven::TimeStruct *)*((void *)this + 5);
    if (!v17)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(0);
      int v17 = *(CoreNavigation::CLP::LogEntry::Raven::TimeStruct **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::default_instance_
                                                                 + 40);
    }
    BOOL v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::Raven::TimeStruct::ByteSize(v17);
    int v19 = (int)v18;
    if (v18 >= 0x80) {
      int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18);
    }
    else {
      int v20 = 1;
    }
    v3 += v19 + v20 + 1;
    int v2 = *((_DWORD *)this + 15);
  }
LABEL_35:
  if ((v2 & 0x20) != 0) {
    uint64_t result = v3 + 9;
  }
  else {
    uint64_t result = v3;
  }
LABEL_38:
  *((_DWORD *)this + 14) = result;
  return result;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::CopyFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::IsInitialized(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::Swap(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps *this, CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    uint64_t v3 = *((void *)this + 2);
    uint64_t v4 = *((void *)a2 + 2);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)this + 2) = v4;
    *((void *)a2 + 1) = v2;
    *((void *)a2 + 2) = v3;
    uint64_t v5 = *((void *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v5;
    uint64_t v6 = *((void *)this + 4);
    *((void *)this + 4) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v6;
    uint64_t v7 = *((void *)this + 5);
    *((void *)this + 5) = *((void *)a2 + 5);
    *((void *)a2 + 5) = v7;
    double result = *((double *)this + 6);
    *((void *)this + 6) = *((void *)a2 + 6);
    *((double *)a2 + 6) = result;
    LODWORD(v7) = *((_DWORD *)this + 15);
    *((_DWORD *)this + 15) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v7;
    LODWORD(v7) = *((_DWORD *)this + 14);
    *((_DWORD *)this + 14) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v7;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::TimeStamps::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.InternalToolData.GnssMsmtAnalysisToolData.TimeStamps");
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets::SharedCtor(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets *this)
{
  double result = 0.0;
  *(_OWORD *)((char *)this + 36) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets::ClockOffsets(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets *a2)
{
  *(void *)this = &unk_1EDD0F5C0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 36) = 0u;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets::MergeFrom(this, a2);
  return this;
}

void sub_18DF30864(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets::~ClockOffsets(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets *this)
{
  *(void *)this = &unk_1EDD0F5C0;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets::~ClockOffsets(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets::default_instance(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets *this)
{
  return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 44) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets::New(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (2)
  {
    uint64_t v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_29;
        }
        *(void *)int v16 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v16) & 1) == 0)return 0; {
        *((void *)this + 1) = *(void *)v16;
        }
        *((_DWORD *)this + 12) |= 1u;
        uint64_t v7 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v7 >= *((void *)a2 + 2) || *v7 != 17) {
          continue;
        }
        *((void *)a2 + 1) = v7 + 1;
        goto LABEL_14;
      case 2u:
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_29;
        }
LABEL_14:
        *(void *)int v16 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v16) & 1) == 0)return 0; {
        *((void *)this + 2) = *(void *)v16;
        }
        *((_DWORD *)this + 12) |= 2u;
        int v8 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 != 25) {
          continue;
        }
        *((void *)a2 + 1) = v8 + 1;
LABEL_19:
        *(void *)int v16 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v16) & 1) == 0)return 0; {
        *((void *)this + 3) = *(void *)v16;
        }
        *((_DWORD *)this + 12) |= 4u;
        uint64_t v9 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v9 >= *((void *)a2 + 2) || *v9 != 33) {
          continue;
        }
        *((void *)a2 + 1) = v9 + 1;
LABEL_24:
        *(void *)int v16 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v16))
        {
          *((void *)this + 4) = *(void *)v16;
          *((_DWORD *)this + 12) |= 8u;
          int v11 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v10 = *((void *)a2 + 2);
          if ((unint64_t)v11 < v10 && *v11 == 40)
          {
            int v12 = v11 + 1;
            *((void *)a2 + 1) = v12;
LABEL_33:
            v16[0] = 0;
            if ((unint64_t)v12 >= v10 || *v12 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v16);
              if (!result) {
                return result;
              }
              unsigned int v13 = v16[0];
              int v14 = (unsigned __int8 *)*((void *)a2 + 1);
              unint64_t v10 = *((void *)a2 + 2);
            }
            else
            {
              unsigned int v13 = *v12;
              int v14 = (unsigned __int8 *)(v12 + 1);
              *((void *)a2 + 1) = v14;
            }
            *((_DWORD *)this + 10) = v13;
            *((_DWORD *)this + 12) |= 0x10u;
            if (v14 == (unsigned __int8 *)v10 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
            {
              *((_DWORD *)a2 + 8) = 0;
              uint64_t result = 1;
              *((unsigned char *)a2 + 36) = 1;
              return result;
            }
          }
          continue;
        }
        return 0;
      case 3u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_19;
        }
        goto LABEL_29;
      case 4u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_24;
        }
        goto LABEL_29;
      case 5u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_29;
        }
        int v12 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
        goto LABEL_33;
      default:
        int v6 = TagFallback & 7;
LABEL_29:
        if (v6 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 48);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
    int v6 = *(_DWORD *)(v5 + 48);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(double *)(v5 + 32), a3);
    if ((*(_DWORD *)(v5 + 48) & 0x10) == 0) {
      return this;
    }
    goto LABEL_11;
  }
LABEL_9:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 8) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v6 & 0x10) == 0) {
    return this;
  }
LABEL_11:
  uint64_t v7 = *(unsigned int *)(v5 + 40);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v7, (uint64_t)a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets::ByteSize(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets *this)
{
  int v2 = *((unsigned __int8 *)this + 48);
  if (*((unsigned char *)this + 48))
  {
    unsigned int v3 = (v2 << 31 >> 31) & 9;
    if ((v2 & 2) != 0) {
      v3 += 9;
    }
    if ((v2 & 4) != 0) {
      v3 += 9;
    }
    if ((v2 & 8) != 0) {
      uint64_t v4 = v3 + 9;
    }
    else {
      uint64_t v4 = v3;
    }
    if ((v2 & 0x10) != 0)
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
      if ((v5 & 0x80000000) != 0)
      {
        int v6 = 11;
      }
      else if (v5 >= 0x80)
      {
        int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
      }
      else
      {
        int v6 = 2;
      }
      uint64_t v4 = (v6 + v4);
    }
  }
  else
  {
    uint64_t v4 = 0;
  }
  *((_DWORD *)this + 11) = v4;
  return v4;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets::CopyFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets::IsInitialized(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets::Swap(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets *this, CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    uint64_t v3 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    uint64_t v4 = *((void *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v4;
    double result = *((double *)this + 4);
    *((void *)this + 4) = *((void *)a2 + 4);
    *((double *)a2 + 4) = result;
    int v6 = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v6;
    int v7 = *((_DWORD *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v7;
    int v8 = *((_DWORD *)this + 11);
    *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v8;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.InternalToolData.GnssMsmtAnalysisToolData.ClockOffsets");
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::SharedCtor(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData *this)
{
  *((void *)this + 31) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 232) = 0u;
  *(_OWORD *)((char *)this + 216) = 0u;
  *(_OWORD *)((char *)this + 200) = 0u;
  *(_OWORD *)((char *)this + 184) = 0u;
  *(_OWORD *)((char *)this + 168) = 0u;
  *(_OWORD *)((char *)this + 152) = 0u;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::MeasurementData(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData *a2)
{
  *(void *)this = &unk_1EDD0F7A0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *(_OWORD *)((char *)this + 104) = 0u;
  *(_OWORD *)((char *)this + 120) = 0u;
  *(_OWORD *)((char *)this + 136) = 0u;
  *(_OWORD *)((char *)this + 152) = 0u;
  *(_OWORD *)((char *)this + 168) = 0u;
  *(_OWORD *)((char *)this + 184) = 0u;
  *(_OWORD *)((char *)this + 200) = 0u;
  *(_OWORD *)((char *)this + 216) = 0u;
  *(_OWORD *)((char *)this + 232) = 0u;
  *((void *)this + 31) = 0;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::MergeFrom(this, a2);
  return this;
}

void sub_18DF3108C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::MergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v18);
  }
  unsigned int v5 = *((_DWORD *)a2 + 63);
  if (!(_BYTE)v5) {
    goto LABEL_13;
  }
  if (v5)
  {
    *((_DWORD *)this + 63) |= 1u;
    int v6 = (CoreNavigation::CLP::LogEntry::PrivateData::SvId *)*((void *)this + 1);
    if (!v6) {
      operator new();
    }
    int v7 = (const CoreNavigation::CLP::LogEntry::PrivateData::SvId *)*((void *)a2 + 1);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
      int v7 = *(const CoreNavigation::CLP::LogEntry::PrivateData::SvId **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::default_instance_
                                                                      + 8);
    }
    CoreNavigation::CLP::LogEntry::PrivateData::SvId::MergeFrom(v6, v7);
    unsigned int v5 = *((_DWORD *)a2 + 63);
    if ((v5 & 2) == 0)
    {
LABEL_6:
      if ((v5 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_29;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_6;
  }
  int v8 = *((_DWORD *)a2 + 16);
  *((_DWORD *)this + 63) |= 2u;
  *((_DWORD *)this + 16) = v8;
  unsigned int v5 = *((_DWORD *)a2 + 63);
  if ((v5 & 4) == 0)
  {
LABEL_7:
    if ((v5 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_34;
  }
LABEL_29:
  *((_DWORD *)this + 63) |= 4u;
  uint64_t v9 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime *)*((void *)this + 2);
  if (!v9) {
    operator new();
  }
  unint64_t v10 = (const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime *)*((void *)a2 + 2);
  if (!v10)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
    unint64_t v10 = *(const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::default_instance_
                                                                                  + 16);
  }
  double result = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::MergeFrom(v9, v10);
  unsigned int v5 = *((_DWORD *)a2 + 63);
  if ((v5 & 8) == 0)
  {
LABEL_8:
    if ((v5 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_35;
  }
LABEL_34:
  double result = *((double *)a2 + 3);
  *((_DWORD *)this + 63) |= 8u;
  *((double *)this + 3) = result;
  unsigned int v5 = *((_DWORD *)a2 + 63);
  if ((v5 & 0x10) == 0)
  {
LABEL_9:
    if ((v5 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_36:
    *((_DWORD *)this + 63) |= 0x20u;
    int v11 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState *)*((void *)this + 5);
    if (!v11) {
      operator new();
    }
    int v12 = (const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState *)*((void *)a2 + 5);
    if (!v12)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
      int v12 = *(const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::default_instance_ + 40);
    }
    double result = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::MergeFrom(v11, v12);
    unsigned int v5 = *((_DWORD *)a2 + 63);
    if ((v5 & 0x40) == 0)
    {
LABEL_11:
      if ((v5 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_41;
  }
LABEL_35:
  double result = *((double *)a2 + 4);
  *((_DWORD *)this + 63) |= 0x10u;
  *((double *)this + 4) = result;
  unsigned int v5 = *((_DWORD *)a2 + 63);
  if ((v5 & 0x20) != 0) {
    goto LABEL_36;
  }
LABEL_10:
  if ((v5 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_41:
  *((_DWORD *)this + 63) |= 0x40u;
  unsigned int v13 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState *)*((void *)this + 6);
  if (!v13) {
    operator new();
  }
  int v14 = (const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState *)*((void *)a2 + 6);
  if (!v14)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
    int v14 = *(const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::default_instance_ + 48);
  }
  double result = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::MergeFrom(v13, v14);
  unsigned int v5 = *((_DWORD *)a2 + 63);
  if ((v5 & 0x80) != 0)
  {
LABEL_12:
    double result = *((double *)a2 + 7);
    *((_DWORD *)this + 63) |= 0x80u;
    *((double *)this + 7) = result;
    unsigned int v5 = *((_DWORD *)a2 + 63);
  }
LABEL_13:
  if ((v5 & 0xFF00) == 0) {
    goto LABEL_58;
  }
  if ((v5 & 0x100) != 0)
  {
    double result = *((double *)a2 + 9);
    *((_DWORD *)this + 63) |= 0x100u;
    *((double *)this + 9) = result;
    unsigned int v5 = *((_DWORD *)a2 + 63);
    if ((v5 & 0x200) == 0)
    {
LABEL_16:
      if ((v5 & 0x400) == 0) {
        goto LABEL_17;
      }
      goto LABEL_49;
    }
  }
  else if ((v5 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  double result = *((double *)a2 + 10);
  *((_DWORD *)this + 63) |= 0x200u;
  *((double *)this + 10) = result;
  unsigned int v5 = *((_DWORD *)a2 + 63);
  if ((v5 & 0x400) == 0)
  {
LABEL_17:
    if ((v5 & 0x800) == 0) {
      goto LABEL_18;
    }
    goto LABEL_50;
  }
LABEL_49:
  double result = *((double *)a2 + 11);
  *((_DWORD *)this + 63) |= 0x400u;
  *((double *)this + 11) = result;
  unsigned int v5 = *((_DWORD *)a2 + 63);
  if ((v5 & 0x800) == 0)
  {
LABEL_18:
    if ((v5 & 0x1000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_51;
  }
LABEL_50:
  double result = *((double *)a2 + 12);
  *((_DWORD *)this + 63) |= 0x800u;
  *((double *)this + 12) = result;
  unsigned int v5 = *((_DWORD *)a2 + 63);
  if ((v5 & 0x1000) == 0)
  {
LABEL_19:
    if ((v5 & 0x2000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_52;
  }
LABEL_51:
  double result = *((double *)a2 + 13);
  *((_DWORD *)this + 63) |= 0x1000u;
  *((double *)this + 13) = result;
  unsigned int v5 = *((_DWORD *)a2 + 63);
  if ((v5 & 0x2000) == 0)
  {
LABEL_20:
    if ((v5 & 0x4000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_54;
  }
LABEL_52:
  unsigned int v15 = *((_DWORD *)a2 + 17);
  if (v15 >= 5) {
    __assert_rtn("set_multipath_indicator", "CoreNavigationCLPGnssMsmtAnalysisToolData.pb.h", 4740, "::CoreNavigation::CLP::LogEntry::PrivateData::MultipathIndicator_IsValid(value)");
  }
  *((_DWORD *)this + 63) |= 0x2000u;
  *((_DWORD *)this + 17) = v15;
  unsigned int v5 = *((_DWORD *)a2 + 63);
  if ((v5 & 0x4000) == 0)
  {
LABEL_21:
    if ((v5 & 0x8000) == 0) {
      goto LABEL_58;
    }
    goto LABEL_56;
  }
LABEL_54:
  unsigned int v16 = *((_DWORD *)a2 + 28);
  if (v16 >= 3) {
    __assert_rtn("set_line_of_sight", "CoreNavigationCLPGnssMsmtAnalysisToolData.pb.h", 4763, "::CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::LineOfSight_IsValid(value)");
  }
  *((_DWORD *)this + 63) |= 0x4000u;
  *((_DWORD *)this + 28) = v16;
  unsigned int v5 = *((_DWORD *)a2 + 63);
  if ((v5 & 0x8000) != 0)
  {
LABEL_56:
    unsigned int v17 = *((_DWORD *)a2 + 29);
    if (v17 >= 0xD) {
      __assert_rtn("set_gnss_band", "CoreNavigationCLPGnssMsmtAnalysisToolData.pb.h", 4786, "::CoreNavigation::CLP::LogEntry::PrivateData::Band_IsValid(value)");
    }
    *((_DWORD *)this + 63) |= 0x8000u;
    *((_DWORD *)this + 29) = v17;
    unsigned int v5 = *((_DWORD *)a2 + 63);
  }
LABEL_58:
  if ((v5 & 0xFF0000) == 0) {
    goto LABEL_68;
  }
  if ((v5 & 0x10000) != 0)
  {
    double result = *((double *)a2 + 15);
    *((_DWORD *)this + 63) |= 0x10000u;
    *((double *)this + 15) = result;
    unsigned int v5 = *((_DWORD *)a2 + 63);
    if ((v5 & 0x20000) == 0)
    {
LABEL_61:
      if ((v5 & 0x40000) == 0) {
        goto LABEL_62;
      }
      goto LABEL_80;
    }
  }
  else if ((v5 & 0x20000) == 0)
  {
    goto LABEL_61;
  }
  double result = *((double *)a2 + 16);
  *((_DWORD *)this + 63) |= 0x20000u;
  *((double *)this + 16) = result;
  unsigned int v5 = *((_DWORD *)a2 + 63);
  if ((v5 & 0x40000) == 0)
  {
LABEL_62:
    if ((v5 & 0x80000) == 0) {
      goto LABEL_63;
    }
    goto LABEL_81;
  }
LABEL_80:
  double result = *((double *)a2 + 17);
  *((_DWORD *)this + 63) |= 0x40000u;
  *((double *)this + 17) = result;
  unsigned int v5 = *((_DWORD *)a2 + 63);
  if ((v5 & 0x80000) == 0)
  {
LABEL_63:
    if ((v5 & 0x100000) == 0) {
      goto LABEL_64;
    }
    goto LABEL_82;
  }
LABEL_81:
  double result = *((double *)a2 + 18);
  *((_DWORD *)this + 63) |= 0x80000u;
  *((double *)this + 18) = result;
  unsigned int v5 = *((_DWORD *)a2 + 63);
  if ((v5 & 0x100000) == 0)
  {
LABEL_64:
    if ((v5 & 0x200000) == 0) {
      goto LABEL_65;
    }
    goto LABEL_83;
  }
LABEL_82:
  double result = *((double *)a2 + 19);
  *((_DWORD *)this + 63) |= 0x100000u;
  *((double *)this + 19) = result;
  unsigned int v5 = *((_DWORD *)a2 + 63);
  if ((v5 & 0x200000) == 0)
  {
LABEL_65:
    if ((v5 & 0x400000) == 0) {
      goto LABEL_66;
    }
    goto LABEL_84;
  }
LABEL_83:
  double result = *((double *)a2 + 20);
  *((_DWORD *)this + 63) |= 0x200000u;
  *((double *)this + 20) = result;
  unsigned int v5 = *((_DWORD *)a2 + 63);
  if ((v5 & 0x400000) == 0)
  {
LABEL_66:
    if ((v5 & 0x800000) == 0) {
      goto LABEL_68;
    }
    goto LABEL_67;
  }
LABEL_84:
  double result = *((double *)a2 + 21);
  *((_DWORD *)this + 63) |= 0x400000u;
  *((double *)this + 21) = result;
  unsigned int v5 = *((_DWORD *)a2 + 63);
  if ((v5 & 0x800000) != 0)
  {
LABEL_67:
    double result = *((double *)a2 + 22);
    *((_DWORD *)this + 63) |= 0x800000u;
    *((double *)this + 22) = result;
    unsigned int v5 = *((_DWORD *)a2 + 63);
  }
LABEL_68:
  if (!HIBYTE(v5)) {
    return result;
  }
  if ((v5 & 0x1000000) != 0)
  {
    double result = *((double *)a2 + 23);
    *((_DWORD *)this + 63) |= 0x1000000u;
    *((double *)this + 23) = result;
    unsigned int v5 = *((_DWORD *)a2 + 63);
    if ((v5 & 0x2000000) == 0)
    {
LABEL_71:
      if ((v5 & 0x4000000) == 0) {
        goto LABEL_72;
      }
      goto LABEL_88;
    }
  }
  else if ((v5 & 0x2000000) == 0)
  {
    goto LABEL_71;
  }
  double result = *((double *)a2 + 24);
  *((_DWORD *)this + 63) |= 0x2000000u;
  *((double *)this + 24) = result;
  unsigned int v5 = *((_DWORD *)a2 + 63);
  if ((v5 & 0x4000000) == 0)
  {
LABEL_72:
    if ((v5 & 0x8000000) == 0) {
      goto LABEL_73;
    }
    goto LABEL_89;
  }
LABEL_88:
  double result = *((double *)a2 + 25);
  *((_DWORD *)this + 63) |= 0x4000000u;
  *((double *)this + 25) = result;
  unsigned int v5 = *((_DWORD *)a2 + 63);
  if ((v5 & 0x8000000) == 0)
  {
LABEL_73:
    if ((v5 & 0x10000000) == 0) {
      goto LABEL_74;
    }
    goto LABEL_90;
  }
LABEL_89:
  double result = *((double *)a2 + 26);
  *((_DWORD *)this + 63) |= 0x8000000u;
  *((double *)this + 26) = result;
  unsigned int v5 = *((_DWORD *)a2 + 63);
  if ((v5 & 0x10000000) == 0)
  {
LABEL_74:
    if ((v5 & 0x20000000) == 0) {
      goto LABEL_75;
    }
    goto LABEL_91;
  }
LABEL_90:
  double result = *((double *)a2 + 27);
  *((_DWORD *)this + 63) |= 0x10000000u;
  *((double *)this + 27) = result;
  unsigned int v5 = *((_DWORD *)a2 + 63);
  if ((v5 & 0x20000000) == 0)
  {
LABEL_75:
    if ((v5 & 0x40000000) == 0) {
      goto LABEL_76;
    }
    goto LABEL_92;
  }
LABEL_91:
  double result = *((double *)a2 + 28);
  *((_DWORD *)this + 63) |= 0x20000000u;
  *((double *)this + 28) = result;
  unsigned int v5 = *((_DWORD *)a2 + 63);
  if ((v5 & 0x40000000) == 0)
  {
LABEL_76:
    if ((v5 & 0x80000000) == 0) {
      return result;
    }
LABEL_93:
    double result = *((double *)a2 + 30);
    *((_DWORD *)this + 63) |= 0x80000000;
    *((double *)this + 30) = result;
    return result;
  }
LABEL_92:
  double result = *((double *)a2 + 29);
  *((_DWORD *)this + 63) |= 0x40000000u;
  *((double *)this + 29) = result;
  if ((*((_DWORD *)a2 + 63) & 0x80000000) != 0) {
    goto LABEL_93;
  }
  return result;
}

void sub_18DF31750(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::~MeasurementData(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData *this)
{
  *(void *)this = &unk_1EDD0F7A0;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::~MeasurementData(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::SharedDtor(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData *this)
{
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 2);
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = *((void *)this + 5);
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = *((void *)this + 6);
    if (v5)
    {
      int v6 = *(void (**)(void))(*(void *)v5 + 8);
      v6();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::default_instance(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData *this)
{
  return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 248) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::New(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::Clear(uint64_t this)
{
  uint64_t v1 = this;
  unsigned int v2 = *(_DWORD *)(this + 252);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      this = *(void *)(this + 8);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::PrivateData::SvId::Clear(this);
        unsigned int v2 = *(_DWORD *)(v1 + 252);
      }
    }
    *(_DWORD *)(v1 + 64) = 0;
    if ((v2 & 4) != 0)
    {
      uint64_t v3 = *(void *)(v1 + 16);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 24))
        {
          *(_DWORD *)(v3 + 16) = 0;
          *(void *)(v3 + 8) = 0;
        }
        *(_DWORD *)(v3 + 24) = 0;
        unsigned int v2 = *(_DWORD *)(v1 + 252);
      }
    }
    *(void *)(v1 + 24) = 0;
    *(void *)(v1 + 32) = 0;
    if ((v2 & 0x20) != 0)
    {
      this = *(void *)(v1 + 40);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::Clear(this);
        unsigned int v2 = *(_DWORD *)(v1 + 252);
      }
    }
    if ((v2 & 0x40) != 0)
    {
      this = *(void *)(v1 + 48);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::Clear(this);
        unsigned int v2 = *(_DWORD *)(v1 + 252);
      }
    }
    *(void *)(v1 + 56) = 0;
  }
  if ((v2 & 0xFF00) != 0)
  {
    *(_DWORD *)(v1 + 116) = 0;
    *(_OWORD *)(v1 + 100) = 0u;
    *(_OWORD *)(v1 + 84) = 0u;
    *(_OWORD *)(v1 + 68) = 0u;
  }
  if ((v2 & 0xFF0000) != 0)
  {
    *(_OWORD *)(v1 + 168) = 0u;
    *(_OWORD *)(v1 + 152) = 0u;
    *(_OWORD *)(v1 + 136) = 0u;
    *(_OWORD *)(v1 + 120) = 0u;
  }
  if (HIBYTE(v2))
  {
    *(_OWORD *)(v1 + 232) = 0u;
    *(_OWORD *)(v1 + 216) = 0u;
    *(_OWORD *)(v1 + 200) = 0u;
    *(_OWORD *)(v1 + 184) = 0u;
  }
  *(_DWORD *)(v1 + 252) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::Clear(uint64_t this)
{
  LOBYTE(v1) = *(unsigned char *)(this + 44);
  if ((_BYTE)v1)
  {
    if (*(unsigned char *)(this + 44))
    {
      uint64_t v2 = *(void *)(this + 8);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 36))
        {
          *(void *)(v2 + 8) = 0;
          *(void *)(v2 + 16) = 0;
          *(void *)(v2 + 24) = 0;
        }
        *(_DWORD *)(v2 + 36) = 0;
        int v1 = *(_DWORD *)(this + 44);
      }
    }
    if ((v1 & 2) != 0)
    {
      uint64_t v3 = *(void *)(this + 16);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
          *(void *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        int v1 = *(_DWORD *)(this + 44);
      }
    }
    if ((v1 & 4) != 0)
    {
      uint64_t v4 = *(void *)(this + 24);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 36))
        {
          *(void *)(v4 + 8) = 0;
          *(void *)(v4 + 16) = 0;
          *(void *)(v4 + 24) = 0;
        }
        *(_DWORD *)(v4 + 36) = 0;
        int v1 = *(_DWORD *)(this + 44);
      }
    }
    if ((v1 & 8) != 0)
    {
      uint64_t v5 = *(void *)(this + 32);
      if (v5)
      {
        if (*(unsigned char *)(v5 + 48))
        {
          *(_DWORD *)(v5 + 40) = 0;
          *(_OWORD *)(v5 + 24) = 0u;
          *(_OWORD *)(v5 + 8) = 0u;
        }
        *(_DWORD *)(v5 + 48) = 0;
      }
    }
  }
  *(_DWORD *)(this + 44) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::Clear(uint64_t this)
{
  LOBYTE(v1) = *(unsigned char *)(this + 44);
  if ((_BYTE)v1)
  {
    *(void *)(this + 8) = 0;
    *(void *)(this + 16) = 0;
    if ((v1 & 4) != 0)
    {
      uint64_t v2 = *(void *)(this + 24);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 36))
        {
          *(void *)(v2 + 8) = 0;
          *(void *)(v2 + 16) = 0;
          *(void *)(v2 + 24) = 0;
        }
        *(_DWORD *)(v2 + 36) = 0;
        int v1 = *(_DWORD *)(this + 44);
      }
    }
    if ((v1 & 8) != 0)
    {
      uint64_t v3 = *(void *)(this + 32);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
          *(void *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
      }
    }
  }
  *(_DWORD *)(this + 44) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (2)
  {
    uint64_t v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_75;
        }
        *((_DWORD *)this + 63) |= 1u;
        int v7 = (CoreNavigation::CLP::LogEntry::PrivateData::SvId *)*((void *)this + 1);
        if (!v7) {
          operator new();
        }
        v78[0] = 0;
        int v8 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v78))return 0; {
        }
          }
        else
        {
          v78[0] = *v8;
          *((void *)a2 + 1) = v8 + 1;
        }
        int v19 = *((_DWORD *)a2 + 14);
        int v20 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v19 + 1;
        if (v19 >= v20) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::PrivateData::SvId::MergePartialFromCodedStream(v7, a2)
          || !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v21 = *((_DWORD *)a2 + 14);
        BOOL v22 = __OFSUB__(v21, 1);
        int v23 = v21 - 1;
        if (v23 < 0 == v22) {
          *((_DWORD *)a2 + 14) = v23;
        }
        int v24 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        if ((unint64_t)v24 >= v9 || *v24 != 16) {
          continue;
        }
        unint64_t v10 = v24 + 1;
        *((void *)a2 + 1) = v10;
        goto LABEL_87;
      case 2u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_75;
        }
        unint64_t v10 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
LABEL_87:
        v78[0] = 0;
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v78);
          if (!result) {
            return result;
          }
          unsigned int v25 = v78[0];
          int v26 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v9 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v25 = *v10;
          int v26 = v10 + 1;
          *((void *)a2 + 1) = v26;
        }
        *((_DWORD *)this + 16) = v25;
        int v11 = *((_DWORD *)this + 63) | 2;
        *((_DWORD *)this + 63) = v11;
        if ((unint64_t)v26 >= v9 || *v26 != 26) {
          continue;
        }
        *((void *)a2 + 1) = v26 + 1;
LABEL_95:
        *((_DWORD *)this + 63) = v11 | 4;
        int v28 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime *)*((void *)this + 2);
        if (!v28) {
          operator new();
        }
        v78[0] = 0;
        unsigned int v29 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v29 >= *((void *)a2 + 2) || *v29 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v78))return 0; {
        }
          }
        else
        {
          v78[0] = *v29;
          *((void *)a2 + 1) = v29 + 1;
        }
        int v30 = *((_DWORD *)a2 + 14);
        int v31 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v30 + 1;
        if (v30 >= v31) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::MergePartialFromCodedStream(v28, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v32 = *((_DWORD *)a2 + 14);
        BOOL v22 = __OFSUB__(v32, 1);
        int v33 = v32 - 1;
        if (v33 < 0 == v22) {
          *((_DWORD *)a2 + 14) = v33;
        }
        int v34 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v34 >= *((void *)a2 + 2) || *v34 != 33) {
          continue;
        }
        *((void *)a2 + 1) = v34 + 1;
LABEL_109:
        *(void *)uint64_t v78 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v78) & 1) == 0)return 0; {
        *((void *)this + 3) = *(void *)v78;
        }
        *((_DWORD *)this + 63) |= 8u;
        int v35 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v35 >= *((void *)a2 + 2) || *v35 != 41) {
          continue;
        }
        *((void *)a2 + 1) = v35 + 1;
LABEL_113:
        *(void *)uint64_t v78 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v78) & 1) == 0)return 0; {
        *((void *)this + 4) = *(void *)v78;
        }
        int v12 = *((_DWORD *)this + 63) | 0x10;
        *((_DWORD *)this + 63) = v12;
        uint64_t v36 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v36 >= *((void *)a2 + 2) || *v36 != 50) {
          continue;
        }
        *((void *)a2 + 1) = v36 + 1;
LABEL_117:
        *((_DWORD *)this + 63) = v12 | 0x20;
        int v37 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState *)*((void *)this + 5);
        if (!v37) {
          operator new();
        }
        v78[0] = 0;
        int v38 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v38 >= *((void *)a2 + 2) || *v38 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v78))return 0; {
        }
          }
        else
        {
          v78[0] = *v38;
          *((void *)a2 + 1) = v38 + 1;
        }
        int v39 = *((_DWORD *)a2 + 14);
        int v40 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v39 + 1;
        if (v39 >= v40) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::MergePartialFromCodedStream(v37, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v41 = *((_DWORD *)a2 + 14);
        BOOL v22 = __OFSUB__(v41, 1);
        int v42 = v41 - 1;
        if (v42 < 0 == v22) {
          *((_DWORD *)a2 + 14) = v42;
        }
        int v43 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v43 >= *((void *)a2 + 2) || *v43 != 58) {
          continue;
        }
        *((void *)a2 + 1) = v43 + 1;
LABEL_131:
        *((_DWORD *)this + 63) |= 0x40u;
        int v44 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState *)*((void *)this + 6);
        if (!v44) {
          operator new();
        }
        v78[0] = 0;
        int v45 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v45 >= *((void *)a2 + 2) || *v45 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v78))return 0; {
        }
          }
        else
        {
          v78[0] = *v45;
          *((void *)a2 + 1) = v45 + 1;
        }
        int v46 = *((_DWORD *)a2 + 14);
        int v47 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v46 + 1;
        if (v46 >= v47) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::MergePartialFromCodedStream(v44, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v48 = *((_DWORD *)a2 + 14);
        BOOL v22 = __OFSUB__(v48, 1);
        int v49 = v48 - 1;
        if (v49 < 0 == v22) {
          *((_DWORD *)a2 + 14) = v49;
        }
        int v50 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v50 >= *((void *)a2 + 2) || *v50 != 65) {
          continue;
        }
        *((void *)a2 + 1) = v50 + 1;
LABEL_145:
        *(void *)uint64_t v78 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v78) & 1) == 0)return 0; {
        *((void *)this + 7) = *(void *)v78;
        }
        *((_DWORD *)this + 63) |= 0x80u;
        int v51 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v51 >= *((void *)a2 + 2) || *v51 != 73) {
          continue;
        }
        *((void *)a2 + 1) = v51 + 1;
LABEL_149:
        *(void *)uint64_t v78 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v78) & 1) == 0)return 0; {
        *((void *)this + 9) = *(void *)v78;
        }
        *((_DWORD *)this + 63) |= 0x100u;
        int v52 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v52 >= *((void *)a2 + 2) || *v52 != 81) {
          continue;
        }
        *((void *)a2 + 1) = v52 + 1;
LABEL_153:
        *(void *)uint64_t v78 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v78) & 1) == 0)return 0; {
        *((void *)this + 10) = *(void *)v78;
        }
        *((_DWORD *)this + 63) |= 0x200u;
        int v53 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v53 >= *((void *)a2 + 2) || *v53 != 89) {
          continue;
        }
        *((void *)a2 + 1) = v53 + 1;
LABEL_157:
        *(void *)uint64_t v78 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v78) & 1) == 0)return 0; {
        *((void *)this + 11) = *(void *)v78;
        }
        *((_DWORD *)this + 63) |= 0x400u;
        uint64_t v54 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v54 >= *((void *)a2 + 2) || *v54 != 97) {
          continue;
        }
        *((void *)a2 + 1) = v54 + 1;
LABEL_161:
        *(void *)uint64_t v78 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v78) & 1) == 0)return 0; {
        *((void *)this + 12) = *(void *)v78;
        }
        *((_DWORD *)this + 63) |= 0x800u;
        int v55 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v55 >= *((void *)a2 + 2) || *v55 != 105) {
          continue;
        }
        *((void *)a2 + 1) = v55 + 1;
LABEL_165:
        *(void *)uint64_t v78 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v78) & 1) == 0)return 0; {
        *((void *)this + 13) = *(void *)v78;
        }
        *((_DWORD *)this + 63) |= 0x1000u;
        int v56 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        if ((unint64_t)v56 >= v13 || *v56 != 112) {
          continue;
        }
        int v14 = v56 + 1;
        *((void *)a2 + 1) = v14;
LABEL_169:
        v78[0] = 0;
        if ((unint64_t)v14 >= v13 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v78);
          if (!result) {
            return result;
          }
          unsigned int v57 = v78[0];
        }
        else
        {
          unsigned int v57 = *v14;
          *((void *)a2 + 1) = v14 + 1;
        }
        if (v57 <= 4)
        {
          *((_DWORD *)this + 63) |= 0x2000u;
          *((_DWORD *)this + 17) = v57;
        }
        int v58 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        if ((unint64_t)v58 >= v15 || *v58 != 120) {
          continue;
        }
        unsigned int v16 = v58 + 1;
        *((void *)a2 + 1) = v16;
LABEL_179:
        v78[0] = 0;
        if ((unint64_t)v16 >= v15 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v78);
          if (!result) {
            return result;
          }
          unsigned int v59 = v78[0];
        }
        else
        {
          unsigned int v59 = *v16;
          *((void *)a2 + 1) = v16 + 1;
        }
        if (v59 <= 2)
        {
          *((_DWORD *)this + 63) |= 0x4000u;
          *((_DWORD *)this + 28) = v59;
        }
        uint64_t v60 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v17 = *((void *)a2 + 2);
        if ((int)v17 - (int)v60 < 2 || *v60 != 128 || v60[1] != 1) {
          continue;
        }
        BOOL v18 = (char *)(v60 + 2);
        *((void *)a2 + 1) = v18;
LABEL_190:
        v78[0] = 0;
        if ((unint64_t)v18 >= v17 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v78);
          if (!result) {
            return result;
          }
          unsigned int v61 = v78[0];
        }
        else
        {
          unsigned int v61 = *v18;
          *((void *)a2 + 1) = v18 + 1;
        }
        if (v61 <= 0xC)
        {
          *((_DWORD *)this + 63) |= 0x8000u;
          *((_DWORD *)this + 29) = v61;
        }
        int v62 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v62 < 2 || *v62 != 137 || v62[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v62 + 2;
LABEL_201:
        *(void *)uint64_t v78 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v78) & 1) == 0)return 0; {
        *((void *)this + 15) = *(void *)v78;
        }
        *((_DWORD *)this + 63) |= 0x10000u;
        int v63 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v63 < 2 || *v63 != 145 || v63[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v63 + 2;
LABEL_206:
        *(void *)uint64_t v78 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v78) & 1) == 0)return 0; {
        *((void *)this + 16) = *(void *)v78;
        }
        *((_DWORD *)this + 63) |= 0x20000u;
        int v64 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v64 < 2 || *v64 != 153 || v64[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v64 + 2;
LABEL_211:
        *(void *)uint64_t v78 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v78) & 1) == 0)return 0; {
        *((void *)this + 17) = *(void *)v78;
        }
        *((_DWORD *)this + 63) |= 0x40000u;
        int v65 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v65 < 2 || *v65 != 161 || v65[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v65 + 2;
LABEL_216:
        *(void *)uint64_t v78 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v78) & 1) == 0)return 0; {
        *((void *)this + 18) = *(void *)v78;
        }
        *((_DWORD *)this + 63) |= 0x80000u;
        uint64_t v66 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v66 < 2 || *v66 != 169 || v66[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v66 + 2;
LABEL_221:
        *(void *)uint64_t v78 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v78) & 1) == 0)return 0; {
        *((void *)this + 19) = *(void *)v78;
        }
        *((_DWORD *)this + 63) |= 0x100000u;
        int v67 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v67 < 2 || *v67 != 177 || v67[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v67 + 2;
LABEL_226:
        *(void *)uint64_t v78 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v78) & 1) == 0)return 0; {
        *((void *)this + 20) = *(void *)v78;
        }
        *((_DWORD *)this + 63) |= 0x200000u;
        int v68 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v68 < 2 || *v68 != 185 || v68[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v68 + 2;
LABEL_231:
        *(void *)uint64_t v78 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v78) & 1) == 0)return 0; {
        *((void *)this + 21) = *(void *)v78;
        }
        *((_DWORD *)this + 63) |= 0x400000u;
        int v69 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v69 < 2 || *v69 != 193 || v69[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v69 + 2;
LABEL_236:
        *(void *)uint64_t v78 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v78) & 1) == 0)return 0; {
        *((void *)this + 22) = *(void *)v78;
        }
        *((_DWORD *)this + 63) |= 0x800000u;
        int v70 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v70 < 2 || *v70 != 201 || v70[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v70 + 2;
LABEL_241:
        *(void *)uint64_t v78 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v78) & 1) == 0)return 0; {
        *((void *)this + 23) = *(void *)v78;
        }
        *((_DWORD *)this + 63) |= 0x1000000u;
        int v71 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v71 < 2 || *v71 != 209 || v71[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v71 + 2;
LABEL_246:
        *(void *)uint64_t v78 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v78) & 1) == 0)return 0; {
        *((void *)this + 24) = *(void *)v78;
        }
        *((_DWORD *)this + 63) |= 0x2000000u;
        uint64_t v72 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v72 < 2 || *v72 != 217 || v72[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v72 + 2;
LABEL_251:
        *(void *)uint64_t v78 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v78) & 1) == 0)return 0; {
        *((void *)this + 25) = *(void *)v78;
        }
        *((_DWORD *)this + 63) |= 0x4000000u;
        int v73 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v73 < 2 || *v73 != 225 || v73[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v73 + 2;
LABEL_256:
        *(void *)uint64_t v78 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v78) & 1) == 0)return 0; {
        *((void *)this + 26) = *(void *)v78;
        }
        *((_DWORD *)this + 63) |= 0x8000000u;
        int v74 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v74 < 2 || *v74 != 233 || v74[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v74 + 2;
LABEL_261:
        *(void *)uint64_t v78 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v78) & 1) == 0)return 0; {
        *((void *)this + 27) = *(void *)v78;
        }
        *((_DWORD *)this + 63) |= 0x10000000u;
        int v75 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v75 < 2 || *v75 != 241 || v75[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v75 + 2;
LABEL_266:
        *(void *)uint64_t v78 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v78) & 1) == 0)return 0; {
        *((void *)this + 28) = *(void *)v78;
        }
        *((_DWORD *)this + 63) |= 0x20000000u;
        int v76 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v76 < 2 || *v76 != 249 || v76[1] != 1) {
          continue;
        }
        *((void *)a2 + 1) = v76 + 2;
LABEL_271:
        *(void *)uint64_t v78 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v78) & 1) == 0)return 0; {
        *((void *)this + 29) = *(void *)v78;
        }
        *((_DWORD *)this + 63) |= 0x40000000u;
        uint64_t v77 = (unsigned __int8 *)*((void *)a2 + 1);
        if (*((_DWORD *)a2 + 4) - (int)v77 < 2 || *v77 != 129 || v77[1] != 2) {
          continue;
        }
        *((void *)a2 + 1) = v77 + 2;
LABEL_276:
        *(void *)uint64_t v78 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v78))
        {
          *((void *)this + 30) = *(void *)v78;
          *((_DWORD *)this + 63) |= 0x80000000;
          if (*((void *)a2 + 1) == *((void *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_75;
        }
        int v11 = *((_DWORD *)this + 63);
        goto LABEL_95;
      case 4u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_109;
        }
        goto LABEL_75;
      case 5u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_113;
        }
        goto LABEL_75;
      case 6u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_75;
        }
        int v12 = *((_DWORD *)this + 63);
        goto LABEL_117;
      case 7u:
        int v6 = TagFallback & 7;
        if (v6 == 2) {
          goto LABEL_131;
        }
        goto LABEL_75;
      case 8u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_145;
        }
        goto LABEL_75;
      case 9u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_149;
        }
        goto LABEL_75;
      case 0xAu:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_153;
        }
        goto LABEL_75;
      case 0xBu:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_157;
        }
        goto LABEL_75;
      case 0xCu:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_161;
        }
        goto LABEL_75;
      case 0xDu:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_165;
        }
        goto LABEL_75;
      case 0xEu:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_75;
        }
        int v14 = (char *)*((void *)a2 + 1);
        unint64_t v13 = *((void *)a2 + 2);
        goto LABEL_169;
      case 0xFu:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_75;
        }
        unsigned int v16 = (char *)*((void *)a2 + 1);
        unint64_t v15 = *((void *)a2 + 2);
        goto LABEL_179;
      case 0x10u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_75;
        }
        BOOL v18 = (char *)*((void *)a2 + 1);
        unint64_t v17 = *((void *)a2 + 2);
        goto LABEL_190;
      case 0x11u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_201;
        }
        goto LABEL_75;
      case 0x12u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_206;
        }
        goto LABEL_75;
      case 0x13u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_211;
        }
        goto LABEL_75;
      case 0x14u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_216;
        }
        goto LABEL_75;
      case 0x15u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_221;
        }
        goto LABEL_75;
      case 0x16u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_226;
        }
        goto LABEL_75;
      case 0x17u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_231;
        }
        goto LABEL_75;
      case 0x18u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_236;
        }
        goto LABEL_75;
      case 0x19u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_241;
        }
        goto LABEL_75;
      case 0x1Au:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_246;
        }
        goto LABEL_75;
      case 0x1Bu:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_251;
        }
        goto LABEL_75;
      case 0x1Cu:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_256;
        }
        goto LABEL_75;
      case 0x1Du:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_261;
        }
        goto LABEL_75;
      case 0x1Eu:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_266;
        }
        goto LABEL_75;
      case 0x1Fu:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_271;
        }
        goto LABEL_75;
      case 0x20u:
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_75;
        }
        goto LABEL_276;
      default:
        int v6 = TagFallback & 7;
LABEL_75:
        if (v6 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 252);
  if (v6)
  {
    uint64_t v7 = *(void *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
      uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::default_instance_
                     + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 252);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_38;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 64), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_41;
  }
LABEL_38:
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
    uint64_t v8 = *(void *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::default_instance_
                   + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_42;
  }
LABEL_41:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_43;
  }
LABEL_42:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_46;
  }
LABEL_43:
  uint64_t v9 = *(void *)(v5 + 40);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
    uint64_t v9 = *(void *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::default_instance_
                   + 40);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v9, a2, a4);
  int v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_49;
  }
LABEL_46:
  uint64_t v10 = *(void *)(v5 + 48);
  if (!v10)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
    uint64_t v10 = *(void *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::default_instance_
                    + 48);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v10, a2, a4);
  int v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_50;
  }
LABEL_49:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (uint64_t)a2, *(double *)(v5 + 56), a3);
  int v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_51;
  }
LABEL_50:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (uint64_t)a2, *(double *)(v5 + 72), a3);
  int v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_52;
  }
LABEL_51:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, (uint64_t)a2, *(double *)(v5 + 80), a3);
  int v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_53;
  }
LABEL_52:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, (uint64_t)a2, *(double *)(v5 + 88), a3);
  int v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_54;
  }
LABEL_53:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, (uint64_t)a2, *(double *)(v5 + 96), a3);
  int v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_55;
  }
LABEL_54:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, (uint64_t)a2, *(double *)(v5 + 104), a3);
  int v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_16;
    }
    goto LABEL_56;
  }
LABEL_55:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, *(unsigned int *)(v5 + 68), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x4000) == 0)
  {
LABEL_16:
    if ((v6 & 0x8000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_57;
  }
LABEL_56:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, *(unsigned int *)(v5 + 112), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x8000) == 0)
  {
LABEL_17:
    if ((v6 & 0x10000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_58;
  }
LABEL_57:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, *(unsigned int *)(v5 + 116), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x10000) == 0)
  {
LABEL_18:
    if ((v6 & 0x20000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_59;
  }
LABEL_58:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x11, (uint64_t)a2, *(double *)(v5 + 120), a3);
  int v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x20000) == 0)
  {
LABEL_19:
    if ((v6 & 0x40000) == 0) {
      goto LABEL_20;
    }
    goto LABEL_60;
  }
LABEL_59:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x12, (uint64_t)a2, *(double *)(v5 + 128), a3);
  int v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x40000) == 0)
  {
LABEL_20:
    if ((v6 & 0x80000) == 0) {
      goto LABEL_21;
    }
    goto LABEL_61;
  }
LABEL_60:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x13, (uint64_t)a2, *(double *)(v5 + 136), a3);
  int v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x80000) == 0)
  {
LABEL_21:
    if ((v6 & 0x100000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_62;
  }
LABEL_61:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x14, (uint64_t)a2, *(double *)(v5 + 144), a3);
  int v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x100000) == 0)
  {
LABEL_22:
    if ((v6 & 0x200000) == 0) {
      goto LABEL_23;
    }
    goto LABEL_63;
  }
LABEL_62:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x15, (uint64_t)a2, *(double *)(v5 + 152), a3);
  int v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x200000) == 0)
  {
LABEL_23:
    if ((v6 & 0x400000) == 0) {
      goto LABEL_24;
    }
    goto LABEL_64;
  }
LABEL_63:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x16, (uint64_t)a2, *(double *)(v5 + 160), a3);
  int v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x400000) == 0)
  {
LABEL_24:
    if ((v6 & 0x800000) == 0) {
      goto LABEL_25;
    }
    goto LABEL_65;
  }
LABEL_64:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x17, (uint64_t)a2, *(double *)(v5 + 168), a3);
  int v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x800000) == 0)
  {
LABEL_25:
    if ((v6 & 0x1000000) == 0) {
      goto LABEL_26;
    }
    goto LABEL_66;
  }
LABEL_65:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x18, (uint64_t)a2, *(double *)(v5 + 176), a3);
  int v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x1000000) == 0)
  {
LABEL_26:
    if ((v6 & 0x2000000) == 0) {
      goto LABEL_27;
    }
    goto LABEL_67;
  }
LABEL_66:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x19, (uint64_t)a2, *(double *)(v5 + 184), a3);
  int v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x2000000) == 0)
  {
LABEL_27:
    if ((v6 & 0x4000000) == 0) {
      goto LABEL_28;
    }
    goto LABEL_68;
  }
LABEL_67:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1A, (uint64_t)a2, *(double *)(v5 + 192), a3);
  int v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x4000000) == 0)
  {
LABEL_28:
    if ((v6 & 0x8000000) == 0) {
      goto LABEL_29;
    }
    goto LABEL_69;
  }
LABEL_68:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1B, (uint64_t)a2, *(double *)(v5 + 200), a3);
  int v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x8000000) == 0)
  {
LABEL_29:
    if ((v6 & 0x10000000) == 0) {
      goto LABEL_30;
    }
    goto LABEL_70;
  }
LABEL_69:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1C, (uint64_t)a2, *(double *)(v5 + 208), a3);
  int v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x10000000) == 0)
  {
LABEL_30:
    if ((v6 & 0x20000000) == 0) {
      goto LABEL_31;
    }
    goto LABEL_71;
  }
LABEL_70:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1D, (uint64_t)a2, *(double *)(v5 + 216), a3);
  int v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x20000000) == 0)
  {
LABEL_31:
    if ((v6 & 0x40000000) == 0) {
      goto LABEL_32;
    }
LABEL_72:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1F, (uint64_t)a2, *(double *)(v5 + 232), a3);
    if ((*(_DWORD *)(v5 + 252) & 0x80000000) == 0) {
      return this;
    }
    goto LABEL_73;
  }
LABEL_71:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x1E, (uint64_t)a2, *(double *)(v5 + 224), a3);
  int v6 = *(_DWORD *)(v5 + 252);
  if ((v6 & 0x40000000) != 0) {
    goto LABEL_72;
  }
LABEL_32:
  if ((v6 & 0x80000000) == 0) {
    return this;
  }
LABEL_73:
  double v11 = *(double *)(v5 + 240);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x20, (uint64_t)a2, v11, a3);
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::ByteSize(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData *this)
{
  int v2 = *((_DWORD *)this + 63);
  if (!(_BYTE)v2)
  {
    uint64_t v4 = 0;
    goto LABEL_47;
  }
  if (v2)
  {
    uint64_t v5 = (CoreNavigation::CLP::LogEntry::PrivateData::SvId *)*((void *)this + 1);
    if (!v5)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(0);
      uint64_t v5 = *(CoreNavigation::CLP::LogEntry::PrivateData::SvId **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::default_instance_
                                                                + 8);
    }
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::PrivateData::SvId::ByteSize(v5);
    int v7 = (int)v6;
    if (v6 >= 0x80) {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
    }
    else {
      int v8 = 1;
    }
    int v3 = v7 + v8 + 1;
    int v2 = *((_DWORD *)this + 63);
    if ((v2 & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  int v3 = 0;
  if ((v2 & 2) != 0)
  {
LABEL_12:
    uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
    if ((v9 & 0x80000000) != 0)
    {
      int v10 = 10;
    }
    else if (v9 >= 0x80)
    {
      int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9);
      int v2 = *((_DWORD *)this + 63);
    }
    else
    {
      int v10 = 1;
    }
    v3 += v10 + 1;
  }
LABEL_18:
  if ((v2 & 4) != 0)
  {
    double v11 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime *)*((void *)this + 2);
    if (!v11)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(0);
      double v11 = *(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::default_instance_
                                                                              + 16);
    }
    int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::ByteSize(v11);
    int v13 = (int)v12;
    if (v12 >= 0x80) {
      int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12);
    }
    else {
      int v14 = 1;
    }
    v3 += v13 + v14 + 1;
    int v2 = *((_DWORD *)this + 63);
  }
  int v15 = v3 + 9;
  if ((v2 & 8) == 0) {
    int v15 = v3;
  }
  if ((v2 & 0x10) != 0) {
    unsigned int v16 = v15 + 9;
  }
  else {
    unsigned int v16 = v15;
  }
  if ((v2 & 0x20) != 0)
  {
    unint64_t v17 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState *)*((void *)this + 5);
    if (!v17)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(0);
      unint64_t v17 = *(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::default_instance_ + 40);
    }
    BOOL v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::ByteSize(v17);
    int v19 = (int)v18;
    if (v18 >= 0x80) {
      int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18);
    }
    else {
      int v20 = 1;
    }
    v16 += v19 + v20 + 1;
    int v2 = *((_DWORD *)this + 63);
  }
  if ((v2 & 0x40) != 0)
  {
    int v21 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState *)*((void *)this + 6);
    if (!v21)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(0);
      int v21 = *(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::default_instance_ + 48);
    }
    BOOL v22 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::ByteSize(v21);
    int v23 = (int)v22;
    if (v22 >= 0x80) {
      int v24 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v22);
    }
    else {
      int v24 = 1;
    }
    v16 += v23 + v24 + 1;
    int v2 = *((_DWORD *)this + 63);
  }
  if ((v2 & 0x80) != 0) {
    uint64_t v4 = v16 + 9;
  }
  else {
    uint64_t v4 = v16;
  }
LABEL_47:
  if ((v2 & 0xFF00) == 0) {
    goto LABEL_81;
  }
  unsigned int v25 = v4 + 9;
  if ((v2 & 0x100) == 0) {
    unsigned int v25 = v4;
  }
  if ((v2 & 0x200) != 0) {
    v25 += 9;
  }
  if ((v2 & 0x400) != 0) {
    v25 += 9;
  }
  if ((v2 & 0x800) != 0) {
    v25 += 9;
  }
  if ((v2 & 0x1000) != 0) {
    uint64_t v4 = v25 + 9;
  }
  else {
    uint64_t v4 = v25;
  }
  if ((v2 & 0x2000) != 0)
  {
    int v26 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 17);
    if ((v26 & 0x80000000) != 0)
    {
      int v27 = 11;
    }
    else if (v26 >= 0x80)
    {
      int v27 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v26) + 1;
      int v2 = *((_DWORD *)this + 63);
    }
    else
    {
      int v27 = 2;
    }
    uint64_t v4 = (v27 + v4);
    if ((v2 & 0x4000) == 0)
    {
LABEL_61:
      if ((v2 & 0x8000) == 0) {
        goto LABEL_81;
      }
      goto LABEL_75;
    }
  }
  else if ((v2 & 0x4000) == 0)
  {
    goto LABEL_61;
  }
  int v28 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 28);
  if ((v28 & 0x80000000) != 0)
  {
    int v29 = 11;
  }
  else if (v28 >= 0x80)
  {
    int v29 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v28) + 1;
    int v2 = *((_DWORD *)this + 63);
  }
  else
  {
    int v29 = 2;
  }
  uint64_t v4 = (v29 + v4);
  if ((v2 & 0x8000) != 0)
  {
LABEL_75:
    int v30 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 29);
    if ((v30 & 0x80000000) != 0)
    {
      int v31 = 12;
    }
    else if (v30 >= 0x80)
    {
      int v31 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v30) + 2;
      int v2 = *((_DWORD *)this + 63);
    }
    else
    {
      int v31 = 3;
    }
    uint64_t v4 = (v31 + v4);
  }
LABEL_81:
  if ((v2 & 0xFF0000) != 0)
  {
    unsigned int v32 = v4 + 10;
    if ((v2 & 0x10000) == 0) {
      unsigned int v32 = v4;
    }
    if ((v2 & 0x20000) != 0) {
      v32 += 10;
    }
    if ((v2 & 0x40000) != 0) {
      v32 += 10;
    }
    if ((v2 & 0x80000) != 0) {
      v32 += 10;
    }
    if ((v2 & 0x100000) != 0) {
      v32 += 10;
    }
    if ((v2 & 0x200000) != 0) {
      v32 += 10;
    }
    if ((v2 & 0x400000) != 0) {
      v32 += 10;
    }
    if ((v2 & 0x800000) != 0) {
      uint64_t v4 = v32 + 10;
    }
    else {
      uint64_t v4 = v32;
    }
  }
  if (HIBYTE(v2))
  {
    unsigned int v33 = v4 + 10;
    if ((v2 & 0x1000000) == 0) {
      unsigned int v33 = v4;
    }
    if ((v2 & 0x2000000) != 0) {
      v33 += 10;
    }
    if ((v2 & 0x4000000) != 0) {
      v33 += 10;
    }
    if ((v2 & 0x8000000) != 0) {
      v33 += 10;
    }
    if ((v2 & 0x10000000) != 0) {
      v33 += 10;
    }
    if ((v2 & 0x20000000) != 0) {
      v33 += 10;
    }
    if ((v2 & 0x40000000) != 0) {
      v33 += 10;
    }
    if (v2 >= 0) {
      uint64_t v4 = v33;
    }
    else {
      uint64_t v4 = v33 + 10;
    }
  }
  *((_DWORD *)this + 62) = v4;
  return v4;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::MergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 44);
  if (!(_BYTE)v5) {
    return result;
  }
  if ((*((unsigned char *)a2 + 44) & 1) == 0)
  {
    if ((*((unsigned char *)a2 + 44) & 2) == 0) {
      goto LABEL_6;
    }
LABEL_14:
    *((_DWORD *)this + 11) |= 2u;
    int v8 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *)*((void *)this + 2);
    if (!v8) {
      operator new();
    }
    uint64_t v9 = (const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *)*((void *)a2 + 2);
    if (!v9)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
      uint64_t v9 = *(const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::default_instance_
                                                                                   + 16);
    }
    double result = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::MergeFrom(v8, v9);
    int v5 = *((_DWORD *)a2 + 11);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        return result;
      }
      goto LABEL_24;
    }
    goto LABEL_19;
  }
  *((_DWORD *)this + 11) |= 1u;
  int v6 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *)*((void *)this + 1);
  if (!v6) {
    operator new();
  }
  int v7 = (const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *)*((void *)a2 + 1);
  if (!v7)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
    int v7 = *(const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::default_instance_
                                                                                 + 8);
  }
  double result = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::MergeFrom(v6, v7);
  int v5 = *((_DWORD *)a2 + 11);
  if ((v5 & 2) != 0) {
    goto LABEL_14;
  }
LABEL_6:
  if ((v5 & 4) == 0) {
    goto LABEL_7;
  }
LABEL_19:
  *((_DWORD *)this + 11) |= 4u;
  int v10 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *)*((void *)this + 3);
  if (!v10) {
    operator new();
  }
  double v11 = (const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *)*((void *)a2 + 3);
  if (!v11)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
    double v11 = *(const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::default_instance_
                                                                                  + 24);
  }
  double result = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::MergeFrom(v10, v11);
  if ((*((_DWORD *)a2 + 11) & 8) != 0)
  {
LABEL_24:
    *((_DWORD *)this + 11) |= 8u;
    int v12 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets *)*((void *)this + 4);
    if (!v12) {
      operator new();
    }
    int v13 = (const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets *)*((void *)a2 + 4);
    if (!v13)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
      int v13 = *(const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::default_instance_ + 32);
    }
    return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets::MergeFrom(v12, v13);
  }
  return result;
}

void sub_18DF337DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::MergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v10);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 44);
  if (!(_BYTE)v5) {
    return result;
  }
  if ((*((unsigned char *)a2 + 44) & 1) == 0)
  {
    if ((*((unsigned char *)a2 + 44) & 2) == 0) {
      goto LABEL_6;
    }
LABEL_10:
    double result = *((double *)a2 + 2);
    *((_DWORD *)this + 11) |= 2u;
    *((double *)this + 2) = result;
    int v5 = *((_DWORD *)a2 + 11);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        return result;
      }
      goto LABEL_16;
    }
    goto LABEL_11;
  }
  double result = *((double *)a2 + 1);
  *((_DWORD *)this + 11) |= 1u;
  *((double *)this + 1) = result;
  int v5 = *((_DWORD *)a2 + 11);
  if ((v5 & 2) != 0) {
    goto LABEL_10;
  }
LABEL_6:
  if ((v5 & 4) == 0) {
    goto LABEL_7;
  }
LABEL_11:
  *((_DWORD *)this + 11) |= 4u;
  int v6 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *)*((void *)this + 3);
  if (!v6) {
    operator new();
  }
  int v7 = (const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *)*((void *)a2 + 3);
  if (!v7)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
    int v7 = *(const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::default_instance_
                                                                                 + 24);
  }
  double result = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::MergeFrom(v6, v7);
  if ((*((_DWORD *)a2 + 11) & 8) != 0)
  {
LABEL_16:
    *((_DWORD *)this + 11) |= 8u;
    int v8 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *)*((void *)this + 4);
    if (!v8) {
      operator new();
    }
    uint64_t v9 = (const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *)*((void *)a2 + 4);
    if (!v9)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
      uint64_t v9 = *(const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::default_instance_
                                                                                   + 32);
    }
    return CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::MergeFrom(v8, v9);
  }
  return result;
}

void sub_18DF339C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::CopyFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::IsInitialized(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::Swap(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData *this, CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    LODWORD(v2) = *((_DWORD *)this + 16);
    *((_DWORD *)this + 16) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v2;
    uint64_t v3 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    uint64_t v4 = *((void *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v4;
    uint64_t v5 = *((void *)this + 4);
    *((void *)this + 4) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v5;
    uint64_t v6 = *((void *)this + 5);
    *((void *)this + 5) = *((void *)a2 + 5);
    *((void *)a2 + 5) = v6;
    uint64_t v7 = *((void *)this + 6);
    *((void *)this + 6) = *((void *)a2 + 6);
    *((void *)a2 + 6) = v7;
    uint64_t v8 = *((void *)this + 7);
    *((void *)this + 7) = *((void *)a2 + 7);
    *((void *)a2 + 7) = v8;
    uint64_t v9 = *((void *)this + 9);
    *((void *)this + 9) = *((void *)a2 + 9);
    *((void *)a2 + 9) = v9;
    uint64_t v10 = *((void *)this + 10);
    *((void *)this + 10) = *((void *)a2 + 10);
    *((void *)a2 + 10) = v10;
    uint64_t v11 = *((void *)this + 11);
    *((void *)this + 11) = *((void *)a2 + 11);
    *((void *)a2 + 11) = v11;
    uint64_t v12 = *((void *)this + 12);
    *((void *)this + 12) = *((void *)a2 + 12);
    *((void *)a2 + 12) = v12;
    uint64_t v13 = *((void *)this + 13);
    *((void *)this + 13) = *((void *)a2 + 13);
    *((void *)a2 + 13) = v13;
    LODWORD(v7) = *((_DWORD *)this + 17);
    *((_DWORD *)this + 17) = *((_DWORD *)a2 + 17);
    *((_DWORD *)a2 + 17) = v7;
    LODWORD(v7) = *((_DWORD *)this + 28);
    *((_DWORD *)this + 28) = *((_DWORD *)a2 + 28);
    *((_DWORD *)a2 + 28) = v7;
    LODWORD(v7) = *((_DWORD *)this + 29);
    *((_DWORD *)this + 29) = *((_DWORD *)a2 + 29);
    *((_DWORD *)a2 + 29) = v7;
    uint64_t v14 = *((void *)this + 15);
    *((void *)this + 15) = *((void *)a2 + 15);
    *((void *)a2 + 15) = v14;
    uint64_t v15 = *((void *)this + 16);
    *((void *)this + 16) = *((void *)a2 + 16);
    *((void *)a2 + 16) = v15;
    uint64_t v16 = *((void *)this + 17);
    *((void *)this + 17) = *((void *)a2 + 17);
    *((void *)a2 + 17) = v16;
    uint64_t v17 = *((void *)this + 18);
    *((void *)this + 18) = *((void *)a2 + 18);
    *((void *)a2 + 18) = v17;
    uint64_t v18 = *((void *)this + 19);
    *((void *)this + 19) = *((void *)a2 + 19);
    *((void *)a2 + 19) = v18;
    uint64_t v19 = *((void *)this + 20);
    *((void *)this + 20) = *((void *)a2 + 20);
    *((void *)a2 + 20) = v19;
    uint64_t v20 = *((void *)this + 21);
    *((void *)this + 21) = *((void *)a2 + 21);
    *((void *)a2 + 21) = v20;
    uint64_t v21 = *((void *)this + 22);
    *((void *)this + 22) = *((void *)a2 + 22);
    *((void *)a2 + 22) = v21;
    uint64_t v22 = *((void *)this + 23);
    *((void *)this + 23) = *((void *)a2 + 23);
    *((void *)a2 + 23) = v22;
    uint64_t v23 = *((void *)this + 24);
    *((void *)this + 24) = *((void *)a2 + 24);
    *((void *)a2 + 24) = v23;
    uint64_t v24 = *((void *)this + 25);
    *((void *)this + 25) = *((void *)a2 + 25);
    *((void *)a2 + 25) = v24;
    uint64_t v25 = *((void *)this + 26);
    *((void *)this + 26) = *((void *)a2 + 26);
    *((void *)a2 + 26) = v25;
    uint64_t v26 = *((void *)this + 27);
    *((void *)this + 27) = *((void *)a2 + 27);
    *((void *)a2 + 27) = v26;
    uint64_t v27 = *((void *)this + 28);
    *((void *)this + 28) = *((void *)a2 + 28);
    *((void *)a2 + 28) = v27;
    uint64_t v28 = *((void *)this + 29);
    *((void *)this + 29) = *((void *)a2 + 29);
    *((void *)a2 + 29) = v28;
    double result = *((double *)this + 30);
    *((void *)this + 30) = *((void *)a2 + 30);
    *((double *)a2 + 30) = result;
    LODWORD(v7) = *((_DWORD *)this + 63);
    *((_DWORD *)this + 63) = *((_DWORD *)a2 + 63);
    *((_DWORD *)a2 + 63) = v7;
    LODWORD(v7) = *((_DWORD *)this + 62);
    *((_DWORD *)this + 62) = *((_DWORD *)a2 + 62);
    *((_DWORD *)a2 + 62) = v7;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementData::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.InternalToolData.GnssMsmtAnalysisToolData.MeasurementData");
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::SharedCtor(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState *this)
{
  *((void *)this + 5) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::SatelliteState(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState *a2)
{
  *(void *)this = &unk_1EDD0F6B0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((void *)this + 5) = 0;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::MergeFrom(this, a2);
  return this;
}

void sub_18DF33D20(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::~SatelliteState(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState *this)
{
  *(void *)this = &unk_1EDD0F6B0;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::~SatelliteState(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::SharedDtor(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState *this)
{
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 2);
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = *((void *)this + 3);
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = *((void *)this + 4);
    if (v5)
    {
      uint64_t v6 = *(void (**)(void))(*(void *)v5 + 8);
      v6();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::default_instance(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState *this)
{
  return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 40) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::New(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (1)
  {
    uint64_t v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 < *((void *)a2 + 2) && (*v4 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_6;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_6:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_19;
        }
        *((_DWORD *)this + 11) |= 1u;
        uint64_t v7 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *)*((void *)this + 1);
        if (!v7) {
          operator new();
        }
        unsigned int v36 = 0;
        uint64_t v8 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v36))return 0; {
        }
          }
        else
        {
          unsigned int v36 = *v8;
          *((void *)a2 + 1) = v8 + 1;
        }
        int v9 = *((_DWORD *)a2 + 14);
        int v10 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v9 + 1;
        if (v9 >= v10) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::MergePartialFromCodedStream(v7, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v11 = *((_DWORD *)a2 + 14);
        BOOL v12 = __OFSUB__(v11, 1);
        int v13 = v11 - 1;
        if (v13 < 0 == v12) {
          *((_DWORD *)a2 + 14) = v13;
        }
        uint64_t v14 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v14 >= *((void *)a2 + 2) || *v14 != 18) {
          continue;
        }
        *((void *)a2 + 1) = v14 + 1;
        goto LABEL_31;
      case 2u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_19;
        }
LABEL_31:
        *((_DWORD *)this + 11) |= 2u;
        uint64_t v15 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *)*((void *)this + 2);
        if (!v15) {
          operator new();
        }
        unsigned int v36 = 0;
        uint64_t v16 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v16 >= *((void *)a2 + 2) || *v16 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v36))return 0; {
        }
          }
        else
        {
          unsigned int v36 = *v16;
          *((void *)a2 + 1) = v16 + 1;
        }
        int v17 = *((_DWORD *)a2 + 14);
        int v18 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v17 + 1;
        if (v17 >= v18) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::MergePartialFromCodedStream(v15, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v19 = *((_DWORD *)a2 + 14);
        BOOL v12 = __OFSUB__(v19, 1);
        int v20 = v19 - 1;
        if (v20 < 0 == v12) {
          *((_DWORD *)a2 + 14) = v20;
        }
        uint64_t v21 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v21 >= *((void *)a2 + 2) || *v21 != 26) {
          continue;
        }
        *((void *)a2 + 1) = v21 + 1;
LABEL_45:
        *((_DWORD *)this + 11) |= 4u;
        uint64_t v22 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *)*((void *)this + 3);
        if (!v22) {
          operator new();
        }
        unsigned int v36 = 0;
        uint64_t v23 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v23 >= *((void *)a2 + 2) || *v23 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v36))return 0; {
        }
          }
        else
        {
          unsigned int v36 = *v23;
          *((void *)a2 + 1) = v23 + 1;
        }
        int v24 = *((_DWORD *)a2 + 14);
        int v25 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v24 + 1;
        if (v24 >= v25) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::MergePartialFromCodedStream(v22, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v26 = *((_DWORD *)a2 + 14);
        BOOL v12 = __OFSUB__(v26, 1);
        int v27 = v26 - 1;
        if (v27 < 0 == v12) {
          *((_DWORD *)a2 + 14) = v27;
        }
        uint64_t v28 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v28 >= *((void *)a2 + 2) || *v28 != 34) {
          continue;
        }
        *((void *)a2 + 1) = v28 + 1;
LABEL_59:
        *((_DWORD *)this + 11) |= 8u;
        int v29 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets *)*((void *)this + 4);
        if (!v29) {
          operator new();
        }
        unsigned int v36 = 0;
        int v30 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v30 >= *((void *)a2 + 2) || *v30 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v36))return 0; {
        }
          }
        else
        {
          unsigned int v36 = *v30;
          *((void *)a2 + 1) = v30 + 1;
        }
        int v31 = *((_DWORD *)a2 + 14);
        int v32 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v31 + 1;
        if (v31 >= v32) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets::MergePartialFromCodedStream(v29, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v33 = *((_DWORD *)a2 + 14);
        BOOL v12 = __OFSUB__(v33, 1);
        int v34 = v33 - 1;
        if (v34 < 0 == v12) {
          *((_DWORD *)a2 + 14) = v34;
        }
        if (*((void *)a2 + 1) == *((void *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
        break;
      case 3u:
        int v6 = TagFallback & 7;
        if (v6 == 2) {
          goto LABEL_45;
        }
        goto LABEL_19;
      case 4u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_19;
        }
        goto LABEL_59;
      default:
        int v6 = TagFallback & 7;
LABEL_19:
        if (v6 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 44);
  if (v6)
  {
    uint64_t v7 = *(void *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
      uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::default_instance_
                     + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 44);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
    uint64_t v8 = *(void *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::default_instance_
                   + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      return this;
    }
    goto LABEL_15;
  }
LABEL_12:
  uint64_t v9 = *(void *)(v5 + 24);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
    uint64_t v9 = *(void *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::default_instance_
                   + 24);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v9, a2, a4);
  if ((*(_DWORD *)(v5 + 44) & 8) != 0)
  {
LABEL_15:
    uint64_t v10 = *(void *)(v5 + 32);
    if (!v10)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
      uint64_t v10 = *(void *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::default_instance_
                      + 32);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v10, a2, a4);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::ByteSize(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 44);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_42;
  }
  if ((*((unsigned char *)this + 44) & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((*((unsigned char *)this + 44) & 2) == 0) {
      goto LABEL_24;
    }
    goto LABEL_15;
  }
  uint64_t v4 = *((void *)this + 1);
  if (!v4)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
    uint64_t v4 = *(void *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::default_instance_
                   + 8);
  }
  int v5 = *(unsigned __int8 *)(v4 + 36);
  if (*(unsigned char *)(v4 + 36))
  {
    int v6 = (v5 << 31 >> 31) & 9;
    if ((v5 & 2) != 0) {
      v6 += 9;
    }
    if ((v5 & 4) != 0) {
      int v5 = v6 + 9;
    }
    else {
      int v5 = v6;
    }
  }
  *(_DWORD *)(v4 + 32) = v5;
  uint64_t v3 = (v5 + 2);
  int v2 = *((_DWORD *)this + 11);
  if ((v2 & 2) != 0)
  {
LABEL_15:
    uint64_t v7 = *((void *)this + 2);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
      uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::default_instance_
                     + 16);
    }
    int v8 = *(unsigned __int8 *)(v7 + 36);
    if (*(unsigned char *)(v7 + 36))
    {
      int v9 = (v8 << 31 >> 31) & 9;
      if ((v8 & 2) != 0) {
        v9 += 9;
      }
      if ((v8 & 4) != 0) {
        int v8 = v9 + 9;
      }
      else {
        int v8 = v9;
      }
    }
    *(_DWORD *)(v7 + 32) = v8;
    uint64_t v3 = (v3 + v8 + 2);
    int v2 = *((_DWORD *)this + 11);
  }
LABEL_24:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_42;
    }
    goto LABEL_36;
  }
  uint64_t v10 = *((void *)this + 3);
  if (!v10)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
    uint64_t v10 = *(void *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::default_instance_
                    + 24);
  }
  int v11 = *(unsigned __int8 *)(v10 + 36);
  if (*(unsigned char *)(v10 + 36))
  {
    int v12 = (v11 << 31 >> 31) & 9;
    if ((v11 & 2) != 0) {
      v12 += 9;
    }
    if ((v11 & 4) != 0) {
      int v11 = v12 + 9;
    }
    else {
      int v11 = v12;
    }
  }
  *(_DWORD *)(v10 + 32) = v11;
  uint64_t v3 = (v3 + v11 + 2);
  if ((*((_DWORD *)this + 11) & 8) != 0)
  {
LABEL_36:
    int v13 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets *)*((void *)this + 4);
    if (!v13)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(0);
      int v13 = *(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::default_instance_ + 32);
    }
    uint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::ClockOffsets::ByteSize(v13);
    int v15 = (int)v14;
    if (v14 >= 0x80) {
      int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14);
    }
    else {
      int v16 = 1;
    }
    uint64_t v3 = (v3 + v15 + v16 + 1);
  }
LABEL_42:
  *((_DWORD *)this + 10) = v3;
  return v3;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::CopyFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::IsInitialized(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState *a2)
{
  if (a2 != (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    uint64_t v3 = *(void *)(this + 16);
    *(void *)(this + 16) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    uint64_t v4 = *(void *)(this + 24);
    *(void *)(this + 24) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v4;
    uint64_t v5 = *(void *)(this + 32);
    *(void *)(this + 32) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 44);
    *(_DWORD *)(this + 44) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v5;
    LODWORD(v5) = *(_DWORD *)(this + 40);
    *(_DWORD *)(this + 40) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v5;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::SatelliteState::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.InternalToolData.GnssMsmtAnalysisToolData.SatelliteState");
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::SharedCtor(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState *this)
{
  *((void *)this + 5) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::UserToSatelliteState(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState *a2)
{
  *(void *)this = &unk_1EDD0F818;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((void *)this + 5) = 0;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::MergeFrom(this, a2);
  return this;
}

void sub_18DF3497C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::~UserToSatelliteState(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState *this)
{
  *(void *)this = &unk_1EDD0F818;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::~UserToSatelliteState(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::SharedDtor(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState *this)
{
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 3);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 4);
    if (v3)
    {
      uint64_t v4 = *(void (**)(void))(*(void *)v3 + 8);
      v4();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::default_instance(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState *this)
{
  return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 40) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::New(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (1)
  {
    uint64_t v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 < *((void *)a2 + 2) && (*v4 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_6;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_6:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_26;
        }
        *(void *)int v25 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v25) & 1) == 0)return 0; {
        *((void *)this + 1) = *(void *)v25;
        }
        *((_DWORD *)this + 11) |= 1u;
        uint64_t v7 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v7 >= *((void *)a2 + 2) || *v7 != 17) {
          continue;
        }
        *((void *)a2 + 1) = v7 + 1;
        goto LABEL_14;
      case 2u:
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_26;
        }
LABEL_14:
        *(void *)int v25 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v25) & 1) == 0)return 0; {
        *((void *)this + 2) = *(void *)v25;
        }
        int v8 = *((_DWORD *)this + 11) | 2;
        *((_DWORD *)this + 11) = v8;
        int v9 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v9 >= *((void *)a2 + 2) || *v9 != 26) {
          continue;
        }
        *((void *)a2 + 1) = v9 + 1;
LABEL_20:
        *((_DWORD *)this + 11) = v8 | 4;
        uint64_t v10 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *)*((void *)this + 3);
        if (!v10) {
          operator new();
        }
        v25[0] = 0;
        int v11 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v11 >= *((void *)a2 + 2) || *v11 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v25))return 0; {
        }
          }
        else
        {
          v25[0] = *v11;
          *((void *)a2 + 1) = v11 + 1;
        }
        int v12 = *((_DWORD *)a2 + 14);
        int v13 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v12 + 1;
        if (v12 >= v13) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::MergePartialFromCodedStream(v10, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v14 = *((_DWORD *)a2 + 14);
        BOOL v15 = __OFSUB__(v14, 1);
        int v16 = v14 - 1;
        if (v16 < 0 == v15) {
          *((_DWORD *)a2 + 14) = v16;
        }
        int v17 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v17 >= *((void *)a2 + 2) || *v17 != 34) {
          continue;
        }
        *((void *)a2 + 1) = v17 + 1;
LABEL_38:
        *((_DWORD *)this + 11) |= 8u;
        int v18 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *)*((void *)this + 4);
        if (!v18) {
          operator new();
        }
        v25[0] = 0;
        int v19 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v19 >= *((void *)a2 + 2) || *v19 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v25))return 0; {
        }
          }
        else
        {
          v25[0] = *v19;
          *((void *)a2 + 1) = v19 + 1;
        }
        int v20 = *((_DWORD *)a2 + 14);
        int v21 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v20 + 1;
        if (v20 >= v21) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::MergePartialFromCodedStream(v18, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v22 = *((_DWORD *)a2 + 14);
        BOOL v15 = __OFSUB__(v22, 1);
        int v23 = v22 - 1;
        if (v23 < 0 == v15) {
          *((_DWORD *)a2 + 14) = v23;
        }
        if (*((void *)a2 + 1) == *((void *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
        break;
      case 3u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_26;
        }
        int v8 = *((_DWORD *)this + 11);
        goto LABEL_20;
      case 4u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_26;
        }
        goto LABEL_38;
      default:
        int v6 = TagFallback & 7;
LABEL_26:
        if (v6 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 44);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
    int v6 = *(_DWORD *)(v5 + 44);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 44);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      return this;
    }
    goto LABEL_11;
  }
LABEL_8:
  uint64_t v7 = *(void *)(v5 + 24);
  if (!v7)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
    uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::default_instance_
                   + 24);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v7, a2, a4);
  if ((*(_DWORD *)(v5 + 44) & 8) != 0)
  {
LABEL_11:
    uint64_t v8 = *(void *)(v5 + 32);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
      uint64_t v8 = *(void *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::default_instance_
                     + 32);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v8, a2, a4);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::ByteSize(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState *this)
{
  int v2 = *((unsigned __int8 *)this + 44);
  if (*((unsigned char *)this + 44))
  {
    unsigned int v3 = (v2 << 31 >> 31) & 9;
    if ((v2 & 2) != 0) {
      uint64_t v4 = v3 + 9;
    }
    else {
      uint64_t v4 = v3;
    }
    if ((v2 & 4) != 0)
    {
      uint64_t v5 = *((void *)this + 3);
      if (!v5)
      {
        CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
        uint64_t v5 = *(void *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::default_instance_
                       + 24);
      }
      int v6 = *(unsigned __int8 *)(v5 + 36);
      int v7 = (v6 << 31 >> 31) & 9;
      if ((v6 & 2) != 0) {
        v7 += 9;
      }
      if ((v6 & 4) != 0) {
        v7 += 9;
      }
      if (*(unsigned char *)(v5 + 36)) {
        int v8 = v7;
      }
      else {
        int v8 = 0;
      }
      *(_DWORD *)(v5 + 32) = v8;
      uint64_t v4 = (v4 + v8 + 2);
      int v2 = *((_DWORD *)this + 11);
    }
    if ((v2 & 8) != 0)
    {
      uint64_t v9 = *((void *)this + 4);
      if (!v9)
      {
        CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
        uint64_t v9 = *(void *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::default_instance_
                       + 32);
      }
      int v10 = *(unsigned __int8 *)(v9 + 36);
      int v11 = (v10 << 31 >> 31) & 9;
      if ((v10 & 2) != 0) {
        v11 += 9;
      }
      if ((v10 & 4) != 0) {
        v11 += 9;
      }
      if (*(unsigned char *)(v9 + 36)) {
        int v12 = v11;
      }
      else {
        int v12 = 0;
      }
      *(_DWORD *)(v9 + 32) = v12;
      uint64_t v4 = (v4 + v12 + 2);
    }
  }
  else
  {
    uint64_t v4 = 0;
  }
  *((_DWORD *)this + 10) = v4;
  return v4;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::CopyFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::IsInitialized(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::Swap(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState *this, CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    double result = *((double *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((double *)a2 + 2) = result;
    uint64_t v4 = *((void *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v4;
    uint64_t v5 = *((void *)this + 4);
    *((void *)this + 4) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v5;
    LODWORD(v5) = *((_DWORD *)this + 11);
    *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v5;
    LODWORD(v5) = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v5;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::UserToSatelliteState::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.InternalToolData.GnssMsmtAnalysisToolData.UserToSatelliteState");
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::SharedCtor(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *this)
{
  *((_DWORD *)this + 10) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::PerConstellationCounts(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *a2)
{
  *(void *)this = &unk_1EDD0F9F8;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 0;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::MergeFrom(this, a2);
  return this;
}

void sub_18DF35328(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::~PerConstellationCounts(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *this)
{
  *(void *)this = &unk_1EDD0F9F8;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::~PerConstellationCounts(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::default_instance(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *this)
{
  return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 36) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::New(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (2)
  {
    uint64_t v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_23;
        }
        unsigned int v30 = 0;
        int v8 = (char *)*((void *)a2 + 1);
        unint64_t v7 = *((void *)a2 + 2);
        if ((unint64_t)v8 < v7 && (*v8 & 0x80000000) == 0)
        {
          unsigned int v9 = *v8;
          int v10 = v8 + 1;
          *((void *)a2 + 1) = v10;
LABEL_29:
          *((_DWORD *)this + 2) = v9;
          *((_DWORD *)this + 10) |= 1u;
          if ((unint64_t)v10 < v7 && *v10 == 16)
          {
            int v11 = v10 + 1;
            *((void *)a2 + 1) = v11;
            goto LABEL_32;
          }
          continue;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30);
        if (result)
        {
          unsigned int v9 = v30;
          int v10 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v7 = *((void *)a2 + 2);
          goto LABEL_29;
        }
        break;
      case 2u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_23;
        }
        int v11 = (char *)*((void *)a2 + 1);
        unint64_t v7 = *((void *)a2 + 2);
LABEL_32:
        unsigned int v30 = 0;
        if ((unint64_t)v11 >= v7 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30);
          if (!result) {
            return result;
          }
          unsigned int v17 = v30;
          int v18 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v7 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v17 = *v11;
          int v18 = v11 + 1;
          *((void *)a2 + 1) = v18;
        }
        *((_DWORD *)this + 3) = v17;
        *((_DWORD *)this + 10) |= 2u;
        if ((unint64_t)v18 >= v7 || *v18 != 24) {
          continue;
        }
        int v12 = v18 + 1;
        *((void *)a2 + 1) = v12;
LABEL_40:
        unsigned int v30 = 0;
        if ((unint64_t)v12 >= v7 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30);
          if (!result) {
            return result;
          }
          unsigned int v19 = v30;
          int v20 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v7 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v19 = *v12;
          int v20 = v12 + 1;
          *((void *)a2 + 1) = v20;
        }
        *((_DWORD *)this + 4) = v19;
        *((_DWORD *)this + 10) |= 4u;
        if ((unint64_t)v20 >= v7 || *v20 != 32) {
          continue;
        }
        int v13 = v20 + 1;
        *((void *)a2 + 1) = v13;
LABEL_48:
        unsigned int v30 = 0;
        if ((unint64_t)v13 >= v7 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30);
          if (!result) {
            return result;
          }
          unsigned int v21 = v30;
          int v22 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v7 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v21 = *v13;
          int v22 = v13 + 1;
          *((void *)a2 + 1) = v22;
        }
        *((_DWORD *)this + 5) = v21;
        *((_DWORD *)this + 10) |= 8u;
        if ((unint64_t)v22 >= v7 || *v22 != 40) {
          continue;
        }
        int v14 = v22 + 1;
        *((void *)a2 + 1) = v14;
LABEL_56:
        unsigned int v30 = 0;
        if ((unint64_t)v14 >= v7 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30);
          if (!result) {
            return result;
          }
          unsigned int v23 = v30;
          int v24 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v7 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v23 = *v14;
          int v24 = v14 + 1;
          *((void *)a2 + 1) = v24;
        }
        *((_DWORD *)this + 6) = v23;
        *((_DWORD *)this + 10) |= 0x10u;
        if ((unint64_t)v24 >= v7 || *v24 != 48) {
          continue;
        }
        BOOL v15 = v24 + 1;
        *((void *)a2 + 1) = v15;
LABEL_64:
        unsigned int v30 = 0;
        if ((unint64_t)v15 >= v7 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30);
          if (!result) {
            return result;
          }
          unsigned int v25 = v30;
          int v26 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v7 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v25 = *v15;
          int v26 = v15 + 1;
          *((void *)a2 + 1) = v26;
        }
        *((_DWORD *)this + 7) = v25;
        *((_DWORD *)this + 10) |= 0x20u;
        if ((unint64_t)v26 >= v7 || *v26 != 56) {
          continue;
        }
        int v16 = v26 + 1;
        *((void *)a2 + 1) = v16;
LABEL_72:
        unsigned int v30 = 0;
        if ((unint64_t)v16 >= v7 || *v16 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30);
          if (!result) {
            return result;
          }
          unsigned int v27 = v30;
          uint64_t v28 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v7 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v27 = *v16;
          uint64_t v28 = (unsigned __int8 *)(v16 + 1);
          *((void *)a2 + 1) = v28;
        }
        *((_DWORD *)this + 8) = v27;
        *((_DWORD *)this + 10) |= 0x40u;
        if (v28 != (unsigned __int8 *)v7 || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10)) {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      case 3u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_23;
        }
        int v12 = (char *)*((void *)a2 + 1);
        unint64_t v7 = *((void *)a2 + 2);
        goto LABEL_40;
      case 4u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_23;
        }
        int v13 = (char *)*((void *)a2 + 1);
        unint64_t v7 = *((void *)a2 + 2);
        goto LABEL_48;
      case 5u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_23;
        }
        int v14 = (char *)*((void *)a2 + 1);
        unint64_t v7 = *((void *)a2 + 2);
        goto LABEL_56;
      case 6u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_23;
        }
        BOOL v15 = (char *)*((void *)a2 + 1);
        unint64_t v7 = *((void *)a2 + 2);
        goto LABEL_64;
      case 7u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_23;
        }
        int v16 = (char *)*((void *)a2 + 1);
        unint64_t v7 = *((void *)a2 + 2);
        goto LABEL_72;
      default:
        int v6 = TagFallback & 7;
LABEL_23:
        if (v6 == 4) {
          return 1;
        }
        if (wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback))continue; {
        return 0;
        }
    }
    return result;
  }
}

unsigned int *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::SerializeWithCachedSizes(unsigned int *this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  unsigned int v6 = this[10];
  if (v6)
  {
    this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, this[2], (uint64_t)a2, a4);
    unsigned int v6 = v5[10];
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], (uint64_t)a2, a4);
  unsigned int v6 = v5[10];
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v5[4], (uint64_t)a2, a4);
  unsigned int v6 = v5[10];
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
LABEL_12:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v5[5], (uint64_t)a2, a4);
  unsigned int v6 = v5[10];
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
LABEL_14:
    this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, v5[7], (uint64_t)a2, a4);
    if ((v5[10] & 0x40) == 0) {
      return this;
    }
    goto LABEL_15;
  }
LABEL_13:
  this = (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, v5[6], (uint64_t)a2, a4);
  unsigned int v6 = v5[10];
  if ((v6 & 0x20) != 0) {
    goto LABEL_14;
  }
LABEL_7:
  if ((v6 & 0x40) == 0) {
    return this;
  }
LABEL_15:
  uint64_t v7 = v5[8];

  return (unsigned int *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v7, (uint64_t)a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::ByteSize(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 40);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_54;
  }
  if ((*((unsigned char *)this + 40) & 1) == 0)
  {
    uint64_t v3 = 0;
    if ((*((unsigned char *)this + 40) & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  uint64_t v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
  if ((v4 & 0x80000000) != 0)
  {
    int v5 = 10;
  }
  else if (v4 >= 0x80)
  {
    int v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
    int v2 = *((_DWORD *)this + 10);
  }
  else
  {
    int v5 = 1;
  }
  uint64_t v3 = (v5 + 1);
  if ((v2 & 2) != 0)
  {
LABEL_12:
    unsigned int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
    if ((v6 & 0x80000000) != 0)
    {
      int v7 = 11;
    }
    else if (v6 >= 0x80)
    {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6) + 1;
      int v2 = *((_DWORD *)this + 10);
    }
    else
    {
      int v7 = 2;
    }
    uint64_t v3 = (v7 + v3);
  }
LABEL_18:
  if ((v2 & 4) != 0)
  {
    int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if ((v8 & 0x80000000) != 0)
    {
      int v9 = 11;
    }
    else if (v8 >= 0x80)
    {
      int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8) + 1;
      int v2 = *((_DWORD *)this + 10);
    }
    else
    {
      int v9 = 2;
    }
    uint64_t v3 = (v9 + v3);
    if ((v2 & 8) == 0)
    {
LABEL_20:
      if ((v2 & 0x10) == 0) {
        goto LABEL_21;
      }
      goto LABEL_36;
    }
  }
  else if ((v2 & 8) == 0)
  {
    goto LABEL_20;
  }
  int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
  if ((v10 & 0x80000000) != 0)
  {
    int v11 = 11;
  }
  else if (v10 >= 0x80)
  {
    int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10) + 1;
    int v2 = *((_DWORD *)this + 10);
  }
  else
  {
    int v11 = 2;
  }
  uint64_t v3 = (v11 + v3);
  if ((v2 & 0x10) == 0)
  {
LABEL_21:
    if ((v2 & 0x20) == 0) {
      goto LABEL_22;
    }
    goto LABEL_42;
  }
LABEL_36:
  int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
  if ((v12 & 0x80000000) != 0)
  {
    int v13 = 11;
  }
  else if (v12 >= 0x80)
  {
    int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12) + 1;
    int v2 = *((_DWORD *)this + 10);
  }
  else
  {
    int v13 = 2;
  }
  uint64_t v3 = (v13 + v3);
  if ((v2 & 0x20) == 0)
  {
LABEL_22:
    if ((v2 & 0x40) == 0) {
      goto LABEL_54;
    }
    goto LABEL_48;
  }
LABEL_42:
  int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
  if ((v14 & 0x80000000) != 0)
  {
    int v15 = 11;
  }
  else if (v14 >= 0x80)
  {
    int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14) + 1;
    int v2 = *((_DWORD *)this + 10);
  }
  else
  {
    int v15 = 2;
  }
  uint64_t v3 = (v15 + v3);
  if ((v2 & 0x40) != 0)
  {
LABEL_48:
    int v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 8);
    if ((v16 & 0x80000000) != 0)
    {
      int v17 = 11;
    }
    else if (v16 >= 0x80)
    {
      int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16) + 1;
    }
    else
    {
      int v17 = 2;
    }
    uint64_t v3 = (v17 + v3);
  }
LABEL_54:
  *((_DWORD *)this + 9) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::CopyFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::IsInitialized(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *this)
{
  return 1;
}

CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::Swap(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *this, CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts *a2)
{
  if (a2 != this)
  {
    int v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    int v3 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    int v4 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v4;
    int v5 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v5;
    int v6 = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v6;
    int v7 = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v7;
    int v8 = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v8;
    int v9 = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v9;
    int v10 = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v10;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PerConstellationCounts::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.InternalToolData.GnssMsmtAnalysisToolData.PerConstellationCounts");
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::SharedCtor(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent *this)
{
  *((unsigned char *)this + 80) = 0;
  *((_DWORD *)this + 21) = 0;
  *((_DWORD *)this + 22) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::GnssPreprocessedMeasurementsEvent(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent *a2)
{
  *(void *)this = &unk_1EDD0FC50;
  *((unsigned char *)this + 80) = 0;
  *((_DWORD *)this + 21) = 0;
  *((_DWORD *)this + 22) = 0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *((_DWORD *)this + 18) = 0;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::MergeFrom(this, a2);
  return this;
}

void sub_18DF35DD0(_Unwind_Exception *a1)
{
  sub_18DF0C324(v1 + 7);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::~GnssPreprocessedMeasurementsEvent(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent *this)
{
  *(void *)this = &unk_1EDD0FC50;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::SharedDtor(this);
  sub_18DF0C324((uint64_t *)this + 7);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::~GnssPreprocessedMeasurementsEvent(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::SharedDtor(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent *this)
{
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 6);
    if (v3)
    {
      int v4 = *(void (**)(void))(*(void *)v3 + 8);
      v4();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::default_instance(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent *this)
{
  return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 84) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::New(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 28))
  {
    *(void *)(this + 8) = 0;
    *(void *)(this + 16) = 0;
  }
  *(_DWORD *)(this + 28) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 44))
  {
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 8) = 0u;
  }
  *(_DWORD *)(this + 44) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent *)((char *)this + 56);
  while (1)
  {
    int v5 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v5 < *((void *)a2 + 2) && (*v5 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_7;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_28;
        }
        *((_DWORD *)this + 22) |= 1u;
        int v8 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *)*((void *)this + 1);
        if (!v8) {
          operator new();
        }
        v43[0] = 0;
        int v9 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v9 >= *((void *)a2 + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v43))return 0; {
        }
          }
        else
        {
          v43[0] = *v9;
          *((void *)a2 + 1) = v9 + 1;
        }
        int v13 = *((_DWORD *)a2 + 14);
        int v14 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v13 + 1;
        if (v13 >= v14) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::MergePartialFromCodedStream(v8, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v15 = *((_DWORD *)a2 + 14);
        BOOL v16 = __OFSUB__(v15, 1);
        int v17 = v15 - 1;
        if (v17 < 0 == v16) {
          *((_DWORD *)a2 + 14) = v17;
        }
        int v18 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v18 >= *((void *)a2 + 2) || *v18 != 17) {
          continue;
        }
        *((void *)a2 + 1) = v18 + 1;
        goto LABEL_40;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_28;
        }
LABEL_40:
        *(void *)int v43 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v43) & 1) == 0)return 0; {
        *((void *)this + 2) = *(void *)v43;
        }
        *((_DWORD *)this + 22) |= 2u;
        unsigned int v19 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v19 >= *((void *)a2 + 2) || *v19 != 25) {
          continue;
        }
        *((void *)a2 + 1) = v19 + 1;
LABEL_44:
        *(void *)int v43 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v43) & 1) == 0)return 0; {
        *((void *)this + 3) = *(void *)v43;
        }
        *((_DWORD *)this + 22) |= 4u;
        int v20 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v20 >= *((void *)a2 + 2) || *v20 != 33) {
          continue;
        }
        *((void *)a2 + 1) = v20 + 1;
LABEL_48:
        *(void *)int v43 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v43) & 1) == 0)return 0; {
        *((void *)this + 4) = *(void *)v43;
        }
        *((_DWORD *)this + 22) |= 8u;
        unsigned int v21 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v21 >= *((void *)a2 + 2) || *v21 != 41) {
          continue;
        }
        *((void *)a2 + 1) = v21 + 1;
LABEL_52:
        *(void *)int v43 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v43) & 1) == 0)return 0; {
        *((void *)this + 5) = *(void *)v43;
        }
        *((_DWORD *)this + 22) |= 0x10u;
        int v22 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
        if ((unint64_t)v22 >= v10 || *v22 != 48) {
          continue;
        }
        int v11 = v22 + 1;
        *((void *)a2 + 1) = v11;
LABEL_56:
        v43[0] = 0;
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v43);
          if (!result) {
            return result;
          }
          unsigned int v23 = v43[0];
          int v24 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v10 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v23 = *v11;
          int v24 = v11 + 1;
          *((void *)a2 + 1) = v24;
        }
        *((unsigned char *)this + 80) = v23 != 0;
        int v12 = *((_DWORD *)this + 22) | 0x20;
        *((_DWORD *)this + 22) = v12;
        if ((unint64_t)v24 >= v10 || *v24 != 58) {
          continue;
        }
        *((void *)a2 + 1) = v24 + 1;
LABEL_64:
        *((_DWORD *)this + 22) = v12 | 0x40;
        int v26 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel *)*((void *)this + 6);
        if (!v26) {
          operator new();
        }
        v43[0] = 0;
        unsigned int v27 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v27 >= *((void *)a2 + 2) || *v27 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v43))return 0; {
        }
          }
        else
        {
          v43[0] = *v27;
          *((void *)a2 + 1) = v27 + 1;
        }
        int v28 = *((_DWORD *)a2 + 14);
        int v29 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v28 + 1;
        if (v28 >= v29) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel::MergePartialFromCodedStream(v26, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v30 = *((_DWORD *)a2 + 14);
        BOOL v16 = __OFSUB__(v30, 1);
        int v31 = v30 - 1;
        if (v31 < 0 == v16) {
          *((_DWORD *)a2 + 14) = v31;
        }
        int v32 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v32 < *((void *)a2 + 2) && *v32 == 66)
        {
          do
          {
            *((void *)a2 + 1) = v32 + 1;
LABEL_78:
            int v33 = *((_DWORD *)this + 17);
            uint64_t v34 = *((int *)this + 16);
            if ((int)v34 >= v33)
            {
              if (v33 == *((_DWORD *)this + 18))
              {
                wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
                int v33 = *((_DWORD *)this + 17);
              }
              *((_DWORD *)this + 17) = v33 + 1;
              operator new();
            }
            uint64_t v35 = *((void *)this + 7);
            *((_DWORD *)this + 16) = v34 + 1;
            unsigned int v36 = *(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData **)(v35 + 8 * v34);
            v43[0] = 0;
            int v37 = (char *)*((void *)a2 + 1);
            if ((unint64_t)v37 >= *((void *)a2 + 2) || *v37 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v43))return 0; {
            }
              }
            else
            {
              v43[0] = *v37;
              *((void *)a2 + 1) = v37 + 1;
            }
            int v38 = *((_DWORD *)a2 + 14);
            int v39 = *((_DWORD *)a2 + 15);
            *((_DWORD *)a2 + 14) = v38 + 1;
            if (v38 >= v39) {
              return 0;
            }
            wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
            if (!CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::MergePartialFromCodedStream(v36, a2)|| !*((unsigned char *)a2 + 36))
            {
              return 0;
            }
            wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
            int v40 = *((_DWORD *)a2 + 14);
            BOOL v16 = __OFSUB__(v40, 1);
            int v41 = v40 - 1;
            if (v41 < 0 == v16) {
              *((_DWORD *)a2 + 14) = v41;
            }
            int v32 = (unsigned char *)*((void *)a2 + 1);
            int v42 = (unsigned char *)*((void *)a2 + 2);
          }
          while (v32 < v42 && *v32 == 66);
          if (v32 == v42 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)a2 + 36) = 1;
            return result;
          }
        }
        break;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_44;
        }
        goto LABEL_28;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_48;
        }
        goto LABEL_28;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_52;
        }
        goto LABEL_28;
      case 6u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_28;
        }
        int v11 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
        goto LABEL_56;
      case 7u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_28;
        }
        int v12 = *((_DWORD *)this + 22);
        goto LABEL_64;
      case 8u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_28;
        }
        goto LABEL_78;
      default:
        int v7 = TagFallback & 7;
LABEL_28:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 88);
  if (v6)
  {
    uint64_t v7 = *(void *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
      uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::default_instance_
                     + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 88);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v5 + 16), a3);
  int v6 = *(_DWORD *)(v5 + 88);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_14;
  }
LABEL_13:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 88);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_15;
  }
LABEL_14:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 88);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_16;
  }
LABEL_15:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(v5 + 40), a3);
  int v6 = *(_DWORD *)(v5 + 88);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_20;
    }
    goto LABEL_17;
  }
LABEL_16:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(unsigned __int8 *)(v5 + 80), (uint64_t)a2, a4);
  if ((*(_DWORD *)(v5 + 88) & 0x40) == 0) {
    goto LABEL_20;
  }
LABEL_17:
  uint64_t v8 = *(void *)(v5 + 48);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
    uint64_t v8 = *(void *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::default_instance_
                   + 48);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, v8, a2, a4);
LABEL_20:
  if (*(int *)(v5 + 64) >= 1)
  {
    uint64_t v9 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(void *)(*(void *)(v5 + 56) + 8 * v9++), a2, a4);
    while (v9 < *(int *)(v5 + 64));
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::ByteSize(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 88);
  if ((_BYTE)v2)
  {
    if (*((unsigned char *)this + 88))
    {
      uint64_t v5 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *)*((void *)this + 1);
      if (!v5)
      {
        CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(0);
        uint64_t v5 = *(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::default_instance_ + 8);
      }
      int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::ByteSize(v5);
      int v7 = (int)v6;
      if (v6 >= 0x80) {
        int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
      }
      else {
        int v8 = 1;
      }
      int v3 = v7 + v8 + 1;
      int v2 = *((_DWORD *)this + 22);
    }
    else
    {
      int v3 = 0;
    }
    if ((v2 & 2) != 0) {
      v3 += 9;
    }
    if ((v2 & 4) != 0) {
      v3 += 9;
    }
    if ((v2 & 8) != 0) {
      v3 += 9;
    }
    if ((v2 & 0x10) != 0) {
      v3 += 9;
    }
    if ((v2 & 0x20) != 0) {
      int v4 = v3 + 2;
    }
    else {
      int v4 = v3;
    }
    if ((v2 & 0x40) != 0)
    {
      uint64_t v9 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel *)*((void *)this + 6);
      if (!v9)
      {
        CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(0);
        uint64_t v9 = *(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::default_instance_ + 48);
      }
      v4 += CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel::ByteSize(v9)
          + 2;
    }
  }
  else
  {
    int v4 = 0;
  }
  int v10 = *((_DWORD *)this + 16);
  uint64_t v11 = (v10 + v4);
  if (v10 >= 1)
  {
    uint64_t v12 = 0;
    do
    {
      int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::ByteSize(*(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData **)(*((void *)this + 7) + 8 * v12));
      int v14 = (int)v13;
      if (v13 >= 0x80) {
        int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
      }
      else {
        int v15 = 1;
      }
      uint64_t v11 = (v14 + v11 + v15);
      ++v12;
    }
    while (v12 < *((int *)this + 16));
  }
  *((_DWORD *)this + 21) = v11;
  return v11;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::MergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 28);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 28))
    {
      uint64_t v6 = *((void *)a2 + 1);
      *((_DWORD *)this + 7) |= 1u;
      *((void *)this + 1) = v6;
      int v5 = *((_DWORD *)a2 + 7);
    }
    if ((v5 & 2) != 0)
    {
      double result = *((double *)a2 + 2);
      *((_DWORD *)this + 7) |= 2u;
      *((double *)this + 2) = result;
    }
  }
  return result;
}

void sub_18DF36A8C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel::MergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 44);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 44))
    {
      double result = *((double *)a2 + 1);
      *((_DWORD *)this + 11) |= 1u;
      *((double *)this + 1) = result;
      int v5 = *((_DWORD *)a2 + 11);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_12;
      }
    }
    else if ((*((unsigned char *)a2 + 44) & 2) == 0)
    {
      goto LABEL_6;
    }
    double result = *((double *)a2 + 2);
    *((_DWORD *)this + 11) |= 2u;
    *((double *)this + 2) = result;
    int v5 = *((_DWORD *)a2 + 11);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        return result;
      }
      goto LABEL_8;
    }
LABEL_12:
    double result = *((double *)a2 + 3);
    *((_DWORD *)this + 11) |= 4u;
    *((double *)this + 3) = result;
    if ((*((_DWORD *)a2 + 11) & 8) == 0) {
      return result;
    }
LABEL_8:
    double result = *((double *)a2 + 4);
    *((_DWORD *)this + 11) |= 8u;
    *((double *)this + 4) = result;
  }
  return result;
}

void sub_18DF36B98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::CopyFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::IsInitialized(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent *a2)
{
  if (a2 != (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent *)this)
  {
    uint64_t v3 = this;
    uint64_t v4 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v4;
    uint64_t v5 = *(void *)(this + 16);
    *(void *)(this + 16) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v5;
    uint64_t v6 = *(void *)(this + 24);
    *(void *)(this + 24) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v6;
    uint64_t v7 = *(void *)(this + 32);
    *(void *)(this + 32) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v7;
    uint64_t v8 = *(void *)(this + 40);
    *(void *)(this + 40) = *((void *)a2 + 5);
    *((void *)a2 + 5) = v8;
    LOBYTE(v4) = *(unsigned char *)(this + 80);
    *(unsigned char *)(this + 80) = *((unsigned char *)a2 + 80);
    *((unsigned char *)a2 + 80) = v4;
    uint64_t v9 = *(void *)(this + 48);
    *(void *)(this + 48) = *((void *)a2 + 6);
    *((void *)a2 + 6) = v9;
    this = wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    int v10 = *(_DWORD *)(v3 + 88);
    *(_DWORD *)(v3 + 88) = *((_DWORD *)a2 + 22);
    *((_DWORD *)a2 + 22) = v10;
    int v11 = *(_DWORD *)(v3 + 84);
    *(_DWORD *)(v3 + 84) = *((_DWORD *)a2 + 21);
    *((_DWORD *)a2 + 21) = v11;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssPreprocessedMeasurementsEvent::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.InternalToolData.GnssMsmtAnalysisToolData.GnssPreprocessedMeasurementsEvent");
}

void *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::SharedCtor(void *this)
{
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::CNTimeSpan(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *a2)
{
  *(void *)this = &unk_1EDD0F4D0;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::MergeFrom(this, a2);
  return this;
}

void sub_18DF36D78(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::~CNTimeSpan(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *this)
{
  *(void *)this = &unk_1EDD0F4D0;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::~CNTimeSpan(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::default_instance(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *this)
{
  return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 24) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::New(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v4 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v4;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((void *)a2 + 1) = v4 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_15;
        }
        unint64_t v12 = 0;
        uint64_t v8 = (char *)*((void *)a2 + 1);
        unint64_t v7 = *((void *)a2 + 2);
        if ((unint64_t)v8 >= v7 || *v8 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, &v12);
          if (!result) {
            return result;
          }
          unint64_t v9 = v12;
          int v10 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v7 = *((void *)a2 + 2);
        }
        else
        {
          unint64_t v9 = *v8;
          int v10 = v8 + 1;
          *((void *)a2 + 1) = v10;
        }
        *((void *)this + 1) = v9;
        *((_DWORD *)this + 7) |= 1u;
        if ((unint64_t)v10 < v7 && *v10 == 17)
        {
          *((void *)a2 + 1) = v10 + 1;
          goto LABEL_23;
        }
      }
      if (TagFallback >> 3 != 2) {
        break;
      }
      int v6 = TagFallback & 7;
      if (v6 != 1) {
        goto LABEL_15;
      }
LABEL_23:
      unint64_t v12 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v12) & 1) == 0) {
        return 0;
      }
      *((void *)this + 2) = v12;
      *((_DWORD *)this + 7) |= 2u;
      if (*((void *)a2 + 1) == *((void *)a2 + 2)
        && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      }
    }
    int v6 = TagFallback & 7;
LABEL_15:
    if (v6 == 4) {
      return 1;
    }
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0);
  return 0;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 28);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 28);
  }
  if ((v6 & 2) != 0)
  {
    double v7 = *(double *)(v5 + 16);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, v7, a3);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::ByteSize(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 28);
  if ((_BYTE)v2)
  {
    if (*((unsigned char *)this + 28))
    {
      unsigned int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*((wireless_diagnostics::google::protobuf::io::CodedOutputStream **)this
                                                                                       + 1))
         + 1;
      int v2 = *((_DWORD *)this + 7);
    }
    else
    {
      unsigned int v3 = 0;
    }
    if ((v2 & 2) != 0) {
      uint64_t result = v3 + 9;
    }
    else {
      uint64_t result = v3;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  *((_DWORD *)this + 6) = result;
  return result;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::CopyFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::IsInitialized(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::Swap(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *this, CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    double result = *((double *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((double *)a2 + 2) = result;
    LODWORD(v2) = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v2;
    LODWORD(v2) = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v2;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.InternalToolData.GnssMsmtAnalysisToolData.CNTimeSpan");
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel::SharedCtor(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel *this)
{
  *((void *)this + 5) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel::GnssReceiverClockModel(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel *a2)
{
  *(void *)this = &unk_1EDD0F908;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((void *)this + 5) = 0;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel::MergeFrom(this, a2);
  return this;
}

void sub_18DF372F8(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel::~GnssReceiverClockModel(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel *this)
{
  *(void *)this = &unk_1EDD0F908;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel::~GnssReceiverClockModel(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel::default_instance(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel *this)
{
  return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 40) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel::New(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (2)
  {
    uint64_t v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_29;
        }
        unint64_t v11 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0) {
          return 0;
        }
        *((void *)this + 1) = v11;
        *((_DWORD *)this + 11) |= 1u;
        double v7 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v7 >= *((void *)a2 + 2) || *v7 != 17) {
          continue;
        }
        *((void *)a2 + 1) = v7 + 1;
        goto LABEL_14;
      case 2u:
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_29;
        }
LABEL_14:
        unint64_t v11 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0) {
          return 0;
        }
        *((void *)this + 2) = v11;
        *((_DWORD *)this + 11) |= 2u;
        uint64_t v8 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 != 25) {
          continue;
        }
        *((void *)a2 + 1) = v8 + 1;
LABEL_19:
        unint64_t v11 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0) {
          return 0;
        }
        *((void *)this + 3) = v11;
        *((_DWORD *)this + 11) |= 4u;
        unint64_t v9 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v9 >= *((void *)a2 + 2) || *v9 != 33) {
          continue;
        }
        *((void *)a2 + 1) = v9 + 1;
LABEL_24:
        unint64_t v11 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0) {
          return 0;
        }
        *((void *)this + 4) = v11;
        *((_DWORD *)this + 11) |= 8u;
        if (*((void *)a2 + 1) != *((void *)a2 + 2)
          || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
        {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        break;
      case 3u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_19;
        }
        goto LABEL_29;
      case 4u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_24;
        }
        goto LABEL_29;
      default:
        int v6 = TagFallback & 7;
LABEL_29:
        if (v6 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
    return result;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = this;
  int v5 = *(_DWORD *)(this + 44);
  if (v5)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
    int v5 = *(_DWORD *)(v4 + 44);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
LABEL_8:
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v4 + 24), a3);
      if ((*(_DWORD *)(v4 + 44) & 8) == 0) {
        return this;
      }
      goto LABEL_9;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v4 + 16), a3);
  int v5 = *(_DWORD *)(v4 + 44);
  if ((v5 & 4) != 0) {
    goto LABEL_8;
  }
LABEL_4:
  if ((v5 & 8) == 0) {
    return this;
  }
LABEL_9:
  double v6 = *(double *)(v4 + 32);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, v6, a3);
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel::ByteSize(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel *this)
{
  uint64_t v1 = *((unsigned __int8 *)this + 44);
  if (*((unsigned char *)this + 44))
  {
    unsigned int v2 = ((int)(v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0) {
      v2 += 9;
    }
    if ((v1 & 4) != 0) {
      v2 += 9;
    }
    if ((v1 & 8) != 0) {
      uint64_t v1 = v2 + 9;
    }
    else {
      uint64_t v1 = v2;
    }
  }
  *((_DWORD *)this + 10) = v1;
  return v1;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel::CopyFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel::IsInitialized(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel::Swap(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel *this, CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    uint64_t v3 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    uint64_t v4 = *((void *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v4;
    double result = *((double *)this + 4);
    *((void *)this + 4) = *((void *)a2 + 4);
    *((double *)a2 + 4) = result;
    int v6 = *((_DWORD *)this + 11);
    *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v6;
    int v7 = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v7;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssReceiverClockModel::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.InternalToolData.GnssMsmtAnalysisToolData.GnssReceiverClockModel");
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::SharedCtor(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData *this)
{
  double result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *((void *)this + 10) = 0;
  *((void *)this + 11) = 0;
  *((_DWORD *)this + 24) = 0;
  return result;
}

CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::GnssSvAndMeasurementData(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData *a2)
{
  *(void *)this = &unk_1EDD0FAE8;
  *((void *)this + 10) = 0;
  *((void *)this + 11) = 0;
  *((_DWORD *)this + 24) = 0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *((_DWORD *)this + 18) = 0;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::MergeFrom(this, a2);
  return this;
}

void sub_18DF379B0(_Unwind_Exception *a1)
{
  sub_18DF0C324(v1 + 7);
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite((wireless_diagnostics::google::protobuf::MessageLite *)v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::MergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v21);
  }
  uint64_t v4 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData *)((char *)this + 56));
  if (*((int *)a2 + 16) >= 1)
  {
    uint64_t v5 = 0;
    do
    {
      int v6 = *(const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable **)(*((void *)a2 + 7) + 8 * v5);
      int v7 = *((_DWORD *)this + 17);
      uint64_t v8 = *((int *)this + 16);
      if ((int)v8 >= v7)
      {
        if (v7 == *((_DWORD *)this + 18))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData *)((char *)this + 56));
          int v7 = *((_DWORD *)this + 17);
        }
        *((_DWORD *)this + 17) = v7 + 1;
        operator new();
      }
      uint64_t v9 = *((void *)this + 7);
      *((_DWORD *)this + 16) = v8 + 1;
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::MergeFrom(*(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable **)(v9 + 8 * v8), v6);
      ++v5;
    }
    while (v5 < *((int *)a2 + 16));
  }
  int v10 = *((_DWORD *)a2 + 24);
  if (!(_BYTE)v10) {
    goto LABEL_20;
  }
  if (v10)
  {
    *((_DWORD *)this + 24) |= 1u;
    int v13 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *)*((void *)this + 1);
    if (!v13) {
      operator new();
    }
    int v14 = (const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *)*((void *)a2 + 1);
    if (!v14)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(v4);
      int v14 = *(const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::default_instance_ + 8);
    }
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::MergeFrom(v13, v14);
    int v10 = *((_DWORD *)a2 + 24);
    if ((v10 & 2) == 0)
    {
LABEL_14:
      if ((v10 & 4) == 0) {
        goto LABEL_15;
      }
      goto LABEL_34;
    }
  }
  else if ((v10 & 2) == 0)
  {
    goto LABEL_14;
  }
  *((_DWORD *)this + 24) |= 2u;
  int v15 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides *)*((void *)this + 2);
  if (!v15) {
    operator new();
  }
  BOOL v16 = (const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides *)*((void *)a2 + 2);
  if (!v16)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(v4);
    BOOL v16 = *(const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::default_instance_ + 16);
  }
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::MergeFrom(v15, v16);
  int v10 = *((_DWORD *)a2 + 24);
  if ((v10 & 4) == 0)
  {
LABEL_15:
    if ((v10 & 8) == 0) {
      goto LABEL_16;
    }
    goto LABEL_35;
  }
LABEL_34:
  uint64_t v17 = *((void *)a2 + 3);
  *((_DWORD *)this + 24) |= 4u;
  *((void *)this + 3) = v17;
  int v10 = *((_DWORD *)a2 + 24);
  if ((v10 & 8) == 0)
  {
LABEL_16:
    if ((v10 & 0x10) == 0) {
      goto LABEL_17;
    }
LABEL_36:
    uint64_t v19 = *((void *)a2 + 5);
    *((_DWORD *)this + 24) |= 0x10u;
    *((void *)this + 5) = v19;
    int v10 = *((_DWORD *)a2 + 24);
    if ((v10 & 0x20) == 0)
    {
LABEL_18:
      if ((v10 & 0x80) == 0) {
        goto LABEL_20;
      }
      goto LABEL_19;
    }
    goto LABEL_37;
  }
LABEL_35:
  uint64_t v18 = *((void *)a2 + 4);
  *((_DWORD *)this + 24) |= 8u;
  *((void *)this + 4) = v18;
  int v10 = *((_DWORD *)a2 + 24);
  if ((v10 & 0x10) != 0) {
    goto LABEL_36;
  }
LABEL_17:
  if ((v10 & 0x20) == 0) {
    goto LABEL_18;
  }
LABEL_37:
  uint64_t v20 = *((void *)a2 + 6);
  *((_DWORD *)this + 24) |= 0x20u;
  *((void *)this + 6) = v20;
  int v10 = *((_DWORD *)a2 + 24);
  if ((v10 & 0x80) != 0)
  {
LABEL_19:
    uint64_t v11 = *((void *)a2 + 10);
    *((_DWORD *)this + 24) |= 0x80u;
    *((void *)this + 10) = v11;
    int v10 = *((_DWORD *)a2 + 24);
  }
LABEL_20:
  if ((v10 & 0x100) != 0)
  {
    unsigned int v12 = *((_DWORD *)a2 + 22);
    if (v12 >= 7) {
      __assert_rtn("set_sv_position_source", "CoreNavigationCLPGnssMsmtAnalysisToolData.pb.h", 6209, "::CoreNavigation::CLP::LogEntry::PrivateData::SvPositionSource_IsValid(value)");
    }
    *((_DWORD *)this + 24) |= 0x100u;
    *((_DWORD *)this + 22) = v12;
  }
}

void sub_18DF37D50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::~GnssSvAndMeasurementData(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData *this)
{
  *(void *)this = &unk_1EDD0FAE8;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::SharedDtor(this);
  sub_18DF0C324((uint64_t *)this + 7);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::~GnssSvAndMeasurementData(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::SharedDtor(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData *this)
{
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 2);
    if (v3)
    {
      uint64_t v4 = *(void (**)(void))(*(void *)v3 + 8);
      v4();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::default_instance(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData *this)
{
  return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 92) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::New(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::Clear(uint64_t this)
{
  uint64_t v1 = this;
  int v2 = *(_DWORD *)(this + 96);
  if ((_BYTE)v2)
  {
    if (v2)
    {
      uint64_t v3 = *(void *)(this + 8);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 20)) {
          *(void *)(v3 + 8) = 0;
        }
        *(_DWORD *)(v3 + 20) = 0;
        int v2 = *(_DWORD *)(this + 96);
      }
    }
    if ((v2 & 2) != 0)
    {
      this = *(void *)(this + 16);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::Clear(this);
        int v2 = *(_DWORD *)(v1 + 96);
      }
    }
    *(void *)(v1 + 80) = 0;
    *(_OWORD *)(v1 + 24) = 0u;
    *(_OWORD *)(v1 + 40) = 0u;
  }
  if ((v2 & 0xFF00) != 0) {
    *(_DWORD *)(v1 + 88) = 0;
  }
  if (*(int *)(v1 + 64) >= 1)
  {
    uint64_t v4 = 0;
    do
    {
      uint64_t v5 = *(void *)(*(void *)(v1 + 56) + 8 * v4);
      this = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 32))(v5);
      ++v4;
    }
    while (v4 < *(int *)(v1 + 64));
  }
  *(_DWORD *)(v1 + 64) = 0;
  *(_DWORD *)(v1 + 96) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::Clear(uint64_t this)
{
  LOBYTE(v1) = *(unsigned char *)(this + 108);
  if ((_BYTE)v1)
  {
    if (*(unsigned char *)(this + 108))
    {
      uint64_t v2 = *(void *)(this + 8);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 20)) {
          *(void *)(v2 + 8) = 0;
        }
        *(_DWORD *)(v2 + 20) = 0;
        int v1 = *(_DWORD *)(this + 108);
      }
    }
    if ((v1 & 2) != 0)
    {
      uint64_t v3 = *(void *)(this + 16);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 28))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
        }
        *(_DWORD *)(v3 + 28) = 0;
        int v1 = *(_DWORD *)(this + 108);
      }
    }
    if ((v1 & 4) != 0)
    {
      uint64_t v4 = *(void *)(this + 24);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 28))
        {
          *(void *)(v4 + 8) = 0;
          *(void *)(v4 + 16) = 0;
        }
        *(_DWORD *)(v4 + 28) = 0;
        int v1 = *(_DWORD *)(this + 108);
      }
    }
    if ((v1 & 8) != 0)
    {
      uint64_t v5 = *(void *)(this + 32);
      if (v5)
      {
        if (*(unsigned char *)(v5 + 28))
        {
          *(void *)(v5 + 8) = 0;
          *(void *)(v5 + 16) = 0;
        }
        *(_DWORD *)(v5 + 28) = 0;
      }
    }
  }
  *(_DWORD *)(this + 48) = 0;
  *(_DWORD *)(this + 64) = 0;
  *(_DWORD *)(this + 80) = 0;
  *(_DWORD *)(this + 96) = 0;
  *(_DWORD *)(this + 108) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData *)((char *)this + 56);
  while (1)
  {
LABEL_2:
    uint64_t v5 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v5 < *((void *)a2 + 2) && (*v5 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_7;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_7:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_30;
        }
        *((_DWORD *)this + 24) |= 1u;
        uint64_t v8 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *)*((void *)this + 1);
        if (!v8) {
          operator new();
        }
        v42[0] = 0;
        uint64_t v9 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v9 >= *((void *)a2 + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v42))return 0; {
        }
          }
        else
        {
          v42[0] = *v9;
          *((void *)a2 + 1) = v9 + 1;
        }
        int v12 = *((_DWORD *)a2 + 14);
        int v13 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v12 + 1;
        if (v12 >= v13) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::MergePartialFromCodedStream(v8, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v14 = *((_DWORD *)a2 + 14);
        BOOL v15 = __OFSUB__(v14, 1);
        int v16 = v14 - 1;
        if (v16 < 0 == v15) {
          *((_DWORD *)a2 + 14) = v16;
        }
        uint64_t v17 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v17 >= *((void *)a2 + 2) || *v17 != 18) {
          continue;
        }
        *((void *)a2 + 1) = v17 + 1;
        goto LABEL_43;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_30;
        }
LABEL_43:
        *((_DWORD *)this + 24) |= 2u;
        uint64_t v18 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides *)*((void *)this + 2);
        if (!v18) {
          operator new();
        }
        v42[0] = 0;
        uint64_t v19 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v19 >= *((void *)a2 + 2) || *v19 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v42))return 0; {
        }
          }
        else
        {
          v42[0] = *v19;
          *((void *)a2 + 1) = v19 + 1;
        }
        int v20 = *((_DWORD *)a2 + 14);
        int v21 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v20 + 1;
        if (v20 >= v21) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::MergePartialFromCodedStream(v18, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v22 = *((_DWORD *)a2 + 14);
        BOOL v15 = __OFSUB__(v22, 1);
        int v23 = v22 - 1;
        if (v23 < 0 == v15) {
          *((_DWORD *)a2 + 14) = v23;
        }
        int v24 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v24 >= *((void *)a2 + 2) || *v24 != 25) {
          continue;
        }
        *((void *)a2 + 1) = v24 + 1;
LABEL_57:
        *(void *)int v42 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v42) & 1) == 0)return 0; {
        *((void *)this + 3) = *(void *)v42;
        }
        *((_DWORD *)this + 24) |= 4u;
        unsigned int v25 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v25 >= *((void *)a2 + 2) || *v25 != 33) {
          continue;
        }
        *((void *)a2 + 1) = v25 + 1;
LABEL_61:
        *(void *)int v42 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v42) & 1) == 0)return 0; {
        *((void *)this + 4) = *(void *)v42;
        }
        *((_DWORD *)this + 24) |= 8u;
        int v26 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v26 >= *((void *)a2 + 2) || *v26 != 41) {
          continue;
        }
        *((void *)a2 + 1) = v26 + 1;
LABEL_65:
        *(void *)int v42 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v42) & 1) == 0)return 0; {
        *((void *)this + 5) = *(void *)v42;
        }
        *((_DWORD *)this + 24) |= 0x10u;
        unsigned int v27 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v27 >= *((void *)a2 + 2) || *v27 != 49) {
          continue;
        }
        *((void *)a2 + 1) = v27 + 1;
LABEL_69:
        *(void *)int v42 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v42) & 1) == 0)return 0; {
        *((void *)this + 6) = *(void *)v42;
        }
        *((_DWORD *)this + 24) |= 0x20u;
        int v28 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v28 >= *((void *)a2 + 2) || *v28 != 58) {
          continue;
        }
        do
        {
          *((void *)a2 + 1) = v28 + 1;
LABEL_73:
          int v29 = *((_DWORD *)this + 17);
          uint64_t v30 = *((int *)this + 16);
          if ((int)v30 >= v29)
          {
            if (v29 == *((_DWORD *)this + 18))
            {
              wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v4);
              int v29 = *((_DWORD *)this + 17);
            }
            *((_DWORD *)this + 17) = v29 + 1;
            operator new();
          }
          uint64_t v31 = *((void *)this + 7);
          *((_DWORD *)this + 16) = v30 + 1;
          int v32 = *(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable **)(v31 + 8 * v30);
          v42[0] = 0;
          int v33 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v33 >= *((void *)a2 + 2) || *v33 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v42))return 0; {
          }
            }
          else
          {
            v42[0] = *v33;
            *((void *)a2 + 1) = v33 + 1;
          }
          int v34 = *((_DWORD *)a2 + 14);
          int v35 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v34 + 1;
          if (v34 >= v35) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::MergePartialFromCodedStream(v32, a2)|| !*((unsigned char *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          int v36 = *((_DWORD *)a2 + 14);
          BOOL v15 = __OFSUB__(v36, 1);
          int v37 = v36 - 1;
          if (v37 < 0 == v15) {
            *((_DWORD *)a2 + 14) = v37;
          }
          int v28 = (unsigned char *)*((void *)a2 + 1);
          if ((unint64_t)v28 >= *((void *)a2 + 2)) {
            goto LABEL_2;
          }
          int v38 = *v28;
        }
        while (v38 == 58);
        if (v38 != 65) {
          continue;
        }
        *((void *)a2 + 1) = v28 + 1;
LABEL_91:
        *(void *)int v42 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v42) & 1) == 0)return 0; {
        *((void *)this + 10) = *(void *)v42;
        }
        *((_DWORD *)this + 24) |= 0x80u;
        int v39 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
        if ((unint64_t)v39 < v10 && *v39 == 72)
        {
          uint64_t v11 = v39 + 1;
          *((void *)a2 + 1) = v11;
LABEL_95:
          v42[0] = 0;
          if ((unint64_t)v11 >= v10 || *v11 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v42);
            if (!result) {
              return result;
            }
            unsigned int v40 = v42[0];
          }
          else
          {
            unsigned int v40 = *v11;
            *((void *)a2 + 1) = v11 + 1;
          }
          if (v40 <= 6)
          {
            *((_DWORD *)this + 24) |= 0x100u;
            *((_DWORD *)this + 22) = v40;
          }
          if (*((void *)a2 + 1) == *((void *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)a2 + 36) = 1;
            return result;
          }
        }
        break;
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_57;
        }
        goto LABEL_30;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_61;
        }
        goto LABEL_30;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_65;
        }
        goto LABEL_30;
      case 6u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_69;
        }
        goto LABEL_30;
      case 7u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_73;
        }
        goto LABEL_30;
      case 8u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_91;
        }
        goto LABEL_30;
      case 9u:
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_30;
        }
        uint64_t v11 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
        goto LABEL_95;
      default:
        int v7 = TagFallback & 7;
LABEL_30:
        if (v7 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 96);
  if (v6)
  {
    uint64_t v9 = *(void *)(this + 8);
    if (!v9)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
      uint64_t v9 = *(void *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::default_instance_
                     + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v9, a2, a4);
    int v6 = *(_DWORD *)(v5 + 96);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_20;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v10 = *(void *)(v5 + 16);
  if (!v10)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
    uint64_t v10 = *(void *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::default_instance_
                    + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v10, a2, a4);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_22;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 96);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(v5 + 40), a3);
  if ((*(_DWORD *)(v5 + 96) & 0x20) != 0) {
LABEL_7:
  }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(double *)(v5 + 48), a3);
LABEL_8:
  if (*(int *)(v5 + 64) >= 1)
  {
    uint64_t v7 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(void *)(*(void *)(v5 + 56) + 8 * v7++), a2, a4);
    while (v7 < *(int *)(v5 + 64));
  }
  int v8 = *(_DWORD *)(v5 + 96);
  if ((v8 & 0x80) != 0)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (uint64_t)a2, *(double *)(v5 + 80), a3);
    if ((*(_DWORD *)(v5 + 96) & 0x100) == 0) {
      return this;
    }
  }
  else if ((v8 & 0x100) == 0)
  {
    return this;
  }
  uint64_t v11 = *(unsigned int *)(v5 + 88);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, v11, (uint64_t)a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::ByteSize(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData *this)
{
  int v2 = *((_DWORD *)this + 24);
  if (!(_BYTE)v2)
  {
    int v4 = 0;
    if ((v2 & 0x100) == 0) {
      goto LABEL_37;
    }
    goto LABEL_31;
  }
  if ((v2 & 1) == 0)
  {
    int v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_19;
    }
    goto LABEL_13;
  }
  uint64_t v5 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *)*((void *)this + 1);
  if (!v5)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(0);
    uint64_t v5 = *(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::default_instance_ + 8);
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::ByteSize(v5);
  int v7 = (int)v6;
  if (v6 >= 0x80) {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
  }
  else {
    int v8 = 1;
  }
  int v3 = v7 + v8 + 1;
  int v2 = *((_DWORD *)this + 24);
  if ((v2 & 2) != 0)
  {
LABEL_13:
    uint64_t v9 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides *)*((void *)this + 2);
    if (!v9)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(0);
      uint64_t v9 = *(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::default_instance_ + 16);
    }
    uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::ByteSize(v9);
    int v11 = (int)v10;
    if (v10 >= 0x80) {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
    }
    else {
      int v12 = 1;
    }
    v3 += v11 + v12 + 1;
    int v2 = *((_DWORD *)this + 24);
  }
LABEL_19:
  int v13 = v3 + 9;
  if ((v2 & 4) == 0) {
    int v13 = v3;
  }
  if ((v2 & 8) != 0) {
    v13 += 9;
  }
  if ((v2 & 0x10) != 0) {
    v13 += 9;
  }
  if ((v2 & 0x20) != 0) {
    v13 += 9;
  }
  if ((v2 & 0x80) != 0) {
    int v4 = v13 + 9;
  }
  else {
    int v4 = v13;
  }
  if ((v2 & 0x100) != 0)
  {
LABEL_31:
    int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 22);
    if ((v14 & 0x80000000) != 0)
    {
      int v15 = 11;
    }
    else if (v14 >= 0x80)
    {
      int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14) + 1;
    }
    else
    {
      int v15 = 2;
    }
    v4 += v15;
  }
LABEL_37:
  int v16 = *((_DWORD *)this + 16);
  uint64_t v17 = (v16 + v4);
  if (v16 >= 1)
  {
    uint64_t v18 = 0;
    do
    {
      uint64_t v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::ByteSize(*(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable **)(*((void *)this + 7) + 8 * v18));
      int v20 = (int)v19;
      if (v19 >= 0x80) {
        int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19);
      }
      else {
        int v21 = 1;
      }
      uint64_t v17 = (v20 + v17 + v21);
      ++v18;
    }
    while (v18 < *((int *)this + 16));
  }
  *((_DWORD *)this + 23) = v17;
  return v17;
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::MergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides *a2)
{
  int v3 = this;
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v18);
  }
  int v5 = *((_DWORD *)a2 + 12);
  if (v5)
  {
    sub_18DF0C278((uint64_t)v3 + 40, *((_DWORD *)v3 + 12) + v5);
    this = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides *)memcpy((void *)(*((void *)v3 + 5) + 8 * *((int *)v3 + 12)), *((const void **)a2 + 5), 8 * *((int *)a2 + 12));
    *((_DWORD *)v3 + 12) += *((_DWORD *)a2 + 12);
  }
  int v6 = *((_DWORD *)a2 + 16);
  if (v6)
  {
    sub_18DF0C278((uint64_t)v3 + 56, *((_DWORD *)v3 + 16) + v6);
    this = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides *)memcpy((void *)(*((void *)v3 + 7) + 8 * *((int *)v3 + 16)), *((const void **)a2 + 7), 8 * *((int *)a2 + 16));
    *((_DWORD *)v3 + 16) += *((_DWORD *)a2 + 16);
  }
  int v7 = *((_DWORD *)a2 + 20);
  if (v7)
  {
    sub_18DF0C278((uint64_t)v3 + 72, *((_DWORD *)v3 + 20) + v7);
    this = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides *)memcpy((void *)(*((void *)v3 + 9) + 8 * *((int *)v3 + 20)), *((const void **)a2 + 9), 8 * *((int *)a2 + 20));
    *((_DWORD *)v3 + 20) += *((_DWORD *)a2 + 20);
  }
  int v8 = *((_DWORD *)a2 + 24);
  if (v8)
  {
    sub_18DF0C278((uint64_t)v3 + 88, *((_DWORD *)v3 + 24) + v8);
    this = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides *)memcpy((void *)(*((void *)v3 + 11) + 8 * *((int *)v3 + 24)), *((const void **)a2 + 11), 8 * *((int *)a2 + 24));
    *((_DWORD *)v3 + 24) += *((_DWORD *)a2 + 24);
  }
  LOBYTE(v9) = *((unsigned char *)a2 + 108);
  if (!(_BYTE)v9) {
    return result;
  }
  if ((*((unsigned char *)a2 + 108) & 1) == 0)
  {
    if ((*((unsigned char *)a2 + 108) & 2) == 0) {
      goto LABEL_14;
    }
LABEL_22:
    *((_DWORD *)v3 + 27) |= 2u;
    int v12 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *)*((void *)v3 + 2);
    if (!v12) {
      operator new();
    }
    int v13 = (const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *)*((void *)a2 + 2);
    if (!v13)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
      int v13 = *(const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::default_instance_ + 16);
    }
    double result = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::MergeFrom(v12, v13);
    int v9 = *((_DWORD *)a2 + 27);
    if ((v9 & 4) == 0)
    {
LABEL_15:
      if ((v9 & 8) == 0) {
        return result;
      }
      goto LABEL_32;
    }
    goto LABEL_27;
  }
  *((_DWORD *)v3 + 27) |= 1u;
  uint64_t v10 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *)*((void *)v3 + 1);
  if (!v10) {
    operator new();
  }
  int v11 = (const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *)*((void *)a2 + 1);
  if (!v11)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
    int v11 = *(const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::default_instance_ + 8);
  }
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::MergeFrom(v10, v11);
  int v9 = *((_DWORD *)a2 + 27);
  if ((v9 & 2) != 0) {
    goto LABEL_22;
  }
LABEL_14:
  if ((v9 & 4) == 0) {
    goto LABEL_15;
  }
LABEL_27:
  *((_DWORD *)v3 + 27) |= 4u;
  int v14 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *)*((void *)v3 + 3);
  if (!v14) {
    operator new();
  }
  int v15 = (const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *)*((void *)a2 + 3);
  if (!v15)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
    int v15 = *(const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::default_instance_ + 24);
  }
  double result = CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::MergeFrom(v14, v15);
  if ((*((_DWORD *)a2 + 27) & 8) != 0)
  {
LABEL_32:
    *((_DWORD *)v3 + 27) |= 8u;
    int v16 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *)*((void *)v3 + 4);
    if (!v16) {
      operator new();
    }
    uint64_t v17 = (const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *)*((void *)a2 + 4);
    if (!v17)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
      uint64_t v17 = *(const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::default_instance_ + 32);
    }
    return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::MergeFrom(v16, v17);
  }
  return result;
}

void sub_18DF38F18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::CopyFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::IsInitialized(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::Swap(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData *this, CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData *a2)
{
  if (a2 != this)
  {
    uint64_t v4 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v4;
    uint64_t v5 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v5;
    uint64_t v6 = *((void *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v6;
    uint64_t v7 = *((void *)this + 4);
    *((void *)this + 4) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v7;
    uint64_t v8 = *((void *)this + 5);
    *((void *)this + 5) = *((void *)a2 + 5);
    *((void *)a2 + 5) = v8;
    uint64_t v9 = *((void *)this + 6);
    *((void *)this + 6) = *((void *)a2 + 6);
    *((void *)a2 + 6) = v9;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    double result = *((double *)this + 10);
    *((void *)this + 10) = *((void *)a2 + 10);
    *((double *)a2 + 10) = result;
    int v11 = *((_DWORD *)this + 22);
    *((_DWORD *)this + 22) = *((_DWORD *)a2 + 22);
    *((_DWORD *)a2 + 22) = v11;
    int v12 = *((_DWORD *)this + 24);
    *((_DWORD *)this + 24) = *((_DWORD *)a2 + 24);
    *((_DWORD *)a2 + 24) = v12;
    int v13 = *((_DWORD *)this + 23);
    *((_DWORD *)this + 23) = *((_DWORD *)a2 + 23);
    *((_DWORD *)a2 + 23) = v13;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssSvAndMeasurementData::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.InternalToolData.GnssMsmtAnalysisToolData.GnssSvAndMeasurementData");
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::SharedCtor(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides *this)
{
  *((void *)this + 13) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::PolynomialEphemerides(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides *a2)
{
  *(void *)this = &unk_1EDD0F890;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 88) = 0u;
  *((void *)this + 13) = 0;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::MergeFrom(this, a2);
  return this;
}

void sub_18DF39148(_Unwind_Exception *a1)
{
  uint64_t v3 = *((void *)v1 + 11);
  if (v3) {
    MEMORY[0x192FA6220](v3, 0x1000C8000313F17);
  }
  uint64_t v4 = *((void *)v1 + 9);
  if (v4) {
    MEMORY[0x192FA6220](v4, 0x1000C8000313F17);
  }
  uint64_t v5 = *((void *)v1 + 7);
  if (v5) {
    MEMORY[0x192FA6220](v5, 0x1000C8000313F17);
  }
  uint64_t v6 = *((void *)v1 + 5);
  if (v6) {
    MEMORY[0x192FA6220](v6, 0x1000C8000313F17);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::~PolynomialEphemerides(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides *this)
{
  *(void *)this = &unk_1EDD0F890;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::SharedDtor(this);
  uint64_t v2 = *((void *)this + 11);
  if (v2) {
    MEMORY[0x192FA6220](v2, 0x1000C8000313F17);
  }
  uint64_t v3 = *((void *)this + 9);
  if (v3) {
    MEMORY[0x192FA6220](v3, 0x1000C8000313F17);
  }
  uint64_t v4 = *((void *)this + 7);
  if (v4) {
    MEMORY[0x192FA6220](v4, 0x1000C8000313F17);
  }
  uint64_t v5 = *((void *)this + 5);
  if (v5) {
    MEMORY[0x192FA6220](v5, 0x1000C8000313F17);
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::~PolynomialEphemerides(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::SharedDtor(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides *this)
{
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 2);
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = *((void *)this + 3);
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = *((void *)this + 4);
    if (v5)
    {
      uint64_t v6 = *(void (**)(void))(*(void *)v5 + 8);
      v6();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::default_instance(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides *this)
{
  return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 104) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::New(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4 = (char *)this + 88;
  uint64_t v83 = (char *)this + 56;
  uint64_t v84 = (char *)this + 72;
  int v82 = (char *)this + 40;
LABEL_2:
  while (2)
  {
    uint64_t v5 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v5;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v5 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_37;
        }
        *((_DWORD *)this + 27) |= 1u;
        uint64_t v8 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *)*((void *)this + 1);
        if (!v8) {
          operator new();
        }
        v85[0] = 0;
        uint64_t v9 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v9 >= *((void *)a2 + 2) || *v9 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v85))return 0; {
        }
          }
        else
        {
          v85[0] = *v9;
          *((void *)a2 + 1) = v9 + 1;
        }
        int v11 = *((_DWORD *)a2 + 14);
        int v12 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v11 + 1;
        if (v11 >= v12) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::MergePartialFromCodedStream(v8, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v13 = *((_DWORD *)a2 + 14);
        BOOL v14 = __OFSUB__(v13, 1);
        int v15 = v13 - 1;
        if (v15 < 0 == v14) {
          *((_DWORD *)a2 + 14) = v15;
        }
        int v16 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v16 >= *((void *)a2 + 2) || *v16 != 18) {
          continue;
        }
        *((void *)a2 + 1) = v16 + 1;
        goto LABEL_49;
      case 2u:
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_37;
        }
LABEL_49:
        *((_DWORD *)this + 27) |= 2u;
        uint64_t v17 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *)*((void *)this + 2);
        if (!v17) {
          operator new();
        }
        v85[0] = 0;
        uint64_t v18 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v18 >= *((void *)a2 + 2) || *v18 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v85))return 0; {
        }
          }
        else
        {
          v85[0] = *v18;
          *((void *)a2 + 1) = v18 + 1;
        }
        int v19 = *((_DWORD *)a2 + 14);
        int v20 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v19 + 1;
        if (v19 >= v20) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::MergePartialFromCodedStream(v17, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v21 = *((_DWORD *)a2 + 14);
        BOOL v14 = __OFSUB__(v21, 1);
        int v22 = v21 - 1;
        if (v22 < 0 == v14) {
          *((_DWORD *)a2 + 14) = v22;
        }
        int v23 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v23 >= *((void *)a2 + 2) || *v23 != 26) {
          continue;
        }
        *((void *)a2 + 1) = v23 + 1;
LABEL_63:
        *((_DWORD *)this + 27) |= 4u;
        int v24 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *)*((void *)this + 3);
        if (!v24) {
          operator new();
        }
        v85[0] = 0;
        unsigned int v25 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v25 >= *((void *)a2 + 2) || *v25 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v85))return 0; {
        }
          }
        else
        {
          v85[0] = *v25;
          *((void *)a2 + 1) = v25 + 1;
        }
        int v26 = *((_DWORD *)a2 + 14);
        int v27 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v26 + 1;
        if (v26 >= v27) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::MergePartialFromCodedStream(v24, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v28 = *((_DWORD *)a2 + 14);
        BOOL v14 = __OFSUB__(v28, 1);
        int v29 = v28 - 1;
        if (v29 < 0 == v14) {
          *((_DWORD *)a2 + 14) = v29;
        }
        uint64_t v30 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v30 >= *((void *)a2 + 2) || *v30 != 34) {
          continue;
        }
        *((void *)a2 + 1) = v30 + 1;
LABEL_77:
        *((_DWORD *)this + 27) |= 8u;
        uint64_t v31 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *)*((void *)this + 4);
        if (!v31) {
          operator new();
        }
        v85[0] = 0;
        int v32 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v32 >= *((void *)a2 + 2) || *v32 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v85))return 0; {
        }
          }
        else
        {
          v85[0] = *v32;
          *((void *)a2 + 1) = v32 + 1;
        }
        int v33 = *((_DWORD *)a2 + 14);
        int v34 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v33 + 1;
        if (v33 >= v34) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::MergePartialFromCodedStream(v31, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v35 = *((_DWORD *)a2 + 14);
        BOOL v14 = __OFSUB__(v35, 1);
        int v36 = v35 - 1;
        if (v36 < 0 == v14) {
          *((_DWORD *)a2 + 14) = v36;
        }
        int v37 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v37 >= *((void *)a2 + 2) || *v37 != 41) {
          continue;
        }
        while (1)
        {
          *((void *)a2 + 1) = v37 + 1;
LABEL_91:
          *(void *)unsigned __int8 v85 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v85) & 1) == 0)return 0; {
          uint64_t v38 = *(void *)v85;
          }
          int v39 = *((_DWORD *)this + 12);
          if (v39 == *((_DWORD *)this + 13))
          {
            sub_18DF0C278((uint64_t)v82, v39 + 1);
            int v39 = *((_DWORD *)this + 12);
          }
          uint64_t v40 = *((void *)this + 5);
          int v41 = v39 + 1;
          *((_DWORD *)this + 12) = v39 + 1;
          *(void *)(v40 + 8 * v39) = v38;
          uint64_t v42 = *((void *)a2 + 1);
          int v43 = *((_DWORD *)a2 + 4) - v42;
          if (v43 >= 1)
          {
            signed int v44 = v43 / 9u;
            int v45 = v44 >= *((_DWORD *)this + 13) - v41 ? *((_DWORD *)this + 13) - v41 : v44;
            if (v45 >= 1)
            {
              int v46 = 0;
              while (*(unsigned char *)v42 == 41)
              {
                uint64_t v47 = *(void *)(v42 + 1);
                if (v41 >= *((_DWORD *)this + 13))
                {
                  wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                  wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v85);
                  int v41 = *((_DWORD *)this + 12);
                  uint64_t v40 = *((void *)this + 5);
                }
                *((_DWORD *)this + 12) = v41 + 1;
                *(void *)(v40 + 8 * v41) = v47;
                ++v46;
                v42 += 9;
                ++v41;
                if (v45 == v46)
                {
                  int v46 = v45;
                  break;
                }
              }
              if (v46) {
                wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(a2);
              }
            }
          }
LABEL_107:
          int v37 = (unsigned char *)*((void *)a2 + 1);
          if ((unint64_t)v37 >= *((void *)a2 + 2)) {
            goto LABEL_2;
          }
          int v48 = *v37;
          if (v48 != 41)
          {
            if (v48 == 49)
            {
              while (1)
              {
                *((void *)a2 + 1) = v37 + 1;
LABEL_111:
                *(void *)unsigned __int8 v85 = 0;
                if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v85) & 1) == 0)return 0; {
                uint64_t v49 = *(void *)v85;
                }
                int v50 = *((_DWORD *)this + 16);
                if (v50 == *((_DWORD *)this + 17))
                {
                  sub_18DF0C278((uint64_t)v83, v50 + 1);
                  int v50 = *((_DWORD *)this + 16);
                }
                uint64_t v51 = *((void *)this + 7);
                int v52 = v50 + 1;
                *((_DWORD *)this + 16) = v50 + 1;
                *(void *)(v51 + 8 * v50) = v49;
                uint64_t v53 = *((void *)a2 + 1);
                int v54 = *((_DWORD *)a2 + 4) - v53;
                if (v54 >= 1)
                {
                  signed int v55 = v54 / 9u;
                  int v56 = v55 >= *((_DWORD *)this + 17) - v52 ? *((_DWORD *)this + 17) - v52 : v55;
                  if (v56 >= 1)
                  {
                    int v57 = 0;
                    while (*(unsigned char *)v53 == 49)
                    {
                      uint64_t v58 = *(void *)(v53 + 1);
                      if (v52 >= *((_DWORD *)this + 17))
                      {
                        wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                        wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                        wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                        wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v85);
                        int v52 = *((_DWORD *)this + 16);
                        uint64_t v51 = *((void *)this + 7);
                      }
                      *((_DWORD *)this + 16) = v52 + 1;
                      *(void *)(v51 + 8 * v52) = v58;
                      ++v57;
                      v53 += 9;
                      ++v52;
                      if (v56 == v57)
                      {
                        int v57 = v56;
                        break;
                      }
                    }
                    if (v57) {
                      wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(a2);
                    }
                  }
                }
LABEL_127:
                int v37 = (unsigned char *)*((void *)a2 + 1);
                if ((unint64_t)v37 >= *((void *)a2 + 2)) {
                  break;
                }
                int v59 = *v37;
                if (v59 != 49)
                {
                  if (v59 == 57)
                  {
                    while (1)
                    {
                      *((void *)a2 + 1) = v37 + 1;
LABEL_131:
                      *(void *)unsigned __int8 v85 = 0;
                      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v85) & 1) == 0)return 0; {
                      uint64_t v60 = *(void *)v85;
                      }
                      int v61 = *((_DWORD *)this + 20);
                      if (v61 == *((_DWORD *)this + 21))
                      {
                        sub_18DF0C278((uint64_t)v84, v61 + 1);
                        int v61 = *((_DWORD *)this + 20);
                      }
                      uint64_t v62 = *((void *)this + 9);
                      int v63 = v61 + 1;
                      *((_DWORD *)this + 20) = v61 + 1;
                      *(void *)(v62 + 8 * v61) = v60;
                      uint64_t v64 = *((void *)a2 + 1);
                      int v65 = *((_DWORD *)a2 + 4) - v64;
                      if (v65 >= 1)
                      {
                        signed int v66 = v65 / 9u;
                        int v67 = v66 >= *((_DWORD *)this + 21) - v63 ? *((_DWORD *)this + 21) - v63 : v66;
                        if (v67 >= 1)
                        {
                          int v68 = 0;
                          while (*(unsigned char *)v64 == 57)
                          {
                            uint64_t v69 = *(void *)(v64 + 1);
                            if (v63 >= *((_DWORD *)this + 21))
                            {
                              wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                              wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                              wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                              wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v85);
                              int v63 = *((_DWORD *)this + 20);
                              uint64_t v62 = *((void *)this + 9);
                            }
                            *((_DWORD *)this + 20) = v63 + 1;
                            *(void *)(v62 + 8 * v63) = v69;
                            ++v68;
                            v64 += 9;
                            ++v63;
                            if (v67 == v68)
                            {
                              int v68 = v67;
                              break;
                            }
                          }
                          if (v68) {
                            wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(a2);
                          }
                        }
                      }
LABEL_147:
                      int v37 = (unsigned char *)*((void *)a2 + 1);
                      if ((unint64_t)v37 >= *((void *)a2 + 2)) {
                        break;
                      }
                      int v70 = *v37;
                      if (v70 != 57)
                      {
                        if (v70 != 65) {
                          goto LABEL_2;
                        }
                        goto LABEL_150;
                      }
                    }
                  }
                  goto LABEL_2;
                }
              }
            }
            goto LABEL_2;
          }
        }
      case 3u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_63;
        }
        goto LABEL_37;
      case 4u:
        int v7 = TagFallback & 7;
        if (v7 == 2) {
          goto LABEL_77;
        }
        goto LABEL_37;
      case 5u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_91;
        }
        if (v7 != 2) {
          goto LABEL_37;
        }
        uint64_t result = sub_18DF39FAC(a2, (uint64_t)v82);
        if (!result) {
          return result;
        }
        goto LABEL_107;
      case 6u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_111;
        }
        if (v7 != 2) {
          goto LABEL_37;
        }
        uint64_t result = sub_18DF39FAC(a2, (uint64_t)v83);
        if (!result) {
          return result;
        }
        goto LABEL_127;
      case 7u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_131;
        }
        if (v7 != 2) {
          goto LABEL_37;
        }
        uint64_t result = sub_18DF39FAC(a2, (uint64_t)v84);
        if (!result) {
          return result;
        }
        goto LABEL_147;
      case 8u:
        int v7 = TagFallback & 7;
        if (v7 == 1) {
          goto LABEL_151;
        }
        if (v7 == 2)
        {
          uint64_t result = sub_18DF39FAC(a2, (uint64_t)v4);
          if (!result) {
            return result;
          }
          while (1)
          {
            int v37 = (unsigned char *)*((void *)a2 + 1);
            int v81 = (unsigned char *)*((void *)a2 + 2);
            if (v37 >= v81 || *v37 != 65) {
              break;
            }
LABEL_150:
            *((void *)a2 + 1) = v37 + 1;
LABEL_151:
            *(void *)unsigned __int8 v85 = 0;
            if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v85) & 1) == 0)return 0; {
            uint64_t v71 = *(void *)v85;
            }
            int v72 = *((_DWORD *)this + 24);
            if (v72 == *((_DWORD *)this + 25))
            {
              sub_18DF0C278((uint64_t)v4, v72 + 1);
              int v72 = *((_DWORD *)this + 24);
            }
            uint64_t v73 = *((void *)this + 11);
            int v74 = v72 + 1;
            *((_DWORD *)this + 24) = v72 + 1;
            *(void *)(v73 + 8 * v72) = v71;
            uint64_t v75 = *((void *)a2 + 1);
            int v76 = *((_DWORD *)a2 + 4) - v75;
            if (v76 >= 1)
            {
              signed int v77 = v76 / 9u;
              int v78 = v77 >= *((_DWORD *)this + 25) - v74 ? *((_DWORD *)this + 25) - v74 : v77;
              if (v78 >= 1)
              {
                int v79 = 0;
                while (*(unsigned char *)v75 == 65)
                {
                  uint64_t v80 = *(void *)(v75 + 1);
                  if (v74 >= *((_DWORD *)this + 25))
                  {
                    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
                    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
                    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
                    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v85);
                    int v74 = *((_DWORD *)this + 24);
                    uint64_t v73 = *((void *)this + 11);
                  }
                  *((_DWORD *)this + 24) = v74 + 1;
                  *(void *)(v73 + 8 * v74) = v80;
                  ++v79;
                  v75 += 9;
                  ++v74;
                  if (v78 == v79)
                  {
                    int v79 = v78;
                    break;
                  }
                }
                if (v79) {
                  wireless_diagnostics::google::protobuf::io::CodedInputStream::Skip(a2);
                }
              }
            }
          }
          if (v37 == v81 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
LABEL_37:
        if (v7 != 4)
        {
          if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
          continue;
          }
        }
        return 1;
      default:
        int v7 = TagFallback & 7;
        goto LABEL_37;
    }
  }
}

void sub_18DF39F5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_start(va, a5);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

uint64_t sub_18DF39FAC(wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t a2)
{
  unsigned int v9 = 0;
  uint64_t v4 = (char *)*((void *)this + 1);
  if ((unint64_t)v4 >= *((void *)this + 2) || *v4 < 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v9);
    if (!result) {
      return result;
    }
  }
  else
  {
    unsigned int v9 = *v4;
    *((void *)this + 1) = v4 + 1;
  }
  wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(this);
  if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) < 1)
  {
LABEL_10:
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(this);
    return 1;
  }
  else
  {
    while (1)
    {
      unint64_t v10 = 0;
      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(this, &v10);
      if (!result) {
        break;
      }
      unint64_t v6 = v10;
      int v7 = *(_DWORD *)(a2 + 8);
      if (v7 == *(_DWORD *)(a2 + 12))
      {
        sub_18DF0C278(a2, v7 + 1);
        int v7 = *(_DWORD *)(a2 + 8);
      }
      uint64_t v8 = *(void *)a2;
      *(_DWORD *)(a2 + 8) = v7 + 1;
      *(void *)(v8 + 8 * v7) = v6;
      if ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(this) <= 0) {
        goto LABEL_10;
      }
    }
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 108);
  if (v6)
  {
    uint64_t v7 = *(void *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
      uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::default_instance_
                     + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 108);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
    uint64_t v8 = *(void *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::default_instance_
                   + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 108);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_18;
    }
    goto LABEL_15;
  }
LABEL_12:
  uint64_t v9 = *(void *)(v5 + 24);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
    uint64_t v9 = *(void *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::default_instance_
                   + 24);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v9, a2, a4);
  if ((*(_DWORD *)(v5 + 108) & 8) != 0)
  {
LABEL_15:
    uint64_t v10 = *(void *)(v5 + 32);
    if (!v10)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
      uint64_t v10 = *(void *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::default_instance_
                      + 32);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v10, a2, a4);
  }
LABEL_18:
  if (*(int *)(v5 + 48) >= 1)
  {
    uint64_t v11 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(*(void *)(v5 + 40) + 8 * v11++), a3);
    while (v11 < *(int *)(v5 + 48));
  }
  if (*(int *)(v5 + 64) >= 1)
  {
    uint64_t v12 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(double *)(*(void *)(v5 + 56) + 8 * v12++), a3);
    while (v12 < *(int *)(v5 + 64));
  }
  if (*(int *)(v5 + 80) >= 1)
  {
    uint64_t v13 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (uint64_t)a2, *(double *)(*(void *)(v5 + 72) + 8 * v13++), a3);
    while (v13 < *(int *)(v5 + 80));
  }
  if (*(int *)(v5 + 96) >= 1)
  {
    uint64_t v14 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, (uint64_t)a2, *(double *)(*(void *)(v5 + 88) + 8 * v14++), a3);
    while (v14 < *(int *)(v5 + 96));
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::ByteSize(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 108);
  if (!(_BYTE)v2)
  {
    int v3 = 0;
    goto LABEL_33;
  }
  if ((*((unsigned char *)this + 108) & 1) == 0)
  {
    int v3 = 0;
    if ((*((unsigned char *)this + 108) & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  uint64_t v4 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *)*((void *)this + 1);
  if (!v4)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(0);
    uint64_t v4 = *(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::default_instance_ + 8);
  }
  uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::ByteSize(v4);
  int v6 = (int)v5;
  if (v5 >= 0x80) {
    int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
  }
  else {
    int v7 = 1;
  }
  int v3 = v6 + v7 + 1;
  int v2 = *((_DWORD *)this + 27);
  if ((v2 & 2) != 0)
  {
LABEL_12:
    uint64_t v8 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *)*((void *)this + 2);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(0);
      uint64_t v8 = *(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::default_instance_ + 16);
    }
    uint64_t v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::ByteSize(v8);
    int v10 = (int)v9;
    if (v9 >= 0x80) {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9);
    }
    else {
      int v11 = 1;
    }
    v3 += v10 + v11 + 1;
    int v2 = *((_DWORD *)this + 27);
  }
LABEL_18:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_33;
    }
    goto LABEL_27;
  }
  uint64_t v12 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *)*((void *)this + 3);
  if (!v12)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(0);
    uint64_t v12 = *(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::default_instance_ + 24);
  }
  uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::ByteSize(v12);
  int v14 = (int)v13;
  if (v13 >= 0x80) {
    int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
  }
  else {
    int v15 = 1;
  }
  v3 += v14 + v15 + 1;
  if ((*((_DWORD *)this + 27) & 8) != 0)
  {
LABEL_27:
    int v16 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *)*((void *)this + 4);
    if (!v16)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(0);
      int v16 = *(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::default_instance_ + 32);
    }
    uint64_t v17 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::ByteSize(v16);
    int v18 = (int)v17;
    if (v17 >= 0x80) {
      int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v17);
    }
    else {
      int v19 = 1;
    }
    v3 += v18 + v19 + 1;
  }
LABEL_33:
  uint64_t result = (9
                        * (*((_DWORD *)this + 16)
                         + *((_DWORD *)this + 12)
                         + *((_DWORD *)this + 20)
                         + *((_DWORD *)this + 24))
                        + v3);
  *((_DWORD *)this + 26) = result;
  return result;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::CopyFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::IsInitialized(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::Swap(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides *this, CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    uint64_t v3 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    uint64_t v4 = *((void *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v4;
    uint64_t v5 = *((void *)this + 4);
    *((void *)this + 4) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v5;
    uint64_t v6 = *((void *)this + 5);
    *((void *)this + 5) = *((void *)a2 + 5);
    uint64_t v7 = *((void *)a2 + 6);
    *((void *)a2 + 5) = v6;
    uint64_t v8 = *((void *)this + 6);
    *((void *)this + 6) = v7;
    *((void *)a2 + 6) = v8;
    uint64_t v9 = *((void *)this + 7);
    *((void *)this + 7) = *((void *)a2 + 7);
    uint64_t v10 = *((void *)a2 + 8);
    *((void *)a2 + 7) = v9;
    uint64_t v11 = *((void *)this + 8);
    *((void *)this + 8) = v10;
    *((void *)a2 + 8) = v11;
    uint64_t v12 = *((void *)this + 9);
    *((void *)this + 9) = *((void *)a2 + 9);
    uint64_t v13 = *((void *)a2 + 10);
    *((void *)a2 + 9) = v12;
    uint64_t v14 = *((void *)this + 10);
    *((void *)this + 10) = v13;
    *((void *)a2 + 10) = v14;
    uint64_t v15 = *((void *)this + 11);
    *((void *)this + 11) = *((void *)a2 + 11);
    double result = *((double *)a2 + 12);
    *((void *)a2 + 11) = v15;
    uint64_t v17 = *((void *)this + 12);
    *((double *)this + 12) = result;
    *((void *)a2 + 12) = v17;
    LODWORD(v15) = *((_DWORD *)this + 27);
    *((_DWORD *)this + 27) = *((_DWORD *)a2 + 27);
    *((_DWORD *)a2 + 27) = v15;
    LODWORD(v15) = *((_DWORD *)this + 26);
    *((_DWORD *)this + 26) = *((_DWORD *)a2 + 26);
    *((_DWORD *)a2 + 26) = v15;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::PolynomialEphemerides::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.InternalToolData.GnssMsmtAnalysisToolData.PolynomialEphemerides");
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::SharedCtor(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable *this)
{
  double result = 0.0;
  *(_OWORD *)((char *)this + 86) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *((void *)this + 13) = 0;
  *((void *)this + 14) = 0;
  return result;
}

CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::GnssObservable(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable *a2)
{
  *(void *)this = &unk_1EDD0F638;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 56) = 0u;
  *(_OWORD *)((char *)this + 72) = 0u;
  *(_OWORD *)((char *)this + 86) = 0u;
  *((void *)this + 13) = 0;
  *((void *)this + 14) = 0;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::MergeFrom(this, a2);
  return this;
}

void sub_18DF3A6DC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::MergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v24);
  }
  int v4 = *((_DWORD *)a2 + 29);
  if ((_BYTE)v4)
  {
    if (v4)
    {
      *((_DWORD *)this + 29) |= 1u;
      uint64_t v5 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *)*((void *)this + 1);
      if (!v5) {
        operator new();
      }
      uint64_t v6 = (const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *)*((void *)a2 + 1);
      if (!v6)
      {
        CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
        uint64_t v6 = *(const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::default_instance_ + 8);
      }
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::MergeFrom(v5, v6);
      int v4 = *((_DWORD *)a2 + 29);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_23;
      }
    }
    else if ((v4 & 2) == 0)
    {
      goto LABEL_6;
    }
    *((_DWORD *)this + 29) |= 2u;
    uint64_t v7 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *)*((void *)this + 2);
    if (!v7) {
      operator new();
    }
    uint64_t v8 = (const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *)*((void *)a2 + 2);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
      uint64_t v8 = *(const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::default_instance_ + 16);
    }
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::MergeFrom(v7, v8);
    int v4 = *((_DWORD *)a2 + 29);
    if ((v4 & 4) == 0)
    {
LABEL_7:
      if ((v4 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_25;
    }
LABEL_23:
    unsigned int v9 = *((_DWORD *)a2 + 6);
    if (v9 >= 7) {
      __assert_rtn("set_observable_type", "CoreNavigationCLPGnssMsmtAnalysisToolData.pb.h", 6592, "::CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSObservableType_IsValid(value)");
    }
    *((_DWORD *)this + 29) |= 4u;
    *((_DWORD *)this + 6) = v9;
    int v4 = *((_DWORD *)a2 + 29);
    if ((v4 & 8) == 0)
    {
LABEL_8:
      if ((v4 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_27;
    }
LABEL_25:
    unsigned int v10 = *((_DWORD *)a2 + 7);
    if (v10 >= 0xD) {
      __assert_rtn("set_gnss_band", "CoreNavigationCLPGnssMsmtAnalysisToolData.pb.h", 6615, "::CoreNavigation::CLP::LogEntry::PrivateData::Band_IsValid(value)");
    }
    *((_DWORD *)this + 29) |= 8u;
    *((_DWORD *)this + 7) = v10;
    int v4 = *((_DWORD *)a2 + 29);
    if ((v4 & 0x10) == 0)
    {
LABEL_9:
      if ((v4 & 0x20) == 0) {
        goto LABEL_10;
      }
      goto LABEL_28;
    }
LABEL_27:
    uint64_t v11 = *((void *)a2 + 4);
    *((_DWORD *)this + 29) |= 0x10u;
    *((void *)this + 4) = v11;
    int v4 = *((_DWORD *)a2 + 29);
    if ((v4 & 0x20) == 0)
    {
LABEL_10:
      if ((v4 & 0x40) == 0) {
        goto LABEL_11;
      }
      goto LABEL_29;
    }
LABEL_28:
    uint64_t v12 = *((void *)a2 + 5);
    *((_DWORD *)this + 29) |= 0x20u;
    *((void *)this + 5) = v12;
    int v4 = *((_DWORD *)a2 + 29);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_35;
      }
      goto LABEL_30;
    }
LABEL_29:
    uint64_t v13 = *((void *)a2 + 6);
    *((_DWORD *)this + 29) |= 0x40u;
    *((void *)this + 6) = v13;
    int v4 = *((_DWORD *)a2 + 29);
    if ((v4 & 0x80) == 0) {
      goto LABEL_35;
    }
LABEL_30:
    *((_DWORD *)this + 29) |= 0x80u;
    uint64_t v14 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections *)*((void *)this + 7);
    if (!v14) {
      operator new();
    }
    uint64_t v15 = (const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections *)*((void *)a2 + 7);
    if (!v15)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
      uint64_t v15 = *(const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::default_instance_ + 56);
    }
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections::MergeFrom(v14, v15);
    int v4 = *((_DWORD *)a2 + 29);
  }
LABEL_35:
  if ((v4 & 0xFF00) == 0) {
    return;
  }
  if ((v4 & 0x100) != 0)
  {
    uint64_t v16 = *((void *)a2 + 8);
    *((_DWORD *)this + 29) |= 0x100u;
    *((void *)this + 8) = v16;
    int v4 = *((_DWORD *)a2 + 29);
  }
  if ((v4 & 0x200) != 0)
  {
    unsigned int v17 = *((_DWORD *)a2 + 24);
    if (v17 >= 5) {
      __assert_rtn("set_multipath_indicator", "CoreNavigationCLPGnssMsmtAnalysisToolData.pb.h", 6768, "::CoreNavigation::CLP::LogEntry::PrivateData::MultipathIndicator_IsValid(value)");
    }
    *((_DWORD *)this + 29) |= 0x200u;
    *((_DWORD *)this + 24) = v17;
    int v4 = *((_DWORD *)a2 + 29);
  }
  if ((v4 & 0x400) != 0)
  {
    uint64_t v19 = *((void *)a2 + 9);
    *((_DWORD *)this + 29) |= 0x400u;
    *((void *)this + 9) = v19;
    int v4 = *((_DWORD *)a2 + 29);
    if ((v4 & 0x800) == 0)
    {
LABEL_43:
      if ((v4 & 0x1000) == 0) {
        goto LABEL_44;
      }
      goto LABEL_51;
    }
  }
  else if ((v4 & 0x800) == 0)
  {
    goto LABEL_43;
  }
  uint64_t v20 = *((void *)a2 + 10);
  *((_DWORD *)this + 29) |= 0x800u;
  *((void *)this + 10) = v20;
  int v4 = *((_DWORD *)a2 + 29);
  if ((v4 & 0x1000) == 0)
  {
LABEL_44:
    if ((v4 & 0x2000) == 0) {
      goto LABEL_45;
    }
    goto LABEL_52;
  }
LABEL_51:
  uint64_t v21 = *((void *)a2 + 11);
  *((_DWORD *)this + 29) |= 0x1000u;
  *((void *)this + 11) = v21;
  int v4 = *((_DWORD *)a2 + 29);
  if ((v4 & 0x2000) == 0)
  {
LABEL_45:
    if ((v4 & 0x4000) == 0) {
      goto LABEL_46;
    }
    goto LABEL_53;
  }
LABEL_52:
  uint64_t v22 = *((void *)a2 + 13);
  *((_DWORD *)this + 29) |= 0x2000u;
  *((void *)this + 13) = v22;
  int v4 = *((_DWORD *)a2 + 29);
  if ((v4 & 0x4000) == 0)
  {
LABEL_46:
    if ((v4 & 0x8000) == 0) {
      return;
    }
    goto LABEL_47;
  }
LABEL_53:
  char v23 = *((unsigned char *)a2 + 100);
  *((_DWORD *)this + 29) |= 0x4000u;
  *((unsigned char *)this + 100) = v23;
  if ((*((_DWORD *)a2 + 29) & 0x8000) != 0)
  {
LABEL_47:
    char v18 = *((unsigned char *)a2 + 101);
    *((_DWORD *)this + 29) |= 0x8000u;
    *((unsigned char *)this + 101) = v18;
  }
}

void sub_18DF3AB14(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::~GnssObservable(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable *this)
{
  *(void *)this = &unk_1EDD0F638;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::~GnssObservable(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::SharedDtor(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable *this)
{
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 2);
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = *((void *)this + 7);
    if (v4)
    {
      uint64_t v5 = *(void (**)(void))(*(void *)v4 + 8);
      v5();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::default_instance(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable *this)
{
  return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 112) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::New(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 116);
  if ((_BYTE)v1)
  {
    if (v1)
    {
      uint64_t v2 = *(void *)(this + 8);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 28))
        {
          *(void *)(v2 + 8) = 0;
          *(void *)(v2 + 16) = 0;
        }
        *(_DWORD *)(v2 + 28) = 0;
        int v1 = *(_DWORD *)(this + 116);
      }
    }
    if ((v1 & 2) != 0)
    {
      uint64_t v3 = *(void *)(this + 16);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 28))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
        }
        *(_DWORD *)(v3 + 28) = 0;
        int v1 = *(_DWORD *)(this + 116);
      }
    }
    *(_OWORD *)(this + 40) = 0u;
    *(_OWORD *)(this + 24) = 0u;
    if ((v1 & 0x80) != 0)
    {
      uint64_t v4 = *(void *)(this + 56);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 52))
        {
          *(void *)(v4 + 40) = 0;
          *(_OWORD *)(v4 + 24) = 0uLL;
          *(_OWORD *)(v4 + 8) = 0uLL;
        }
        *(_DWORD *)(v4 + 52) = 0;
        int v1 = *(_DWORD *)(this + 116);
      }
    }
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(void *)(this + 104) = 0;
    *(_OWORD *)(this + 64) = 0u;
    *(_OWORD *)(this + 80) = 0u;
    *(void *)(this + 94) = 0;
  }
  *(_DWORD *)(this + 116) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 52))
  {
    *(void *)(this + 40) = 0;
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 8) = 0u;
  }
  *(_DWORD *)(this + 52) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (2)
  {
    uint64_t v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_43;
        }
        *((_DWORD *)this + 29) |= 1u;
        uint64_t v7 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *)*((void *)this + 1);
        if (!v7) {
          operator new();
        }
        v58[0] = 0;
        uint64_t v8 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v58))return 0; {
        }
          }
        else
        {
          v58[0] = *v8;
          *((void *)a2 + 1) = v8 + 1;
        }
        int v19 = *((_DWORD *)a2 + 14);
        int v20 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v19 + 1;
        if (v19 >= v20) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::MergePartialFromCodedStream(v7, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v21 = *((_DWORD *)a2 + 14);
        BOOL v22 = __OFSUB__(v21, 1);
        int v23 = v21 - 1;
        if (v23 < 0 == v22) {
          *((_DWORD *)a2 + 14) = v23;
        }
        int v24 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v24 >= *((void *)a2 + 2) || *v24 != 18) {
          continue;
        }
        *((void *)a2 + 1) = v24 + 1;
        goto LABEL_56;
      case 2u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_43;
        }
LABEL_56:
        *((_DWORD *)this + 29) |= 2u;
        unsigned int v25 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *)*((void *)this + 2);
        if (!v25) {
          operator new();
        }
        v58[0] = 0;
        int v26 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v26 >= *((void *)a2 + 2) || *v26 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v58))return 0; {
        }
          }
        else
        {
          v58[0] = *v26;
          *((void *)a2 + 1) = v26 + 1;
        }
        int v27 = *((_DWORD *)a2 + 14);
        int v28 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v27 + 1;
        if (v27 >= v28) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::MergePartialFromCodedStream(v25, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v29 = *((_DWORD *)a2 + 14);
        BOOL v22 = __OFSUB__(v29, 1);
        int v30 = v29 - 1;
        if (v30 < 0 == v22) {
          *((_DWORD *)a2 + 14) = v30;
        }
        uint64_t v31 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        if ((unint64_t)v31 >= v9 || *v31 != 24) {
          continue;
        }
        unsigned int v10 = v31 + 1;
        *((void *)a2 + 1) = v10;
LABEL_70:
        v58[0] = 0;
        if ((unint64_t)v10 >= v9 || *v10 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v58);
          if (!result) {
            return result;
          }
          unsigned int v32 = v58[0];
        }
        else
        {
          unsigned int v32 = *v10;
          *((void *)a2 + 1) = v10 + 1;
        }
        if (v32 <= 6)
        {
          *((_DWORD *)this + 29) |= 4u;
          *((_DWORD *)this + 6) = v32;
        }
        int v34 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
        if ((unint64_t)v34 >= v11 || *v34 != 32) {
          continue;
        }
        uint64_t v12 = v34 + 1;
        *((void *)a2 + 1) = v12;
LABEL_80:
        v58[0] = 0;
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v58);
          if (!result) {
            return result;
          }
          unsigned int v35 = v58[0];
        }
        else
        {
          unsigned int v35 = *v12;
          *((void *)a2 + 1) = v12 + 1;
        }
        if (v35 <= 0xC)
        {
          *((_DWORD *)this + 29) |= 8u;
          *((_DWORD *)this + 7) = v35;
        }
        int v36 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v36 >= *((void *)a2 + 2) || *v36 != 41) {
          continue;
        }
        *((void *)a2 + 1) = v36 + 1;
LABEL_90:
        *(void *)uint64_t v58 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v58) & 1) == 0)return 0; {
        *((void *)this + 4) = *(void *)v58;
        }
        *((_DWORD *)this + 29) |= 0x10u;
        int v37 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v37 >= *((void *)a2 + 2) || *v37 != 49) {
          continue;
        }
        *((void *)a2 + 1) = v37 + 1;
LABEL_94:
        *(void *)uint64_t v58 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v58) & 1) == 0)return 0; {
        *((void *)this + 5) = *(void *)v58;
        }
        *((_DWORD *)this + 29) |= 0x20u;
        uint64_t v38 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v38 >= *((void *)a2 + 2) || *v38 != 57) {
          continue;
        }
        *((void *)a2 + 1) = v38 + 1;
LABEL_98:
        *(void *)uint64_t v58 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v58) & 1) == 0)return 0; {
        *((void *)this + 6) = *(void *)v58;
        }
        int v13 = *((_DWORD *)this + 29) | 0x40;
        *((_DWORD *)this + 29) = v13;
        int v39 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v39 >= *((void *)a2 + 2) || *v39 != 66) {
          continue;
        }
        *((void *)a2 + 1) = v39 + 1;
LABEL_102:
        *((_DWORD *)this + 29) = v13 | 0x80;
        uint64_t v40 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections *)*((void *)this + 7);
        if (!v40) {
          operator new();
        }
        v58[0] = 0;
        int v41 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v41 >= *((void *)a2 + 2) || *v41 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v58))return 0; {
        }
          }
        else
        {
          v58[0] = *v41;
          *((void *)a2 + 1) = v41 + 1;
        }
        int v42 = *((_DWORD *)a2 + 14);
        int v43 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v42 + 1;
        if (v42 >= v43) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections::MergePartialFromCodedStream(v40, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v44 = *((_DWORD *)a2 + 14);
        BOOL v22 = __OFSUB__(v44, 1);
        int v45 = v44 - 1;
        if (v45 < 0 == v22) {
          *((_DWORD *)a2 + 14) = v45;
        }
        int v46 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v46 >= *((void *)a2 + 2) || *v46 != 73) {
          continue;
        }
        *((void *)a2 + 1) = v46 + 1;
LABEL_116:
        *(void *)uint64_t v58 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v58) & 1) == 0)return 0; {
        *((void *)this + 8) = *(void *)v58;
        }
        *((_DWORD *)this + 29) |= 0x100u;
        uint64_t v47 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        if ((unint64_t)v47 >= v14 || *v47 != 80) {
          continue;
        }
        uint64_t v15 = v47 + 1;
        *((void *)a2 + 1) = v15;
LABEL_120:
        v58[0] = 0;
        if ((unint64_t)v15 >= v14 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v58);
          if (!result) {
            return result;
          }
          unsigned int v48 = v58[0];
        }
        else
        {
          unsigned int v48 = *v15;
          *((void *)a2 + 1) = v15 + 1;
        }
        if (v48 <= 4)
        {
          *((_DWORD *)this + 29) |= 0x200u;
          *((_DWORD *)this + 24) = v48;
        }
        uint64_t v49 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v49 >= *((void *)a2 + 2) || *v49 != 89) {
          continue;
        }
        *((void *)a2 + 1) = v49 + 1;
LABEL_130:
        *(void *)uint64_t v58 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v58) & 1) == 0)return 0; {
        *((void *)this + 9) = *(void *)v58;
        }
        *((_DWORD *)this + 29) |= 0x400u;
        int v50 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v50 >= *((void *)a2 + 2) || *v50 != 97) {
          continue;
        }
        *((void *)a2 + 1) = v50 + 1;
LABEL_134:
        *(void *)uint64_t v58 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v58) & 1) == 0)return 0; {
        *((void *)this + 10) = *(void *)v58;
        }
        *((_DWORD *)this + 29) |= 0x800u;
        uint64_t v51 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v51 >= *((void *)a2 + 2) || *v51 != 105) {
          continue;
        }
        *((void *)a2 + 1) = v51 + 1;
LABEL_138:
        *(void *)uint64_t v58 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v58) & 1) == 0)return 0; {
        *((void *)this + 11) = *(void *)v58;
        }
        *((_DWORD *)this + 29) |= 0x1000u;
        int v52 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v52 >= *((void *)a2 + 2) || *v52 != 113) {
          continue;
        }
        *((void *)a2 + 1) = v52 + 1;
LABEL_142:
        *(void *)uint64_t v58 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v58))
        {
          *((void *)this + 13) = *(void *)v58;
          *((_DWORD *)this + 29) |= 0x2000u;
          uint64_t v53 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v16 = *((void *)a2 + 2);
          if ((unint64_t)v53 < v16 && *v53 == 120)
          {
            unsigned int v17 = v53 + 1;
            *((void *)a2 + 1) = v17;
LABEL_146:
            v58[0] = 0;
            if ((unint64_t)v17 >= v16 || (char)*v17 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v58);
              if (!result) {
                return result;
              }
              unsigned int v54 = v58[0];
              signed int v55 = (unsigned __int8 *)*((void *)a2 + 1);
              unint64_t v16 = *((void *)a2 + 2);
            }
            else
            {
              unsigned int v54 = *v17;
              signed int v55 = v17 + 1;
              *((void *)a2 + 1) = v55;
            }
            *((unsigned char *)this + 100) = v54 != 0;
            *((_DWORD *)this + 29) |= 0x4000u;
            if ((int)v16 - (int)v55 >= 2 && *v55 == 128 && v55[1] == 1)
            {
              char v18 = (char *)(v55 + 2);
              *((void *)a2 + 1) = v18;
LABEL_155:
              v58[0] = 0;
              if ((unint64_t)v18 >= v16 || *v18 < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v58);
                if (!result) {
                  return result;
                }
                unsigned int v56 = v58[0];
                int v57 = (unsigned __int8 *)*((void *)a2 + 1);
                unint64_t v16 = *((void *)a2 + 2);
              }
              else
              {
                unsigned int v56 = *v18;
                int v57 = (unsigned __int8 *)(v18 + 1);
                *((void *)a2 + 1) = v57;
              }
              *((unsigned char *)this + 101) = v56 != 0;
              *((_DWORD *)this + 29) |= 0x8000u;
              if (v57 == (unsigned __int8 *)v16
                && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
              {
                *((_DWORD *)a2 + 8) = 0;
                uint64_t result = 1;
                *((unsigned char *)a2 + 36) = 1;
                return result;
              }
            }
          }
          continue;
        }
        return 0;
      case 3u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_43;
        }
        unsigned int v10 = (char *)*((void *)a2 + 1);
        unint64_t v9 = *((void *)a2 + 2);
        goto LABEL_70;
      case 4u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_43;
        }
        uint64_t v12 = (char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
        goto LABEL_80;
      case 5u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_90;
        }
        goto LABEL_43;
      case 6u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_94;
        }
        goto LABEL_43;
      case 7u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_98;
        }
        goto LABEL_43;
      case 8u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_43;
        }
        int v13 = *((_DWORD *)this + 29);
        goto LABEL_102;
      case 9u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_116;
        }
        goto LABEL_43;
      case 0xAu:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_43;
        }
        uint64_t v15 = (char *)*((void *)a2 + 1);
        unint64_t v14 = *((void *)a2 + 2);
        goto LABEL_120;
      case 0xBu:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_130;
        }
        goto LABEL_43;
      case 0xCu:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_134;
        }
        goto LABEL_43;
      case 0xDu:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_138;
        }
        goto LABEL_43;
      case 0xEu:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_142;
        }
        goto LABEL_43;
      case 0xFu:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_43;
        }
        unsigned int v17 = (unsigned __int8 *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
        goto LABEL_146;
      case 0x10u:
        int v6 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_43;
        }
        char v18 = (char *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
        goto LABEL_155;
      default:
        int v6 = TagFallback & 7;
LABEL_43:
        if (v6 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 116);
  if (v6)
  {
    uint64_t v7 = *(void *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
      uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::default_instance_
                     + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 116);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_24;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
    uint64_t v8 = *(void *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::default_instance_
                   + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 116);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_25;
  }
LABEL_24:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 24), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 116);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_26;
  }
LABEL_25:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 28), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 116);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_27;
  }
LABEL_26:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 116);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_28;
  }
LABEL_27:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(double *)(v5 + 40), a3);
  int v6 = *(_DWORD *)(v5 + 116);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_29;
  }
LABEL_28:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (uint64_t)a2, *(double *)(v5 + 48), a3);
  int v6 = *(_DWORD *)(v5 + 116);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_32;
  }
LABEL_29:
  uint64_t v9 = *(void *)(v5 + 56);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto((CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData *)this);
    uint64_t v9 = *(void *)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::default_instance_
                   + 56);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, v9, a2, a4);
  int v6 = *(_DWORD *)(v5 + 116);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_33;
  }
LABEL_32:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, (uint64_t)a2, *(double *)(v5 + 64), a3);
  int v6 = *(_DWORD *)(v5 + 116);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_34;
  }
LABEL_33:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned int *)(v5 + 96), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 116);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_35;
  }
LABEL_34:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, (uint64_t)a2, *(double *)(v5 + 72), a3);
  int v6 = *(_DWORD *)(v5 + 116);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
    goto LABEL_36;
  }
LABEL_35:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, (uint64_t)a2, *(double *)(v5 + 80), a3);
  int v6 = *(_DWORD *)(v5 + 116);
  if ((v6 & 0x1000) == 0)
  {
LABEL_14:
    if ((v6 & 0x2000) == 0) {
      goto LABEL_15;
    }
    goto LABEL_37;
  }
LABEL_36:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, (uint64_t)a2, *(double *)(v5 + 88), a3);
  int v6 = *(_DWORD *)(v5 + 116);
  if ((v6 & 0x2000) == 0)
  {
LABEL_15:
    if ((v6 & 0x4000) == 0) {
      goto LABEL_16;
    }
LABEL_38:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xF, *(unsigned __int8 *)(v5 + 100), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 116) & 0x8000) == 0) {
      return this;
    }
    goto LABEL_39;
  }
LABEL_37:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, (uint64_t)a2, *(double *)(v5 + 104), a3);
  int v6 = *(_DWORD *)(v5 + 116);
  if ((v6 & 0x4000) != 0) {
    goto LABEL_38;
  }
LABEL_16:
  if ((v6 & 0x8000) == 0) {
    return this;
  }
LABEL_39:
  uint64_t v10 = *(unsigned __int8 *)(v5 + 101);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBool((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0x10, v10, (uint64_t)a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::ByteSize(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable *this)
{
  int v2 = *((_DWORD *)this + 29);
  if (!(_BYTE)v2)
  {
    uint64_t v4 = 0;
    goto LABEL_44;
  }
  if ((v2 & 1) == 0)
  {
    int v3 = 0;
    if ((v2 & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  uint64_t v5 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *)*((void *)this + 1);
  if (!v5)
  {
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(0);
    uint64_t v5 = *(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::default_instance_ + 8);
  }
  int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::ByteSize(v5);
  int v7 = (int)v6;
  if (v6 >= 0x80) {
    int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6);
  }
  else {
    int v8 = 1;
  }
  int v3 = v7 + v8 + 1;
  int v2 = *((_DWORD *)this + 29);
  if ((v2 & 2) != 0)
  {
LABEL_12:
    uint64_t v9 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan *)*((void *)this + 2);
    if (!v9)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(0);
      uint64_t v9 = *(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::default_instance_ + 16);
    }
    uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::CNTimeSpan::ByteSize(v9);
    int v11 = (int)v10;
    if (v10 >= 0x80) {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
    }
    else {
      int v12 = 1;
    }
    v3 += v11 + v12 + 1;
    int v2 = *((_DWORD *)this + 29);
  }
LABEL_18:
  if ((v2 & 4) != 0)
  {
    int v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 6);
    if ((v13 & 0x80000000) != 0)
    {
      int v14 = 11;
    }
    else if (v13 >= 0x80)
    {
      int v14 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13) + 1;
      int v2 = *((_DWORD *)this + 29);
    }
    else
    {
      int v14 = 2;
    }
    v3 += v14;
    if ((v2 & 8) == 0) {
      goto LABEL_33;
    }
    goto LABEL_27;
  }
  if ((v2 & 8) != 0)
  {
LABEL_27:
    uint64_t v15 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 7);
    if ((v15 & 0x80000000) != 0)
    {
      int v16 = 11;
    }
    else if (v15 >= 0x80)
    {
      int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v15) + 1;
      int v2 = *((_DWORD *)this + 29);
    }
    else
    {
      int v16 = 2;
    }
    v3 += v16;
  }
LABEL_33:
  unsigned int v17 = v3 + 9;
  if ((v2 & 0x10) == 0) {
    unsigned int v17 = v3;
  }
  if ((v2 & 0x20) != 0) {
    v17 += 9;
  }
  if ((v2 & 0x40) != 0) {
    uint64_t v4 = v17 + 9;
  }
  else {
    uint64_t v4 = v17;
  }
  if ((v2 & 0x80) != 0)
  {
    char v18 = (CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections *)*((void *)this + 7);
    if (!v18)
    {
      CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(0);
      char v18 = *(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections **)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::default_instance_ + 56);
    }
    uint64_t v4 = v4
       + CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections::ByteSize(v18)
       + 2;
    int v2 = *((_DWORD *)this + 29);
  }
LABEL_44:
  if ((v2 & 0xFF00) != 0)
  {
    if ((v2 & 0x100) != 0) {
      LODWORD(v4) = v4 + 9;
    }
    if ((v2 & 0x200) != 0)
    {
      int v19 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 24);
      if ((v19 & 0x80000000) != 0)
      {
        int v20 = 11;
      }
      else if (v19 >= 0x80)
      {
        int v20 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v19) + 1;
        int v2 = *((_DWORD *)this + 29);
      }
      else
      {
        int v20 = 2;
      }
      LODWORD(v4) = v20 + v4;
    }
    unsigned int v21 = v4 + 9;
    if ((v2 & 0x400) == 0) {
      unsigned int v21 = v4;
    }
    if ((v2 & 0x800) != 0) {
      v21 += 9;
    }
    if ((v2 & 0x1000) != 0) {
      v21 += 9;
    }
    if ((v2 & 0x2000) != 0) {
      v21 += 9;
    }
    if ((v2 & 0x4000) != 0) {
      v21 += 2;
    }
    if ((v2 & 0x8000) != 0) {
      uint64_t v4 = v21 + 3;
    }
    else {
      uint64_t v4 = v21;
    }
  }
  *((_DWORD *)this + 28) = v4;
  return v4;
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections::MergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 52);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 52))
    {
      double result = *((double *)a2 + 1);
      *((_DWORD *)this + 13) |= 1u;
      *((double *)this + 1) = result;
      int v5 = *((_DWORD *)a2 + 13);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_13;
      }
    }
    else if ((*((unsigned char *)a2 + 52) & 2) == 0)
    {
      goto LABEL_6;
    }
    double result = *((double *)a2 + 2);
    *((_DWORD *)this + 13) |= 2u;
    *((double *)this + 2) = result;
    int v5 = *((_DWORD *)a2 + 13);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_14;
    }
LABEL_13:
    double result = *((double *)a2 + 3);
    *((_DWORD *)this + 13) |= 4u;
    *((double *)this + 3) = result;
    int v5 = *((_DWORD *)a2 + 13);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0) {
        return result;
      }
      goto LABEL_9;
    }
LABEL_14:
    double result = *((double *)a2 + 4);
    *((_DWORD *)this + 13) |= 8u;
    *((double *)this + 4) = result;
    if ((*((_DWORD *)a2 + 13) & 0x10) == 0) {
      return result;
    }
LABEL_9:
    double result = *((double *)a2 + 5);
    *((_DWORD *)this + 13) |= 0x10u;
    *((double *)this + 5) = result;
  }
  return result;
}

void sub_18DF3BDC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::CopyFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::IsInitialized(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::Swap(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable *this, CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    uint64_t v3 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    LODWORD(v3) = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v3;
    LODWORD(v3) = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v3;
    uint64_t v4 = *((void *)this + 4);
    *((void *)this + 4) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v4;
    uint64_t v5 = *((void *)this + 5);
    *((void *)this + 5) = *((void *)a2 + 5);
    *((void *)a2 + 5) = v5;
    uint64_t v6 = *((void *)this + 6);
    *((void *)this + 6) = *((void *)a2 + 6);
    *((void *)a2 + 6) = v6;
    uint64_t v7 = *((void *)this + 7);
    *((void *)this + 7) = *((void *)a2 + 7);
    *((void *)a2 + 7) = v7;
    uint64_t v8 = *((void *)this + 8);
    *((void *)this + 8) = *((void *)a2 + 8);
    *((void *)a2 + 8) = v8;
    LODWORD(v7) = *((_DWORD *)this + 24);
    *((_DWORD *)this + 24) = *((_DWORD *)a2 + 24);
    *((_DWORD *)a2 + 24) = v7;
    uint64_t v9 = *((void *)this + 9);
    *((void *)this + 9) = *((void *)a2 + 9);
    *((void *)a2 + 9) = v9;
    uint64_t v10 = *((void *)this + 10);
    *((void *)this + 10) = *((void *)a2 + 10);
    *((void *)a2 + 10) = v10;
    uint64_t v11 = *((void *)this + 11);
    *((void *)this + 11) = *((void *)a2 + 11);
    *((void *)a2 + 11) = v11;
    double result = *((double *)this + 13);
    *((void *)this + 13) = *((void *)a2 + 13);
    *((double *)a2 + 13) = result;
    LOBYTE(v7) = *((unsigned char *)this + 100);
    *((unsigned char *)this + 100) = *((unsigned char *)a2 + 100);
    *((unsigned char *)a2 + 100) = v7;
    LOBYTE(v7) = *((unsigned char *)this + 101);
    *((unsigned char *)this + 101) = *((unsigned char *)a2 + 101);
    *((unsigned char *)a2 + 101) = v7;
    LODWORD(v7) = *((_DWORD *)this + 29);
    *((_DWORD *)this + 29) = *((_DWORD *)a2 + 29);
    *((_DWORD *)a2 + 29) = v7;
    LODWORD(v7) = *((_DWORD *)this + 28);
    *((_DWORD *)this + 28) = *((_DWORD *)a2 + 28);
    *((_DWORD *)a2 + 28) = v7;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GnssObservable::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.InternalToolData.GnssMsmtAnalysisToolData.GnssObservable");
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::GNSSSatelliteID(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *a2)
{
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)this = &unk_1EDD0F728;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::MergeFrom(this, a2);
  return this;
}

void sub_18DF3C004(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::~GNSSSatelliteID(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *this)
{
  *(void *)this = &unk_1EDD0F728;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::~GNSSSatelliteID(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::default_instance(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *this)
{
  return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 16) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::New(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (1)
  {
    while (1)
    {
      uint64_t v4 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
        if (!TagFallback) {
          return 1;
        }
      }
      else
      {
        unint64_t TagFallback = *v4;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v4 + 1;
        if (!TagFallback) {
          return 1;
        }
      }
      if (TagFallback >> 3 != 1) {
        break;
      }
      int v6 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_15;
      }
      unsigned int v15 = 0;
      uint64_t v9 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v9 >= *((void *)a2 + 2) || *v9 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v15);
        if (!result) {
          return result;
        }
        unsigned int v10 = v15;
      }
      else
      {
        unsigned int v10 = *v9;
        *((void *)a2 + 1) = v9 + 1;
      }
      if (v10 <= 6)
      {
        *((_DWORD *)this + 5) |= 1u;
        *((_DWORD *)this + 2) = v10;
      }
      uint64_t v11 = (unsigned char *)*((void *)a2 + 1);
      unint64_t v7 = *((void *)a2 + 2);
      if ((unint64_t)v11 < v7 && *v11 == 16)
      {
        uint64_t v8 = v11 + 1;
        *((void *)a2 + 1) = v8;
LABEL_25:
        unsigned int v16 = 0;
        if ((unint64_t)v8 >= v7 || *v8 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v16);
          if (!result) {
            return result;
          }
          unsigned int v12 = v16;
          int v13 = (unsigned __int8 *)*((void *)a2 + 1);
          unint64_t v7 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v12 = *v8;
          int v13 = (unsigned __int8 *)(v8 + 1);
          *((void *)a2 + 1) = v13;
        }
        *((_DWORD *)this + 3) = v12;
        *((_DWORD *)this + 5) |= 2u;
        if (v13 == (unsigned __int8 *)v7 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (TagFallback >> 3 == 2)
    {
      int v6 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        uint64_t v8 = (char *)*((void *)a2 + 1);
        unint64_t v7 = *((void *)a2 + 2);
        goto LABEL_25;
      }
    }
    else
    {
      int v6 = TagFallback & 7;
    }
LABEL_15:
    if (v6 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 20);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteEnum((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 20);
  }
  if ((v6 & 2) != 0)
  {
    uint64_t v7 = *(unsigned int *)(v5 + 12);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v7, (uint64_t)a2, a4);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::ByteSize(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *this)
{
  char v2 = *((unsigned char *)this + 20);
  if (v2)
  {
    if (*((unsigned char *)this + 20))
    {
      uint64_t v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
      if ((v4 & 0x80000000) != 0)
      {
        uint64_t v3 = 11;
        if ((v2 & 2) == 0) {
          goto LABEL_19;
        }
      }
      else if (v4 >= 0x80)
      {
        uint64_t v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
        if ((*((_DWORD *)this + 5) & 2) == 0) {
          goto LABEL_19;
        }
      }
      else
      {
        uint64_t v3 = 2;
        if ((v2 & 2) == 0) {
          goto LABEL_19;
        }
      }
    }
    else
    {
      uint64_t v3 = 0;
      if ((*((unsigned char *)this + 20) & 2) == 0) {
        goto LABEL_19;
      }
    }
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
    if ((v5 & 0x80000000) != 0)
    {
      int v6 = 11;
    }
    else if (v5 >= 0x80)
    {
      int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
    }
    else
    {
      int v6 = 2;
    }
    uint64_t v3 = (v6 + v3);
  }
  else
  {
    uint64_t v3 = 0;
  }
LABEL_19:
  *((_DWORD *)this + 4) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::CopyFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::IsInitialized(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *this)
{
  return 1;
}

CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::Swap(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *this, CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID *a2)
{
  if (a2 != this)
  {
    int v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    int v3 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    int v4 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v4;
    int v5 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v5;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::GNSSSatelliteID::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.InternalToolData.GnssMsmtAnalysisToolData.GNSSSatelliteID");
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections::SharedCtor(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections *this)
{
  double result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections::MeasurementCorrections(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections *a2)
{
  *(void *)this = &unk_1EDD0F980;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections::MergeFrom(this, a2);
  return this;
}

void sub_18DF3C5FC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections::~MeasurementCorrections(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections *this)
{
  *(void *)this = &unk_1EDD0F980;
  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::protobuf_AddDesc_CoreNavigationCLPGnssMsmtAnalysisToolData_2eproto(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections::~MeasurementCorrections(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections::default_instance(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections *this)
{
  return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 48) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections::New(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (2)
  {
    int v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_34;
        }
        unint64_t v12 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v12) & 1) == 0) {
          return 0;
        }
        *((void *)this + 1) = v12;
        *((_DWORD *)this + 13) |= 1u;
        uint64_t v7 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v7 >= *((void *)a2 + 2) || *v7 != 17) {
          continue;
        }
        *((void *)a2 + 1) = v7 + 1;
        goto LABEL_14;
      case 2u:
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_34;
        }
LABEL_14:
        unint64_t v12 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v12) & 1) == 0) {
          return 0;
        }
        *((void *)this + 2) = v12;
        *((_DWORD *)this + 13) |= 2u;
        uint64_t v8 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 != 25) {
          continue;
        }
        *((void *)a2 + 1) = v8 + 1;
LABEL_19:
        unint64_t v12 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v12) & 1) == 0) {
          return 0;
        }
        *((void *)this + 3) = v12;
        *((_DWORD *)this + 13) |= 4u;
        uint64_t v9 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v9 >= *((void *)a2 + 2) || *v9 != 33) {
          continue;
        }
        *((void *)a2 + 1) = v9 + 1;
LABEL_24:
        unint64_t v12 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v12) & 1) == 0) {
          return 0;
        }
        *((void *)this + 4) = v12;
        *((_DWORD *)this + 13) |= 8u;
        unsigned int v10 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 != 41) {
          continue;
        }
        *((void *)a2 + 1) = v10 + 1;
LABEL_29:
        unint64_t v12 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v12) & 1) == 0) {
          return 0;
        }
        *((void *)this + 5) = v12;
        *((_DWORD *)this + 13) |= 0x10u;
        if (*((void *)a2 + 1) != *((void *)a2 + 2)
          || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10))
        {
          continue;
        }
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        break;
      case 3u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_19;
        }
        goto LABEL_34;
      case 4u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_24;
        }
        goto LABEL_34;
      case 5u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_29;
        }
        goto LABEL_34;
      default:
        int v6 = TagFallback & 7;
LABEL_34:
        if (v6 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
    return result;
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = this;
  int v5 = *(_DWORD *)(this + 52);
  if (v5)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
    int v5 = *(_DWORD *)(v4 + 52);
    if ((v5 & 2) == 0)
    {
LABEL_3:
      if ((v5 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  else if ((v5 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v4 + 16), a3);
  int v5 = *(_DWORD *)(v4 + 52);
  if ((v5 & 4) == 0)
  {
LABEL_4:
    if ((v5 & 8) == 0) {
      goto LABEL_5;
    }
LABEL_10:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(double *)(v4 + 32), a3);
    if ((*(_DWORD *)(v4 + 52) & 0x10) == 0) {
      return this;
    }
    goto LABEL_11;
  }
LABEL_9:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(double *)(v4 + 24), a3);
  int v5 = *(_DWORD *)(v4 + 52);
  if ((v5 & 8) != 0) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v5 & 0x10) == 0) {
    return this;
  }
LABEL_11:
  double v6 = *(double *)(v4 + 40);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, v6, a3);
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections::ByteSize(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections *this)
{
  uint64_t v1 = *((unsigned __int8 *)this + 52);
  if (*((unsigned char *)this + 52))
  {
    unsigned int v2 = ((int)(v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0) {
      v2 += 9;
    }
    if ((v1 & 4) != 0) {
      v2 += 9;
    }
    if ((v1 & 8) != 0) {
      v2 += 9;
    }
    if ((v1 & 0x10) != 0) {
      uint64_t v1 = v2 + 9;
    }
    else {
      uint64_t v1 = v2;
    }
  }
  *((_DWORD *)this + 12) = v1;
  return v1;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections::CopyFrom(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections *this, const CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections::IsInitialized(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections::Swap(CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections *this, CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    uint64_t v3 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    uint64_t v4 = *((void *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v4;
    uint64_t v5 = *((void *)this + 4);
    *((void *)this + 4) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v5;
    double result = *((double *)this + 5);
    *((void *)this + 5) = *((void *)a2 + 5);
    *((double *)a2 + 5) = result;
    int v7 = *((_DWORD *)this + 13);
    *((_DWORD *)this + 13) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v7;
    int v8 = *((_DWORD *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v8;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::InternalToolData::GnssMsmtAnalysisToolData::MeasurementCorrections::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.InternalToolData.GnssMsmtAnalysisToolData.MeasurementCorrections");
}

uint64_t sub_18DF3CC88(uint64_t a1)
{
  return *(unsigned int *)(a1 + 92);
}

uint64_t sub_18DF3CC90(uint64_t a1)
{
  return *(unsigned int *)(a1 + 236);
}

uint64_t sub_18DF3CC98(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_18DF3CCA0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_18DF3CCA8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 56);
}

uint64_t sub_18DF3CCB0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 44);
}

uint64_t sub_18DF3CCB8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 248);
}

uint64_t sub_18DF3CCC0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_18DF3CCC8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_18DF3CCD0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 36);
}

uint64_t sub_18DF3CCD8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 84);
}

uint64_t sub_18DF3CCE0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_18DF3CCE8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 40);
}

uint64_t sub_18DF3CCF0(uint64_t a1)
{
  return *(unsigned int *)(a1 + 92);
}

uint64_t sub_18DF3CCF8(uint64_t a1)
{
  return *(unsigned int *)(a1 + 104);
}

uint64_t sub_18DF3CD00(uint64_t a1)
{
  return *(unsigned int *)(a1 + 112);
}

uint64_t sub_18DF3CD08(uint64_t a1)
{
  return *(unsigned int *)(a1 + 16);
}

uint64_t sub_18DF3CD10(uint64_t a1)
{
  return *(unsigned int *)(a1 + 48);
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_ShutdownFile_CoreNavigationCLPInternalToolDataTypes_2eproto(CoreNavigation::CLP::LogEntry::InternalToolDataTypes *this)
{
  if (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::default_instance_);
  if (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime::default_instance_);
  if (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::default_instance_);
  if (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::default_instance_);
  if (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::default_instance_);
  if (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp::default_instance_);
  uint64_t result = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic::default_instance_;
  if (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic::default_instance_)
  {
    uint64_t v2 = *(uint64_t (**)(void))(*(void *)CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic::default_instance_
                             + 8);
    return v2();
  }
  return result;
}

void CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto_impl(CoreNavigation::CLP::LogEntry::InternalToolDataTypes *this, uint64_t a2, uint64_t a3, const char *a4)
{
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::GpsTime(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_1EDD10268;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)this = &unk_1EDD10268;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

void *CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime::UtcTime(void *this)
{
  *this = &unk_1EDD102E0;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

{
  *this = &unk_1EDD102E0;
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::PosAndVel(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *this)
{
  *(void *)this = &unk_1EDD10358;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD10358;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::PosAndVelError(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError *this)
{
  *(void *)this = &unk_1EDD10100;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((void *)this + 7) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD10100;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((void *)this + 7) = 0;
  return result;
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::EcefXyz(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *this)
{
  *(void *)this = &unk_1EDD101F0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD101F0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp::EastNorthUp(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp *this)
{
  *(void *)this = &unk_1EDD10088;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD10088;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic::LatLonAltGeodetic(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic *this)
{
  *(void *)this = &unk_1EDD10178;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD10178;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  return result;
}

void *CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::InitAsDefaultInstance(void *this)
{
  uint64_t v1 = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::default_instance_;
  this[1] = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::default_instance_;
  this[2] = v1;
  this[3] = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic::default_instance_;
  return this;
}

void *CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::InitAsDefaultInstance(void *this)
{
  uint64_t v1 = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::default_instance_;
  this[1] = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::default_instance_;
  this[2] = v1;
  uint64_t v2 = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp::default_instance_;
  this[3] = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp::default_instance_;
  this[4] = v2;
  return this;
}

void CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto(CoreNavigation::CLP::LogEntry::InternalToolDataTypes *this)
{
  uint64_t v1 = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto_once_;
  __dmb(0xBu);
  if (v1 != 2)
  {
    v2[0] = MEMORY[0x1E4FBA938] + 16;
    v2[1] = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto_impl;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
}

void sub_18DF3D304(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(_DWORD *)(this + 24) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime *CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::GpsTime(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime *this, const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime *a2)
{
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)this = &unk_1EDD10268;
  *((_DWORD *)this + 6) = 0;
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::MergeFrom(this, a2);
  return this;
}

void sub_18DF3D398(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::MergeFrom(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime *this, const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v7);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 24);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 24))
    {
      int v6 = *((_DWORD *)a2 + 4);
      *((_DWORD *)this + 6) |= 1u;
      *((_DWORD *)this + 4) = v6;
      int v5 = *((_DWORD *)a2 + 6);
    }
    if ((v5 & 2) != 0)
    {
      double result = *((double *)a2 + 1);
      *((_DWORD *)this + 6) |= 2u;
      *((double *)this + 1) = result;
    }
  }
  return result;
}

void sub_18DF3D458(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::~GpsTime(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime *this)
{
  *(void *)this = &unk_1EDD10268;
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::~GpsTime(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::default_instance(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime *this)
{
  return CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 20) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::New(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 24))
  {
    *(_DWORD *)(this + 16) = 0;
    *(void *)(this + 8) = 0;
  }
  *(_DWORD *)(this + 24) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4 = (unsigned int *)((char *)this + 16);
  do
  {
    while (1)
    {
      while (1)
      {
        int v5 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v5;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((void *)a2 + 1) = v5 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_16;
        }
        uint64_t v9 = (char *)*((void *)a2 + 1);
        unint64_t v8 = *((void *)a2 + 2);
        if ((unint64_t)v9 >= v8 || *v9 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!result) {
            return result;
          }
          unsigned int v10 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v8 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v4 = *v9;
          unsigned int v10 = v9 + 1;
          *((void *)a2 + 1) = v10;
        }
        *((_DWORD *)this + 6) |= 1u;
        if ((unint64_t)v10 < v8 && *v10 == 17)
        {
          *((void *)a2 + 1) = v10 + 1;
          goto LABEL_24;
        }
      }
      if (TagFallback >> 3 != 2) {
        break;
      }
      int v7 = TagFallback & 7;
      if (v7 != 1) {
        goto LABEL_16;
      }
LABEL_24:
      unint64_t v12 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v12) & 1) == 0) {
        return 0;
      }
      *((void *)this + 1) = v12;
      *((_DWORD *)this + 6) |= 2u;
      if (*((void *)a2 + 1) == *((void *)a2 + 2)
        && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      }
    }
    int v7 = TagFallback & 7;
LABEL_16:
    if (v7 == 4) {
      return 1;
    }
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0);
  return 0;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 24);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 16), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 24);
  }
  if ((v6 & 2) != 0)
  {
    double v7 = *(double *)(v5 + 8);
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, v7, a3);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::ByteSize(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 24);
  if ((_BYTE)v2)
  {
    if (*((unsigned char *)this + 24))
    {
      uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
      if (v5 >= 0x80)
      {
        unsigned int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
        int v2 = *((_DWORD *)this + 6);
      }
      else
      {
        unsigned int v3 = 2;
      }
    }
    else
    {
      unsigned int v3 = 0;
    }
    if ((v2 & 2) != 0) {
      uint64_t result = v3 + 9;
    }
    else {
      uint64_t result = v3;
    }
  }
  else
  {
    uint64_t result = 0;
  }
  *((_DWORD *)this + 5) = result;
  return result;
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::CopyFrom(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime *this, const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::IsInitialized(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::Swap(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime *this, CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime *a2)
{
  if (a2 != this)
  {
    int v2 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    double result = *((double *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((double *)a2 + 1) = result;
    int v4 = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v4;
    int v5 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v5;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::InternalToolDataTypes::GpsTime::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.InternalToolDataTypes.GpsTime");
}

void *CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime::SharedCtor(void *this)
{
  this[1] = 0;
  this[2] = 0;
  this[3] = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime *CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime::UtcTime(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime *this, const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime *a2)
{
  *(void *)this = &unk_1EDD102E0;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime::MergeFrom(this, a2);
  return this;
}

void sub_18DF3D9EC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime::MergeFrom(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime *this, const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 28);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 28))
    {
      int v6 = *((_DWORD *)a2 + 2);
      *((_DWORD *)this + 7) |= 1u;
      *((_DWORD *)this + 2) = v6;
      int v4 = *((_DWORD *)a2 + 7);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          return;
        }
        goto LABEL_7;
      }
    }
    else if ((*((unsigned char *)a2 + 28) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v7 = *((_DWORD *)a2 + 3);
    *((_DWORD *)this + 7) |= 2u;
    *((_DWORD *)this + 3) = v7;
    if ((*((_DWORD *)a2 + 7) & 4) == 0) {
      return;
    }
LABEL_7:
    uint64_t v5 = *((void *)a2 + 2);
    *((_DWORD *)this + 7) |= 4u;
    *((void *)this + 2) = v5;
  }
}

void sub_18DF3DAD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime::~UtcTime(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime *this)
{
  *(void *)this = &unk_1EDD102E0;
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime::~UtcTime(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime::default_instance(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime *this)
{
  return CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 24) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime::New(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 28))
  {
    *(void *)(this + 8) = 0;
    *(void *)(this + 16) = 0;
  }
  *(_DWORD *)(this + 28) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  do
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          int v4 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
          {
            unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
            *((_DWORD *)a2 + 8) = TagFallback;
            if (!TagFallback) {
              return 1;
            }
          }
          else
          {
            unint64_t TagFallback = *v4;
            *((_DWORD *)a2 + 8) = TagFallback;
            *((void *)a2 + 1) = v4 + 1;
            if (!TagFallback) {
              return 1;
            }
          }
          unsigned int v6 = TagFallback >> 3;
          if (TagFallback >> 3 != 1) {
            break;
          }
          int v7 = TagFallback & 7;
          if ((TagFallback & 7) != 0) {
            goto LABEL_18;
          }
          v16[0] = 0;
          uint64_t v9 = (char *)*((void *)a2 + 1);
          unint64_t v8 = *((void *)a2 + 2);
          if ((unint64_t)v9 >= v8 || *v9 < 0)
          {
            uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v16);
            if (!result) {
              return result;
            }
            unsigned int v10 = v16[0];
            uint64_t v11 = (unsigned char *)*((void *)a2 + 1);
            unint64_t v8 = *((void *)a2 + 2);
          }
          else
          {
            unsigned int v10 = *v9;
            uint64_t v11 = v9 + 1;
            *((void *)a2 + 1) = v11;
          }
          *((_DWORD *)this + 2) = v10;
          *((_DWORD *)this + 7) |= 1u;
          if ((unint64_t)v11 < v8 && *v11 == 16)
          {
            unint64_t v12 = v11 + 1;
            *((void *)a2 + 1) = v12;
            goto LABEL_26;
          }
        }
        if (v6 != 2) {
          break;
        }
        int v7 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_18;
        }
        unint64_t v12 = (char *)*((void *)a2 + 1);
        unint64_t v8 = *((void *)a2 + 2);
LABEL_26:
        v16[0] = 0;
        if ((unint64_t)v12 >= v8 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v16);
          if (!result) {
            return result;
          }
          unsigned int v14 = v16[0];
          unsigned int v15 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v8 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v14 = *v12;
          unsigned int v15 = v12 + 1;
          *((void *)a2 + 1) = v15;
        }
        *((_DWORD *)this + 3) = v14;
        *((_DWORD *)this + 7) |= 2u;
        if ((unint64_t)v15 < v8 && *v15 == 25)
        {
          *((void *)a2 + 1) = v15 + 1;
          goto LABEL_34;
        }
      }
      if (v6 != 3) {
        break;
      }
      int v7 = TagFallback & 7;
      if (v7 != 1) {
        goto LABEL_18;
      }
LABEL_34:
      *(void *)unsigned int v16 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v16) & 1) == 0)return 0; {
      *((void *)this + 2) = *(void *)v16;
      }
      *((_DWORD *)this + 7) |= 4u;
      if (*((void *)a2 + 1) == *((void *)a2 + 2)
        && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      }
    }
    int v7 = TagFallback & 7;
LABEL_18:
    if (v7 == 4) {
      return 1;
    }
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0);
  return 0;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 28);
  if ((v6 & 1) == 0)
  {
    if ((v6 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 12), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 28) & 4) == 0) {
      return this;
    }
    goto LABEL_7;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(unsigned int *)(this + 8), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 28);
  if ((v6 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v6 & 4) == 0) {
    return this;
  }
LABEL_7:
  double v7 = *(double *)(v5 + 16);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, v7, a3);
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime::ByteSize(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 28);
  if (!(_BYTE)v2)
  {
    uint64_t result = 0;
    goto LABEL_22;
  }
  if ((*((unsigned char *)this + 28) & 1) == 0)
  {
    unsigned int v3 = 0;
    if ((*((unsigned char *)this + 28) & 2) == 0) {
      goto LABEL_19;
    }
LABEL_13:
    int v6 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
    if ((v6 & 0x80000000) != 0)
    {
      int v7 = 11;
    }
    else if (v6 >= 0x80)
    {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v6) + 1;
      int v2 = *((_DWORD *)this + 7);
    }
    else
    {
      int v7 = 2;
    }
    v3 += v7;
    goto LABEL_19;
  }
  uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
  if ((v5 & 0x80000000) != 0)
  {
    unsigned int v3 = 11;
    if ((v2 & 2) != 0) {
      goto LABEL_13;
    }
  }
  else
  {
    if (v5 >= 0x80)
    {
      unsigned int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
      int v2 = *((_DWORD *)this + 7);
      if ((v2 & 2) == 0) {
        goto LABEL_19;
      }
      goto LABEL_13;
    }
    unsigned int v3 = 2;
    if ((v2 & 2) != 0) {
      goto LABEL_13;
    }
  }
LABEL_19:
  if ((v2 & 4) != 0) {
    uint64_t result = v3 + 9;
  }
  else {
    uint64_t result = v3;
  }
LABEL_22:
  *((_DWORD *)this + 6) = result;
  return result;
}

void CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime::CopyFrom(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime *this, const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime::IsInitialized(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime::Swap(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime *this, CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime *a2)
{
  if (a2 != this)
  {
    int v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    int v3 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    double result = *((double *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((double *)a2 + 2) = result;
    int v5 = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v5;
    int v6 = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v6;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::InternalToolDataTypes::UtcTime::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.InternalToolDataTypes.UtcTime");
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::SharedCtor(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *this)
{
  double result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::PosAndVel(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *this, const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *a2)
{
  *(void *)this = &unk_1EDD10358;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::MergeFrom(this, a2);
  return this;
}

void sub_18DF3E16C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::MergeFrom(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *this, const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v12);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 36);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 36))
    {
      *((_DWORD *)this + 9) |= 1u;
      int v6 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *)*((void *)this + 1);
      if (!v6) {
        operator new();
      }
      int v7 = (const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *)*((void *)a2 + 1);
      if (!v7)
      {
        CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto(this);
        int v7 = *(const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz **)(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::default_instance_
                                                                                     + 8);
      }
      double result = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::MergeFrom(v6, v7);
      int v5 = *((_DWORD *)a2 + 9);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          return result;
        }
        goto LABEL_18;
      }
    }
    else if ((*((unsigned char *)a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    *((_DWORD *)this + 9) |= 2u;
    unint64_t v8 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *)*((void *)this + 2);
    if (!v8) {
      operator new();
    }
    uint64_t v9 = (const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *)*((void *)a2 + 2);
    if (!v9)
    {
      CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto(this);
      uint64_t v9 = *(const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz **)(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::default_instance_
                                                                                   + 16);
    }
    double result = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::MergeFrom(v8, v9);
    if ((*((_DWORD *)a2 + 9) & 4) != 0)
    {
LABEL_18:
      *((_DWORD *)this + 9) |= 4u;
      unsigned int v10 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic *)*((void *)this + 3);
      if (!v10) {
        operator new();
      }
      uint64_t v11 = (const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic *)*((void *)a2 + 3);
      if (!v11)
      {
        CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto(this);
        uint64_t v11 = *(const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic **)(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::default_instance_
                                                                                                + 24);
      }
      return CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic::MergeFrom(v10, v11);
    }
  }
  return result;
}

void sub_18DF3E394(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::~PosAndVel(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *this)
{
  *(void *)this = &unk_1EDD10358;
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::~PosAndVel(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::SharedDtor(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *this)
{
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *)CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 2);
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = *((void *)this + 3);
    if (v4)
    {
      int v5 = *(void (**)(void))(*(void *)v4 + 8);
      v5();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::default_instance(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *this)
{
  return CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 32) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::New(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::Clear(uint64_t this)
{
  LOBYTE(v1) = *(unsigned char *)(this + 36);
  if ((_BYTE)v1)
  {
    if (*(unsigned char *)(this + 36))
    {
      uint64_t v2 = *(void *)(this + 8);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 36))
        {
          *(void *)(v2 + 8) = 0;
          *(void *)(v2 + 16) = 0;
          *(void *)(v2 + 24) = 0;
        }
        *(_DWORD *)(v2 + 36) = 0;
        int v1 = *(_DWORD *)(this + 36);
      }
    }
    if ((v1 & 2) != 0)
    {
      uint64_t v3 = *(void *)(this + 16);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
          *(void *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        int v1 = *(_DWORD *)(this + 36);
      }
    }
    if ((v1 & 4) != 0)
    {
      uint64_t v4 = *(void *)(this + 24);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 36))
        {
          *(void *)(v4 + 8) = 0;
          *(void *)(v4 + 16) = 0;
          *(void *)(v4 + 24) = 0;
        }
        *(_DWORD *)(v4 + 36) = 0;
      }
    }
  }
  *(_DWORD *)(this + 36) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 36))
  {
    *(void *)(this + 8) = 0;
    *(void *)(this + 16) = 0;
    *(void *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 36) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 36))
  {
    *(void *)(this + 8) = 0;
    *(void *)(this + 16) = 0;
    *(void *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 36) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (1)
  {
    while (1)
    {
      while (1)
      {
        while (1)
        {
          uint64_t v4 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
          {
            unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
            *((_DWORD *)a2 + 8) = TagFallback;
            if (!TagFallback) {
              return 1;
            }
          }
          else
          {
            unint64_t TagFallback = *v4;
            *((_DWORD *)a2 + 8) = TagFallback;
            *((void *)a2 + 1) = v4 + 1;
            if (!TagFallback) {
              return 1;
            }
          }
          unsigned int v6 = TagFallback >> 3;
          if (TagFallback >> 3 != 1) {
            break;
          }
          int v7 = TagFallback & 7;
          if (v7 != 2) {
            goto LABEL_20;
          }
          *((_DWORD *)this + 9) |= 1u;
          unint64_t v8 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *)*((void *)this + 1);
          if (!v8) {
            operator new();
          }
          unsigned int v30 = 0;
          uint64_t v9 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v9 >= *((void *)a2 + 2) || *v9 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v30))return 0; {
          }
            }
          else
          {
            unsigned int v30 = *v9;
            *((void *)a2 + 1) = v9 + 1;
          }
          int v10 = *((_DWORD *)a2 + 14);
          int v11 = *((_DWORD *)a2 + 15);
          *((_DWORD *)a2 + 14) = v10 + 1;
          if (v10 >= v11) {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          if (!CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::MergePartialFromCodedStream(v8, a2)|| !*((unsigned char *)a2 + 36))
          {
            return 0;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          int v12 = *((_DWORD *)a2 + 14);
          BOOL v13 = __OFSUB__(v12, 1);
          int v14 = v12 - 1;
          if (v14 < 0 == v13) {
            *((_DWORD *)a2 + 14) = v14;
          }
          unsigned int v15 = (unsigned char *)*((void *)a2 + 1);
          if ((unint64_t)v15 < *((void *)a2 + 2) && *v15 == 18)
          {
            *((void *)a2 + 1) = v15 + 1;
            goto LABEL_32;
          }
        }
        if (v6 != 2) {
          break;
        }
        int v7 = TagFallback & 7;
        if (v7 != 2) {
          goto LABEL_20;
        }
LABEL_32:
        *((_DWORD *)this + 9) |= 2u;
        unsigned int v16 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *)*((void *)this + 2);
        if (!v16) {
          operator new();
        }
        unsigned int v31 = 0;
        unsigned int v17 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v17 >= *((void *)a2 + 2) || *v17 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v31))return 0; {
        }
          }
        else
        {
          unsigned int v31 = *v17;
          *((void *)a2 + 1) = v17 + 1;
        }
        int v18 = *((_DWORD *)a2 + 14);
        int v19 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v18 + 1;
        if (v18 >= v19) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::MergePartialFromCodedStream(v16, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v20 = *((_DWORD *)a2 + 14);
        BOOL v13 = __OFSUB__(v20, 1);
        int v21 = v20 - 1;
        if (v21 < 0 == v13) {
          *((_DWORD *)a2 + 14) = v21;
        }
        BOOL v22 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v22 < *((void *)a2 + 2) && *v22 == 26)
        {
          *((void *)a2 + 1) = v22 + 1;
          goto LABEL_46;
        }
      }
      if (v6 != 3) {
        break;
      }
      int v7 = TagFallback & 7;
      if (v7 != 2) {
        goto LABEL_20;
      }
LABEL_46:
      *((_DWORD *)this + 9) |= 4u;
      int v23 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic *)*((void *)this + 3);
      if (!v23) {
        operator new();
      }
      unsigned int v32 = 0;
      int v24 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v24 >= *((void *)a2 + 2) || *v24 < 0)
      {
        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v32)) {
          return 0;
        }
      }
      else
      {
        unsigned int v32 = *v24;
        *((void *)a2 + 1) = v24 + 1;
      }
      int v25 = *((_DWORD *)a2 + 14);
      int v26 = *((_DWORD *)a2 + 15);
      *((_DWORD *)a2 + 14) = v25 + 1;
      if (v25 >= v26) {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
      if (!CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic::MergePartialFromCodedStream(v23, a2)|| !*((unsigned char *)a2 + 36))
      {
        return 0;
      }
      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
      int v27 = *((_DWORD *)a2 + 14);
      BOOL v13 = __OFSUB__(v27, 1);
      int v28 = v27 - 1;
      if (v28 < 0 == v13) {
        *((_DWORD *)a2 + 14) = v28;
      }
      if (*((void *)a2 + 1) == *((void *)a2 + 2)
        && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      }
    }
    int v7 = TagFallback & 7;
LABEL_20:
    if (v7 == 4) {
      return 1;
    }
    if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
  }
    }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 36);
  if (v6)
  {
    uint64_t v7 = *(void *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto((CoreNavigation::CLP::LogEntry::InternalToolDataTypes *)this);
      uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 36);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        return this;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto((CoreNavigation::CLP::LogEntry::InternalToolDataTypes *)this);
    uint64_t v8 = *(void *)(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::default_instance_ + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  if ((*(_DWORD *)(v5 + 36) & 4) != 0)
  {
LABEL_11:
    uint64_t v9 = *(void *)(v5 + 24);
    if (!v9)
    {
      CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto((CoreNavigation::CLP::LogEntry::InternalToolDataTypes *)this);
      uint64_t v9 = *(void *)(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::default_instance_ + 24);
    }
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v9, a2, a4);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::ByteSize(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 36);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_34;
  }
  if (*((unsigned char *)this + 36))
  {
    uint64_t v4 = *((void *)this + 1);
    if (!v4)
    {
      CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto(this);
      uint64_t v4 = *(void *)(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::default_instance_ + 8);
    }
    int v5 = *(unsigned __int8 *)(v4 + 36);
    if (*(unsigned char *)(v4 + 36))
    {
      int v6 = (v5 << 31 >> 31) & 9;
      if ((v5 & 2) != 0) {
        v6 += 9;
      }
      if ((v5 & 4) != 0) {
        int v5 = v6 + 9;
      }
      else {
        int v5 = v6;
      }
    }
    *(_DWORD *)(v4 + 32) = v5;
    uint64_t v3 = (v5 + 2);
    int v2 = *((_DWORD *)this + 9);
    if ((v2 & 2) == 0) {
      goto LABEL_24;
    }
    goto LABEL_15;
  }
  uint64_t v3 = 0;
  if ((*((unsigned char *)this + 36) & 2) != 0)
  {
LABEL_15:
    uint64_t v7 = *((void *)this + 2);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto(this);
      uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::default_instance_ + 16);
    }
    int v8 = *(unsigned __int8 *)(v7 + 36);
    if (*(unsigned char *)(v7 + 36))
    {
      int v9 = (v8 << 31 >> 31) & 9;
      if ((v8 & 2) != 0) {
        v9 += 9;
      }
      if ((v8 & 4) != 0) {
        int v8 = v9 + 9;
      }
      else {
        int v8 = v9;
      }
    }
    *(_DWORD *)(v7 + 32) = v8;
    uint64_t v3 = (v3 + v8 + 2);
    int v2 = *((_DWORD *)this + 9);
  }
LABEL_24:
  if ((v2 & 4) != 0)
  {
    uint64_t v10 = *((void *)this + 3);
    if (!v10)
    {
      CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto(this);
      uint64_t v10 = *(void *)(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::default_instance_ + 24);
    }
    int v11 = *(unsigned __int8 *)(v10 + 36);
    if (*(unsigned char *)(v10 + 36))
    {
      int v12 = (v11 << 31 >> 31) & 9;
      if ((v11 & 2) != 0) {
        v12 += 9;
      }
      if ((v11 & 4) != 0) {
        int v11 = v12 + 9;
      }
      else {
        int v11 = v12;
      }
    }
    *(_DWORD *)(v10 + 32) = v11;
    uint64_t v3 = (v3 + v11 + 2);
  }
LABEL_34:
  *((_DWORD *)this + 8) = v3;
  return v3;
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::MergeFrom(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *this, const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 36);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 36))
    {
      double result = *((double *)a2 + 1);
      *((_DWORD *)this + 9) |= 1u;
      *((double *)this + 1) = result;
      int v5 = *((_DWORD *)a2 + 9);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          return result;
        }
        goto LABEL_7;
      }
    }
    else if ((*((unsigned char *)a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    double result = *((double *)a2 + 2);
    *((_DWORD *)this + 9) |= 2u;
    *((double *)this + 2) = result;
    if ((*((_DWORD *)a2 + 9) & 4) == 0) {
      return result;
    }
LABEL_7:
    double result = *((double *)a2 + 3);
    *((_DWORD *)this + 9) |= 4u;
    *((double *)this + 3) = result;
  }
  return result;
}

void sub_18DF3EDE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic::MergeFrom(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic *this, const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 36);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 36))
    {
      double result = *((double *)a2 + 1);
      *((_DWORD *)this + 9) |= 1u;
      *((double *)this + 1) = result;
      int v5 = *((_DWORD *)a2 + 9);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          return result;
        }
        goto LABEL_7;
      }
    }
    else if ((*((unsigned char *)a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    double result = *((double *)a2 + 2);
    *((_DWORD *)this + 9) |= 2u;
    *((double *)this + 2) = result;
    if ((*((_DWORD *)a2 + 9) & 4) == 0) {
      return result;
    }
LABEL_7:
    double result = *((double *)a2 + 3);
    *((_DWORD *)this + 9) |= 4u;
    *((double *)this + 3) = result;
  }
  return result;
}

void sub_18DF3EED0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::CopyFrom(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *this, const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::IsInitialized(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *a2)
{
  if (a2 != (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    uint64_t v3 = *(void *)(this + 16);
    *(void *)(this + 16) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    uint64_t v4 = *(void *)(this + 24);
    *(void *)(this + 24) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v4;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVel::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.InternalToolDataTypes.PosAndVel");
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::SharedCtor(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError *this)
{
  *((void *)this + 7) = 0;
  double result = 0.0;
  *(_OWORD *)((char *)this + 40) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError *CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::PosAndVelError(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError *this, const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError *a2)
{
  *(void *)this = &unk_1EDD10100;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((void *)this + 7) = 0;
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::MergeFrom(this, a2);
  return this;
}

void sub_18DF3F06C(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::MergeFrom(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError *this, const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v14);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 60);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 60))
    {
      *((_DWORD *)this + 15) |= 1u;
      int v6 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *)*((void *)this + 1);
      if (!v6) {
        operator new();
      }
      uint64_t v7 = (const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *)*((void *)a2 + 1);
      if (!v7)
      {
        CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto(this);
        uint64_t v7 = *(const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz **)(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::default_instance_
                                                                                     + 8);
      }
      double result = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::MergeFrom(v6, v7);
      int v5 = *((_DWORD *)a2 + 15);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_22;
      }
    }
    else if ((*((unsigned char *)a2 + 60) & 2) == 0)
    {
      goto LABEL_6;
    }
    *((_DWORD *)this + 15) |= 2u;
    int v8 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *)*((void *)this + 2);
    if (!v8) {
      operator new();
    }
    int v9 = (const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *)*((void *)a2 + 2);
    if (!v9)
    {
      CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto(this);
      int v9 = *(const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz **)(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::default_instance_
                                                                                   + 16);
    }
    double result = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::MergeFrom(v8, v9);
    int v5 = *((_DWORD *)a2 + 15);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_27;
    }
LABEL_22:
    *((_DWORD *)this + 15) |= 4u;
    uint64_t v10 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp *)*((void *)this + 3);
    if (!v10) {
      operator new();
    }
    int v11 = (const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp *)*((void *)a2 + 3);
    if (!v11)
    {
      CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto(this);
      int v11 = *(const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp **)(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::default_instance_
                                                                                        + 24);
    }
    double result = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp::MergeFrom(v10, v11);
    int v5 = *((_DWORD *)a2 + 15);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_32;
    }
LABEL_27:
    *((_DWORD *)this + 15) |= 8u;
    int v12 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp *)*((void *)this + 4);
    if (!v12) {
      operator new();
    }
    BOOL v13 = (const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp *)*((void *)a2 + 4);
    if (!v13)
    {
      CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto(this);
      BOOL v13 = *(const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp **)(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::default_instance_
                                                                                        + 32);
    }
    double result = CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp::MergeFrom(v12, v13);
    int v5 = *((_DWORD *)a2 + 15);
    if ((v5 & 0x10) == 0)
    {
LABEL_9:
      if ((v5 & 0x20) == 0) {
        return result;
      }
      goto LABEL_10;
    }
LABEL_32:
    double result = *((double *)a2 + 5);
    *((_DWORD *)this + 15) |= 0x10u;
    *((double *)this + 5) = result;
    if ((*((_DWORD *)a2 + 15) & 0x20) == 0) {
      return result;
    }
LABEL_10:
    double result = *((double *)a2 + 6);
    *((_DWORD *)this + 15) |= 0x20u;
    *((double *)this + 6) = result;
  }
  return result;
}

void sub_18DF3F35C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::~PosAndVelError(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError *this)
{
  *(void *)this = &unk_1EDD10100;
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::~PosAndVelError(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::SharedDtor(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError *this)
{
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError *)CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *((void *)this + 2);
    if (v3) {
      (*(void (**)(uint64_t))(*(void *)v3 + 8))(v3);
    }
    uint64_t v4 = *((void *)this + 3);
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = *((void *)this + 4);
    if (v5)
    {
      int v6 = *(void (**)(void))(*(void *)v5 + 8);
      v6();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::default_instance(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError *this)
{
  return CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 56) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::New(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::Clear(uint64_t this)
{
  LOBYTE(v1) = *(unsigned char *)(this + 60);
  if ((_BYTE)v1)
  {
    if (*(unsigned char *)(this + 60))
    {
      uint64_t v2 = *(void *)(this + 8);
      if (v2)
      {
        if (*(unsigned char *)(v2 + 36))
        {
          *(void *)(v2 + 8) = 0;
          *(void *)(v2 + 16) = 0;
          *(void *)(v2 + 24) = 0;
        }
        *(_DWORD *)(v2 + 36) = 0;
        int v1 = *(_DWORD *)(this + 60);
      }
    }
    if ((v1 & 2) != 0)
    {
      uint64_t v3 = *(void *)(this + 16);
      if (v3)
      {
        if (*(unsigned char *)(v3 + 36))
        {
          *(void *)(v3 + 8) = 0;
          *(void *)(v3 + 16) = 0;
          *(void *)(v3 + 24) = 0;
        }
        *(_DWORD *)(v3 + 36) = 0;
        int v1 = *(_DWORD *)(this + 60);
      }
    }
    if ((v1 & 4) != 0)
    {
      uint64_t v4 = *(void *)(this + 24);
      if (v4)
      {
        if (*(unsigned char *)(v4 + 36))
        {
          *(void *)(v4 + 8) = 0;
          *(void *)(v4 + 16) = 0;
          *(void *)(v4 + 24) = 0;
        }
        *(_DWORD *)(v4 + 36) = 0;
        int v1 = *(_DWORD *)(this + 60);
      }
    }
    if ((v1 & 8) != 0)
    {
      uint64_t v5 = *(void *)(this + 32);
      if (v5)
      {
        if (*(unsigned char *)(v5 + 36))
        {
          *(void *)(v5 + 8) = 0;
          *(void *)(v5 + 16) = 0;
          *(void *)(v5 + 24) = 0;
        }
        *(_DWORD *)(v5 + 36) = 0;
      }
    }
    *(void *)(this + 40) = 0;
    *(void *)(this + 48) = 0;
  }
  *(_DWORD *)(this + 60) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 36))
  {
    *(void *)(this + 8) = 0;
    *(void *)(this + 16) = 0;
    *(void *)(this + 24) = 0;
  }
  *(_DWORD *)(this + 36) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  while (1)
  {
    uint64_t v4 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v4 < *((void *)a2 + 2) && (*v4 & 0x80000000) == 0)
    {
      unint64_t TagFallback = *v4;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v4 + 1;
      if (!TagFallback) {
        return 1;
      }
      goto LABEL_6;
    }
    unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
    *((_DWORD *)a2 + 8) = TagFallback;
    if (!TagFallback) {
      return 1;
    }
LABEL_6:
    switch(TagFallback >> 3)
    {
      case 1u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_23;
        }
        *((_DWORD *)this + 15) |= 1u;
        uint64_t v7 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *)*((void *)this + 1);
        if (!v7) {
          operator new();
        }
        v38[0] = 0;
        int v8 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v8 >= *((void *)a2 + 2) || *v8 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v38))return 0; {
        }
          }
        else
        {
          v38[0] = *v8;
          *((void *)a2 + 1) = v8 + 1;
        }
        int v9 = *((_DWORD *)a2 + 14);
        int v10 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v9 + 1;
        if (v9 >= v10) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::MergePartialFromCodedStream(v7, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v11 = *((_DWORD *)a2 + 14);
        BOOL v12 = __OFSUB__(v11, 1);
        int v13 = v11 - 1;
        if (v13 < 0 == v12) {
          *((_DWORD *)a2 + 14) = v13;
        }
        int v14 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v14 >= *((void *)a2 + 2) || *v14 != 18) {
          continue;
        }
        *((void *)a2 + 1) = v14 + 1;
        goto LABEL_35;
      case 2u:
        int v6 = TagFallback & 7;
        if (v6 != 2) {
          goto LABEL_23;
        }
LABEL_35:
        *((_DWORD *)this + 15) |= 2u;
        unsigned int v15 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *)*((void *)this + 2);
        if (!v15) {
          operator new();
        }
        v38[0] = 0;
        unsigned int v16 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v16 >= *((void *)a2 + 2) || *v16 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v38))return 0; {
        }
          }
        else
        {
          v38[0] = *v16;
          *((void *)a2 + 1) = v16 + 1;
        }
        int v17 = *((_DWORD *)a2 + 14);
        int v18 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v17 + 1;
        if (v17 >= v18) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::MergePartialFromCodedStream(v15, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v19 = *((_DWORD *)a2 + 14);
        BOOL v12 = __OFSUB__(v19, 1);
        int v20 = v19 - 1;
        if (v20 < 0 == v12) {
          *((_DWORD *)a2 + 14) = v20;
        }
        int v21 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v21 >= *((void *)a2 + 2) || *v21 != 26) {
          continue;
        }
        *((void *)a2 + 1) = v21 + 1;
LABEL_49:
        *((_DWORD *)this + 15) |= 4u;
        BOOL v22 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp *)*((void *)this + 3);
        if (!v22) {
          operator new();
        }
        v38[0] = 0;
        int v23 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v23 >= *((void *)a2 + 2) || *v23 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v38))return 0; {
        }
          }
        else
        {
          v38[0] = *v23;
          *((void *)a2 + 1) = v23 + 1;
        }
        int v24 = *((_DWORD *)a2 + 14);
        int v25 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v24 + 1;
        if (v24 >= v25) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp::MergePartialFromCodedStream(v22, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v26 = *((_DWORD *)a2 + 14);
        BOOL v12 = __OFSUB__(v26, 1);
        int v27 = v26 - 1;
        if (v27 < 0 == v12) {
          *((_DWORD *)a2 + 14) = v27;
        }
        int v28 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v28 >= *((void *)a2 + 2) || *v28 != 34) {
          continue;
        }
        *((void *)a2 + 1) = v28 + 1;
LABEL_63:
        *((_DWORD *)this + 15) |= 8u;
        int v29 = (CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp *)*((void *)this + 4);
        if (!v29) {
          operator new();
        }
        v38[0] = 0;
        unsigned int v30 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v30 >= *((void *)a2 + 2) || *v30 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v38))return 0; {
        }
          }
        else
        {
          v38[0] = *v30;
          *((void *)a2 + 1) = v30 + 1;
        }
        int v31 = *((_DWORD *)a2 + 14);
        int v32 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v31 + 1;
        if (v31 >= v32) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp::MergePartialFromCodedStream(v29, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v33 = *((_DWORD *)a2 + 14);
        BOOL v12 = __OFSUB__(v33, 1);
        int v34 = v33 - 1;
        if (v34 < 0 == v12) {
          *((_DWORD *)a2 + 14) = v34;
        }
        unsigned int v35 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v35 >= *((void *)a2 + 2) || *v35 != 41) {
          continue;
        }
        *((void *)a2 + 1) = v35 + 1;
LABEL_77:
        *(void *)uint64_t v38 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v38) & 1) == 0)return 0; {
        *((void *)this + 5) = *(void *)v38;
        }
        *((_DWORD *)this + 15) |= 0x10u;
        int v36 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v36 >= *((void *)a2 + 2) || *v36 != 49) {
          continue;
        }
        *((void *)a2 + 1) = v36 + 1;
LABEL_81:
        *(void *)uint64_t v38 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v38) & 1) == 0)return 0; {
        *((void *)this + 6) = *(void *)v38;
        }
        *((_DWORD *)this + 15) |= 0x20u;
        if (*((void *)a2 + 1) == *((void *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
        break;
      case 3u:
        int v6 = TagFallback & 7;
        if (v6 == 2) {
          goto LABEL_49;
        }
        goto LABEL_23;
      case 4u:
        int v6 = TagFallback & 7;
        if (v6 == 2) {
          goto LABEL_63;
        }
        goto LABEL_23;
      case 5u:
        int v6 = TagFallback & 7;
        if (v6 == 1) {
          goto LABEL_77;
        }
        goto LABEL_23;
      case 6u:
        int v6 = TagFallback & 7;
        if (v6 != 1) {
          goto LABEL_23;
        }
        goto LABEL_81;
      default:
        int v6 = TagFallback & 7;
LABEL_23:
        if (v6 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 60);
  if (v6)
  {
    uint64_t v7 = *(void *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto((CoreNavigation::CLP::LogEntry::InternalToolDataTypes *)this);
      uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 60);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_14;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto((CoreNavigation::CLP::LogEntry::InternalToolDataTypes *)this);
    uint64_t v8 = *(void *)(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::default_instance_ + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_17;
  }
LABEL_14:
  uint64_t v9 = *(void *)(v5 + 24);
  if (!v9)
  {
    CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto((CoreNavigation::CLP::LogEntry::InternalToolDataTypes *)this);
    uint64_t v9 = *(void *)(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::default_instance_ + 24);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, v9, a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
LABEL_20:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(v5 + 40), a3);
    if ((*(_DWORD *)(v5 + 60) & 0x20) == 0) {
      return this;
    }
    goto LABEL_21;
  }
LABEL_17:
  uint64_t v10 = *(void *)(v5 + 32);
  if (!v10)
  {
    CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto((CoreNavigation::CLP::LogEntry::InternalToolDataTypes *)this);
    uint64_t v10 = *(void *)(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::default_instance_ + 32);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, v10, a2, a4);
  int v6 = *(_DWORD *)(v5 + 60);
  if ((v6 & 0x10) != 0) {
    goto LABEL_20;
  }
LABEL_6:
  if ((v6 & 0x20) == 0) {
    return this;
  }
LABEL_21:
  double v11 = *(double *)(v5 + 48);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, v11, a3);
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::ByteSize(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 60);
  if (!(_BYTE)v2)
  {
    uint64_t result = 0;
    goto LABEL_50;
  }
  if ((*((unsigned char *)this + 60) & 1) == 0)
  {
    int v3 = 0;
    if ((*((unsigned char *)this + 60) & 2) == 0) {
      goto LABEL_24;
    }
    goto LABEL_15;
  }
  uint64_t v5 = *((void *)this + 1);
  if (!v5)
  {
    CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto(this);
    uint64_t v5 = *(void *)(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::default_instance_ + 8);
  }
  int v6 = *(unsigned __int8 *)(v5 + 36);
  if (*(unsigned char *)(v5 + 36))
  {
    int v7 = (v6 << 31 >> 31) & 9;
    if ((v6 & 2) != 0) {
      v7 += 9;
    }
    if ((v6 & 4) != 0) {
      int v6 = v7 + 9;
    }
    else {
      int v6 = v7;
    }
  }
  *(_DWORD *)(v5 + 32) = v6;
  int v3 = v6 + 2;
  int v2 = *((_DWORD *)this + 15);
  if ((v2 & 2) != 0)
  {
LABEL_15:
    uint64_t v8 = *((void *)this + 2);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto(this);
      uint64_t v8 = *(void *)(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::default_instance_ + 16);
    }
    int v9 = *(unsigned __int8 *)(v8 + 36);
    if (*(unsigned char *)(v8 + 36))
    {
      int v10 = (v9 << 31 >> 31) & 9;
      if ((v9 & 2) != 0) {
        v10 += 9;
      }
      if ((v9 & 4) != 0) {
        int v9 = v10 + 9;
      }
      else {
        int v9 = v10;
      }
    }
    *(_DWORD *)(v8 + 32) = v9;
    v3 += v9 + 2;
    int v2 = *((_DWORD *)this + 15);
  }
LABEL_24:
  if ((v2 & 4) != 0)
  {
    uint64_t v11 = *((void *)this + 3);
    if (!v11)
    {
      CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto(this);
      uint64_t v11 = *(void *)(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::default_instance_ + 24);
    }
    int v12 = *(unsigned __int8 *)(v11 + 36);
    if (*(unsigned char *)(v11 + 36))
    {
      int v13 = (v12 << 31 >> 31) & 9;
      if ((v12 & 2) != 0) {
        v13 += 9;
      }
      if ((v12 & 4) != 0) {
        int v12 = v13 + 9;
      }
      else {
        int v12 = v13;
      }
    }
    *(_DWORD *)(v11 + 32) = v12;
    v3 += v12 + 2;
    int v2 = *((_DWORD *)this + 15);
    if ((v2 & 8) == 0) {
      goto LABEL_45;
    }
    goto LABEL_36;
  }
  if ((v2 & 8) != 0)
  {
LABEL_36:
    uint64_t v14 = *((void *)this + 4);
    if (!v14)
    {
      CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto(this);
      uint64_t v14 = *(void *)(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::default_instance_ + 32);
    }
    int v15 = *(unsigned __int8 *)(v14 + 36);
    if (*(unsigned char *)(v14 + 36))
    {
      int v16 = (v15 << 31 >> 31) & 9;
      if ((v15 & 2) != 0) {
        v16 += 9;
      }
      if ((v15 & 4) != 0) {
        int v15 = v16 + 9;
      }
      else {
        int v15 = v16;
      }
    }
    *(_DWORD *)(v14 + 32) = v15;
    v3 += v15 + 2;
    int v2 = *((_DWORD *)this + 15);
  }
LABEL_45:
  unsigned int v17 = v3 + 9;
  if ((v2 & 0x10) == 0) {
    unsigned int v17 = v3;
  }
  if ((v2 & 0x20) != 0) {
    uint64_t result = v17 + 9;
  }
  else {
    uint64_t result = v17;
  }
LABEL_50:
  *((_DWORD *)this + 14) = result;
  return result;
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp::MergeFrom(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp *this, const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v6);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 36);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 36))
    {
      double result = *((double *)a2 + 1);
      *((_DWORD *)this + 9) |= 1u;
      *((double *)this + 1) = result;
      int v5 = *((_DWORD *)a2 + 9);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          return result;
        }
        goto LABEL_7;
      }
    }
    else if ((*((unsigned char *)a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    double result = *((double *)a2 + 2);
    *((_DWORD *)this + 9) |= 2u;
    *((double *)this + 2) = result;
    if ((*((_DWORD *)a2 + 9) & 4) == 0) {
      return result;
    }
LABEL_7:
    double result = *((double *)a2 + 3);
    *((_DWORD *)this + 9) |= 4u;
    *((double *)this + 3) = result;
  }
  return result;
}

void sub_18DF400CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::CopyFrom(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError *this, const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::IsInitialized(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::Swap(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError *this, CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    uint64_t v3 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    uint64_t v4 = *((void *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v4;
    uint64_t v5 = *((void *)this + 4);
    *((void *)this + 4) = *((void *)a2 + 4);
    *((void *)a2 + 4) = v5;
    uint64_t v6 = *((void *)this + 5);
    *((void *)this + 5) = *((void *)a2 + 5);
    *((void *)a2 + 5) = v6;
    double result = *((double *)this + 6);
    *((void *)this + 6) = *((void *)a2 + 6);
    *((double *)a2 + 6) = result;
    LODWORD(v5) = *((_DWORD *)this + 15);
    *((_DWORD *)this + 15) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v5;
    LODWORD(v5) = *((_DWORD *)this + 14);
    *((_DWORD *)this + 14) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v5;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::InternalToolDataTypes::PosAndVelError::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.InternalToolDataTypes.PosAndVelError");
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::SharedCtor(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *this)
{
  double result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::EcefXyz(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *this, const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *a2)
{
  *(void *)this = &unk_1EDD101F0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::MergeFrom(this, a2);
  return this;
}

void sub_18DF40280(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::~EcefXyz(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *this)
{
  *(void *)this = &unk_1EDD101F0;
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::~EcefXyz(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::default_instance(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *this)
{
  return CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 32) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::New(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v4 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v4;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((void *)a2 + 1) = v4 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v6 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_27;
        }
        unint64_t v11 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0) {
          return 0;
        }
        *((void *)this + 1) = v11;
        *((_DWORD *)this + 9) |= 1u;
        uint64_t v8 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v8 < *((void *)a2 + 2) && *v8 == 17)
        {
          *((void *)a2 + 1) = v8 + 1;
LABEL_17:
          unint64_t v11 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0) {
            return 0;
          }
          *((void *)this + 2) = v11;
          *((_DWORD *)this + 9) |= 2u;
          int v9 = (unsigned char *)*((void *)a2 + 1);
          if ((unint64_t)v9 < *((void *)a2 + 2) && *v9 == 25)
          {
            *((void *)a2 + 1) = v9 + 1;
            goto LABEL_21;
          }
        }
      }
      if (v6 == 2)
      {
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_27;
        }
        goto LABEL_17;
      }
      if (v6 != 3)
      {
        int v7 = TagFallback & 7;
        goto LABEL_27;
      }
      int v7 = TagFallback & 7;
      if (v7 == 1) {
        break;
      }
LABEL_27:
      if (v7 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
    }
      }
LABEL_21:
    unint64_t v11 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0) {
      return 0;
    }
    *((void *)this + 3) = v11;
    *((_DWORD *)this + 9) |= 4u;
  }
  while (*((void *)a2 + 1) != *((void *)a2 + 2)
       || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10));
  *((_DWORD *)a2 + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)a2 + 36) = 1;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = this;
  int v5 = *(_DWORD *)(this + 36);
  if ((v5 & 1) == 0)
  {
    if ((v5 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v4 + 16), a3);
    if ((*(_DWORD *)(v4 + 36) & 4) == 0) {
      return this;
    }
    goto LABEL_7;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
  int v5 = *(_DWORD *)(v4 + 36);
  if ((v5 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 4) == 0) {
    return this;
  }
LABEL_7:
  double v6 = *(double *)(v4 + 24);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, v6, a3);
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::ByteSize(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *this)
{
  uint64_t v1 = *((unsigned __int8 *)this + 36);
  if (*((unsigned char *)this + 36))
  {
    unsigned int v2 = ((int)(v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0) {
      v2 += 9;
    }
    if ((v1 & 4) != 0) {
      uint64_t v1 = v2 + 9;
    }
    else {
      uint64_t v1 = v2;
    }
  }
  *((_DWORD *)this + 8) = v1;
  return v1;
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::CopyFrom(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *this, const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::IsInitialized(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::Swap(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *this, CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    uint64_t v3 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    double result = *((double *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    *((double *)a2 + 3) = result;
    int v5 = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v5;
    int v6 = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v6;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EcefXyz::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.InternalToolDataTypes.EcefXyz");
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp::SharedCtor(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp *this)
{
  double result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp *CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp::EastNorthUp(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp *this, const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp *a2)
{
  *(void *)this = &unk_1EDD10088;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp::MergeFrom(this, a2);
  return this;
}

void sub_18DF40848(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp::~EastNorthUp(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp *this)
{
  *(void *)this = &unk_1EDD10088;
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp::~EastNorthUp(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp::default_instance(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp *this)
{
  return CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 32) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp::New(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v4 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v4;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((void *)a2 + 1) = v4 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v6 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_27;
        }
        unint64_t v11 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0) {
          return 0;
        }
        *((void *)this + 1) = v11;
        *((_DWORD *)this + 9) |= 1u;
        uint64_t v8 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v8 < *((void *)a2 + 2) && *v8 == 17)
        {
          *((void *)a2 + 1) = v8 + 1;
LABEL_17:
          unint64_t v11 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0) {
            return 0;
          }
          *((void *)this + 2) = v11;
          *((_DWORD *)this + 9) |= 2u;
          int v9 = (unsigned char *)*((void *)a2 + 1);
          if ((unint64_t)v9 < *((void *)a2 + 2) && *v9 == 25)
          {
            *((void *)a2 + 1) = v9 + 1;
            goto LABEL_21;
          }
        }
      }
      if (v6 == 2)
      {
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_27;
        }
        goto LABEL_17;
      }
      if (v6 != 3)
      {
        int v7 = TagFallback & 7;
        goto LABEL_27;
      }
      int v7 = TagFallback & 7;
      if (v7 == 1) {
        break;
      }
LABEL_27:
      if (v7 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
    }
      }
LABEL_21:
    unint64_t v11 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0) {
      return 0;
    }
    *((void *)this + 3) = v11;
    *((_DWORD *)this + 9) |= 4u;
  }
  while (*((void *)a2 + 1) != *((void *)a2 + 2)
       || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10));
  *((_DWORD *)a2 + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)a2 + 36) = 1;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = this;
  int v5 = *(_DWORD *)(this + 36);
  if ((v5 & 1) == 0)
  {
    if ((v5 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v4 + 16), a3);
    if ((*(_DWORD *)(v4 + 36) & 4) == 0) {
      return this;
    }
    goto LABEL_7;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
  int v5 = *(_DWORD *)(v4 + 36);
  if ((v5 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 4) == 0) {
    return this;
  }
LABEL_7:
  double v6 = *(double *)(v4 + 24);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, v6, a3);
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp::ByteSize(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp *this)
{
  uint64_t v1 = *((unsigned __int8 *)this + 36);
  if (*((unsigned char *)this + 36))
  {
    unsigned int v2 = ((int)(v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0) {
      v2 += 9;
    }
    if ((v1 & 4) != 0) {
      uint64_t v1 = v2 + 9;
    }
    else {
      uint64_t v1 = v2;
    }
  }
  *((_DWORD *)this + 8) = v1;
  return v1;
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp::CopyFrom(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp *this, const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp::IsInitialized(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp::Swap(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp *this, CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    uint64_t v3 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    double result = *((double *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    *((double *)a2 + 3) = result;
    int v5 = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v5;
    int v6 = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v6;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::InternalToolDataTypes::EastNorthUp::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.InternalToolDataTypes.EastNorthUp");
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic::SharedCtor(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic *this)
{
  double result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic *CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic::LatLonAltGeodetic(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic *this, const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic *a2)
{
  *(void *)this = &unk_1EDD10178;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic::MergeFrom(this, a2);
  return this;
}

void sub_18DF40E10(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic::~LatLonAltGeodetic(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic *this)
{
  *(void *)this = &unk_1EDD10178;
  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::protobuf_AddDesc_CoreNavigationCLPInternalToolDataTypes_2eproto(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic::~LatLonAltGeodetic(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic::default_instance(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic *this)
{
  return CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 32) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic::New(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  do
  {
    while (1)
    {
      while (1)
      {
        uint64_t v4 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v4;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((void *)a2 + 1) = v4 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v6 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_27;
        }
        unint64_t v11 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0) {
          return 0;
        }
        *((void *)this + 1) = v11;
        *((_DWORD *)this + 9) |= 1u;
        uint64_t v8 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v8 < *((void *)a2 + 2) && *v8 == 17)
        {
          *((void *)a2 + 1) = v8 + 1;
LABEL_17:
          unint64_t v11 = 0;
          if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0) {
            return 0;
          }
          *((void *)this + 2) = v11;
          *((_DWORD *)this + 9) |= 2u;
          int v9 = (unsigned char *)*((void *)a2 + 1);
          if ((unint64_t)v9 < *((void *)a2 + 2) && *v9 == 25)
          {
            *((void *)a2 + 1) = v9 + 1;
            goto LABEL_21;
          }
        }
      }
      if (v6 == 2)
      {
        int v7 = TagFallback & 7;
        if (v7 != 1) {
          goto LABEL_27;
        }
        goto LABEL_17;
      }
      if (v6 != 3)
      {
        int v7 = TagFallback & 7;
        goto LABEL_27;
      }
      int v7 = TagFallback & 7;
      if (v7 == 1) {
        break;
      }
LABEL_27:
      if (v7 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
    }
      }
LABEL_21:
    unint64_t v11 = 0;
    if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v11) & 1) == 0) {
      return 0;
    }
    *((void *)this + 3) = v11;
    *((_DWORD *)this + 9) |= 4u;
  }
  while (*((void *)a2 + 1) != *((void *)a2 + 2)
       || !*((_DWORD *)a2 + 11) && *((_DWORD *)a2 + 6) != *((_DWORD *)a2 + 10));
  *((_DWORD *)a2 + 8) = 0;
  uint64_t result = 1;
  *((unsigned char *)a2 + 36) = 1;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  uint64_t v4 = this;
  int v5 = *(_DWORD *)(this + 36);
  if ((v5 & 1) == 0)
  {
    if ((v5 & 2) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, (uint64_t)a2, *(double *)(v4 + 16), a3);
    if ((*(_DWORD *)(v4 + 36) & 4) == 0) {
      return this;
    }
    goto LABEL_7;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
  int v5 = *(_DWORD *)(v4 + 36);
  if ((v5 & 2) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 4) == 0) {
    return this;
  }
LABEL_7:
  double v6 = *(double *)(v4 + 24);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, v6, a3);
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic::ByteSize(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic *this)
{
  uint64_t v1 = *((unsigned __int8 *)this + 36);
  if (*((unsigned char *)this + 36))
  {
    unsigned int v2 = ((int)(v1 << 31) >> 31) & 9;
    if ((v1 & 2) != 0) {
      v2 += 9;
    }
    if ((v1 & 4) != 0) {
      uint64_t v1 = v2 + 9;
    }
    else {
      uint64_t v1 = v2;
    }
  }
  *((_DWORD *)this + 8) = v1;
  return v1;
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic::CopyFrom(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic *this, const CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic::IsInitialized(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic::Swap(CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic *this, CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    uint64_t v3 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    double result = *((double *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    *((double *)a2 + 3) = result;
    int v5 = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v5;
    int v6 = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v6;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::InternalToolDataTypes::LatLonAltGeodetic::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.InternalToolDataTypes.LatLonAltGeodetic");
}

uint64_t sub_18DF4134C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 20);
}

uint64_t sub_18DF41354(uint64_t a1)
{
  return *(unsigned int *)(a1 + 24);
}

uint64_t sub_18DF4135C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_18DF41364(uint64_t a1)
{
  return *(unsigned int *)(a1 + 56);
}

uint64_t sub_18DF4136C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_18DF41374(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t sub_18DF4137C(uint64_t a1)
{
  return *(unsigned int *)(a1 + 32);
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::protobuf_ShutdownFile_CoreNavigationCLPRayTracingTileData_2eproto(CoreNavigation::CLP::LogEntry::RayTracingTileData *this)
{
  if (CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::default_instance_);
  if (CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp::default_instance_);
  if (CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::default_instance_);
  if (CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData::default_instance_);
  if (CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::default_instance_);
  if (CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData::default_instance_) {
    (*(void (**)(uint64_t))(*(void *)CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData::default_instance_
  }
                                    + 8))(CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData::default_instance_);
  uint64_t result = CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::default_instance_;
  if (CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::default_instance_)
  {
    uint64_t v2 = *(uint64_t (**)(void))(*(void *)CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::default_instance_
                             + 8);
    return v2();
  }
  return result;
}

void CoreNavigation::CLP::LogEntry::RayTracingTileData::protobuf_AddDesc_CoreNavigationCLPRayTracingTileData_2eproto_impl(CoreNavigation::CLP::LogEntry::RayTracingTileData *this, uint64_t a2, uint64_t a3, const char *a4)
{
}

void *CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::LogEntry(void *this)
{
  uint64_t v1 = MEMORY[0x1E4FBA920];
  *this = &unk_1EDD10010;
  this[1] = 0;
  this[2] = 0;
  this[3] = v1;
  this[4] = 0;
  return this;
}

{
  uint64_t v1;

  uint64_t v1 = MEMORY[0x1E4FBA920];
  *this = &unk_1EDD10010;
  this[1] = 0;
  this[2] = 0;
  this[3] = v1;
  this[4] = 0;
  return this;
}

void *CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp::RayTracingTileTimestamp(void *this)
{
  this[1] = 0;
  this[2] = 0;
  *this = &unk_1EDD0FE30;
  return this;
}

{
  this[1] = 0;
  this[2] = 0;
  *this = &unk_1EDD0FE30;
  return this;
}

double CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::RayTracingTileHeader(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader *this)
{
  *(void *)this = &unk_1EDD0FD40;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 36) = 0u;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD0FD40;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 36) = 0u;
  return result;
}

double CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData::RayTracingTilePayloadMetaData(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData *this)
{
  *(void *)this = &unk_1EDD0FF98;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 1;
  *((_DWORD *)this + 17) = 0;
  *((_DWORD *)this + 18) = 0;
  *(void *)((char *)this + 44) = 0;
  *(void *)((char *)this + 60) = 0;
  *(void *)((char *)this + 52) = 0;
  return result;
}

{
  double result;

  *(void *)this = &unk_1EDD0FF98;
  double result = 0.0;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 1;
  *((_DWORD *)this + 17) = 0;
  *((_DWORD *)this + 18) = 0;
  *(void *)((char *)this + 44) = 0;
  *(void *)((char *)this + 60) = 0;
  *(void *)((char *)this + 52) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::PointFacetVisibilityData(uint64_t this)
{
  *(_DWORD *)(this + 36) = 0;
  *(_DWORD *)(this + 40) = 0;
  *(void *)this = &unk_1EDD0FF20;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  return this;
}

{
  *(_DWORD *)(this + 36) = 0;
  *(_DWORD *)(this + 40) = 0;
  *(void *)this = &unk_1EDD0FF20;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData::FacetInterVisibilityData(uint64_t this)
{
  *(_DWORD *)(this + 36) = 0;
  *(_DWORD *)(this + 40) = 0;
  *(void *)this = &unk_1EDD0FEA8;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  return this;
}

{
  *(_DWORD *)(this + 36) = 0;
  *(_DWORD *)(this + 40) = 0;
  *(void *)this = &unk_1EDD0FEA8;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::RayTracingTilePayload(uint64_t this)
{
  *(void *)(this + 40) = 0;
  *(void *)(this + 48) = 0;
  *(void *)(this + 64) = 0;
  *(void *)(this + 72) = 0;
  *(void *)(this + 88) = 0;
  *(void *)(this + 96) = 0;
  *(_DWORD *)(this + 104) = 0;
  *(void *)(this + 112) = 0;
  *(void *)(this + 120) = 0;
  *(_DWORD *)(this + 128) = 0;
  *(void *)(this + 136) = 0;
  *(void *)(this + 144) = 0;
  *(_DWORD *)(this + 152) = 0;
  *(_DWORD *)(this + 176) = 0;
  *(void *)(this + 160) = 0;
  *(void *)(this + 168) = 0;
  *(_DWORD *)(this + 200) = 0;
  *(void *)(this + 184) = 0;
  *(void *)(this + 192) = 0;
  *(void *)(this + 208) = 0;
  *(void *)this = &unk_1EDD0FDB8;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  return this;
}

{
  *(void *)(this + 40) = 0;
  *(void *)(this + 48) = 0;
  *(void *)(this + 64) = 0;
  *(void *)(this + 72) = 0;
  *(void *)(this + 88) = 0;
  *(void *)(this + 96) = 0;
  *(_DWORD *)(this + 104) = 0;
  *(void *)(this + 112) = 0;
  *(void *)(this + 120) = 0;
  *(_DWORD *)(this + 128) = 0;
  *(void *)(this + 136) = 0;
  *(void *)(this + 144) = 0;
  *(_DWORD *)(this + 152) = 0;
  *(_DWORD *)(this + 176) = 0;
  *(void *)(this + 160) = 0;
  *(void *)(this + 168) = 0;
  *(_DWORD *)(this + 200) = 0;
  *(void *)(this + 184) = 0;
  *(void *)(this + 192) = 0;
  *(void *)(this + 208) = 0;
  *(void *)this = &unk_1EDD0FDB8;
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  *(void *)(this + 24) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::InitAsDefaultInstance(uint64_t this)
{
  uint64_t v1 = CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::default_instance_;
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::default_instance_;
  *(void *)(this + 16) = v1;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::InitAsDefaultInstance(uint64_t this)
{
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp::default_instance_;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::InitAsDefaultInstance(uint64_t this)
{
  *(void *)(this + 8) = CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData::default_instance_;
  return this;
}

void CoreNavigation::CLP::LogEntry::RayTracingTileData::protobuf_AddDesc_CoreNavigationCLPRayTracingTileData_2eproto(CoreNavigation::CLP::LogEntry::RayTracingTileData *this)
{
  uint64_t v1 = CoreNavigation::CLP::LogEntry::RayTracingTileData::protobuf_AddDesc_CoreNavigationCLPRayTracingTileData_2eproto_once_;
  __dmb(0xBu);
  if (v1 != 2)
  {
    v2[0] = MEMORY[0x1E4FBA938] + 16;
    v2[1] = CoreNavigation::CLP::LogEntry::RayTracingTileData::protobuf_AddDesc_CoreNavigationCLPRayTracingTileData_2eproto_impl;
    char v3 = 0;
    wireless_diagnostics::google::protobuf::GoogleOnceInitImpl();
    wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)v2);
  }
}

void sub_18DF419F4(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  wireless_diagnostics::google::protobuf::internal::FunctionClosure0::~FunctionClosure0((wireless_diagnostics::google::protobuf::internal::FunctionClosure0 *)va);
  _Unwind_Resume(a1);
}

void *CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::SharedCtor(void *this)
{
  this[1] = 0;
  this[2] = 0;
  this[3] = MEMORY[0x1E4FBA920];
  this[4] = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry *CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::LogEntry(CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry *this, const CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry *a2)
{
  *(void *)this = &unk_1EDD10010;
  *((void *)this + 1) = 0;
  uint64_t v3 = MEMORY[0x1E4FBA920];
  *((void *)this + 2) = 0;
  *((void *)this + 3) = v3;
  *((void *)this + 4) = 0;
  CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::MergeFrom(this, a2);
  return this;
}

void sub_18DF41AA0(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::MergeFrom(CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry *this, const CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v4) = *((unsigned char *)a2 + 36);
  if ((_BYTE)v4)
  {
    if (*((unsigned char *)a2 + 36))
    {
      *((_DWORD *)this + 9) |= 1u;
      int v5 = (CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader *)*((void *)this + 1);
      if (!v5) {
        operator new();
      }
      int v6 = (const CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader *)*((void *)a2 + 1);
      if (!v6)
      {
        CoreNavigation::CLP::LogEntry::RayTracingTileData::protobuf_AddDesc_CoreNavigationCLPRayTracingTileData_2eproto(this);
        int v6 = *(const CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader **)(CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::default_instance_
                                                                                               + 8);
      }
      CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::MergeFrom(v5, v6);
      int v4 = *((_DWORD *)a2 + 9);
      if ((v4 & 2) == 0)
      {
LABEL_6:
        if ((v4 & 4) == 0) {
          return;
        }
        goto LABEL_18;
      }
    }
    else if ((*((unsigned char *)a2 + 36) & 2) == 0)
    {
      goto LABEL_6;
    }
    *((_DWORD *)this + 9) |= 2u;
    int v7 = (CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *)*((void *)this + 2);
    if (!v7) {
      operator new();
    }
    uint64_t v8 = (const CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *)*((void *)a2 + 2);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::RayTracingTileData::protobuf_AddDesc_CoreNavigationCLPRayTracingTileData_2eproto(this);
      uint64_t v8 = *(const CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload **)(CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::default_instance_
                                                                                              + 16);
    }
    CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::MergeFrom(v7, v8);
    if ((*((_DWORD *)a2 + 9) & 4) != 0)
    {
LABEL_18:
      int v9 = (const std::string *)*((void *)a2 + 3);
      *((_DWORD *)this + 9) |= 4u;
      int v10 = (std::string *)*((void *)this + 3);
      if (v10 == (std::string *)MEMORY[0x1E4FBA920]) {
        operator new();
      }
      std::string::operator=(v10, v9);
    }
  }
}

void sub_18DF41CCC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::~LogEntry(CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry *this)
{
  *(void *)this = &unk_1EDD10010;
  CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::~LogEntry(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::SharedDtor(CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry *this)
{
  uint64_t v1 = this;
  uint64_t v2 = *((void *)this + 3);
  if (v2 != MEMORY[0x1E4FBA920] && v2 != 0)
  {
    if (*(char *)(v2 + 23) < 0) {
      operator delete(*(void **)v2);
    }
    this = (CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry *)MEMORY[0x192FA6240](v2, 0x1012C40EC159624);
  }
  CoreNavigation::CLP::LogEntry::RayTracingTileData::protobuf_AddDesc_CoreNavigationCLPRayTracingTileData_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry *)CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::default_instance_ != v1)
  {
    uint64_t v4 = *((void *)v1 + 1);
    if (v4) {
      (*(void (**)(uint64_t))(*(void *)v4 + 8))(v4);
    }
    uint64_t v5 = *((void *)v1 + 2);
    if (v5)
    {
      int v6 = *(void (**)(void))(*(void *)v5 + 8);
      v6();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::default_instance(CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry *this)
{
  return CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 32) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::New(CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::Clear(uint64_t this)
{
  uint64_t v1 = this;
  LOBYTE(v2) = *(unsigned char *)(this + 36);
  if ((_BYTE)v2)
  {
    if (*(unsigned char *)(this + 36))
    {
      this = *(void *)(this + 8);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::Clear(this);
        int v2 = *(_DWORD *)(v1 + 36);
      }
    }
    if ((v2 & 2) != 0)
    {
      this = *(void *)(v1 + 16);
      if (this)
      {
        this = CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::Clear((CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *)this);
        int v2 = *(_DWORD *)(v1 + 36);
      }
    }
    if ((v2 & 4) != 0)
    {
      uint64_t v3 = *(void *)(v1 + 24);
      if (v3 != MEMORY[0x1E4FBA920])
      {
        if (*(char *)(v3 + 23) < 0)
        {
          **(unsigned char **)uint64_t v3 = 0;
          *(void *)(v3 + 8) = 0;
        }
        else
        {
          *(unsigned char *)uint64_t v3 = 0;
          *(unsigned char *)(v3 + 23) = 0;
        }
      }
    }
  }
  *(_DWORD *)(v1 + 36) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 48))
  {
    if (*(unsigned char *)(this + 48))
    {
      uint64_t v1 = *(void *)(this + 8);
      if (v1)
      {
        if (*(unsigned char *)(v1 + 20)) {
          *(void *)(v1 + 8) = 0;
        }
        *(_DWORD *)(v1 + 20) = 0;
      }
    }
    *(void *)(this + 16) = 0;
    *(void *)(this + 24) = 0;
    *(_DWORD *)(this + 40) = 0;
    *(void *)(this + 32) = 0;
  }
  *(_DWORD *)(this + 48) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::Clear(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *this)
{
  if (*((unsigned char *)this + 212))
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2)
    {
      int v3 = *(_DWORD *)(v2 + 72);
      if ((_BYTE)v3)
      {
        *(_OWORD *)(v2 + 24) = 0u;
        *(_OWORD *)(v2 + 8) = 0u;
        *(_DWORD *)(v2 + 40) = 1;
      }
      if ((v3 & 0xFF00) != 0)
      {
        *(void *)(v2 + 52) = 0;
        *(void *)(v2 + 44) = 0;
        *(void *)(v2 + 60) = 0;
      }
      *(_DWORD *)(v2 + 72) = 0;
    }
  }
  *((_DWORD *)this + 6) = 0;
  *((_DWORD *)this + 12) = 0;
  *((_DWORD *)this + 18) = 0;
  sub_18DF0C208((uint64_t)this + 88);
  sub_18DF0C208((uint64_t)this + 112);
  sub_18DF0C208((uint64_t)this + 136);
  sub_18DF0C208((uint64_t)this + 160);
  uint64_t result = sub_18DF0C208((uint64_t)this + 184);
  *((_DWORD *)this + 53) = 0;
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4 = MEMORY[0x1E4FBA920];
  while (1)
  {
    while (1)
    {
      while (1)
      {
        uint64_t v5 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v5 >= *((void *)a2 + 2) || *v5 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v5;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((void *)a2 + 1) = v5 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v7 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v8 = TagFallback & 7;
        if (v8 != 2) {
          goto LABEL_21;
        }
        *((_DWORD *)this + 9) |= 1u;
        int v9 = (CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader *)*((void *)this + 1);
        if (!v9) {
          operator new();
        }
        unsigned int v25 = 0;
        int v10 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v25))return 0; {
        }
          }
        else
        {
          unsigned int v25 = *v10;
          *((void *)a2 + 1) = v10 + 1;
        }
        int v11 = *((_DWORD *)a2 + 14);
        int v12 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v11 + 1;
        if (v11 >= v12) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::MergePartialFromCodedStream(v9, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v13 = *((_DWORD *)a2 + 14);
        BOOL v14 = __OFSUB__(v13, 1);
        int v15 = v13 - 1;
        if (v15 < 0 == v14) {
          *((_DWORD *)a2 + 14) = v15;
        }
        int v16 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v16 < *((void *)a2 + 2) && *v16 == 18)
        {
          *((void *)a2 + 1) = v16 + 1;
          goto LABEL_33;
        }
      }
      if (v7 == 2) {
        break;
      }
      if (v7 == 3)
      {
        int v8 = TagFallback & 7;
        if (v8 == 2) {
          goto LABEL_47;
        }
      }
      else
      {
        int v8 = TagFallback & 7;
      }
LABEL_21:
      if (v8 == 4) {
        return 1;
      }
      if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
    }
      }
    int v8 = TagFallback & 7;
    if (v8 != 2) {
      goto LABEL_21;
    }
LABEL_33:
    *((_DWORD *)this + 9) |= 2u;
    unsigned int v17 = (CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *)*((void *)this + 2);
    if (!v17) {
      operator new();
    }
    unsigned int v26 = 0;
    int v18 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v18 >= *((void *)a2 + 2) || *v18 < 0)
    {
      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v26)) {
        return 0;
      }
    }
    else
    {
      unsigned int v26 = *v18;
      *((void *)a2 + 1) = v18 + 1;
    }
    int v19 = *((_DWORD *)a2 + 14);
    int v20 = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 14) = v19 + 1;
    if (v19 >= v20) {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
    if (!CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::MergePartialFromCodedStream(v17, a2)|| !*((unsigned char *)a2 + 36))
    {
      return 0;
    }
    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
    int v21 = *((_DWORD *)a2 + 14);
    BOOL v14 = __OFSUB__(v21, 1);
    int v22 = v21 - 1;
    if (v22 < 0 == v14) {
      *((_DWORD *)a2 + 14) = v22;
    }
    int v23 = (unsigned char *)*((void *)a2 + 1);
    if ((unint64_t)v23 < *((void *)a2 + 2) && *v23 == 26)
    {
      *((void *)a2 + 1) = v23 + 1;
LABEL_47:
      *((_DWORD *)this + 9) |= 4u;
      if (*((void *)this + 3) == v4) {
        operator new();
      }
      uint64_t result = wireless_diagnostics::google::protobuf::internal::WireFormatLite::ReadBytes();
      if (!result) {
        return result;
      }
      if (*((void *)a2 + 1) == *((void *)a2 + 2)
        && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 36);
  if (v6)
  {
    uint64_t v7 = *(void *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::RayTracingTileData::protobuf_AddDesc_CoreNavigationCLPRayTracingTileData_2eproto((CoreNavigation::CLP::LogEntry::RayTracingTileData *)this);
      uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 36);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        return this;
      }
      goto LABEL_11;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  uint64_t v8 = *(void *)(v5 + 16);
  if (!v8)
  {
    CoreNavigation::CLP::LogEntry::RayTracingTileData::protobuf_AddDesc_CoreNavigationCLPRayTracingTileData_2eproto((CoreNavigation::CLP::LogEntry::RayTracingTileData *)this);
    uint64_t v8 = *(void *)(CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::default_instance_ + 16);
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v8, a2, a4);
  if ((*(_DWORD *)(v5 + 36) & 4) != 0)
  {
LABEL_11:
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteBytes();
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::ByteSize(CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 36);
  if (!(_BYTE)v2)
  {
    uint64_t v3 = 0;
    goto LABEL_28;
  }
  if (*((unsigned char *)this + 36))
  {
    uint64_t v4 = (CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader *)*((void *)this + 1);
    if (!v4)
    {
      CoreNavigation::CLP::LogEntry::RayTracingTileData::protobuf_AddDesc_CoreNavigationCLPRayTracingTileData_2eproto(0);
      uint64_t v4 = *(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader **)(CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::default_instance_
                                                                                       + 8);
    }
    uint64_t v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::ByteSize(v4);
    int v6 = (int)v5;
    if (v5 >= 0x80) {
      int v7 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5);
    }
    else {
      int v7 = 1;
    }
    uint64_t v3 = (v6 + v7 + 1);
    int v2 = *((_DWORD *)this + 9);
    if ((v2 & 2) == 0) {
      goto LABEL_18;
    }
    goto LABEL_12;
  }
  uint64_t v3 = 0;
  if ((*((unsigned char *)this + 36) & 2) != 0)
  {
LABEL_12:
    uint64_t v8 = (CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *)*((void *)this + 2);
    if (!v8)
    {
      CoreNavigation::CLP::LogEntry::RayTracingTileData::protobuf_AddDesc_CoreNavigationCLPRayTracingTileData_2eproto(0);
      uint64_t v8 = *(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload **)(CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::default_instance_
                                                                                        + 16);
    }
    int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::ByteSize(v8);
    int v10 = (int)v9;
    if (v9 >= 0x80) {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9);
    }
    else {
      int v11 = 1;
    }
    uint64_t v3 = (v3 + v10 + v11 + 1);
    int v2 = *((_DWORD *)this + 9);
  }
LABEL_18:
  if ((v2 & 4) != 0)
  {
    uint64_t v12 = *((void *)this + 3);
    int v13 = *(unsigned __int8 *)(v12 + 23);
    char v14 = v13;
    uint64_t v15 = *(void *)(v12 + 8);
    if ((v13 & 0x80u) == 0) {
      unint64_t v16 = *(unsigned __int8 *)(v12 + 23);
    }
    else {
      unint64_t v16 = v15;
    }
    if (v16 >= 0x80)
    {
      int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback((wireless_diagnostics::google::protobuf::io::CodedOutputStream *)v16);
      int v13 = *(unsigned __int8 *)(v12 + 23);
      uint64_t v15 = *(void *)(v12 + 8);
      char v14 = *(unsigned char *)(v12 + 23);
    }
    else
    {
      int v17 = 1;
    }
    if (v14 < 0) {
      int v13 = v15;
    }
    uint64_t v3 = (v3 + v17 + v13 + 1);
  }
LABEL_28:
  *((_DWORD *)this + 8) = v3;
  return v3;
}

void CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::MergeFrom(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader *this, const CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v11);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 48);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 48))
    {
      *((_DWORD *)this + 12) |= 1u;
      int v6 = (CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp *)*((void *)this + 1);
      if (!v6) {
        operator new();
      }
      int v7 = (const CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp *)*((void *)a2 + 1);
      if (!v7)
      {
        CoreNavigation::CLP::LogEntry::RayTracingTileData::protobuf_AddDesc_CoreNavigationCLPRayTracingTileData_2eproto(this);
        int v7 = *(const CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp **)(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::default_instance_
                                                                                                  + 8);
      }
      double result = CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp::MergeFrom(v6, v7);
      int v5 = *((_DWORD *)a2 + 12);
      if ((v5 & 2) == 0)
      {
LABEL_6:
        if ((v5 & 4) == 0) {
          goto LABEL_7;
        }
        goto LABEL_18;
      }
    }
    else if ((*((unsigned char *)a2 + 48) & 2) == 0)
    {
      goto LABEL_6;
    }
    int v8 = *((_DWORD *)a2 + 4);
    *((_DWORD *)this + 12) |= 2u;
    *((_DWORD *)this + 4) = v8;
    int v5 = *((_DWORD *)a2 + 12);
    if ((v5 & 4) == 0)
    {
LABEL_7:
      if ((v5 & 8) == 0) {
        goto LABEL_8;
      }
      goto LABEL_19;
    }
LABEL_18:
    int v9 = *((_DWORD *)a2 + 5);
    *((_DWORD *)this + 12) |= 4u;
    *((_DWORD *)this + 5) = v9;
    int v5 = *((_DWORD *)a2 + 12);
    if ((v5 & 8) == 0)
    {
LABEL_8:
      if ((v5 & 0x10) == 0) {
        goto LABEL_9;
      }
      goto LABEL_20;
    }
LABEL_19:
    int v10 = *((_DWORD *)a2 + 10);
    *((_DWORD *)this + 12) |= 8u;
    *((_DWORD *)this + 10) = v10;
    int v5 = *((_DWORD *)a2 + 12);
    if ((v5 & 0x10) == 0)
    {
LABEL_9:
      if ((v5 & 0x20) == 0) {
        return result;
      }
      goto LABEL_10;
    }
LABEL_20:
    double result = *((double *)a2 + 3);
    *((_DWORD *)this + 12) |= 0x10u;
    *((double *)this + 3) = result;
    if ((*((_DWORD *)a2 + 12) & 0x20) == 0) {
      return result;
    }
LABEL_10:
    double result = *((double *)a2 + 4);
    *((_DWORD *)this + 12) |= 0x20u;
    *((double *)this + 4) = result;
  }
  return result;
}

void sub_18DF42830(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::MergeFrom(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *this, const CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v35);
  }
  int v4 = *((_DWORD *)a2 + 6);
  if (v4)
  {
    sub_18DF0C278((uint64_t)this + 16, *((_DWORD *)this + 6) + v4);
    memcpy((void *)(*((void *)this + 2) + 8 * *((int *)this + 6)), *((const void **)a2 + 2), 8 * *((int *)a2 + 6));
    *((_DWORD *)this + 6) += *((_DWORD *)a2 + 6);
  }
  int v5 = *((_DWORD *)a2 + 12);
  if (v5)
  {
    sub_18DF47D54((uint64_t)this + 40, *((_DWORD *)this + 12) + v5);
    memcpy((void *)(*((void *)this + 5) + 4 * *((int *)this + 12)), *((const void **)a2 + 5), 4 * *((int *)a2 + 12));
    *((_DWORD *)this + 12) += *((_DWORD *)a2 + 12);
  }
  int v6 = *((_DWORD *)a2 + 18);
  if (v6)
  {
    sub_18DF47D54((uint64_t)this + 64, *((_DWORD *)this + 18) + v6);
    memcpy((void *)(*((void *)this + 8) + 4 * *((int *)this + 18)), *((const void **)a2 + 8), 4 * *((int *)a2 + 18));
    *((_DWORD *)this + 18) += *((_DWORD *)a2 + 18);
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *)((char *)this + 88));
  if (*((int *)a2 + 24) >= 1)
  {
    uint64_t v7 = 0;
    do
    {
      int v8 = *(const CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData **)(*((void *)a2 + 11)
                                                                                                 + 8 * v7);
      int v9 = *((_DWORD *)this + 25);
      uint64_t v10 = *((int *)this + 24);
      if ((int)v10 >= v9)
      {
        if (v9 == *((_DWORD *)this + 26))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *)((char *)this + 88));
          int v9 = *((_DWORD *)this + 25);
        }
        *((_DWORD *)this + 25) = v9 + 1;
        operator new();
      }
      uint64_t v11 = *((void *)this + 11);
      *((_DWORD *)this + 24) = v10 + 1;
      CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData::MergeFrom(*(CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData **)(v11 + 8 * v10), v8);
      ++v7;
    }
    while (v7 < *((int *)a2 + 24));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *)((char *)this + 112));
  if (*((int *)a2 + 30) >= 1)
  {
    uint64_t v12 = 0;
    do
    {
      int v13 = *(const CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData **)(*((void *)a2 + 14)
                                                                                                  + 8 * v12);
      int v14 = *((_DWORD *)this + 31);
      uint64_t v15 = *((int *)this + 30);
      if ((int)v15 >= v14)
      {
        if (v14 == *((_DWORD *)this + 32))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *)((char *)this + 112));
          int v14 = *((_DWORD *)this + 31);
        }
        *((_DWORD *)this + 31) = v14 + 1;
        operator new();
      }
      uint64_t v16 = *((void *)this + 14);
      *((_DWORD *)this + 30) = v15 + 1;
      CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::MergeFrom(*(CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData **)(v16 + 8 * v15), v13);
      ++v12;
    }
    while (v12 < *((int *)a2 + 30));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *)((char *)this + 136));
  if (*((int *)a2 + 36) >= 1)
  {
    uint64_t v17 = 0;
    do
    {
      int v18 = *(const CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData **)(*((void *)a2 + 17)
                                                                                                  + 8 * v17);
      int v19 = *((_DWORD *)this + 37);
      uint64_t v20 = *((int *)this + 36);
      if ((int)v20 >= v19)
      {
        if (v19 == *((_DWORD *)this + 38))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *)((char *)this + 136));
          int v19 = *((_DWORD *)this + 37);
        }
        *((_DWORD *)this + 37) = v19 + 1;
        operator new();
      }
      uint64_t v21 = *((void *)this + 17);
      *((_DWORD *)this + 36) = v20 + 1;
      CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::MergeFrom(*(CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData **)(v21 + 8 * v20), v18);
      ++v17;
    }
    while (v17 < *((int *)a2 + 36));
  }
  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *)((char *)this + 160));
  if (*((int *)a2 + 42) >= 1)
  {
    uint64_t v22 = 0;
    do
    {
      int v23 = *(const CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData **)(*((void *)a2 + 20)
                                                                                                  + 8 * v22);
      int v24 = *((_DWORD *)this + 43);
      uint64_t v25 = *((int *)this + 42);
      if ((int)v25 >= v24)
      {
        if (v24 == *((_DWORD *)this + 44))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *)((char *)this + 160));
          int v24 = *((_DWORD *)this + 43);
        }
        *((_DWORD *)this + 43) = v24 + 1;
        operator new();
      }
      uint64_t v26 = *((void *)this + 20);
      *((_DWORD *)this + 42) = v25 + 1;
      CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::MergeFrom(*(CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData **)(v26 + 8 * v25), v23);
      ++v22;
    }
    while (v22 < *((int *)a2 + 42));
  }
  int v27 = (CoreNavigation::CLP::LogEntry::RayTracingTileData *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *)((char *)this + 184));
  if (*((int *)a2 + 48) >= 1)
  {
    uint64_t v28 = 0;
    do
    {
      int v29 = *(const CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData **)(*((void *)a2 + 23)
                                                                                                  + 8 * v28);
      int v30 = *((_DWORD *)this + 49);
      uint64_t v31 = *((int *)this + 48);
      if ((int)v31 >= v30)
      {
        if (v30 == *((_DWORD *)this + 50))
        {
          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve((CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *)((char *)this + 184));
          int v30 = *((_DWORD *)this + 49);
        }
        *((_DWORD *)this + 49) = v30 + 1;
        operator new();
      }
      uint64_t v32 = *((void *)this + 23);
      *((_DWORD *)this + 48) = v31 + 1;
      CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::MergeFrom(*(CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData **)(v32 + 8 * v31), v29);
      ++v28;
    }
    while (v28 < *((int *)a2 + 48));
  }
  if (*((unsigned char *)a2 + 212))
  {
    *((_DWORD *)this + 53) |= 1u;
    int v33 = (CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData *)*((void *)this + 1);
    if (!v33) {
      operator new();
    }
    int v34 = (const CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData *)*((void *)a2 + 1);
    if (!v34)
    {
      CoreNavigation::CLP::LogEntry::RayTracingTileData::protobuf_AddDesc_CoreNavigationCLPRayTracingTileData_2eproto(v27);
      int v34 = *(const CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData **)(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::default_instance_ + 8);
    }
    CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData::MergeFrom(v33, v34);
  }
}

void sub_18DF42E90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::CopyFrom(CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry *this, const CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::IsInitialized(CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry *this)
{
  return 1;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::Swap(uint64_t this, CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry *a2)
{
  if (a2 != (CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry *)this)
  {
    uint64_t v2 = *(void *)(this + 8);
    *(void *)(this + 8) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    uint64_t v3 = *(void *)(this + 16);
    *(void *)(this + 16) = *((void *)a2 + 2);
    *((void *)a2 + 2) = v3;
    uint64_t v4 = *(void *)(this + 24);
    *(void *)(this + 24) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 36);
    *(_DWORD *)(this + 36) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v4;
    LODWORD(v4) = *(_DWORD *)(this + 32);
    *(_DWORD *)(this + 32) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v4;
  }
  return this;
}

void *CoreNavigation::CLP::LogEntry::RayTracingTileData::LogEntry::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.RayTracingTileData.LogEntry");
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 16) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp *CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp::RayTracingTileTimestamp(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp *this, const CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp *a2)
{
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *(void *)this = &unk_1EDD0FE30;
  CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp::MergeFrom(this, a2);
  return this;
}

void sub_18DF42FFC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

double CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp::MergeFrom(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp *this, const CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v5);
  }
  if (*((unsigned char *)a2 + 20))
  {
    double result = *((double *)a2 + 1);
    *((_DWORD *)this + 5) |= 1u;
    *((double *)this + 1) = result;
  }
  return result;
}

void sub_18DF4309C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp::~RayTracingTileTimestamp(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp *this)
{
  *(void *)this = &unk_1EDD0FE30;
  CoreNavigation::CLP::LogEntry::RayTracingTileData::protobuf_AddDesc_CoreNavigationCLPRayTracingTileData_2eproto(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp::~RayTracingTileTimestamp(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp::default_instance(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp *this)
{
  return CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 16) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp::New(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 20)) {
    *(void *)(this + 8) = 0;
  }
  *(_DWORD *)(this + 20) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  do
  {
    while (1)
    {
      uint64_t v4 = (char *)*((void *)a2 + 1);
      if ((unint64_t)v4 >= *((void *)a2 + 2) || *v4 < 0)
      {
        unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
        *((_DWORD *)a2 + 8) = TagFallback;
      }
      else
      {
        unint64_t TagFallback = *v4;
        *((_DWORD *)a2 + 8) = TagFallback;
        *((void *)a2 + 1) = v4 + 1;
      }
      if (TagFallback != 9) {
        break;
      }
      unint64_t v7 = 0;
      if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, &v7) & 1) == 0) {
        return 0;
      }
      *((void *)this + 1) = v7;
      *((_DWORD *)this + 5) |= 1u;
      if (*((void *)a2 + 1) == *((void *)a2 + 2)
        && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
      {
        *((_DWORD *)a2 + 8) = 0;
        uint64_t result = 1;
        *((unsigned char *)a2 + 36) = 1;
        return result;
      }
    }
    if (!TagFallback || (TagFallback & 7) == 4) {
      return 1;
    }
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0);
  return 0;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3)
{
  if (*(unsigned char *)(this + 20)) {
    return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, (uint64_t)a2, *(double *)(this + 8), a3);
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp::ByteSize(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp *this)
{
  uint64_t v1 = ((int)(*((_DWORD *)this + 5) << 31) >> 31) & 9;
  *((_DWORD *)this + 4) = v1;
  return v1;
}

double CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp::CopyFrom(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp *this, const CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp::IsInitialized(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp::Swap(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp *this, CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp *a2)
{
  if (a2 != this)
  {
    double result = *((double *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((double *)a2 + 1) = result;
    int v3 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v3;
    int v4 = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v4;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.RayTracingTileData.RayTracingTileTimestamp");
}

double CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::SharedCtor(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader *this)
{
  double result = 0.0;
  *(_OWORD *)((char *)this + 36) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  return result;
}

CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader *CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::RayTracingTileHeader(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader *this, const CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader *a2)
{
  *(void *)this = &unk_1EDD0FD40;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 36) = 0u;
  CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::MergeFrom(this, a2);
  return this;
}

void sub_18DF434FC(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::~RayTracingTileHeader(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader *this)
{
  *(void *)this = &unk_1EDD0FD40;
  CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::SharedDtor(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::~RayTracingTileHeader(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::SharedDtor(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader *this)
{
  CoreNavigation::CLP::LogEntry::RayTracingTileData::protobuf_AddDesc_CoreNavigationCLPRayTracingTileData_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader *)CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2)
    {
      int v3 = *(void (**)(void))(*(void *)v2 + 8);
      v3();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::default_instance(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader *this)
{
  return CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 44) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::New(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (unsigned int *)((char *)this + 16);
  int v5 = (unsigned int *)((char *)this + 20);
  int v6 = (unsigned int *)((char *)this + 40);
  while (2)
  {
    unint64_t v7 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v7 >= *((void *)a2 + 2) || *v7 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v7;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v7 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v9 = TagFallback & 7;
        if (v9 != 2) {
          goto LABEL_24;
        }
        *((_DWORD *)this + 12) |= 1u;
        uint64_t v10 = (CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp *)*((void *)this + 1);
        if (!v10) {
          operator new();
        }
        v27[0] = 0;
        uint64_t v11 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v11 >= *((void *)a2 + 2) || *v11 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v27))return 0; {
        }
          }
        else
        {
          v27[0] = *v11;
          *((void *)a2 + 1) = v11 + 1;
        }
        int v16 = *((_DWORD *)a2 + 14);
        int v17 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v16 + 1;
        if (v16 >= v17) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileTimestamp::MergePartialFromCodedStream(v10, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v18 = *((_DWORD *)a2 + 14);
        BOOL v19 = __OFSUB__(v18, 1);
        int v20 = v18 - 1;
        if (v20 < 0 == v19) {
          *((_DWORD *)a2 + 14) = v20;
        }
        uint64_t v21 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v12 = *((void *)a2 + 2);
        if ((unint64_t)v21 >= v12 || *v21 != 16) {
          continue;
        }
        int v13 = v21 + 1;
        *((void *)a2 + 1) = v13;
        goto LABEL_36;
      case 2u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        int v13 = (char *)*((void *)a2 + 1);
        unint64_t v12 = *((void *)a2 + 2);
LABEL_36:
        if ((unint64_t)v13 >= v12 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!result) {
            return result;
          }
          uint64_t v22 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v12 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v4 = *v13;
          uint64_t v22 = v13 + 1;
          *((void *)a2 + 1) = v22;
        }
        *((_DWORD *)this + 12) |= 2u;
        if ((unint64_t)v22 >= v12 || *v22 != 24) {
          continue;
        }
        int v14 = v22 + 1;
        *((void *)a2 + 1) = v14;
LABEL_44:
        if ((unint64_t)v14 >= v12 || *v14 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!result) {
            return result;
          }
          int v24 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v12 = *((void *)a2 + 2);
        }
        else
        {
          *int v5 = *v14;
          int v24 = v14 + 1;
          *((void *)a2 + 1) = v24;
        }
        *((_DWORD *)this + 12) |= 4u;
        if ((unint64_t)v24 >= v12 || *v24 != 32) {
          continue;
        }
        uint64_t v15 = v24 + 1;
        *((void *)a2 + 1) = v15;
LABEL_52:
        if ((unint64_t)v15 >= v12 || *v15 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
          if (!result) {
            return result;
          }
          uint64_t v25 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v12 = *((void *)a2 + 2);
        }
        else
        {
          *int v6 = *v15;
          uint64_t v25 = v15 + 1;
          *((void *)a2 + 1) = v25;
        }
        *((_DWORD *)this + 12) |= 8u;
        if ((unint64_t)v25 >= v12 || *v25 != 41) {
          continue;
        }
        *((void *)a2 + 1) = v25 + 1;
LABEL_60:
        *(void *)int v27 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v27) & 1) == 0)return 0; {
        *((void *)this + 3) = *(void *)v27;
        }
        *((_DWORD *)this + 12) |= 0x10u;
        uint64_t v26 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v26 >= *((void *)a2 + 2) || *v26 != 49) {
          continue;
        }
        *((void *)a2 + 1) = v26 + 1;
LABEL_64:
        *(void *)int v27 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, (unint64_t *)v27))
        {
          *((void *)this + 4) = *(void *)v27;
          *((_DWORD *)this + 12) |= 0x20u;
          if (*((void *)a2 + 1) == *((void *)a2 + 2)
            && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
          {
            *((_DWORD *)a2 + 8) = 0;
            uint64_t result = 1;
            *((unsigned char *)a2 + 36) = 1;
            return result;
          }
          continue;
        }
        return 0;
      case 3u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        int v14 = (char *)*((void *)a2 + 1);
        unint64_t v12 = *((void *)a2 + 2);
        goto LABEL_44;
      case 4u:
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_24;
        }
        uint64_t v15 = (char *)*((void *)a2 + 1);
        unint64_t v12 = *((void *)a2 + 2);
        goto LABEL_52;
      case 5u:
        int v9 = TagFallback & 7;
        if (v9 == 1) {
          goto LABEL_60;
        }
        goto LABEL_24;
      case 6u:
        int v9 = TagFallback & 7;
        if (v9 != 1) {
          goto LABEL_24;
        }
        goto LABEL_64;
      default:
        int v9 = TagFallback & 7;
LABEL_24:
        if (v9 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 48);
  if (v6)
  {
    uint64_t v7 = *(void *)(this + 8);
    if (!v7)
    {
      CoreNavigation::CLP::LogEntry::RayTracingTileData::protobuf_AddDesc_CoreNavigationCLPRayTracingTileData_2eproto((CoreNavigation::CLP::LogEntry::RayTracingTileData *)this);
      uint64_t v7 = *(void *)(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v7, a2, a4);
    int v6 = *(_DWORD *)(v5 + 48);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_12;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 16), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
LABEL_12:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, *(unsigned int *)(v5 + 20), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
LABEL_14:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(double *)(v5 + 24), a3);
    if ((*(_DWORD *)(v5 + 48) & 0x20) == 0) {
      return this;
    }
    goto LABEL_15;
  }
LABEL_13:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 48);
  if ((v6 & 0x10) != 0) {
    goto LABEL_14;
  }
LABEL_6:
  if ((v6 & 0x20) == 0) {
    return this;
  }
LABEL_15:
  double v8 = *(double *)(v5 + 32);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteDouble((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, v8, a3);
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::ByteSize(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader *this)
{
  LOBYTE(v2) = *((unsigned char *)this + 48);
  if (!(_BYTE)v2)
  {
    uint64_t result = 0;
    goto LABEL_29;
  }
  if ((*((unsigned char *)this + 48) & 1) == 0)
  {
    int v3 = 0;
    if ((*((unsigned char *)this + 48) & 2) == 0) {
      goto LABEL_13;
    }
    goto LABEL_9;
  }
  uint64_t v5 = *((void *)this + 1);
  if (!v5)
  {
    CoreNavigation::CLP::LogEntry::RayTracingTileData::protobuf_AddDesc_CoreNavigationCLPRayTracingTileData_2eproto(this);
    uint64_t v5 = *(void *)(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::default_instance_ + 8);
  }
  int v6 = ((int)(*(_DWORD *)(v5 + 20) << 31) >> 31) & 9;
  *(_DWORD *)(v5 + 16) = v6;
  int v3 = v6 | 2;
  int v2 = *((_DWORD *)this + 12);
  if ((v2 & 2) != 0)
  {
LABEL_9:
    uint64_t v7 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
    if (v7 >= 0x80)
    {
      int v8 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v7) + 1;
      int v2 = *((_DWORD *)this + 12);
    }
    else
    {
      int v8 = 2;
    }
    v3 += v8;
  }
LABEL_13:
  if ((v2 & 4) == 0)
  {
    if ((v2 & 8) == 0) {
      goto LABEL_24;
    }
    goto LABEL_20;
  }
  int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 5);
  if (v9 >= 0x80)
  {
    int v10 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9) + 1;
    int v2 = *((_DWORD *)this + 12);
  }
  else
  {
    int v10 = 2;
  }
  v3 += v10;
  if ((v2 & 8) != 0)
  {
LABEL_20:
    uint64_t v11 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
    if (v11 >= 0x80)
    {
      int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v11) + 1;
      int v2 = *((_DWORD *)this + 12);
    }
    else
    {
      int v12 = 2;
    }
    v3 += v12;
  }
LABEL_24:
  unsigned int v13 = v3 + 9;
  if ((v2 & 0x10) == 0) {
    unsigned int v13 = v3;
  }
  if ((v2 & 0x20) != 0) {
    uint64_t result = v13 + 9;
  }
  else {
    uint64_t result = v13;
  }
LABEL_29:
  *((_DWORD *)this + 11) = result;
  return result;
}

double CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  return CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::MergeFrom(this, lpsrc);
}

double CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::CopyFrom(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader *this, const CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader *))(*(void *)this + 32))(this);
    return CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::MergeFrom(this, a2);
  }
  return result;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::IsInitialized(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::Swap(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader *this, CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    LODWORD(v2) = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    LODWORD(v2) = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v2;
    LODWORD(v2) = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v2;
    uint64_t v3 = *((void *)this + 3);
    *((void *)this + 3) = *((void *)a2 + 3);
    *((void *)a2 + 3) = v3;
    double result = *((double *)this + 4);
    *((void *)this + 4) = *((void *)a2 + 4);
    *((double *)a2 + 4) = result;
    LODWORD(v2) = *((_DWORD *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v2;
    LODWORD(v2) = *((_DWORD *)this + 11);
    *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v2;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTileHeader::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.RayTracingTileData.RayTracingTileHeader");
}

double CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData::SharedCtor(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData *this)
{
  double result = 0.0;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 8) = 0u;
  *((_DWORD *)this + 10) = 1;
  *((_DWORD *)this + 17) = 0;
  *((_DWORD *)this + 18) = 0;
  *(void *)((char *)this + 44) = 0;
  *(void *)((char *)this + 60) = 0;
  *(void *)((char *)this + 52) = 0;
  return result;
}

CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData *CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData::RayTracingTilePayloadMetaData(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData *this, const CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData *a2)
{
  *(void *)this = &unk_1EDD0FF98;
  *(_OWORD *)((char *)this + 8) = 0u;
  *(_OWORD *)((char *)this + 24) = 0u;
  *((_DWORD *)this + 10) = 1;
  *((_DWORD *)this + 17) = 0;
  *((_DWORD *)this + 18) = 0;
  *(void *)((char *)this + 44) = 0;
  *(void *)((char *)this + 60) = 0;
  *(void *)((char *)this + 52) = 0;
  CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData::MergeFrom(this, a2);
  return this;
}

void sub_18DF43F54(_Unwind_Exception *a1)
{
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData::MergeFrom(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData *this, const CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v19);
  }
  int v4 = *((_DWORD *)a2 + 18);
  if (!(_BYTE)v4) {
    goto LABEL_13;
  }
  if (v4)
  {
    uint64_t v7 = *((void *)a2 + 1);
    *((_DWORD *)this + 18) |= 1u;
    *((void *)this + 1) = v7;
    int v4 = *((_DWORD *)a2 + 18);
    if ((v4 & 2) == 0)
    {
LABEL_6:
      if ((v4 & 4) == 0) {
        goto LABEL_7;
      }
      goto LABEL_24;
    }
  }
  else if ((v4 & 2) == 0)
  {
    goto LABEL_6;
  }
  int v8 = *((_DWORD *)a2 + 4);
  *((_DWORD *)this + 18) |= 2u;
  *((_DWORD *)this + 4) = v8;
  int v4 = *((_DWORD *)a2 + 18);
  if ((v4 & 4) == 0)
  {
LABEL_7:
    if ((v4 & 8) == 0) {
      goto LABEL_8;
    }
    goto LABEL_25;
  }
LABEL_24:
  int v9 = *((_DWORD *)a2 + 5);
  *((_DWORD *)this + 18) |= 4u;
  *((_DWORD *)this + 5) = v9;
  int v4 = *((_DWORD *)a2 + 18);
  if ((v4 & 8) == 0)
  {
LABEL_8:
    if ((v4 & 0x10) == 0) {
      goto LABEL_9;
    }
    goto LABEL_26;
  }
LABEL_25:
  int v10 = *((_DWORD *)a2 + 6);
  *((_DWORD *)this + 18) |= 8u;
  *((_DWORD *)this + 6) = v10;
  int v4 = *((_DWORD *)a2 + 18);
  if ((v4 & 0x10) == 0)
  {
LABEL_9:
    if ((v4 & 0x20) == 0) {
      goto LABEL_10;
    }
LABEL_27:
    int v12 = *((_DWORD *)a2 + 8);
    *((_DWORD *)this + 18) |= 0x20u;
    *((_DWORD *)this + 8) = v12;
    int v4 = *((_DWORD *)a2 + 18);
    if ((v4 & 0x40) == 0)
    {
LABEL_11:
      if ((v4 & 0x80) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    goto LABEL_28;
  }
LABEL_26:
  int v11 = *((_DWORD *)a2 + 7);
  *((_DWORD *)this + 18) |= 0x10u;
  *((_DWORD *)this + 7) = v11;
  int v4 = *((_DWORD *)a2 + 18);
  if ((v4 & 0x20) != 0) {
    goto LABEL_27;
  }
LABEL_10:
  if ((v4 & 0x40) == 0) {
    goto LABEL_11;
  }
LABEL_28:
  int v13 = *((_DWORD *)a2 + 9);
  *((_DWORD *)this + 18) |= 0x40u;
  *((_DWORD *)this + 9) = v13;
  int v4 = *((_DWORD *)a2 + 18);
  if ((v4 & 0x80) != 0)
  {
LABEL_12:
    int v5 = *((_DWORD *)a2 + 10);
    *((_DWORD *)this + 18) |= 0x80u;
    *((_DWORD *)this + 10) = v5;
    int v4 = *((_DWORD *)a2 + 18);
  }
LABEL_13:
  if ((v4 & 0xFF00) == 0) {
    return;
  }
  if ((v4 & 0x100) != 0)
  {
    int v14 = *((_DWORD *)a2 + 11);
    *((_DWORD *)this + 18) |= 0x100u;
    *((_DWORD *)this + 11) = v14;
    int v4 = *((_DWORD *)a2 + 18);
    if ((v4 & 0x200) == 0)
    {
LABEL_16:
      if ((v4 & 0x400) == 0) {
        goto LABEL_17;
      }
      goto LABEL_32;
    }
  }
  else if ((v4 & 0x200) == 0)
  {
    goto LABEL_16;
  }
  int v15 = *((_DWORD *)a2 + 12);
  *((_DWORD *)this + 18) |= 0x200u;
  *((_DWORD *)this + 12) = v15;
  int v4 = *((_DWORD *)a2 + 18);
  if ((v4 & 0x400) == 0)
  {
LABEL_17:
    if ((v4 & 0x800) == 0) {
      goto LABEL_18;
    }
    goto LABEL_33;
  }
LABEL_32:
  int v16 = *((_DWORD *)a2 + 13);
  *((_DWORD *)this + 18) |= 0x400u;
  *((_DWORD *)this + 13) = v16;
  int v4 = *((_DWORD *)a2 + 18);
  if ((v4 & 0x800) == 0)
  {
LABEL_18:
    if ((v4 & 0x1000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_34;
  }
LABEL_33:
  int v17 = *((_DWORD *)a2 + 14);
  *((_DWORD *)this + 18) |= 0x800u;
  *((_DWORD *)this + 14) = v17;
  int v4 = *((_DWORD *)a2 + 18);
  if ((v4 & 0x1000) == 0)
  {
LABEL_19:
    if ((v4 & 0x2000) == 0) {
      return;
    }
    goto LABEL_20;
  }
LABEL_34:
  int v18 = *((_DWORD *)a2 + 15);
  *((_DWORD *)this + 18) |= 0x1000u;
  *((_DWORD *)this + 15) = v18;
  if ((*((_DWORD *)a2 + 18) & 0x2000) == 0) {
    return;
  }
LABEL_20:
  int v6 = *((_DWORD *)a2 + 16);
  *((_DWORD *)this + 18) |= 0x2000u;
  *((_DWORD *)this + 16) = v6;
}

void sub_18DF441A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData::~RayTracingTilePayloadMetaData(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData *this)
{
  *(void *)this = &unk_1EDD0FF98;
  CoreNavigation::CLP::LogEntry::RayTracingTileData::protobuf_AddDesc_CoreNavigationCLPRayTracingTileData_2eproto(this);

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData::~RayTracingTilePayloadMetaData(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData::default_instance(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData *this)
{
  return CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 68) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData::New(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData::Clear(uint64_t this)
{
  int v1 = *(_DWORD *)(this + 72);
  if ((_BYTE)v1)
  {
    *(_OWORD *)(this + 24) = 0u;
    *(_OWORD *)(this + 8) = 0u;
    *(_DWORD *)(this + 40) = 1;
  }
  if ((v1 & 0xFF00) != 0)
  {
    *(void *)(this + 52) = 0;
    *(void *)(this + 44) = 0;
    *(void *)(this + 60) = 0;
  }
  *(_DWORD *)(this + 72) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v40 = (unint64_t *)((char *)this + 8);
  int v4 = (unsigned int *)((char *)this + 16);
  int v5 = (unsigned int *)((char *)this + 40);
  int v6 = (unsigned int *)((char *)this + 44);
  uint64_t v7 = (unsigned int *)((char *)this + 48);
  int v8 = (unsigned int *)((char *)this + 52);
  int v9 = (unsigned int *)((char *)this + 56);
  int v10 = (unsigned int *)((char *)this + 60);
  int v11 = (unsigned int *)((char *)this + 64);
  while (2)
  {
    int v12 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v12 >= *((void *)a2 + 2) || *v12 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v12;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v12 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v14 = TagFallback & 7;
        if (v14 != 1) {
          goto LABEL_42;
        }
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian64Fallback(a2, v40);
        if (result)
        {
          *((_DWORD *)this + 18) |= 1u;
          int v17 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v16 = *((void *)a2 + 2);
          if ((unint64_t)v17 < v16 && *v17 == 16)
          {
            int v18 = v17 + 1;
            *((void *)a2 + 1) = v18;
            goto LABEL_16;
          }
          continue;
        }
        return result;
      case 2u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_42;
        }
        int v18 = (char *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
LABEL_16:
        if ((unint64_t)v18 >= v16 || *v18 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v4);
          if (!result) {
            return result;
          }
          BOOL v19 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v16 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int *v4 = *v18;
          BOOL v19 = v18 + 1;
          *((void *)a2 + 1) = v19;
        }
        *((_DWORD *)this + 18) |= 2u;
        if ((unint64_t)v19 < v16 && *v19 == 29)
        {
          *((void *)a2 + 1) = v19 + 1;
          goto LABEL_51;
        }
        continue;
      case 3u:
        int v14 = TagFallback & 7;
        if (v14 != 5) {
          goto LABEL_42;
        }
LABEL_51:
        unsigned int v41 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v41) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 5) = v41;
        *((_DWORD *)this + 18) |= 4u;
        uint64_t v28 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v28 >= *((void *)a2 + 2) || *v28 != 37) {
          continue;
        }
        *((void *)a2 + 1) = v28 + 1;
LABEL_55:
        unsigned int v41 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v41) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 6) = v41;
        *((_DWORD *)this + 18) |= 8u;
        int v29 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v29 >= *((void *)a2 + 2) || *v29 != 45) {
          continue;
        }
        *((void *)a2 + 1) = v29 + 1;
LABEL_59:
        unsigned int v41 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v41) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 7) = v41;
        *((_DWORD *)this + 18) |= 0x10u;
        int v30 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v30 >= *((void *)a2 + 2) || *v30 != 53) {
          continue;
        }
        *((void *)a2 + 1) = v30 + 1;
LABEL_63:
        unsigned int v41 = 0;
        if ((wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v41) & 1) == 0) {
          return 0;
        }
        *((_DWORD *)this + 8) = v41;
        *((_DWORD *)this + 18) |= 0x20u;
        uint64_t v31 = (unsigned char *)*((void *)a2 + 1);
        if ((unint64_t)v31 >= *((void *)a2 + 2) || *v31 != 61) {
          continue;
        }
        *((void *)a2 + 1) = v31 + 1;
LABEL_67:
        unsigned int v41 = 0;
        if (wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadLittleEndian32Fallback(a2, &v41))
        {
          *((_DWORD *)this + 9) = v41;
          *((_DWORD *)this + 18) |= 0x40u;
          uint64_t v32 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v20 = *((void *)a2 + 2);
          if ((unint64_t)v32 < v20 && *v32 == 64)
          {
            uint64_t v21 = v32 + 1;
            *((void *)a2 + 1) = v21;
LABEL_71:
            if ((unint64_t)v21 >= v20 || *v21 < 0)
            {
              uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
              if (!result) {
                return result;
              }
              int v33 = (unsigned char *)*((void *)a2 + 1);
              unint64_t v20 = *((void *)a2 + 2);
            }
            else
            {
              *int v5 = *v21;
              int v33 = v21 + 1;
              *((void *)a2 + 1) = v33;
            }
            *((_DWORD *)this + 18) |= 0x80u;
            if ((unint64_t)v33 < v20 && *v33 == 72)
            {
              uint64_t v22 = v33 + 1;
              *((void *)a2 + 1) = v22;
LABEL_79:
              if ((unint64_t)v22 >= v20 || *v22 < 0)
              {
                uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
                if (!result) {
                  return result;
                }
                int v34 = (unsigned char *)*((void *)a2 + 1);
                unint64_t v20 = *((void *)a2 + 2);
              }
              else
              {
                *int v6 = *v22;
                int v34 = v22 + 1;
                *((void *)a2 + 1) = v34;
              }
              *((_DWORD *)this + 18) |= 0x100u;
              if ((unint64_t)v34 < v20 && *v34 == 80)
              {
                int v23 = v34 + 1;
                *((void *)a2 + 1) = v23;
LABEL_87:
                if ((unint64_t)v23 >= v20 || *v23 < 0)
                {
                  uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v7);
                  if (!result) {
                    return result;
                  }
                  unsigned int v35 = (unsigned char *)*((void *)a2 + 1);
                  unint64_t v20 = *((void *)a2 + 2);
                }
                else
                {
                  unsigned int *v7 = *v23;
                  unsigned int v35 = v23 + 1;
                  *((void *)a2 + 1) = v35;
                }
                *((_DWORD *)this + 18) |= 0x200u;
                if ((unint64_t)v35 < v20 && *v35 == 88)
                {
                  int v24 = v35 + 1;
                  *((void *)a2 + 1) = v24;
LABEL_95:
                  if ((unint64_t)v24 >= v20 || *v24 < 0)
                  {
                    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v8);
                    if (!result) {
                      return result;
                    }
                    int v36 = (unsigned char *)*((void *)a2 + 1);
                    unint64_t v20 = *((void *)a2 + 2);
                  }
                  else
                  {
                    *int v8 = *v24;
                    int v36 = v24 + 1;
                    *((void *)a2 + 1) = v36;
                  }
                  *((_DWORD *)this + 18) |= 0x400u;
                  if ((unint64_t)v36 < v20 && *v36 == 96)
                  {
                    uint64_t v25 = v36 + 1;
                    *((void *)a2 + 1) = v25;
LABEL_103:
                    if ((unint64_t)v25 >= v20 || *v25 < 0)
                    {
                      uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v9);
                      if (!result) {
                        return result;
                      }
                      int v37 = (unsigned char *)*((void *)a2 + 1);
                      unint64_t v20 = *((void *)a2 + 2);
                    }
                    else
                    {
                      *int v9 = *v25;
                      int v37 = v25 + 1;
                      *((void *)a2 + 1) = v37;
                    }
                    *((_DWORD *)this + 18) |= 0x800u;
                    if ((unint64_t)v37 < v20 && *v37 == 104)
                    {
                      uint64_t v26 = v37 + 1;
                      *((void *)a2 + 1) = v26;
LABEL_111:
                      if ((unint64_t)v26 >= v20 || *v26 < 0)
                      {
                        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v10);
                        if (!result) {
                          return result;
                        }
                        uint64_t v38 = (unsigned char *)*((void *)a2 + 1);
                        unint64_t v20 = *((void *)a2 + 2);
                      }
                      else
                      {
                        *int v10 = *v26;
                        uint64_t v38 = v26 + 1;
                        *((void *)a2 + 1) = v38;
                      }
                      *((_DWORD *)this + 18) |= 0x1000u;
                      if ((unint64_t)v38 < v20 && *v38 == 112)
                      {
                        int v27 = v38 + 1;
                        *((void *)a2 + 1) = v27;
LABEL_119:
                        if ((unint64_t)v27 >= v20 || *v27 < 0)
                        {
                          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v11);
                          if (!result) {
                            return result;
                          }
                          int v39 = (unsigned __int8 *)*((void *)a2 + 1);
                          unint64_t v20 = *((void *)a2 + 2);
                        }
                        else
                        {
                          *int v11 = *v27;
                          int v39 = (unsigned __int8 *)(v27 + 1);
                          *((void *)a2 + 1) = v39;
                        }
                        *((_DWORD *)this + 18) |= 0x2000u;
                        if (v39 == (unsigned __int8 *)v20
                          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                        {
                          *((_DWORD *)a2 + 8) = 0;
                          uint64_t result = 1;
                          *((unsigned char *)a2 + 36) = 1;
                          return result;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          continue;
        }
        return 0;
      case 4u:
        int v14 = TagFallback & 7;
        if (v14 == 5) {
          goto LABEL_55;
        }
        goto LABEL_42;
      case 5u:
        int v14 = TagFallback & 7;
        if (v14 == 5) {
          goto LABEL_59;
        }
        goto LABEL_42;
      case 6u:
        int v14 = TagFallback & 7;
        if (v14 == 5) {
          goto LABEL_63;
        }
        goto LABEL_42;
      case 7u:
        int v14 = TagFallback & 7;
        if (v14 == 5) {
          goto LABEL_67;
        }
        goto LABEL_42;
      case 8u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_42;
        }
        uint64_t v21 = (char *)*((void *)a2 + 1);
        unint64_t v20 = *((void *)a2 + 2);
        goto LABEL_71;
      case 9u:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_42;
        }
        uint64_t v22 = (char *)*((void *)a2 + 1);
        unint64_t v20 = *((void *)a2 + 2);
        goto LABEL_79;
      case 0xAu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_42;
        }
        int v23 = (char *)*((void *)a2 + 1);
        unint64_t v20 = *((void *)a2 + 2);
        goto LABEL_87;
      case 0xBu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_42;
        }
        int v24 = (char *)*((void *)a2 + 1);
        unint64_t v20 = *((void *)a2 + 2);
        goto LABEL_95;
      case 0xCu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_42;
        }
        uint64_t v25 = (char *)*((void *)a2 + 1);
        unint64_t v20 = *((void *)a2 + 2);
        goto LABEL_103;
      case 0xDu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_42;
        }
        uint64_t v26 = (char *)*((void *)a2 + 1);
        unint64_t v20 = *((void *)a2 + 2);
        goto LABEL_111;
      case 0xEu:
        int v14 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_42;
        }
        int v27 = (char *)*((void *)a2 + 1);
        unint64_t v20 = *((void *)a2 + 2);
        goto LABEL_119;
      default:
        int v14 = TagFallback & 7;
LABEL_42:
        if (v14 == 4) {
          return 1;
        }
        if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
        continue;
        }
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  int v6 = *(_DWORD *)(this + 72);
  if (v6)
  {
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFixed64((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, *(void *)(this + 8), (uint64_t)a2, a4);
    int v6 = *(_DWORD *)(v5 + 72);
    if ((v6 & 2) == 0)
    {
LABEL_3:
      if ((v6 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_18;
    }
  }
  else if ((v6 & 2) == 0)
  {
    goto LABEL_3;
  }
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, *(unsigned int *)(v5 + 16), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 4) == 0)
  {
LABEL_4:
    if ((v6 & 8) == 0) {
      goto LABEL_5;
    }
    goto LABEL_19;
  }
LABEL_18:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)3, (uint64_t)a2, *(float *)(v5 + 20), a3);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 8) == 0)
  {
LABEL_5:
    if ((v6 & 0x10) == 0) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
LABEL_19:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)4, (uint64_t)a2, *(float *)(v5 + 24), a3);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x10) == 0)
  {
LABEL_6:
    if ((v6 & 0x20) == 0) {
      goto LABEL_7;
    }
    goto LABEL_21;
  }
LABEL_20:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, (uint64_t)a2, *(float *)(v5 + 28), a3);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x20) == 0)
  {
LABEL_7:
    if ((v6 & 0x40) == 0) {
      goto LABEL_8;
    }
    goto LABEL_22;
  }
LABEL_21:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, (uint64_t)a2, *(float *)(v5 + 32), a3);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x40) == 0)
  {
LABEL_8:
    if ((v6 & 0x80) == 0) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }
LABEL_22:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteFloat((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, (uint64_t)a2, *(float *)(v5 + 36), a3);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x80) == 0)
  {
LABEL_9:
    if ((v6 & 0x100) == 0) {
      goto LABEL_10;
    }
    goto LABEL_24;
  }
LABEL_23:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(unsigned int *)(v5 + 40), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x100) == 0)
  {
LABEL_10:
    if ((v6 & 0x200) == 0) {
      goto LABEL_11;
    }
    goto LABEL_25;
  }
LABEL_24:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(unsigned int *)(v5 + 44), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x200) == 0)
  {
LABEL_11:
    if ((v6 & 0x400) == 0) {
      goto LABEL_12;
    }
    goto LABEL_26;
  }
LABEL_25:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xA, *(unsigned int *)(v5 + 48), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x400) == 0)
  {
LABEL_12:
    if ((v6 & 0x800) == 0) {
      goto LABEL_13;
    }
    goto LABEL_27;
  }
LABEL_26:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xB, *(unsigned int *)(v5 + 52), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x800) == 0)
  {
LABEL_13:
    if ((v6 & 0x1000) == 0) {
      goto LABEL_14;
    }
LABEL_28:
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xD, *(unsigned int *)(v5 + 60), (uint64_t)a2, a4);
    if ((*(_DWORD *)(v5 + 72) & 0x2000) == 0) {
      return this;
    }
    goto LABEL_29;
  }
LABEL_27:
  this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xC, *(unsigned int *)(v5 + 56), (uint64_t)a2, a4);
  int v6 = *(_DWORD *)(v5 + 72);
  if ((v6 & 0x1000) != 0) {
    goto LABEL_28;
  }
LABEL_14:
  if ((v6 & 0x2000) == 0) {
    return this;
  }
LABEL_29:
  uint64_t v7 = *(unsigned int *)(v5 + 64);

  return wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)0xE, v7, (uint64_t)a2, a4);
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData::ByteSize(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData *this)
{
  int v2 = *((_DWORD *)this + 18);
  if ((_BYTE)v2)
  {
    int v3 = (v2 << 31 >> 31) & 9;
    if ((v2 & 2) != 0)
    {
      int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 4);
      if (v4 >= 0x80)
      {
        int v5 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
        int v2 = *((_DWORD *)this + 18);
      }
      else
      {
        int v5 = 2;
      }
      v3 += v5;
    }
    unsigned int v7 = v3 + 5;
    if ((v2 & 4) == 0) {
      unsigned int v7 = v3;
    }
    if ((v2 & 8) != 0) {
      v7 += 5;
    }
    if ((v2 & 0x10) != 0) {
      v7 += 5;
    }
    if ((v2 & 0x20) != 0) {
      v7 += 5;
    }
    if ((v2 & 0x40) != 0) {
      uint64_t v6 = v7 + 5;
    }
    else {
      uint64_t v6 = v7;
    }
    if ((v2 & 0x80) != 0)
    {
      int v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 10);
      if (v8 >= 0x80)
      {
        int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8) + 1;
        int v2 = *((_DWORD *)this + 18);
      }
      else
      {
        int v9 = 2;
      }
      uint64_t v6 = (v9 + v6);
    }
  }
  else
  {
    uint64_t v6 = 0;
  }
  if ((v2 & 0xFF00) == 0) {
    goto LABEL_56;
  }
  if ((v2 & 0x100) != 0)
  {
    int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 11);
    if (v10 >= 0x80)
    {
      int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10) + 1;
      int v2 = *((_DWORD *)this + 18);
    }
    else
    {
      int v11 = 2;
    }
    uint64_t v6 = (v11 + v6);
    if ((v2 & 0x200) == 0)
    {
LABEL_27:
      if ((v2 & 0x400) == 0) {
        goto LABEL_28;
      }
      goto LABEL_40;
    }
  }
  else if ((v2 & 0x200) == 0)
  {
    goto LABEL_27;
  }
  int v12 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 12);
  if (v12 >= 0x80)
  {
    int v13 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v12) + 1;
    int v2 = *((_DWORD *)this + 18);
  }
  else
  {
    int v13 = 2;
  }
  uint64_t v6 = (v13 + v6);
  if ((v2 & 0x400) == 0)
  {
LABEL_28:
    if ((v2 & 0x800) == 0) {
      goto LABEL_29;
    }
LABEL_44:
    unint64_t v16 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 14);
    if (v16 >= 0x80)
    {
      int v17 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v16) + 1;
      int v2 = *((_DWORD *)this + 18);
    }
    else
    {
      int v17 = 2;
    }
    uint64_t v6 = (v17 + v6);
    if ((v2 & 0x1000) == 0)
    {
LABEL_30:
      if ((v2 & 0x2000) == 0) {
        goto LABEL_56;
      }
      goto LABEL_52;
    }
    goto LABEL_48;
  }
LABEL_40:
  int v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 13);
  if (v14 >= 0x80)
  {
    int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14) + 1;
    int v2 = *((_DWORD *)this + 18);
  }
  else
  {
    int v15 = 2;
  }
  uint64_t v6 = (v15 + v6);
  if ((v2 & 0x800) != 0) {
    goto LABEL_44;
  }
LABEL_29:
  if ((v2 & 0x1000) == 0) {
    goto LABEL_30;
  }
LABEL_48:
  int v18 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 15);
  if (v18 >= 0x80)
  {
    int v19 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v18) + 1;
    int v2 = *((_DWORD *)this + 18);
  }
  else
  {
    int v19 = 2;
  }
  uint64_t v6 = (v19 + v6);
  if ((v2 & 0x2000) != 0)
  {
LABEL_52:
    unint64_t v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 16);
    if (v20 >= 0x80) {
      int v21 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20) + 1;
    }
    else {
      int v21 = 2;
    }
    uint64_t v6 = (v21 + v6);
  }
LABEL_56:
  *((_DWORD *)this + 17) = v6;
  return v6;
}

void CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData::CopyFrom(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData *this, const CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData::IsInitialized(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData *this)
{
  return 1;
}

float CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData::Swap(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData *this, CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData *a2)
{
  if (a2 != this)
  {
    uint64_t v2 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v2;
    LODWORD(v2) = *((_DWORD *)this + 4);
    *((_DWORD *)this + 4) = *((_DWORD *)a2 + 4);
    *((_DWORD *)a2 + 4) = v2;
    int v3 = *((_DWORD *)this + 5);
    *((_DWORD *)this + 5) = *((_DWORD *)a2 + 5);
    *((_DWORD *)a2 + 5) = v3;
    int v4 = *((_DWORD *)this + 6);
    *((_DWORD *)this + 6) = *((_DWORD *)a2 + 6);
    *((_DWORD *)a2 + 6) = v4;
    int v5 = *((_DWORD *)this + 7);
    *((_DWORD *)this + 7) = *((_DWORD *)a2 + 7);
    *((_DWORD *)a2 + 7) = v5;
    int v6 = *((_DWORD *)this + 8);
    *((_DWORD *)this + 8) = *((_DWORD *)a2 + 8);
    *((_DWORD *)a2 + 8) = v6;
    float result = *((float *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((float *)a2 + 9) = result;
    LODWORD(v2) = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v2;
    LODWORD(v2) = *((_DWORD *)this + 11);
    *((_DWORD *)this + 11) = *((_DWORD *)a2 + 11);
    *((_DWORD *)a2 + 11) = v2;
    LODWORD(v2) = *((_DWORD *)this + 12);
    *((_DWORD *)this + 12) = *((_DWORD *)a2 + 12);
    *((_DWORD *)a2 + 12) = v2;
    LODWORD(v2) = *((_DWORD *)this + 13);
    *((_DWORD *)this + 13) = *((_DWORD *)a2 + 13);
    *((_DWORD *)a2 + 13) = v2;
    LODWORD(v2) = *((_DWORD *)this + 14);
    *((_DWORD *)this + 14) = *((_DWORD *)a2 + 14);
    *((_DWORD *)a2 + 14) = v2;
    LODWORD(v2) = *((_DWORD *)this + 15);
    *((_DWORD *)this + 15) = *((_DWORD *)a2 + 15);
    *((_DWORD *)a2 + 15) = v2;
    LODWORD(v2) = *((_DWORD *)this + 16);
    *((_DWORD *)this + 16) = *((_DWORD *)a2 + 16);
    *((_DWORD *)a2 + 16) = v2;
    LODWORD(v2) = *((_DWORD *)this + 18);
    *((_DWORD *)this + 18) = *((_DWORD *)a2 + 18);
    *((_DWORD *)a2 + 18) = v2;
    LODWORD(v2) = *((_DWORD *)this + 17);
    *((_DWORD *)this + 17) = *((_DWORD *)a2 + 17);
    *((_DWORD *)a2 + 17) = v2;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.RayTracingTileData.RayTracingTilePayloadMetaData");
}

double CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::SharedCtor(CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData *this)
{
  double result = 0.0;
  *((void *)this + 1) = 0;
  *(void *)((char *)this + 36) = 0;
  return result;
}

CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData *CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::PointFacetVisibilityData(CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData *this, const CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData *a2)
{
  *((_DWORD *)this + 9) = 0;
  *((_DWORD *)this + 10) = 0;
  *(void *)this = &unk_1EDD0FF20;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::MergeFrom(this, a2);
  return this;
}

void sub_18DF45060(_Unwind_Exception *a1)
{
  uint64_t v3 = *((void *)v1 + 2);
  if (v3) {
    MEMORY[0x192FA6220](v3, 0x1000C8052888210);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::MergeFrom(CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData *this, const CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  int v4 = *((_DWORD *)a2 + 6);
  if (v4)
  {
    sub_18DF47D54((uint64_t)this + 16, *((_DWORD *)this + 6) + v4);
    memcpy((void *)(*((void *)this + 2) + 4 * *((int *)this + 6)), *((const void **)a2 + 2), 4 * *((int *)a2 + 6));
    *((_DWORD *)this + 6) += *((_DWORD *)a2 + 6);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 40);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 40))
    {
      int v6 = *((_DWORD *)a2 + 2);
      *((_DWORD *)this + 10) |= 1u;
      *((_DWORD *)this + 2) = v6;
      int v5 = *((_DWORD *)a2 + 10);
    }
    if ((v5 & 2) != 0)
    {
      int v7 = *((_DWORD *)a2 + 3);
      *((_DWORD *)this + 10) |= 2u;
      *((_DWORD *)this + 3) = v7;
    }
  }
}

void sub_18DF45180(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::~PointFacetVisibilityData(CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData *this)
{
  *(void *)this = &unk_1EDD0FF20;
  CoreNavigation::CLP::LogEntry::RayTracingTileData::protobuf_AddDesc_CoreNavigationCLPRayTracingTileData_2eproto(this);
  uint64_t v2 = *((void *)this + 2);
  if (v2) {
    MEMORY[0x192FA6220](v2, 0x1000C8052888210);
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::~PointFacetVisibilityData(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::default_instance(CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData *this)
{
  return CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 36) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::New(CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 40)) {
    *(void *)(this + 8) = 0;
  }
  *(_DWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 40) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (char *)this + 16;
  int v5 = (unsigned int *)((char *)this + 12);
  do
  {
    while (1)
    {
      while (1)
      {
        int v6 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v6 >= *((void *)a2 + 2) || *v6 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v6;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((void *)a2 + 1) = v6 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v8 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v9 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        unsigned int v22 = 0;
        int v12 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
        if ((unint64_t)v12 >= v10 || *v12 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v22);
          if (!result) {
            return result;
          }
          unsigned int v13 = v22;
          int v14 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v10 = *((void *)a2 + 2);
        }
        else
        {
          unsigned int v13 = *v12;
          int v14 = v12 + 1;
          *((void *)a2 + 1) = v14;
        }
        *((_DWORD *)this + 2) = -(v13 & 1) ^ (v13 >> 1);
        *((_DWORD *)this + 10) |= 1u;
        if ((unint64_t)v14 < v10 && *v14 == 16)
        {
          int v15 = v14 + 1;
          *((void *)a2 + 1) = v15;
          goto LABEL_30;
        }
      }
      if (v8 != 2) {
        break;
      }
      int v9 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_20;
      }
      int v15 = (char *)*((void *)a2 + 1);
      unint64_t v10 = *((void *)a2 + 2);
LABEL_30:
      if ((unint64_t)v15 >= v10 || *v15 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
        if (!result) {
          return result;
        }
        int v17 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
      }
      else
      {
        *int v5 = *v15;
        int v17 = v15 + 1;
        *((void *)a2 + 1) = v17;
      }
      *((_DWORD *)this + 10) |= 2u;
      if ((unint64_t)v17 < v10 && *v17 == 26)
      {
        int v11 = v17 + 1;
        *((void *)a2 + 1) = v11;
LABEL_38:
        unsigned int v24 = 0;
        if ((unint64_t)v11 >= v10 || *v11 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v24))return 0; {
        }
          }
        else
        {
          unsigned int v24 = *v11;
          *((void *)a2 + 1) = v11 + 1;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(a2) >= 1)
        {
          unsigned int v23 = 0;
          int v18 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v18 >= *((void *)a2 + 2) || *v18 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v23))return 0; {
          }
            }
          else
          {
            unsigned int v23 = *v18;
            *((void *)a2 + 1) = v18 + 1;
          }
          int v19 = *((_DWORD *)this + 6);
          if (v19 == *((_DWORD *)this + 7))
          {
            sub_18DF47D54((uint64_t)v4, v19 + 1);
            int v19 = *((_DWORD *)this + 6);
          }
          unsigned int v20 = v23;
          uint64_t v21 = *((void *)this + 2);
          *((_DWORD *)this + 6) = v19 + 1;
          *(_DWORD *)(v21 + 4 * v19) = v20;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
LABEL_52:
        if (*((void *)a2 + 1) == *((void *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (v8 == 3)
    {
      int v9 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        uint64_t result = sub_18DF455D0(26, a2, (uint64_t)v4);
        if (!result) {
          return result;
        }
        goto LABEL_52;
      }
      if (v9 == 2)
      {
        int v11 = (char *)*((void *)a2 + 1);
        unint64_t v10 = *((void *)a2 + 2);
        goto LABEL_38;
      }
    }
    else
    {
      int v9 = TagFallback & 7;
    }
LABEL_20:
    if (v9 == 4) {
      return 1;
    }
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0);
  return 0;
}

uint64_t sub_18DF455D0(int a1, wireless_diagnostics::google::protobuf::io::CodedInputStream *this, uint64_t a3)
{
  unsigned int v18 = 0;
  int v6 = (char *)*((void *)this + 1);
  if ((unint64_t)v6 >= *((void *)this + 2) || *v6 < 0)
  {
    uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v18);
    if (!result) {
      return result;
    }
  }
  else
  {
    unsigned int v18 = *v6;
    *((void *)this + 1) = v6 + 1;
  }
  int v8 = *(_DWORD *)(a3 + 8);
  if (v8 == *(_DWORD *)(a3 + 12))
  {
    sub_18DF47D54(a3, v8 + 1);
    int v8 = *(_DWORD *)(a3 + 8);
  }
  unsigned int v9 = v18;
  uint64_t v10 = *(void *)a3;
  *(_DWORD *)(a3 + 8) = v8 + 1;
  *(_DWORD *)(v10 + 4 * v8) = v9;
  int v11 = *(_DWORD *)(a3 + 12) - *(_DWORD *)(a3 + 8);
  if (v11 >= 1)
  {
    int v12 = v11 + 1;
    do
    {
      unsigned int v13 = (unsigned __int8 *)*((void *)this + 1);
      unint64_t v14 = *((void *)this + 2);
      if ((unint64_t)v13 >= v14 || *v13 != a1) {
        break;
      }
      *((void *)this + 1) = v13 + 1;
      if ((unint64_t)(v13 + 1) >= v14 || (char)v13[1] < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(this, &v18);
        if (!result) {
          return result;
        }
      }
      else
      {
        unsigned int v18 = v13[1];
        *((void *)this + 1) = v13 + 2;
      }
      int v15 = *(_DWORD *)(a3 + 8);
      if (v15 >= *(_DWORD *)(a3 + 12))
      {
        wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
        wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
        wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
        wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v19);
        int v15 = *(_DWORD *)(a3 + 8);
      }
      unsigned int v16 = v18;
      uint64_t v17 = *(void *)a3;
      *(_DWORD *)(a3 + 8) = v15 + 1;
      *(_DWORD *)(v17 + 4 * v15) = v16;
      --v12;
    }
    while (v12 > 1);
  }
  return 1;
}

void sub_18DF4575C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

_DWORD *CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::SerializeWithCachedSizes(_DWORD *this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = this;
  int v6 = this[10];
  if (v6)
  {
    this = (_DWORD *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteSInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, this[2], (uint64_t)a2, a4);
    int v6 = v5[10];
  }
  if ((v6 & 2) != 0) {
    this = (_DWORD *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], (uint64_t)a2, a4);
  }
  if ((int)v5[6] >= 1)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
    this = (_DWORD *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
    if ((int)v5[6] >= 1)
    {
      uint64_t v7 = 0;
      do
      {
        this = (_DWORD *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
        ++v7;
      }
      while (v7 < (int)v5[6]);
    }
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::ByteSize(CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData *this)
{
  char v2 = *((unsigned char *)this + 40);
  if (!v2)
  {
    int v3 = 0;
    goto LABEL_14;
  }
  if (*((unsigned char *)this + 40))
  {
    int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)((2 * *((_DWORD *)this + 2)) ^ (*((int *)this + 2) >> 31));
    if (v4 >= 0x80)
    {
      int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      if ((*((_DWORD *)this + 10) & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      int v3 = 2;
      if ((v2 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    int v3 = 0;
    if ((*((unsigned char *)this + 40) & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
  if (v5 >= 0x80) {
    int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
  }
  else {
    int v6 = 2;
  }
  v3 += v6;
LABEL_14:
  int v7 = *((_DWORD *)this + 6);
  if (v7 < 1)
  {
    LODWORD(v9) = 0;
  }
  else
  {
    uint64_t v8 = 0;
    LODWORD(v9) = 0;
    do
    {
      uint64_t v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((void *)this + 2)
                                                                                             + 4 * v8);
      if (v10 >= 0x80)
      {
        int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
        int v7 = *((_DWORD *)this + 6);
      }
      else
      {
        int v11 = 1;
      }
      unsigned int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v11 + v9);
      ++v8;
    }
    while (v8 < v7);
    if ((int)v9 > 0)
    {
      if (v9 >= 0x80) {
        int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9) + 1;
      }
      else {
        int v12 = 2;
      }
      v3 += v12;
    }
  }
  uint64_t result = (v3 + v9);
  *((_DWORD *)this + 8) = v9;
  *((_DWORD *)this + 9) = result;
  return result;
}

void CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::CopyFrom(CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData *this, const CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::IsInitialized(CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::Swap(CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData *this, CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData *a2)
{
  if (a2 != this)
  {
    int v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    int v3 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    uint64_t v4 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    double result = *((double *)a2 + 3);
    *((void *)a2 + 2) = v4;
    uint64_t v6 = *((void *)this + 3);
    *((double *)this + 3) = result;
    *((void *)a2 + 3) = v6;
    LODWORD(v4) = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v4;
    LODWORD(v4) = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v4;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.RayTracingTileData.PointFacetVisibilityData");
}

double CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData::SharedCtor(CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData *this)
{
  double result = 0.0;
  *((void *)this + 1) = 0;
  *(void *)((char *)this + 36) = 0;
  return result;
}

CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData *CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData::FacetInterVisibilityData(CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData *this, const CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData *a2)
{
  *((_DWORD *)this + 9) = 0;
  *((_DWORD *)this + 10) = 0;
  *(void *)this = &unk_1EDD0FEA8;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData::MergeFrom(this, a2);
  return this;
}

void sub_18DF45B50(_Unwind_Exception *a1)
{
  uint64_t v3 = *((void *)v1 + 2);
  if (v3) {
    MEMORY[0x192FA6220](v3, 0x1000C8052888210);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData::MergeFrom(CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData *this, const CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData *a2)
{
  if (a2 == this)
  {
    wireless_diagnostics::google::protobuf::internal::LogMessage::LogMessage();
    wireless_diagnostics::google::protobuf::internal::LogMessage::operator<<();
    wireless_diagnostics::google::protobuf::internal::LogFinisher::operator=();
    wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)v8);
  }
  int v4 = *((_DWORD *)a2 + 6);
  if (v4)
  {
    sub_18DF47D54((uint64_t)this + 16, *((_DWORD *)this + 6) + v4);
    memcpy((void *)(*((void *)this + 2) + 4 * *((int *)this + 6)), *((const void **)a2 + 2), 4 * *((int *)a2 + 6));
    *((_DWORD *)this + 6) += *((_DWORD *)a2 + 6);
  }
  LOBYTE(v5) = *((unsigned char *)a2 + 40);
  if ((_BYTE)v5)
  {
    if (*((unsigned char *)a2 + 40))
    {
      int v6 = *((_DWORD *)a2 + 2);
      *((_DWORD *)this + 10) |= 1u;
      *((_DWORD *)this + 2) = v6;
      int v5 = *((_DWORD *)a2 + 10);
    }
    if ((v5 & 2) != 0)
    {
      int v7 = *((_DWORD *)a2 + 3);
      *((_DWORD *)this + 10) |= 2u;
      *((_DWORD *)this + 3) = v7;
    }
  }
}

void sub_18DF45C70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, ...)
{
  va_start(va, a3);
  wireless_diagnostics::google::protobuf::internal::LogMessage::~LogMessage((wireless_diagnostics::google::protobuf::internal::LogMessage *)va);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData::~FacetInterVisibilityData(CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData *this)
{
  *(void *)this = &unk_1EDD0FEA8;
  CoreNavigation::CLP::LogEntry::RayTracingTileData::protobuf_AddDesc_CoreNavigationCLPRayTracingTileData_2eproto(this);
  uint64_t v2 = *((void *)this + 2);
  if (v2) {
    MEMORY[0x192FA6220](v2, 0x1000C8052888210);
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData::~FacetInterVisibilityData(this);

  JUMPOUT(0x192FA6240);
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData::default_instance(CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData *this)
{
  return CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 36) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData::New(CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData::Clear(uint64_t this)
{
  if (*(unsigned char *)(this + 40)) {
    *(void *)(this + 8) = 0;
  }
  *(_DWORD *)(this + 24) = 0;
  *(_DWORD *)(this + 40) = 0;
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  int v4 = (char *)this + 16;
  int v5 = (unsigned int *)((char *)this + 8);
  int v6 = (unsigned int *)((char *)this + 12);
  do
  {
    while (1)
    {
      while (1)
      {
        int v7 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v7 >= *((void *)a2 + 2) || *v7 < 0)
        {
          unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
          *((_DWORD *)a2 + 8) = TagFallback;
          if (!TagFallback) {
            return 1;
          }
        }
        else
        {
          unint64_t TagFallback = *v7;
          *((_DWORD *)a2 + 8) = TagFallback;
          *((void *)a2 + 1) = v7 + 1;
          if (!TagFallback) {
            return 1;
          }
        }
        unsigned int v9 = TagFallback >> 3;
        if (TagFallback >> 3 != 1) {
          break;
        }
        int v10 = TagFallback & 7;
        if ((TagFallback & 7) != 0) {
          goto LABEL_20;
        }
        unsigned int v13 = (char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
        if ((unint64_t)v13 >= v11 || *v13 < 0)
        {
          uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v5);
          if (!result) {
            return result;
          }
          unint64_t v14 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v11 = *((void *)a2 + 2);
        }
        else
        {
          *int v5 = *v13;
          unint64_t v14 = v13 + 1;
          *((void *)a2 + 1) = v14;
        }
        *((_DWORD *)this + 10) |= 1u;
        if ((unint64_t)v14 < v11 && *v14 == 16)
        {
          int v15 = v14 + 1;
          *((void *)a2 + 1) = v15;
          goto LABEL_30;
        }
      }
      if (v9 != 2) {
        break;
      }
      int v10 = TagFallback & 7;
      if ((TagFallback & 7) != 0) {
        goto LABEL_20;
      }
      int v15 = (char *)*((void *)a2 + 1);
      unint64_t v11 = *((void *)a2 + 2);
LABEL_30:
      if ((unint64_t)v15 >= v11 || *v15 < 0)
      {
        uint64_t result = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v6);
        if (!result) {
          return result;
        }
        uint64_t v17 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
      }
      else
      {
        *int v6 = *v15;
        uint64_t v17 = v15 + 1;
        *((void *)a2 + 1) = v17;
      }
      *((_DWORD *)this + 10) |= 2u;
      if ((unint64_t)v17 < v11 && *v17 == 26)
      {
        int v12 = v17 + 1;
        *((void *)a2 + 1) = v12;
LABEL_38:
        unsigned int v23 = 0;
        if ((unint64_t)v12 >= v11 || *v12 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v23))return 0; {
        }
          }
        else
        {
          unsigned int v23 = *v12;
          *((void *)a2 + 1) = v12 + 1;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(a2) >= 1)
        {
          unsigned int v22 = 0;
          unsigned int v18 = (char *)*((void *)a2 + 1);
          if ((unint64_t)v18 >= *((void *)a2 + 2) || *v18 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v22))return 0; {
          }
            }
          else
          {
            unsigned int v22 = *v18;
            *((void *)a2 + 1) = v18 + 1;
          }
          int v19 = *((_DWORD *)this + 6);
          if (v19 == *((_DWORD *)this + 7))
          {
            sub_18DF47D54((uint64_t)v4, v19 + 1);
            int v19 = *((_DWORD *)this + 6);
          }
          unsigned int v20 = v22;
          uint64_t v21 = *((void *)this + 2);
          *((_DWORD *)this + 6) = v19 + 1;
          *(_DWORD *)(v21 + 4 * v19) = v20;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
LABEL_52:
        if (*((void *)a2 + 1) == *((void *)a2 + 2)
          && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
        {
          *((_DWORD *)a2 + 8) = 0;
          uint64_t result = 1;
          *((unsigned char *)a2 + 36) = 1;
          return result;
        }
      }
    }
    if (v9 == 3)
    {
      int v10 = TagFallback & 7;
      if ((TagFallback & 7) == 0)
      {
        uint64_t result = sub_18DF455D0(26, a2, (uint64_t)v4);
        if (!result) {
          return result;
        }
        goto LABEL_52;
      }
      if (v10 == 2)
      {
        int v12 = (char *)*((void *)a2 + 1);
        unint64_t v11 = *((void *)a2 + 2);
        goto LABEL_38;
      }
    }
    else
    {
      int v10 = TagFallback & 7;
    }
LABEL_20:
    if (v10 == 4) {
      return 1;
    }
  }
  while ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) != 0);
  return 0;
}

_DWORD *CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData::SerializeWithCachedSizes(_DWORD *this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  int v5 = this;
  int v6 = this[10];
  if (v6)
  {
    this = (_DWORD *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, this[2], (uint64_t)a2, a4);
    int v6 = v5[10];
  }
  if ((v6 & 2) != 0) {
    this = (_DWORD *)wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteUInt32((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)2, v5[3], (uint64_t)a2, a4);
  }
  if ((int)v5[6] >= 1)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
    this = (_DWORD *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
    if ((int)v5[6] >= 1)
    {
      uint64_t v7 = 0;
      do
      {
        this = (_DWORD *)wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
        ++v7;
      }
      while (v7 < (int)v5[6]);
    }
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData::ByteSize(CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData *this)
{
  char v2 = *((unsigned char *)this + 40);
  if (!v2)
  {
    int v3 = 0;
    goto LABEL_14;
  }
  if (*((unsigned char *)this + 40))
  {
    int v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 2);
    if (v4 >= 0x80)
    {
      int v3 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4) + 1;
      if ((*((_DWORD *)this + 10) & 2) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      int v3 = 2;
      if ((v2 & 2) == 0) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    int v3 = 0;
    if ((*((unsigned char *)this + 40) & 2) == 0) {
      goto LABEL_14;
    }
  }
  int v5 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*((unsigned int *)this + 3);
  if (v5 >= 0x80) {
    int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v5) + 1;
  }
  else {
    int v6 = 2;
  }
  v3 += v6;
LABEL_14:
  int v7 = *((_DWORD *)this + 6);
  if (v7 < 1)
  {
    LODWORD(v9) = 0;
  }
  else
  {
    uint64_t v8 = 0;
    LODWORD(v9) = 0;
    do
    {
      int v10 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((void *)this + 2)
                                                                                             + 4 * v8);
      if (v10 >= 0x80)
      {
        int v11 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v10);
        int v7 = *((_DWORD *)this + 6);
      }
      else
      {
        int v11 = 1;
      }
      unsigned int v9 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v11 + v9);
      ++v8;
    }
    while (v8 < v7);
    if ((int)v9 > 0)
    {
      if (v9 >= 0x80) {
        int v12 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v9) + 1;
      }
      else {
        int v12 = 2;
      }
      v3 += v12;
    }
  }
  uint64_t result = (v3 + v9);
  *((_DWORD *)this + 8) = v9;
  *((_DWORD *)this + 9) = result;
  return result;
}

void CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData::CopyFrom(CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData *this, const CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData::IsInitialized(CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData *this)
{
  return 1;
}

double CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData::Swap(CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData *this, CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData *a2)
{
  if (a2 != this)
  {
    int v2 = *((_DWORD *)this + 2);
    *((_DWORD *)this + 2) = *((_DWORD *)a2 + 2);
    *((_DWORD *)a2 + 2) = v2;
    int v3 = *((_DWORD *)this + 3);
    *((_DWORD *)this + 3) = *((_DWORD *)a2 + 3);
    *((_DWORD *)a2 + 3) = v3;
    uint64_t v4 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    double result = *((double *)a2 + 3);
    *((void *)a2 + 2) = v4;
    uint64_t v6 = *((void *)this + 3);
    *((double *)this + 3) = result;
    *((void *)a2 + 3) = v6;
    LODWORD(v4) = *((_DWORD *)this + 10);
    *((_DWORD *)this + 10) = *((_DWORD *)a2 + 10);
    *((_DWORD *)a2 + 10) = v4;
    LODWORD(v4) = *((_DWORD *)this + 9);
    *((_DWORD *)this + 9) = *((_DWORD *)a2 + 9);
    *((_DWORD *)a2 + 9) = v4;
  }
  return result;
}

void *CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData::GetTypeName@<X0>(void *a1@<X8>)
{
  return sub_18DEDE7B0(a1, "CoreNavigation.CLP.LogEntry.RayTracingTileData.FacetInterVisibilityData");
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::SharedCtor(uint64_t this)
{
  *(void *)(this + 8) = 0;
  *(void *)(this + 208) = 0;
  return this;
}

CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::RayTracingTilePayload(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *this, const CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *a2)
{
  *((void *)this + 5) = 0;
  *((void *)this + 6) = 0;
  *((void *)this + 8) = 0;
  *((void *)this + 11) = 0;
  *((void *)this + 9) = 0;
  *((void *)this + 12) = 0;
  *((_DWORD *)this + 26) = 0;
  *((void *)this + 14) = 0;
  *((void *)this + 15) = 0;
  *((_DWORD *)this + 32) = 0;
  *((void *)this + 17) = 0;
  *((void *)this + 18) = 0;
  *((_DWORD *)this + 38) = 0;
  *((void *)this + 20) = 0;
  *((_DWORD *)this + 44) = 0;
  *((void *)this + 21) = 0;
  *((void *)this + 23) = 0;
  *((_DWORD *)this + 50) = 0;
  *((void *)this + 24) = 0;
  *((void *)this + 26) = 0;
  *(void *)this = &unk_1EDD0FDB8;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  *((void *)this + 3) = 0;
  CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::MergeFrom(this, a2);
  return this;
}

void sub_18DF46530(_Unwind_Exception *a1)
{
  unsigned int v9 = v2;
  sub_18DF0C324(v9);
  sub_18DF0C324(v6);
  sub_18DF0C324(v5);
  sub_18DF0C324(v4);
  sub_18DF0C324(v3);
  if (*v8) {
    MEMORY[0x192FA6220](*v8, 0x1000C8052888210);
  }
  if (*v7) {
    MEMORY[0x192FA6220](*v7, 0x1000C8052888210);
  }
  uint64_t v11 = *((void *)v1 + 2);
  if (v11) {
    MEMORY[0x192FA6220](v11, 0x1000C8000313F17);
  }
  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(v1);
  _Unwind_Resume(a1);
}

void CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::~RayTracingTilePayload(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *this)
{
  *(void *)this = &unk_1EDD0FDB8;
  CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::SharedDtor(this);
  sub_18DF0C324((uint64_t *)this + 23);
  sub_18DF0C324((uint64_t *)this + 20);
  sub_18DF0C324((uint64_t *)this + 17);
  sub_18DF0C324((uint64_t *)this + 14);
  sub_18DF0C324((uint64_t *)this + 11);
  uint64_t v2 = *((void *)this + 8);
  if (v2) {
    MEMORY[0x192FA6220](v2, 0x1000C8052888210);
  }
  uint64_t v3 = *((void *)this + 5);
  if (v3) {
    MEMORY[0x192FA6220](v3, 0x1000C8052888210);
  }
  uint64_t v4 = *((void *)this + 2);
  if (v4) {
    MEMORY[0x192FA6220](v4, 0x1000C8000313F17);
  }

  wireless_diagnostics::google::protobuf::MessageLite::~MessageLite(this);
}

{
  uint64_t vars8;

  CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::~RayTracingTilePayload(this);

  JUMPOUT(0x192FA6240);
}

void CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::SharedDtor(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *this)
{
  CoreNavigation::CLP::LogEntry::RayTracingTileData::protobuf_AddDesc_CoreNavigationCLPRayTracingTileData_2eproto(this);
  if ((CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *)CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::default_instance_ != this)
  {
    uint64_t v2 = *((void *)this + 1);
    if (v2)
    {
      uint64_t v3 = *(void (**)(void))(*(void *)v2 + 8);
      v3();
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::default_instance(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *this)
{
  return CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::default_instance_;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::SetCachedSize(uint64_t this, int a2)
{
  *(_DWORD *)(this + 208) = a2;
  return this;
}

void CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::New(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *this)
{
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::MergePartialFromCodedStream(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *this, wireless_diagnostics::google::protobuf::io::CodedInputStream *a2)
{
  uint64_t v4 = (char *)this + 64;
  int v5 = (char *)this + 40;
  uint64_t v6 = (char *)this + 16;
  int v7 = (CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *)((char *)this + 88);
  uint64_t v8 = (CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *)((char *)this + 112);
  uint64_t v93 = (CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *)((char *)this + 160);
  int v94 = (CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *)((char *)this + 136);
  unsigned int v9 = (CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *)((char *)this + 184);
LABEL_2:
  while (2)
  {
    int v10 = (char *)*((void *)a2 + 1);
    if ((unint64_t)v10 >= *((void *)a2 + 2) || *v10 < 0)
    {
      unint64_t TagFallback = wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadTagFallback(a2);
      *((_DWORD *)a2 + 8) = TagFallback;
      if (!TagFallback) {
        return 1;
      }
    }
    else
    {
      unint64_t TagFallback = *v10;
      *((_DWORD *)a2 + 8) = TagFallback;
      *((void *)a2 + 1) = v10 + 1;
      if (!TagFallback) {
        return 1;
      }
    }
    switch(TagFallback >> 3)
    {
      case 1u:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_33;
        }
        *((_DWORD *)this + 53) |= 1u;
        unsigned int v13 = (CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData *)*((void *)this + 1);
        if (!v13) {
          operator new();
        }
        v95[0] = 0;
        unint64_t v14 = (char *)*((void *)a2 + 1);
        if ((unint64_t)v14 >= *((void *)a2 + 2) || *v14 < 0)
        {
          if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v95))return 0; {
        }
          }
        else
        {
          v95[0] = *v14;
          *((void *)a2 + 1) = v14 + 1;
        }
        int v22 = *((_DWORD *)a2 + 14);
        int v23 = *((_DWORD *)a2 + 15);
        *((_DWORD *)a2 + 14) = v22 + 1;
        if (v22 >= v23) {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
        if (!CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData::MergePartialFromCodedStream(v13, a2)|| !*((unsigned char *)a2 + 36))
        {
          return 0;
        }
        wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
        int v24 = *((_DWORD *)a2 + 14);
        BOOL v25 = __OFSUB__(v24, 1);
        int v26 = v24 - 1;
        if (v26 < 0 == v25) {
          *((_DWORD *)a2 + 14) = v26;
        }
        int v27 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v16 = *((void *)a2 + 2);
        if ((unint64_t)v27 >= v16 || *v27 != 18) {
          continue;
        }
        int v15 = v27 + 1;
        *((void *)a2 + 1) = v15;
        goto LABEL_51;
      case 2u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) == 0)
        {
          uint64_t result = sub_18DF0B244(1, 0x12u, a2, (uint64_t)v6);
          if (!result) {
            return result;
          }
LABEL_65:
          uint64_t v32 = (unsigned char *)*((void *)a2 + 1);
          unint64_t v18 = *((void *)a2 + 2);
          if ((unint64_t)v32 < v18 && *v32 == 26)
          {
            uint64_t v17 = v32 + 1;
            *((void *)a2 + 1) = v17;
LABEL_68:
            v95[0] = 0;
            if ((unint64_t)v17 >= v18 || *v17 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v95))return 0; {
            }
              }
            else
            {
              v95[0] = *v17;
              *((void *)a2 + 1) = v17 + 1;
            }
            wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
            while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(a2) >= 1)
            {
              unsigned int v96 = 0;
              int v33 = (char *)*((void *)a2 + 1);
              if ((unint64_t)v33 >= *((void *)a2 + 2) || *v33 < 0)
              {
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v96))return 0; {
              }
                }
              else
              {
                unsigned int v96 = *v33;
                *((void *)a2 + 1) = v33 + 1;
              }
              int v34 = *((_DWORD *)this + 12);
              if (v34 == *((_DWORD *)this + 13))
              {
                sub_18DF47D54((uint64_t)v5, v34 + 1);
                int v34 = *((_DWORD *)this + 12);
              }
              unsigned int v35 = v96;
              uint64_t v36 = *((void *)this + 5);
              *((_DWORD *)this + 12) = v34 + 1;
              *(_DWORD *)(v36 + 4 * v34) = v35;
            }
            wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
            goto LABEL_82;
          }
          continue;
        }
        if (v12 == 2)
        {
          int v15 = (char *)*((void *)a2 + 1);
          unint64_t v16 = *((void *)a2 + 2);
LABEL_51:
          unsigned int v96 = 0;
          if ((unint64_t)v15 >= v16 || *v15 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v96))return 0; {
          }
            }
          else
          {
            unsigned int v96 = *v15;
            *((void *)a2 + 1) = v15 + 1;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(a2) >= 1)
          {
            *(void *)int v95 = 0;
            uint64_t v28 = (char *)*((void *)a2 + 1);
            if ((unint64_t)v28 >= *((void *)a2 + 2) || *v28 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint64Fallback(a2, (unint64_t *)v95))return 0; {
            }
              }
            else
            {
              *(void *)int v95 = *v28;
              *((void *)a2 + 1) = v28 + 1;
            }
            int v29 = *((_DWORD *)this + 6);
            if (v29 == *((_DWORD *)this + 7))
            {
              sub_18DF0C278((uint64_t)v6, v29 + 1);
              int v29 = *((_DWORD *)this + 6);
            }
            uint64_t v30 = *(void *)v95;
            uint64_t v31 = *((void *)this + 2);
            *((_DWORD *)this + 6) = v29 + 1;
            *(void *)(v31 + 8 * v29) = v30;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
          goto LABEL_65;
        }
LABEL_33:
        if (v12 != 4)
        {
          if ((wireless_diagnostics::google::protobuf::internal::WireFormatLite::SkipField(a2, (wireless_diagnostics::google::protobuf::io::CodedInputStream *)TagFallback) & 1) == 0)return 0; {
          continue;
          }
        }
        return 1;
      case 3u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) != 0)
        {
          if (v12 == 2)
          {
            uint64_t v17 = (char *)*((void *)a2 + 1);
            unint64_t v18 = *((void *)a2 + 2);
            goto LABEL_68;
          }
          goto LABEL_33;
        }
        uint64_t result = sub_18DF455D0(26, a2, (uint64_t)v5);
        if (!result) {
          return result;
        }
LABEL_82:
        int v37 = (unsigned char *)*((void *)a2 + 1);
        unint64_t v20 = *((void *)a2 + 2);
        if ((unint64_t)v37 < v20 && *v37 == 34)
        {
          int v19 = v37 + 1;
          *((void *)a2 + 1) = v19;
LABEL_85:
          v95[0] = 0;
          if ((unint64_t)v19 >= v20 || *v19 < 0)
          {
            if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v95))return 0; {
          }
            }
          else
          {
            v95[0] = *v19;
            *((void *)a2 + 1) = v19 + 1;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
          while ((int)wireless_diagnostics::google::protobuf::io::CodedInputStream::BytesUntilLimit(a2) >= 1)
          {
            unsigned int v96 = 0;
            uint64_t v38 = (char *)*((void *)a2 + 1);
            if ((unint64_t)v38 >= *((void *)a2 + 2) || *v38 < 0)
            {
              if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, &v96))return 0; {
            }
              }
            else
            {
              unsigned int v96 = *v38;
              *((void *)a2 + 1) = v38 + 1;
            }
            int v39 = *((_DWORD *)this + 18);
            if (v39 == *((_DWORD *)this + 19))
            {
              sub_18DF47D54((uint64_t)v4, v39 + 1);
              int v39 = *((_DWORD *)this + 18);
            }
            unsigned int v40 = v96;
            uint64_t v41 = *((void *)this + 8);
            *((_DWORD *)this + 18) = v39 + 1;
            *(_DWORD *)(v41 + 4 * v39) = v40;
          }
          wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
LABEL_99:
          int v42 = (unsigned char *)*((void *)a2 + 1);
          if ((unint64_t)v42 < *((void *)a2 + 2) && *v42 == 42)
          {
            do
            {
              *((void *)a2 + 1) = v42 + 1;
LABEL_102:
              int v43 = *((_DWORD *)this + 25);
              uint64_t v44 = *((int *)this + 24);
              if ((int)v44 >= v43)
              {
                if (v43 == *((_DWORD *)this + 26))
                {
                  wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v7);
                  int v43 = *((_DWORD *)this + 25);
                }
                *((_DWORD *)this + 25) = v43 + 1;
                operator new();
              }
              uint64_t v45 = *((void *)this + 11);
              *((_DWORD *)this + 24) = v44 + 1;
              int v46 = *(CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData **)(v45 + 8 * v44);
              v95[0] = 0;
              uint64_t v47 = (char *)*((void *)a2 + 1);
              if ((unint64_t)v47 >= *((void *)a2 + 2) || *v47 < 0)
              {
                if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v95))return 0; {
              }
                }
              else
              {
                v95[0] = *v47;
                *((void *)a2 + 1) = v47 + 1;
              }
              int v48 = *((_DWORD *)a2 + 14);
              int v49 = *((_DWORD *)a2 + 15);
              *((_DWORD *)a2 + 14) = v48 + 1;
              if (v48 >= v49) {
                return 0;
              }
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
              if (!CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData::MergePartialFromCodedStream(v46, a2)|| !*((unsigned char *)a2 + 36))
              {
                return 0;
              }
              wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
              int v50 = *((_DWORD *)a2 + 14);
              BOOL v25 = __OFSUB__(v50, 1);
              int v51 = v50 - 1;
              if (v51 < 0 == v25) {
                *((_DWORD *)a2 + 14) = v51;
              }
              int v42 = (unsigned char *)*((void *)a2 + 1);
              if ((unint64_t)v42 >= *((void *)a2 + 2)) {
                goto LABEL_2;
              }
              int v52 = *v42;
            }
            while (v52 == 42);
            if (v52 == 50)
            {
              do
              {
                *((void *)a2 + 1) = v42 + 1;
LABEL_120:
                int v53 = *((_DWORD *)this + 31);
                uint64_t v54 = *((int *)this + 30);
                if ((int)v54 >= v53)
                {
                  if (v53 == *((_DWORD *)this + 32))
                  {
                    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v8);
                    int v53 = *((_DWORD *)this + 31);
                  }
                  *((_DWORD *)this + 31) = v53 + 1;
                  operator new();
                }
                uint64_t v55 = *((void *)this + 14);
                *((_DWORD *)this + 30) = v54 + 1;
                unsigned int v56 = *(CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData **)(v55 + 8 * v54);
                v95[0] = 0;
                int v57 = (char *)*((void *)a2 + 1);
                if ((unint64_t)v57 >= *((void *)a2 + 2) || *v57 < 0)
                {
                  if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v95))return 0; {
                }
                  }
                else
                {
                  v95[0] = *v57;
                  *((void *)a2 + 1) = v57 + 1;
                }
                int v58 = *((_DWORD *)a2 + 14);
                int v59 = *((_DWORD *)a2 + 15);
                *((_DWORD *)a2 + 14) = v58 + 1;
                if (v58 >= v59) {
                  return 0;
                }
                wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
                if (!CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::MergePartialFromCodedStream(v56, a2)|| !*((unsigned char *)a2 + 36))
                {
                  return 0;
                }
                wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
                int v60 = *((_DWORD *)a2 + 14);
                BOOL v25 = __OFSUB__(v60, 1);
                int v61 = v60 - 1;
                if (v61 < 0 == v25) {
                  *((_DWORD *)a2 + 14) = v61;
                }
                int v42 = (unsigned char *)*((void *)a2 + 1);
                if ((unint64_t)v42 >= *((void *)a2 + 2)) {
                  goto LABEL_2;
                }
                int v62 = *v42;
              }
              while (v62 == 50);
              if (v62 == 58)
              {
                do
                {
                  *((void *)a2 + 1) = v42 + 1;
LABEL_138:
                  int v63 = *((_DWORD *)this + 37);
                  uint64_t v64 = *((int *)this + 36);
                  if ((int)v64 >= v63)
                  {
                    if (v63 == *((_DWORD *)this + 38))
                    {
                      wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v94);
                      int v63 = *((_DWORD *)this + 37);
                    }
                    *((_DWORD *)this + 37) = v63 + 1;
                    operator new();
                  }
                  uint64_t v65 = *((void *)this + 17);
                  *((_DWORD *)this + 36) = v64 + 1;
                  signed int v66 = *(CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData **)(v65 + 8 * v64);
                  v95[0] = 0;
                  int v67 = (char *)*((void *)a2 + 1);
                  if ((unint64_t)v67 >= *((void *)a2 + 2) || *v67 < 0)
                  {
                    if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v95))return 0; {
                  }
                    }
                  else
                  {
                    v95[0] = *v67;
                    *((void *)a2 + 1) = v67 + 1;
                  }
                  int v68 = *((_DWORD *)a2 + 14);
                  int v69 = *((_DWORD *)a2 + 15);
                  *((_DWORD *)a2 + 14) = v68 + 1;
                  if (v68 >= v69) {
                    return 0;
                  }
                  wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
                  if (!CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::MergePartialFromCodedStream(v66, a2)|| !*((unsigned char *)a2 + 36))
                  {
                    return 0;
                  }
                  wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
                  int v70 = *((_DWORD *)a2 + 14);
                  BOOL v25 = __OFSUB__(v70, 1);
                  int v71 = v70 - 1;
                  if (v71 < 0 == v25) {
                    *((_DWORD *)a2 + 14) = v71;
                  }
                  int v42 = (unsigned char *)*((void *)a2 + 1);
                  if ((unint64_t)v42 >= *((void *)a2 + 2)) {
                    goto LABEL_2;
                  }
                  int v72 = *v42;
                }
                while (v72 == 58);
                if (v72 == 66)
                {
                  do
                  {
                    *((void *)a2 + 1) = v42 + 1;
LABEL_156:
                    int v73 = *((_DWORD *)this + 43);
                    uint64_t v74 = *((int *)this + 42);
                    if ((int)v74 >= v73)
                    {
                      if (v73 == *((_DWORD *)this + 44))
                      {
                        wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v93);
                        int v73 = *((_DWORD *)this + 43);
                      }
                      *((_DWORD *)this + 43) = v73 + 1;
                      operator new();
                    }
                    uint64_t v75 = *((void *)this + 20);
                    *((_DWORD *)this + 42) = v74 + 1;
                    int v76 = *(CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData **)(v75 + 8 * v74);
                    v95[0] = 0;
                    signed int v77 = (char *)*((void *)a2 + 1);
                    if ((unint64_t)v77 >= *((void *)a2 + 2) || *v77 < 0)
                    {
                      if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v95))return 0; {
                    }
                      }
                    else
                    {
                      v95[0] = *v77;
                      *((void *)a2 + 1) = v77 + 1;
                    }
                    int v78 = *((_DWORD *)a2 + 14);
                    int v79 = *((_DWORD *)a2 + 15);
                    *((_DWORD *)a2 + 14) = v78 + 1;
                    if (v78 >= v79) {
                      return 0;
                    }
                    wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
                    if (!CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::MergePartialFromCodedStream(v76, a2)|| !*((unsigned char *)a2 + 36))
                    {
                      return 0;
                    }
                    wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
                    int v80 = *((_DWORD *)a2 + 14);
                    BOOL v25 = __OFSUB__(v80, 1);
                    int v81 = v80 - 1;
                    if (v81 < 0 == v25) {
                      *((_DWORD *)a2 + 14) = v81;
                    }
                    int v42 = (unsigned char *)*((void *)a2 + 1);
                    if ((unint64_t)v42 >= *((void *)a2 + 2)) {
                      goto LABEL_2;
                    }
                    int v82 = *v42;
                  }
                  while (v82 == 66);
                  if (v82 == 74)
                  {
                    do
                    {
                      *((void *)a2 + 1) = v42 + 1;
LABEL_174:
                      int v83 = *((_DWORD *)this + 49);
                      uint64_t v84 = *((int *)this + 48);
                      if ((int)v84 >= v83)
                      {
                        if (v83 == *((_DWORD *)this + 50))
                        {
                          wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Reserve(v9);
                          int v83 = *((_DWORD *)this + 49);
                        }
                        *((_DWORD *)this + 49) = v83 + 1;
                        operator new();
                      }
                      uint64_t v85 = *((void *)this + 23);
                      *((_DWORD *)this + 48) = v84 + 1;
                      int v86 = *(CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData **)(v85 + 8 * v84);
                      v95[0] = 0;
                      int v87 = (char *)*((void *)a2 + 1);
                      if ((unint64_t)v87 >= *((void *)a2 + 2) || *v87 < 0)
                      {
                        if (!wireless_diagnostics::google::protobuf::io::CodedInputStream::ReadVarint32Fallback(a2, v95))return 0; {
                      }
                        }
                      else
                      {
                        v95[0] = *v87;
                        *((void *)a2 + 1) = v87 + 1;
                      }
                      int v88 = *((_DWORD *)a2 + 14);
                      int v89 = *((_DWORD *)a2 + 15);
                      *((_DWORD *)a2 + 14) = v88 + 1;
                      if (v88 >= v89) {
                        return 0;
                      }
                      wireless_diagnostics::google::protobuf::io::CodedInputStream::PushLimit(a2);
                      if (!CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::MergePartialFromCodedStream(v86, a2)|| !*((unsigned char *)a2 + 36))
                      {
                        return 0;
                      }
                      wireless_diagnostics::google::protobuf::io::CodedInputStream::PopLimit(a2);
                      int v90 = *((_DWORD *)a2 + 14);
                      BOOL v25 = __OFSUB__(v90, 1);
                      int v91 = v90 - 1;
                      if (v91 < 0 == v25) {
                        *((_DWORD *)a2 + 14) = v91;
                      }
                      int v42 = (unsigned char *)*((void *)a2 + 1);
                      uint64_t v92 = (unsigned char *)*((void *)a2 + 2);
                    }
                    while (v42 < v92 && *v42 == 74);
                    if (v42 == v92 && (*((_DWORD *)a2 + 11) || *((_DWORD *)a2 + 6) == *((_DWORD *)a2 + 10)))
                    {
                      *((_DWORD *)a2 + 8) = 0;
                      uint64_t result = 1;
                      *((unsigned char *)a2 + 36) = 1;
                      return result;
                    }
                  }
                }
              }
            }
          }
        }
        continue;
      case 4u:
        int v12 = TagFallback & 7;
        if ((TagFallback & 7) == 0)
        {
          uint64_t result = sub_18DF455D0(34, a2, (uint64_t)v4);
          if (!result) {
            return result;
          }
          goto LABEL_99;
        }
        if (v12 != 2) {
          goto LABEL_33;
        }
        int v19 = (char *)*((void *)a2 + 1);
        unint64_t v20 = *((void *)a2 + 2);
        goto LABEL_85;
      case 5u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_102;
        }
        goto LABEL_33;
      case 6u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_120;
        }
        goto LABEL_33;
      case 7u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_138;
        }
        goto LABEL_33;
      case 8u:
        int v12 = TagFallback & 7;
        if (v12 == 2) {
          goto LABEL_156;
        }
        goto LABEL_33;
      case 9u:
        int v12 = TagFallback & 7;
        if (v12 != 2) {
          goto LABEL_33;
        }
        goto LABEL_174;
      default:
        int v12 = TagFallback & 7;
        goto LABEL_33;
    }
  }
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::SerializeWithCachedSizes(uint64_t this, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a2, uint64_t a3, wireless_diagnostics::google::protobuf::io::CodedOutputStream *a4)
{
  uint64_t v5 = this;
  if (*(unsigned char *)(this + 212))
  {
    uint64_t v6 = *(void *)(this + 8);
    if (!v6)
    {
      CoreNavigation::CLP::LogEntry::RayTracingTileData::protobuf_AddDesc_CoreNavigationCLPRayTracingTileData_2eproto((CoreNavigation::CLP::LogEntry::RayTracingTileData *)this);
      uint64_t v6 = *(void *)(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::default_instance_ + 8);
    }
    this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)1, v6, a2, a4);
  }
  if (*(int *)(v5 + 24) >= 1)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
    this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
    if (*(int *)(v5 + 24) >= 1)
    {
      uint64_t v7 = 0;
      do
      {
        this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint64(a2);
        ++v7;
      }
      while (v7 < *(int *)(v5 + 24));
    }
  }
  if (*(int *)(v5 + 48) > 0)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
    this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
    if (*(int *)(v5 + 48) >= 1)
    {
      uint64_t v8 = 0;
      do
      {
        this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
        ++v8;
      }
      while (v8 < *(int *)(v5 + 48));
    }
  }
  if (*(int *)(v5 + 72) > 0)
  {
    wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
    this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
    if (*(int *)(v5 + 72) >= 1)
    {
      uint64_t v9 = 0;
      do
      {
        this = wireless_diagnostics::google::protobuf::io::CodedOutputStream::WriteVarint32(a2);
        ++v9;
      }
      while (v9 < *(int *)(v5 + 72));
    }
  }
  if (*(int *)(v5 + 96) >= 1)
  {
    uint64_t v10 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)5, *(void *)(*(void *)(v5 + 88) + 8 * v10++), a2, a4);
    while (v10 < *(int *)(v5 + 96));
  }
  if (*(int *)(v5 + 120) >= 1)
  {
    uint64_t v11 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)6, *(void *)(*(void *)(v5 + 112) + 8 * v11++), a2, a4);
    while (v11 < *(int *)(v5 + 120));
  }
  if (*(int *)(v5 + 144) >= 1)
  {
    uint64_t v12 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)7, *(void *)(*(void *)(v5 + 136) + 8 * v12++), a2, a4);
    while (v12 < *(int *)(v5 + 144));
  }
  if (*(int *)(v5 + 168) >= 1)
  {
    uint64_t v13 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)8, *(void *)(*(void *)(v5 + 160) + 8 * v13++), a2, a4);
    while (v13 < *(int *)(v5 + 168));
  }
  if (*(int *)(v5 + 192) >= 1)
  {
    uint64_t v14 = 0;
    do
      this = wireless_diagnostics::google::protobuf::internal::WireFormatLite::WriteMessage((wireless_diagnostics::google::protobuf::internal::WireFormatLite *)9, *(void *)(*(void *)(v5 + 184) + 8 * v14++), a2, a4);
    while (v14 < *(int *)(v5 + 192));
  }
  return this;
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::ByteSize(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *this)
{
  if (*((unsigned char *)this + 212))
  {
    uint64_t v3 = (CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData *)*((void *)this + 1);
    if (!v3)
    {
      CoreNavigation::CLP::LogEntry::RayTracingTileData::protobuf_AddDesc_CoreNavigationCLPRayTracingTileData_2eproto(0);
      uint64_t v3 = *(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData **)(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::default_instance_
                                                                                                + 8);
    }
    uint64_t v4 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayloadMetaData::ByteSize(v3);
    int v5 = (int)v4;
    if (v4 >= 0x80) {
      int v6 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v4);
    }
    else {
      int v6 = 1;
    }
    int v2 = v5 + v6 + 1;
  }
  else
  {
    int v2 = 0;
  }
  if (*((int *)this + 6) < 1)
  {
    LODWORD(v8) = 0;
  }
  else
  {
    uint64_t v7 = 0;
    LODWORD(v8) = 0;
    do
      uint64_t v8 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize64(*(wireless_diagnostics::google::protobuf::io::CodedOutputStream **)(*((void *)this + 2) + 8 * v7++))
                                                                           + v8);
    while (v7 < *((int *)this + 6));
    if ((int)v8 > 0)
    {
      if (v8 >= 0x80) {
        int v9 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v8);
      }
      else {
        int v9 = 1;
      }
      v2 += v9 + 1;
    }
  }
  *((_DWORD *)this + 8) = v8;
  int v10 = v2 + v8;
  int v11 = *((_DWORD *)this + 12);
  if (v11 < 1)
  {
    LODWORD(v13) = 0;
  }
  else
  {
    uint64_t v12 = 0;
    LODWORD(v13) = 0;
    do
    {
      uint64_t v14 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((void *)this + 5)
                                                                                             + 4 * v12);
      if (v14 >= 0x80)
      {
        int v15 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v14);
        int v11 = *((_DWORD *)this + 12);
      }
      else
      {
        int v15 = 1;
      }
      uint64_t v13 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v15 + v13);
      ++v12;
    }
    while (v12 < v11);
    if ((int)v13 > 0)
    {
      if (v13 >= 0x80) {
        int v16 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v13);
      }
      else {
        int v16 = 1;
      }
      v10 += v16 + 1;
    }
  }
  *((_DWORD *)this + 14) = v13;
  int v17 = v10 + v13;
  int v18 = *((_DWORD *)this + 18);
  if (v18 < 1)
  {
    LODWORD(v20) = 0;
  }
  else
  {
    uint64_t v19 = 0;
    LODWORD(v20) = 0;
    do
    {
      uint64_t v21 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)*(unsigned int *)(*((void *)this + 8)
                                                                                             + 4 * v19);
      if (v21 >= 0x80)
      {
        int v22 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v21);
        int v18 = *((_DWORD *)this + 18);
      }
      else
      {
        int v22 = 1;
      }
      unint64_t v20 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)(v22 + v20);
      ++v19;
    }
    while (v19 < v18);
    if ((int)v20 > 0)
    {
      if (v20 >= 0x80) {
        int v23 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v20) + 1;
      }
      else {
        int v23 = 2;
      }
      v17 += v23;
    }
  }
  *((_DWORD *)this + 20) = v20;
  int v24 = *((_DWORD *)this + 24);
  int v25 = v17 + v20 + v24;
  if (v24 >= 1)
  {
    uint64_t v26 = 0;
    do
    {
      int v27 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData::ByteSize(*(CoreNavigation::CLP::LogEntry::RayTracingTileData::FacetInterVisibilityData **)(*((void *)this + 11) + 8 * v26));
      int v28 = (int)v27;
      if (v27 >= 0x80) {
        int v29 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v27);
      }
      else {
        int v29 = 1;
      }
      v25 += v28 + v29;
      ++v26;
    }
    while (v26 < *((int *)this + 24));
  }
  int v30 = *((_DWORD *)this + 30);
  int v31 = v30 + v25;
  if (v30 >= 1)
  {
    uint64_t v32 = 0;
    do
    {
      int v33 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::ByteSize(*(CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData **)(*((void *)this + 14) + 8 * v32));
      int v34 = (int)v33;
      if (v33 >= 0x80) {
        int v35 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v33);
      }
      else {
        int v35 = 1;
      }
      v31 += v34 + v35;
      ++v32;
    }
    while (v32 < *((int *)this + 30));
  }
  int v36 = *((_DWORD *)this + 36);
  int v37 = v36 + v31;
  if (v36 >= 1)
  {
    uint64_t v38 = 0;
    do
    {
      int v39 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::ByteSize(*(CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData **)(*((void *)this + 17) + 8 * v38));
      int v40 = (int)v39;
      if (v39 >= 0x80) {
        int v41 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v39);
      }
      else {
        int v41 = 1;
      }
      v37 += v40 + v41;
      ++v38;
    }
    while (v38 < *((int *)this + 36));
  }
  int v42 = *((_DWORD *)this + 42);
  int v43 = v42 + v37;
  if (v42 >= 1)
  {
    uint64_t v44 = 0;
    do
    {
      uint64_t v45 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::ByteSize(*(CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData **)(*((void *)this + 20) + 8 * v44));
      int v46 = (int)v45;
      if (v45 >= 0x80) {
        int v47 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v45);
      }
      else {
        int v47 = 1;
      }
      v43 += v46 + v47;
      ++v44;
    }
    while (v44 < *((int *)this + 42));
  }
  int v48 = *((_DWORD *)this + 48);
  uint64_t v49 = (v48 + v43);
  if (v48 >= 1)
  {
    uint64_t v50 = 0;
    do
    {
      int v51 = (wireless_diagnostics::google::protobuf::io::CodedOutputStream *)CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData::ByteSize(*(CoreNavigation::CLP::LogEntry::RayTracingTileData::PointFacetVisibilityData **)(*((void *)this + 23) + 8 * v50));
      int v52 = (int)v51;
      if (v51 >= 0x80) {
        int v53 = wireless_diagnostics::google::protobuf::io::CodedOutputStream::VarintSize32Fallback(v51);
      }
      else {
        int v53 = 1;
      }
      uint64_t v49 = (v52 + v49 + v53);
      ++v50;
    }
    while (v50 < *((int *)this + 48));
  }
  *((_DWORD *)this + 52) = v49;
  return v49;
}

void CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::CheckTypeAndMergeFrom(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *this, const wireless_diagnostics::google::protobuf::MessageLite *lpsrc)
{
  CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::MergeFrom(this, lpsrc);
}

void CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::CopyFrom(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *this, const CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *a2)
{
  if (a2 != this)
  {
    (*(void (**)(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *))(*(void *)this + 32))(this);
    CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::MergeFrom(this, a2);
  }
}

uint64_t CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::IsInitialized(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *this)
{
  return 1;
}

CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload::Swap(CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *this, CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *a2)
{
  if (a2 != this)
  {
    uint64_t v3 = this;
    uint64_t v4 = *((void *)this + 1);
    *((void *)this + 1) = *((void *)a2 + 1);
    *((void *)a2 + 1) = v4;
    uint64_t v5 = *((void *)this + 2);
    *((void *)this + 2) = *((void *)a2 + 2);
    uint64_t v6 = *((void *)a2 + 3);
    *((void *)a2 + 2) = v5;
    uint64_t v7 = *((void *)this + 3);
    *((void *)this + 3) = v6;
    *((void *)a2 + 3) = v7;
    uint64_t v8 = *((void *)this + 5);
    *((void *)this + 5) = *((void *)a2 + 5);
    uint64_t v9 = *((void *)a2 + 6);
    *((void *)a2 + 5) = v8;
    uint64_t v10 = *((void *)this + 6);
    *((void *)this + 6) = v9;
    *((void *)a2 + 6) = v10;
    uint64_t v11 = *((void *)this + 8);
    *((void *)this + 8) = *((void *)a2 + 8);
    uint64_t v12 = *((void *)a2 + 9);
    *((void *)a2 + 8) = v11;
    uint64_t v13 = *((void *)this + 9);
    *((void *)this + 9) = v12;
    *((void *)a2 + 9) = v13;
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    this = (CoreNavigation::CLP::LogEntry::RayTracingTileData::RayTracingTilePayload *)wireless_diagnostics::google::protobuf::internal::RepeatedPtrFieldBase::Swap();
    int v14 = *((_DWORD *)v3 + 53);
    *((_DWORD *)v3 + 53) = *((_DWORD *)a2 + 53);
    *((_DWORD *)a2 + 53) = v14;
    int v15 = *((_DWORD *)v3 + 52);
    *((_DWORD *)v3 + 52) = *((_DWORD *)a2 + 52);
    *((_DWORD *)a2 + 52) = v15;
  }
  return this;
}