uint64_t MedicationUserFacingTitleProviding.nonUserSpecifiedName.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v9;

  v4 = (*(uint64_t (**)(void))(a2 + 128))();
  if (v5) {
    return v4;
  }
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 40))(a1, a2);
  if (v6) {
    return v4;
  }
  if (qword_1EBF10F78 != -1) {
    swift_once();
  }
  v9 = (id)qword_1EBF10F60;
  swift_bridgeObjectRetain();
  v7 = sub_1C2B735A0();
  swift_bridgeObjectRelease();

  return v7;
}

uint64_t MedicationUserFacingTitleProviding.userFacingTitle.getter(uint64_t a1, uint64_t a2)
{
  uint64_t result = (*(uint64_t (**)(void))(a2 + 72))();
  if (!v5) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
  }
  uint64_t v6 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0) {
    uint64_t v6 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v6)
  {
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
  }
  return result;
}

uint64_t sub_1C2ADDE84(uint64_t a1, uint64_t a2, SEL *a3)
{
  id v4 = [*v3 *a3];
  if (!v4) {
    return 0;
  }
  unint64_t v5 = v4;
  uint64_t v6 = sub_1C2B73FA0();

  return v6;
}

uint64_t sub_1C2ADDEE8(uint64_t a1, uint64_t a2)
{
  return sub_1C2ADDE84(a1, a2, (SEL *)&selRef_userSpecifiedName);
}

uint64_t MedicationUserFacingTitleProviding.brandOrGenericOrPreferred.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a1 - 8);
  uint64_t v6 = ((uint64_t (*)(void))MEMORY[0x1F4188790])();
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  v11 = (char *)&v21 - v10;
  uint64_t v13 = (*(uint64_t (**)(uint64_t))(v12 + 88))(v9);
  uint64_t v15 = v14;
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v16(v11, v2, a1);
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v11, a1);
  }
  else
  {
    uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 96))(a1, a2);
    uint64_t v18 = v17;
    v16(v8, (uint64_t)v11, a1);
    if (!v18) {
      uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 80))(a1, a2);
    }
    v19 = *(void (**)(char *, uint64_t))(v5 + 8);
    v19(v8, a1);
    v19(v11, a1);
  }
  return v13;
}

uint64_t sub_1C2ADE0C4()
{
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v1 = sub_1C2AE0100(KeyPath, 0x53555F6E65, 0xE500000000000000);
  swift_release();
  return v1;
}

uint64_t sub_1C2ADE124()
{
  return sub_1C2ADE0C4();
}

uint64_t sub_1C2ADE130()
{
  return sub_1C2ADE0C4();
}

uint64_t sub_1C2ADE13C(uint64_t a1, uint64_t a2)
{
  return sub_1C2ADDE84(a1, a2, (SEL *)&selRef_freeTextMedicationName);
}

uint64_t sub_1C2ADE150(uint64_t a1, uint64_t a2)
{
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v4 = sub_1C2AE0100(KeyPath, a2, 0xE500000000000000);
  swift_release();
  return v4;
}

void sub_1C2ADE1A4(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_localizedOntologyPregnancyTrimesterLactationRatings);
  uint64_t v4 = sub_1C2B73EF0();

  *a2 = v4;
}

void sub_1C2ADE20C(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

uint64_t MedicationUserFacingTitleProviding.userFacingSubtitle.getter(uint64_t a1, uint64_t a2)
{
  if (qword_1EBF10F78 != -1) {
    swift_once();
  }
  id v4 = (id)qword_1EBF10F60;
  swift_bridgeObjectRetain();
  sub_1C2B735A0();
  swift_bridgeObjectRelease();

  sub_1C2ADE4F0();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C2B764E0;
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 56))(a1, a2);
  uint64_t v8 = v7;
  *(void *)(inited + 32) = v6;
  *(void *)(inited + 40) = v7;
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 64))(a1, a2);
  uint64_t v11 = v9;
  *(void *)(inited + 48) = v10;
  *(void *)(inited + 56) = v9;
  if (!v8)
  {
    uint64_t v12 = (void *)MEMORY[0x1E4FBC860];
    if (!v9) {
      goto LABEL_14;
    }
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1C2AE08C0(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v14 = v12[2];
  unint64_t v13 = v12[3];
  if (v14 >= v13 >> 1) {
    uint64_t v12 = sub_1C2AE08C0((void *)(v13 > 1), v14 + 1, 1, v12);
  }
  v12[2] = v14 + 1;
  uint64_t v15 = &v12[2 * v14];
  v15[4] = v6;
  v15[5] = v8;
  if (v11)
  {
LABEL_9:
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v12 = sub_1C2AE08C0(0, v12[2] + 1, 1, v12);
    }
    unint64_t v17 = v12[2];
    unint64_t v16 = v12[3];
    if (v17 >= v16 >> 1) {
      uint64_t v12 = sub_1C2AE08C0((void *)(v16 > 1), v17 + 1, 1, v12);
    }
    v12[2] = v17 + 1;
    uint64_t v18 = &v12[2 * v17];
    v18[4] = v10;
    v18[5] = v11;
  }
LABEL_14:
  swift_release();
  sub_1C2ADE56C(0, (unint64_t *)&qword_1EBF10FB0, MEMORY[0x1E4FBB320]);
  sub_1C2AE04F8();
  uint64_t v19 = sub_1C2B73F40();
  unint64_t v21 = v20;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v22 = HIBYTE(v21) & 0xF;
  if ((v21 & 0x2000000000000000) == 0) {
    uint64_t v22 = v19 & 0xFFFFFFFFFFFFLL;
  }
  if (!v22)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v19;
}

void sub_1C2ADE4F0()
{
  if (!qword_1EBF0FDF8)
  {
    sub_1C2B257E0(255, (unint64_t *)&qword_1EBF0FEC8, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
    unint64_t v0 = sub_1C2B74B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBF0FDF8);
    }
  }
}

void sub_1C2ADE56C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, void))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x1E4FBB1A0]);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t MedicationUserFacingTitleProviding.doseForm.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a1 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](a1);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (*(uint64_t (**)(uint64_t))(v9 + 136))(v6);
  if (v11)
  {
    uint64_t v13 = 0;
    uint64_t v15 = 0;
  }
  else
  {
    HKMedicationFreeTextFormTypeCode.localizationKey.getter(v10);
    if (qword_1EBF10F78 != -1) {
      swift_once();
    }
    id v12 = (id)qword_1EBF10F60;
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1C2B735A0();
    uint64_t v15 = v14;
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v2, a1);
  if (!v15) {
    uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 48))(a1, a2);
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, a1);
  return v13;
}

uint64_t MedicationUserFacingTitleProviding.manufacturedOrBasicDoseForm.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a1 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](a1);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (*(uint64_t (**)(uint64_t))(v9 + 104))(v6);
  uint64_t v12 = v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v2, a1);
  if (!v12) {
    uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 112))(a1, a2);
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, a1);
  return v10;
}

uint64_t MedicationUserFacingTitleProviding.unitStrength.getter(uint64_t a1, uint64_t a2)
{
  id v4 = objc_msgSend(self, sel_medicationDoseEventTypeForIdentifier_, *MEMORY[0x1E4F2A040]);
  if (!v4) {
    return 0;
  }
  uint64_t v5 = v4;
  uint64_t v6 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 144))(a1, a2);
  if (v6)
  {
    uint64_t v7 = v6;
    id v8 = objc_msgSend(v6, sel__unit);
    sub_1C2B30274();
    id v9 = objc_msgSend(self, sel_percentUnit);
    char v10 = sub_1C2B745F0();

    id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67BE0]), sel_init);
    uint64_t v12 = v11;
    if (v10) {
      objc_msgSend(v11, sel_setHasSpaceBetweenValueAndUnit_, 0);
    }

    id v13 = objc_msgSend(v7, sel_localizedStringForType_parameters_, v5, v12);
    uint64_t v14 = sub_1C2B73FA0();
  }
  else
  {
    uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 120))(a1, a2);
  }
  return v14;
}

void sub_1C2ADEA80(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

uint64_t HKMedicationUserDomainConcept.brandName.getter()
{
  return sub_1C2ADE150((uint64_t)"ha{'", 0x53555F6E65);
}

uint64_t HKMedicationUserDomainConcept.ontologyLoggingUnitSingular.getter()
{
  return sub_1C2ADE150((uint64_t)&unk_1C2B77598, 0x53552D6E65);
}

uint64_t HKMedicationUserDomainConcept.ontologyLoggingUnitPlural.getter()
{
  return sub_1C2ADE150((uint64_t)&unk_1C2B775E8, 0x53552D6E65);
}

id sub_1C2ADEAD4(SEL *a1)
{
  id v2 = [v1 *a1];
  id v3 = v2;
  if (!v2) {
    return 0;
  }
  id v4 = objc_msgSend(v2, sel_longLongValue);

  return v4;
}

id HKMedicationUserDomainConcept.freeTextMedicationForm.getter()
{
  return sub_1C2ADEAD4((SEL *)&selRef_freeTextMedicationFormCode);
}

uint64_t HKMedicationUserDomainConcept.manufacturedDoseForm.getter()
{
  return sub_1C2ADE150((uint64_t)&unk_1C2B774F8, 0x53555F6E65);
}

uint64_t HKMedicationUserDomainConcept.preferredName.getter()
{
  return sub_1C2ADE150((uint64_t)" a{'", 0x53555F6E65);
}

uint64_t HKMedicationUserDomainConcept.basicDoseForm.getter()
{
}

uint64_t HKMedicationUserDomainConcept.genericName.getter()
{
  return sub_1C2ADE150((uint64_t)&unk_1C2B774A0, 0x53555F6E65);
}

int HKMedicationUserDomainConcept.pregnancyTrimesterLactationRatings.getter@<W0>(int *a1@<X8>)
{
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v3 = sub_1C2AE0100(KeyPath, 0x53555F6E65, 0xE500000000000000);
  uint64_t v5 = v4;
  int result = swift_release();
  if (v5)
  {
    v7._countAndFlagsBits = v3;
    v7._object = v5;
    int result = (int)PregnancyTrimesterLactationRatings.init(ratingsString:)(v7);
    int v8 = v9;
    if (v9 == 4) {
      int v8 = 4;
    }
  }
  else
  {
    int v8 = 4;
  }
  *a1 = v8;
  return result;
}

uint64_t HKMedicationUserDomainConcept.componentNames.getter()
{
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v1 = sub_1C2ADEC88(KeyPath, 0x53552D6E65, 0xE500000000000000);
  swift_release();
  return v1;
}

uint64_t sub_1C2ADEC88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4 = v3;
  uint64_t v7 = sub_1C2B73760();
  uint64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    uint64_t v34 = a2;
    uint64_t v35 = a3;
    uint64_t v9 = v7 + 40;
    do
    {
      id v10 = objc_allocWithZone(MEMORY[0x1E4F1CA20]);
      swift_bridgeObjectRetain();
      id v11 = (void *)sub_1C2B73F60();
      id v12 = objc_msgSend(v10, sel_initWithLocaleIdentifier_, v11);

      id v13 = objc_msgSend(v12, sel_languageCode);
      uint64_t v14 = sub_1C2B73FA0();
      uint64_t v16 = v15;

      id v17 = objc_msgSend(v12, sel_regionCode);
      if (v17)
      {
        uint64_t v18 = v17;
        uint64_t v19 = sub_1C2B73FA0();
        unint64_t v21 = v20;
      }
      else
      {
        unint64_t v21 = 0xE200000000000000;
        uint64_t v19 = 21333;
      }
      sub_1C2AE045C(0, (unint64_t *)&qword_1EBF110A8, MEMORY[0x1E4FBBE00]);
      uint64_t v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = xmmword_1C2B764E0;
      *(void *)(v22 + 32) = v14;
      *(void *)(v22 + 40) = v16;
      *(void *)(v22 + 48) = v19;
      *(void *)(v22 + 56) = v21;
      sub_1C2AE045C(0, (unint64_t *)&qword_1EBF10FB0, MEMORY[0x1E4FBB320]);
      sub_1C2AE04F8();
      uint64_t v23 = sub_1C2B73F40();
      uint64_t v25 = v24;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      id v26 = v4;
      swift_getAtKeyPath();

      if (*(void *)(v36 + 16))
      {
        unint64_t v27 = sub_1C2AE056C(v23, v25);
        if (v28)
        {
          uint64_t v29 = *(void *)(*(void *)(v36 + 56) + 8 * v27);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          goto LABEL_17;
        }
      }
      v9 += 16;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
    a2 = v34;
    a3 = v35;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  id v30 = v4;
  swift_getAtKeyPath();

  if (*(void *)(v36 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v31 = sub_1C2AE056C(a2, a3);
    if (v32)
    {
      uint64_t v29 = *(void *)(*(void *)(v36 + 56) + 8 * v31);
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v29 = 0;
    }
LABEL_17:
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v29 = 0;
  }
  swift_bridgeObjectRelease();
  return v29;
}

uint64_t getEnumTagSinglePayload for PregnancyTrimesterLactationRatings(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && a1[4]) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 4;
  int v5 = v3 - 4;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

ValueMetadata *type metadata accessor for PregnancyTrimesterLactationRatings()
{
  return &type metadata for PregnancyTrimesterLactationRatings;
}

uint64_t sub_1C2ADEFB0(unint64_t *a1, void (*a2)(uint64_t))
{
  sub_1C2ADF050(0, a1, a2);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1C2B73920();
  swift_release();
  swift_release();
  swift_release();
  return v3;
}

void sub_1C2ADF050(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    type metadata accessor for MedicationsExperienceStore();
    a3(255);
    unint64_t v5 = sub_1C2B73940();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1C2ADF0BC(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_localizedOntologyComponentNames);
  sub_1C2AE045C(0, (unint64_t *)&qword_1EBF10FB0, MEMORY[0x1E4FBB320]);
  uint64_t v4 = sub_1C2B73EF0();

  *a2 = v4;
}

uint64_t static Logger.medication.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EBF11340 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1C2B73A90();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EBF11348);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t type metadata accessor for MedicationsExperienceStore()
{
  return self;
}

uint64_t static MedicationsExperienceStore.shared.getter()
{
  if (qword_1EBF10BE0 != -1) {
    swift_once();
  }
  return swift_retain();
}

uint64_t MedicationsExperienceStore.listManager.getter()
{
  return sub_1C2ADEFB0((unint64_t *)&qword_1EBF0FFE8, MEMORY[0x1E4F677E8]);
}

uint64_t sub_1C2ADF2A4(void *a1, void *a2, void (*a3)(void, void, void))
{
  sub_1C2AE0E9C();
  uint64_t v62 = *(void *)(v7 - 8);
  uint64_t v63 = v7;
  MEMORY[0x1F4188790](v7);
  v61 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2AE0F7C();
  uint64_t v68 = v9;
  MEMORY[0x1F4188790](v9);
  v67 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2AE0F18(0, (unint64_t *)&unk_1EBF0FD88, (uint64_t (*)(uint64_t))sub_1C2AE0F7C, MEMORY[0x1E4F67098]);
  uint64_t v66 = v11;
  uint64_t v70 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  v64 = (char *)&v57 - v12;
  uint64_t v13 = MEMORY[0x1E4FBB390];
  sub_1C2AE0050(0, (unint64_t *)&unk_1EBF0FD70, MEMORY[0x1E4FBB390], MEMORY[0x1E4F67098]);
  uint64_t v65 = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  id v17 = (char *)&v57 - v16;
  sub_1C2AE0050(0, (unint64_t *)&unk_1EBF0FE00, v13, MEMORY[0x1E4F65FF8]);
  uint64_t v19 = v18;
  uint64_t v20 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v22 = (char *)&v57 - v21;
  uint64_t v69 = v15;
  if (a2)
  {
    id v23 = a2;
  }
  else
  {
    id v59 = a1;
    v60 = a3;
    uint64_t v58 = *MEMORY[0x1E4F669C0];
    if (qword_1EBF0FF88 != -1) {
      swift_once();
    }
    id v24 = objc_allocWithZone(MEMORY[0x1E4F2B138]);
    swift_bridgeObjectRetain();
    id v25 = v59;
    id v26 = (void *)sub_1C2B73F60();
    swift_bridgeObjectRelease();
    id v23 = objc_msgSend(v24, sel_initWithCategory_domainName_healthStore_, v58, v26, v25);

    a3 = v60;
  }
  *(void *)(v3 + 16) = v23;
  *(void *)(v3 + 24) = a3;
  uint64_t v27 = qword_1EBF0FFA0;
  id v28 = a2;
  uint64_t v29 = a3;
  id v30 = v23;
  if (v27 != -1) {
    swift_once();
  }
  LOBYTE(v71) = 0;
  swift_bridgeObjectRetain();
  sub_1C2B73960();
  unint64_t v31 = *(void (**)(void, void, void))(v20 + 32);
  v31(v3+ OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__isAlcoholDrugInteractionFactorEnabled, v22, v19);
  uint64_t v32 = qword_1EBF0FFD8;
  id v33 = *(id *)(v3 + 16);
  if (v32 != -1) {
    swift_once();
  }
  LOBYTE(v71) = 0;
  swift_bridgeObjectRetain();
  sub_1C2B73960();
  v31(v3+ OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__isMarijuanaDrugInteractionFactorEnabled, v22, v19);
  uint64_t v34 = qword_1EBF0FFC0;
  id v35 = *(id *)(v3 + 16);
  if (v34 != -1) {
    swift_once();
  }
  LOBYTE(v71) = 0;
  swift_bridgeObjectRetain();
  sub_1C2B73960();
  v31(v3+ OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__isTobaccoDrugInteractionFactorEnabled, v22, v19);
  if (qword_1EBF11048 != -1) {
    swift_once();
  }
  LOBYTE(v71) = 1;
  uint64_t v36 = v29;
  swift_bridgeObjectRetain();
  sub_1C2B738F0();
  uint64_t v37 = v69 + 32;
  v38 = *(void (**)(void, void, void))(v69 + 32);
  uint64_t v39 = v65;
  v38(v3 + OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__areDoseRemindersEnabled, v17, v65);
  if (qword_1EBF11060 != -1) {
    swift_once();
  }
  LOBYTE(v71) = 0;
  v40 = v36;
  swift_bridgeObjectRetain();
  sub_1C2B738F0();
  v38(v3 + OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__areFollowUpNotificationsEnabled, v17, v39);
  if (qword_1EBF11078 != -1) {
    swift_once();
  }
  LOBYTE(v71) = 0;
  v41 = v40;
  swift_bridgeObjectRetain();
  sub_1C2B738F0();
  v38(v3 + OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__didShowLifeStyleFactorsSelectionPage, v17, v39);
  if (qword_1EBF11098 != -1) {
    swift_once();
  }
  LOBYTE(v71) = 0;
  v42 = v41;
  swift_bridgeObjectRetain();
  sub_1C2B738F0();
  v38(v3+ OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__didDismissCHRAddAccountTileInCategoryRoom, v17, v39);
  if (qword_1EBF11030 != -1) {
    swift_once();
  }
  LOBYTE(v71) = 0;
  v43 = v42;
  swift_bridgeObjectRetain();
  sub_1C2B738F0();
  v38(v3 + OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__isShardCheckOverrideEnabled, v17, v39);
  if (qword_1EBF0FF58 != -1) {
    swift_once();
  }
  LOBYTE(v71) = 0;
  v44 = v43;
  swift_bridgeObjectRetain();
  sub_1C2B738F0();
  v38(v3+ OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__alwaysShowLifeStyleFactorsSelectionPage, v17, v39);
  if (qword_1EBF0FF00 != -1) {
    swift_once();
  }
  LOBYTE(v71) = 0;
  v45 = v44;
  swift_bridgeObjectRetain();
  sub_1C2B738F0();
  v38(v3 + OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__showMinorDrugInteractions, v17, v39);
  if (qword_1EBF11000 != -1) {
    swift_once();
  }
  LOBYTE(v71) = 1;
  id v46 = v45;
  swift_bridgeObjectRetain();
  sub_1C2B738F0();
  v38(v3 + OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__timeZoneExperienceEnabled, v17, v39);
  if (qword_1EBF0FEE0 != -1) {
    swift_once();
  }
  LOBYTE(v71) = 0;
  id v47 = v46;
  swift_bridgeObjectRetain();
  sub_1C2B738F0();
  uint64_t v69 = v37;
  v60 = v38;
  v38(v3 + OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__didDismissFollowUpTip, v17, v39);
  if (qword_1EBF0FF38 != -1) {
    swift_once();
  }
  uint64_t v48 = sub_1C2B73710();
  id v59 = *(id *)(*(void *)(v48 - 8) + 56);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v59)(v67, 1, 1, v48);
  id v49 = v47;
  swift_bridgeObjectRetain();
  v50 = v64;
  sub_1C2B738F0();
  v51 = *(void (**)(void, void, void))(v70 + 32);
  v70 += 32;
  v51(v3+ OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__scheduleCompatibilityTileDismissalDate, v50, v66);
  if (qword_1EBF0FF70 != -1) {
    swift_once();
  }
  uint64_t v71 = 0;
  uint64_t v72 = 0;
  sub_1C2AE0050(0, (unint64_t *)&qword_1EBF0FEC8, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
  id v52 = v49;
  swift_bridgeObjectRetain();
  v53 = v61;
  sub_1C2B738F0();
  (*(void (**)(uint64_t, char *, uint64_t))(v62 + 32))(v3+ OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__scheduleCompatibilityLearnMoreOverrideURL, v53, v63);
  if (qword_1EBF0FF18 != -1) {
    swift_once();
  }
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v59)(v67, 1, 1, v48);
  id v54 = v52;
  swift_bridgeObjectRetain();
  v55 = v64;
  sub_1C2B738F0();
  v51(v3+ OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__medicationsCategoryRoomLastEnteredDate, v55, v66);
  LOBYTE(v71) = 0;
  sub_1C2B738F0();
  v60(v3 + OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__allowEndDatesInPast, v17, v65);
  return v3;
}

void sub_1C2AE0050(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1C2AE009C(id *a1@<X0>, SEL *a2@<X3>, uint64_t *a3@<X8>)
{
  id v4 = [*a1 *a2];
  uint64_t v5 = sub_1C2B73EF0();

  *a3 = v5;
}

uint64_t sub_1C2AE0100(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_1C2B73760();
  id v8 = v3;
  swift_retain();
  uint64_t v9 = sub_1C2AE0764(v7, v8, a1);
  swift_bridgeObjectRelease();

  swift_release();
  if (v9[2])
  {
    uint64_t v10 = v9[4];
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_bridgeObjectRelease();
    id v11 = v8;
    swift_getAtKeyPath();

    if (*(void *)(v15 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v12 = sub_1C2AE056C(a2, a3);
      if (v13)
      {
        uint64_t v10 = *(void *)(*(void *)(v15 + 56) + 16 * v12);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v10 = 0;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v10 = 0;
    }
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1C2AE0238@<X0>(void *a1@<X1>, void *a2@<X8>)
{
  id v4 = objc_allocWithZone(MEMORY[0x1E4F1CA20]);
  swift_bridgeObjectRetain();
  uint64_t v5 = (void *)sub_1C2B73F60();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v4, sel_initWithLocaleIdentifier_, v5);

  id v7 = objc_msgSend(v6, sel_languageCode);
  uint64_t v8 = sub_1C2B73FA0();
  uint64_t v10 = v9;

  id v11 = objc_msgSend(v6, sel_regionCode);
  if (v11)
  {
    unint64_t v12 = v11;
    uint64_t v13 = sub_1C2B73FA0();
    unint64_t v15 = v14;
  }
  else
  {
    unint64_t v15 = 0xE200000000000000;
    uint64_t v13 = 21333;
  }
  sub_1C2AE045C(0, (unint64_t *)&qword_1EBF110A8, MEMORY[0x1E4FBBE00]);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1C2B764E0;
  *(void *)(v16 + 32) = v8;
  *(void *)(v16 + 40) = v10;
  *(void *)(v16 + 48) = v13;
  *(void *)(v16 + 56) = v15;
  sub_1C2AE045C(0, (unint64_t *)&qword_1EBF10FB0, MEMORY[0x1E4FBB320]);
  sub_1C2AE04F8();
  uint64_t v17 = sub_1C2B73F40();
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();

  id v20 = a1;
  swift_getAtKeyPath();

  if (*(void *)(v27 + 16) && (unint64_t v21 = sub_1C2AE056C(v17, v19), (v22 & 1) != 0))
  {
    id v23 = (uint64_t *)(*(void *)(v27 + 56) + 16 * v21);
    uint64_t v24 = *v23;
    uint64_t v25 = v23[1];
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v24 = 0;
    uint64_t v25 = 0;
  }
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v24;
  a2[1] = v25;
  return result;
}

void sub_1C2AE045C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, void))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x1E4FBB1A0]);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C2AE04AC(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_1C2AE04F8()
{
  unint64_t result = qword_1EBF10FB8;
  if (!qword_1EBF10FB8)
  {
    sub_1C2AFB70C(255, (unint64_t *)&qword_1EBF10FB0, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBF10FB8);
  }
  return result;
}

unint64_t sub_1C2AE056C(uint64_t a1, uint64_t a2)
{
  sub_1C2B74C20();
  sub_1C2B74070();
  uint64_t v4 = sub_1C2B74C60();
  return sub_1C2AE05E4(a1, a2, v4);
}

unint64_t sub_1C2AE05E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1C2B74B50() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1C2B74B50() & 1) == 0);
    }
  }
  return v6;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

void *sub_1C2AE0764(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v19 = a3;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v6 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
  id v7 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v9 = *v6;
    uint64_t v17 = *(v6 - 1);
    uint64_t v18 = v9;
    swift_bridgeObjectRetain();
    sub_1C2AE0238(a2, &v15);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7;
    }
    swift_bridgeObjectRelease();
    uint64_t v10 = v16;
    if (v16)
    {
      uint64_t v11 = v15;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v7 = sub_1C2AE08C0(0, v7[2] + 1, 1, v7);
      }
      unint64_t v13 = v7[2];
      unint64_t v12 = v7[3];
      if (v13 >= v12 >> 1) {
        id v7 = sub_1C2AE08C0((void *)(v12 > 1), v13 + 1, 1, v7);
      }
      v7[2] = v13 + 1;
      uint64_t v8 = &v7[2 * v13];
      v8[4] = v11;
      v8[5] = v10;
    }
    v6 += 2;
    --v4;
  }
  while (v4);
  swift_bridgeObjectRelease();
  return v7;
}

void *sub_1C2AE08C0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C2AE09F4(0, (unint64_t *)&qword_1EBF110A8, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      unint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      unint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C2AE0A40(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void sub_1C2AE09F4(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1C2AE0A40(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C2B74A10();
  __break(1u);
  return result;
}

uint64_t static NSUserDefaults.didDismissCHRAddAccountTileInCategoryRoom.getter()
{
  return sub_1C2AE0BB8(&qword_1EBF11098, &qword_1EBF11080);
}

id static NSUserDefaults.medications.getter()
{
  if (qword_1EBF11010 != -1) {
    swift_once();
  }
  unint64_t v0 = (void *)qword_1EBF11008;
  return v0;
}

uint64_t sub_1C2AE0BB8(void *a1, uint64_t *a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = *a2;
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_1C2AE0C0C()
{
  uint64_t v0 = sub_1C2B73A90();
  __swift_allocate_value_buffer(v0, qword_1EBF11348);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBF11348);
  id v1 = (id)HKLogMedication();
  return sub_1C2B73AA0();
}

uint64_t type metadata accessor for MedicationOntologyContentProvider()
{
  return self;
}

uint64_t MedicationOntologyContentProvider.init(with:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return v1;
}

id MedicationsExperienceStore.healthStore.getter()
{
  return *(id *)(v0 + 16);
}

uint64_t type metadata accessor for MedicationsSettingsManager()
{
  uint64_t result = qword_1EBF10D38;
  if (!qword_1EBF10D38) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t MedicationsSettingsManager.didDismissCHRAddAccountTileInCategoryRoom.getter()
{
  return sub_1C2AE0D28((unint64_t *)&unk_1EBF0FD70, MEMORY[0x1E4F67098], &OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__didDismissCHRAddAccountTileInCategoryRoom, MEMORY[0x1E4F67088]);
}

uint64_t sub_1C2AE0D28(unint64_t *a1, uint64_t (*a2)(void, uint64_t), void *a3, void (*a4)(unsigned char *__return_ptr, uint64_t))
{
  sub_1C2AE0050(0, a1, MEMORY[0x1E4FBB390], a2);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  int64_t v11 = &v14[-v10];
  uint64_t v12 = v4 + *a3;
  swift_beginAccess();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v8);
  a4(&v14[7], v8);
  (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
  return v14[7];
}

id MedicationsSettingsManager.userDefaults.getter()
{
  return *(id *)(v0 + 24);
}

uint64_t MedicationsSettingsManager.init(healthStore:keyValueDomain:userDefaults:)(void *a1, void *a2, void (*a3)(void, void, void))
{
  uint64_t v5 = sub_1C2ADF2A4(a1, a2, a3);

  return v5;
}

void sub_1C2AE0E9C()
{
  if (!qword_1EBF0FD90)
  {
    sub_1C2AE0050(255, (unint64_t *)&qword_1EBF0FEC8, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
    unint64_t v0 = sub_1C2B73900();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBF0FD90);
    }
  }
}

void sub_1C2AE0F18(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C2AE0F7C()
{
  if (!qword_1EBF11360)
  {
    sub_1C2B73710();
    unint64_t v0 = sub_1C2B74630();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBF11360);
    }
  }
}

HealthMedicationsExperience::PregnancyTrimesterLactationRatings::Rating_optional __swiftcall PregnancyTrimesterLactationRatings.Rating.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 4;
  if ((unint64_t)rawValue < 4) {
    char v2 = rawValue;
  }
  *uint64_t v1 = v2;
  return (HealthMedicationsExperience::PregnancyTrimesterLactationRatings::Rating_optional)rawValue;
}

uint64_t PregnancyTrimesterLactationRatings.Rating.rawValue.getter()
{
  return *v0;
}

BOOL sub_1C2AE0FF0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1C2AE1004()
{
  return sub_1C2B74C60();
}

uint64_t sub_1C2AE104C()
{
  return sub_1C2B74C30();
}

uint64_t sub_1C2AE1078()
{
  return sub_1C2B74C60();
}

HealthMedicationsExperience::PregnancyTrimesterLactationRatings::Rating_optional sub_1C2AE10BC(Swift::Int *a1)
{
  return PregnancyTrimesterLactationRatings.Rating.init(rawValue:)(*a1);
}

void sub_1C2AE10C4(void *a1@<X8>)
{
  *a1 = *v1;
}

void PregnancyTrimesterLactationRatings.pregnancyFirstTrimester.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

void PregnancyTrimesterLactationRatings.pregnancySecondTrimester.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 1);
}

void PregnancyTrimesterLactationRatings.pregnancyThirdTrimester.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 2);
}

void PregnancyTrimesterLactationRatings.lactation.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 3);
}

HealthMedicationsExperience::PregnancyTrimesterLactationRatings __swiftcall PregnancyTrimesterLactationRatings.init(firstTrimester:secondTrimester:thirdTrimester:lactation:)(HealthMedicationsExperience::PregnancyTrimesterLactationRatings::Rating firstTrimester, HealthMedicationsExperience::PregnancyTrimesterLactationRatings::Rating secondTrimester, HealthMedicationsExperience::PregnancyTrimesterLactationRatings::Rating thirdTrimester, HealthMedicationsExperience::PregnancyTrimesterLactationRatings::Rating lactation)
{
  char v5 = *(unsigned char *)secondTrimester;
  char v6 = *(unsigned char *)thirdTrimester;
  char v7 = *(unsigned char *)lactation;
  *uint64_t v4 = *(unsigned char *)firstTrimester;
  v4[1] = v5;
  v4[2] = v6;
  v4[3] = v7;
  result.pregnancyFirstTrimester = firstTrimester;
  return result;
}

HealthMedicationsExperience::PregnancyTrimesterLactationRatings_optional __swiftcall PregnancyTrimesterLactationRatings.init(ratingsString:)(Swift::String ratingsString)
{
  char v2 = v1;
  Swift::String v21 = ratingsString;
  unint64_t v3 = sub_1C2AE1354();
  uint64_t v4 = MEMORY[0x1C8766B00](44, 0xE100000000000000, 0x7FFFFFFFFFFFFFFFLL, 1, MEMORY[0x1E4FBB1A0], v3);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    char v6 = (unint64_t *)(v4 + 56);
    char v7 = (char *)MEMORY[0x1E4FBC860];
    while (1)
    {
      unint64_t v9 = *(v6 - 3);
      unint64_t v8 = *(v6 - 2);
      if ((v8 ^ v9) >= 0x4000)
      {
        unint64_t v11 = *(v6 - 1);
        unint64_t v10 = *v6;
        if ((*v6 & 0x1000000000000000) != 0)
        {
          swift_bridgeObjectRetain();
          unint64_t v13 = (unint64_t)sub_1C2AE265C(v9, v8, v11, v10, 10);
          char v18 = v17;
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0) {
            goto LABEL_12;
          }
        }
        else
        {
          if ((v10 & 0x2000000000000000) != 0)
          {
            v21._countAndFlagsBits = *(v6 - 1);
            v21._object = (void *)(v10 & 0xFFFFFFFFFFFFFFLL);
            uint64_t v12 = &v21;
          }
          else if ((v11 & 0x1000000000000000) != 0)
          {
            uint64_t v12 = (Swift::String *)((v10 & 0xFFFFFFFFFFFFFFFLL) + 32);
          }
          else
          {
            uint64_t v12 = (Swift::String *)sub_1C2B748B0();
          }
          unint64_t v13 = sub_1C2AE29CC((uint64_t)v12, v9, v8, v11, v10, 10);
          if ((v14 & 1) == 0)
          {
LABEL_12:
            if (v13 <= 3)
            {
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                char v7 = sub_1C2AE2548(0, *((void *)v7 + 2) + 1, 1, v7, &qword_1EA32B750, (uint64_t)&type metadata for PregnancyTrimesterLactationRatings.Rating);
              }
              unint64_t v16 = *((void *)v7 + 2);
              unint64_t v15 = *((void *)v7 + 3);
              if (v16 >= v15 >> 1) {
                char v7 = sub_1C2AE2548((char *)(v15 > 1), v16 + 1, 1, v7, &qword_1EA32B750, (uint64_t)&type metadata for PregnancyTrimesterLactationRatings.Rating);
              }
              *((void *)v7 + 2) = v16 + 1;
              v7[v16 + 32] = v13;
            }
          }
        }
      }
      v6 += 4;
      if (!--v5)
      {
        swift_bridgeObjectRelease();
        goto LABEL_22;
      }
    }
  }
  char v7 = (char *)MEMORY[0x1E4FBC860];
LABEL_22:
  swift_bridgeObjectRelease();
  if (*((void *)v7 + 2) == 4) {
    int v19 = *((_DWORD *)v7 + 8);
  }
  else {
    int v19 = 4;
  }
  HealthMedicationsExperience::PregnancyTrimesterLactationRatings_optional v20 = (HealthMedicationsExperience::PregnancyTrimesterLactationRatings_optional)swift_bridgeObjectRelease();
  *char v2 = v19;
  return v20;
}

unint64_t sub_1C2AE1354()
{
  unint64_t result = qword_1EBF11370;
  if (!qword_1EBF11370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBF11370);
  }
  return result;
}

HealthMedicationsExperience::PregnancyTrimesterLactationRatings_optional __swiftcall PregnancyTrimesterLactationRatings.init(ratings:)(Swift::OpaquePointer ratings)
{
  char v2 = v1;
  if (*((void *)ratings._rawValue + 2) == 4) {
    int v3 = *((_DWORD *)ratings._rawValue + 8);
  }
  else {
    int v3 = 4;
  }
  HealthMedicationsExperience::PregnancyTrimesterLactationRatings_optional v4 = (HealthMedicationsExperience::PregnancyTrimesterLactationRatings_optional)swift_bridgeObjectRelease();
  *char v2 = v3;
  return v4;
}

BOOL PregnancyTrimesterLactationRatings.anyPregnancyRatingCritical.getter()
{
  return *v0 == 3 || v0[1] == 3 || v0[2] == 3;
}

BOOL PregnancyTrimesterLactationRatings.lactationRatingCritical.getter()
{
  return *(unsigned char *)(v0 + 3) == 3;
}

uint64_t sub_1C2AE1424(uint64_t a1)
{
  uint64_t v2 = sub_1C2AE3394(&qword_1EA32B7B0, type metadata accessor for HKError);
  return MEMORY[0x1F40E6E20](a1, v2);
}

uint64_t sub_1C2AE1490(uint64_t a1)
{
  uint64_t v2 = sub_1C2AE3394(&qword_1EA32B7B0, type metadata accessor for HKError);
  return MEMORY[0x1F40E6E10](a1, v2);
}

uint64_t sub_1C2AE1500(uint64_t a1)
{
  uint64_t v2 = sub_1C2AE3394((unint64_t *)&qword_1EA32B7E8, type metadata accessor for HKError);
  return MEMORY[0x1F40E4480](a1, v2);
}

id sub_1C2AE156C()
{
  return *v0;
}

uint64_t sub_1C2AE1574@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_1C2AE157C(uint64_t a1, uint64_t a2)
{
  return sub_1C2AE16E8(a1, a2, MEMORY[0x1E4F27EB8]);
}

uint64_t sub_1C2AE1594(uint64_t a1, id *a2)
{
  uint64_t result = sub_1C2B73F80();
  *a2 = 0;
  return result;
}

uint64_t sub_1C2AE160C(uint64_t a1, id *a2)
{
  char v3 = sub_1C2B73F90();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_1C2AE168C@<X0>(uint64_t *a1@<X8>)
{
  sub_1C2B73FA0();
  uint64_t v2 = sub_1C2B73F60();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1C2AE16D0(uint64_t a1, uint64_t a2)
{
  return sub_1C2AE16E8(a1, a2, MEMORY[0x1E4FBB198]);
}

uint64_t sub_1C2AE16E8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_1C2B73FA0();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1C2AE172C()
{
  sub_1C2B73FA0();
  sub_1C2B74070();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2AE1780()
{
  sub_1C2B73FA0();
  sub_1C2B74C20();
  sub_1C2B74070();
  uint64_t v0 = sub_1C2B74C60();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C2AE17F4(uint64_t a1, uint64_t a2)
{
  return sub_1C2AE1868(a1, a2, MEMORY[0x1E4FBC3C0]);
}

uint64_t sub_1C2AE180C()
{
  return sub_1C2B74C50();
}

uint64_t sub_1C2AE1838(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2AE1904(a1, a2, a3, MEMORY[0x1E4FBC3C0]);
}

uint64_t sub_1C2AE1850(uint64_t a1, uint64_t a2)
{
  return sub_1C2AE1868(a1, a2, MEMORY[0x1E4FBC3B8]);
}

uint64_t sub_1C2AE1868(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v5 = *v3;
  sub_1C2B74C20();
  a3(v5);
  return sub_1C2B74C60();
}

uint64_t sub_1C2AE18C0()
{
  return sub_1C2B74C30();
}

uint64_t sub_1C2AE18EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2AE1904(a1, a2, a3, MEMORY[0x1E4FBC3B8]);
}

uint64_t sub_1C2AE1904(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v6 = *v4;
  sub_1C2B74C20();
  a4(v6);
  return sub_1C2B74C60();
}

uint64_t sub_1C2AE1958()
{
  return sub_1C2B73FA0();
}

uint64_t sub_1C2AE1968(uint64_t a1)
{
  uint64_t v2 = sub_1C2AE3394((unint64_t *)&qword_1EA32B7E8, type metadata accessor for HKError);
  return MEMORY[0x1F40E44F0](a1, v2);
}

uint64_t sub_1C2AE19D4(uint64_t a1)
{
  uint64_t v2 = sub_1C2AE3394((unint64_t *)&qword_1EA32B7E8, type metadata accessor for HKError);
  return MEMORY[0x1F40E44A8](a1, v2);
}

uint64_t sub_1C2AE1A40(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_1C2AE3394((unint64_t *)&qword_1EA32B7E8, type metadata accessor for HKError);
  id v5 = a1;
  return MEMORY[0x1F40E4498](v5, a2, v4);
}

uint64_t sub_1C2AE1AD0()
{
  id v1 = *v0;
  uint64_t v2 = sub_1C2B74610();

  return v2;
}

uint64_t sub_1C2AE1B08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C2AE3394((unint64_t *)&qword_1EA32B7E8, type metadata accessor for HKError);
  return MEMORY[0x1F40E44D8](a1, a2, v4);
}

uint64_t sub_1C2AE1B84()
{
  return sub_1C2B74C60();
}

void *sub_1C2AE1BE4@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_1C2AE1BF4(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_1C2AE1C00()
{
  uint64_t v0 = sub_1C2B73FA0();
  uint64_t v2 = v1;
  if (v0 == sub_1C2B73FA0() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_1C2B74B50();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1C2AE1C8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C2AE3394((unint64_t *)&qword_1EA32B7E8, type metadata accessor for HKError);
  return MEMORY[0x1F40E44B8](a1, a2, a3, v6);
}

BOOL sub_1C2AE1D10(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1C2AE1D24@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1C2B73F60();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1C2AE1D6C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C2B73FA0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C2AE1D98(uint64_t a1)
{
  uint64_t v2 = sub_1C2AE3394(&qword_1EBF107C0, type metadata accessor for Key);
  uint64_t v3 = sub_1C2AE3394(&qword_1EA32B7F8, type metadata accessor for Key);
  uint64_t v4 = MEMORY[0x1E4FBB1B0];
  return MEMORY[0x1F4185450](a1, v2, v3, v4);
}

uint64_t sub_1C2AE1E54(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C2AE2054(a1, a2, a3, a4, &qword_1EA32B748, (void (*)(uint64_t))type metadata accessor for MedicationDoseEventUpdateModel, type metadata accessor for MedicationDoseEventUpdateModel, type metadata accessor for MedicationDoseEventUpdateModel);
}

uint64_t sub_1C2AE1E9C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C2AE2054(a1, a2, a3, a4, &qword_1EA32B740, (void (*)(uint64_t))type metadata accessor for MedicationDoseEventLogSource, type metadata accessor for MedicationDoseEventLogSource, type metadata accessor for MedicationDoseEventLogSource);
}

void *sub_1C2AE1EE4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C2AE3930(0, &qword_1EA32B730, (void (*)(uint64_t))sub_1C2AE3984);
      unint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      unint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      unint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C2AE33DC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C2AE200C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C2AE2054(a1, a2, a3, a4, &qword_1EA32B728, MEMORY[0x1E4F27990], MEMORY[0x1E4F27990], MEMORY[0x1E4F27990]);
}

uint64_t sub_1C2AE2054(char a1, int64_t a2, char a3, unint64_t a4, unint64_t *a5, void (*a6)(uint64_t), uint64_t (*a7)(void), uint64_t (*a8)(void))
{
  if (a3)
  {
    unint64_t v12 = *(void *)(a4 + 24);
    uint64_t v13 = v12 >> 1;
    if ((uint64_t)(v12 >> 1) < a2)
    {
      if (v13 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v13 = v12 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v12 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v13 = a2;
      }
    }
  }
  else
  {
    uint64_t v13 = a2;
  }
  uint64_t v14 = *(void *)(a4 + 16);
  if (v13 <= v14) {
    uint64_t v15 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v15 = v13;
  }
  if (!v15)
  {
    int v19 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  sub_1C2AE3930(0, a5, a6);
  uint64_t v16 = *(void *)(a7(0) - 8);
  uint64_t v17 = *(void *)(v16 + 72);
  unint64_t v18 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  int v19 = (void *)swift_allocObject();
  size_t v20 = _swift_stdlib_malloc_size(v19);
  if (!v17 || (v20 - v18 == 0x8000000000000000 ? (BOOL v21 = v17 == -1) : (BOOL v21 = 0), v21))
  {
LABEL_29:
    uint64_t result = sub_1C2B74980();
    __break(1u);
    return result;
  }
  v19[2] = v14;
  v19[3] = 2 * ((uint64_t)(v20 - v18) / v17);
LABEL_19:
  uint64_t v22 = *(void *)(a7(0) - 8);
  unint64_t v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  unint64_t v24 = (unint64_t)v19 + v23;
  if (a1)
  {
    if ((unint64_t)v19 < a4 || v24 >= a4 + v23 + *(void *)(v22 + 72) * v14)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v19 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1C2AE35D8(0, v14, v24, a4, a8);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v19;
}

void *sub_1C2AE22DC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C2AE09F4(0, &qword_1EA32B720, (uint64_t)&type metadata for MedicationSearchCluster, MEMORY[0x1E4FBBE00]);
      unint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C2AE34E4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C2AE240C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C2AE3930(0, (unint64_t *)&unk_1EA32B710, type metadata accessor for HKMedicationFreeTextFormTypeCode);
      unint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C2AE3734(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_1C2AE2534(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1C2AE2548(a1, a2, a3, a4, &qword_1EA32B708, (uint64_t)&type metadata for Weekdays.Day);
}

char *sub_1C2AE2548(char *result, int64_t a2, char a3, char *a4, unint64_t *a5, uint64_t a6)
{
  char v7 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v9 = a2;
    goto LABEL_8;
  }
  unint64_t v8 = *((void *)a4 + 3);
  int64_t v9 = v8 >> 1;
  if ((uint64_t)(v8 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v9 + 0x4000000000000000 >= 0)
  {
    int64_t v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v8 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v9 = a2;
    }
LABEL_8:
    int64_t v10 = *((void *)a4 + 2);
    if (v9 <= v10) {
      int64_t v11 = *((void *)a4 + 2);
    }
    else {
      int64_t v11 = v9;
    }
    if (v11)
    {
      sub_1C2AE09F4(0, a5, a6, MEMORY[0x1E4FBBE00]);
      uint64_t v12 = (char *)swift_allocObject();
      size_t v13 = _swift_stdlib_malloc_size(v12);
      *((void *)v12 + 2) = v10;
      *((void *)v12 + 3) = 2 * v13 - 64;
      uint64_t v14 = v12 + 32;
      if (v7)
      {
LABEL_13:
        if (v12 != a4 || v14 >= &a4[v10 + 32]) {
          memmove(v14, a4 + 32, v10);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v12 = (char *)MEMORY[0x1E4FBC860];
      uint64_t v14 = (char *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C2AE3820(0, v10, v14, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v12;
  }
  __break(1u);
  return result;
}

unsigned __int8 *sub_1C2AE265C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  uint64_t v18 = a4;
  sub_1C2AE3A54();
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1C2B74130();
  unint64_t v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v10 = HIBYTE(v8) & 0xF;
    uint64_t v15 = v7;
    uint64_t v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    int64_t v9 = (unsigned __int8 *)&v15;
    goto LABEL_7;
  }
  uint64_t v7 = sub_1C2B4E5B8();
  unint64_t v12 = v11;
  swift_bridgeObjectRelease();
  unint64_t v8 = v12;
  if ((v12 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    int64_t v9 = (unsigned __int8 *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    int64_t v9 = (unsigned __int8 *)sub_1C2B748B0();
  }
LABEL_7:
  size_t v13 = sub_1C2AE2750(v9, v10, a5);
  swift_bridgeObjectRelease();
  return v13;
}

unsigned __int8 *sub_1C2AE2750(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  uint64_t v13 = 0;
                  if (v11 < 0x61 || v11 >= v8) {
                    return (unsigned __int8 *)v13;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v14 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v14 - (v11 + v12);
              if (__OFSUB__(v14, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_66;
    }
    if (a2)
    {
      unsigned __int8 v23 = a3 + 48;
      unsigned __int8 v24 = a3 + 55;
      unsigned __int8 v25 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v23 = 58;
      }
      else
      {
        unsigned __int8 v25 = 97;
        unsigned __int8 v24 = 65;
      }
      if (result)
      {
        uint64_t v26 = 0;
        do
        {
          unsigned int v27 = *result;
          if (v27 < 0x30 || v27 >= v23)
          {
            if (v27 < 0x41 || v27 >= v24)
            {
              uint64_t v13 = 0;
              if (v27 < 0x61 || v27 >= v25) {
                return (unsigned __int8 *)v13;
              }
              char v28 = -87;
            }
            else
            {
              char v28 = -55;
            }
          }
          else
          {
            char v28 = -48;
          }
          uint64_t v29 = v26 * a3;
          if ((unsigned __int128)(v26 * (__int128)a3) >> 64 != (v26 * a3) >> 63) {
            return 0;
          }
          uint64_t v26 = v29 + (v27 + v28);
          if (__OFADD__(v29, (v27 + v28))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v29 + (v27 + v28));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_66:
    __break(1u);
    return result;
  }
  uint64_t v15 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v16 = a3 + 48;
  unsigned __int8 v17 = a3 + 55;
  unsigned __int8 v18 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v16 = 58;
  }
  else
  {
    unsigned __int8 v18 = 97;
    unsigned __int8 v17 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  int v19 = result + 1;
  do
  {
    unsigned int v20 = *v19;
    if (v20 < 0x30 || v20 >= v16)
    {
      if (v20 < 0x41 || v20 >= v17)
      {
        uint64_t v13 = 0;
        if (v20 < 0x61 || v20 >= v18) {
          return (unsigned __int8 *)v13;
        }
        char v21 = -87;
      }
      else
      {
        char v21 = -55;
      }
    }
    else
    {
      char v21 = -48;
    }
    uint64_t v22 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v22 + (v20 + v21);
    if (__OFADD__(v22, (v20 + v21))) {
      return 0;
    }
    ++v19;
    --v15;
  }
  while (v15);
  return (unsigned __int8 *)v9;
}

uint64_t sub_1C2AE29CC(uint64_t result, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, uint64_t a6)
{
  unint64_t v10 = a2;
  uint64_t v11 = result;
  uint64_t v12 = (a4 >> 59) & 1;
  if ((a5 & 0x1000000000000000) == 0) {
    LOBYTE(v12) = 1;
  }
  uint64_t v13 = 4 << v12;
  unint64_t v14 = a2 & 0xC;
  if (v14 == 4 << v12)
  {
    uint64_t result = sub_1C2B4E53C(a2, a4, a5);
    a2 = result;
    if ((a5 & 0x1000000000000000) == 0)
    {
LABEL_5:
      int64_t v15 = a2 >> 16;
      if (v14 != v13) {
        goto LABEL_6;
      }
      goto LABEL_14;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
    goto LABEL_5;
  }
  unint64_t v16 = a4 & 0xFFFFFFFFFFFFLL;
  if ((a5 & 0x2000000000000000) != 0) {
    unint64_t v16 = HIBYTE(a5) & 0xF;
  }
  if (v16 < a2 >> 16) {
    goto LABEL_95;
  }
  uint64_t result = sub_1C2B740E0();
  int64_t v15 = result;
  if (v14 == v13)
  {
LABEL_14:
    uint64_t result = sub_1C2B4E53C(v10, a4, a5);
    unint64_t v10 = result;
  }
LABEL_6:
  if ((a3 & 0xC) == v13)
  {
    uint64_t result = sub_1C2B4E53C(a3, a4, a5);
    a3 = result;
    if ((a5 & 0x1000000000000000) == 0) {
      goto LABEL_8;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
LABEL_8:
    uint64_t result = (a3 >> 16) - (v10 >> 16);
    goto LABEL_21;
  }
  unint64_t v17 = HIBYTE(a5) & 0xF;
  if ((a5 & 0x2000000000000000) == 0) {
    unint64_t v17 = a4 & 0xFFFFFFFFFFFFLL;
  }
  if (v17 < v10 >> 16) {
    goto LABEL_91;
  }
  if (v17 < a3 >> 16)
  {
LABEL_92:
    __break(1u);
    goto LABEL_93;
  }
  uint64_t result = sub_1C2B740E0();
LABEL_21:
  int64_t v18 = v15 + result;
  if (__OFADD__(v15, result))
  {
    __break(1u);
    goto LABEL_90;
  }
  if (v18 < v15)
  {
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
  int v19 = (unsigned __int8 *)(v11 + v15);
  if (!v11) {
    int v19 = 0;
  }
  int v20 = *v19;
  if (v20 == 43)
  {
    if (result >= 1)
    {
      if (result != 1)
      {
        unsigned __int8 v31 = a6 + 48;
        unsigned __int8 v32 = a6 + 55;
        unsigned __int8 v33 = a6 + 87;
        if (a6 > 10)
        {
          unsigned __int8 v31 = 58;
        }
        else
        {
          unsigned __int8 v33 = 97;
          unsigned __int8 v32 = 65;
        }
        if (v19)
        {
          uint64_t v24 = 0;
          uint64_t v34 = v19 + 1;
          uint64_t v35 = result - 1;
          do
          {
            unsigned int v36 = *v34;
            if (v36 < 0x30 || v36 >= v31)
            {
              if (v36 < 0x41 || v36 >= v32)
              {
                uint64_t v29 = 0;
                if (v36 < 0x61 || v36 >= v33) {
                  return v29;
                }
                char v37 = -87;
              }
              else
              {
                char v37 = -55;
              }
            }
            else
            {
              char v37 = -48;
            }
            uint64_t v38 = v24 * a6;
            if ((unsigned __int128)(v24 * (__int128)a6) >> 64 != (v24 * a6) >> 63) {
              return 0;
            }
            uint64_t v24 = v38 + (v36 + v37);
            if (__OFADD__(v38, (v36 + v37))) {
              return 0;
            }
            ++v34;
            --v35;
          }
          while (v35);
          return v24;
        }
        return 0;
      }
      return 0;
    }
    goto LABEL_94;
  }
  if (v20 != 45)
  {
    if (v18 != v15)
    {
      unsigned __int8 v39 = a6 + 48;
      unsigned __int8 v40 = a6 + 55;
      unsigned __int8 v41 = a6 + 87;
      if (a6 > 10)
      {
        unsigned __int8 v39 = 58;
      }
      else
      {
        unsigned __int8 v41 = 97;
        unsigned __int8 v40 = 65;
      }
      if (v19)
      {
        uint64_t v42 = 0;
        do
        {
          unsigned int v43 = *v19;
          if (v43 < 0x30 || v43 >= v39)
          {
            if (v43 < 0x41 || v43 >= v40)
            {
              uint64_t v29 = 0;
              if (v43 < 0x61 || v43 >= v41) {
                return v29;
              }
              char v44 = -87;
            }
            else
            {
              char v44 = -55;
            }
          }
          else
          {
            char v44 = -48;
          }
          uint64_t v45 = v42 * a6;
          if ((unsigned __int128)(v42 * (__int128)a6) >> 64 != (v42 * a6) >> 63) {
            return 0;
          }
          uint64_t v42 = v45 + (v43 + v44);
          if (__OFADD__(v45, (v43 + v44))) {
            return 0;
          }
          ++v19;
          --result;
        }
        while (result);
        return v45 + (v43 + v44);
      }
      return 0;
    }
    return 0;
  }
  if (result >= 1)
  {
    if (result != 1)
    {
      unsigned __int8 v21 = a6 + 48;
      unsigned __int8 v22 = a6 + 55;
      unsigned __int8 v23 = a6 + 87;
      if (a6 > 10)
      {
        unsigned __int8 v21 = 58;
      }
      else
      {
        unsigned __int8 v23 = 97;
        unsigned __int8 v22 = 65;
      }
      if (v19)
      {
        uint64_t v24 = 0;
        unsigned __int8 v25 = v19 + 1;
        uint64_t v26 = result - 1;
        while (1)
        {
          unsigned int v27 = *v25;
          if (v27 < 0x30 || v27 >= v21)
          {
            if (v27 < 0x41 || v27 >= v22)
            {
              uint64_t v29 = 0;
              if (v27 < 0x61 || v27 >= v23) {
                return v29;
              }
              char v28 = -87;
            }
            else
            {
              char v28 = -55;
            }
          }
          else
          {
            char v28 = -48;
          }
          uint64_t v30 = v24 * a6;
          if ((unsigned __int128)(v24 * (__int128)a6) >> 64 != (v24 * a6) >> 63) {
            return 0;
          }
          uint64_t v24 = v30 - (v27 + v28);
          if (__OFSUB__(v30, (v27 + v28))) {
            return 0;
          }
          ++v25;
          if (!--v26) {
            return v24;
          }
        }
      }
      return 0;
    }
    return 0;
  }
LABEL_93:
  __break(1u);
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
  return result;
}

char *keypath_get_selector_localizedOntologyPregnancyTrimesterLactationRatings()
{
  return sel_localizedOntologyPregnancyTrimesterLactationRatings;
}

unint64_t sub_1C2AE2E04()
{
  unint64_t result = qword_1EA32B678;
  if (!qword_1EA32B678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA32B678);
  }
  return result;
}

_DWORD *__swift_memcpy4_1(_DWORD *result, _DWORD *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t storeEnumTagSinglePayload for PregnancyTrimesterLactationRatings(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_DWORD *)unint64_t result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 4) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 4) = 0;
    }
    if (a2) {
      *(unsigned char *)unint64_t result = a2 + 3;
    }
  }
  return result;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for PregnancyTrimesterLactationRatings.Rating(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for PregnancyTrimesterLactationRatings.Rating(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C2AE3010);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

uint64_t sub_1C2AE3038(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_1C2AE3044(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for PregnancyTrimesterLactationRatings.Rating()
{
  return &type metadata for PregnancyTrimesterLactationRatings.Rating;
}

void type metadata accessor for HKConceptAttributeType(uint64_t a1)
{
}

void type metadata accessor for HKMedicationScheduleType(uint64_t a1)
{
}

void type metadata accessor for HKMedicationListOnboardingAlgorithmType(uint64_t a1)
{
}

void type metadata accessor for HKMedicationListOnboardingDetailsEntryPointType(uint64_t a1)
{
}

void type metadata accessor for HKMedicationListOnboardingActionType(uint64_t a1)
{
}

void type metadata accessor for HKMedicationListOnboardingAnalyticsStepType(uint64_t a1)
{
}

void type metadata accessor for HKMedicationListOnboardingProvenanceType(uint64_t a1)
{
}

void type metadata accessor for HKMedicationsNotificationActionIdentifier(uint64_t a1)
{
}

void type metadata accessor for HKMedicationRoomType(uint64_t a1)
{
}

void type metadata accessor for HKMedicationRoomAnalyticsAction(uint64_t a1)
{
}

void type metadata accessor for HKMedicationRoomProvenance(uint64_t a1)
{
}

void type metadata accessor for SymbolWeight(uint64_t a1)
{
}

void type metadata accessor for ContentMode(uint64_t a1)
{
}

void type metadata accessor for HKConceptRawIdentifierValue(uint64_t a1)
{
}

void type metadata accessor for CGColor(uint64_t a1)
{
}

void type metadata accessor for ComparisonResult(uint64_t a1)
{
}

void type metadata accessor for HKMedicationDoseEventStatus(uint64_t a1)
{
}

uint64_t sub_1C2AE3304()
{
  return sub_1C2AE3394(&qword_1EA32B6F8, type metadata accessor for HKConceptRawIdentifierValue);
}

uint64_t sub_1C2AE334C()
{
  return sub_1C2AE3394(&qword_1EA32B700, type metadata accessor for HKMedicationListOnboardingAnalyticsStepType);
}

uint64_t sub_1C2AE3394(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C2AE33DC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_1C2AE3984();
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C2B74A10();
  __break(1u);
  return result;
}

uint64_t sub_1C2AE34E4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C2B74A10();
  __break(1u);
  return result;
}

uint64_t sub_1C2AE35D8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_1C2B74A10();
  __break(1u);
  return result;
}

char *sub_1C2AE3734(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    BOOL v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_1C2B74A10();
  __break(1u);
  return result;
}

char *sub_1C2AE3820(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + a1 + 32);
    size_t v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  uint64_t result = (char *)sub_1C2B74A10();
  __break(1u);
  return result;
}

void type metadata accessor for HKMedicationFreeTextFormTypeCode(uint64_t a1)
{
}

void sub_1C2AE3930(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C2B74B20();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C2AE3984()
{
  if (!qword_1EA32B738)
  {
    sub_1C2AE3A18(255, (unint64_t *)&qword_1EBF112D0);
    sub_1C2AE3A18(255, (unint64_t *)&qword_1EBF112A0);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA32B738);
    }
  }
}

uint64_t sub_1C2AE3A18(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_1C2AE3A54()
{
  unint64_t result = qword_1EA32B758;
  if (!qword_1EA32B758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA32B758);
  }
  return result;
}

void type metadata accessor for Key(uint64_t a1)
{
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

void type metadata accessor for HKError(uint64_t a1)
{
}

void type metadata accessor for HKListUserDomainType(uint64_t a1)
{
}

uint64_t sub_1C2AE3B48()
{
  return sub_1C2AE3394(&qword_1EA32B788, type metadata accessor for HKError);
}

uint64_t sub_1C2AE3B90()
{
  return sub_1C2AE3394(&qword_1EA32B790, type metadata accessor for HKError);
}

uint64_t sub_1C2AE3BD8()
{
  return sub_1C2AE3394(&qword_1EA32B798, type metadata accessor for Key);
}

uint64_t sub_1C2AE3C20()
{
  return sub_1C2AE3394((unint64_t *)&unk_1EA32B7A0, type metadata accessor for Key);
}

uint64_t sub_1C2AE3C68()
{
  return sub_1C2AE3394(&qword_1EBF107C8, type metadata accessor for Key);
}

uint64_t sub_1C2AE3CB0()
{
  return sub_1C2AE3394(&qword_1EA32B7B0, type metadata accessor for HKError);
}

uint64_t sub_1C2AE3CF8()
{
  return sub_1C2AE3394(&qword_1EA32B7B8, type metadata accessor for HKError);
}

uint64_t sub_1C2AE3D40()
{
  return sub_1C2AE3394(&qword_1EA32B7C0, type metadata accessor for HKError);
}

uint64_t sub_1C2AE3D88()
{
  return sub_1C2AE3394(&qword_1EA32B7C8, type metadata accessor for Code);
}

void type metadata accessor for Code(uint64_t a1)
{
}

uint64_t sub_1C2AE3DF8()
{
  return sub_1C2AE3394(&qword_1EA32B7D0, type metadata accessor for Code);
}

unint64_t sub_1C2AE3E44()
{
  unint64_t result = qword_1EA32B7D8;
  if (!qword_1EA32B7D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA32B7D8);
  }
  return result;
}

uint64_t sub_1C2AE3E98()
{
  return sub_1C2AE3394(&qword_1EA32B7E0, type metadata accessor for Code);
}

uint64_t sub_1C2AE3EE0()
{
  return sub_1C2AE3394((unint64_t *)&qword_1EA32B7E8, type metadata accessor for HKError);
}

Swift::Bool __swiftcall UIView.isExtraExtraLargeOrBigger(sizeCategory:)(UIContentSizeCategory sizeCategory)
{
  return sub_1C2B745A0();
}

uint64_t UIView.isAtExtraExtraLargeOrBigger.getter()
{
  id v1 = objc_msgSend(v0, sel_traitCollection);
  id v2 = objc_msgSend(v1, sel_preferredContentSizeCategory);

  LOBYTE(v1) = sub_1C2B745A0();
  return v1 & 1;
}

uint64_t sub_1C2AE3FB8(uint64_t a1)
{
  sub_1C2AE8670(0, (unint64_t *)&qword_1EA32B970, (uint64_t (*)(uint64_t))sub_1C2AE849C, MEMORY[0x1E4FBB718]);
  uint64_t v67 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  unint64_t v4 = (char *)&v61 - v3;
  sub_1C2AE86D4();
  uint64_t v6 = v5;
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  v73 = (uint64_t *)((char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  v76 = (uint64_t *)((char *)&v61 - v10);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  unint64_t v13 = (uint64_t *)((char *)&v61 - v12);
  MEMORY[0x1F4188790](v11);
  uint64_t v66 = (char *)&v61 - v14;
  uint64_t v15 = *(void *)(a1 + 64);
  uint64_t v62 = a1 + 64;
  uint64_t v16 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & v15;
  int64_t v64 = (unint64_t)(v16 + 63) >> 6;
  uint64_t v68 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v20 = 0;
  uint64_t v65 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v72 = v6;
  uint64_t v63 = v13;
  if (v18) {
    goto LABEL_7;
  }
  while (1)
  {
LABEL_8:
    int64_t v22 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
      __break(1u);
      goto LABEL_43;
    }
    if (v22 >= v64) {
      goto LABEL_41;
    }
    unint64_t v23 = *(void *)(v62 + 8 * v22);
    int64_t v24 = v20 + 1;
    if (!v23)
    {
      int64_t v24 = v20 + 2;
      if (v20 + 2 >= v64) {
        goto LABEL_41;
      }
      unint64_t v23 = *(void *)(v62 + 8 * v24);
      if (!v23)
      {
        int64_t v24 = v20 + 3;
        if (v20 + 3 >= v64) {
          goto LABEL_41;
        }
        unint64_t v23 = *(void *)(v62 + 8 * v24);
        if (!v23)
        {
          int64_t v24 = v20 + 4;
          if (v20 + 4 >= v64) {
            goto LABEL_41;
          }
          unint64_t v23 = *(void *)(v62 + 8 * v24);
          if (!v23)
          {
            uint64_t v25 = v20 + 5;
            if (v20 + 5 >= v64)
            {
LABEL_41:
              swift_release();
              return (uint64_t)v65;
            }
            unint64_t v23 = *(void *)(v62 + 8 * v25);
            int64_t v24 = v20 + 5;
            if (!v23) {
              break;
            }
          }
        }
      }
    }
LABEL_22:
    uint64_t v70 = (v23 - 1) & v23;
    int64_t v71 = v24;
    for (unint64_t i = __clz(__rbit64(v23)) + (v24 << 6); ; unint64_t i = __clz(__rbit64(v18)) | (v20 << 6))
    {
      uint64_t v26 = (uint64_t *)(*(void *)(v68 + 48) + 32 * i);
      uint64_t v28 = *v26;
      uint64_t v27 = v26[1];
      uint64_t v29 = v26[2];
      uint64_t v30 = v26[3];
      unsigned __int8 v31 = v66;
      sub_1C2AE8770(*(void *)(v68 + 56) + *(void *)(v67 + 72) * i, (uint64_t)&v66[*(int *)(v6 + 48)], (unint64_t *)&qword_1EA32B970, (uint64_t (*)(uint64_t))sub_1C2AE849C);
      *unsigned __int8 v31 = v28;
      v31[1] = v27;
      v31[2] = v29;
      v31[3] = v30;
      sub_1C2AE87F0((uint64_t)v31, (uint64_t)v13, (uint64_t (*)(void))sub_1C2AE86D4);
      swift_bridgeObjectRetain();
      sub_1C2AE8858(v29, v30);
      if (qword_1EBF106D8 != -1) {
        swift_once();
      }
      swift_beginAccess();
      unsigned __int8 v32 = off_1EBF106D0;
      uint64_t v33 = *(int *)(v6 + 48);
      uint64_t v34 = v76;
      uint64_t v35 = (uint64_t)v76 + v33;
      uint64_t v36 = v13[1];
      uint64_t v37 = v13[2];
      uint64_t v38 = v13[3];
      void *v76 = *v13;
      v34[1] = v36;
      v34[2] = v37;
      v34[3] = v38;
      uint64_t v75 = v35;
      sub_1C2AE8770((uint64_t)v13 + v33, v35, (unint64_t *)&qword_1EA32B970, (uint64_t (*)(uint64_t))sub_1C2AE849C);
      uint64_t v39 = v32[2];
      if (!v39) {
        break;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C2AE8858(v37, v38);
      swift_bridgeObjectRetain();
      uint64_t v69 = v32;
      unsigned __int8 v40 = (char *)(v32 + 6);
      while (1)
      {
        unsigned __int8 v41 = (void *)*((void *)v40 - 2);
        uint64_t v74 = *((void *)v40 - 1);
        uint64_t v42 = v73;
        uint64_t v43 = (uint64_t)v73 + *(int *)(v6 + 48);
        char v44 = v76;
        uint64_t v45 = v76[1];
        void *v73 = *v76;
        v42[1] = v45;
        *((_OWORD *)v42 + 1) = *((_OWORD *)v44 + 1);
        sub_1C2AE8770(v75, v43, (unint64_t *)&qword_1EA32B970, (uint64_t (*)(uint64_t))sub_1C2AE849C);
        sub_1C2AE886C(v43, (uint64_t)v4);
        sub_1C2AE849C();
        uint64_t v47 = v46;
        uint64_t v48 = *(void *)(v46 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v4, 1, v46) != 1) {
          break;
        }
        sub_1C2AE8900((uint64_t)v4, (unint64_t *)&qword_1EA32B970, (uint64_t (*)(uint64_t))sub_1C2AE849C);
LABEL_28:
        v40 += 24;
        --v39;
        uint64_t v6 = v72;
        if (!v39)
        {
          swift_bridgeObjectRelease_n();
          unint64_t v13 = v63;
          goto LABEL_6;
        }
      }
      id v49 = v41;
      swift_bridgeObjectRetain();
      id v50 = v49;
      v51 = (void *)sub_1C2B73E40();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v4, v47);
      sub_1C2AE3A18(0, &qword_1EBF10D30);
      id v52 = v50;
      LOBYTE(v50) = sub_1C2B745F0();

      if ((v50 & 1) == 0)
      {
        swift_bridgeObjectRelease();

        goto LABEL_28;
      }
      swift_bridgeObjectRelease_n();
      sub_1C2AE8610((uint64_t)v76, (uint64_t (*)(void))sub_1C2AE86D4);
      if (qword_1EBF10F78 != -1) {
        swift_once();
      }
      id v53 = (id)qword_1EBF10F60;
      swift_bridgeObjectRetain();
      uint64_t v54 = sub_1C2B735A0();
      uint64_t v56 = v55;
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      unint64_t v13 = v63;
      sub_1C2AE8610((uint64_t)v63, (uint64_t (*)(void))sub_1C2AE86D4);
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1C2AE08C0(0, v65[2] + 1, 1, v65);
        uint64_t v65 = (void *)result;
      }
      unint64_t v58 = v65[2];
      unint64_t v57 = v65[3];
      if (v58 >= v57 >> 1)
      {
        uint64_t result = (uint64_t)sub_1C2AE08C0((void *)(v57 > 1), v58 + 1, 1, v65);
        uint64_t v65 = (void *)result;
      }
      id v59 = v65;
      v65[2] = v58 + 1;
      v60 = &v59[2 * v58];
      v60[4] = v54;
      v60[5] = v56;
      int64_t v20 = v71;
      uint64_t v6 = v72;
      unint64_t v18 = v70;
      if (!v70) {
        goto LABEL_8;
      }
LABEL_7:
      uint64_t v70 = (v18 - 1) & v18;
      int64_t v71 = v20;
    }
    swift_bridgeObjectRetain();
    sub_1C2AE8858(v37, v38);
LABEL_6:
    unint64_t v18 = v70;
    int64_t v20 = v71;
    sub_1C2AE8610((uint64_t)v76, (uint64_t (*)(void))sub_1C2AE86D4);
    uint64_t result = sub_1C2AE8610((uint64_t)v13, (uint64_t (*)(void))sub_1C2AE86D4);
    if (v18) {
      goto LABEL_7;
    }
  }
  while (1)
  {
    int64_t v24 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v24 >= v64) {
      goto LABEL_41;
    }
    unint64_t v23 = *(void *)(v62 + 8 * v24);
    ++v25;
    if (v23) {
      goto LABEL_22;
    }
  }
LABEL_43:
  __break(1u);
  return result;
}

id sub_1C2AE4760()
{
  uint64_t v1 = OBJC_IVAR____TtC27HealthMedicationsExperience14MedicationView____lazy_storage___gradientBackground;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC27HealthMedicationsExperience14MedicationView____lazy_storage___gradientBackground);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC27HealthMedicationsExperience14MedicationView____lazy_storage___gradientBackground);
  }
  else
  {
    type metadata accessor for MedicationGradientBackground();
    id v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C2AE47D8()
{
  uint64_t v1 = OBJC_IVAR____TtC27HealthMedicationsExperience14MedicationView____lazy_storage___gradientDefaultBackgroundColor;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC27HealthMedicationsExperience14MedicationView____lazy_storage___gradientDefaultBackgroundColor);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC27HealthMedicationsExperience14MedicationView____lazy_storage___gradientDefaultBackgroundColor);
  }
  else
  {
    id v4 = objc_msgSend(self, sel_systemGray3Color);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C2AE4854()
{
  uint64_t v1 = OBJC_IVAR____TtC27HealthMedicationsExperience14MedicationView____lazy_storage___shapeView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC27HealthMedicationsExperience14MedicationView____lazy_storage___shapeView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC27HealthMedicationsExperience14MedicationView____lazy_storage___shapeView);
  }
  else
  {
    id v4 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for MedicationShapeView()), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v4, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C2AE48EC()
{
  uint64_t v1 = OBJC_IVAR____TtC27HealthMedicationsExperience14MedicationView____lazy_storage___placeholderView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC27HealthMedicationsExperience14MedicationView____lazy_storage___placeholderView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC27HealthMedicationsExperience14MedicationView____lazy_storage___placeholderView);
  }
  else
  {
    id v4 = sub_1C2AE4950(v0);
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1C2AE4950(uint64_t a1)
{
  id v2 = objc_msgSend(self, sel_whiteColor);
  id v3 = self;
  id v4 = objc_msgSend(v3, sel_configurationWithHierarchicalColor_, v2);

  uint64_t v5 = (void *)(a1 + OBJC_IVAR____TtC27HealthMedicationsExperience14MedicationView_placeholderConfiguration);
  id v6 = objc_msgSend(v3, sel_configurationWithWeight_, *(void *)(a1 + OBJC_IVAR____TtC27HealthMedicationsExperience14MedicationView_placeholderConfiguration + 8));
  id v7 = objc_msgSend(v4, sel_configurationByApplyingConfiguration_, v6);

  id v8 = v7;
  uint64_t v9 = (void *)sub_1C2B73F60();
  id v10 = objc_msgSend(self, sel_systemImageNamed_withConfiguration_, v9, v8);

  if (v10)
  {
    id v11 = objc_msgSend(v10, sel_imageWithoutBaseline);
  }
  else
  {
    id v11 = 0;
  }
  id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1838]), sel_initWithImage_, v11);

  objc_msgSend(v12, sel_setTranslatesAutoresizingMaskIntoConstraints_, 0);
  objc_msgSend(v12, sel_setContentMode_, *v5);
  objc_msgSend(v12, sel_setHidden_, 1);

  return v12;
}

id sub_1C2AE4B10(unsigned __int8 *a1, void **a2)
{
  int v2 = *a1;
  id v3 = *a2;
  id v4 = (char *)*a2 + OBJC_IVAR____TtC27HealthMedicationsExperience14MedicationView_circular;
  id result = (id)swift_beginAccess();
  int v6 = *v4;
  *id v4 = v2;
  if (v2 != v6) {
    return objc_msgSend(v3, sel_setNeedsLayout);
  }
  return result;
}

uint64_t sub_1C2AE4B84()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC27HealthMedicationsExperience14MedicationView_circular);
  swift_beginAccess();
  return *v1;
}

id sub_1C2AE4BCC(char a1)
{
  int v3 = a1 & 1;
  id v4 = &v1[OBJC_IVAR____TtC27HealthMedicationsExperience14MedicationView_circular];
  id result = (id)swift_beginAccess();
  int v6 = *v4;
  *id v4 = a1;
  if (v6 != v3) {
    return objc_msgSend(v1, sel_setNeedsLayout);
  }
  return result;
}

void (*sub_1C2AE4C40(void *a1))(id **a1)
{
  int v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC27HealthMedicationsExperience14MedicationView_circular;
  v3[3] = v1;
  v3[4] = v4;
  uint64_t v5 = (unsigned char *)(v1 + v4);
  swift_beginAccess();
  *((unsigned char *)v3 + 40) = *v5;
  return sub_1C2AE4CC0;
}

void sub_1C2AE4CC0(id **a1)
{
  uint64_t v1 = *a1;
  id v3 = (*a1)[3];
  int v2 = (*a1)[4];
  int v4 = *((unsigned __int8 *)*a1 + 40);
  int v5 = v2[(void)v3];
  v2[(void)v3] = v4;
  if (v4 != v5) {
    objc_msgSend(v1[3], sel_setNeedsLayout);
  }
  free(v1);
}

uint64_t sub_1C2AE4D1C(uint64_t a1, void *a2)
{
  sub_1C2AE8670(0, &qword_1EA32B888, type metadata accessor for MedicationVisualizationConfig, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  int v6 = (char *)&v9 - v5;
  sub_1C2AE8770(a1, (uint64_t)&v9 - v5, &qword_1EA32B888, type metadata accessor for MedicationVisualizationConfig);
  uint64_t v7 = *a2 + OBJC_IVAR____TtC27HealthMedicationsExperience14MedicationView_config;
  swift_beginAccess();
  sub_1C2AE4F2C((uint64_t)v6, v7);
  swift_endAccess();
  sub_1C2AE5DC4();
  return sub_1C2AE8900((uint64_t)v6, &qword_1EA32B888, type metadata accessor for MedicationVisualizationConfig);
}

uint64_t sub_1C2AE4E30@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC27HealthMedicationsExperience14MedicationView_config;
  swift_beginAccess();
  return sub_1C2AE8770(v3, a1, &qword_1EA32B888, type metadata accessor for MedicationVisualizationConfig);
}

uint64_t sub_1C2AE4EA0(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC27HealthMedicationsExperience14MedicationView_config;
  swift_beginAccess();
  sub_1C2AE4F2C(a1, v3);
  swift_endAccess();
  sub_1C2AE5DC4();
  return sub_1C2AE8900(a1, &qword_1EA32B888, type metadata accessor for MedicationVisualizationConfig);
}

uint64_t sub_1C2AE4F2C(uint64_t a1, uint64_t a2)
{
  sub_1C2AE8670(0, &qword_1EA32B888, type metadata accessor for MedicationVisualizationConfig, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t (*sub_1C2AE4FC0(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C2AE5020;
}

uint64_t sub_1C2AE5020(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_1C2AE5DC4();
  }
  return result;
}

void *MedicationView.init(frame:)(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC27HealthMedicationsExperience14MedicationView_placeholderConfiguration;
  uint64_t v10 = qword_1EBF11120;
  id v11 = v4;
  if (v10 != -1) {
    swift_once();
  }
  swift_beginAccess();
  *(_OWORD *)&v11[v9] = xmmword_1EBF11110;
  *(void *)&v11[OBJC_IVAR____TtC27HealthMedicationsExperience14MedicationView____lazy_storage___gradientBackground] = 0;
  *(void *)&v11[OBJC_IVAR____TtC27HealthMedicationsExperience14MedicationView____lazy_storage___gradientDefaultBackgroundColor] = 0;
  *(void *)&v11[OBJC_IVAR____TtC27HealthMedicationsExperience14MedicationView____lazy_storage___shapeView] = 0;
  *(void *)&v11[OBJC_IVAR____TtC27HealthMedicationsExperience14MedicationView____lazy_storage___placeholderView] = 0;
  v11[OBJC_IVAR____TtC27HealthMedicationsExperience14MedicationView_circular] = 1;
  id v12 = &v11[OBJC_IVAR____TtC27HealthMedicationsExperience14MedicationView_config];
  uint64_t v13 = type metadata accessor for MedicationVisualizationConfig(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);

  v24.receiver = v11;
  v24.super_class = (Class)type metadata accessor for MedicationView(0);
  uint64_t v14 = objc_msgSendSuper2(&v24, sel_initWithFrame_, a1, a2, a3, a4);
  objc_msgSend(v14, sel_setClipsToBounds_, 1);
  id v15 = sub_1C2AE4760();
  objc_msgSend(v14, sel_addSubview_, v15);

  id v16 = sub_1C2AE4760();
  objc_msgSend(v14, sel_bounds);
  objc_msgSend(v16, sel_setFrame_);

  id v17 = sub_1C2AE4760();
  objc_msgSend(v17, sel_setAutoresizingMask_, 18);

  id v18 = sub_1C2AE4854();
  objc_msgSend(v14, sel_addSubview_, v18);

  id v19 = sub_1C2AE4854();
  int64_t v20 = (void *)MEMORY[0x1E4FBC8C8];
  (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v14) + 0x148))();

  id v21 = sub_1C2AE48EC();
  objc_msgSend(v14, sel_addSubview_, v21);

  id v22 = sub_1C2AE48EC();
  (*(void (**)(void))((*v20 & *v14) + 0x140))();

  sub_1C2AE5DC4();
  return v14;
}

char *MedicationView.__allocating_init(frame:placeholderConfiguration:)(uint64_t *a1, double a2, double a3, double a4, double a5)
{
  id v11 = objc_allocWithZone(v5);
  return MedicationView.init(frame:placeholderConfiguration:)(a1, a2, a3, a4, a5);
}

char *MedicationView.init(frame:placeholderConfiguration:)(uint64_t *a1, double a2, double a3, double a4, double a5)
{
  uint64_t v10 = *a1;
  uint64_t v11 = a1[1];
  uint64_t v12 = OBJC_IVAR____TtC27HealthMedicationsExperience14MedicationView_placeholderConfiguration;
  uint64_t v13 = qword_1EBF11120;
  uint64_t v14 = v5;
  if (v13 != -1) {
    swift_once();
  }
  swift_beginAccess();
  *(_OWORD *)&v14[v12] = xmmword_1EBF11110;
  *(void *)&v14[OBJC_IVAR____TtC27HealthMedicationsExperience14MedicationView____lazy_storage___gradientBackground] = 0;
  *(void *)&v14[OBJC_IVAR____TtC27HealthMedicationsExperience14MedicationView____lazy_storage___gradientDefaultBackgroundColor] = 0;
  *(void *)&v14[OBJC_IVAR____TtC27HealthMedicationsExperience14MedicationView____lazy_storage___shapeView] = 0;
  *(void *)&v14[OBJC_IVAR____TtC27HealthMedicationsExperience14MedicationView____lazy_storage___placeholderView] = 0;
  v14[OBJC_IVAR____TtC27HealthMedicationsExperience14MedicationView_circular] = 1;
  id v15 = &v14[OBJC_IVAR____TtC27HealthMedicationsExperience14MedicationView_config];
  uint64_t v16 = type metadata accessor for MedicationVisualizationConfig(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);

  v29.receiver = v14;
  v29.super_class = (Class)type metadata accessor for MedicationView(0);
  id v17 = (char *)objc_msgSendSuper2(&v29, sel_initWithFrame_, a2, a3, a4, a5);
  id v18 = &v17[OBJC_IVAR____TtC27HealthMedicationsExperience14MedicationView_placeholderConfiguration];
  *(void *)id v18 = v10;
  *((void *)v18 + 1) = v11;
  id v19 = v17;
  objc_msgSend(v19, sel_setClipsToBounds_, 1);
  id v20 = sub_1C2AE4760();
  objc_msgSend(v19, sel_addSubview_, v20);

  id v21 = sub_1C2AE4760();
  objc_msgSend(v19, sel_bounds);
  objc_msgSend(v21, sel_setFrame_);

  id v22 = sub_1C2AE4760();
  objc_msgSend(v22, sel_setAutoresizingMask_, 18);

  id v23 = sub_1C2AE4854();
  objc_msgSend(v19, sel_addSubview_, v23);

  id v24 = sub_1C2AE4854();
  uint64_t v25 = (void *)MEMORY[0x1E4FBC8C8];
  (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *(void *)v19) + 0x148))();

  id v26 = sub_1C2AE48EC();
  objc_msgSend(v19, sel_addSubview_, v26);

  id v27 = sub_1C2AE48EC();
  (*(void (**)(void))((*v25 & *(void *)v19) + 0x140))();

  sub_1C2AE5DC4();
  return v19;
}

uint64_t sub_1C2AE56C8()
{
  objc_msgSend(v0, sel_setClipsToBounds_, 1);
  id v1 = sub_1C2AE4760();
  objc_msgSend(v0, sel_addSubview_, v1);

  id v2 = sub_1C2AE4760();
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v2, sel_setFrame_);

  id v3 = sub_1C2AE4760();
  objc_msgSend(v3, sel_setAutoresizingMask_, 18);

  id v4 = sub_1C2AE4854();
  objc_msgSend(v0, sel_addSubview_, v4);

  id v5 = sub_1C2AE4854();
  int v6 = (void *)MEMORY[0x1E4FBC8C8];
  (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x148))();

  id v7 = sub_1C2AE48EC();
  objc_msgSend(v0, sel_addSubview_, v7);

  id v8 = sub_1C2AE48EC();
  (*(void (**)(void))((*v6 & *v0) + 0x140))();

  return sub_1C2AE5DC4();
}

void sub_1C2AE5920()
{
  v9.receiver = v0;
  v9.super_class = (Class)type metadata accessor for MedicationView(0);
  objc_msgSendSuper2(&v9, sel_setNeedsUpdateConstraints);
  id v1 = sub_1C2AE4854();
  id v2 = objc_msgSend(v1, sel_constraints);

  if (!v2)
  {
    sub_1C2AE3A18(0, &qword_1EBF107B8);
    sub_1C2B741D0();
    id v2 = (id)sub_1C2B741C0();
    swift_bridgeObjectRelease();
  }
  id v3 = self;
  objc_msgSend(v3, sel_deactivateConstraints_, v2);

  id v4 = sub_1C2AE4854();
  id v5 = (void *)MEMORY[0x1E4FBC8C8];
  (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x148))();

  id v6 = sub_1C2AE48EC();
  id v7 = objc_msgSend(v6, sel_constraints);

  if (!v7)
  {
    sub_1C2AE3A18(0, &qword_1EBF107B8);
    sub_1C2B741D0();
    id v7 = (id)sub_1C2B741C0();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v3, sel_deactivateConstraints_, v7);

  id v8 = sub_1C2AE48EC();
  (*(void (**)(void))((*v5 & *v0) + 0x140))();
}

void sub_1C2AE5B68(void *a1)
{
  id v2 = v1;
  id v4 = self;
  sub_1C2AE7E34();
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1C2B764C0;
  id v6 = objc_msgSend(v2, sel_leadingAnchor);
  id v7 = objc_msgSend(a1, sel_leadingAnchor);
  id v8 = objc_msgSend(v6, sel_constraintEqualToAnchor_, v7);

  *(void *)(v5 + 32) = v8;
  id v9 = objc_msgSend(v2, sel_trailingAnchor);
  id v10 = objc_msgSend(a1, sel_trailingAnchor);
  id v11 = objc_msgSend(v9, sel_constraintEqualToAnchor_, v10);

  *(void *)(v5 + 40) = v11;
  id v12 = objc_msgSend(v2, sel_topAnchor);
  id v13 = objc_msgSend(a1, sel_topAnchor);
  id v14 = objc_msgSend(v12, sel_constraintEqualToAnchor_, v13);

  *(void *)(v5 + 48) = v14;
  id v15 = objc_msgSend(v2, sel_bottomAnchor);
  id v16 = objc_msgSend(a1, sel_bottomAnchor);
  id v17 = objc_msgSend(v15, sel_constraintEqualToAnchor_, v16);

  *(void *)(v5 + 56) = v17;
  sub_1C2B741F0();
  sub_1C2AE3A18(0, &qword_1EBF107B8);
  id v18 = (id)sub_1C2B741C0();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_activateConstraints_, v18);
}

uint64_t sub_1C2AE5DC4()
{
  sub_1C2AE849C();
  uint64_t v41 = *(void *)(v1 - 8);
  uint64_t v42 = v1;
  MEMORY[0x1F4188790](v1);
  unsigned __int8 v40 = (char *)&v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for MedicationVisualizationConfig(0);
  uint64_t v43 = *(void *)(v3 - 8);
  uint64_t v44 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v39 = (uint64_t)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2AE8670(0, &qword_1EA32B888, type metadata accessor for MedicationVisualizationConfig, MEMORY[0x1E4FBB718]);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v45 = (uint64_t)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  id v10 = (char *)&v39 - v9;
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  id v13 = (char *)&v39 - v12;
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  id v16 = (char *)&v39 - v15;
  MEMORY[0x1F4188790](v14);
  id v18 = (char *)&v39 - v17;
  uint64_t v19 = v0;
  id v20 = sub_1C2AE4854();
  uint64_t v21 = v19 + OBJC_IVAR____TtC27HealthMedicationsExperience14MedicationView_config;
  swift_beginAccess();
  sub_1C2AE8770(v21, (uint64_t)v18, &qword_1EA32B888, type metadata accessor for MedicationVisualizationConfig);
  uint64_t v22 = (uint64_t)v20 + OBJC_IVAR____TtC27HealthMedicationsExperience19MedicationShapeView_config;
  swift_beginAccess();
  sub_1C2AE8770(v22, (uint64_t)v16, &qword_1EA32B888, type metadata accessor for MedicationVisualizationConfig);
  swift_beginAccess();
  sub_1C2AE4F2C((uint64_t)v18, v22);
  swift_endAccess();
  sub_1C2B50F9C((uint64_t)v16);
  sub_1C2AE8900((uint64_t)v18, &qword_1EA32B888, type metadata accessor for MedicationVisualizationConfig);
  sub_1C2AE8900((uint64_t)v16, &qword_1EA32B888, type metadata accessor for MedicationVisualizationConfig);

  id v23 = sub_1C2AE4854();
  sub_1C2AE8770(v21, (uint64_t)v13, &qword_1EA32B888, type metadata accessor for MedicationVisualizationConfig);
  uint64_t v24 = v44;
  uint64_t v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48);
  BOOL v26 = v25(v13, 1, v44) == 1;
  sub_1C2AE8900((uint64_t)v13, &qword_1EA32B888, type metadata accessor for MedicationVisualizationConfig);
  objc_msgSend(v23, sel_setHidden_, v26);

  id v27 = sub_1C2AE48EC();
  sub_1C2AE8770(v21, (uint64_t)v10, &qword_1EA32B888, type metadata accessor for MedicationVisualizationConfig);
  BOOL v28 = v25(v10, 1, v24) != 1;
  sub_1C2AE8900((uint64_t)v10, &qword_1EA32B888, type metadata accessor for MedicationVisualizationConfig);
  objc_msgSend(v27, sel_setHidden_, v28);

  uint64_t v29 = v24;
  id v30 = sub_1C2AE4760();
  uint64_t v31 = v21;
  uint64_t v32 = v45;
  sub_1C2AE8770(v31, v45, &qword_1EA32B888, type metadata accessor for MedicationVisualizationConfig);
  if (v25((char *)v32, 1, v29))
  {
    sub_1C2AE8900(v32, &qword_1EA32B888, type metadata accessor for MedicationVisualizationConfig);
    uint64_t v33 = sub_1C2AE47D8();
  }
  else
  {
    uint64_t v34 = v39;
    sub_1C2AE8ABC(v32, v39);
    sub_1C2AE8900(v32, &qword_1EA32B888, type metadata accessor for MedicationVisualizationConfig);
    uint64_t v36 = v40;
    uint64_t v35 = v41;
    uint64_t v37 = v42;
    (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v40, v34 + *(int *)(v29 + 24), v42);
    sub_1C2AE8610(v34, type metadata accessor for MedicationVisualizationConfig);
    uint64_t v33 = (void *)sub_1C2B73E40();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v37);
  }
  objc_msgSend(v30, sel_setBackgroundColor_, v33);

  return sub_1C2AE62E8();
}

uint64_t sub_1C2AE62E8()
{
  uint64_t v1 = v0;
  sub_1C2AE8670(0, &qword_1EA32B888, type metadata accessor for MedicationVisualizationConfig, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v40 - v3;
  uint64_t v5 = type metadata accessor for MedicationVisualizationConfig(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (uint64_t)v1 + OBJC_IVAR____TtC27HealthMedicationsExperience14MedicationView_config;
  swift_beginAccess();
  sub_1C2AE8770(v9, (uint64_t)v4, &qword_1EA32B888, type metadata accessor for MedicationVisualizationConfig);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1) {
    return sub_1C2AE8900((uint64_t)v4, &qword_1EA32B888, type metadata accessor for MedicationVisualizationConfig);
  }
  sub_1C2AE87F0((uint64_t)v4, (uint64_t)v8, type metadata accessor for MedicationVisualizationConfig);
  objc_msgSend(v1, sel_setIsAccessibilityElement_, 1);
  uint64_t v11 = (void *)sub_1C2B73F60();
  objc_msgSend(v1, sel_setAccessibilityIdentifier_, v11);

  char v47 = *v8;
  uint64_t v12 = MedicationShape.accessibilityLabel.getter();
  if (v13) {
    uint64_t v14 = v12;
  }
  else {
    uint64_t v14 = 0;
  }
  unint64_t v15 = 0xE000000000000000;
  if (v13) {
    unint64_t v15 = v13;
  }
  unint64_t v44 = v15;
  uint64_t v16 = swift_bridgeObjectRetain();
  sub_1C2AE3FB8(v16);
  swift_bridgeObjectRelease();
  uint64_t v17 = self;
  id v18 = (void *)sub_1C2B741C0();
  swift_bridgeObjectRelease();
  id v19 = objc_msgSend(v17, sel_localizedStringByJoiningStrings_, v18);

  uint64_t v20 = sub_1C2B73FA0();
  uint64_t v45 = v21;
  uint64_t v46 = v20;

  if (qword_1EBF106F0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v22 = (char *)off_1EBF106E0;
  uint64_t v23 = *((void *)off_1EBF106E0 + 2);
  uint64_t v24 = &qword_1EBF10000;
  if (v23)
  {
    uint64_t v41 = v14;
    uint64_t v43 = v1;
    sub_1C2AE3A18(0, (unint64_t *)&qword_1EBF10810);
    uint64_t v42 = v8;
    swift_bridgeObjectRetain_n();
    sub_1C2AE849C();
    unsigned __int8 v40 = v22;
    uint64_t v25 = (id *)(v22 + 48);
    while (1)
    {
      id v26 = *(v25 - 2);
      swift_bridgeObjectRetain();
      id v27 = (void *)sub_1C2B73E40();
      char v28 = sub_1C2B745F0();

      if (v28) {
        break;
      }
      v25 += 3;
      swift_bridgeObjectRelease();

      if (!--v23)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v29 = 0;
        unint64_t v30 = 0xE000000000000000;
        uint64_t v8 = v42;
        uint64_t v1 = v43;
        uint64_t v14 = v41;
        unint64_t v31 = v44;
        goto LABEL_19;
      }
    }
    swift_bridgeObjectRelease_n();
    unint64_t v31 = v44;
    if (qword_1EBF10F78 != -1) {
      swift_once();
    }
    id v32 = (id)qword_1EBF10F60;
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_1C2B735A0();
    unint64_t v30 = v33;
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    uint64_t v8 = v42;
    uint64_t v1 = v43;
    uint64_t v14 = v41;
LABEL_19:
    uint64_t v24 = &qword_1EBF10000;
  }
  else
  {
    uint64_t v29 = 0;
    unint64_t v30 = 0xE000000000000000;
    unint64_t v31 = v44;
  }
  if (v24[495] != -1) {
    swift_once();
  }
  id v34 = (id)qword_1EBF10F60;
  swift_bridgeObjectRetain();
  sub_1C2B735A0();
  swift_bridgeObjectRelease();

  sub_1C2AE8504();
  uint64_t v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_1C2B764D0;
  uint64_t v36 = MEMORY[0x1E4FBB1A0];
  *(void *)(v35 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v37 = sub_1C2AE85BC();
  *(void *)(v35 + 32) = v14;
  *(void *)(v35 + 40) = v31;
  *(void *)(v35 + 96) = v36;
  *(void *)(v35 + 104) = v37;
  uint64_t v38 = v46;
  *(void *)(v35 + 64) = v37;
  *(void *)(v35 + 72) = v38;
  *(void *)(v35 + 80) = v45;
  *(void *)(v35 + 136) = v36;
  *(void *)(v35 + 144) = v37;
  *(void *)(v35 + 112) = v29;
  *(void *)(v35 + 120) = v30;
  sub_1C2B73FE0();
  swift_bridgeObjectRelease();
  uint64_t v39 = (void *)sub_1C2B73F60();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_setAccessibilityLabel_, v39);

  return sub_1C2AE8610((uint64_t)v8, type metadata accessor for MedicationVisualizationConfig);
}

uint64_t MedicationView.PlaceholderConfiguration.contentMode.getter()
{
  return *(void *)v0;
}

uint64_t MedicationView.PlaceholderConfiguration.contentMode.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*MedicationView.PlaceholderConfiguration.contentMode.modify())()
{
  return nullsub_1;
}

uint64_t MedicationView.PlaceholderConfiguration.symbolWeight.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t MedicationView.PlaceholderConfiguration.symbolWeight.setter(uint64_t result)
{
  *(void *)(v1 + 8) = result;
  return result;
}

uint64_t (*MedicationView.PlaceholderConfiguration.symbolWeight.modify())()
{
  return nullsub_1;
}

id MedicationView.__deallocating_deinit()
{
  return sub_1C2AE7BCC(type metadata accessor for MedicationView);
}

double sub_1C2AE6A20()
{
  *(void *)&double result = 2;
  xmmword_1EBF11110 = xmmword_1C2B764E0;
  return result;
}

uint64_t type metadata accessor for MedicationView(uint64_t a1)
{
  return sub_1C2AE7EB0(a1, qword_1EA32B948);
}

double static MedicationView.PlaceholderConfiguration.default.getter@<D0>(__n128 *a1@<X8>)
{
  *(void *)&double result = sub_1C2AE6B68(&qword_1EBF11120, (__n128 *)&xmmword_1EBF11110, a1).n128_u64[0];
  return result;
}

uint64_t static MedicationView.PlaceholderConfiguration.default.setter(uint64_t *a1)
{
  return sub_1C2AE6BF0(a1, &qword_1EBF11120, &xmmword_1EBF11110, (void *)&xmmword_1EBF11110 + 1);
}

uint64_t (*static MedicationView.PlaceholderConfiguration.default.modify())()
{
  if (qword_1EBF11120 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

double sub_1C2AE6B2C()
{
  *(void *)&double result = 1;
  xmmword_1EA32B870 = xmmword_1C2B764F0;
  return result;
}

double static MedicationView.PlaceholderConfiguration.small.getter@<D0>(__n128 *a1@<X8>)
{
  *(void *)&double result = sub_1C2AE6B68(&qword_1EA32B608, (__n128 *)&xmmword_1EA32B870, a1).n128_u64[0];
  return result;
}

__n128 sub_1C2AE6B68@<Q0>(void *a1@<X0>, __n128 *a2@<X1>, __n128 *a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  swift_beginAccess();
  __n128 result = *a2;
  *a3 = *a2;
  return result;
}

uint64_t static MedicationView.PlaceholderConfiguration.small.setter(uint64_t *a1)
{
  return sub_1C2AE6BF0(a1, &qword_1EA32B608, &xmmword_1EA32B870, (void *)&xmmword_1EA32B870 + 1);
}

uint64_t sub_1C2AE6BF0(uint64_t *a1, void *a2, void *a3, void *a4)
{
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  if (*a2 != -1) {
    swift_once();
  }
  uint64_t result = swift_beginAccess();
  *a3 = v6;
  *a4 = v7;
  return result;
}

uint64_t (*static MedicationView.PlaceholderConfiguration.small.modify())()
{
  if (qword_1EA32B608 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

void sub_1C2AE6CEC()
{
  qword_1EBF12FA8 = 0x404F000000000000;
}

id _s27HealthMedicationsExperience14MedicationViewC5frameACSo6CGRectV_tcfC_0(double a1, double a2, double a3, double a4)
{
  id v9 = objc_allocWithZone(v4);
  return objc_msgSend(v9, sel_initWithFrame_, a1, a2, a3, a4);
}

id MedicationListAvatarView.init(frame:)(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC27HealthMedicationsExperience24MedicationListAvatarView_shapeViewConstraints] = MEMORY[0x1E4FBC860];
  v15.receiver = v4;
  v15.super_class = (Class)type metadata accessor for MedicationListAvatarView(0);
  id v9 = objc_msgSendSuper2(&v15, sel_initWithFrame_, a1, a2, a3, a4);
  sub_1C2AE8670(0, &qword_1EA32B8C0, (uint64_t (*)(uint64_t))sub_1C2AE7EE8, MEMORY[0x1E4FBBE00]);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1C2B76500;
  uint64_t v11 = sub_1C2B73AB0();
  uint64_t v12 = MEMORY[0x1E4FB1138];
  *(void *)(v10 + 32) = v11;
  *(void *)(v10 + 40) = v12;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1C2AE7F74();
  id v13 = v9;
  sub_1C2B745C0();
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  return v13;
}

void sub_1C2AE6ED8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a3 + 16;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x1C8767AE0](v5);
  if (v6)
  {
    uint64_t v7 = (void *)v6;
    id v8 = objc_msgSend(a2, sel_preferredContentSizeCategory);
    int v9 = sub_1C2B745A0() & 1;
    id v10 = objc_msgSend(a1, sel_traitCollection);
    id v11 = objc_msgSend(v10, sel_preferredContentSizeCategory);

    LODWORD(v10) = sub_1C2B745A0() & 1;
    if (v9 != v10)
    {
      id v12 = v7;
      id v13 = sub_1C2AE4854();

      sub_1C2AE70B8(v13);
      sub_1C2AE5DC4();
      id v14 = v12;
      id v15 = sub_1C2AE48EC();

      sub_1C2AE766C(v15);
      uint64_t v7 = v8;
      id v8 = v15;
    }
  }
}

void sub_1C2AE70B8(void *a1)
{
  uint64_t v2 = v1;
  if (qword_1EBF10720 != -1) {
    swift_once();
  }
  double v4 = *(double *)&qword_1EBF12FA8 / 0.760456;
  uint64_t v5 = self;
  uint64_t v6 = OBJC_IVAR____TtC27HealthMedicationsExperience24MedicationListAvatarView_shapeViewConstraints;
  sub_1C2AE3A18(0, &qword_1EBF107B8);
  swift_bridgeObjectRetain();
  uint64_t v7 = (void *)sub_1C2B741C0();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_deactivateConstraints_, v7);

  id v8 = objc_msgSend(v2, sel_traitCollection);
  id v9 = objc_msgSend(v8, sel_preferredContentSizeCategory);

  LOBYTE(v8) = sub_1C2B745A0();
  if (v8)
  {
    sub_1C2AE7E34();
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1C2B764C0;
    id v11 = objc_msgSend(a1, sel_centerYAnchor);
    id v12 = objc_msgSend(v2, sel_centerYAnchor);
    id v13 = objc_msgSend(v11, sel_constraintEqualToAnchor_, v12);

    *(void *)(v10 + 32) = v13;
    id v14 = objc_msgSend(a1, sel_leadingAnchor);
    id v15 = objc_msgSend(v2, sel_leadingAnchor);
    id v16 = objc_msgSend(v14, sel_constraintEqualToAnchor_, v15);

    *(void *)(v10 + 40) = v16;
    id v17 = objc_msgSend(a1, sel_heightAnchor);
    id v18 = objc_msgSend(v17, sel_constraintEqualToConstant_, v4);

    *(void *)(v10 + 48) = v18;
    id v19 = objc_msgSend(a1, sel_widthAnchor);
    id v20 = objc_msgSend(v19, sel_constraintEqualToConstant_, v4);

    *(void *)(v10 + 56) = v20;
    sub_1C2B741F0();
    uint64_t v21 = v10;
  }
  else
  {
    id v36 = v5;
    id v22 = objc_msgSend(v2, sel_traitCollection);
    id v23 = objc_msgSend(v22, sel_preferredContentSizeCategory);

    char v24 = sub_1C2B745A0();
    sub_1C2AE7E34();
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_1C2B764C0;
    id v26 = objc_msgSend(v2, sel_centerXAnchor);
    id v27 = objc_msgSend(a1, sel_centerXAnchor);
    id v28 = objc_msgSend(v26, sel_constraintEqualToAnchor_, v27);

    *(void *)(v25 + 32) = v28;
    if (v24)
    {
      id v29 = objc_msgSend(v2, sel_topAnchor);
      id v30 = objc_msgSend(a1, sel_topAnchor);
      id v31 = objc_msgSend(v29, sel_constraintEqualToAnchor_constant_, v30, -13.0);
    }
    else
    {
      id v29 = objc_msgSend(v2, sel_centerYAnchor);
      id v30 = objc_msgSend(a1, sel_centerYAnchor);
      id v31 = objc_msgSend(v29, sel_constraintEqualToAnchor_, v30);
    }

    *(void *)(v25 + 40) = v31;
    id v32 = objc_msgSend(a1, sel_heightAnchor);
    id v33 = objc_msgSend(v32, sel_constraintEqualToConstant_, v4);

    *(void *)(v25 + 48) = v33;
    id v34 = objc_msgSend(a1, sel_widthAnchor);
    id v35 = objc_msgSend(v34, sel_constraintEqualToConstant_, v4);

    *(void *)(v25 + 56) = v35;
    sub_1C2B741F0();
    uint64_t v5 = v36;
    uint64_t v21 = v25;
  }
  *(void *)&v2[v6] = v21;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  id v37 = (id)sub_1C2B741C0();
  swift_bridgeObjectRelease();
  objc_msgSend(v5, sel_activateConstraints_, v37);
}

void sub_1C2AE766C(id a1)
{
  uint64_t v2 = v1;
  if (qword_1EBF10720 != -1) {
    swift_once();
  }
  double v4 = *(double *)&qword_1EBF12FA8;
  id v5 = objc_msgSend(a1, sel_constraints);
  if (!v5)
  {
    sub_1C2AE3A18(0, &qword_1EBF107B8);
    sub_1C2B741D0();
    id v5 = (id)sub_1C2B741C0();
    swift_bridgeObjectRelease();
  }
  uint64_t v6 = self;
  objc_msgSend(v6, sel_deactivateConstraints_, v5);

  id v7 = objc_msgSend(v2, sel_traitCollection);
  id v8 = objc_msgSend(v7, sel_preferredContentSizeCategory);

  LOBYTE(v7) = sub_1C2B745A0();
  if (v7)
  {
    sub_1C2AE7E34();
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1C2B764C0;
    id v10 = objc_msgSend(a1, sel_centerYAnchor);
    id v11 = objc_msgSend(v2, sel_centerYAnchor);
    id v12 = objc_msgSend(v10, sel_constraintEqualToAnchor_, v11);

    *(void *)(v9 + 32) = v12;
    id v13 = objc_msgSend(a1, sel_leadingAnchor);
    id v14 = objc_msgSend(v2, sel_leadingAnchor);
    id v15 = objc_msgSend(v13, sel_constraintEqualToAnchor_constant_, v14, 16.0);

    *(void *)(v9 + 40) = v15;
    id v16 = objc_msgSend(a1, sel_heightAnchor);
    id v17 = objc_msgSend(v16, sel_constraintEqualToConstant_, v4);

    *(void *)(v9 + 48) = v17;
    id v18 = objc_msgSend(a1, sel_widthAnchor);
    id v19 = objc_msgSend(v18, sel_constraintEqualToConstant_, v4);

    *(void *)(v9 + 56) = v19;
LABEL_9:
    sub_1C2B741F0();
    sub_1C2AE3A18(0, &qword_1EBF107B8);
    id v31 = (id)sub_1C2B741C0();
    swift_bridgeObjectRelease();
    objc_msgSend(v6, sel_activateConstraints_, v31);

    return;
  }
  id v20 = objc_msgSend(v2, sel_traitCollection);
  id v21 = objc_msgSend(v20, sel_preferredContentSizeCategory);

  LOBYTE(v20) = sub_1C2B745A0();
  if (v20)
  {
    sub_1C2AE7E34();
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_1C2B76510;
    id v23 = objc_msgSend(a1, sel_centerXAnchor);
    id v24 = objc_msgSend(v2, sel_centerXAnchor);
    id v25 = objc_msgSend(v23, sel_constraintEqualToAnchor_, v24);

    *(void *)(v22 + 32) = v25;
    id v26 = objc_msgSend(a1, sel_topAnchor);
    id v27 = objc_msgSend(v2, sel_topAnchor);
    id v28 = objc_msgSend(v26, sel_constraintEqualToAnchor_constant_, v27, 48.0);

    *(void *)(v22 + 40) = v28;
    id v29 = objc_msgSend(a1, sel_widthAnchor);
    id v30 = objc_msgSend(v29, sel_constraintEqualToConstant_, v4);

    *(void *)(v22 + 48) = v30;
    goto LABEL_9;
  }
  sub_1C2AE7C1C();
}

void MedicationListAvatarView.__allocating_init(frame:placeholderConfiguration:)()
{
}

void MedicationListAvatarView.init(frame:placeholderConfiguration:)()
{
}

uint64_t sub_1C2AE7BA4()
{
  return swift_bridgeObjectRelease();
}

id MedicationListAvatarView.__deallocating_deinit()
{
  return sub_1C2AE7BCC(type metadata accessor for MedicationListAvatarView);
}

id sub_1C2AE7BCC(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

void sub_1C2AE7C1C()
{
  uint64_t v1 = self;
  sub_1C2AE7E34();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C2B76510;
  id v3 = objc_msgSend(v0, sel_centerXAnchor);
  id v4 = sub_1C2AE48EC();
  id v5 = objc_msgSend(v4, sel_centerXAnchor);

  id v6 = objc_msgSend(v3, sel_constraintEqualToAnchor_, v5);
  *(void *)(v2 + 32) = v6;
  id v7 = objc_msgSend(v0, sel_centerYAnchor);
  id v8 = sub_1C2AE48EC();
  id v9 = objc_msgSend(v8, sel_centerYAnchor);

  id v10 = objc_msgSend(v7, sel_constraintEqualToAnchor_, v9);
  *(void *)(v2 + 40) = v10;
  id v11 = sub_1C2AE48EC();
  id v12 = objc_msgSend(v11, sel_widthAnchor);

  id v13 = objc_msgSend(v0, sel_widthAnchor);
  id v14 = objc_msgSend(v12, sel_constraintEqualToAnchor_multiplier_, v13, 0.6);

  *(void *)(v2 + 48) = v14;
  sub_1C2B741F0();
  sub_1C2AE3A18(0, &qword_1EBF107B8);
  id v15 = (id)sub_1C2B741C0();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_activateConstraints_, v15);
}

void sub_1C2AE7E34()
{
  if (!qword_1EBF11390)
  {
    unint64_t v0 = sub_1C2B74B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBF11390);
    }
  }
}

uint64_t type metadata accessor for MedicationListAvatarView(uint64_t a1)
{
  return sub_1C2AE7EB0(a1, (uint64_t *)&unk_1EA32B960);
}

uint64_t sub_1C2AE7EB0(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1C2AE7EE8()
{
  unint64_t result = qword_1EA32B8C8;
  if (!qword_1EA32B8C8)
  {
    sub_1C2AE856C(255, &qword_1EA32B8D0);
    unint64_t result = swift_getExistentialMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA32B8C8);
  }
  return result;
}

uint64_t sub_1C2AE7F34()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

void sub_1C2AE7F6C(void *a1, void *a2)
{
  sub_1C2AE6ED8(a1, a2, v2);
}

unint64_t sub_1C2AE7F74()
{
  unint64_t result = qword_1EA32B8D8;
  if (!qword_1EA32B8D8)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA32B8D8);
  }
  return result;
}

uint64_t sub_1C2AE7FCC@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  id v3 = (unsigned char *)(*a1 + OBJC_IVAR____TtC27HealthMedicationsExperience14MedicationView_circular);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_1C2AE8024@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC27HealthMedicationsExperience14MedicationView_config;
  swift_beginAccess();
  return sub_1C2AE8770(v3, a2, &qword_1EA32B888, type metadata accessor for MedicationVisualizationConfig);
}

uint64_t sub_1C2AE809C()
{
  return type metadata accessor for MedicationView(0);
}

void sub_1C2AE80A4()
{
  sub_1C2AE8670(319, &qword_1EA32B888, type metadata accessor for MedicationVisualizationConfig, MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for MedicationView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationView);
}

uint64_t dispatch thunk of MedicationView.circular.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of MedicationView.circular.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x108))();
}

uint64_t dispatch thunk of MedicationView.circular.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x110))();
}

uint64_t dispatch thunk of MedicationView.config.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x118))();
}

uint64_t dispatch thunk of MedicationView.config.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x120))();
}

uint64_t dispatch thunk of MedicationView.config.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x128))();
}

uint64_t dispatch thunk of MedicationView.__allocating_init(frame:placeholderConfiguration:)()
{
  return (*(uint64_t (**)(void))(v0 + 304))();
}

uint64_t dispatch thunk of MedicationView.setupViews()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x138))();
}

uint64_t dispatch thunk of MedicationView.setPlaceholderConstraints(view:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x140))();
}

uint64_t dispatch thunk of MedicationView.setShapeConstraints(shapeView:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x148))();
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for MedicationView.PlaceholderConfiguration(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for MedicationView.PlaceholderConfiguration(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for MedicationView.PlaceholderConfiguration()
{
  return &type metadata for MedicationView.PlaceholderConfiguration;
}

uint64_t sub_1C2AE8434()
{
  return type metadata accessor for MedicationListAvatarView(0);
}

uint64_t sub_1C2AE843C()
{
  return swift_updateClassMetadata2();
}

uint64_t method lookup function for MedicationListAvatarView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationListAvatarView);
}

void sub_1C2AE849C()
{
  if (!qword_1EBF10D28)
  {
    sub_1C2AE3A18(255, &qword_1EBF10D30);
    unint64_t v0 = sub_1C2B73E60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBF10D28);
    }
  }
}

void sub_1C2AE8504()
{
  if (!qword_1EBF10838)
  {
    sub_1C2AE856C(255, (unint64_t *)&qword_1EBF10840);
    unint64_t v0 = sub_1C2B74B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBF10838);
    }
  }
}

uint64_t sub_1C2AE856C(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    uint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_1C2AE85BC()
{
  unint64_t result = qword_1EBF10778;
  if (!qword_1EBF10778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBF10778);
  }
  return result;
}

uint64_t sub_1C2AE8610(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1C2AE8670(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C2AE86D4()
{
  if (!qword_1EA32B978)
  {
    sub_1C2AE8670(255, (unint64_t *)&qword_1EA32B970, (uint64_t (*)(uint64_t))sub_1C2AE849C, MEMORY[0x1E4FBB718]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA32B978);
    }
  }
}

uint64_t sub_1C2AE8770(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1C2AE8670(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C2AE87F0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C2AE8858(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1C2AE886C(uint64_t a1, uint64_t a2)
{
  sub_1C2AE8670(0, (unint64_t *)&qword_1EA32B970, (uint64_t (*)(uint64_t))sub_1C2AE849C, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C2AE8900(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C2AE8670(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1C2AE8970()
{
  uint64_t v1 = OBJC_IVAR____TtC27HealthMedicationsExperience14MedicationView_placeholderConfiguration;
  if (qword_1EBF11120 != -1) {
    swift_once();
  }
  swift_beginAccess();
  *(_OWORD *)&v0[v1] = xmmword_1EBF11110;
  *(void *)&v0[OBJC_IVAR____TtC27HealthMedicationsExperience14MedicationView____lazy_storage___gradientBackground] = 0;
  *(void *)&v0[OBJC_IVAR____TtC27HealthMedicationsExperience14MedicationView____lazy_storage___gradientDefaultBackgroundColor] = 0;
  *(void *)&v0[OBJC_IVAR____TtC27HealthMedicationsExperience14MedicationView____lazy_storage___shapeView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC27HealthMedicationsExperience14MedicationView____lazy_storage___placeholderView] = 0;
  v0[OBJC_IVAR____TtC27HealthMedicationsExperience14MedicationView_circular] = 1;
  uint64_t v2 = &v0[OBJC_IVAR____TtC27HealthMedicationsExperience14MedicationView_config];
  uint64_t v3 = type metadata accessor for MedicationVisualizationConfig(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);

  sub_1C2B74990();
  __break(1u);
}

uint64_t sub_1C2AE8ABC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MedicationVisualizationConfig(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t ScheduleItem.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ScheduleItem.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC27HealthMedicationsExperience12ScheduleItem_date;
  uint64_t v4 = sub_1C2B73710();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t ScheduleItem.medicationIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC27HealthMedicationsExperience12ScheduleItem_medicationIdentifier);
  swift_bridgeObjectRetain();
  return v1;
}

double ScheduleItem.doseAmount.getter()
{
  return *(double *)(v0 + OBJC_IVAR____TtC27HealthMedicationsExperience12ScheduleItem_doseAmount);
}

uint64_t ScheduleItem.isLastScheduledDose.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC27HealthMedicationsExperience12ScheduleItem_isLastScheduledDose);
}

uint64_t ScheduleItem.__allocating_init(identifier:date:medicationIdentifier:doseAmount:isLastScheduledDose:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, double a7)
{
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = a2;
  uint64_t v15 = v14 + OBJC_IVAR____TtC27HealthMedicationsExperience12ScheduleItem_date;
  uint64_t v16 = sub_1C2B73710();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(v15, a3, v16);
  id v17 = (void *)(v14 + OBJC_IVAR____TtC27HealthMedicationsExperience12ScheduleItem_medicationIdentifier);
  *id v17 = a4;
  v17[1] = a5;
  *(double *)(v14 + OBJC_IVAR____TtC27HealthMedicationsExperience12ScheduleItem_doseAmount) = a7;
  *(unsigned char *)(v14 + OBJC_IVAR____TtC27HealthMedicationsExperience12ScheduleItem_isLastScheduledDose) = a6;
  return v14;
}

uint64_t ScheduleItem.init(identifier:date:medicationIdentifier:doseAmount:isLastScheduledDose:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, double a7)
{
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  uint64_t v13 = v7 + OBJC_IVAR____TtC27HealthMedicationsExperience12ScheduleItem_date;
  uint64_t v14 = sub_1C2B73710();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v13, a3, v14);
  uint64_t v15 = (void *)(v7 + OBJC_IVAR____TtC27HealthMedicationsExperience12ScheduleItem_medicationIdentifier);
  *uint64_t v15 = a4;
  v15[1] = a5;
  *(double *)(v7 + OBJC_IVAR____TtC27HealthMedicationsExperience12ScheduleItem_doseAmount) = a7;
  *(unsigned char *)(v7 + OBJC_IVAR____TtC27HealthMedicationsExperience12ScheduleItem_isLastScheduledDose) = a6;
  return v7;
}

uint64_t ScheduleItem.deinit()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC27HealthMedicationsExperience12ScheduleItem_date;
  uint64_t v2 = sub_1C2B73710();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ScheduleItem.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC27HealthMedicationsExperience12ScheduleItem_date;
  uint64_t v2 = sub_1C2B73710();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C2AE8F08(uint64_t *a1, uint64_t *a2)
{
  return _s27HealthMedicationsExperience12ScheduleItemC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t _s27HealthMedicationsExperience12ScheduleItemC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24);
  if (v4 || (char v5 = sub_1C2B74B50(), v6 = 0, (v5 & 1) != 0))
  {
    if ((sub_1C2B736D0() & 1) == 0) {
      goto LABEL_14;
    }
    BOOL v7 = *(void *)(a1 + OBJC_IVAR____TtC27HealthMedicationsExperience12ScheduleItem_medicationIdentifier) == *(void *)(a2 + OBJC_IVAR____TtC27HealthMedicationsExperience12ScheduleItem_medicationIdentifier)
      && *(void *)(a1 + OBJC_IVAR____TtC27HealthMedicationsExperience12ScheduleItem_medicationIdentifier + 8) == *(void *)(a2 + OBJC_IVAR____TtC27HealthMedicationsExperience12ScheduleItem_medicationIdentifier + 8);
    if (v7 || (v8 = sub_1C2B74B50(), char v6 = 0, (v8 & 1) != 0))
    {
      if (*(double *)(a1 + OBJC_IVAR____TtC27HealthMedicationsExperience12ScheduleItem_doseAmount) == *(double *)(a2 + OBJC_IVAR____TtC27HealthMedicationsExperience12ScheduleItem_doseAmount))
      {
        char v6 = *(unsigned char *)(a1 + OBJC_IVAR____TtC27HealthMedicationsExperience12ScheduleItem_isLastScheduledDose) ^ *(unsigned char *)(a2 + OBJC_IVAR____TtC27HealthMedicationsExperience12ScheduleItem_isLastScheduledDose) ^ 1;
        return v6 & 1;
      }
LABEL_14:
      char v6 = 0;
    }
  }
  return v6 & 1;
}

uint64_t sub_1C2AE8FF0()
{
  return type metadata accessor for ScheduleItem();
}

uint64_t type metadata accessor for ScheduleItem()
{
  uint64_t result = qword_1EBF11100;
  if (!qword_1EBF11100) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C2AE9044()
{
  uint64_t result = sub_1C2B73710();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for ScheduleItem(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ScheduleItem);
}

uint64_t dispatch thunk of ScheduleItem.__allocating_init(identifier:date:medicationIdentifier:doseAmount:isLastScheduledDose:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

id HKHealthStore.publisher(for:debugIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_1C2AE9234(a1, a4, (uint64_t (*)(void))type metadata accessor for HKMedicationClusterQueryDescriptor);
  BOOL v7 = (void *)(a4
                + *(int *)(type metadata accessor for HKHealthStore.HKMedicationClusterPublisher.Configuration(0) + 20));
  *BOOL v7 = a2;
  v7[1] = a3;
  *(void *)(a4 + *(int *)(type metadata accessor for HKHealthStore.HKMedicationClusterPublisher(0) + 20)) = v9;
  swift_bridgeObjectRetain();
  return v9;
}

uint64_t type metadata accessor for HKHealthStore.HKMedicationClusterPublisher.Configuration(uint64_t a1)
{
  return sub_1C2AE7EB0(a1, (uint64_t *)&unk_1EA32B998);
}

uint64_t type metadata accessor for HKHealthStore.HKMedicationClusterPublisher(uint64_t a1)
{
  return sub_1C2AE7EB0(a1, (uint64_t *)&unk_1EA32B988);
}

uint64_t HKHealthStore.HKMedicationClusterPublisher.configuration.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2AE9234(v1, a1, type metadata accessor for HKHealthStore.HKMedicationClusterPublisher.Configuration);
}

uint64_t sub_1C2AE9234(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

id HKHealthStore.HKMedicationClusterPublisher.healthStore.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for HKHealthStore.HKMedicationClusterPublisher(0) + 20));
  return v1;
}

uint64_t sub_1C2AE92D4(uint64_t a1, uint64_t a2, void *a3, void (*a4)(void *))
{
  sub_1C2AEB73C(0, &qword_1EA32B9B0, (uint64_t (*)(uint64_t))sub_1C2AEB708, MEMORY[0x1E4F667C0]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  id v12 = (void *)((char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (void *)((char *)v18 - v13);
  if (a2)
  {
    *id v12 = a2;
    (*(void (**)(void *, void, uint64_t))(v9 + 104))(v12, *MEMORY[0x1E4F667B0], v8);
    swift_bridgeObjectRetain();
    uint64_t v14 = v12;
  }
  else
  {
    if (a3)
    {
      uint64_t v15 = a3;
    }
    else
    {
      type metadata accessor for HKError(0);
      v18[0] = 0;
      sub_1C2B5E0A8(MEMORY[0x1E4FBC860]);
      sub_1C2AEB624((unint64_t *)&qword_1EA32B7E8, type metadata accessor for HKError);
      sub_1C2B73610();
      uint64_t v15 = (void *)v18[1];
    }
    *uint64_t v14 = v15;
    (*(void (**)(void *, void, uint64_t))(v9 + 104))(v14, *MEMORY[0x1E4F667B8], v8);
    id v16 = a3;
  }
  a4(v14);
  return (*(uint64_t (**)(void *, uint64_t))(v9 + 8))(v14, v8);
}

uint64_t sub_1C2AE9500@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2AE9234(v1, a1, type metadata accessor for HKHealthStore.HKMedicationClusterPublisher.Configuration);
}

id sub_1C2AE9534(uint64_t a1)
{
  return *(id *)(v1 + *(int *)(a1 + 20));
}

uint64_t sub_1C2AE9544(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1C2AEB624(&qword_1EA32B9A8, (void (*)(uint64_t))type metadata accessor for HKHealthStore.HKMedicationClusterPublisher);
  return MEMORY[0x1F411F050](a1, a4, a2, v8, a3);
}

id _sSo13HKHealthStoreC27HealthMedicationsExperienceE28HKMedicationClusterPublisherV9makeQuery4with13outputHandlerSo7HKQueryCAE13ConfigurationV_y0C12KitAdditions0nH6ResultOySaySo0f6SearchR0CGGctFZ_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t Descriptor = type metadata accessor for HKMedicationClusterQueryDescriptor();
  MEMORY[0x1F4188790](Descriptor - 8);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2AE9234(a1, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for HKMedicationClusterQueryDescriptor);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a2;
  *(void *)(v9 + 24) = a3;
  swift_retain();
  id v10 = sub_1C2B5C330((uint64_t)sub_1C2AEB6A4, v9);
  swift_release();
  sub_1C2AEB6AC((uint64_t)v8);
  uint64_t v11 = *(void **)(a1
                 + *(int *)(type metadata accessor for HKHealthStore.HKMedicationClusterPublisher.Configuration(0) + 20)
                 + 8);
  id v12 = v10;
  if (v11) {
    uint64_t v11 = (void *)sub_1C2B73F60();
  }
  objc_msgSend(v10, sel_setDebugIdentifier_, v11);

  return v10;
}

uint64_t sub_1C2AE9728()
{
  return sub_1C2AEB624(&qword_1EA32B980, (void (*)(uint64_t))type metadata accessor for HKHealthStore.HKMedicationClusterPublisher);
}

uint64_t sub_1C2AE9770()
{
  return MEMORY[0x1E4FBC0F0];
}

void *_s28HKMedicationClusterPublisherVwCP(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  BOOL v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *BOOL v4 = *a2;
    BOOL v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v6 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v6;
    uint64_t v7 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v7;
    *(void *)(a1 + 40) = a2[5];
    *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
    uint64_t v8 = a2[8];
    *(void *)(a1 + 56) = a2[7];
    *(void *)(a1 + 64) = v8;
    uint64_t Descriptor = type metadata accessor for HKMedicationClusterQueryDescriptor();
    uint64_t v10 = *(int *)(Descriptor + 44);
    __dst = (char *)v4 + v10;
    uint64_t v30 = Descriptor;
    id v28 = (char *)a2 + v10;
    uint64_t v11 = sub_1C2B73710();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v28, 1, v11))
    {
      sub_1C2AEB73C(0, (unint64_t *)&qword_1EBF11360, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
      memcpy(__dst, v28, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v28, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v16 = *(int *)(v30 + 48);
    id v17 = (char *)v4 + v16;
    uint64_t v18 = (uint64_t)a2 + v16;
    uint64_t v19 = sub_1C2B73E90();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = *(int *)(type metadata accessor for HKHealthStore.HKMedicationClusterPublisher.Configuration(0) + 20);
    id v21 = (void *)((char *)v4 + v20);
    uint64_t v22 = (uint64_t *)((char *)a2 + v20);
    uint64_t v23 = v22[1];
    *id v21 = *v22;
    v21[1] = v23;
    uint64_t v24 = *(int *)(a3 + 20);
    id v25 = *(void **)((char *)a2 + v24);
    *(void *)((char *)v4 + v24) = v25;
    swift_bridgeObjectRetain();
    id v26 = v25;
  }
  return v4;
}

void _s28HKMedicationClusterPublisherVwxx(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t Descriptor = type metadata accessor for HKMedicationClusterQueryDescriptor();
  uint64_t v5 = a1 + *(int *)(Descriptor + 44);
  uint64_t v6 = sub_1C2B73710();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  uint64_t v8 = a1 + *(int *)(Descriptor + 48);
  uint64_t v9 = sub_1C2B73E90();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  type metadata accessor for HKHealthStore.HKMedicationClusterPublisher.Configuration(0);
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void **)(a1 + *(int *)(a2 + 20));
}

uint64_t _s28HKMedicationClusterPublisherVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  uint64_t Descriptor = type metadata accessor for HKMedicationClusterQueryDescriptor();
  uint64_t v9 = *(int *)(Descriptor + 44);
  __dst = (void *)(a1 + v9);
  uint64_t v28 = Descriptor;
  uint64_t v10 = (const void *)(a2 + v9);
  uint64_t v11 = sub_1C2B73710();
  uint64_t v12 = *(void *)(v11 - 8);
  id v26 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v26(v10, 1, v11))
  {
    sub_1C2AEB73C(0, (unint64_t *)&qword_1EBF11360, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(__dst, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(__dst, v10, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
  }
  uint64_t v14 = *(int *)(v28 + 48);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = sub_1C2B73E90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  uint64_t v18 = *(int *)(type metadata accessor for HKHealthStore.HKMedicationClusterPublisher.Configuration(0) + 20);
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (void *)(a2 + v18);
  uint64_t v21 = v20[1];
  *uint64_t v19 = *v20;
  v19[1] = v21;
  uint64_t v22 = *(int *)(a3 + 20);
  uint64_t v23 = *(void **)(a2 + v22);
  *(void *)(a1 + v22) = v23;
  swift_bridgeObjectRetain();
  id v24 = v23;
  return a1;
}

uint64_t _s28HKMedicationClusterPublisherVwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t Descriptor = type metadata accessor for HKMedicationClusterQueryDescriptor();
  uint64_t v7 = *(int *)(Descriptor + 44);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_1C2B73710();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_1C2AEB73C(0, (unint64_t *)&qword_1EBF11360, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  uint64_t v16 = *(int *)(Descriptor + 48);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_1C2B73E90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 24))(v17, v18, v19);
  uint64_t v20 = *(int *)(type metadata accessor for HKHealthStore.HKMedicationClusterPublisher.Configuration(0) + 20);
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  *uint64_t v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v23 = *(int *)(a3 + 20);
  id v24 = *(void **)(a2 + v23);
  id v25 = *(void **)(a1 + v23);
  *(void *)(a1 + v23) = v24;
  id v26 = v24;

  return a1;
}

uint64_t _s28HKMedicationClusterPublisherVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t Descriptor = type metadata accessor for HKMedicationClusterQueryDescriptor();
  uint64_t v8 = *(int *)(Descriptor + 44);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  uint64_t v11 = sub_1C2B73710();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    sub_1C2AEB73C(0, (unint64_t *)&qword_1EBF11360, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v14 = *(int *)(Descriptor + 48);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = sub_1C2B73E90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
  uint64_t v18 = type metadata accessor for HKHealthStore.HKMedicationClusterPublisher.Configuration(0);
  *(_OWORD *)(a1 + *(int *)(v18 + 20)) = *(_OWORD *)(a2 + *(int *)(v18 + 20));
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t _s28HKMedicationClusterPublisherVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  uint64_t Descriptor = type metadata accessor for HKMedicationClusterQueryDescriptor();
  uint64_t v8 = *(int *)(Descriptor + 44);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = sub_1C2B73710();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    sub_1C2AEB73C(0, (unint64_t *)&qword_1EBF11360, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  uint64_t v17 = *(int *)(Descriptor + 48);
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = sub_1C2B73E90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 40))(v18, v19, v20);
  uint64_t v21 = *(int *)(type metadata accessor for HKHealthStore.HKMedicationClusterPublisher.Configuration(0) + 20);
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (uint64_t *)(a2 + v21);
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  *uint64_t v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  uint64_t v26 = *(int *)(a3 + 20);
  id v27 = *(void **)(a1 + v26);
  *(void *)(a1 + v26) = *(void *)(a2 + v26);

  return a1;
}

uint64_t _s28HKMedicationClusterPublisherVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C2AEA514);
}

uint64_t sub_1C2AEA514(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for HKHealthStore.HKMedicationClusterPublisher.Configuration(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t _s28HKMedicationClusterPublisherVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C2AEA5E8);
}

uint64_t sub_1C2AEA5E8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for HKHealthStore.HKMedicationClusterPublisher.Configuration(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1C2AEA6A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2AEB590(a1, a2, a3, type metadata accessor for HKHealthStore.HKMedicationClusterPublisher.Configuration);
}

void *_s28HKMedicationClusterPublisherV13ConfigurationVwCP(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  BOOL v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *BOOL v4 = *a2;
    BOOL v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v6 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v6;
    uint64_t v7 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v7;
    *(void *)(a1 + 40) = a2[5];
    *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
    uint64_t v8 = a2[8];
    *(void *)(a1 + 56) = a2[7];
    *(void *)(a1 + 64) = v8;
    uint64_t Descriptor = type metadata accessor for HKMedicationClusterQueryDescriptor();
    uint64_t v10 = *(int *)(Descriptor + 44);
    __dst = (char *)v4 + v10;
    uint64_t v27 = Descriptor;
    uint64_t v25 = (char *)a2 + v10;
    uint64_t v11 = sub_1C2B73710();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v25, 1, v11))
    {
      sub_1C2AEB73C(0, (unint64_t *)&qword_1EBF11360, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
      memcpy(__dst, v25, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v25, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v16 = *(int *)(v27 + 48);
    uint64_t v17 = (char *)v4 + v16;
    uint64_t v18 = (uint64_t)a2 + v16;
    uint64_t v19 = sub_1C2B73E90();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = *(int *)(a3 + 20);
    uint64_t v21 = (void *)((char *)v4 + v20);
    uint64_t v22 = (uint64_t *)((char *)a2 + v20);
    uint64_t v23 = v22[1];
    *uint64_t v21 = *v22;
    v21[1] = v23;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t _s28HKMedicationClusterPublisherV13ConfigurationVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t Descriptor = type metadata accessor for HKMedicationClusterQueryDescriptor();
  uint64_t v3 = a1 + *(int *)(Descriptor + 44);
  uint64_t v4 = sub_1C2B73710();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  uint64_t v6 = a1 + *(int *)(Descriptor + 48);
  uint64_t v7 = sub_1C2B73E90();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  return swift_bridgeObjectRelease();
}

uint64_t _s28HKMedicationClusterPublisherV13ConfigurationVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  uint64_t Descriptor = type metadata accessor for HKMedicationClusterQueryDescriptor();
  uint64_t v9 = *(int *)(Descriptor + 44);
  __dst = (void *)(a1 + v9);
  uint64_t v25 = Descriptor;
  uint64_t v10 = (const void *)(a2 + v9);
  uint64_t v11 = sub_1C2B73710();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v23 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v23(v10, 1, v11))
  {
    sub_1C2AEB73C(0, (unint64_t *)&qword_1EBF11360, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(__dst, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(__dst, v10, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
  }
  uint64_t v14 = *(int *)(v25 + 48);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = sub_1C2B73E90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  uint64_t v18 = *(int *)(a3 + 20);
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (void *)(a2 + v18);
  uint64_t v21 = v20[1];
  *uint64_t v19 = *v20;
  v19[1] = v21;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s28HKMedicationClusterPublisherV13ConfigurationVwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t Descriptor = type metadata accessor for HKMedicationClusterQueryDescriptor();
  uint64_t v7 = *(int *)(Descriptor + 44);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_1C2B73710();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_1C2AEB73C(0, (unint64_t *)&qword_1EBF11360, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  uint64_t v16 = *(int *)(Descriptor + 48);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_1C2B73E90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 24))(v17, v18, v19);
  uint64_t v20 = *(int *)(a3 + 20);
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  *uint64_t v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s28HKMedicationClusterPublisherV13ConfigurationVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t Descriptor = type metadata accessor for HKMedicationClusterQueryDescriptor();
  uint64_t v8 = *(int *)(Descriptor + 44);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  uint64_t v11 = sub_1C2B73710();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    sub_1C2AEB73C(0, (unint64_t *)&qword_1EBF11360, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v14 = *(int *)(Descriptor + 48);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = sub_1C2B73E90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t _s28HKMedicationClusterPublisherV13ConfigurationVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  uint64_t Descriptor = type metadata accessor for HKMedicationClusterQueryDescriptor();
  uint64_t v8 = *(int *)(Descriptor + 44);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = sub_1C2B73710();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    sub_1C2AEB73C(0, (unint64_t *)&qword_1EBF11360, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  uint64_t v17 = *(int *)(Descriptor + 48);
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = sub_1C2B73E90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 40))(v18, v19, v20);
  uint64_t v21 = *(int *)(a3 + 20);
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (uint64_t *)(a2 + v21);
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  *uint64_t v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s28HKMedicationClusterPublisherV13ConfigurationVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C2AEB3CC);
}

uint64_t sub_1C2AEB3CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t Descriptor = type metadata accessor for HKMedicationClusterQueryDescriptor();
  uint64_t v7 = *(void *)(Descriptor - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, Descriptor);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t _s28HKMedicationClusterPublisherV13ConfigurationVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C2AEB4B0);
}

uint64_t sub_1C2AEB4B0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for HKMedicationClusterQueryDescriptor();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  }
  return result;
}

uint64_t sub_1C2AEB570(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2AEB590(a1, a2, a3, (uint64_t (*)(uint64_t))type metadata accessor for HKMedicationClusterQueryDescriptor);
}

uint64_t sub_1C2AEB590(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result = a4(319);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C2AEB624(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C2AEB66C()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C2AEB6A4(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1C2AE92D4(a1, a2, a3, *(void (**)(void *))(v3 + 16));
}

uint64_t sub_1C2AEB6AC(uint64_t a1)
{
  uint64_t Descriptor = type metadata accessor for HKMedicationClusterQueryDescriptor();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(Descriptor - 8) + 8))(a1, Descriptor);
  return a1;
}

void sub_1C2AEB708(uint64_t a1)
{
}

void sub_1C2AEB73C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1C2AEB7A0()
{
  unint64_t result = qword_1EA32B9C0;
  if (!qword_1EA32B9C0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA32B9C0);
  }
  return result;
}

uint64_t MedicationDoseEventUpdateModel.init(medicationDoseEvent:status:logDate:doseAmount:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X8>)
{
  *(void *)a7 = a1;
  *(void *)(a7 + 8) = a2;
  *(unsigned char *)(a7 + 16) = a3 & 1;
  uint64_t updated = type metadata accessor for MedicationDoseEventUpdateModel(0);
  uint64_t result = sub_1C2AF0734(a4, a7 + *(int *)(updated + 24));
  uint64_t v13 = a7 + *(int *)(updated + 28);
  *(void *)uint64_t v13 = a5;
  *(unsigned char *)(v13 + 8) = a6 & 1;
  return result;
}

id sub_1C2AEB860()
{
  uint64_t v1 = v0;
  sub_1C2AF07C8(0, (unint64_t *)&qword_1EBF11360, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  int64_t v71 = (char *)&v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v64 - v5;
  uint64_t v7 = sub_1C2B73710();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v69 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v64 - v12;
  MEMORY[0x1F4188790](v11);
  v73 = (char *)&v64 - v14;
  uint64_t updated = type metadata accessor for MedicationDoseEventUpdateModel(0);
  uint64_t v16 = MEMORY[0x1F4188790](updated);
  uint64_t v18 = (id *)((char *)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (id *)((char *)&v64 - v19);
  id v21 = *(id *)(v1 + 8);
  int v22 = *(unsigned __int8 *)(v1 + 16);
  sub_1C2AF0C20(v1, (uint64_t)&v64 - v19, type metadata accessor for MedicationDoseEventUpdateModel);
  if (v22 == 1) {
    id v21 = objc_msgSend(*v20, sel_status);
  }
  sub_1C2AF4898((uint64_t)v20, type metadata accessor for MedicationDoseEventUpdateModel);
  uint64_t v23 = v1 + *(int *)(updated + 28);
  if (*(unsigned char *)(v23 + 8)) {
    id v24 = objc_msgSend(*(id *)v1, sel_doseQuantity);
  }
  else {
    id v24 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, *(double *)v23);
  }
  id v68 = v24;
  id v72 = v21;
  sub_1C2AF4520(v1 + *(int *)(updated + 24), (uint64_t)v6);
  sub_1C2AF0C20(v1, (uint64_t)v18, type metadata accessor for MedicationDoseEventUpdateModel);
  uint64_t v25 = v8;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    id v26 = objc_msgSend(*v18, sel_startDate);
    sub_1C2B736E0();

    sub_1C2AF0B18((uint64_t)v6, (uint64_t)&qword_1EBF11360, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C2AF07C8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v73, v6, v7);
  }
  sub_1C2AF4898((uint64_t)v18, type metadata accessor for MedicationDoseEventUpdateModel);
  Date.dateWithOutSecsAndNanoSecs()((uint64_t)v13);
  id v27 = *(id *)v1;
  id v28 = objc_msgSend(*(id *)v1, sel_metadata);
  uint64_t v29 = MEMORY[0x1E4FBC840];
  uint64_t v70 = v7;
  if (v28)
  {
    uint64_t v30 = v28;
    uint64_t v31 = sub_1C2B73EF0();

    uint64_t v32 = sub_1C2B73FA0();
    if (*(void *)(v31 + 16) && (unint64_t v34 = sub_1C2AE056C(v32, v33), (v35 & 1) != 0))
    {
      sub_1C2AF4658(*(void *)(v31 + 56) + 32 * v34, (uint64_t)&v74);
    }
    else
    {
      long long v74 = 0u;
      long long v75 = 0u;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*((void *)&v75 + 1))
    {
      id v36 = v13;
      sub_1C2AF45B4(&v74, &v76);
      id v37 = self;
      __swift_project_boxed_opaque_existential_0(&v76, v77);
      uint64_t v38 = sub_1C2B74B40();
      id v39 = objc_msgSend(v37, sel_syncVersionForStatus_, v72);
      id v40 = objc_msgSend(v37, sel__metadataWithSyncIdentifier_syncVersion_isLastScheduledDose_, v38, v39, objc_msgSend(v27, sel_isLastScheduledDose));
      swift_unknownObjectRelease();

      uint64_t v67 = sub_1C2B73EF0();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v76);
      goto LABEL_18;
    }
  }
  else
  {
    long long v74 = 0u;
    long long v75 = 0u;
  }
  id v36 = v13;
  sub_1C2AF0B18((uint64_t)&v74, (uint64_t)&qword_1EA32BAB8, v29 + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C2AF46B4);
  uint64_t v67 = 0;
LABEL_18:
  id v41 = *(id *)v1;
  id v66 = objc_msgSend(*(id *)v1, sel_logOrigin);
  id v42 = objc_msgSend(v41, sel_scheduleItemIdentifier);
  if (v42)
  {
    uint64_t v43 = v42;
    uint64_t v65 = sub_1C2B73FA0();
    uint64_t v45 = v44;
  }
  else
  {
    uint64_t v65 = 0;
    uint64_t v45 = 0;
  }
  id v46 = objc_msgSend(v41, sel_medicationIdentifier);
  uint64_t v47 = sub_1C2B73FA0();
  uint64_t v49 = v48;

  id v50 = objc_msgSend(v41, sel_scheduledDoseQuantity);
  id v51 = objc_msgSend(v41, sel_scheduledDate);
  if (v51)
  {
    id v52 = v51;
    uint64_t v53 = (uint64_t)v71;
    sub_1C2B736E0();

    uint64_t v54 = 0;
  }
  else
  {
    uint64_t v54 = 1;
    uint64_t v53 = (uint64_t)v71;
  }
  uint64_t v55 = v25;
  uint64_t v56 = v70;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 56))(v53, v54, 1, v70);
  sub_1C2AE3A18(0, &qword_1EBF110C0);
  unint64_t v57 = *(void (**)(char *, char *, uint64_t))(v25 + 16);
  uint64_t v58 = (uint64_t)v69;
  v57(v69, v36, v56);
  uint64_t v59 = v49;
  v60 = v68;
  id v61 = sub_1C2AF0DEC((uint64_t)v66, v65, v45, v47, v59, (uint64_t)v50, (uint64_t)v68, v53, v58, (uint64_t)v72, v67);

  uint64_t v62 = *(void (**)(char *, uint64_t))(v55 + 8);
  v62(v36, v56);
  v62(v73, v56);
  return v61;
}

uint64_t Date.dateWithOutSecsAndNanoSecs()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v34 = a1;
  uint64_t v1 = sub_1C2B73710();
  uint64_t v32 = *(void *)(v1 - 8);
  uint64_t v33 = v1;
  MEMORY[0x1F4188790](v1);
  uint64_t v25 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2AF07C8(0, (unint64_t *)&qword_1EBF11360, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v30 = (char *)&v25 - v4;
  uint64_t v28 = sub_1C2B73870();
  uint64_t v26 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_1C2B73540();
  uint64_t v27 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2B73850();
  sub_1C2AF07C8(0, &qword_1EA32B9C8, MEMORY[0x1E4F27C88], MEMORY[0x1E4FBBE00]);
  uint64_t v9 = sub_1C2B73860();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1C2B767B0;
  unint64_t v14 = v13 + v12;
  int v15 = *(void (**)(unint64_t, void, uint64_t))(v10 + 104);
  v15(v14, *MEMORY[0x1E4F27C20], v9);
  v15(v14 + v11, *MEMORY[0x1E4F27C30], v9);
  v15(v14 + 2 * v11, *MEMORY[0x1E4F27BF0], v9);
  uint64_t v16 = v25;
  v15(v14 + 3 * v11, *MEMORY[0x1E4F27C10], v9);
  v15(v14 + 4 * v11, *MEMORY[0x1E4F27C48], v9);
  sub_1C2AF082C(v13);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v17 = v31;
  sub_1C2B737E0();
  uint64_t v18 = (uint64_t)v30;
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v26 + 8);
  uint64_t v20 = v28;
  v19(v6, v28);
  sub_1C2B73850();
  sub_1C2B73830();
  id v21 = v6;
  uint64_t v22 = v32;
  v19(v21, v20);
  uint64_t v23 = v33;
  (*(void (**)(char *, uint64_t))(v27 + 8))(v8, v29);
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v16, v17, v23);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v18, 1, v23) == 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v22 + 32))(v34, v16, v23);
    return sub_1C2AF0B18(v18, (uint64_t)&qword_1EBF11360, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C2AF07C8);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v23);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 32))(v34, v18, v23);
  }
}

uint64_t MedicationDoseEventLogger.__allocating_init(healthStore:)(id a1)
{
  uint64_t v2 = swift_allocObject();
  if (!a1)
  {
    a1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B0B8]), sel_init);
    objc_msgSend(a1, sel_setSourceBundleIdentifier_, *MEMORY[0x1E4F2BE10]);
    objc_msgSend(a1, sel_resume);
  }
  *(void *)(v2 + 16) = a1;
  return v2;
}

uint64_t MedicationDoseEventLogger.init(healthStore:)(void *a1)
{
  if (a1)
  {
    id v2 = a1;
  }
  else
  {
    id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B0B8]), sel_init);
    objc_msgSend(v2, sel_setSourceBundleIdentifier_, *MEMORY[0x1E4F2BE10]);
    objc_msgSend(v2, sel_resume);
  }
  *(void *)(v1 + 16) = v2;
  return v1;
}

uint64_t MedicationDoseEventLogger.saveMedicationDoseEvents(_:)(uint64_t a1)
{
  v2[3] = a1;
  v2[4] = v1;
  v2[5] = *(void *)(type metadata accessor for MedicationDoseEventUpdateModel(0) - 8);
  v2[6] = swift_task_alloc();
  v2[7] = swift_task_alloc();
  v2[8] = *(void *)(type metadata accessor for MedicationDoseEventLogSource(0) - 8);
  v2[9] = swift_task_alloc();
  v2[10] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for MedicationDoseEventSaveRequest(0);
  v2[11] = v3;
  v2[12] = *(void *)(v3 - 8);
  v2[13] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C2AEC7B0, 0, 0);
}

uint64_t sub_1C2AEC7B0()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v4 = v0[12];
    uint64_t v26 = v0[8];
    uint64_t v5 = v0[5];
    uint64_t v6 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v7 = *(void *)(v4 + 72);
    swift_bridgeObjectRetain();
    unint64_t v8 = MEMORY[0x1E4FBC860];
    uint64_t v9 = MEMORY[0x1E4FBC860];
    do
    {
      sub_1C2AF0C20(v6, v0[13], type metadata accessor for MedicationDoseEventSaveRequest);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v14 = v0[13];
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v16 = v0[6];
        uint64_t v15 = v0[7];
        sub_1C2AF0BB8(v14, v15, type metadata accessor for MedicationDoseEventUpdateModel);
        sub_1C2AF0C20(v15, v16, type metadata accessor for MedicationDoseEventUpdateModel);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v8 = sub_1C2AE1E54(0, *(void *)(v8 + 16) + 1, 1, v8);
        }
        unint64_t v18 = *(void *)(v8 + 16);
        unint64_t v17 = *(void *)(v8 + 24);
        if (v18 >= v17 >> 1) {
          unint64_t v8 = sub_1C2AE1E54(v17 > 1, v18 + 1, 1, v8);
        }
        uint64_t v19 = v0[6];
        uint64_t v11 = v0[7];
        *(void *)(v8 + 16) = v18 + 1;
        sub_1C2AF0BB8(v19, v8+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v18, type metadata accessor for MedicationDoseEventUpdateModel);
        unint64_t v12 = type metadata accessor for MedicationDoseEventUpdateModel;
      }
      else
      {
        uint64_t v21 = v0[9];
        uint64_t v20 = v0[10];
        sub_1C2AF0BB8(v14, v20, type metadata accessor for MedicationDoseEventLogSource);
        sub_1C2AF0C20(v20, v21, type metadata accessor for MedicationDoseEventLogSource);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v9 = sub_1C2AE1E9C(0, *(void *)(v9 + 16) + 1, 1, v9);
        }
        unint64_t v23 = *(void *)(v9 + 16);
        unint64_t v22 = *(void *)(v9 + 24);
        if (v23 >= v22 >> 1) {
          uint64_t v9 = sub_1C2AE1E9C(v22 > 1, v23 + 1, 1, v9);
        }
        uint64_t v10 = v0[9];
        uint64_t v11 = v0[10];
        *(void *)(v9 + 16) = v23 + 1;
        sub_1C2AF0BB8(v10, v9+ ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80))+ *(void *)(v26 + 72) * v23, type metadata accessor for MedicationDoseEventLogSource);
        unint64_t v12 = type metadata accessor for MedicationDoseEventLogSource;
      }
      sub_1C2AF4898(v11, v12);
      v6 += v7;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
    uint64_t v3 = MEMORY[0x1E4FBC860];
  }
  else
  {
    unint64_t v8 = MEMORY[0x1E4FBC860];
    uint64_t v9 = MEMORY[0x1E4FBC860];
  }
  v0[14] = v8;
  v0[15] = v9;
  v0[2] = v3;
  id v24 = (void *)swift_task_alloc();
  v0[16] = v24;
  *id v24 = v0;
  v24[1] = sub_1C2AECB00;
  return MedicationDoseEventLogger.logMedicationDoseEvents(_:)(v9);
}

uint64_t sub_1C2AECB00(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  v3[17] = a1;
  v3[18] = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_1C2AECEB8;
  }
  else
  {
    uint64_t v6 = (void *)swift_task_alloc();
    v3[19] = v6;
    *uint64_t v6 = v4;
    v6[1] = sub_1C2AECCA0;
    uint64_t v7 = v3[4];
    v6[16] = v3[14];
    v6[17] = v7;
    uint64_t v5 = sub_1C2AEDFD0;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1C2AECCA0(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 160) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_1C2AECF54;
  }
  else
  {
    *(void *)(v4 + 168) = a1;
    uint64_t v5 = sub_1C2AECDF0;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1C2AECDF0()
{
  unint64_t v1 = v0[21];
  sub_1C2AEE4FC(v0[17]);
  sub_1C2AEE4FC(v1);
  uint64_t v2 = v0[2];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(uint64_t))v0[1];
  return v3(v2);
}

uint64_t sub_1C2AECEB8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C2AECF54()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t MedicationDoseEventLogger.logMedicationDoseEvents(_:)(uint64_t a1)
{
  v2[28] = a1;
  v2[29] = v1;
  v2[30] = *v1;
  uint64_t v3 = sub_1C2B73710();
  v2[31] = v3;
  v2[32] = *(void *)(v3 - 8);
  v2[33] = swift_task_alloc();
  v2[34] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for MedicationDoseEventLogSource(0);
  v2[35] = v4;
  v2[36] = *(void *)(v4 - 8);
  v2[37] = swift_task_alloc();
  v2[38] = swift_task_alloc();
  v2[39] = swift_task_alloc();
  v2[40] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C2AED16C, 0, 0);
}

uint64_t sub_1C2AED16C()
{
  v100 = v0;
  unint64_t v1 = MEMORY[0x1E4FBC860];
  v0[26] = MEMORY[0x1E4FBC860];
  uint64_t v2 = v0[28];
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t v4 = v0[39];
    uint64_t v5 = v0[36];
    uint64_t v6 = v0[32];
    uint64_t v7 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v93 = (void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
    uint64_t v94 = *(void *)(v5 + 72);
    unint64_t v8 = (void (**)(uint64_t, uint64_t))(v6 + 8);
    swift_bridgeObjectRetain();
    uint64_t v95 = v4;
    v96 = v8;
    do
    {
      uint64_t v98 = v3;
      uint64_t v10 = (uint64_t *)v0[39];
      uint64_t v9 = v0[40];
      sub_1C2AF0C20(v7, v9, type metadata accessor for MedicationDoseEventLogSource);
      sub_1C2AF0C20(v9, (uint64_t)v10, type metadata accessor for MedicationDoseEventLogSource);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v12 = *v10;
      uint64_t v97 = *(void *)(v4 + 8);
      uint64_t v13 = v0[39];
      uint64_t v14 = v0[40];
      uint64_t v15 = v0[31];
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v16 = v0[37];
        uint64_t v17 = v0[33];
        uint64_t v91 = *(void *)(v4 + 16);
        sub_1C2AF0C88();
        uint64_t v19 = v18;
        uint64_t v20 = v13 + v18[24];
        uint64_t v87 = *(void *)v20;
        uint64_t v89 = *(void *)(v13 + v18[20]);
        int v85 = *(unsigned __int8 *)(v20 + 8);
        (*v93)(v17, v13 + v18[16], v15);
        sub_1C2AF0C20(v14, v16, type metadata accessor for MedicationDoseEventLogSource);
        int v21 = swift_getEnumCaseMultiPayload();
        uint64_t v22 = v0[37];
        uint64_t v23 = v0[31];
        if (v21 == 1)
        {
          uint64_t v83 = v22 + v19[16];
          id v24 = self;
          uint64_t v82 = v23;
          swift_bridgeObjectRetain();
          uint64_t v25 = (void *)sub_1C2B73F60();
          swift_bridgeObjectRelease();
          uint64_t v26 = (void *)sub_1C2B73F60();
          swift_bridgeObjectRelease();
          id v27 = objc_msgSend(v24, sel_syncIdentifierForScheduleItemIdentifier_medicationIdentifier_, v25, v26);

          uint64_t v84 = sub_1C2B73FA0();
          uint64_t v29 = v28;

          swift_release();
          uint64_t v30 = *v96;
          (*v96)(v83, v82);
        }
        else
        {
          swift_bridgeObjectRelease();
          sub_1C2AF135C();
          uint64_t v50 = v22 + *(int *)(v49 + 48);
          id v51 = objc_msgSend(self, sel_syncIdentifierForScheduleItemIdentifier_medicationIdentifier_, 0, 0);
          uint64_t v84 = sub_1C2B73FA0();
          uint64_t v29 = v52;

          uint64_t v30 = *v96;
          (*v96)(v50, v23);
        }
        uint64_t v53 = v0[33];
        uint64_t v54 = v0[31];
        swift_retain();
        id v55 = sub_1C2AF0FCC(2, v12, v97, v53, v89, v87, v85, v84, v29, v91);
        swift_release_n();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v30(v53, v54);
      }
      else
      {
        uint64_t v92 = *v10;
        uint64_t v31 = v0[38];
        uint64_t v32 = v0[34];
        sub_1C2AF135C();
        uint64_t v34 = v33;
        uint64_t v35 = v13 + v33[20];
        uint64_t v88 = *(void *)v35;
        uint64_t v90 = *(void *)(v13 + v33[16]);
        int v86 = *(unsigned __int8 *)(v35 + 8);
        (*v93)(v32, v13 + v33[12], v15);
        sub_1C2AF0C20(v14, v31, type metadata accessor for MedicationDoseEventLogSource);
        int v36 = swift_getEnumCaseMultiPayload();
        uint64_t v37 = v0[38];
        uint64_t v38 = v0[31];
        if (v36 == 1)
        {
          sub_1C2AF0C88();
          uint64_t v40 = v37 + *(int *)(v39 + 64);
          id v41 = self;
          swift_bridgeObjectRetain();
          id v42 = (void *)sub_1C2B73F60();
          swift_bridgeObjectRelease();
          uint64_t v43 = (void *)sub_1C2B73F60();
          swift_bridgeObjectRelease();
          id v44 = objc_msgSend(v41, sel_syncIdentifierForScheduleItemIdentifier_medicationIdentifier_, v42, v43);

          uint64_t v45 = sub_1C2B73FA0();
          uint64_t v47 = v46;

          swift_release();
          uint64_t v48 = *v96;
          (*v96)(v40, v38);
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v56 = v37 + v34[12];
          id v57 = objc_msgSend(self, sel_syncIdentifierForScheduleItemIdentifier_medicationIdentifier_, 0, 0);
          uint64_t v45 = sub_1C2B73FA0();
          uint64_t v47 = v58;

          uint64_t v48 = *v96;
          (*v96)(v56, v38);
        }
        uint64_t v59 = v0[34];
        uint64_t v60 = v0[31];
        id v55 = sub_1C2AF0FCC(1, v92, v97, v59, v90, v88, v86, v45, v47, 0);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v48(v59, v60);
      }
      id v61 = v55;
      MEMORY[0x1C87665F0]();
      uint64_t v4 = v95;
      if (*(void *)((v0[26] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v0[26] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1C2B74210();
      }
      uint64_t v62 = v0[40];
      sub_1C2B74250();
      sub_1C2B741F0();

      sub_1C2AF4898(v62, type metadata accessor for MedicationDoseEventLogSource);
      v7 += v94;
      uint64_t v3 = v98 - 1;
    }
    while (v98 != 1);
    swift_bridgeObjectRelease();
    unint64_t v1 = v0[26];
  }
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v78 = sub_1C2B749C0();
    swift_bridgeObjectRelease();
    if (v78) {
      goto LABEL_18;
    }
  }
  else if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_18:
    if (qword_1EBF11340 != -1) {
      swift_once();
    }
    uint64_t v63 = sub_1C2B73A90();
    v0[41] = __swift_project_value_buffer(v63, (uint64_t)qword_1EBF11348);
    uint64_t v64 = sub_1C2B73A80();
    os_log_type_t v65 = sub_1C2B744E0();
    if (os_log_type_enabled(v64, v65))
    {
      uint64_t v66 = swift_slowAlloc();
      uint64_t v67 = swift_slowAlloc();
      uint64_t v99 = v67;
      *(_DWORD *)uint64_t v66 = 136315394;
      uint64_t v68 = sub_1C2B74CD0();
      v0[25] = sub_1C2AEEE6C(v68, v69, &v99);
      sub_1C2B74650();
      swift_bridgeObjectRelease();
      *(_WORD *)(v66 + 12) = 2080;
      swift_beginAccess();
      uint64_t v70 = sub_1C2AE3A18(0, &qword_1EBF110C0);
      uint64_t v71 = swift_bridgeObjectRetain();
      uint64_t v72 = MEMORY[0x1C8766620](v71, v70);
      unint64_t v74 = v73;
      swift_bridgeObjectRelease();
      v0[27] = sub_1C2AEEE6C(v72, v74, &v99);
      sub_1C2B74650();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2ADB000, v64, v65, "%s Saving medication dose events to healthStore: %s", (uint8_t *)v66, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C8767A10](v67, -1, -1);
      MEMORY[0x1C8767A10](v66, -1, -1);
    }

    long long v75 = *(void **)(v0[29] + 16);
    swift_beginAccess();
    if (v0[26] >> 62)
    {
      sub_1C2AE3A18(0, &qword_1EA32B9F8);
      swift_bridgeObjectRetain();
      sub_1C2B749A0();
    }
    else
    {
      swift_bridgeObjectRetain_n();
      sub_1C2B74B60();
      sub_1C2AE3A18(0, &qword_1EA32B9F8);
    }
    swift_bridgeObjectRelease();
    sub_1C2AE3A18(0, &qword_1EA32B9F8);
    uint64_t v76 = sub_1C2B741C0();
    v0[42] = v76;
    swift_bridgeObjectRelease();
    v0[2] = v0;
    v0[3] = sub_1C2AEDC04;
    uint64_t v77 = swift_continuation_init();
    v0[10] = MEMORY[0x1E4F143A8];
    v0[11] = 0x40000000;
    v0[12] = sub_1C2AEE930;
    v0[13] = &block_descriptor;
    v0[14] = v77;
    objc_msgSend(v75, sel_saveObjects_withCompletion_, v76, v0 + 10);
    return MEMORY[0x1F41881E8](v0 + 2);
  }
  swift_beginAccess();
  uint64_t v79 = v0[26];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v80 = (uint64_t (*)(uint64_t))v0[1];
  return v80(v79);
}

uint64_t sub_1C2AEDC04()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 344) = v1;
  if (v1) {
    uint64_t v2 = sub_1C2AEDEE4;
  }
  else {
    uint64_t v2 = sub_1C2AEDD14;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C2AEDD14()
{
  uint64_t v11 = v0;

  uint64_t v1 = sub_1C2B73A80();
  os_log_type_t v2 = sub_1C2B744E0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    uint64_t v10 = v4;
    *(_DWORD *)uint64_t v3 = 136315138;
    uint64_t v5 = sub_1C2B74CD0();
    *(void *)(v0 + 192) = sub_1C2AEEE6C(v5, v6, &v10);
    sub_1C2B74650();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2ADB000, v1, v2, "%s SUCCESS: medication dose events saved in healthStore!", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C8767A10](v4, -1, -1);
    MEMORY[0x1C8767A10](v3, -1, -1);
  }

  swift_beginAccess();
  uint64_t v7 = *(void *)(v0 + 208);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v8 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v8(v7);
}

uint64_t sub_1C2AEDEE4()
{
  uint64_t v1 = *(void **)(v0 + 336);
  swift_willThrow();

  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t MedicationDoseEventLogger.updateMedicationDoseEvents(_:)(uint64_t a1)
{
  *(void *)(v2 + 128) = a1;
  *(void *)(v2 + 136) = v1;
  return MEMORY[0x1F4188298](sub_1C2AEDFD0, 0, 0);
}

uint64_t sub_1C2AEDFD0()
{
  unint64_t v1 = MEMORY[0x1E4FBC860];
  v0[15] = MEMORY[0x1E4FBC860];
  uint64_t v2 = v0[16];
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t v4 = *(void *)(type metadata accessor for MedicationDoseEventUpdateModel(0) - 8);
    uint64_t v5 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v6 = *(void *)(v4 + 72);
    swift_bridgeObjectRetain();
    do
    {
      id v7 = sub_1C2AEB860();
      MEMORY[0x1C87665F0]();
      if (*(void *)((v0[15] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v0[15] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1C2B74210();
      }
      sub_1C2B74250();
      sub_1C2B741F0();

      v5 += v6;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    unint64_t v1 = v0[15];
  }
  v0[18] = v1;
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1C2B749C0();
    swift_bridgeObjectRelease();
    if (v11)
    {
      unint64_t v8 = *(void **)(v0[17] + 16);
      sub_1C2AE3A18(0, &qword_1EA32B9F8);
      swift_bridgeObjectRetain();
      sub_1C2B749A0();
      goto LABEL_10;
    }
    unint64_t v1 = v0[18];
  }
  else if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    unint64_t v8 = *(void **)(v0[17] + 16);
    swift_bridgeObjectRetain_n();
    sub_1C2B74B60();
    sub_1C2AE3A18(0, &qword_1EA32B9F8);
LABEL_10:
    swift_bridgeObjectRelease();
    sub_1C2AE3A18(0, &qword_1EA32B9F8);
    uint64_t v9 = sub_1C2B741C0();
    v0[19] = v9;
    swift_bridgeObjectRelease();
    v0[2] = v0;
    v0[3] = sub_1C2AEE30C;
    uint64_t v10 = swift_continuation_init();
    v0[10] = MEMORY[0x1E4F143A8];
    v0[11] = 0x40000000;
    v0[12] = sub_1C2AEE930;
    v0[13] = &block_descriptor_5;
    v0[14] = v10;
    objc_msgSend(v8, sel_saveObjects_withCompletion_, v9, v0 + 10);
    return MEMORY[0x1F41881E8](v0 + 2);
  }
  uint64_t v12 = (uint64_t (*)(unint64_t))v0[1];
  return v12(v1);
}

uint64_t sub_1C2AEE30C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 160) = v1;
  if (v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1C2AEE48C;
  }
  else
  {
    uint64_t v2 = sub_1C2AEE424;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C2AEE424()
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 144);
  return v1(v2);
}

uint64_t sub_1C2AEE48C()
{
  uint64_t v1 = *(void **)(v0 + 152);
  swift_willThrow();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1C2AEE4FC(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1C2B749C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_1C2B749C0();
    swift_bridgeObjectRelease();
    uint64_t v5 = v20 + v3;
    if (!__OFADD__(v20, v3)) {
      goto LABEL_5;
    }
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v4 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v5 = v4 + v3;
  if (__OFADD__(v4, v3)) {
    goto LABEL_26;
  }
LABEL_5:
  unint64_t v6 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v6;
  uint64_t v8 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    uint64_t v9 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v5 <= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v8 = 1;
  }
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C2B749C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v10 <= v5) {
    uint64_t v10 = v5;
  }
  swift_bridgeObjectRetain();
  uint64_t v11 = MEMORY[0x1C8766CA0](v8, v10, 1, v6);
  swift_bridgeObjectRelease();
  *uint64_t v1 = v11;
  uint64_t v9 = v11 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
  uint64_t v12 = *(void *)(v9 + 16);
  uint64_t v13 = (*(void *)(v9 + 24) >> 1) - v12;
  uint64_t result = sub_1C2AEF47C(v9 + 8 * v12 + 32, v13, a1);
  if (v15 < v3)
  {
LABEL_27:
    __break(1u);
LABEL_28:
    sub_1C2AF4398(0, &qword_1EBF11278, &qword_1EBF110C0);
    goto LABEL_20;
  }
  uint64_t v16 = v15;
  if (v15 >= 1)
  {
    uint64_t v17 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v18 = __OFADD__(v17, v15);
    uint64_t v19 = v17 + v15;
    if (v18)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v19;
  }
  swift_bridgeObjectRelease();
  if (v16 == v13) {
    goto LABEL_28;
  }
LABEL_20:
  return sub_1C2B741F0();
}

uint64_t sub_1C2AEE6FC(unint64_t a1)
{
  return sub_1C2AEE75C(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1C2AEF6A4);
}

uint64_t sub_1C2AEE714(unint64_t a1)
{
  return sub_1C2AEE75C(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1C2AEF8D4);
}

uint64_t sub_1C2AEE72C(unint64_t a1)
{
  return sub_1C2AEE75C(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1C2AEFB1C);
}

uint64_t sub_1C2AEE744(unint64_t a1)
{
  return sub_1C2AEE75C(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_1C2AEFD64);
}

uint64_t sub_1C2AEE75C(unint64_t a1, uint64_t (*a2)(uint64_t, void, unint64_t))
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1C2B749C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v6 = *v2;
  if (*v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C2B749C0();
    swift_bridgeObjectRelease();
    uint64_t v8 = v7 + v5;
    if (!__OFADD__(v7, v5)) {
      goto LABEL_5;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v8 = v7 + v5;
  if (__OFADD__(v7, v5)) {
    goto LABEL_25;
  }
LABEL_5:
  unint64_t v6 = *v2;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v2 = v6;
  uint64_t v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    uint64_t v10 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v7 = 1;
  }
  if (v6 >> 62) {
    goto LABEL_27;
  }
  uint64_t v11 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v11 <= v8) {
      uint64_t v11 = v8;
    }
    swift_bridgeObjectRetain();
    unint64_t v6 = MEMORY[0x1C8766CA0](v7, v11, 1, v6);
    swift_bridgeObjectRelease();
    *uint64_t v2 = v6;
    uint64_t v10 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    uint64_t result = a2(v10 + 8 * *(void *)(v10 + 16) + 32, (*(void *)(v10 + 24) >> 1) - *(void *)(v10 + 16), a1);
    if (v13 >= v5) {
      break;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1C2B749C0();
    swift_bridgeObjectRelease();
  }
  if (v13 >= 1)
  {
    uint64_t v14 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v15 = __OFADD__(v14, v13);
    uint64_t v16 = v14 + v13;
    if (v15)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
  }
  swift_bridgeObjectRelease();
  return sub_1C2B741F0();
}

uint64_t sub_1C2AEE930(uint64_t a1, int a2, void *a3)
{
  if (a2)
  {
    return swift_continuation_throwingResume();
  }
  else if (a3)
  {
    sub_1C2AF44C8();
    swift_allocError();
    *uint64_t v5 = a3;
    id v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t MedicationDoseEventLogger.deinit()
{
  return v0;
}

uint64_t MedicationDoseEventLogger.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t MedicationDoseEventLogger.logUnloggedMedications(for:status:logDate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[18] = a4;
  v5[19] = v4;
  v5[16] = a2;
  v5[17] = a3;
  v5[15] = a1;
  return MEMORY[0x1F4188298](sub_1C2AEEA4C, 0, 0);
}

uint64_t sub_1C2AEEA4C()
{
  uint64_t v1 = v0[17];
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F66B38]), sel_initWithHealthStore_, *(void *)(v0[19] + 16));
  v0[20] = v2;
  uint64_t v3 = sub_1C2B73F60();
  v0[21] = v3;
  uint64_t v4 = sub_1C2B736C0();
  v0[22] = v4;
  v0[2] = v0;
  v0[7] = v0 + 24;
  v0[3] = sub_1C2AEEBB8;
  uint64_t v5 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1C2AEEDBC;
  v0[13] = &block_descriptor_7;
  v0[14] = v5;
  objc_msgSend(v2, sel_logUnloggedDoseEventsForScheduledItemIdentifier_status_logDate_completion_, v3, v1, v4, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1C2AEEBB8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 184) = v1;
  if (v1) {
    id v2 = sub_1C2AEED38;
  }
  else {
    id v2 = sub_1C2AEECC8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C2AEECC8()
{
  uint64_t v1 = *(void **)(v0 + 168);
  id v2 = *(void **)(v0 + 176);

  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1C2AEED38()
{
  uint64_t v1 = (void *)v0[22];
  uint64_t v3 = (void *)v0[20];
  id v2 = (void *)v0[21];
  swift_willThrow();

  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1C2AEEDBC(uint64_t a1, char a2, void *a3)
{
  if (a3)
  {
    sub_1C2AF44C8();
    swift_allocError();
    *uint64_t v4 = a3;
    id v5 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    **(unsigned char **)(*(void *)(*(void *)(a1 + 32) + 64) + 40) = a2;
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_1C2AEEE6C(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_1C2AEEF40(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_1C2AF4658((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x1E4FBB9B0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_1C2AF4658((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  return v7;
}

uint64_t sub_1C2AEEF40(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1C2B74660();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_1C2AEF0FC(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_1C2B748B0();
  if (!v8)
  {
    sub_1C2B74980();
    __break(1u);
LABEL_17:
    uint64_t result = sub_1C2B74A10();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_1C2AEF0FC(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_1C2AEF194(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1C2AEF30C(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_1C2AEF30C(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1C2AEF194(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_1C2B4E4C8(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_1C2B74830();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_1C2B74980();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_1C2B740B0();
      if (!v2) {
        return MEMORY[0x1E4FBC860];
      }
    }
    sub_1C2B74A10();
    __break(1u);
LABEL_14:
    uint64_t result = sub_1C2B74980();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

uint64_t sub_1C2AEF30C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C2AF46B4(0, &qword_1EA32BAC0, MEMORY[0x1E4FBC358], MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C2B74A10();
  __break(1u);
  return result;
}

uint64_t sub_1C2AEF47C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C2B749C0();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C2B749C0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1C2AF4398(0, &qword_1EBF11278, &qword_1EBF110C0);
        sub_1C2AF4700();
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          uint64_t v12 = sub_1C2AF96D0(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1C2AE3A18(0, &qword_1EBF110C0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1C2B74A10();
  __break(1u);
  return result;
}

uint64_t sub_1C2AEF6A4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C2B749C0();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C2B749C0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1C2AF07C8(0, &qword_1EA32BAA8, (uint64_t (*)(uint64_t))type metadata accessor for ScheduleItem, MEMORY[0x1E4FBB320]);
        sub_1C2AF4440();
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          uint64_t v12 = sub_1C2AF973C(v16, i, a3);
          uint64_t v14 = *v13;
          swift_retain();
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    type metadata accessor for ScheduleItem();
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1C2B74A10();
  __break(1u);
  return result;
}

uint64_t sub_1C2AEF8D4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C2B749C0();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C2B749C0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1C2AF4398(0, &qword_1EA32BA98, &qword_1EA32BA90);
        sub_1C2AF43F0(&qword_1EA32BAA0, &qword_1EA32BA98, &qword_1EA32BA90);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          uint64_t v12 = sub_1C2AF97A4(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1C2AE3A18(0, &qword_1EA32BA90);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1C2B74A10();
  __break(1u);
  return result;
}

uint64_t sub_1C2AEFB1C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C2B749C0();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C2B749C0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1C2AF4398(0, (unint64_t *)&qword_1EA32BA80, (unint64_t *)&qword_1EA32BA78);
        sub_1C2AF43F0(&qword_1EA32BA88, (unint64_t *)&qword_1EA32BA80, (unint64_t *)&qword_1EA32BA78);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          uint64_t v12 = sub_1C2AF97A4(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1C2AE3A18(0, (unint64_t *)&qword_1EA32BA78);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1C2B74A10();
  __break(1u);
  return result;
}

uint64_t sub_1C2AEFD64(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C2B749C0();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C2B749C0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1C2AF4398(0, &qword_1EA32BA68, &qword_1EA32BA60);
        sub_1C2AF43F0(&qword_1EA32BA70, &qword_1EA32BA68, &qword_1EA32BA60);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          uint64_t v12 = sub_1C2AF97A4(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1C2AE3A18(0, &qword_1EA32BA60);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_1C2B74A10();
  __break(1u);
  return result;
}

uint64_t _s27HealthMedicationsExperience28MedicationDoseEventLogSourceO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v98 = (unsigned char *)a2;
  uint64_t v3 = sub_1C2B73710();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v99 = v3;
  uint64_t v100 = v4;
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = &v91[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = MEMORY[0x1F4188790](v5);
  uint64_t v10 = &v91[-v9];
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  uint64_t v13 = &v91[-v12];
  MEMORY[0x1F4188790](v11);
  BOOL v15 = &v91[-v14];
  uint64_t v16 = type metadata accessor for MedicationDoseEventLogSource(0);
  uint64_t v17 = MEMORY[0x1F4188790](v16);
  uint64_t v19 = &v91[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v17);
  int v21 = (uint64_t *)&v91[-v20];
  sub_1C2AF4834();
  uint64_t v23 = MEMORY[0x1F4188790](v22 - 8);
  uint64_t v25 = &v91[*(int *)(v23 + 56) - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v26 = a1;
  id v27 = &v91[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C2AF0C20(v26, (uint64_t)v27, type metadata accessor for MedicationDoseEventLogSource);
  sub_1C2AF0C20((uint64_t)v98, (uint64_t)v25, type metadata accessor for MedicationDoseEventLogSource);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v96 = v7;
    uint64_t v97 = v10;
    sub_1C2AF0C20((uint64_t)v27, (uint64_t)v19, type metadata accessor for MedicationDoseEventLogSource);
    uint64_t v28 = v19[1];
    uint64_t v95 = (unsigned char *)*v19;
    uint64_t v29 = v19[2];
    sub_1C2AF0C88();
    uint64_t v31 = v30[16];
    uint64_t v32 = (char *)v19 + v31;
    uint64_t v33 = v30[20];
    uint64_t v94 = *(void *)((char *)v19 + v33);
    uint64_t v34 = v30[24];
    double v35 = *(double *)((char *)v19 + v34);
    int v36 = *((unsigned __int8 *)v19 + v34 + 8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      int v92 = v36;
      uint64_t v98 = v27;
      uint64_t v38 = (unsigned char *)*v25;
      uint64_t v37 = v25[1];
      uint64_t v39 = v25[2];
      uint64_t v40 = (char *)v25 + v31;
      uint64_t v93 = *(void *)((char *)v25 + v33);
      double v41 = *(double *)((char *)v25 + v34);
      char v42 = *((unsigned char *)v25 + v34 + 8);
      uint64_t v43 = *(void (**)(unsigned char *, char *, uint64_t))(v100 + 32);
      id v44 = v32;
      uint64_t v45 = v99;
      v43(v97, v44, v99);
      v43(v96, v40, v45);
      if (v95 == v38 && v28 == v37)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v47 = sub_1C2B74B50();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v47 & 1) == 0)
        {
          swift_release();
          swift_release();
          uint64_t v48 = v99;
          uint64_t v49 = *(void (**)(unsigned char *, uint64_t))(v100 + 8);
          v49(v96, v99);
          uint64_t v50 = v97;
LABEL_18:
          v49(v50, v48);
          uint64_t v60 = 0;
          id v61 = type metadata accessor for MedicationDoseEventLogSource;
          id v27 = v98;
          goto LABEL_46;
        }
      }
      char v73 = _s27HealthMedicationsExperience12ScheduleItemC2eeoiySbAC_ACtFZ_0(v29, v39);
      unint64_t v74 = v96;
      long long v75 = v97;
      id v27 = v98;
      if (v73)
      {
        char v76 = sub_1C2B736D0();
        swift_release();
        swift_release();
        if (v76)
        {
          uint64_t v77 = *(void (**)(unsigned char *, uint64_t))(v100 + 8);
          uint64_t v78 = v74;
          uint64_t v79 = v99;
          v77(v78, v99);
          v77(v75, v79);
          id v61 = type metadata accessor for MedicationDoseEventLogSource;
          if (v94 == v93)
          {
            if (v92)
            {
              id v61 = type metadata accessor for MedicationDoseEventLogSource;
              if (v42)
              {
LABEL_45:
                uint64_t v60 = 1;
                goto LABEL_46;
              }
            }
            else
            {
              if (v35 == v41) {
                char v89 = v42;
              }
              else {
                char v89 = 1;
              }
              id v61 = type metadata accessor for MedicationDoseEventLogSource;
              if ((v89 & 1) == 0) {
                goto LABEL_45;
              }
            }
LABEL_35:
            uint64_t v60 = 0;
            id v61 = type metadata accessor for MedicationDoseEventLogSource;
            goto LABEL_46;
          }
          goto LABEL_36;
        }
      }
      else
      {
        swift_release();
        swift_release();
      }
      uint64_t v83 = *(void (**)(unsigned char *, uint64_t))(v100 + 8);
      uint64_t v84 = v74;
      uint64_t v85 = v99;
      v83(v84, v99);
      v83(v75, v85);
      goto LABEL_35;
    }
    (*(void (**)(char *, uint64_t))(v100 + 8))(v32, v99);
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v60 = 0;
    id v61 = (uint64_t (*)(void))sub_1C2AF4834;
  }
  else
  {
    uint64_t v97 = v13;
    uint64_t v98 = v27;
    sub_1C2AF0C20((uint64_t)v27, (uint64_t)v21, type metadata accessor for MedicationDoseEventLogSource);
    uint64_t v52 = *v21;
    uint64_t v51 = v21[1];
    sub_1C2AF135C();
    uint64_t v54 = v53[12];
    id v55 = (char *)v21 + v54;
    uint64_t v56 = v53[16];
    v96 = *(unsigned char **)((char *)v21 + v56);
    uint64_t v57 = v53[20];
    double v58 = *(double *)((char *)v21 + v57);
    int v59 = *((unsigned __int8 *)v21 + v57 + 8);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      LODWORD(v94) = v59;
      uint64_t v63 = *v25;
      uint64_t v62 = v25[1];
      uint64_t v64 = (char *)v25 + v54;
      uint64_t v95 = *(unsigned char **)((char *)v25 + v56);
      double v65 = *(double *)((char *)v25 + v57);
      LODWORD(v93) = *((unsigned __int8 *)v25 + v57 + 8);
      uint64_t v66 = *(void (**)(unsigned char *, char *, uint64_t))(v100 + 32);
      uint64_t v67 = v15;
      uint64_t v68 = v55;
      uint64_t v69 = v99;
      v66(v15, v68, v99);
      uint64_t v70 = v97;
      v66(v97, v64, v69);
      if (v52 == v63 && v51 == v62)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v72 = sub_1C2B74B50();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v72 & 1) == 0)
        {
          uint64_t v48 = v99;
          uint64_t v49 = *(void (**)(unsigned char *, uint64_t))(v100 + 8);
          v49(v70, v99);
          uint64_t v50 = v67;
          goto LABEL_18;
        }
      }
      char v80 = sub_1C2B736D0();
      id v27 = v98;
      if ((v80 & 1) == 0)
      {
        uint64_t v86 = v99;
        uint64_t v87 = *(void (**)(unsigned char *, uint64_t))(v100 + 8);
        v87(v70, v99);
        v87(v67, v86);
        goto LABEL_35;
      }
      uint64_t v81 = v99;
      uint64_t v82 = *(void (**)(unsigned char *, uint64_t))(v100 + 8);
      v82(v70, v99);
      v82(v67, v81);
      id v61 = type metadata accessor for MedicationDoseEventLogSource;
      if (v96 == v95)
      {
        if (v94)
        {
          id v61 = type metadata accessor for MedicationDoseEventLogSource;
          if (v93) {
            goto LABEL_45;
          }
        }
        else
        {
          char v88 = v93;
          if (v58 != v65) {
            char v88 = 1;
          }
          id v61 = type metadata accessor for MedicationDoseEventLogSource;
          if ((v88 & 1) == 0) {
            goto LABEL_45;
          }
        }
        goto LABEL_35;
      }
LABEL_36:
      uint64_t v60 = 0;
      goto LABEL_46;
    }
    (*(void (**)(char *, uint64_t))(v100 + 8))(v55, v99);
    swift_bridgeObjectRelease();
    uint64_t v60 = 0;
    id v61 = (uint64_t (*)(void))sub_1C2AF4834;
    id v27 = v98;
  }
LABEL_46:
  sub_1C2AF4898((uint64_t)v27, v61);
  return v60;
}

uint64_t type metadata accessor for MedicationDoseEventUpdateModel(uint64_t a1)
{
  return sub_1C2AE7EB0(a1, (uint64_t *)&unk_1EA32BA20);
}

uint64_t sub_1C2AF0734(uint64_t a1, uint64_t a2)
{
  sub_1C2AF07C8(0, (unint64_t *)&qword_1EBF11360, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1C2AF07C8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C2AF082C(uint64_t a1)
{
  uint64_t v2 = sub_1C2B73860();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_1C2AF4770();
    uint64_t v9 = sub_1C2B74800();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    double v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    BOOL v15 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_1C2AF47F0(&qword_1EA32BAD8);
      uint64_t v16 = sub_1C2B73F10();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_1C2AF47F0(&qword_1EA32BAE0);
          char v23 = sub_1C2B73F50();
          uint64_t v24 = *v15;
          (*v15)(v6, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return v9;
      }
    }
  }
  return MEMORY[0x1E4FBC870];
}

uint64_t sub_1C2AF0B18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t type metadata accessor for MedicationDoseEventLogSource(uint64_t a1)
{
  return sub_1C2AE7EB0(a1, (uint64_t *)&unk_1EA32BA10);
}

uint64_t type metadata accessor for MedicationDoseEventSaveRequest(uint64_t a1)
{
  return sub_1C2AE7EB0(a1, (uint64_t *)&unk_1EA32BA30);
}

uint64_t sub_1C2AF0BB8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C2AF0C20(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_1C2AF0C88()
{
  if (!qword_1EA32B9E8)
  {
    MEMORY[0x1F4188790](0);
    type metadata accessor for ScheduleItem();
    sub_1C2B73710();
    type metadata accessor for HKMedicationDoseEventStatus(255);
    sub_1C2AF46B4(255, &qword_1EA32B9F0, MEMORY[0x1E4FBB3D0], MEMORY[0x1E4FBB718]);
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1EA32B9E8);
    }
  }
}

id sub_1C2AF0DEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  if (a3)
  {
    uint64_t v12 = (void *)sub_1C2B73F60();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = 0;
  }
  uint64_t v13 = (void *)sub_1C2B73F60();
  swift_bridgeObjectRelease();
  uint64_t v14 = sub_1C2B73710();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(a8, 1, v14) != 1)
  {
    uint64_t v16 = (void *)sub_1C2B736C0();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(a8, v14);
  }
  uint64_t v17 = (void *)sub_1C2B736C0();
  if (a11)
  {
    unint64_t v18 = (void *)sub_1C2B73EE0();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v18 = 0;
  }
  id v19 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_medicationDoseEventWithLogOrigin_scheduleItemIdentifier_medicationIdentifier_scheduledDoseQuantity_doseQuantity_scheduledDate_startDate_status_metadata_, a1, v12, v13, a6, a7, v16, v17, a10, v18);

  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(a9, v14);
  return v19;
}

id sub_1C2AF0FCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  int v34 = a7;
  double v32 = *(double *)&a6;
  uint64_t v35 = a4;
  uint64_t v36 = a1;
  uint64_t v38 = a2;
  uint64_t v39 = a3;
  uint64_t v11 = sub_1C2B73710();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2AF07C8(0, (unint64_t *)&qword_1EBF11360, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v32 - v16;
  if (a10) {
    double v18 = *(double *)(a10 + OBJC_IVAR____TtC27HealthMedicationsExperience12ScheduleItem_doseAmount);
  }
  else {
    double v18 = 0.0;
  }
  id v19 = self;
  uint64_t v20 = (void *)sub_1C2B73F60();
  id v21 = objc_msgSend(v19, sel_syncVersionForStatus_, a5);
  if (a10) {
    uint64_t v22 = *(unsigned __int8 *)(a10 + OBJC_IVAR____TtC27HealthMedicationsExperience12ScheduleItem_isLastScheduledDose);
  }
  else {
    uint64_t v22 = 0;
  }
  uint64_t v37 = a5;
  id v23 = objc_msgSend(v19, sel__metadataWithSyncIdentifier_syncVersion_isLastScheduledDose_, v20, v21, v22, *(void *)&v32);

  uint64_t v33 = sub_1C2B73EF0();
  if (a10)
  {
    uint64_t v25 = *(void *)(a10 + 16);
    uint64_t v24 = *(void *)(a10 + 24);
    uint64_t v26 = (objc_class *)NSNumber;
    swift_bridgeObjectRetain();
    id v27 = objc_msgSend(objc_allocWithZone(v26), sel_initWithDouble_, v18);
    if ((v34 & 1) == 0) {
      goto LABEL_9;
    }
LABEL_12:
    id v28 = 0;
    if (a10) {
      goto LABEL_10;
    }
LABEL_13:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v17, 1, 1, v11);
    goto LABEL_14;
  }
  uint64_t v24 = 0;
  uint64_t v25 = 0;
  id v27 = 0;
  if (v34) {
    goto LABEL_12;
  }
LABEL_9:
  id v28 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v32);
  if (!a10) {
    goto LABEL_13;
  }
LABEL_10:
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v17, a10 + OBJC_IVAR____TtC27HealthMedicationsExperience12ScheduleItem_date, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v17, 0, 1, v11);
LABEL_14:
  sub_1C2AE3A18(0, &qword_1EBF110C0);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v35, v11);
  uint64_t v29 = v39;
  swift_bridgeObjectRetain();
  id v30 = sub_1C2AF0DEC(v36, v25, v24, v38, v29, (uint64_t)v27, (uint64_t)v28, (uint64_t)v17, (uint64_t)v14, v37, v33);

  return v30;
}

void sub_1C2AF135C()
{
  if (!qword_1EA32BA00)
  {
    MEMORY[0x1F4188790](0);
    sub_1C2B73710();
    type metadata accessor for HKMedicationDoseEventStatus(255);
    sub_1C2AF46B4(255, &qword_1EA32B9F0, MEMORY[0x1E4FBB3D0], MEMORY[0x1E4FBB718]);
    unint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1) {
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1EA32BA00);
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for MedicationDoseEventLogSource(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    if (EnumCaseMultiPayload == 1)
    {
      a1[2] = a2[2];
      sub_1C2AF0C88();
      uint64_t v9 = v8;
      uint64_t v10 = *(int *)(v8 + 64);
      uint64_t v26 = (char *)a1 + v10;
      uint64_t v11 = (char *)a2 + v10;
      uint64_t v12 = sub_1C2B73710();
      uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_retain();
      v13(v26, v11, v12);
      *(uint64_t *)((char *)a1 + *(int *)(v9 + 80)) = *(uint64_t *)((char *)a2 + *(int *)(v9 + 80));
      uint64_t v14 = *(int *)(v9 + 96);
    }
    else
    {
      sub_1C2AF135C();
      uint64_t v19 = v18;
      uint64_t v20 = *(int *)(v18 + 48);
      id v21 = (char *)a1 + v20;
      uint64_t v22 = (char *)a2 + v20;
      uint64_t v23 = sub_1C2B73710();
      uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
      swift_bridgeObjectRetain();
      v24(v21, v22, v23);
      *(uint64_t *)((char *)a1 + *(int *)(v19 + 64)) = *(uint64_t *)((char *)a2 + *(int *)(v19 + 64));
      uint64_t v14 = *(int *)(v19 + 80);
    }
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    v15[8] = v16[8];
    *(void *)uint64_t v15 = *(void *)v16;
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for MedicationDoseEventLogSource(uint64_t a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_bridgeObjectRelease();
  if (EnumCaseMultiPayload == 1)
  {
    swift_release();
    sub_1C2AF0C88();
    uint64_t v4 = *(int *)(v3 + 64);
  }
  else
  {
    sub_1C2AF135C();
    uint64_t v4 = *(int *)(v5 + 48);
  }
  uint64_t v6 = a1 + v4;
  uint64_t v7 = sub_1C2B73710();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  return v8(v6, v7);
}

void *initializeWithCopy for MedicationDoseEventLogSource(void *a1, void *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  if (EnumCaseMultiPayload == 1)
  {
    a1[2] = a2[2];
    sub_1C2AF0C88();
    uint64_t v7 = v6;
    uint64_t v8 = *(int *)(v6 + 64);
    uint64_t v24 = (char *)a1 + v8;
    uint64_t v9 = (char *)a2 + v8;
    uint64_t v10 = sub_1C2B73710();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_retain();
    v11(v24, v9, v10);
    *(void *)((char *)a1 + *(int *)(v7 + 80)) = *(void *)((char *)a2 + *(int *)(v7 + 80));
    uint64_t v12 = (int *)(v7 + 96);
  }
  else
  {
    sub_1C2AF135C();
    uint64_t v14 = v13;
    uint64_t v15 = *(int *)(v13 + 48);
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = sub_1C2B73710();
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
    swift_bridgeObjectRetain();
    v19(v16, v17, v18);
    *(void *)((char *)a1 + *(int *)(v14 + 64)) = *(void *)((char *)a2 + *(int *)(v14 + 64));
    uint64_t v12 = (int *)(v14 + 80);
  }
  uint64_t v20 = *v12;
  id v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  *(void *)id v21 = *(void *)v22;
  v21[8] = v22[8];
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for MedicationDoseEventLogSource(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1C2AF4898((uint64_t)a1, type metadata accessor for MedicationDoseEventLogSource);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    a1[1] = a2[1];
    if (EnumCaseMultiPayload == 1)
    {
      a1[2] = a2[2];
      sub_1C2AF0C88();
      uint64_t v6 = v5;
      uint64_t v7 = *(int *)(v5 + 64);
      uint64_t v24 = (char *)a1 + v7;
      uint64_t v8 = (char *)a2 + v7;
      uint64_t v9 = sub_1C2B73710();
      uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_retain();
      v10(v24, v8, v9);
      *(void *)((char *)a1 + *(int *)(v6 + 80)) = *(void *)((char *)a2 + *(int *)(v6 + 80));
      uint64_t v11 = (int *)(v6 + 96);
    }
    else
    {
      sub_1C2AF135C();
      uint64_t v13 = v12;
      uint64_t v14 = *(int *)(v12 + 48);
      uint64_t v15 = (char *)a1 + v14;
      uint64_t v16 = (char *)a2 + v14;
      uint64_t v17 = sub_1C2B73710();
      uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
      swift_bridgeObjectRetain();
      v18(v15, v16, v17);
      *(void *)((char *)a1 + *(int *)(v13 + 64)) = *(void *)((char *)a2 + *(int *)(v13 + 64));
      uint64_t v11 = (int *)(v13 + 80);
    }
    uint64_t v19 = *v11;
    uint64_t v20 = (char *)a1 + v19;
    id v21 = (char *)a2 + v19;
    uint64_t v22 = *(void *)v21;
    v20[8] = v21[8];
    *(void *)uint64_t v20 = v22;
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for MedicationDoseEventLogSource(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  if (EnumCaseMultiPayload == 1)
  {
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    sub_1C2AF0C88();
    uint64_t v6 = v5;
    uint64_t v7 = *(int *)(v5 + 64);
    uint64_t v8 = a1 + v7;
    uint64_t v9 = a2 + v7;
    uint64_t v10 = sub_1C2B73710();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    *(void *)(a1 + *(int *)(v6 + 80)) = *(void *)(a2 + *(int *)(v6 + 80));
    uint64_t v11 = (int *)(v6 + 96);
  }
  else
  {
    sub_1C2AF135C();
    uint64_t v13 = v12;
    uint64_t v14 = *(int *)(v12 + 48);
    uint64_t v15 = a1 + v14;
    uint64_t v16 = a2 + v14;
    uint64_t v17 = sub_1C2B73710();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
    *(void *)(a1 + *(int *)(v13 + 64)) = *(void *)(a2 + *(int *)(v13 + 64));
    uint64_t v11 = (int *)(v13 + 80);
  }
  uint64_t v18 = *v11;
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  *(void *)uint64_t v19 = *(void *)v20;
  *(unsigned char *)(v19 + 8) = *(unsigned char *)(v20 + 8);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for MedicationDoseEventLogSource(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1C2AF4898(a1, type metadata accessor for MedicationDoseEventLogSource);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *(_OWORD *)a1 = *(_OWORD *)a2;
    if (EnumCaseMultiPayload == 1)
    {
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      sub_1C2AF0C88();
      uint64_t v6 = v5;
      uint64_t v7 = *(int *)(v5 + 64);
      uint64_t v8 = a1 + v7;
      uint64_t v9 = a2 + v7;
      uint64_t v10 = sub_1C2B73710();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
      *(void *)(a1 + *(int *)(v6 + 80)) = *(void *)(a2 + *(int *)(v6 + 80));
      uint64_t v11 = (int *)(v6 + 96);
    }
    else
    {
      sub_1C2AF135C();
      uint64_t v13 = v12;
      uint64_t v14 = *(int *)(v12 + 48);
      uint64_t v15 = a1 + v14;
      uint64_t v16 = a2 + v14;
      uint64_t v17 = sub_1C2B73710();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
      *(void *)(a1 + *(int *)(v13 + 64)) = *(void *)(a2 + *(int *)(v13 + 64));
      uint64_t v11 = (int *)(v13 + 80);
    }
    uint64_t v18 = *v11;
    uint64_t v19 = a1 + v18;
    uint64_t v20 = a2 + v18;
    *(void *)uint64_t v19 = *(void *)v20;
    *(unsigned char *)(v19 + 8) = *(unsigned char *)(v20 + 8);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1C2AF1D98()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1C2AF1DA8()
{
  uint64_t result = sub_1C2B73710();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout();
    uint64_t v4 = &v3;
    swift_getTupleTypeLayout();
    uint64_t v5 = &v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for MedicationDoseEventUpdateModel(char *a1, char **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    *((void *)a1 + 1) = a2[1];
    a1[16] = *((unsigned char *)a2 + 16);
    uint64_t v8 = *(int *)(a3 + 24);
    uint64_t v9 = &a1[v8];
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1C2B73710();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    uint64_t v14 = v4;
    if (v13(v10, 1, v11))
    {
      sub_1C2AF07C8(0, (unint64_t *)&qword_1EBF11360, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
      memcpy(v9, v10, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = *(int *)(a3 + 28);
    uint64_t v17 = &v7[v16];
    uint64_t v18 = (uint64_t)a2 + v16;
    *(void *)uint64_t v17 = *(void *)v18;
    v17[8] = *(unsigned char *)(v18 + 8);
  }
  return v7;
}

uint64_t destroy for MedicationDoseEventUpdateModel(id *a1, uint64_t a2)
{
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1C2B73710();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(char *, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

uint64_t initializeWithCopy for MedicationDoseEventUpdateModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void **)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  uint64_t v11 = sub_1C2B73710();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
  id v14 = v7;
  if (v13(v10, 1, v11))
  {
    sub_1C2AF07C8(0, (unint64_t *)&qword_1EBF11360, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v9, v10, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v16 = *(int *)(a3 + 28);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  *(void *)uint64_t v17 = *(void *)v18;
  *(unsigned char *)(v17 + 8) = *(unsigned char *)(v18 + 8);
  return a1;
}

uint64_t assignWithCopy for MedicationDoseEventUpdateModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a2;
  uint64_t v7 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v8 = v6;

  uint64_t v9 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v9;
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  uint64_t v13 = sub_1C2B73710();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 24))(v11, v12, v13);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    sub_1C2AF07C8(0, (unint64_t *)&qword_1EBF11360, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v14 + 16))(v11, v12, v13);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
LABEL_7:
  uint64_t v19 = *(int *)(a3 + 28);
  uint64_t v20 = a1 + v19;
  id v21 = (uint64_t *)(a2 + v19);
  uint64_t v22 = *v21;
  *(unsigned char *)(v20 + 8) = *((unsigned char *)v21 + 8);
  *(void *)uint64_t v20 = v22;
  return a1;
}

uint64_t initializeWithTake for MedicationDoseEventUpdateModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(int *)(a3 + 24);
  id v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_1C2B73710();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    sub_1C2AF07C8(0, (unint64_t *)&qword_1EBF11360, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = *(int *)(a3 + 28);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  *(void *)uint64_t v14 = *(void *)v15;
  *(unsigned char *)(v14 + 8) = *(unsigned char *)(v15 + 8);
  return a1;
}

uint64_t assignWithTake for MedicationDoseEventUpdateModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(int *)(a3 + 24);
  id v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_1C2B73710();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_1C2AF07C8(0, (unint64_t *)&qword_1EBF11360, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  uint64_t v16 = *(int *)(a3 + 28);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  *(void *)uint64_t v17 = *(void *)v18;
  *(unsigned char *)(v17 + 8) = *(unsigned char *)(v18 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for MedicationDoseEventUpdateModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C2AF2834);
}

uint64_t sub_1C2AF2834(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1C2AF07C8(0, (unint64_t *)&qword_1EBF11360, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for MedicationDoseEventUpdateModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C2AF2928);
}

void *sub_1C2AF2928(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    sub_1C2AF07C8(0, (unint64_t *)&qword_1EBF11360, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1C2AF2A00()
{
  sub_1C2AF07C8(319, (unint64_t *)&qword_1EBF11360, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

char *initializeBufferWithCopyOfBuffer for MedicationDoseEventSaveRequest(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *(void *)a1 = *a2;
    a1 = &v16[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = *a2;
      uint64_t v6 = a2[1];
      *(void *)a1 = *a2;
      *((void *)a1 + 1) = v6;
      a1[16] = *((unsigned char *)a2 + 16);
      uint64_t updated = type metadata accessor for MedicationDoseEventUpdateModel(0);
      uint64_t v9 = *(int *)(updated + 24);
      __dst = &a1[v9];
      uint64_t v10 = (char *)a2 + v9;
      uint64_t v11 = sub_1C2B73710();
      uint64_t v12 = *(void *)(v11 - 8);
      int v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
      int v14 = v7;
      if (v13(v10, 1, v11))
      {
        sub_1C2AF07C8(0, (unint64_t *)&qword_1EBF11360, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
        memcpy(__dst, v10, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
      }
      uint64_t v34 = *(int *)(updated + 28);
      uint64_t v35 = &a1[v34];
      uint64_t v36 = (uint64_t)a2 + v34;
      *(void *)uint64_t v35 = *(void *)v36;
      v35[8] = *(unsigned char *)(v36 + 8);
    }
    else
    {
      type metadata accessor for MedicationDoseEventLogSource(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v18 = a2[1];
      *(void *)a1 = *a2;
      *((void *)a1 + 1) = v18;
      if (EnumCaseMultiPayload == 1)
      {
        *((void *)a1 + 2) = a2[2];
        sub_1C2AF0C88();
        uint64_t v20 = v19;
        uint64_t v21 = *(int *)(v19 + 64);
        uint64_t v38 = (uint64_t)a2 + v21;
        __dsta = &a1[v21];
        uint64_t v22 = sub_1C2B73710();
        uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_retain();
        v23(__dsta, v38, v22);
        *(void *)&a1[*(int *)(v20 + 80)] = *(char **)((char *)a2 + *(int *)(v20 + 80));
        uint64_t v24 = (int *)(v20 + 96);
      }
      else
      {
        sub_1C2AF135C();
        uint64_t v26 = v25;
        uint64_t v27 = *(int *)(v25 + 48);
        __dstb = &a1[v27];
        uint64_t v28 = (uint64_t)a2 + v27;
        uint64_t v29 = sub_1C2B73710();
        id v30 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16);
        swift_bridgeObjectRetain();
        v30(__dstb, v28, v29);
        *(void *)&a1[*(int *)(v26 + 64)] = *(char **)((char *)a2 + *(int *)(v26 + 64));
        uint64_t v24 = (int *)(v26 + 80);
      }
      uint64_t v31 = *v24;
      double v32 = &a1[v31];
      uint64_t v33 = (uint64_t)a2 + v31;
      *(void *)double v32 = *(void *)v33;
      v32[8] = *(unsigned char *)(v33 + 8);
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for MedicationDoseEventSaveRequest(id *a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {

    char v2 = (char *)a1 + *(int *)(type metadata accessor for MedicationDoseEventUpdateModel(0) + 24);
    uint64_t v3 = sub_1C2B73710();
    uint64_t v14 = *(void *)(v3 - 8);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v2, 1, v3);
    if (result) {
      return result;
    }
    uint64_t v11 = *(uint64_t (**)(char *, uint64_t))(v14 + 8);
    int v13 = v2;
    uint64_t v12 = v3;
  }
  else
  {
    type metadata accessor for MedicationDoseEventLogSource(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    swift_bridgeObjectRelease();
    if (EnumCaseMultiPayload == 1)
    {
      swift_release();
      sub_1C2AF0C88();
      uint64_t v7 = *(int *)(v6 + 64);
    }
    else
    {
      sub_1C2AF135C();
      uint64_t v7 = *(int *)(v8 + 48);
    }
    uint64_t v9 = (char *)a1 + v7;
    uint64_t v10 = sub_1C2B73710();
    uint64_t v11 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8);
    uint64_t v12 = v10;
    int v13 = v9;
  }
  return v11(v13, v12);
}

uint64_t initializeWithCopy for MedicationDoseEventSaveRequest(uint64_t a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    int v5 = *(void **)a2;
    uint64_t v4 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v4;
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
    uint64_t updated = type metadata accessor for MedicationDoseEventUpdateModel(0);
    uint64_t v7 = *(int *)(updated + 24);
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (const void *)(a2 + v7);
    uint64_t v10 = sub_1C2B73710();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
    id v13 = v5;
    if (v12(v9, 1, v10))
    {
      sub_1C2AF07C8(0, (unint64_t *)&qword_1EBF11360, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
      memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    uint64_t v32 = *(int *)(updated + 28);
    uint64_t v33 = a1 + v32;
    uint64_t v34 = a2 + v32;
    *(void *)uint64_t v33 = *(void *)v34;
    *(unsigned char *)(v33 + 8) = *(unsigned char *)(v34 + 8);
  }
  else
  {
    type metadata accessor for MedicationDoseEventLogSource(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v16 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v16;
    if (EnumCaseMultiPayload == 1)
    {
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      sub_1C2AF0C88();
      uint64_t v18 = v17;
      uint64_t v19 = *(int *)(v17 + 64);
      uint64_t v36 = a2 + v19;
      uint64_t v37 = a1 + v19;
      uint64_t v20 = sub_1C2B73710();
      uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_retain();
      v21(v37, v36, v20);
      *(void *)(a1 + *(int *)(v18 + 80)) = *(void *)(a2 + *(int *)(v18 + 80));
      uint64_t v22 = (int *)(v18 + 96);
    }
    else
    {
      sub_1C2AF135C();
      uint64_t v24 = v23;
      uint64_t v25 = *(int *)(v23 + 48);
      uint64_t v38 = a1 + v25;
      uint64_t v26 = a2 + v25;
      uint64_t v27 = sub_1C2B73710();
      uint64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 16);
      swift_bridgeObjectRetain();
      v28(v38, v26, v27);
      *(void *)(a1 + *(int *)(v24 + 64)) = *(void *)(a2 + *(int *)(v24 + 64));
      uint64_t v22 = (int *)(v24 + 80);
    }
    uint64_t v29 = *v22;
    uint64_t v30 = a1 + v29;
    uint64_t v31 = a2 + v29;
    *(void *)uint64_t v30 = *(void *)v31;
    *(unsigned char *)(v30 + 8) = *(unsigned char *)(v31 + 8);
    swift_storeEnumTagMultiPayload();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for MedicationDoseEventSaveRequest(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1C2AF4898(a1, type metadata accessor for MedicationDoseEventSaveRequest);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = *(void **)a2;
      *(void *)a1 = *(void *)a2;
      uint64_t v5 = *(void *)(a2 + 8);
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      *(void *)(a1 + 8) = v5;
      uint64_t updated = type metadata accessor for MedicationDoseEventUpdateModel(0);
      uint64_t v7 = *(int *)(updated + 24);
      uint64_t v8 = (void *)(a1 + v7);
      uint64_t v9 = (const void *)(a2 + v7);
      uint64_t v10 = sub_1C2B73710();
      uint64_t v11 = *(void *)(v10 - 8);
      uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
      id v13 = v4;
      if (v12(v9, 1, v10))
      {
        sub_1C2AF07C8(0, (unint64_t *)&qword_1EBF11360, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
        memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      uint64_t v32 = *(int *)(updated + 28);
      uint64_t v33 = a1 + v32;
      uint64_t v34 = (uint64_t *)(a2 + v32);
      uint64_t v35 = *v34;
      *(unsigned char *)(v33 + 8) = *((unsigned char *)v34 + 8);
      *(void *)uint64_t v33 = v35;
    }
    else
    {
      type metadata accessor for MedicationDoseEventLogSource(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      if (EnumCaseMultiPayload == 1)
      {
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        sub_1C2AF0C88();
        uint64_t v17 = v16;
        uint64_t v18 = *(int *)(v16 + 64);
        uint64_t v37 = a2 + v18;
        uint64_t v38 = a1 + v18;
        uint64_t v19 = sub_1C2B73710();
        uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_retain();
        v20(v38, v37, v19);
        *(void *)(a1 + *(int *)(v17 + 80)) = *(void *)(a2 + *(int *)(v17 + 80));
        uint64_t v21 = (int *)(v17 + 96);
      }
      else
      {
        sub_1C2AF135C();
        uint64_t v23 = v22;
        uint64_t v24 = *(int *)(v22 + 48);
        uint64_t v39 = a1 + v24;
        uint64_t v25 = a2 + v24;
        uint64_t v26 = sub_1C2B73710();
        uint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16);
        swift_bridgeObjectRetain();
        v27(v39, v25, v26);
        *(void *)(a1 + *(int *)(v23 + 64)) = *(void *)(a2 + *(int *)(v23 + 64));
        uint64_t v21 = (int *)(v23 + 80);
      }
      uint64_t v28 = *v21;
      uint64_t v29 = a1 + v28;
      uint64_t v30 = (uint64_t *)(a2 + v28);
      uint64_t v31 = *v30;
      *(unsigned char *)(v29 + 8) = *((unsigned char *)v30 + 8);
      *(void *)uint64_t v29 = v31;
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for MedicationDoseEventSaveRequest(uint64_t a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v4;
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
    uint64_t updated = type metadata accessor for MedicationDoseEventUpdateModel(0);
    uint64_t v6 = *(int *)(updated + 24);
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (const void *)(a2 + v6);
    uint64_t v9 = sub_1C2B73710();
    uint64_t v10 = *(void *)(v9 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    {
      sub_1C2AF07C8(0, (unint64_t *)&qword_1EBF11360, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
      memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
    uint64_t v29 = *(int *)(updated + 28);
    uint64_t v30 = a1 + v29;
    uint64_t v31 = a2 + v29;
    *(void *)uint64_t v30 = *(void *)v31;
    *(unsigned char *)(v30 + 8) = *(unsigned char *)(v31 + 8);
  }
  else
  {
    type metadata accessor for MedicationDoseEventLogSource(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *(_OWORD *)a1 = *(_OWORD *)a2;
    if (EnumCaseMultiPayload == 1)
    {
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      sub_1C2AF0C88();
      uint64_t v14 = v13;
      uint64_t v15 = *(int *)(v13 + 64);
      uint64_t v16 = a1 + v15;
      uint64_t v17 = a2 + v15;
      uint64_t v18 = sub_1C2B73710();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
      *(void *)(a1 + *(int *)(v14 + 80)) = *(void *)(a2 + *(int *)(v14 + 80));
      uint64_t v19 = (int *)(v14 + 96);
    }
    else
    {
      sub_1C2AF135C();
      uint64_t v21 = v20;
      uint64_t v22 = *(int *)(v20 + 48);
      uint64_t v23 = a1 + v22;
      uint64_t v24 = a2 + v22;
      uint64_t v25 = sub_1C2B73710();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
      *(void *)(a1 + *(int *)(v21 + 64)) = *(void *)(a2 + *(int *)(v21 + 64));
      uint64_t v19 = (int *)(v21 + 80);
    }
    uint64_t v26 = *v19;
    uint64_t v27 = a1 + v26;
    uint64_t v28 = a2 + v26;
    *(void *)uint64_t v27 = *(void *)v28;
    *(unsigned char *)(v27 + 8) = *(unsigned char *)(v28 + 8);
    swift_storeEnumTagMultiPayload();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for MedicationDoseEventSaveRequest(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1C2AF4898(a1, type metadata accessor for MedicationDoseEventSaveRequest);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v4;
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      uint64_t updated = type metadata accessor for MedicationDoseEventUpdateModel(0);
      uint64_t v6 = *(int *)(updated + 24);
      uint64_t v7 = (void *)(a1 + v6);
      uint64_t v8 = (const void *)(a2 + v6);
      uint64_t v9 = sub_1C2B73710();
      uint64_t v10 = *(void *)(v9 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      {
        sub_1C2AF07C8(0, (unint64_t *)&qword_1EBF11360, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
        memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
      uint64_t v29 = *(int *)(updated + 28);
      uint64_t v30 = a1 + v29;
      uint64_t v31 = a2 + v29;
      *(void *)uint64_t v30 = *(void *)v31;
      *(unsigned char *)(v30 + 8) = *(unsigned char *)(v31 + 8);
    }
    else
    {
      type metadata accessor for MedicationDoseEventLogSource(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *(_OWORD *)a1 = *(_OWORD *)a2;
      if (EnumCaseMultiPayload == 1)
      {
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        sub_1C2AF0C88();
        uint64_t v14 = v13;
        uint64_t v15 = *(int *)(v13 + 64);
        uint64_t v16 = a1 + v15;
        uint64_t v17 = a2 + v15;
        uint64_t v18 = sub_1C2B73710();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
        *(void *)(a1 + *(int *)(v14 + 80)) = *(void *)(a2 + *(int *)(v14 + 80));
        uint64_t v19 = (int *)(v14 + 96);
      }
      else
      {
        sub_1C2AF135C();
        uint64_t v21 = v20;
        uint64_t v22 = *(int *)(v20 + 48);
        uint64_t v23 = a1 + v22;
        uint64_t v24 = a2 + v22;
        uint64_t v25 = sub_1C2B73710();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
        *(void *)(a1 + *(int *)(v21 + 64)) = *(void *)(a2 + *(int *)(v21 + 64));
        uint64_t v19 = (int *)(v21 + 80);
      }
      uint64_t v26 = *v19;
      uint64_t v27 = a1 + v26;
      uint64_t v28 = a2 + v26;
      *(void *)uint64_t v27 = *(void *)v28;
      *(unsigned char *)(v27 + 8) = *(unsigned char *)(v28 + 8);
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t _s27HealthMedicationsExperience28MedicationDoseEventLogSourceOwet_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t _s27HealthMedicationsExperience28MedicationDoseEventLogSourceOwst_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_1C2AF3C50()
{
  uint64_t result = type metadata accessor for MedicationDoseEventLogSource(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for MedicationDoseEventUpdateModel(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for MedicationDoseEventLogger()
{
  return self;
}

uint64_t method lookup function for MedicationDoseEventLogger(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationDoseEventLogger);
}

uint64_t dispatch thunk of MedicationDoseEventLogger.__allocating_init(healthStore:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

void sub_1C2AF3D64(unint64_t a1)
{
  unint64_t v1 = a1;
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1C2B749C0();
    swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      sub_1C2AF40BC();
      uint64_t v3 = sub_1C2B74800();
      uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_1C2B749C0();
      swift_bridgeObjectRelease();
      if (!v5) {
        return;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  uint64_t v3 = MEMORY[0x1E4FBC870];
  uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return;
  }
LABEL_9:
  uint64_t v7 = v3 + 56;
  uint64_t v43 = v5;
  if ((v1 & 0xC000000000000001) != 0)
  {
    uint64_t v8 = 0;
    unint64_t v41 = v1;
    while (1)
    {
      while (1)
      {
        uint64_t v9 = MEMORY[0x1C8766C90](v8, v1);
        BOOL v10 = __OFADD__(v8++, 1);
        if (v10)
        {
          __break(1u);
          goto LABEL_36;
        }
        uint64_t v11 = v9;
        uint64_t v12 = sub_1C2B745E0();
        uint64_t v13 = -1 << *(unsigned char *)(v3 + 32);
        unint64_t v14 = v12 & ~v13;
        unint64_t v15 = v14 >> 6;
        uint64_t v16 = *(void *)(v7 + 8 * (v14 >> 6));
        uint64_t v17 = 1 << v14;
        if (((1 << v14) & v16) != 0) {
          break;
        }
LABEL_20:
        *(void *)(v7 + 8 * v15) = v17 | v16;
        *(void *)(*(void *)(v3 + 48) + 8 * v14) = v11;
        uint64_t v23 = *(void *)(v3 + 16);
        BOOL v10 = __OFADD__(v23, 1);
        uint64_t v24 = v23 + 1;
        if (v10) {
          goto LABEL_37;
        }
        *(void *)(v3 + 16) = v24;
        if (v8 == v5) {
          return;
        }
      }
      sub_1C2AE3A18(0, &qword_1EA32BA48);
      id v18 = *(id *)(*(void *)(v3 + 48) + 8 * v14);
      char v19 = sub_1C2B745F0();

      if ((v19 & 1) == 0)
      {
        uint64_t v20 = ~v13;
        while (1)
        {
          unint64_t v14 = (v14 + 1) & v20;
          unint64_t v15 = v14 >> 6;
          uint64_t v16 = *(void *)(v7 + 8 * (v14 >> 6));
          uint64_t v17 = 1 << v14;
          if ((v16 & (1 << v14)) == 0) {
            break;
          }
          id v21 = *(id *)(*(void *)(v3 + 48) + 8 * v14);
          char v22 = sub_1C2B745F0();

          if (v22) {
            goto LABEL_11;
          }
        }
        unint64_t v1 = v41;
        uint64_t v5 = v43;
        goto LABEL_20;
      }
LABEL_11:
      swift_unknownObjectRelease();
      unint64_t v1 = v41;
      uint64_t v5 = v43;
      if (v8 == v43) {
        return;
      }
    }
  }
  uint64_t v25 = 0;
  unint64_t v40 = v1 + 32;
  uint64_t v42 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v25 != v42)
  {
    id v26 = *(id *)(v40 + 8 * v25);
    uint64_t v27 = sub_1C2B745E0();
    uint64_t v28 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v29 = v27 & ~v28;
    unint64_t v30 = v29 >> 6;
    uint64_t v31 = *(void *)(v7 + 8 * (v29 >> 6));
    uint64_t v32 = 1 << v29;
    if (((1 << v29) & v31) != 0)
    {
      sub_1C2AE3A18(0, &qword_1EA32BA48);
      id v33 = *(id *)(*(void *)(v3 + 48) + 8 * v29);
      char v34 = sub_1C2B745F0();

      if (v34)
      {
LABEL_24:

        goto LABEL_25;
      }
      uint64_t v35 = ~v28;
      while (1)
      {
        unint64_t v29 = (v29 + 1) & v35;
        unint64_t v30 = v29 >> 6;
        uint64_t v31 = *(void *)(v7 + 8 * (v29 >> 6));
        uint64_t v32 = 1 << v29;
        if ((v31 & (1 << v29)) == 0) {
          break;
        }
        id v36 = *(id *)(*(void *)(v3 + 48) + 8 * v29);
        char v37 = sub_1C2B745F0();

        if (v37) {
          goto LABEL_24;
        }
      }
    }
    *(void *)(v7 + 8 * v30) = v32 | v31;
    *(void *)(*(void *)(v3 + 48) + 8 * v29) = v26;
    uint64_t v38 = *(void *)(v3 + 16);
    BOOL v10 = __OFADD__(v38, 1);
    uint64_t v39 = v38 + 1;
    if (v10) {
      goto LABEL_38;
    }
    *(void *)(v3 + 16) = v39;
LABEL_25:
    if (++v25 == v43) {
      return;
    }
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
}

void sub_1C2AF40BC()
{
  if (!qword_1EA32BA40)
  {
    sub_1C2AE3A18(255, &qword_1EA32BA48);
    sub_1C2AF4130();
    unint64_t v0 = sub_1C2B74810();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA32BA40);
    }
  }
}

unint64_t sub_1C2AF4130()
{
  unint64_t result = qword_1EA32BA50;
  if (!qword_1EA32BA50)
  {
    sub_1C2AE3A18(255, &qword_1EA32BA48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA32BA50);
  }
  return result;
}

uint64_t sub_1C2AF4198(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1C2AF4338();
    uint64_t v3 = sub_1C2B74800();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v25 = a1 + 32;
    while (1)
    {
      uint64_t v6 = (uint64_t *)(v25 + 16 * v4);
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      sub_1C2B74C20();
      swift_bridgeObjectRetain();
      sub_1C2B74070();
      uint64_t result = sub_1C2B74C60();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = result & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = *(void *)(v3 + 48);
        uint64_t v16 = (void *)(v15 + 16 * v11);
        BOOL v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (uint64_t result = sub_1C2B74B50(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        uint64_t v18 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v18;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          char v19 = (void *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            uint64_t result = sub_1C2B74B50();
            if ((result & 1) == 0) {
              continue;
            }
          }
          goto LABEL_3;
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      id v21 = (void *)(*(void *)(v3 + 48) + 16 * v11);
      *id v21 = v8;
      v21[1] = v7;
      uint64_t v22 = *(void *)(v3 + 16);
      BOOL v23 = __OFADD__(v22, 1);
      uint64_t v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return MEMORY[0x1E4FBC870];
}

void sub_1C2AF4338()
{
  if (!qword_1EA32BA58)
  {
    unint64_t v0 = sub_1C2B74810();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA32BA58);
    }
  }
}

void sub_1C2AF4398(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1C2AE3A18(255, a3);
    unint64_t v4 = sub_1C2B74280();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C2AF43F0(unint64_t *a1, unint64_t *a2, unint64_t *a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C2AF4398(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C2AF4440()
{
  unint64_t result = qword_1EA32BAB0;
  if (!qword_1EA32BAB0)
  {
    sub_1C2AF07C8(255, &qword_1EA32BAA8, (uint64_t (*)(uint64_t))type metadata accessor for ScheduleItem, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA32BAB0);
  }
  return result;
}

unint64_t sub_1C2AF44C8()
{
  unint64_t result = qword_1EBF110B0;
  if (!qword_1EBF110B0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBF110B0);
  }
  return result;
}

uint64_t sub_1C2AF4520(uint64_t a1, uint64_t a2)
{
  sub_1C2AF07C8(0, (unint64_t *)&qword_1EBF11360, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_OWORD *sub_1C2AF45B4(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

void *__swift_project_boxed_opaque_existential_0(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_0(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_1C2AF4658(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

void sub_1C2AF46B4(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_1C2AF4700()
{
  unint64_t result = qword_1EA32BAC8;
  if (!qword_1EA32BAC8)
  {
    sub_1C2AF4398(255, &qword_1EBF11278, &qword_1EBF110C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA32BAC8);
  }
  return result;
}

void sub_1C2AF4770()
{
  if (!qword_1EA32BAD0)
  {
    sub_1C2B73860();
    sub_1C2AF47F0(&qword_1EA32BAD8);
    unint64_t v0 = sub_1C2B74810();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA32BAD0);
    }
  }
}

uint64_t sub_1C2AF47F0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C2B73860();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C2AF4834()
{
  if (!qword_1EA32BAE8)
  {
    type metadata accessor for MedicationDoseEventLogSource(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA32BAE8);
    }
  }
}

uint64_t sub_1C2AF4898(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t MedicationRoomInteractionAnalyticsManager.provenance.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_1C2AF4900()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t sub_1C2AF4934(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 24) = a1;
  return result;
}

uint64_t (*sub_1C2AF4974())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1C2AF49C8()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 25);
}

uint64_t sub_1C2AF49FC(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 25) = a1;
  return result;
}

uint64_t (*sub_1C2AF4A3C())()
{
  return j__swift_endAccess;
}

id MedicationRoomInteractionAnalyticsManager.calendarCache.getter()
{
  return *(id *)(v0 + 32);
}

uint64_t MedicationRoomInteractionAnalyticsManager.__allocating_init(provenance:hasSideEffectsContent:hasPregnancyContent:)(uint64_t a1, char a2, char a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2AC98]), sel_init);
  *(void *)(v6 + 16) = a1;
  *(unsigned char *)(v6 + 24) = a2;
  *(unsigned char *)(v6 + 25) = a3;
  return v6;
}

uint64_t MedicationRoomInteractionAnalyticsManager.init(provenance:hasSideEffectsContent:hasPregnancyContent:)(uint64_t a1, char a2, char a3)
{
  *(void *)(v3 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2AC98]), sel_init);
  *(void *)(v3 + 16) = a1;
  *(unsigned char *)(v3 + 24) = a2;
  *(unsigned char *)(v3 + 25) = a3;
  return v3;
}

void sub_1C2AF4B64(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if (qword_1EBF11340 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1C2B73A90();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EBF11348);
  uint64_t v7 = sub_1C2B73A80();
  os_log_type_t v8 = sub_1C2B744E0();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315650;
    aBlock[0] = v25;
    uint64_t v10 = sub_1C2B74CD0();
    uint64_t v27 = sub_1C2AEEE6C(v10, v11, aBlock);
    sub_1C2B74650();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2080;
    id v12 = (id)HKStringFromMedicationRoomAnalyticsAction();
    uint64_t v13 = sub_1C2B73FA0();
    unint64_t v15 = v14;

    uint64_t v27 = sub_1C2AEEE6C(v13, v15, aBlock);
    sub_1C2B74650();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 22) = 2048;
    uint64_t v27 = a2;
    sub_1C2B74650();
    _os_log_impl(&dword_1C2ADB000, v7, v8, "[%s] Submitting analytics for action: %s, roomType: %ld", (uint8_t *)v9, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1C8767A10](v25, -1, -1);
    MEMORY[0x1C8767A10](v9, -1, -1);
  }

  uint64_t v16 = *(void *)(v3 + 16);
  BOOL v17 = *(void **)(v3 + 32);
  swift_beginAccess();
  char v18 = *(unsigned char *)(v3 + 24);
  swift_beginAccess();
  char v19 = *(unsigned char *)(v3 + 25);
  type metadata accessor for MedicationRoomInteractionEvent();
  swift_allocObject();
  id v20 = v17;
  id v21 = sub_1C2B291F8(a1, a2, v16, v20, v18, v19);

  id v22 = (id)HKLogMedication();
  if (qword_1EBF10BE0 != -1) {
    swift_once();
  }
  id v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2ABE8]), sel_initWithLoggingCategory_healthDataSource_, v22, *((void *)off_1EBF10E78 + 2));

  aBlock[4] = (uint64_t)sub_1C2AF4F24;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1C2AF5204;
  aBlock[3] = (uint64_t)&block_descriptor_4;
  uint64_t v24 = _Block_copy(aBlock);
  objc_msgSend(v23, sel_submitEvent_completion_, v21, v24);
  _Block_release(v24);
  swift_release();
}

void sub_1C2AF4F24(char a1, void *a2)
{
  if (a1)
  {
    if (qword_1EBF11340 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_1C2B73A90();
    __swift_project_value_buffer(v2, (uint64_t)qword_1EBF11348);
    oslog = sub_1C2B73A80();
    os_log_type_t v3 = sub_1C2B744B0();
    if (os_log_type_enabled(oslog, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl(&dword_1C2ADB000, oslog, v3, "[MedicationRoomInteractionAnalytics] Successfully submitted analytics", v4, 2u);
      MEMORY[0x1C8767A10](v4, -1, -1);
    }
    goto LABEL_12;
  }
  if (qword_1EBF11340 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_1C2B73A90();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EBF11348);
  id v7 = a2;
  id v8 = a2;
  oslog = sub_1C2B73A80();
  os_log_type_t v9 = sub_1C2B744C0();
  if (!os_log_type_enabled(oslog, v9))
  {

LABEL_12:

    return;
  }
  uint64_t v10 = (uint8_t *)swift_slowAlloc();
  unint64_t v11 = (void *)swift_slowAlloc();
  *(_DWORD *)uint64_t v10 = 138412290;
  if (a2)
  {
    id v12 = a2;
    uint64_t v13 = _swift_stdlib_bridgeErrorToNSError();
    sub_1C2B74650();
  }
  else
  {
    sub_1C2B74650();
    uint64_t v13 = 0;
  }
  void *v11 = v13;

  _os_log_impl(&dword_1C2ADB000, oslog, v9, "[MedicationRoomInteractionAnalytics] Failed to submit analytics with error: %@.", v10, 0xCu);
  sub_1C2AF5550();
  swift_arrayDestroy();
  MEMORY[0x1C8767A10](v11, -1, -1);
  MEMORY[0x1C8767A10](v10, -1, -1);
}

void sub_1C2AF5204(uint64_t a1, uint64_t a2, void *a3)
{
  unint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t MedicationRoomInteractionAnalyticsManager.deinit()
{
  return v0;
}

uint64_t MedicationRoomInteractionAnalyticsManager.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_1C2AF52EC@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 24);
  return result;
}

uint64_t sub_1C2AF5334(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 24) = v2;
  return result;
}

uint64_t sub_1C2AF5378@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 25);
  return result;
}

uint64_t sub_1C2AF53C0(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 25) = v2;
  return result;
}

uint64_t type metadata accessor for MedicationRoomInteractionAnalyticsManager()
{
  return self;
}

uint64_t method lookup function for MedicationRoomInteractionAnalyticsManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationRoomInteractionAnalyticsManager);
}

uint64_t dispatch thunk of MedicationRoomInteractionAnalyticsManager.hasSideEffectsContent.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of MedicationRoomInteractionAnalyticsManager.hasSideEffectsContent.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of MedicationRoomInteractionAnalyticsManager.hasSideEffectsContent.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of MedicationRoomInteractionAnalyticsManager.hasPregnancyContent.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of MedicationRoomInteractionAnalyticsManager.hasPregnancyContent.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of MedicationRoomInteractionAnalyticsManager.hasPregnancyContent.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of MedicationRoomInteractionAnalyticsManager.__allocating_init(provenance:hasSideEffectsContent:hasPregnancyContent:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of MedicationRoomInteractionAnalyticsManager.submitMedicationInteraction(action:roomType:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

void sub_1C2AF5550()
{
  if (!qword_1EA32BAF0)
  {
    sub_1C2AF55A8();
    unint64_t v0 = sub_1C2B74630();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA32BAF0);
    }
  }
}

unint64_t sub_1C2AF55A8()
{
  unint64_t result = qword_1EBF10810;
  if (!qword_1EBF10810)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBF10810);
  }
  return result;
}

uint64_t MedicationScheduleItemDataSource.__allocating_init(healthStore:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t MedicationScheduleItemDataSource.init(healthStore:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return v1;
}

uint64_t MedicationScheduleItemDataSource.fetchScheduleItem(_:)(uint64_t a1, uint64_t a2)
{
  v3[12] = a2;
  v3[13] = v2;
  v3[11] = a1;
  sub_1C2AE0F7C();
  v3[14] = swift_task_alloc();
  v3[15] = swift_task_alloc();
  sub_1C2AF5E10(0, &qword_1EBF11260, (unint64_t *)&unk_1EBF112B0, 0x1E4F66B50, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for HKMedicationScheduleItemQueryDescriptor);
  v3[16] = v4;
  v3[17] = swift_task_alloc();
  v3[18] = swift_task_alloc();
  sub_1C2AF5E10(0, &qword_1EBF110F0, (unint64_t *)&unk_1EBF112B0, 0x1E4F66B50, MEMORY[0x1E4F26FC8]);
  v3[19] = v5;
  v3[20] = *(void *)(v5 - 8);
  v3[21] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C2AF57C8, 0, 0);
}

uint64_t sub_1C2AF57C8()
{
  uint64_t v2 = v0[20];
  uint64_t v1 = v0[21];
  uint64_t v3 = v0[17];
  uint64_t v5 = v0[15];
  uint64_t v4 = (int *)v0[16];
  uint64_t v6 = v0[14];
  uint64_t v16 = v0[19];
  uint64_t v17 = v6;
  uint64_t v21 = v0[13];
  uint64_t v22 = v0[18];
  uint64_t v18 = v5;
  uint64_t v19 = v0[12];
  uint64_t v20 = v0[11];
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x1C87659D0](KeyPath, 0);
  uint64_t v8 = sub_1C2B73710();
  os_log_type_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
  v9(v5, 1, 1, v8);
  v9(v6, 1, 1, v8);
  sub_1C2AF5EE8();
  unint64_t v10 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1C2B76500;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v2 + 16))(v11 + v10, v1, v16);
  v9(v3, 1, 1, v8);
  uint64_t v12 = v3 + v4[7];
  v9(v12, 1, 1, v8);
  uint64_t v13 = (void *)(v3 + v4[8]);
  *uint64_t v13 = 0;
  v13[1] = 0;
  uint64_t v14 = v4[9];
  *(void *)(v3 + v14) = 0;
  swift_bridgeObjectRetain();
  sub_1C2B73E80();
  sub_1C2AF5F6C(v18, v3);
  sub_1C2AF5F6C(v17, v12);
  swift_bridgeObjectRelease();
  *uint64_t v13 = v20;
  v13[1] = v19;
  swift_bridgeObjectRelease();
  *(void *)(v3 + v14) = v11;
  sub_1C2AF5FD0(v3, v22);
  v0[22] = *(void *)(v21 + 16);
  return MEMORY[0x1F4188298](sub_1C2AF5A04, 0, 0);
}

uint64_t sub_1C2AF5A04()
{
  uint64_t v1 = (void *)v0[22];
  uint64_t v2 = v0[18];
  v0[2] = v0;
  v0[7] = v0 + 10;
  v0[3] = sub_1C2AF5AB4;
  uint64_t v3 = swift_continuation_init();
  sub_1C2AF9278(v3, v2, v1);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1C2AF5AB4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 184) = v2;
  if (v2)
  {
    swift_willThrow();
    uint64_t v3 = sub_1C2AF5D44;
  }
  else
  {
    *(void *)(v1 + 192) = *(void *)(v1 + 80);
    uint64_t v3 = sub_1C2AF5BD8;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

void sub_1C2AF5BD8()
{
  unint64_t v1 = v0[24];
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1C2B749C0();
    swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    id v2 = 0;
    goto LABEL_9;
  }
  if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    id v2 = (id)MEMORY[0x1C8766C90](0, v0[24]);
  }
  else
  {
    if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v2 = *(id *)(v0[24] + 32);
  }
  swift_bridgeObjectRelease();
LABEL_9:
  uint64_t v5 = v0[20];
  uint64_t v4 = v0[21];
  uint64_t v6 = v0[19];
  sub_1C2AF9648(v0[18]);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (void (*)(id))v0[1];
  v7(v2);
}

uint64_t sub_1C2AF5D44()
{
  uint64_t v2 = v0[20];
  uint64_t v1 = v0[21];
  uint64_t v3 = v0[19];
  sub_1C2AF9648(v0[18]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

void sub_1C2AF5E10(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1C2AE3A18(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

char *keypath_get_selector_scheduledDateTime()
{
  return sel_scheduledDateTime;
}

void sub_1C2AF5E84(id *a1)
{
  id v1 = objc_msgSend(*a1, sel_scheduledDateTime);
  sub_1C2B736E0();
}

void sub_1C2AF5EE8()
{
  if (!qword_1EBF11310)
  {
    sub_1C2AF5E10(255, &qword_1EBF110F0, (unint64_t *)&unk_1EBF112B0, 0x1E4F66B50, MEMORY[0x1E4F26FC8]);
    unint64_t v0 = sub_1C2B74B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBF11310);
    }
  }
}

uint64_t sub_1C2AF5F6C(uint64_t a1, uint64_t a2)
{
  sub_1C2AE0F7C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C2AF5FD0(uint64_t a1, uint64_t a2)
{
  sub_1C2AF5E10(0, &qword_1EBF11260, (unint64_t *)&unk_1EBF112B0, 0x1E4F66B50, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for HKMedicationScheduleItemQueryDescriptor);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t MedicationScheduleItemDataSource.hk_scheduleItems(for:)(uint64_t a1, uint64_t a2)
{
  v3[12] = a2;
  v3[13] = v2;
  v3[11] = a1;
  sub_1C2AE0F7C();
  v3[14] = swift_task_alloc();
  v3[15] = swift_task_alloc();
  sub_1C2AF5E10(0, &qword_1EBF11260, (unint64_t *)&unk_1EBF112B0, 0x1E4F66B50, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for HKMedicationScheduleItemQueryDescriptor);
  v3[16] = v4;
  v3[17] = swift_task_alloc();
  v3[18] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C2AF6170, 0, 0);
}

uint64_t sub_1C2AF6170()
{
  uint64_t v1 = v0[17];
  uint64_t v3 = v0[15];
  uint64_t v2 = (int *)v0[16];
  uint64_t v4 = v0[14];
  uint64_t v13 = v0[13];
  uint64_t v14 = v0[18];
  uint64_t v5 = v0[12];
  uint64_t v12 = v0[11];
  uint64_t v6 = sub_1C2B73710();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  v7(v3, 1, 1, v6);
  v7(v4, 1, 1, v6);
  v7(v1, 1, 1, v6);
  uint64_t v8 = v1 + v2[7];
  v7(v8, 1, 1, v6);
  unint64_t v9 = (void *)(v1 + v2[8]);
  *unint64_t v9 = 0;
  v9[1] = 0;
  uint64_t v10 = v2[9];
  *(void *)(v1 + v10) = 0;
  swift_bridgeObjectRetain();
  sub_1C2B73E80();
  sub_1C2AF5F6C(v3, v1);
  sub_1C2AF5F6C(v4, v8);
  swift_bridgeObjectRelease();
  *unint64_t v9 = v12;
  v9[1] = v5;
  swift_bridgeObjectRelease();
  *(void *)(v1 + v10) = 0;
  sub_1C2AF5FD0(v1, v14);
  v0[19] = *(void *)(v13 + 16);
  return MEMORY[0x1F4188298](sub_1C2AF632C, 0, 0);
}

uint64_t sub_1C2AF632C()
{
  uint64_t v2 = v0[18];
  uint64_t v1 = (void *)v0[19];
  v0[2] = v0;
  v0[7] = v0 + 10;
  v0[3] = sub_1C2AF63D8;
  uint64_t v3 = swift_continuation_init();
  sub_1C2AF9278(v3, v2, v1);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1C2AF63D8()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 160) = v2;
  if (v2)
  {
    swift_willThrow();
    uint64_t v3 = sub_1C2AF6594;
  }
  else
  {
    *(void *)(v1 + 168) = *(void *)(v1 + 80);
    uint64_t v3 = sub_1C2AF64FC;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1C2AF64FC()
{
  sub_1C2AF9648(v0[18]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v2 = v0[21];
  return v1(v2);
}

uint64_t sub_1C2AF6594()
{
  sub_1C2AF9648(*(void *)(v0 + 144));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t MedicationScheduleItemDataSource.fetchScheduleItems(in:)(uint64_t a1)
{
  v2[11] = a1;
  v2[12] = v1;
  sub_1C2AE0F7C();
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  sub_1C2AF5E10(0, &qword_1EBF11260, (unint64_t *)&unk_1EBF112B0, 0x1E4F66B50, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for HKMedicationScheduleItemQueryDescriptor);
  v2[15] = v3;
  v2[16] = swift_task_alloc();
  v2[17] = swift_task_alloc();
  sub_1C2AF5E10(0, &qword_1EBF110F0, (unint64_t *)&unk_1EBF112B0, 0x1E4F66B50, MEMORY[0x1E4F26FC8]);
  v2[18] = v4;
  v2[19] = *(void *)(v4 - 8);
  v2[20] = swift_task_alloc();
  uint64_t v5 = sub_1C2B73710();
  v2[21] = v5;
  v2[22] = *(void *)(v5 - 8);
  v2[23] = swift_task_alloc();
  v2[24] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C2AF6830, 0, 0);
}

uint64_t sub_1C2AF6830()
{
  uint64_t v1 = v0[24];
  uint64_t v2 = v0[21];
  uint64_t v3 = v0[22];
  uint64_t v4 = v0[19];
  uint64_t v18 = v0[20];
  uint64_t v5 = v0[16];
  uint64_t v6 = v0[14];
  uint64_t v20 = v0[18];
  uint64_t v21 = (int *)v0[15];
  uint64_t v16 = v0[23];
  uint64_t v17 = v0[13];
  uint64_t v22 = v0[12];
  uint64_t v23 = v0[17];
  sub_1C2B73500();
  sub_1C2B734F0();
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x1C87659D0](KeyPath, 0);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  uint64_t v19 = v6;
  v8(v6, v1, v2);
  unint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
  v9(v6, 0, 1, v2);
  v8(v17, v16, v2);
  v9(v17, 0, 1, v2);
  sub_1C2AF5EE8();
  unint64_t v10 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1C2B76500;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 16))(v11 + v10, v18, v20);
  v9(v5, 1, 1, v2);
  uint64_t v12 = v5 + v21[7];
  v9(v12, 1, 1, v2);
  uint64_t v13 = (void *)(v5 + v21[8]);
  *uint64_t v13 = 0;
  v13[1] = 0;
  uint64_t v14 = v21[9];
  *(void *)(v5 + v14) = 0;
  sub_1C2B73E80();
  sub_1C2AF5F6C(v19, v5);
  sub_1C2AF5F6C(v17, v12);
  swift_bridgeObjectRelease();
  *uint64_t v13 = 0;
  v13[1] = 0;
  swift_bridgeObjectRelease();
  *(void *)(v5 + v14) = v11;
  sub_1C2AF5FD0(v5, v23);
  v0[25] = *(void *)(v22 + 16);
  return MEMORY[0x1F4188298](sub_1C2AF6A8C, 0, 0);
}

uint64_t sub_1C2AF6A8C()
{
  uint64_t v1 = (void *)v0[25];
  uint64_t v2 = v0[17];
  v0[2] = v0;
  v0[7] = v0 + 10;
  v0[3] = sub_1C2AF6B3C;
  uint64_t v3 = swift_continuation_init();
  sub_1C2AF9278(v3, v2, v1);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1C2AF6B3C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 208) = v2;
  if (v2)
  {
    swift_willThrow();
    uint64_t v3 = sub_1C2AF6D84;
  }
  else
  {
    *(void *)(v1 + 216) = *(void *)(v1 + 80);
    uint64_t v3 = sub_1C2AF6C60;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1C2AF6C60()
{
  uint64_t v1 = v0[23];
  uint64_t v2 = v0[24];
  uint64_t v3 = v0[21];
  uint64_t v4 = v0[22];
  uint64_t v6 = v0[19];
  uint64_t v5 = v0[20];
  uint64_t v7 = v0[18];
  sub_1C2AF9648(v0[17]);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v8(v1, v3);
  v8(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v9 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v10 = v0[27];
  return v9(v10);
}

uint64_t sub_1C2AF6D84()
{
  uint64_t v1 = v0[23];
  uint64_t v2 = v0[24];
  uint64_t v3 = v0[21];
  uint64_t v4 = v0[22];
  uint64_t v6 = v0[19];
  uint64_t v5 = v0[20];
  uint64_t v7 = v0[18];
  sub_1C2AF9648(v0[17]);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v8(v1, v3);
  v8(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_1C2AF6EA4(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  sub_1C2AF5E10(0, &qword_1EBF11270, &qword_1EBF112D8, 0x1E4F2B420, MEMORY[0x1E4F29558]);
  v3[5] = v4;
  v3[6] = *(void *)(v4 - 8);
  v3[7] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C2AF6F94, 0, 0);
}

uint64_t sub_1C2AF6F94()
{
  uint64_t v13 = v0[4];
  uint64_t v1 = self;
  uint64_t v2 = (void *)sub_1C2B73F60();
  id v3 = objc_msgSend(v1, sel_predicateForMedicationDoseEventWithScheduleItemIdentifier_, v2);
  v0[8] = v3;

  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4F29540];
  sub_1C2AFA488(0, (unint64_t *)&unk_1EBF11330, &qword_1EBF11268, MEMORY[0x1E4F29540]);
  sub_1C2AF5E10(0, &qword_1EBF11268, &qword_1EBF112D8, 0x1E4F2B420, v4);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C2B76500;
  id v5 = objc_msgSend(self, sel_medicationDoseEventType);
  sub_1C2AE3A18(0, &qword_1EBF112D8);
  id v6 = v3;
  sub_1C2B73EA0();

  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4F26FC8];
  sub_1C2AFA488(0, (unint64_t *)&unk_1EBF11320, &qword_1EBF110F8, MEMORY[0x1E4F26FC8]);
  sub_1C2AF5E10(0, &qword_1EBF110F8, &qword_1EBF112D8, 0x1E4F2B420, v7);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C2B76500;
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x1C87659D0](KeyPath, 0);
  sub_1C2B73EB0();
  uint64_t v9 = *(void *)(v13 + 16);
  uint64_t v10 = (void *)swift_task_alloc();
  v0[9] = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_1C2AF72D0;
  uint64_t v11 = v0[5];
  return MEMORY[0x1F40E7850](v9, v11);
}

uint64_t sub_1C2AF72D0(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 80) = v1;
  swift_task_dealloc();
  if (v1)
  {
    id v5 = sub_1C2AF74E0;
  }
  else
  {
    *(void *)(v4 + 88) = a1;
    id v5 = sub_1C2AF73F8;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1C2AF73F8()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = sub_1C2B5E424(v0[11]);
  swift_bridgeObjectRelease();
  id v3 = (void (**)(uint64_t, uint64_t))(v1 + 8);
  uint64_t v4 = v0[7];
  id v5 = (void *)v0[8];
  uint64_t v6 = v0[5];
  if (v2)
  {
    (*v3)(v0[7], v0[5]);
  }
  else
  {

    (*v3)(v4, v6);
    uint64_t v2 = MEMORY[0x1E4FBC860];
  }
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(uint64_t))v0[1];
  return v7(v2);
}

uint64_t sub_1C2AF74E0()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 48);

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t MedicationScheduleItemDataSource.unloggedScheduleItems(for:)(uint64_t a1, uint64_t a2)
{
  v3[191] = v2;
  v3[185] = a2;
  v3[179] = a1;
  sub_1C2AE0F7C();
  v3[197] = swift_task_alloc();
  uint64_t v4 = sub_1C2B73710();
  v3[203] = v4;
  v3[209] = *(void *)(v4 - 8);
  v3[210] = swift_task_alloc();
  v3[211] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C2AF7674, 0, 0);
}

uint64_t sub_1C2AF7674()
{
  uint64_t v1 = v0[191];
  uint64_t v2 = v0[185];
  uint64_t v3 = v0[179];
  uint64_t v4 = (void *)swift_allocObject();
  v0[212] = v4;
  v4[2] = v1;
  v4[3] = v3;
  v4[4] = v2;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  id v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB320];
  sub_1C2AF5E10(255, &qword_1EBF11278, &qword_1EBF110C0, 0x1E4F2B1F0, MEMORY[0x1E4FBB320]);
  swift_asyncLet_begin();
  uint64_t v6 = (void *)swift_allocObject();
  v0[213] = v6;
  v6[2] = v1;
  v6[3] = v3;
  v6[4] = v2;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1C2AF5E10(255, &qword_1EBF11280, (unint64_t *)&unk_1EBF112B0, 0x1E4F66B50, v5);
  swift_asyncLet_begin();
  return MEMORY[0x1F41881E0](v0 + 82, v0 + 173, sub_1C2AF7848, v0 + 174);
}

uint64_t sub_1C2AF7848()
{
  v1[214] = v0;
  if (v0)
  {
    return MEMORY[0x1F41881D0](v1 + 2, v1 + 167, sub_1C2AF8210, v1 + 180);
  }
  else
  {
    v1[215] = v1[173];
    swift_bridgeObjectRetain();
    return MEMORY[0x1F41881E0](v1 + 2, v1 + 167, sub_1C2AF7914, v1 + 192);
  }
}

uint64_t sub_1C2AF7914()
{
  *(void *)(v1 + 1728) = v0;
  if (v0) {
    uint64_t v2 = sub_1C2AF8370;
  }
  else {
    uint64_t v2 = sub_1C2AF7948;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C2AF7948()
{
  unint64_t v1 = v0[215];
  uint64_t v2 = MEMORY[0x1E4FBC860];
  uint64_t v77 = MEMORY[0x1E4FBC860];
  unint64_t v76 = v0[167];
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1C2B749C0();
    uint64_t v3 = v4;
    if (v4)
    {
LABEL_3:
      if (v3 < 1)
      {
        __break(1u);
        goto LABEL_55;
      }
      uint64_t v8 = 0;
      uint64_t v9 = v0[215] + 32;
      do
      {
        if ((v1 & 0xC000000000000001) != 0) {
          id v10 = (id)MEMORY[0x1C8766C90](v8, v0[215]);
        }
        else {
          id v10 = *(id *)(v9 + 8 * v8);
        }
        uint64_t v11 = v10;
        if (objc_msgSend(v10, sel_status) == (id)4 || objc_msgSend(v11, sel_status) == (id)5)
        {
        }
        else
        {
          sub_1C2B748D0();
          sub_1C2B74910();
          sub_1C2B74920();
          sub_1C2B748E0();
        }
        ++v8;
      }
      while (v3 != v8);
      swift_bridgeObjectRelease();
      uint64_t v12 = v77;
      uint64_t v78 = v2;
      if (v12 < 0) {
        goto LABEL_37;
      }
      goto LABEL_17;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t v4 = swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_3;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v12 = MEMORY[0x1E4FBC860];
  uint64_t v78 = v2;
  if ((MEMORY[0x1E4FBC860] & 0x8000000000000000) != 0) {
    goto LABEL_37;
  }
LABEL_17:
  if ((v12 & 0x4000000000000000) == 0)
  {
    uint64_t v13 = *(void *)(v12 + 16);
    uint64_t v4 = swift_retain();
    if (!v13) {
      goto LABEL_38;
    }
LABEL_19:
    if (v13 >= 1)
    {
      uint64_t v14 = 0;
      uint64_t v15 = v0[209];
      unint64_t v16 = v12 & 0xC000000000000001;
      uint64_t v17 = (void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32);
      char v73 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56);
      unint64_t v74 = (void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32);
      uint64_t v68 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
      id v61 = (void (**)(void))(v15 + 16);
      uint64_t v62 = (void (**)(uint64_t, uint64_t))(v15 + 8);
      uint64_t v63 = v12;
      unint64_t v70 = v12 & 0xC000000000000001;
      uint64_t v71 = v13;
      while (1)
      {
        if (v16) {
          id v18 = (id)MEMORY[0x1C8766C90](v14, v12);
        }
        else {
          id v18 = *(id *)(v12 + 8 * v14 + 32);
        }
        uint64_t v19 = v18;
        id v20 = objc_msgSend(v18, sel_scheduleItemIdentifier, v61);
        if (v20)
        {
          uint64_t v21 = v20;
          uint64_t v22 = sub_1C2B73FA0();
          uint64_t v24 = v23;

          id v25 = objc_msgSend(v19, sel_scheduledDate);
          if (v25)
          {
            id v26 = v25;
            uint64_t v69 = v22;
            uint64_t v27 = v0[210];
            uint64_t v28 = v0[203];
            uint64_t v29 = v0[197];
            sub_1C2B736E0();

            unint64_t v30 = *v17;
            uint64_t v31 = v27;
            uint64_t v13 = v71;
            v30(v29, v31, v28);
            (*v73)(v29, 0, 1, v28);
            uint64_t v32 = v28;
            unint64_t v16 = v70;
            if ((*v68)(v29, 1, v32) != 1)
            {
              v30(v0[211], v0[197], v0[203]);
              id v33 = objc_msgSend(v19, sel_scheduledDoseQuantity);
              if (v33)
              {
                char v34 = v33;
                uint64_t v66 = v0[210];
                uint64_t v67 = v0[211];
                uint64_t v35 = v0[203];
                (*v61)();
                id v36 = objc_msgSend(v19, sel_medicationIdentifier);
                uint64_t v37 = sub_1C2B73FA0();
                uint64_t v64 = v38;
                uint64_t v65 = v37;

                objc_msgSend(v34, sel_doubleValue);
                uint64_t v40 = v39;
                unsigned __int8 v41 = objc_msgSend(v19, sel_isLastScheduledDose);
                type metadata accessor for ScheduleItem();
                uint64_t v42 = swift_allocObject();
                *(void *)(v42 + 16) = v69;
                *(void *)(v42 + 24) = v24;
                v30(v42 + OBJC_IVAR____TtC27HealthMedicationsExperience12ScheduleItem_date, v66, v35);
                uint64_t v43 = (uint64_t *)(v42 + OBJC_IVAR____TtC27HealthMedicationsExperience12ScheduleItem_medicationIdentifier);
                *uint64_t v43 = v65;
                v43[1] = v64;
                *(void *)(v42 + OBJC_IVAR____TtC27HealthMedicationsExperience12ScheduleItem_doseAmount) = v40;
                *(unsigned char *)(v42 + OBJC_IVAR____TtC27HealthMedicationsExperience12ScheduleItem_isLastScheduledDose) = v41;

                (*v62)(v67, v35);
                MEMORY[0x1C87665F0]();
                uint64_t v17 = v74;
                if (*(void *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                  sub_1C2B74210();
                }
                sub_1C2B74250();
                sub_1C2B741F0();
                uint64_t v12 = v63;
                unint64_t v16 = v70;
                uint64_t v13 = v71;
              }
              else
              {
                uint64_t v45 = v0[203];
                uint64_t v46 = v0[211];
                swift_bridgeObjectRelease();
                (*v62)(v46, v45);

                uint64_t v12 = v63;
                uint64_t v17 = v74;
              }
              goto LABEL_22;
            }
          }
          else
          {
            (*v73)(v0[197], 1, 1, v0[203]);
          }
          uint64_t v44 = v0[197];
          swift_bridgeObjectRelease();
          sub_1C2AFA240(v44);

          uint64_t v17 = v74;
        }
        else
        {
        }
LABEL_22:
        if (v13 == ++v14)
        {
          swift_release();
          uint64_t v47 = v78;
          goto LABEL_39;
        }
      }
    }
LABEL_55:
    __break(1u);
    return MEMORY[0x1F41881D0](v4, v5, v6, v7);
  }
LABEL_37:
  swift_retain();
  uint64_t v4 = sub_1C2B749C0();
  uint64_t v13 = v4;
  if (v4) {
    goto LABEL_19;
  }
LABEL_38:
  swift_release();
  uint64_t v47 = MEMORY[0x1E4FBC860];
LABEL_39:
  uint64_t v72 = v47;
  swift_release();
  if (v76 >> 62) {
    goto LABEL_49;
  }
  uint64_t v48 = *(void *)((v76 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  for (unint64_t i = v0; v48; unint64_t i = v0)
  {
    uint64_t v49 = 0;
    unint64_t v50 = v76;
    unint64_t v51 = MEMORY[0x1E4FBC860];
    while (1)
    {
      id v52 = (v76 & 0xC000000000000001) != 0
          ? (id)MEMORY[0x1C8766C90](v49, v50)
          : *(id *)(v50 + 8 * v49 + 32);
      uint64_t v53 = v52;
      uint64_t v54 = (void *)(v49 + 1);
      if (__OFADD__(v49, 1)) {
        break;
      }
      uint64_t v55 = i[215];
      id v56 = objc_msgSend(v52, sel_doses);
      sub_1C2AE3A18(0, (unint64_t *)&unk_1EBF112C0);
      uint64_t v0 = (void *)v48;
      unint64_t v57 = sub_1C2B741D0();

      swift_bridgeObjectRetain();
      id v58 = v53;
      unint64_t v59 = sub_1C2AF9C88(v57, v55, v58);

      swift_bridgeObjectRelease();
      uint64_t v48 = (uint64_t)v0;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1C2AEE6FC(v59);

      swift_bridgeObjectRelease();
      ++v49;
      unint64_t v50 = v76;
      if (v54 == v0) {
        goto LABEL_51;
      }
    }
    __break(1u);
LABEL_49:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v48 = sub_1C2B749C0();
  }
  unint64_t v51 = MEMORY[0x1E4FBC860];
LABEL_51:
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  sub_1C2AEE6FC(v51);
  i[217] = v72;
  uint64_t v6 = sub_1C2AF80B4;
  uint64_t v4 = (uint64_t)(i + 2);
  id v5 = i + 167;
  uint64_t v7 = i + 186;
  return MEMORY[0x1F41881D0](v4, v5, v6, v7);
}

uint64_t sub_1C2AF80B4()
{
  return MEMORY[0x1F4188298](sub_1C2AF80D0, 0, 0);
}

uint64_t sub_1C2AF80D0()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 656, v0 + 1384, sub_1C2AF8150, v0 + 1296);
}

uint64_t sub_1C2AF8150()
{
  return MEMORY[0x1F4188298](sub_1C2AF816C, 0, 0);
}

uint64_t sub_1C2AF816C()
{
  swift_release_n();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 1736);
  return v1(v2);
}

uint64_t sub_1C2AF8210()
{
  return MEMORY[0x1F4188298](sub_1C2AF822C, 0, 0);
}

uint64_t sub_1C2AF822C()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 656, v0 + 1384, sub_1C2AF82AC, v0 + 1344);
}

uint64_t sub_1C2AF82AC()
{
  return MEMORY[0x1F4188298](sub_1C2AF82C8, 0, 0);
}

uint64_t sub_1C2AF82C8()
{
  swift_release_n();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C2AF8370()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F41881D0](v0 + 16, v0 + 1336, sub_1C2AF83F0, v0 + 1584);
}

uint64_t sub_1C2AF83F0()
{
  return MEMORY[0x1F4188298](sub_1C2AF840C, 0, 0);
}

uint64_t sub_1C2AF840C()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 656, v0 + 1384, sub_1C2AF848C, v0 + 1632);
}

uint64_t sub_1C2AF848C()
{
  return MEMORY[0x1F4188298](sub_1C2AF84A8, 0, 0);
}

uint64_t sub_1C2AF84A8()
{
  swift_release_n();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C2AF8550(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a1;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v4 + 24) = v7;
  *uint64_t v7 = v4;
  v7[1] = sub_1C2AF8600;
  return sub_1C2AF6EA4(a3, a4);
}

uint64_t sub_1C2AF8600(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 32) = a1;
    return MEMORY[0x1F4188298](sub_1C2AFA54C, 0, 0);
  }
}

uint64_t sub_1C2AF874C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a1;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v4 + 24) = v7;
  *uint64_t v7 = v4;
  v7[1] = sub_1C2AF87FC;
  return MedicationScheduleItemDataSource.hk_scheduleItems(for:)(a3, a4);
}

uint64_t sub_1C2AF87FC(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 32) = a1;
    return MEMORY[0x1F4188298](sub_1C2AF8948, 0, 0);
  }
}

uint64_t sub_1C2AF8948()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t MedicationScheduleItemDataSource.scheduleItems(for:medicationsIdentifiers:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  v4[6] = a3;
  v4[7] = v7;
  v4[4] = a1;
  v4[5] = a2;
  uint64_t v8 = (void *)swift_task_alloc();
  v4[8] = v8;
  void *v8 = v4;
  v8[1] = sub_1C2AF8A3C;
  return MedicationScheduleItemDataSource.hk_scheduleItems(for:)(a1, a2);
}

uint64_t sub_1C2AF8A3C(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[9] = a1;
  v3[10] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = (uint64_t (*)(void))v3[1];
    return v4();
  }
  else
  {
    return MEMORY[0x1F4188298](sub_1C2AF8B70, 0, 0);
  }
}

uint64_t sub_1C2AF8B70()
{
  uint64_t v21 = v0;
  unint64_t v1 = v0[9];
  if (!(v1 >> 62))
  {
    if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    if (qword_1EBF11340 == -1)
    {
LABEL_9:
      uint64_t v9 = sub_1C2B73A90();
      __swift_project_value_buffer(v9, (uint64_t)qword_1EBF11348);
      swift_bridgeObjectRetain_n();
      uint64_t v10 = sub_1C2B73A80();
      os_log_type_t v11 = sub_1C2B744C0();
      if (os_log_type_enabled(v10, v11))
      {
        uint64_t v19 = v0[4];
        unint64_t v12 = v0[5];
        uint64_t v13 = swift_slowAlloc();
        uint64_t v14 = swift_slowAlloc();
        v20[0] = v14;
        *(_DWORD *)uint64_t v13 = 136315394;
        uint64_t v15 = sub_1C2B74CD0();
        v0[2] = sub_1C2AEEE6C(v15, v16, v20);
        sub_1C2B74650();
        swift_bridgeObjectRelease();
        *(_WORD *)(v13 + 12) = 2080;
        swift_bridgeObjectRetain();
        v0[3] = sub_1C2AEEE6C(v19, v12, v20);
        sub_1C2B74650();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1C2ADB000, v10, v11, "[%s] Schedule item with identifier %s is not found", (uint8_t *)v13, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1C8767A10](v14, -1, -1);
        MEMORY[0x1C8767A10](v13, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      uint64_t v7 = MEMORY[0x1E4FBC860];
      goto LABEL_13;
    }
LABEL_18:
    swift_once();
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1C2B749C0();
  swift_bridgeObjectRelease();
  if (!v8) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    id v2 = (id)MEMORY[0x1C8766C90](0, v0[9]);
    goto LABEL_6;
  }
  if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_18;
  }
  id v2 = *(id *)(v0[9] + 32);
LABEL_6:
  uint64_t v3 = v0[6];
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(v2, sel_doses);
  sub_1C2AE3A18(0, (unint64_t *)&unk_1EBF112C0);
  unint64_t v5 = sub_1C2B741D0();

  swift_bridgeObjectRetain();
  id v6 = v2;
  uint64_t v7 = sub_1C2AFA29C(v5, v3, v6);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_13:
  uint64_t v17 = (uint64_t (*)(uint64_t))v0[1];
  return v17(v7);
}

uint64_t sub_1C2AF8ED8@<X0>(void **a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v9 = sub_1C2B73710();
  uint64_t result = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *a1;
  if (!a2)
  {
    uint64_t v50 = v12;
    id v27 = v14;
LABEL_16:
    id v28 = objc_msgSend(a3, sel_identifier);
    uint64_t v29 = sub_1C2B73FA0();
    uint64_t v48 = v30;
    uint64_t v49 = v29;

    id v31 = objc_msgSend(a3, sel_scheduledDateTime);
    sub_1C2B736E0();

    id v32 = objc_msgSend(v14, sel_medicationIdentifier);
    uint64_t v33 = sub_1C2B73FA0();
    uint64_t v35 = v34;

    id v36 = objc_msgSend(v14, sel_dose);
    objc_msgSend(v36, sel_doubleValue);
    uint64_t v38 = v37;

    unsigned __int8 v39 = objc_msgSend(v14, sel_isLastScheduledDose);
    type metadata accessor for ScheduleItem();
    uint64_t v26 = swift_allocObject();
    uint64_t v40 = v50;
    uint64_t v41 = v48;
    *(void *)(v26 + 16) = v49;
    *(void *)(v26 + 24) = v41;
    uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v40 + 32))(v26 + OBJC_IVAR____TtC27HealthMedicationsExperience12ScheduleItem_date, v13, v9);
    uint64_t v42 = (uint64_t *)(v26 + OBJC_IVAR____TtC27HealthMedicationsExperience12ScheduleItem_medicationIdentifier);
    *uint64_t v42 = v33;
    v42[1] = v35;
    *(void *)(v26 + OBJC_IVAR____TtC27HealthMedicationsExperience12ScheduleItem_doseAmount) = v38;
    *(unsigned char *)(v26 + OBJC_IVAR____TtC27HealthMedicationsExperience12ScheduleItem_isLastScheduledDose) = v39;
    goto LABEL_17;
  }
  uint64_t v49 = v9;
  uint64_t v15 = *(void *)(a2 + 16);
  if (v15)
  {
    uint64_t v44 = a3;
    uint64_t v45 = v14;
    uint64_t v46 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v47 = a4;
    uint64_t v50 = v12;
    uint64_t v48 = v4;
    id v16 = v14;
    swift_bridgeObjectRetain();
    uint64_t v17 = (uint64_t *)(a2 + 40);
    while (1)
    {
      uint64_t v18 = *(v17 - 1);
      uint64_t v19 = *v17;
      swift_bridgeObjectRetain();
      id v20 = objc_msgSend(v16, sel_medicationIdentifier);
      uint64_t v21 = sub_1C2B73FA0();
      uint64_t v23 = v22;

      if (v21 == v18 && v23 == v19)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        goto LABEL_15;
      }
      char v25 = sub_1C2B74B50();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v25) {
        break;
      }
      v17 += 2;
      if (!--v15)
      {

        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v26 = 0;
        a4 = v47;
        goto LABEL_17;
      }
    }
    swift_bridgeObjectRelease();
LABEL_15:
    a4 = v47;
    uint64_t v9 = v49;
    uint64_t v14 = v45;
    uint64_t v13 = v46;
    a3 = v44;
    goto LABEL_16;
  }
  uint64_t v26 = 0;
LABEL_17:
  *a4 = v26;
  return result;
}

uint64_t MedicationScheduleItemDataSource.deinit()
{
  return v0;
}

uint64_t MedicationScheduleItemDataSource.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

void sub_1C2AF9278(uint64_t a1, uint64_t a2, void *a3)
{
  sub_1C2AE0F7C();
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v40 = (uint64_t)&v35 - v10;
  sub_1C2AF5E10(0, &qword_1EBF110F0, (unint64_t *)&unk_1EBF112B0, 0x1E4F66B50, MEMORY[0x1E4F26FC8]);
  uint64_t v12 = v11;
  uint64_t v42 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v35 - v16;
  sub_1C2AF5E10(0, &qword_1EBF11260, (unint64_t *)&unk_1EBF112B0, 0x1E4F66B50, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for HKMedicationScheduleItemQueryDescriptor);
  uint64_t v19 = v18;
  uint64_t v20 = *(void *)(a2 + *(int *)(v18 + 36));
  if (v20)
  {
    uint64_t v39 = a1;
    uint64_t v21 = *(void *)(v20 + 16);
    uint64_t v22 = MEMORY[0x1E4FBC860];
    if (v21)
    {
      uint64_t v35 = v18;
      id v36 = v9;
      uint64_t v37 = a3;
      uint64_t v38 = a2;
      uint64_t v44 = MEMORY[0x1E4FBC860];
      sub_1C2B74900();
      uint64_t v23 = sub_1C2AE3A18(0, (unint64_t *)&unk_1EBF11380);
      uint64_t v24 = v42 + 16;
      uint64_t v42 = *(void *)(v42 + 16);
      uint64_t v43 = v23;
      uint64_t v25 = v20 + ((*(unsigned __int8 *)(v24 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 64));
      uint64_t v41 = *(void *)(v24 + 56);
      do
      {
        uint64_t v26 = (void (*)(char *, char *, uint64_t))v42;
        ((void (*)(char *, uint64_t, uint64_t))v42)(v17, v25, v12);
        v26(v15, v17, v12);
        sub_1C2AE3A18(0, (unint64_t *)&unk_1EBF112B0);
        sub_1C2B74500();
        (*(void (**)(char *, uint64_t))(v24 - 8))(v17, v12);
        sub_1C2B748D0();
        sub_1C2B74910();
        sub_1C2B74920();
        sub_1C2B748E0();
        v25 += v41;
        --v21;
      }
      while (v21);
      uint64_t v22 = v44;
      a3 = v37;
      a2 = v38;
      uint64_t v19 = v35;
      uint64_t v9 = v36;
    }
    a1 = v39;
  }
  else
  {
    uint64_t v22 = 0;
  }
  uint64_t v27 = v40;
  sub_1C2AF4520(a2, v40);
  sub_1C2AF4520(a2 + *(int *)(v19 + 28), (uint64_t)v9);
  id v28 = (uint64_t *)(a2 + *(int *)(v19 + 32));
  uint64_t v29 = *v28;
  uint64_t v30 = v28[1];
  uint64_t v31 = (uint64_t)v9;
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = a3;
  *(void *)(v32 + 24) = a1;
  objc_allocWithZone(MEMORY[0x1E4F66B60]);
  swift_bridgeObjectRetain();
  id v33 = a3;
  id v34 = sub_1C2B2D270(v27, v31, v29, v30, v22, (uint64_t)sub_1C2AFA53C, v32);
  sub_1C2B745D0();
  objc_msgSend(v33, sel_executeQuery_, v34);
}

uint64_t sub_1C2AF9648(uint64_t a1)
{
  sub_1C2AF5E10(0, &qword_1EBF11260, (unint64_t *)&unk_1EBF112B0, 0x1E4F66B50, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for HKMedicationScheduleItemQueryDescriptor);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t (*sub_1C2AF96D0(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1C2AF9854(v6, a2, a3);
  return sub_1C2AF9738;
}

uint64_t (*sub_1C2AF973C(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1C2AF9B80(v6, a2, a3);
  return sub_1C2AF9738;
}

uint64_t (*sub_1C2AF97A4(void (**a1)(id *), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1C2AF9C08(v6, a2, a3);
  return sub_1C2AF9738;
}

void sub_1C2AF980C(void *a1)
{
  unint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);
  free(v1);
}

void (*sub_1C2AF9854(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x1C8766C90](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return sub_1C2AF98D4;
  }
  __break(1u);
  return result;
}

void sub_1C2AF98D4(id *a1)
{
}

uint64_t sub_1C2AF98E0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1C2AFA544;
  return sub_1C2AF8550(a1, v4, v5, v6);
}

uint64_t objectdestroyTm()
{
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C2AF99D8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1C2AF9A8C;
  return sub_1C2AF874C(a1, v4, v5, v6);
}

uint64_t sub_1C2AF9A8C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t (*sub_1C2AF9B80(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = MEMORY[0x1C8766C90](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_retain();
LABEL_5:
    uint64_t *v3 = v4;
    return sub_1C2AF9C00;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C2AF9C00()
{
  return swift_release();
}

void (*sub_1C2AF9C08(void (*result)(id *), unint64_t a2, uint64_t a3))(id *)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x1C8766C90](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return sub_1C2AFA548;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C2AF9C88(unint64_t a1, uint64_t a2, void *a3)
{
  id v69 = a3;
  uint64_t v71 = a2;
  uint64_t v63 = sub_1C2B73710();
  id v4 = *(char **)(v63 - 8);
  MEMORY[0x1F4188790](v63);
  uint64_t v62 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_42;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (v6)
  {
    uint64_t v7 = 0;
    uint64_t v8 = v71 & 0xFFFFFFFFFFFFFF8;
    uint64_t v60 = v71 & 0xFFFFFFFFFFFFFF8;
    if (v71 < 0) {
      uint64_t v8 = v71;
    }
    unint64_t v58 = a1 + 32;
    uint64_t v59 = v8;
    unint64_t v70 = v71 & 0xC000000000000001;
    id v61 = (void (**)(uint64_t, char *, uint64_t))(v4 + 32);
    unint64_t v66 = (unint64_t)v71 >> 62;
    unint64_t v67 = a1 & 0xC000000000000001;
    uint64_t v64 = v6;
    unint64_t v65 = a1;
    while (1)
    {
      uint64_t v9 = v67 ? (char *)MEMORY[0x1C8766C90](v7, a1) : (char *)*(id *)(v58 + 8 * v7);
      uint64_t v72 = v9;
      BOOL v10 = __OFADD__(v7, 1);
      uint64_t v11 = v7 + 1;
      if (v10) {
        break;
      }
      uint64_t v68 = v11;
      if (!v66)
      {
        id v4 = *(char **)(v60 + 16);
        uint64_t v12 = v72;
        id v13 = v69;
        swift_bridgeObjectRetain();
        if (v4) {
          goto LABEL_16;
        }
        goto LABEL_35;
      }
      uint64_t v14 = v72;
      id v15 = v69;
      swift_bridgeObjectRetain();
      id v4 = (char *)sub_1C2B749C0();
      if (v4)
      {
LABEL_16:
        uint64_t v16 = 4;
        do
        {
          if (v70) {
            id v18 = (id)MEMORY[0x1C8766C90](v16 - 4, v71);
          }
          else {
            id v18 = *(id *)(v71 + 8 * v16);
          }
          uint64_t v19 = v18;
          a1 = v16 - 3;
          if (__OFADD__(v16 - 4, 1))
          {
            __break(1u);
            goto LABEL_41;
          }
          id v20 = objc_msgSend(v72, sel_medicationIdentifier);
          uint64_t v21 = sub_1C2B73FA0();
          uint64_t v23 = v22;

          id v24 = objc_msgSend(v19, sel_medicationIdentifier);
          uint64_t v25 = sub_1C2B73FA0();
          uint64_t v27 = v26;

          if (v21 == v25 && v23 == v27)
          {
            swift_bridgeObjectRelease_n();
          }
          else
          {
            char v29 = sub_1C2B74B50();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v29 & 1) == 0)
            {

              goto LABEL_18;
            }
          }
          id v30 = objc_msgSend(v69, sel_identifier);
          uint64_t v31 = sub_1C2B73FA0();
          uint64_t v33 = v32;

          id v34 = objc_msgSend(v19, sel_scheduleItemIdentifier);
          if (v34)
          {
            uint64_t v35 = v34;
            uint64_t v36 = sub_1C2B73FA0();
            uint64_t v38 = v37;

            if (v31 == v36 && v33 == v38)
            {

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
LABEL_6:
              swift_bridgeObjectRelease();
              id v4 = v72;

              goto LABEL_7;
            }
            char v17 = sub_1C2B74B50();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v17)
            {

              goto LABEL_6;
            }
          }
          else
          {

            swift_bridgeObjectRelease();
          }
LABEL_18:
          ++v16;
        }
        while ((char *)a1 != v4);
      }
LABEL_35:
      id v39 = v69;

      swift_bridgeObjectRelease();
      id v40 = v72;

      id v41 = objc_msgSend(v39, sel_identifier);
      uint64_t v42 = sub_1C2B73FA0();
      uint64_t v44 = v43;

      id v45 = objc_msgSend(v39, sel_scheduledDateTime);
      uint64_t v46 = v62;
      sub_1C2B736E0();

      id v47 = objc_msgSend(v40, sel_medicationIdentifier);
      uint64_t v48 = sub_1C2B73FA0();
      uint64_t v50 = v49;

      id v51 = objc_msgSend(v40, sel_dose);
      objc_msgSend(v51, sel_doubleValue);
      uint64_t v53 = v52;

      LOBYTE(v51) = objc_msgSend(v40, sel_isLastScheduledDose);
      type metadata accessor for ScheduleItem();
      uint64_t v54 = swift_allocObject();
      *(void *)(v54 + 16) = v42;
      *(void *)(v54 + 24) = v44;
      (*v61)(v54 + OBJC_IVAR____TtC27HealthMedicationsExperience12ScheduleItem_date, v46, v63);
      uint64_t v55 = (uint64_t *)(v54 + OBJC_IVAR____TtC27HealthMedicationsExperience12ScheduleItem_medicationIdentifier);
      uint64_t *v55 = v48;
      v55[1] = v50;
      *(void *)(v54 + OBJC_IVAR____TtC27HealthMedicationsExperience12ScheduleItem_doseAmount) = v53;
      *(unsigned char *)(v54 + OBJC_IVAR____TtC27HealthMedicationsExperience12ScheduleItem_isLastScheduledDose) = (_BYTE)v51;

      MEMORY[0x1C87665F0]();
      id v4 = *(char **)((v73 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if ((unint64_t)v4 >= *(void *)((v73 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1C2B74210();
      }
      sub_1C2B74250();
      sub_1C2B741F0();
LABEL_7:
      a1 = v65;
      uint64_t v7 = v68;
      if (v68 == v64)
      {
        swift_bridgeObjectRelease();
        return v73;
      }
    }
LABEL_41:
    __break(1u);
LABEL_42:
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1C2B749C0();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1C2AFA240(uint64_t a1)
{
  sub_1C2AE0F7C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C2AFA29C(unint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v15 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = sub_1C2B749C0())
  {
    for (uint64_t i = 4; ; ++i)
    {
      id v7 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C8766C90](i - 4, a1) : *(id *)(a1 + 8 * i);
      uint64_t v8 = v7;
      uint64_t v9 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      uint64_t v14 = v7;
      sub_1C2AF8ED8(&v14, a2, a3, &v13);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return swift_bridgeObjectRelease();
      }

      if (v13)
      {
        MEMORY[0x1C87665F0]();
        if (*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C2B74210();
        }
        sub_1C2B74250();
        sub_1C2B741F0();
      }
      if (v9 == v5)
      {
        swift_bridgeObjectRelease();
        return v15;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E4FBC860];
}

uint64_t type metadata accessor for MedicationScheduleItemDataSource()
{
  return self;
}

uint64_t method lookup function for MedicationScheduleItemDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationScheduleItemDataSource);
}

uint64_t dispatch thunk of MedicationScheduleItemDataSource.__allocating_init(healthStore:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

void sub_1C2AFA488(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_1C2AF5E10(255, a3, &qword_1EBF112D8, 0x1E4F2B420, a4);
    unint64_t v5 = sub_1C2B74B20();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

char *keypath_get_selector_startDate()
{
  return sel_startDate;
}

uint64_t sub_1C2AFA504()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C2AFA53C(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1C2B2BD88(a1, a2, a3, *(id *)(v3 + 16), *(void *)(v3 + 24));
}

void sub_1C2AFA550(uint64_t *a1@<X8>)
{
  id v4 = v1;
  id v6 = objc_msgSend(v1, sel_routedDoseFormProducts);
  sub_1C2AE3A18(0, (unint64_t *)&qword_1EA32BA78);
  unint64_t v7 = sub_1C2B741D0();

  if (!(v7 >> 62))
  {
    if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1C2B749C0();
  swift_bridgeObjectRelease();
  if (!v14) {
    goto LABEL_10;
  }
LABEL_3:
  if ((v7 & 0xC000000000000001) != 0)
  {
LABEL_63:
    id v8 = (id)MEMORY[0x1C8766C90](0, v7);
  }
  else
  {
    if (!*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_66;
    }
    id v8 = *(id *)(v7 + 32);
  }
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  id v10 = objc_msgSend(v9, sel_firstConceptOfRelationshipType_, 982);

  if (v10)
  {
    id v11 = objc_msgSend(v10, sel_localizedPreferredName);

    if (v11)
    {
      uint64_t v12 = sub_1C2B73FA0();
      uint64_t v2 = v13;

      goto LABEL_12;
    }
  }
LABEL_11:
  uint64_t v12 = 0;
  uint64_t v2 = 0;
LABEL_12:
  id v15 = objc_msgSend(v4, sel_specificProduct);
  id v16 = objc_msgSend(v15, sel_firstAttributeForType_, 984);

  if (v16)
  {
    id v17 = objc_msgSend(v16, sel_stringValue);

    uint64_t v99 = sub_1C2B73FA0();
    uint64_t v105 = v18;
  }
  else
  {
    uint64_t v99 = 0;
    uint64_t v105 = 0;
  }
  id v19 = objc_msgSend(v4, sel_tradeNameProduct);
  if (v19
    && (id v20 = v19,
        id v21 = objc_msgSend(v19, sel_localizedPreferredName),
        v20,
        v21))
  {
    uint64_t v95 = sub_1C2B73FA0();
    uint64_t v102 = v22;
  }
  else
  {
    uint64_t v95 = 0;
    uint64_t v102 = 0;
  }
  unint64_t v3 = (unint64_t)&block_descriptor_0;
  id v23 = objc_msgSend(v4, sel_ingredientProducts);
  unint64_t v24 = sub_1C2B741D0();

  if (!(v24 >> 62))
  {
    if (*(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_21;
    }
LABEL_27:
    swift_bridgeObjectRelease();
    goto LABEL_28;
  }
  swift_bridgeObjectRetain();
  uint64_t v29 = sub_1C2B749C0();
  swift_bridgeObjectRelease();
  if (!v29) {
    goto LABEL_27;
  }
LABEL_21:
  if ((v24 & 0xC000000000000001) == 0)
  {
    if (*(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v25 = *(id *)(v24 + 32);
      goto LABEL_24;
    }
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
  id v25 = (id)MEMORY[0x1C8766C90](0, v24);
LABEL_24:
  uint64_t v26 = v25;
  swift_bridgeObjectRelease();
  id v27 = objc_msgSend(v26, sel_localizedPreferredName);

  if (v27)
  {
    uint64_t v93 = sub_1C2B73FA0();
    uint64_t v98 = v28;

    goto LABEL_29;
  }
LABEL_28:
  uint64_t v93 = 0;
  uint64_t v98 = 0;
LABEL_29:
  id v104 = objc_msgSend(v4, sel_specificProduct);
  uint64_t v100 = v2;
  id v94 = v4;
  uint64_t v96 = v12;
  uint64_t v97 = a1;
  if ((objc_msgSend(v104, sel_meds_isClinicalProduct) & 1) == 0)
  {
    if (!objc_msgSend(v104, sel_meds_isSpecificProduct))
    {
LABEL_55:

LABEL_56:
      char v48 = 0;
      id v34 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v49 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      if (!v49) {
        goto LABEL_72;
      }
      goto LABEL_70;
    }
    id v30 = objc_msgSend(v104, sel_firstConceptOfRelationshipType_, 798);

    id v104 = v30;
    if (!v30) {
      goto LABEL_56;
    }
  }
  id v31 = objc_msgSend(v104, sel_relationships);
  if (!v31) {
    goto LABEL_55;
  }
  uint64_t v32 = v31;
  sub_1C2AE3A18(0, &qword_1EA32BB58);
  unint64_t v3 = sub_1C2B741D0();

  if (!(v3 >> 62))
  {
    uint64_t v33 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v33)
    {
LABEL_35:
      char v92 = 0;
      unint64_t v7 = 0;
      id v4 = (void *)(v3 & 0xC000000000000001);
      uint64_t v103 = v3 & 0xFFFFFFFFFFFFFF8;
      id v34 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v35 = (SEL *)&block_descriptor_0;
      unint64_t v101 = v3 & 0xC000000000000001;
LABEL_36:
      unint64_t v36 = v7;
      do
      {
        if (v4)
        {
          id v37 = (id)MEMORY[0x1C8766C90](v36, v3);
        }
        else
        {
          if (v36 >= *(void *)(v103 + 16))
          {
            __break(1u);
            goto LABEL_63;
          }
          id v37 = *(id *)(v3 + 8 * v36 + 32);
        }
        uint64_t v38 = v37;
        unint64_t v7 = v36 + 1;
        if (__OFADD__(v36, 1))
        {
          __break(1u);
LABEL_61:

          swift_bridgeObjectRelease();
          char v48 = 1;
          uint64_t v12 = v96;
          a1 = v97;
          uint64_t v2 = v100;
          goto LABEL_69;
        }
        if ([v37 v35[234]] == (id)809)
        {
          id v39 = objc_msgSend(v38, sel_destination);
          a1 = (uint64_t *)objc_msgSend(v39, sel_meds_englishUSName);

          if (a1)
          {
            unint64_t v40 = v3;
            id v41 = v35;
            uint64_t v42 = sub_1C2B73FA0();
            unint64_t v44 = v43;

            uint64_t v45 = HIBYTE(v44) & 0xF;
            if ((v44 & 0x2000000000000000) == 0) {
              uint64_t v45 = v42 & 0xFFFFFFFFFFFFLL;
            }
            if (v45)
            {
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                id v34 = sub_1C2AE08C0(0, v34[2] + 1, 1, v34);
              }
              a1 = (uint64_t *)v34[2];
              unint64_t v46 = v34[3];
              if ((unint64_t)a1 >= v46 >> 1) {
                id v34 = sub_1C2AE08C0((void *)(v46 > 1), (int64_t)a1 + 1, 1, v34);
              }
              v34[2] = (char *)a1 + 1;
              id v47 = &v34[2 * (void)a1];
              v47[4] = v42;
              v47[5] = v44;

              char v92 = 1;
              uint64_t v35 = v41;
              unint64_t v3 = v40;
              id v4 = (void *)v101;
              if (v7 == v33) {
                goto LABEL_61;
              }
              goto LABEL_36;
            }
            swift_bridgeObjectRelease();
            uint64_t v35 = v41;
            unint64_t v3 = v40;
            id v4 = (void *)v101;
          }
        }

        ++v36;
      }
      while (v7 != v33);

      swift_bridgeObjectRelease();
      uint64_t v12 = v96;
      a1 = v97;
      uint64_t v2 = v100;
      unint64_t v3 = 0x1E645C000;
      char v48 = v92;
      uint64_t v49 = v34[2];
      if (v49) {
        goto LABEL_70;
      }
LABEL_72:
      swift_bridgeObjectRelease();
      id v50 = [v94 *(SEL *)(v3 + 1824)];
      unint64_t v51 = sub_1C2B741D0();

      if (v51 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v52 = sub_1C2B749C0();
        swift_bridgeObjectRelease();
        if (v52) {
          goto LABEL_74;
        }
      }
      else
      {
        uint64_t v52 = *(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v52)
        {
LABEL_74:
          if (v52 < 1)
          {
            __break(1u);
LABEL_142:
            unint64_t v3 = (unint64_t)sub_1C2AE08C0(0, *(void *)(v3 + 16) + 1, 1, (void *)v3);
LABEL_101:
            unint64_t v69 = *(void *)(v3 + 16);
            unint64_t v68 = *(void *)(v3 + 24);
            if (v69 >= v68 >> 1) {
              unint64_t v3 = (unint64_t)sub_1C2AE08C0((void *)(v68 > 1), v69 + 1, 1, (void *)v3);
            }
            *(void *)(v3 + 16) = v69 + 1;
            unint64_t v70 = v3 + 16 * v69;
            *(void *)(v70 + 32) = v99;
            *(void *)(v70 + 40) = v105;
            goto LABEL_104;
          }
          uint64_t v53 = 0;
          id v34 = (void *)MEMORY[0x1E4FBC860];
          do
          {
            if ((v51 & 0xC000000000000001) != 0) {
              id v54 = (id)MEMORY[0x1C8766C90](v53, v51);
            }
            else {
              id v54 = *(id *)(v51 + 8 * v53 + 32);
            }
            uint64_t v55 = v54;
            id v56 = objc_msgSend(v54, sel_localizedPreferredName);
            if (v56)
            {
              uint64_t v57 = v56;
              uint64_t v58 = sub_1C2B73FA0();
              unint64_t v60 = v59;

              uint64_t v61 = HIBYTE(v60) & 0xF;
              if ((v60 & 0x2000000000000000) == 0) {
                uint64_t v61 = v58 & 0xFFFFFFFFFFFFLL;
              }
              if (v61)
              {
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  id v34 = sub_1C2AE08C0(0, v34[2] + 1, 1, v34);
                }
                unint64_t v63 = v34[2];
                unint64_t v62 = v34[3];
                if (v63 >= v62 >> 1) {
                  id v34 = sub_1C2AE08C0((void *)(v62 > 1), v63 + 1, 1, v34);
                }
                v34[2] = v63 + 1;
                uint64_t v64 = &v34[2 * v63];
                v64[4] = v58;
                v64[5] = v60;
              }
              else
              {
                swift_bridgeObjectRelease();
              }
            }
            ++v53;
          }
          while (v52 != v53);
          goto LABEL_92;
        }
      }
      id v34 = (void *)MEMORY[0x1E4FBC860];
LABEL_92:
      swift_bridgeObjectRelease();
      char v48 = 0;
      uint64_t v12 = v96;
      a1 = v97;
      uint64_t v2 = v100;
      goto LABEL_93;
    }
    goto LABEL_68;
  }
LABEL_67:
  swift_bridgeObjectRetain();
  uint64_t v33 = sub_1C2B749C0();
  swift_bridgeObjectRelease();
  if (v33) {
    goto LABEL_35;
  }
LABEL_68:

  swift_bridgeObjectRelease();
  char v48 = 0;
  id v34 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v12 = v96;
  a1 = v97;
LABEL_69:
  unint64_t v3 = (unint64_t)&block_descriptor_0;
  uint64_t v49 = v34[2];
  if (!v49) {
    goto LABEL_72;
  }
LABEL_70:
  if (v49 == 1 && v105) {
    goto LABEL_72;
  }
LABEL_93:
  if (!v2)
  {
    unint64_t v3 = MEMORY[0x1E4FBC860];
    if (!v105) {
      goto LABEL_104;
    }
LABEL_99:
    if (v48) {
      goto LABEL_104;
    }
    swift_bridgeObjectRetain();
    if (swift_isUniquelyReferenced_nonNull_native()) {
      goto LABEL_101;
    }
    goto LABEL_142;
  }
  swift_bridgeObjectRetain();
  unint64_t v3 = (unint64_t)sub_1C2AE08C0(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v66 = *(void *)(v3 + 16);
  unint64_t v65 = *(void *)(v3 + 24);
  if (v66 >= v65 >> 1) {
    unint64_t v3 = (unint64_t)sub_1C2AE08C0((void *)(v65 > 1), v66 + 1, 1, (void *)v3);
  }
  *(void *)(v3 + 16) = v66 + 1;
  unint64_t v67 = v3 + 16 * v66;
  *(void *)(v67 + 32) = v12;
  *(void *)(v67 + 40) = v2;
  if (v105) {
    goto LABEL_99;
  }
LABEL_104:
  uint64_t v71 = v34[2];
  if (!v71) {
    goto LABEL_116;
  }
  if (v71 != 1)
  {
    v106 = v34;
    swift_bridgeObjectRetain_n();
    sub_1C2B1E9D4((uint64_t *)&v106);
    swift_bridgeObjectRelease();
    sub_1C2AFB89C();
    sub_1C2AFB91C();
    uint64_t v74 = sub_1C2B73F40();
    uint64_t v73 = v75;
    swift_release();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v3 = (unint64_t)sub_1C2AE08C0(0, *(void *)(v3 + 16) + 1, 1, (void *)v3);
    }
    unint64_t v77 = *(void *)(v3 + 16);
    unint64_t v76 = *(void *)(v3 + 24);
    if (v77 >= v76 >> 1) {
      unint64_t v3 = (unint64_t)sub_1C2AE08C0((void *)(v76 > 1), v77 + 1, 1, (void *)v3);
    }
    *(void *)(v3 + 16) = v77 + 1;
    unint64_t v78 = v3 + 16 * v77;
    *(void *)(v78 + 32) = v74;
LABEL_115:
    *(void *)(v78 + 40) = v73;
    uint64_t v2 = v100;
LABEL_116:
    if (v102) {
      goto LABEL_117;
    }
    goto LABEL_122;
  }
  uint64_t v72 = v34[4];
  uint64_t v73 = v34[5];
  if (v102)
  {
    v106 = (void *)v34[4];
    uint64_t v107 = v73;
    sub_1C2AE1354();
    swift_bridgeObjectRetain();
    if ((sub_1C2B746B0() & 1) == 0)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v3 = (unint64_t)sub_1C2AE08C0(0, *(void *)(v3 + 16) + 1, 1, (void *)v3);
      }
      unint64_t v82 = *(void *)(v3 + 16);
      unint64_t v81 = *(void *)(v3 + 24);
      if (v82 >= v81 >> 1) {
        unint64_t v3 = (unint64_t)sub_1C2AE08C0((void *)(v81 > 1), v82 + 1, 1, (void *)v3);
      }
      *(void *)(v3 + 16) = v82 + 1;
      unint64_t v83 = v3 + 16 * v82;
      *(void *)(v83 + 32) = v72;
      *(void *)(v83 + 40) = v73;
      swift_bridgeObjectRelease();
      uint64_t v2 = v100;
      goto LABEL_118;
    }
    uint64_t v2 = v100;
    if (!v98)
    {
      swift_bridgeObjectRelease();
LABEL_117:
      swift_bridgeObjectRelease();
LABEL_118:
      uint64_t v79 = v95;
      uint64_t v80 = v102;
      goto LABEL_140;
    }
    goto LABEL_120;
  }
  swift_bridgeObjectRetain();
  if (v98)
  {
LABEL_120:
    v106 = (void *)v72;
    uint64_t v107 = v73;
    sub_1C2AE1354();
    if (sub_1C2B746B0())
    {
      swift_bridgeObjectRelease();
      if (v102) {
        goto LABEL_117;
      }
LABEL_122:
      uint64_t v80 = v98;
      if (v98)
      {
        uint64_t v79 = v93;
        goto LABEL_140;
      }
      goto LABEL_135;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v3 = (unint64_t)sub_1C2AE08C0(0, *(void *)(v3 + 16) + 1, 1, (void *)v3);
    }
    unint64_t v85 = *(void *)(v3 + 16);
    unint64_t v84 = *(void *)(v3 + 24);
    if (v85 >= v84 >> 1) {
      unint64_t v3 = (unint64_t)sub_1C2AE08C0((void *)(v84 > 1), v85 + 1, 1, (void *)v3);
    }
    *(void *)(v3 + 16) = v85 + 1;
    unint64_t v78 = v3 + 16 * v85;
    *(void *)(v78 + 32) = v72;
    goto LABEL_115;
  }
  swift_bridgeObjectRelease();
LABEL_135:
  id v86 = objc_msgSend(v94, sel_specificProduct);
  id v87 = objc_msgSend(v86, sel_preferredName);

  if (v87)
  {
    uint64_t v79 = sub_1C2B73FA0();
    uint64_t v80 = v88;
  }
  else
  {
    if (qword_1EBF10F78 != -1) {
      swift_once();
    }
    id v89 = (id)qword_1EBF10F60;
    swift_bridgeObjectRetain();
    uint64_t v79 = sub_1C2B735A0();
    uint64_t v91 = v90;
    swift_bridgeObjectRelease();

    uint64_t v80 = v91;
    uint64_t v2 = v100;
  }
LABEL_140:
  *a1 = v79;
  a1[1] = v80;
  a1[2] = v3;
  a1[3] = v12;
  a1[4] = v2;
  a1[5] = v99;
  a1[6] = v105;
  a1[7] = (uint64_t)v34;
}

uint64_t HKMedicationSearchResult.doseForm.getter()
{
  sub_1C2AFA550(v2);
  uint64_t v0 = v2[3];
  swift_bridgeObjectRetain();
  sub_1C2AFB2B8((uint64_t)v2);
  return v0;
}

uint64_t sub_1C2AFB2B8(uint64_t a1)
{
  return a1;
}

uint64_t HKMedicationSearchResult.ingredients.getter()
{
  sub_1C2AFA550(v2);
  uint64_t v0 = v2[7];
  swift_bridgeObjectRetain();
  sub_1C2AFB2B8((uint64_t)v2);
  return v0;
}

uint64_t HKMedicationSearchResult.strength.getter()
{
  sub_1C2AFA550(v2);
  uint64_t v0 = v2[5];
  swift_bridgeObjectRetain();
  sub_1C2AFB2B8((uint64_t)v2);
  return v0;
}

uint64_t HKMedicationSearchResult.primaryName.getter()
{
  sub_1C2AFA550(&v2);
  uint64_t v0 = v2;
  swift_bridgeObjectRetain();
  sub_1C2AFB2B8((uint64_t)&v2);
  return v0;
}

uint64_t HKMedicationSearchResult.secondaryName.getter()
{
  return sub_1C2AFB7C0();
}

uint64_t sub_1C2AFB3FC(uint64_t a1)
{
  return a1;
}

uint64_t HKMedicationSearchResult.commaSeparatedIngredients.getter()
{
  sub_1C2AFA550(v2);
  uint64_t v3 = v2[7];
  swift_bridgeObjectRetain();
  sub_1C2AFB2B8((uint64_t)v2);
  sub_1C2AFB70C(0, (unint64_t *)&qword_1EBF10FB0, MEMORY[0x1E4FBB320]);
  sub_1C2AE04F8();
  uint64_t v0 = sub_1C2B73F40();
  sub_1C2AFB3FC((uint64_t)&v3);
  return v0;
}

uint64_t HKMedicationSearchResult.commaSeparatedStrengthAndIngredients.getter()
{
  sub_1C2AFA550(v3);
  uint64_t v0 = v4;
  uint64_t v10 = v4;
  swift_bridgeObjectRetain();
  sub_1C2AFB2B8((uint64_t)v3);
  uint64_t v1 = *(void *)(v0 + 16);
  sub_1C2AFB3FC((uint64_t)&v10);
  sub_1C2AFA550(v5);
  sub_1C2AFB68C((uint64_t)&v6, (uint64_t)v9);
  sub_1C2AFB75C((uint64_t)v9);
  sub_1C2AFB2B8((uint64_t)v5);
  sub_1C2AFB68C((uint64_t)v9, (uint64_t)v11);
  if (v11[1])
  {
    sub_1C2B740A0();
    sub_1C2AFB788((uint64_t)v9);
    if (v1)
    {
      sub_1C2B740A0();
LABEL_5:
      sub_1C2AFA550(v7);
      uint64_t v8 = v7[7];
      swift_bridgeObjectRetain();
      sub_1C2AFB2B8((uint64_t)v7);
      sub_1C2AFB70C(0, (unint64_t *)&qword_1EBF10FB0, MEMORY[0x1E4FBB320]);
      sub_1C2AE04F8();
      sub_1C2B73F40();
      sub_1C2AFB3FC((uint64_t)&v8);
      sub_1C2B740A0();
      swift_bridgeObjectRelease();
    }
  }
  else if (v1)
  {
    goto LABEL_5;
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1C2AFB68C(uint64_t a1, uint64_t a2)
{
  sub_1C2AFB70C(0, (unint64_t *)&qword_1EBF0FEC8, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1C2AFB70C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, void))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x1E4FBB1A0]);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C2AFB75C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C2AFB788(uint64_t a1)
{
  return a1;
}

uint64_t HKMedicationSearchResult.secondaryNameMultipleLines.getter()
{
  return sub_1C2AFB7C0();
}

uint64_t sub_1C2AFB7C0()
{
  sub_1C2AFA550(v2);
  uint64_t v4 = v3;
  if (*(void *)(v3 + 16))
  {
    sub_1C2AFB70C(0, (unint64_t *)&qword_1EBF10FB0, MEMORY[0x1E4FBB320]);
    sub_1C2AE04F8();
    swift_bridgeObjectRetain();
    uint64_t v0 = sub_1C2B73F40();
    sub_1C2AFB2B8((uint64_t)v2);
    sub_1C2AFB3FC((uint64_t)&v4);
  }
  else
  {
    sub_1C2AFB2B8((uint64_t)v2);
    return 0;
  }
  return v0;
}

void sub_1C2AFB89C()
{
  if (!qword_1EA32BB48)
  {
    sub_1C2AFB70C(255, (unint64_t *)&qword_1EBF10FB0, MEMORY[0x1E4FBB320]);
    sub_1C2AE04F8();
    unint64_t v0 = sub_1C2B749B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA32BB48);
    }
  }
}

unint64_t sub_1C2AFB91C()
{
  unint64_t result = qword_1EA32BB50;
  if (!qword_1EA32BB50)
  {
    sub_1C2AFB89C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA32BB50);
  }
  return result;
}

uint64_t sub_1C2AFB974(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2) {
    return sub_1C2B74120();
  }
  else {
    return 0;
  }
}

Swift::String __swiftcall LoggingUnitDisplayable.loggingQuantityString(for:)(NSNumber_optional a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)&a1.is_nil;
  if (a1.value.super.super.isa)
  {
    uint64_t v4 = a1.value.super.super.isa;
    [(objc_class *)v4 doubleValue];
    uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 24))(v3, v2);
    unint64_t v7 = v6;

    uint64_t v8 = v5;
    uint64_t v9 = v7;
  }
  else
  {
    if (qword_1EBF11340 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_1C2B73A90();
    __swift_project_value_buffer(v10, (uint64_t)qword_1EBF11348);
    id v11 = sub_1C2B73A80();
    os_log_type_t v12 = sub_1C2B744C0();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      uint64_t v18 = v14;
      *(_DWORD *)uint64_t v13 = 136315138;
      uint64_t v15 = sub_1C2B74CD0();
      sub_1C2AEEE6C(v15, v16, &v18);
      sub_1C2B74650();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2ADB000, v11, v12, "[%s] Unable to generate doseQuantityText with nil amount, continuing with 0.", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C8767A10](v14, -1, -1);
      MEMORY[0x1C8767A10](v13, -1, -1);
    }

    uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t, double))(v2 + 24))(v3, v2, 0.0);
  }
  result._object = v9;
  result._countAndFlagsBits = v8;
  return result;
}

Swift::String __swiftcall LoggingUnitDisplayable.loggingQuantityString(for:)(Swift::Double a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C2B73790();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2AFCD98(0, &qword_1EBF106C8, MEMORY[0x1E4F27A78], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v9 = *(void (**)(void))(v5 + 56);
  uint64_t v32 = (char *)&v31 - v10;
  v9();
  if (qword_1EBF10F78 != -1) {
    swift_once();
  }
  id v11 = (void *)qword_1EBF10F60;
  uint64_t v31 = *(void *)algn_1EBF10F68;
  sub_1C2AFCD98(0, (unint64_t *)&qword_1EBF10838, (uint64_t (*)(uint64_t))sub_1C2AFCDFC, MEMORY[0x1E4FBBE00]);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1C2B764E0;
  id v13 = v11;
  swift_bridgeObjectRetain();
  sub_1C2B73780();
  uint64_t v14 = v33;
  uint64_t v15 = static LoggingUnitDisplayable.formatLoggingAmountAsString(_:shouldIncludeGroupingSeparator:localeOverride:)(*(uint64_t *)&a1, 0, 1, (uint64_t)v7, v33, v2);
  uint64_t v17 = v16;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v18 = MEMORY[0x1E4FBB1A0];
  *(void *)(v12 + 56) = MEMORY[0x1E4FBB1A0];
  unint64_t v19 = sub_1C2AE85BC();
  *(void *)(v12 + 64) = v19;
  *(void *)(v12 + 32) = v15;
  *(void *)(v12 + 40) = v17;
  uint64_t v20 = (*(uint64_t (**)(uint64_t, Swift::Double))(*(void *)(v2 + 8) + 8))(v14, a1);
  *(void *)(v12 + 96) = v18;
  *(void *)(v12 + 104) = v19;
  *(void *)(v12 + 72) = v20;
  *(void *)(v12 + 80) = v21;
  uint64_t v22 = sub_1C2B735A0();
  unint64_t v24 = v23;
  if (*(void *)(v12 + 16))
  {
    uint64_t v25 = (uint64_t)v32;
    uint64_t v22 = sub_1C2B73FD0();
    id v27 = v26;
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v24 = v27;
  }
  else
  {
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    uint64_t v25 = (uint64_t)v32;
  }
  sub_1C2AFCE54(v25);
  uint64_t v28 = v22;
  uint64_t v29 = v24;
  result._object = v29;
  result._countAndFlagsBits = v28;
  return result;
}

id sub_1C2AFBF24(char a1)
{
  return static LoggingUnitDisplayable.formatter(usesGroupingSeparator:localeOverride:)(a1);
}

id static LoggingUnitDisplayable.formatter(usesGroupingSeparator:localeOverride:)(char a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28EE0]), sel_init);
  objc_msgSend(v2, sel_setNumberStyle_, 1);
  objc_msgSend(v2, sel_setMaximumFractionDigits_, 2);
  objc_msgSend(v2, sel_setMaximumIntegerDigits_, 5);
  objc_msgSend(v2, sel_setUsesGroupingSeparator_, a1 & 1);
  uint64_t v3 = (void *)sub_1C2B73770();
  objc_msgSend(v2, sel_setLocale_, v3);

  return v2;
}

uint64_t sub_1C2AFBFF4(uint64_t a1, char a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return static LoggingUnitDisplayable.formatLoggingAmountAsString(_:shouldIncludeGroupingSeparator:localeOverride:)(a1, a2 & 1, a3, a4, a5, a6);
}

uint64_t static LoggingUnitDisplayable.formatLoggingAmountAsString(_:shouldIncludeGroupingSeparator:localeOverride:)(uint64_t a1, char a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if ((a2 & 1) != 0
    || (unint64_t v7 = (void *)(*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(a6 + 32))(a3 & 1, a4, a5, a6),
        id v8 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, *(double *)&a1),
        id v9 = objc_msgSend(v7, sel_stringFromNumber_, v8),
        v7,
        v8,
        !v9))
  {
    if (qword_1EBF11340 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_1C2B73A90();
    __swift_project_value_buffer(v11, (uint64_t)qword_1EBF11348);
    uint64_t v12 = sub_1C2B73A80();
    os_log_type_t v13 = sub_1C2B744C0();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      uint64_t v21 = v15;
      *(_DWORD *)uint64_t v14 = 136315394;
      uint64_t v16 = sub_1C2B74CD0();
      sub_1C2AEEE6C(v16, v17, &v21);
      sub_1C2B74650();
      swift_bridgeObjectRelease();
      *(_WORD *)(v14 + 12) = 2080;
      sub_1C2AFCEE0(0, &qword_1EA32B9F0);
      uint64_t v18 = sub_1C2B74010();
      sub_1C2AEEE6C(v18, v19, &v21);
      sub_1C2B74650();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2ADB000, v12, v13, "[%s] Unable to format double as dose string = %s", (uint8_t *)v14, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C8767A10](v15, -1, -1);
      MEMORY[0x1C8767A10](v14, -1, -1);
    }

    return 48;
  }
  else
  {
    uint64_t v10 = sub_1C2B73FA0();
  }
  return v10;
}

double sub_1C2AFC2AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static LoggingUnitDisplayable.formatLoggingStringAsDouble(_:localeOverride:)(a1, a2, a3, a4, a5);
}

double static LoggingUnitDisplayable.formatLoggingStringAsDouble(_:localeOverride:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = sub_1C2B73790();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    id v13 = static LoggingUnitDisplayable.formatter(usesGroupingSeparator:localeOverride:)(1);
    uint64_t v14 = (void *)sub_1C2B73F60();
    id v15 = objc_msgSend(v13, sel_numberFromString_, v14);

    if (v15)
    {
      uint64_t v34 = a1;
      objc_msgSend(v15, sel_doubleValue);
      uint64_t v17 = v16;
      sub_1C2B73780();
      static LoggingUnitDisplayable.formatLoggingAmountAsString(_:shouldIncludeGroupingSeparator:localeOverride:)(v17, 0, 1, (uint64_t)v12, a4, a5);
      uint64_t v18 = *(void (**)(char *, uint64_t))(v10 + 8);
      v18(v12, v9);
      sub_1C2B73780();
      id v19 = static LoggingUnitDisplayable.formatter(usesGroupingSeparator:localeOverride:)(1);
      v18(v12, v9);
      uint64_t v20 = (void *)sub_1C2B73F60();
      swift_bridgeObjectRelease();
      id v21 = objc_msgSend(v19, sel_numberFromString_, v20);

      if (v21)
      {
        objc_msgSend(v21, sel_doubleValue);
        double v23 = v22;

        return v23;
      }

      a1 = v34;
    }
  }
  if (qword_1EBF11340 != -1) {
    swift_once();
  }
  uint64_t v24 = sub_1C2B73A90();
  __swift_project_value_buffer(v24, (uint64_t)qword_1EBF11348);
  swift_bridgeObjectRetain_n();
  uint64_t v25 = sub_1C2B73A80();
  os_log_type_t v26 = sub_1C2B744C0();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    uint64_t v37 = v28;
    *(_DWORD *)uint64_t v27 = 136315394;
    uint64_t v29 = sub_1C2B74CD0();
    uint64_t v35 = sub_1C2AEEE6C(v29, v30, &v37);
    sub_1C2B74650();
    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 12) = 2080;
    uint64_t v35 = a1;
    uint64_t v36 = a2;
    sub_1C2AFCEE0(0, (unint64_t *)&qword_1EBF0FEC8);
    swift_bridgeObjectRetain();
    uint64_t v31 = sub_1C2B74010();
    uint64_t v35 = sub_1C2AEEE6C(v31, v32, &v37);
    sub_1C2B74650();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2ADB000, v25, v26, "[%s] Unable to format dose string as double = %s", (uint8_t *)v27, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C8767A10](v28, -1, -1);
    MEMORY[0x1C8767A10](v27, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return 0.0;
}

BOOL static LoggingUnitDisplayable.userEnteredLoggingAmountIsValid(_:localeOverride:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_1C2B734E0();
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  id v13 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  uint64_t v16 = (char *)&v63 - v15;
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  MEMORY[0x1F4188790](v17);
  id v21 = (char *)&v63 - v20;
  uint64_t v22 = HIBYTE(a2) & 0xF;
  uint64_t v65 = a1;
  unint64_t v66 = a2;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v22 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v22) {
    return 1;
  }
  uint64_t v23 = v19;
  uint64_t v24 = v18;
  uint64_t v25 = (void *)(*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(a5 + 32))(0, a3, a4, a5);
  id v26 = objc_msgSend(v25, sel_decimalSeparator);

  if (!v26)
  {
    if (qword_1EBF11340 != -1) {
      swift_once();
    }
    uint64_t v55 = sub_1C2B73A90();
    __swift_project_value_buffer(v55, (uint64_t)qword_1EBF11348);
    id v56 = sub_1C2B73A80();
    os_log_type_t v57 = sub_1C2B744C0();
    if (!os_log_type_enabled(v56, v57)) {
      goto LABEL_20;
    }
    uint64_t v58 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v58 = 0;
    unint64_t v59 = "[Medications] unable to verify logging amount because separator string is invalid.";
    goto LABEL_19;
  }
  uint64_t v27 = sub_1C2B73FA0();
  unint64_t v29 = v28;

  sub_1C2B734A0();
  sub_1C2B734B0();
  uint64_t v64 = v27;
  sub_1C2B734A0();
  sub_1C2B734D0();
  unint64_t v30 = *(void (**)(char *, uint64_t))(v23 + 8);
  v30(v13, v10);
  v30(v16, v10);
  (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v13, v21, v10);
  sub_1C2AFCF28(&qword_1EA32BB60);
  sub_1C2B746E0();
  sub_1C2AFCF28((unint64_t *)&unk_1EA32BB68);
  char v31 = sub_1C2B73F50();
  v30(v16, v10);
  v30(v24, v10);
  v30(v21, v10);
  if ((v31 & 1) == 0)
  {
LABEL_22:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v32 = sub_1C2AFB974(v64, v29);
  uint64_t v34 = v33;
  swift_bridgeObjectRelease();
  if (!v34)
  {
    if (qword_1EBF11340 != -1) {
      swift_once();
    }
    uint64_t v60 = sub_1C2B73A90();
    __swift_project_value_buffer(v60, (uint64_t)qword_1EBF11348);
    id v56 = sub_1C2B73A80();
    os_log_type_t v57 = sub_1C2B744C0();
    if (!os_log_type_enabled(v56, v57)) {
      goto LABEL_20;
    }
    uint64_t v58 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v58 = 0;
    unint64_t v59 = "[Medications] unable to verify logging amount because separator char is invalid.";
LABEL_19:
    _os_log_impl(&dword_1C2ADB000, v56, v57, v59, v58, 2u);
    MEMORY[0x1C8767A10](v58, -1, -1);
LABEL_20:

    return 0;
  }
  uint64_t v36 = v65;
  unint64_t v35 = v66;
  unint64_t v37 = sub_1C2AFCC5C(v32, v34, v65, v66);
  char v39 = v38;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  if ((v39 & 1) == 0)
  {
    uint64_t v40 = sub_1C2B74140();
    uint64_t v42 = v41;
    uint64_t v44 = v43;
    uint64_t v46 = v45;
    swift_bridgeObjectRelease();
    MEMORY[0x1C8766490](v40, v42, v44, v46);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    unint64_t v47 = sub_1C2AFCD4C(v37, v36, v35);
    uint64_t v49 = v48;
    uint64_t v51 = v50;
    uint64_t v53 = v52;
    swift_bridgeObjectRelease();
    MEMORY[0x1C8766490](v47, v49, v51, v53);
    swift_bridgeObjectRelease();
  }
  uint64_t v61 = sub_1C2B74080();
  swift_bridgeObjectRelease();
  if (v61 >= 6) {
    goto LABEL_22;
  }
  uint64_t v62 = sub_1C2B74080();
  swift_bridgeObjectRelease();
  return v62 < 4;
}

unint64_t sub_1C2AFCC5C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    uint64_t v4 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (!v4) {
    return 0;
  }
  uint64_t v7 = 4 * v4;
  unint64_t v8 = 15;
  while (sub_1C2B74120() != a1 || v9 != a2)
  {
    char v10 = sub_1C2B74B50();
    swift_bridgeObjectRelease();
    if (v10) {
      return v8;
    }
    unint64_t v8 = sub_1C2B74090();
    if (v7 == v8 >> 14) {
      return 0;
    }
  }
  swift_bridgeObjectRelease();
  return v8;
}

unint64_t sub_1C2AFCD4C(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (4 * v3 >= result >> 14) {
    return sub_1C2B74140();
  }
  __break(1u);
  return result;
}

void sub_1C2AFCD98(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1C2AFCDFC()
{
  unint64_t result = qword_1EBF10840;
  if (!qword_1EBF10840)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBF10840);
  }
  return result;
}

uint64_t sub_1C2AFCE54(uint64_t a1)
{
  sub_1C2AFCD98(0, &qword_1EBF106C8, MEMORY[0x1E4F27A78], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C2AFCEE0(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_1C2B74630();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t sub_1C2AFCF28(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C2B734E0();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t dispatch thunk of MedicationLoggingUnitProviding.localizedResolvedLoggingUnit(for:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of LoggingUnitDisplayable.loggingQuantityString(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of LoggingUnitDisplayable.loggingQuantityString(for:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of static LoggingUnitDisplayable.formatter(usesGroupingSeparator:localeOverride:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of static LoggingUnitDisplayable.formatLoggingAmountAsString(_:shouldIncludeGroupingSeparator:localeOverride:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, void))(a6 + 40))(a1, a2 & 1);
}

uint64_t dispatch thunk of static LoggingUnitDisplayable.formatLoggingStringAsDouble(_:localeOverride:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 48))();
}

uint64_t dispatch thunk of static LoggingUnitDisplayable.userEnteredLoggingAmountIsValid(_:localeOverride:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 56))();
}

void *MedicationDataSource.__allocating_init(healthStore:)(void *a1)
{
  uint64_t v2 = (void *)swift_allocObject();
  swift_defaultActor_initialize();
  v2[14] = MEMORY[0x1E4FBC868];
  v2[15] = a1;
  sub_1C2B73A60();
  id v3 = a1;
  v2[16] = sub_1C2B73A50();
  return v2;
}

void *MedicationDataSource.init(healthStore:)(void *a1)
{
  uint64_t v2 = v1;
  swift_defaultActor_initialize();
  v2[14] = MEMORY[0x1E4FBC868];
  v2[15] = a1;
  sub_1C2B73A60();
  id v4 = a1;
  v2[16] = sub_1C2B73A50();
  return v2;
}

uint64_t sub_1C2AFD0C8(uint64_t a1, uint64_t a2)
{
  v3[12] = a2;
  v3[13] = v2;
  v3[11] = a1;
  sub_1C2AFDD44(0, &qword_1EBF10AA8, &qword_1EBF11368, 0x1E4F2B630, MEMORY[0x1E4F66878]);
  v3[14] = v4;
  v3[15] = *(void *)(v4 - 8);
  v3[16] = swift_task_alloc();
  sub_1C2AFDD44(0, &qword_1EBF10AA0, &qword_1EBF11368, 0x1E4F2B630, MEMORY[0x1E4F66868]);
  v3[17] = v5;
  v3[18] = *(void *)(v5 - 8);
  v3[19] = swift_task_alloc();
  sub_1C2AFDD44(0, &qword_1EBF10AB0, &qword_1EBF11368, 0x1E4F2B630, MEMORY[0x1E4F66880]);
  v3[20] = v6;
  v3[21] = *(void *)(v6 - 8);
  v3[22] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C2AFD2C8, v2, 0);
}

uint64_t sub_1C2AFD2C8()
{
  uint64_t v1 = v0[13];
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 112);
  if (*(void *)(v2 + 16))
  {
    uint64_t v4 = v0[11];
    uint64_t v3 = v0[12];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v5 = sub_1C2AE056C(v4, v3);
    if (v6)
    {
      uint64_t v7 = *(void **)(*(void *)(v2 + 56) + 8 * v5);
      id v8 = v7;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v9 = (uint64_t (*)(void *))v0[1];
      return v9(v7);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v12 = v0[15];
  uint64_t v11 = v0[16];
  uint64_t v13 = v0[14];
  uint64_t v30 = v0[13];
  uint64_t v14 = self;
  sub_1C2AE3A18(0, (unint64_t *)&qword_1EBF112D0);
  id v15 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel__typeIdentifier, v30);
  id v16 = objc_msgSend(v14, sel_predicateForUserDomainConceptsWithTypeIdentifier_, v15);
  v0[23] = v16;

  uint64_t v17 = (void *)sub_1C2B73F60();
  id v18 = objc_msgSend(v14, sel_predicateForUserDomainConceptsWithSemanticIdentifier_, v17);
  v0[24] = v18;

  sub_1C2AE7E34();
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1C2B76A80;
  *(void *)(v19 + 32) = v16;
  *(void *)(v19 + 40) = v18;
  sub_1C2B741F0();
  sub_1C2AE3A18(0, &qword_1EBF11378);
  id v20 = v16;
  id v21 = v18;
  uint64_t v22 = (void *)sub_1C2B741C0();
  swift_bridgeObjectRelease();
  id v23 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v22);
  v0[25] = v23;

  sub_1C2AE3A18(0, &qword_1EBF11368);
  id v24 = v23;
  uint64_t v25 = MEMORY[0x1E4FBC860];
  sub_1C2B739E0();
  v0[8] = v25;
  sub_1C2B739D0();
  sub_1C2B739C0();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  v0[26] = sub_1C2B02E80(&qword_1EA32BB78, v26, (void (*)(uint64_t))type metadata accessor for MedicationDataSource);
  unint64_t v27 = sub_1C2B00108();
  unint64_t v28 = (void *)swift_task_alloc();
  v0[27] = v28;
  *unint64_t v28 = v0;
  v28[1] = sub_1C2AFD69C;
  uint64_t v29 = v0[17];
  return MEMORY[0x1F4187C78](v0 + 9, v29, v27);
}

uint64_t sub_1C2AFD69C()
{
  *(void *)(*(void *)v1 + 224) = v0;
  swift_task_dealloc();
  swift_getObjectType();
  uint64_t v3 = sub_1C2B742A0();
  if (v0) {
    uint64_t v4 = sub_1C2AFDBCC;
  }
  else {
    uint64_t v4 = sub_1C2AFD7F8;
  }
  return MEMORY[0x1F4188298](v4, v3, v2);
}

uint64_t sub_1C2AFD7F8()
{
  uint64_t v1 = v0[13];
  v0[29] = v0[9];
  return MEMORY[0x1F4188298](sub_1C2AFD81C, v1, 0);
}

uint64_t sub_1C2AFD81C()
{
  uint64_t v1 = (void *)v0[29];
  if (v1)
  {
    id v2 = v1;
    MEMORY[0x1C87665F0]();
    if (*(void *)((v0[8] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v0[8] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C2B74210();
    }
    sub_1C2B74250();
    sub_1C2B741F0();

    unint64_t v3 = sub_1C2B00108();
    uint64_t v4 = (void *)swift_task_alloc();
    v0[27] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_1C2AFD69C;
    uint64_t v5 = v0[17];
    uint64_t v6 = (uint64_t)(v0 + 9);
    unint64_t v7 = v3;
    return MEMORY[0x1F4187C78](v6, v5, v7);
  }
  uint64_t v6 = (*(uint64_t (**)(void, void))(v0[18] + 8))(v0[19], v0[17]);
  unint64_t v8 = v0[8];
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_1C2B749C0();
    uint64_t v6 = swift_bridgeObjectRelease();
    if (v24) {
      goto LABEL_9;
    }
LABEL_16:
    uint64_t v26 = (void *)v0[24];
    uint64_t v25 = (void *)v0[25];
    uint64_t v27 = v0[22];
    unint64_t v28 = (void *)v0[23];
    uint64_t v29 = v0[20];
    uint64_t v30 = v0[21];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v27, v29);

    uint64_t v12 = 0;
    goto LABEL_17;
  }
  if (!*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_16;
  }
LABEL_9:
  if ((v8 & 0xC000000000000001) != 0)
  {
    id v9 = (id)MEMORY[0x1C8766C90](0, v8);
  }
  else
  {
    if (!*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return MEMORY[0x1F4187C78](v6, v5, v7);
    }
    id v9 = *(id *)(v8 + 32);
  }
  char v10 = v9;
  swift_bridgeObjectRelease();
  id v11 = objc_msgSend(v10, sel_userConcept);
  self;
  uint64_t v12 = swift_dynamicCastObjCClass();
  uint64_t v14 = (void *)v0[24];
  uint64_t v13 = (void *)v0[25];
  uint64_t v15 = v0[22];
  id v16 = (void *)v0[23];
  uint64_t v17 = v0[20];
  uint64_t v18 = v0[21];
  if (v12)
  {
    uint64_t v35 = v0[22];
    uint64_t v33 = (void *)v0[24];
    uint64_t v34 = (void *)v0[23];
    uint64_t v20 = v0[12];
    uint64_t v19 = v0[13];
    uint64_t v21 = v0[11];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    id v22 = v11;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v36 = *(void *)(v19 + 112);
    *(void *)(v19 + 112) = 0x8000000000000000;
    sub_1C2B01624(v12, v21, v20, isUniquelyReferenced_nonNull_native, &qword_1EBF112E0, (unint64_t *)&qword_1EBF112D0, 0x1E4F66B80, (void (*)(void))sub_1C2B22694);
    *(void *)(v19 + 112) = v36;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();

    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v35, v17);
  }
  else
  {

    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v15, v17);
  }
LABEL_17:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v31 = (uint64_t (*)(uint64_t))v0[1];
  return v31(v12);
}

uint64_t sub_1C2AFDBCC()
{
  uint64_t v1 = v0[13];
  v0[10] = v0[28];
  sub_1C2AF44C8();
  swift_willThrowTypedImpl();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4188298](sub_1C2AFDC60, v1, 0);
}

uint64_t sub_1C2AFDC60()
{
  uint64_t v1 = *(void **)(v0 + 192);
  uint64_t v2 = *(void *)(v0 + 176);
  uint64_t v3 = *(void **)(v0 + 184);
  uint64_t v4 = *(void *)(v0 + 160);
  uint64_t v5 = *(void *)(v0 + 168);
  uint64_t v7 = *(void *)(v0 + 144);
  uint64_t v6 = *(void *)(v0 + 152);
  uint64_t v8 = *(void *)(v0 + 136);

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

void sub_1C2AFDD44(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1C2AE3A18(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1C2AFDDAC(uint64_t a1)
{
  uint64_t v2[2] = a1;
  v2[3] = v1;
  sub_1C2B02CCC(0, &qword_1EBF10798, MEMORY[0x1E4FBD030]);
  uint64_t v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  uint64_t v2[6] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C2AFDE88, v1, 0);
}

uint64_t sub_1C2AFDE88()
{
  uint64_t v2 = v0[5];
  uint64_t v1 = v0[6];
  uint64_t v3 = v0[4];
  sub_1C2AFDD44(0, &qword_1EBF11288, (unint64_t *)&qword_1EBF112D0, 0x1E4F66B80, MEMORY[0x1E4FBB320]);
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v1, *MEMORY[0x1E4FBD028], v3);
  sub_1C2B74330();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1C2AFDF90(uint64_t a1, uint64_t a2)
{
  sub_1C2B02CCC(0, (unint64_t *)&unk_1EBF107A0, MEMORY[0x1E4FBD038]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v19 - v7;
  sub_1C2B02A2C(0, (unint64_t *)&unk_1EBF11290, MEMORY[0x1E4FBCFE8]);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v19 - v10;
  uint64_t v12 = sub_1C2B74310();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  uint64_t v14 = *(void **)(a2 + 128);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  unint64_t v15 = (*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  id v16 = (char *)swift_allocObject();
  *((void *)v16 + 2) = 0;
  *((void *)v16 + 3) = 0;
  *((void *)v16 + 4) = v14;
  *((void *)v16 + 5) = v13;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v16[v15], v8, v5);
  id v17 = v14;
  sub_1C2B32858((uint64_t)v11, (uint64_t)&unk_1EA32BC18, (uint64_t)v16);
  return swift_release();
}

uint64_t sub_1C2AFE1C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[10] = a5;
  v6[11] = a6;
  v6[9] = a4;
  sub_1C2B02CCC(0, &qword_1EBF10790, MEMORY[0x1E4FBD010]);
  v6[12] = v7;
  v6[13] = *(void *)(v7 - 8);
  v6[14] = swift_task_alloc();
  uint64_t v8 = sub_1C2B73A30();
  v6[15] = v8;
  v6[16] = *(void *)(v8 - 8);
  v6[17] = swift_task_alloc();
  v6[18] = swift_task_alloc();
  v6[19] = swift_task_alloc();
  sub_1C2B02A2C(0, &qword_1EBF10748, MEMORY[0x1E4F67808]);
  v6[20] = swift_task_alloc();
  sub_1C2B02DE0(0, &qword_1EA32BC20, MEMORY[0x1E4F1AB48]);
  v6[21] = v9;
  v6[22] = *(void *)(v9 - 8);
  v6[23] = swift_task_alloc();
  sub_1C2B02DC0(0);
  v6[24] = v10;
  v6[25] = *(void *)(v10 - 8);
  v6[26] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C2AFE434, 0, 0);
}

uint64_t sub_1C2AFE434()
{
  uint64_t v2 = *(void *)(v0 + 176);
  uint64_t v1 = *(void *)(v0 + 184);
  uint64_t v3 = *(void *)(v0 + 168);
  uint64_t v4 = sub_1C2B73A40();
  *(void *)(v0 + 216) = v4;
  *(void *)(v0 + 40) = v4;
  sub_1C2B02D58();
  uint64_t v6 = v5;
  uint64_t v7 = sub_1C2B02E80(&qword_1EA32BC30, 255, (void (*)(uint64_t))sub_1C2B02D58);
  MEMORY[0x1C87661B0](v6, v7);
  sub_1C2B73B80();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_beginAccess();
  *(_DWORD *)(v0 + 296) = *MEMORY[0x1E4F67800];
  *(_DWORD *)(v0 + 300) = *MEMORY[0x1E4F677F8];
  uint64_t v8 = sub_1C2B02E80(&qword_1EA32BC40, 255, sub_1C2B02DC0);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 224) = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_1C2AFE604;
  uint64_t v10 = *(void *)(v0 + 192);
  uint64_t v11 = *(void *)(v0 + 160);
  return MEMORY[0x1F4187C78](v11, v10, v8);
}

uint64_t sub_1C2AFE604()
{
  *(void *)(*(void *)v1 + 232) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1C2AFEDCC;
  }
  else {
    uint64_t v2 = sub_1C2AFE718;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C2AFE718()
{
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v3 = *(void *)(v0 + 128);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 200) + 8))(*(void *)(v0 + 208), *(void *)(v0 + 192));
    swift_release();
LABEL_7:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
    return v9();
  }
  (*(void (**)(void, uint64_t, uint64_t))(v3 + 32))(*(void *)(v0 + 152), v1, v2);
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 240) = Strong;
  if (!Strong)
  {
LABEL_6:
    swift_release();
    uint64_t v7 = *(void *)(v0 + 200);
    uint64_t v6 = *(void *)(v0 + 208);
    uint64_t v8 = *(void *)(v0 + 192);
    (*(void (**)(void, void))(*(void *)(v0 + 128) + 8))(*(void *)(v0 + 152), *(void *)(v0 + 120));
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    goto LABEL_7;
  }
  uint64_t v5 = Strong;
  if (sub_1C2B74350())
  {
    swift_release();
    goto LABEL_6;
  }
  int v11 = *(_DWORD *)(v0 + 296);
  uint64_t v12 = *(void *)(v0 + 144);
  uint64_t v13 = *(void *)(v0 + 120);
  uint64_t v14 = *(void *)(v0 + 128);
  unint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
  v15(v12, *(void *)(v0 + 152), v13);
  id v16 = *(unsigned int (**)(uint64_t, uint64_t))(v14 + 88);
  if (v16(v12, v13) == v11)
  {
    unint64_t v17 = *(void *)(v0 + 144);
    (*(void (**)(unint64_t, void))(*(void *)(v0 + 128) + 96))(v17, *(void *)(v0 + 120));
    uint64_t v18 = *(void *)v17;
    *(void *)(v0 + 56) = MEMORY[0x1E4FBC860];
    if ((unint64_t)v18 >> 62)
    {
      if (v18 < 0) {
        unint64_t v17 = v18;
      }
      else {
        unint64_t v17 = v18 & 0xFFFFFFFFFFFFFF8;
      }
      swift_bridgeObjectRetain();
      uint64_t v19 = sub_1C2B749C0();
      if (v19) {
        goto LABEL_13;
      }
    }
    else
    {
      uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v19)
      {
LABEL_13:
        if (v19 >= 1)
        {
          uint64_t v20 = 0;
          uint64_t v21 = (unint64_t *)(v0 + 56);
          do
          {
            if ((v18 & 0xC000000000000001) != 0) {
              id v22 = (id)MEMORY[0x1C8766C90](v20, v18);
            }
            else {
              id v22 = *(id *)(v18 + 8 * v20 + 32);
            }
            id v23 = v22;
            self;
            if (swift_dynamicCastObjCClass())
            {
              MEMORY[0x1C87665F0]();
              if (*(void *)((*v21 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v21 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                sub_1C2B74210();
              }
              sub_1C2B74250();
              sub_1C2B741F0();
            }
            else
            {
            }
            ++v20;
          }
          while (v19 != v20);
          swift_bridgeObjectRelease();
          unint64_t v33 = *v21;
          goto LABEL_37;
        }
        __break(1u);
        goto LABEL_45;
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v33 = MEMORY[0x1E4FBC860];
LABEL_37:
    *(void *)(v0 + 264) = v33;
    swift_bridgeObjectRelease();
    if (v33 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v36 = sub_1C2B749C0();
      swift_bridgeObjectRelease();
      if (v36) {
        goto LABEL_39;
      }
    }
    else if (*(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_39:
      uint64_t v35 = (void *)swift_task_alloc();
      *(void *)(v0 + 272) = v35;
      *uint64_t v35 = v0;
      v35[1] = sub_1C2AFEE4C;
      v35[5] = v33;
      v35[6] = v5;
      return MEMORY[0x1F4188298](sub_1C2AFFC14, v5, 0);
    }
    (*(void (**)(void, void))(*(void *)(v0 + 128) + 8))(*(void *)(v0 + 152), *(void *)(v0 + 120));
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_47;
  }
  int v43 = *(_DWORD *)(v0 + 300);
  uint64_t v24 = *(void *)(v0 + 144);
  uint64_t v42 = *(void *)(v0 + 152);
  uint64_t v26 = *(void *)(v0 + 128);
  uint64_t v25 = *(void *)(v0 + 136);
  uint64_t v27 = *(void *)(v0 + 120);
  unint64_t v28 = *(unsigned int (**)(uint64_t, uint64_t))(v26 + 8);
  *(void *)(v0 + 248) = v28;
  *(void *)(v0 + 256) = (v26 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v28(v24, v27);
  v15(v25, v42, v27);
  unsigned int v29 = v16(v25, v27);
  uint64_t v30 = *(void *)(v0 + 120);
  if (v29 != v43)
  {
    uint64_t v34 = *(void *)(v0 + 136);
    v28(*(void *)(v0 + 152), *(void *)(v0 + 120));
    swift_release();
    v28(v34, v30);
LABEL_47:
    uint64_t v38 = sub_1C2B02E80(&qword_1EA32BC40, 255, sub_1C2B02DC0);
    char v39 = (void *)swift_task_alloc();
    *(void *)(v0 + 224) = v39;
    *char v39 = v0;
    v39[1] = sub_1C2AFE604;
    uint64_t v40 = *(void *)(v0 + 192);
    uint64_t v41 = *(void *)(v0 + 160);
    return MEMORY[0x1F4187C78](v41, v40, v38);
  }
  id v16 = v28;
  uint64_t v31 = *(unint64_t **)(v0 + 136);
  (*(void (**)(unint64_t *, void))(*(void *)(v0 + 128) + 96))(v31, *(void *)(v0 + 120));
  unint64_t v17 = *v31;
  *(void *)(v0 + 280) = *v31;
  if (v17 >> 62)
  {
LABEL_45:
    swift_bridgeObjectRetain();
    uint64_t v37 = sub_1C2B749C0();
    swift_bridgeObjectRelease();
    if (!v37) {
      goto LABEL_46;
    }
    goto LABEL_27;
  }
  if (!*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_46:
    v16(*(void *)(v0 + 152), *(void *)(v0 + 120));
    swift_bridgeObjectRelease();
    swift_release();
    goto LABEL_47;
  }
LABEL_27:
  uint64_t v32 = (void *)swift_task_alloc();
  *(void *)(v0 + 288) = v32;
  *uint64_t v32 = v0;
  v32[1] = sub_1C2AFF0D4;
  return sub_1C2AFF2F4(v17);
}

uint64_t sub_1C2AFEDCC()
{
  *(void *)(v0 + 48) = *(void *)(v0 + 232);
  sub_1C2AF44C8();
  swift_dynamicCast();
  return swift_willThrowTypedImpl();
}

uint64_t sub_1C2AFEE4C()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C2AFEF48, 0, 0);
}

uint64_t sub_1C2AFEF48()
{
  uint64_t v1 = v0[19];
  uint64_t v2 = v0[15];
  uint64_t v3 = v0[16];
  uint64_t v5 = v0[13];
  uint64_t v4 = v0[14];
  uint64_t v6 = v0[12];
  v0[8] = v0[33];
  sub_1C2B02CCC(0, (unint64_t *)&unk_1EBF107A0, MEMORY[0x1E4FBD038]);
  sub_1C2B74320();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  uint64_t v7 = sub_1C2B02E80(&qword_1EA32BC40, 255, sub_1C2B02DC0);
  uint64_t v8 = (void *)swift_task_alloc();
  v0[28] = v8;
  void *v8 = v0;
  v8[1] = sub_1C2AFE604;
  uint64_t v9 = v0[24];
  uint64_t v10 = v0[20];
  return MEMORY[0x1F4187C78](v10, v9, v7);
}

uint64_t sub_1C2AFF0D4()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4188298](sub_1C2AFF1EC, 0, 0);
}

uint64_t sub_1C2AFF1EC()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[31];
  uint64_t v2 = v0[19];
  uint64_t v3 = v0[15];
  swift_release();
  v1(v2, v3);
  uint64_t v4 = sub_1C2B02E80(&qword_1EA32BC40, 255, sub_1C2B02DC0);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[28] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1C2AFE604;
  uint64_t v6 = v0[24];
  uint64_t v7 = v0[20];
  return MEMORY[0x1F4187C78](v7, v6, v4);
}

uint64_t sub_1C2AFF2F4(uint64_t a1)
{
  uint64_t v2[8] = a1;
  v2[9] = v1;
  sub_1C2B02A2C(0, (unint64_t *)&qword_1EA32BBB0, MEMORY[0x1E4F27990]);
  v2[10] = swift_task_alloc();
  uint64_t v3 = sub_1C2B73740();
  v2[11] = v3;
  v2[12] = *(void *)(v3 - 8);
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C2AFF418, v1, 0);
}

uint64_t sub_1C2AFF418()
{
  unint64_t v1 = *(void *)(v0 + 64);
  if (v1 >> 62) {
    goto LABEL_62;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v2)
    {
      unint64_t v76 = MEMORY[0x1E4FBC860];
      uint64_t result = sub_1C2B1D9B8(0, v2 & ~(v2 >> 63), 0);
      if (v2 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v4 = 0;
      uint64_t v5 = *(void *)(v0 + 96);
      unint64_t v6 = v1 & 0xC000000000000001;
      unint64_t v1 = v76;
      uint64_t v74 = *(void *)(v0 + 64) + 32;
      do
      {
        unint64_t v7 = v1;
        if (v6)
        {
          uint64_t v8 = v73;
          id v9 = (id)MEMORY[0x1C8766C90](v4, v73[8]);
        }
        else
        {
          id v9 = *(id *)(v74 + 8 * v4);
          uint64_t v8 = v73;
        }
        id v10 = objc_msgSend(v9, sel_UUID);
        sub_1C2B73730();

        unint64_t v12 = *(void *)(v1 + 16);
        unint64_t v11 = *(void *)(v1 + 24);
        if (v12 >= v11 >> 1)
        {
          sub_1C2B1D9B8(v11 > 1, v12 + 1, 1);
          unint64_t v7 = v1;
        }
        uint64_t v13 = v8[15];
        uint64_t v14 = v8[11];
        ++v4;
        *(void *)(v7 + 16) = v12 + 1;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 32))(v7+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v12, v13, v14);
        unint64_t v1 = v7;
      }
      while (v2 != v4);
    }
    else
    {
      unint64_t v1 = MEMORY[0x1E4FBC860];
    }
    uint64_t v15 = v73[12];
    uint64_t v60 = v73[9] + 112;
    swift_beginAccess();
    uint64_t v62 = *(void *)v60 + 64;
    uint64_t v16 = -1;
    uint64_t v17 = -1 << *(unsigned char *)(*(void *)v60 + 32);
    if (-v17 < 64) {
      uint64_t v16 = ~(-1 << -(char)v17);
    }
    unint64_t v18 = v16 & *(void *)(*(void *)v60 + 64);
    int64_t v63 = (unint64_t)(63 - v17) >> 6;
    uint64_t v19 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56);
    uint64_t v72 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
    uint64_t v71 = (void (**)(uint64_t, void, uint64_t))(v15 + 32);
    uint64_t v59 = v15;
    uint64_t v75 = (void (**)(uint64_t, uint64_t))(v15 + 8);
    uint64_t v20 = v73;
    uint64_t v66 = *(void *)v60;
    swift_bridgeObjectRetain();
    int64_t v0 = 0;
    uint64_t v61 = (void *)MEMORY[0x1E4FBC860];
    unint64_t v65 = v1;
    if (v18)
    {
      do
      {
LABEL_21:
        uint64_t v69 = (v18 - 1) & v18;
        unint64_t v24 = __clz(__rbit64(v18)) | (v0 << 6);
LABEL_36:
        int64_t v70 = v0;
        unint64_t v28 = (uint64_t *)(*(void *)(v66 + 48) + 16 * v24);
        uint64_t v29 = *v28;
        uint64_t v30 = *(void **)(*(void *)(v66 + 56) + 8 * v24);
        uint64_t v68 = v28[1];
        swift_bridgeObjectRetain();
        id v67 = v30;
        id v31 = objc_msgSend(v67, sel_UUID);
        sub_1C2B73730();

        uint64_t v32 = *(void *)(v1 + 16);
        if (v32)
        {
          uint64_t v64 = v29;
          unint64_t v33 = v1 + ((*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80));
          uint64_t v34 = *(void *)(v59 + 72);
          uint64_t v35 = *(void (**)(uint64_t, unint64_t, uint64_t))(v59 + 16);
          swift_bridgeObjectRetain();
          while (1)
          {
            uint64_t v37 = v20[10];
            uint64_t v36 = v20[11];
            v35(v37, v33, v36);
            uint64_t v21 = *v19;
            (*v19)(v37, 0, 1, v36);
            if ((*v72)(v37, 1, v36) == 1) {
              break;
            }
            uint64_t v38 = v19;
            uint64_t v39 = v20[13];
            uint64_t v40 = v20[11];
            (*v71)(v39, v20[10], v40);
            sub_1C2B02E80(&qword_1EA32BBB8, 255, MEMORY[0x1E4F27990]);
            char v41 = sub_1C2B73F50();
            uint64_t v42 = *v75;
            (*v75)(v39, v40);
            if (v41)
            {
              uint64_t v20 = v73;
              uint64_t v43 = v73[14];
              uint64_t v44 = v73[11];
              unint64_t v1 = v65;
              swift_bridgeObjectRelease();
              v42(v43, v44);
              if (swift_isUniquelyReferenced_nonNull_native()) {
                uint64_t v45 = v61;
              }
              else {
                uint64_t v45 = sub_1C2AE08C0(0, v61[2] + 1, 1, v61);
              }
              uint64_t v19 = v38;
              unint64_t v18 = v69;
              int64_t v0 = v70;
              unint64_t v47 = v45[2];
              unint64_t v46 = v45[3];
              if (v47 >= v46 >> 1) {
                uint64_t v45 = sub_1C2AE08C0((void *)(v46 > 1), v47 + 1, 1, v45);
              }
              v45[2] = v47 + 1;
              uint64_t v61 = v45;
              uint64_t v48 = &v45[2 * v47];
              v48[4] = v64;
              v48[5] = v68;

              if (v69) {
                goto LABEL_21;
              }
              goto LABEL_22;
            }
            v33 += v34;
            --v32;
            uint64_t v19 = v38;
            uint64_t v20 = v73;
            if (!v32) {
              goto LABEL_19;
            }
          }
        }
        else
        {
          uint64_t v21 = *v19;
          swift_bridgeObjectRetain();
LABEL_19:
          v21(v20[10], 1, 1, v20[11]);
        }
        uint64_t v22 = v20[14];
        uint64_t v23 = v20[11];
        unint64_t v1 = v65;
        swift_bridgeObjectRelease();
        (*v75)(v22, v23);

        swift_bridgeObjectRelease();
        unint64_t v18 = v69;
        int64_t v0 = v70;
      }
      while (v69);
    }
LABEL_22:
    int64_t v25 = v0 + 1;
    if (__OFADD__(v0, 1))
    {
      __break(1u);
      goto LABEL_61;
    }
    if (v25 >= v63) {
      break;
    }
    unint64_t v26 = *(void *)(v62 + 8 * v25);
    ++v0;
    if (v26) {
      goto LABEL_35;
    }
    int64_t v0 = v25 + 1;
    if (v25 + 1 >= v63) {
      break;
    }
    unint64_t v26 = *(void *)(v62 + 8 * v0);
    if (v26) {
      goto LABEL_35;
    }
    int64_t v0 = v25 + 2;
    if (v25 + 2 >= v63) {
      break;
    }
    unint64_t v26 = *(void *)(v62 + 8 * v0);
    if (v26) {
      goto LABEL_35;
    }
    int64_t v27 = v25 + 3;
    if (v27 >= v63) {
      break;
    }
    unint64_t v26 = *(void *)(v62 + 8 * v27);
    if (v26)
    {
      int64_t v0 = v27;
LABEL_35:
      uint64_t v69 = (v26 - 1) & v26;
      unint64_t v24 = __clz(__rbit64(v26)) + (v0 << 6);
      goto LABEL_36;
    }
    while (1)
    {
      int64_t v0 = v27 + 1;
      if (__OFADD__(v27, 1)) {
        break;
      }
      if (v0 >= v63) {
        goto LABEL_49;
      }
      unint64_t v26 = *(void *)(v62 + 8 * v0);
      ++v27;
      if (v26) {
        goto LABEL_35;
      }
    }
LABEL_61:
    __break(1u);
LABEL_62:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C2B749C0();
    swift_bridgeObjectRelease();
  }
LABEL_49:
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v49 = v61[2];
  if (v49)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v50 = v61 + 5;
    do
    {
      uint64_t v52 = *(v50 - 1);
      uint64_t v53 = *v50;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v54 = sub_1C2AE056C(v52, v53);
      LOBYTE(v52) = v55;
      swift_bridgeObjectRelease();
      uint64_t v51 = 0;
      if (v52)
      {
        int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v57 = *(void *)v60;
        uint64_t v77 = *(void *)v60;
        *(void *)uint64_t v60 = 0x8000000000000000;
        if (!isUniquelyReferenced_nonNull_native)
        {
          sub_1C2B020CC(&qword_1EBF112E0, (unint64_t *)&qword_1EBF112D0);
          uint64_t v57 = v77;
        }
        swift_bridgeObjectRelease();
        uint64_t v51 = *(void **)(*(void *)(v57 + 56) + 8 * v54);
        sub_1C2B28A60(v54, v57);
        *(void *)uint64_t v60 = v57;
        swift_bridgeObjectRelease();
      }
      swift_endAccess();

      swift_bridgeObjectRelease();
      v50 += 2;
      --v49;
    }
    while (v49);
    swift_bridgeObjectRelease_n();
    uint64_t v20 = v73;
  }
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v58 = (uint64_t (*)(void))v20[1];
  return v58();
}

uint64_t sub_1C2AFFBF4(uint64_t a1)
{
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = v1;
  return MEMORY[0x1F4188298](sub_1C2AFFC14, v1, 0);
}

uint64_t sub_1C2AFFC14()
{
  unint64_t v1 = *(void *)(v0 + 40);
  if (v1 >> 62)
  {
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C2B749C0();
    if (v2) {
      goto LABEL_3;
    }
LABEL_28:
    swift_bridgeObjectRelease();
    uint64_t v29 = (uint64_t (*)(void))v31[1];
    return v29();
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v2) {
    goto LABEL_28;
  }
LABEL_3:
  uint64_t v3 = 0;
  uint64_t v4 = v31 + 2;
  uint64_t v5 = (unint64_t *)(v31[6] + 112);
  uint64_t v32 = v2;
  unint64_t v33 = v1 & 0xC000000000000001;
  uint64_t v30 = v31[5] + 32;
  while (1)
  {
    if (v33) {
      unint64_t v7 = (void *)MEMORY[0x1C8766C90](v3, v31[5]);
    }
    else {
      unint64_t v7 = *(id *)(v30 + 8 * v3);
    }
    unint64_t v1 = (unint64_t)v7;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
LABEL_25:
      __break(1u);
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    uint64_t v34 = v3 + 1;
    id v8 = objc_msgSend(v7, sel_semanticIdentifier);
    id v9 = objc_msgSend(v8, sel_stringValue);

    uint64_t v10 = sub_1C2B73FA0();
    uint64_t v12 = v11;

    uint64_t v13 = v4;
    swift_beginAccess();
    uint64_t v14 = (id)v1;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v1 = *v5;
    uint64_t v35 = (void *)*v5;
    *uint64_t v5 = 0x8000000000000000;
    unint64_t v17 = sub_1C2AE056C(v10, v12);
    uint64_t v18 = *(void *)(v1 + 16);
    BOOL v19 = (v16 & 1) == 0;
    uint64_t v20 = v18 + v19;
    if (__OFADD__(v18, v19)) {
      goto LABEL_25;
    }
    char v21 = v16;
    if (*(void *)(v1 + 24) < v20) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      if (v16) {
        goto LABEL_4;
      }
    }
    else
    {
      sub_1C2B020CC(&qword_1EBF112E0, (unint64_t *)&qword_1EBF112D0);
      unint64_t v1 = (unint64_t)v35;
      if (v21)
      {
LABEL_4:
        uint64_t v6 = *(void *)(v1 + 56);

        *(void *)(v6 + 8 * v17) = v14;
        goto LABEL_5;
      }
    }
LABEL_17:
    *(void *)(v1 + 8 * (v17 >> 6) + 64) |= 1 << v17;
    unint64_t v24 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v17);
    *unint64_t v24 = v10;
    v24[1] = v12;
    *(void *)(*(void *)(v1 + 56) + 8 * v17) = v14;
    uint64_t v25 = *(void *)(v1 + 16);
    BOOL v26 = __OFADD__(v25, 1);
    uint64_t v27 = v25 + 1;
    if (v26) {
      goto LABEL_26;
    }
    *(void *)(v1 + 16) = v27;
    swift_bridgeObjectRetain();
LABEL_5:
    *uint64_t v5 = v1;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = v13;
    swift_endAccess();

    ++v3;
    if (v34 == v32) {
      goto LABEL_28;
    }
  }
  sub_1C2B22694(v20, isUniquelyReferenced_nonNull_native);
  unint64_t v1 = (unint64_t)v35;
  unint64_t v22 = sub_1C2AE056C(v10, v12);
  if ((v21 & 1) == (v23 & 1))
  {
    unint64_t v17 = v22;
    if (v21) {
      goto LABEL_4;
    }
    goto LABEL_17;
  }
  return sub_1C2B74BB0();
}

uint64_t MedicationDataSource.deinit()
{
  swift_bridgeObjectRelease();

  swift_defaultActor_destroy();
  return v0;
}

uint64_t MedicationDataSource.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  swift_defaultActor_destroy();
  return MEMORY[0x1F4188210](v0);
}

uint64_t MedicationDataSource.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_1C2AFFFD0()
{
  return v0;
}

unint64_t sub_1C2AFFFDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C2B74C20();
  swift_bridgeObjectRetain();
  sub_1C2B74070();
  swift_bridgeObjectRelease();
  if (a4 == 1)
  {
    sub_1C2B74C30();
  }
  else
  {
    sub_1C2B74C30();
    sub_1C2B74C40();
    if (a4)
    {
      swift_bridgeObjectRetain();
      sub_1C2B74070();
      uint64_t v8 = a3;
      uint64_t v9 = a4;
    }
    else
    {
      uint64_t v8 = a3;
      uint64_t v9 = 0;
    }
    sub_1C2B027B4(v8, v9);
  }
  uint64_t v10 = sub_1C2B74C60();
  return sub_1C2B004EC(a1, a2, a3, a4, v10);
}

uint64_t type metadata accessor for MedicationDataSource()
{
  return self;
}

unint64_t sub_1C2B00108()
{
  unint64_t result = qword_1EA32BB80;
  if (!qword_1EA32BB80)
  {
    sub_1C2AFDD44(255, &qword_1EBF10AA0, &qword_1EBF11368, 0x1E4F2B630, MEMORY[0x1E4F66868]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA32BB80);
  }
  return result;
}

unint64_t sub_1C2B0018C(uint64_t a1)
{
  sub_1C2B73FA0();
  sub_1C2B74C20();
  sub_1C2B74070();
  uint64_t v2 = sub_1C2B74C60();
  swift_bridgeObjectRelease();
  return sub_1C2B007EC(a1, v2);
}

unint64_t sub_1C2B00220(void *a1)
{
  sub_1C2B74C20();
  if (a1)
  {
    sub_1C2B74C40();
    id v2 = a1;
    id v3 = objc_msgSend(v2, sel_ingredientProducts);
    sub_1C2AE3A18(0, (unint64_t *)&qword_1EA32BA78);
    uint64_t v4 = sub_1C2B741D0();

    sub_1C2B24914(v9, v4);
    swift_bridgeObjectRelease();
    id v5 = objc_msgSend(v2, sel_tradeNameProduct);
    if (v5)
    {
      uint64_t v6 = v5;
      sub_1C2B74600();
    }
    else
    {
    }
  }
  else
  {
    sub_1C2B74C40();
  }
  uint64_t v7 = sub_1C2B74C60();
  return sub_1C2B00964(a1, v7);
}

void sub_1C2B0033C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C2B74C20();
  swift_bridgeObjectRetain();
  sub_1C2B24914(v7, a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C2B74070();
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_1C2B74C60();
  sub_1C2B00BAC(a1, a2, a3, v6);
}

unint64_t sub_1C2B003F0(void *a1)
{
  sub_1C2B74C20();
  sub_1C2B74C40();
  if (a1)
  {
    id v2 = a1;
    sub_1C2B74600();
  }
  uint64_t v3 = sub_1C2B74C60();
  return sub_1C2B00F7C(a1, v3);
}

unint64_t sub_1C2B00480(uint64_t a1)
{
  sub_1C2B74C20();
  sub_1C2B74C30();
  uint64_t v2 = sub_1C2B74C60();
  return sub_1C2B01080(a1, v2);
}

unint64_t sub_1C2B004EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v7 = a5 & ~v6;
  if (((*(void *)(v5 + 64 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
    return v7;
  }
  uint64_t v23 = ~v6;
  while (1)
  {
    uint64_t v14 = (void *)(*(void *)(v5 + 48) + 32 * v7);
    uint64_t v15 = v14[2];
    uint64_t v16 = v14[3];
    BOOL v17 = *v14 == a1 && v14[1] == a2;
    if (!v17 && (sub_1C2B74B50() & 1) == 0) {
      goto LABEL_6;
    }
    if (v16 == 1)
    {
      if (a4 == 1)
      {
        sub_1C2B027B4(v15, 1);
        sub_1C2B027B4(a3, 1);
        return v7;
      }
LABEL_4:
      sub_1C2AE8858(a3, a4);
      sub_1C2AE8858(v15, v16);
      sub_1C2B027B4(v15, v16);
      uint64_t v12 = a3;
      uint64_t v13 = a4;
LABEL_5:
      sub_1C2B027B4(v12, v13);
      goto LABEL_6;
    }
    if (a4 == 1) {
      goto LABEL_4;
    }
    if (!v16) {
      break;
    }
    if (!a4)
    {
      sub_1C2AE8858(a3, 0);
      sub_1C2AE8858(v15, v16);
      sub_1C2B027B4(v15, v16);
      uint64_t v12 = a3;
      uint64_t v13 = 0;
      goto LABEL_5;
    }
    if (v15 == a3 && v16 == a4)
    {
      sub_1C2AE8858(a3, a4);
      sub_1C2AE8858(a3, a4);
      sub_1C2B027B4(a3, a4);
      uint64_t v21 = a3;
      uint64_t v22 = a4;
      goto LABEL_29;
    }
    char v19 = sub_1C2B74B50();
    sub_1C2AE8858(a3, a4);
    sub_1C2AE8858(v15, v16);
    sub_1C2B027B4(v15, v16);
    sub_1C2B027B4(a3, a4);
    if (v19) {
      return v7;
    }
LABEL_6:
    unint64_t v7 = (v7 + 1) & v23;
    if (((*(void *)(v5 + 64 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
      return v7;
    }
  }
  swift_bridgeObjectRetain();
  sub_1C2AE8858(a3, a4);
  sub_1C2AE8858(v15, 0);
  sub_1C2AE8858(a3, a4);
  sub_1C2AE8858(v15, 0);
  swift_bridgeObjectRetain();
  sub_1C2AE8858(v15, 0);
  sub_1C2B027B4(v15, 0);
  sub_1C2B027B4(a3, a4);
  if (a4)
  {
    sub_1C2B027B4(v15, 0);
    sub_1C2B027B4(a3, a4);
    sub_1C2B027B4(a3, a4);
    sub_1C2B027B4(v15, 0);
    swift_bridgeObjectRelease();
    uint64_t v12 = v15;
    uint64_t v13 = 0;
    goto LABEL_5;
  }
  sub_1C2B027B4(a3, 0);
  sub_1C2B027B4(v15, 0);
  swift_bridgeObjectRelease();
  uint64_t v21 = v15;
  uint64_t v22 = 0;
LABEL_29:
  sub_1C2B027B4(v21, v22);
  return v7;
}

unint64_t sub_1C2B007EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = sub_1C2B73FA0();
    uint64_t v8 = v7;
    if (v6 == sub_1C2B73FA0() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_1C2B74B50();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = sub_1C2B73FA0();
          uint64_t v15 = v14;
          if (v13 == sub_1C2B73FA0() && v15 == v16) {
            break;
          }
          char v18 = sub_1C2B74B50();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_1C2B00964(void *a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = v2;
    uint64_t v8 = ~v4;
    uint64_t v24 = v2 + 64;
    do
    {
      uint64_t v9 = *(void **)(*(void *)(v6 + 48) + 8 * v5);
      if (v9)
      {
        id v10 = v9;
        char v11 = v10;
        if (a1)
        {
          id v12 = v10;
          id v13 = a1;
          id v14 = objc_msgSend(v12, sel_ingredientProducts);
          sub_1C2AE3A18(0, (unint64_t *)&qword_1EA32BA78);
          uint64_t v15 = sub_1C2B741D0();

          id v16 = objc_msgSend(v13, sel_ingredientProducts);
          uint64_t v17 = sub_1C2B741D0();

          LOBYTE(v16) = sub_1C2B1A8CC(v15, v17);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v16)
          {
            id v18 = objc_msgSend(v12, sel_tradeNameProduct);
            id v19 = objc_msgSend(v13, sel_tradeNameProduct);
            uint64_t v20 = v19;
            if (!v18)
            {

              uint64_t v3 = v24;
              if (!v20) {
                return v5;
              }
              goto LABEL_16;
            }
            if (v19)
            {
              id v21 = v18;
              char v22 = sub_1C2B745F0();

              uint64_t v3 = v24;
              if (v22) {
                return v5;
              }
              goto LABEL_17;
            }

            char v11 = v13;
          }
          else
          {
            char v11 = v12;
            id v18 = v13;
          }
          uint64_t v3 = v24;

          uint64_t v20 = v18;
        }
        else
        {
          uint64_t v20 = v10;
        }
      }
      else
      {
        if (!a1) {
          return v5;
        }
        char v11 = 0;
        uint64_t v20 = 0;
      }

LABEL_16:
LABEL_17:
      unint64_t v5 = (v5 + 1) & v8;
    }
    while (((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) != 0);
  }
  return v5;
}

void sub_1C2B00BAC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v6 = a4 & ~v5;
  if (((*(void *)(v4 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return;
  }
  uint64_t v7 = a1;
  uint64_t v8 = a1 >> 62;
  if (a1 >> 62)
  {
LABEL_59:
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C2B749C0();
    swift_bridgeObjectRelease();
    uint64_t v9 = v7 & 0xFFFFFFFFFFFFFF8;
  }
  else
  {
    uint64_t v9 = a1 & 0xFFFFFFFFFFFFFF8;
    uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v33 = ~v5;
  uint64_t v11 = v9 + 32;
  uint64_t v36 = v9;
  if (v7 < 0) {
    uint64_t v9 = v7;
  }
  if (v8) {
    uint64_t v11 = v9;
  }
  uint64_t v32 = v11;
  uint64_t v39 = v7;
  unint64_t v40 = v7 & 0xC000000000000001;
  uint64_t v37 = 2 - v10;
  uint64_t v38 = v10;
  while (1)
  {
    uint64_t v12 = *(void *)(*(void *)(v35 + 48) + 24 * v6);
    uint64_t v5 = (unint64_t)v12 >> 62;
    if ((unint64_t)v12 >> 62)
    {
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      uint64_t v13 = sub_1C2B749C0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    if (v13 == v38)
    {
      if (!v38) {
        goto LABEL_53;
      }
      uint64_t v7 = v12 & 0xFFFFFFFFFFFFFF8;
      uint64_t v14 = (v12 & 0xFFFFFFFFFFFFFF8) + 32;
      uint64_t v15 = v12 < 0 ? v12 : v12 & 0xFFFFFFFFFFFFFF8;
      if (v5) {
        uint64_t v14 = v15;
      }
      if (v14 == v32) {
        goto LABEL_53;
      }
      if (v38 < 0)
      {
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
LABEL_58:
        __break(1u);
        goto LABEL_59;
      }
      uint64_t v5 = v12 & 0xC000000000000001;
      if ((v12 & 0xC000000000000001) != 0)
      {
        id v16 = (id)MEMORY[0x1C8766C90](0, v12);
      }
      else
      {
        if (!*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_57;
        }
        id v16 = *(id *)(v12 + 32);
      }
      uint64_t v17 = v16;
      if (v40)
      {
        id v18 = (id)MEMORY[0x1C8766C90](0, v39);
      }
      else
      {
        if (!*(void *)(v36 + 16)) {
          goto LABEL_58;
        }
        id v18 = *(id *)(v39 + 32);
      }
      id v19 = v18;
      sub_1C2AE3A18(0, (unint64_t *)&qword_1EA32BA78);
      char v20 = sub_1C2B745F0();

      if (v20) {
        break;
      }
    }
LABEL_9:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v6 = (v6 + 1) & v33;
    if (((*(void *)(v34 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
      return;
    }
  }
  if (v38 == 1) {
    goto LABEL_53;
  }
  if (v5)
  {
    id v21 = (id)MEMORY[0x1C8766C90](1, v12);
    goto LABEL_33;
  }
  if (*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 2uLL)
  {
    id v21 = *(id *)(v12 + 40);
LABEL_33:
    char v22 = v21;
    if (v40)
    {
      id v23 = (id)MEMORY[0x1C8766C90](1, v39);
    }
    else
    {
      if (*(void *)(v36 + 16) < 2uLL) {
        goto LABEL_61;
      }
      id v23 = *(id *)(v39 + 40);
    }
    uint64_t v24 = v23;
    char v25 = sub_1C2B745F0();

    if (v25)
    {
      uint64_t v8 = 6;
      while (v37 + v8 != 6)
      {
        unint64_t v29 = v8 - 4;
        if (v5)
        {
          id v30 = (id)MEMORY[0x1C8766C90](v8 - 4, v12);
        }
        else
        {
          if (v29 >= *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_55:
            __break(1u);
            goto LABEL_56;
          }
          id v30 = *(id *)(v12 + 8 * v8);
        }
        id v31 = v30;
        if (v40)
        {
          id v26 = (id)MEMORY[0x1C8766C90](v8 - 4, v39);
        }
        else
        {
          if (v29 >= *(void *)(v36 + 16)) {
            goto LABEL_55;
          }
          id v26 = *(id *)(v39 + 8 * v8);
        }
        uint64_t v27 = v26;
        char v28 = sub_1C2B745F0();

        ++v8;
        if ((v28 & 1) == 0) {
          goto LABEL_9;
        }
      }
LABEL_53:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    goto LABEL_9;
  }
  __break(1u);
LABEL_61:
  __break(1u);
}

unint64_t sub_1C2B00F7C(void *a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = v2;
    uint64_t v8 = ~v4;
    do
    {
      uint64_t v9 = *(void **)(*(void *)(v6 + 48) + 8 * v5);
      if (v9)
      {
        if (a1)
        {
          sub_1C2AE3A18(0, &qword_1EA32BBE8);
          id v10 = v9;
          id v11 = a1;
          char v12 = sub_1C2B745F0();

          if (v12) {
            return v5;
          }
        }
      }
      else if (!a1)
      {
        return v5;
      }
      unint64_t v5 = (v5 + 1) & v8;
    }
    while (((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) != 0);
  }
  return v5;
}

unint64_t sub_1C2B01080(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

void sub_1C2B0111C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
}

uint64_t sub_1C2B0114C(uint64_t a1)
{
  return sub_1C2AFDF90(a1, v1);
}

uint64_t method lookup function for MedicationDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationDataSource);
}

uint64_t dispatch thunk of MedicationDataSource.__allocating_init(healthStore:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of MedicationDataSource.fetchMedication(identifier:)(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(*(void *)v2 + 144) + **(int **)(*(void *)v2 + 144));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_1C2B0128C;
  return v8(a1, a2);
}

uint64_t sub_1C2B0128C(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t dispatch thunk of MedicationDataSource.observeChanges()(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 152) + **(int **)(*(void *)v1 + 152));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1C2AF9A8C;
  return v6(a1);
}

uint64_t sub_1C2B01490(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1C2AE056C(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1C2B01CFC();
LABEL_7:
    id v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      *(void *)(v18[7] + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_1C2B22BC8(result, a4 & 1);
  uint64_t result = sub_1C2AE056C(a2, a3);
  if ((v16 & 1) != (v19 & 1))
  {
LABEL_17:
    uint64_t result = sub_1C2B74BB0();
    __break(1u);
    return result;
  }
  unint64_t v12 = result;
  id v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  char v20 = (uint64_t *)(v18[6] + 16 * v12);
  *char v20 = a2;
  v20[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v21 = v18[2];
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  void v18[2] = v23;
  return swift_bridgeObjectRetain();
}

void sub_1C2B015F4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
}

void sub_1C2B01624(uint64_t a1, uint64_t a2, uint64_t a3, char a4, unint64_t *a5, unint64_t *a6, uint64_t a7, void (*a8)(void))
{
  char v11 = v8;
  uint64_t v15 = *v8;
  unint64_t v17 = sub_1C2AE056C(a2, a3);
  uint64_t v18 = *(void *)(v15 + 16);
  BOOL v19 = (v16 & 1) == 0;
  uint64_t v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v21 = v16;
  uint64_t v22 = *(void *)(v15 + 24);
  if (v22 >= v20 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v22 >= v20 && (a4 & 1) == 0)
  {
    sub_1C2B020CC(a5, a6);
LABEL_7:
    uint64_t v23 = (void *)*v11;
    if (v21)
    {
LABEL_8:
      uint64_t v24 = v23[7];

      *(void *)(v24 + 8 * v17) = a1;
      return;
    }
    goto LABEL_11;
  }
  a8();
  unint64_t v25 = sub_1C2AE056C(a2, a3);
  if ((v21 & 1) != (v26 & 1))
  {
LABEL_17:
    sub_1C2B74BB0();
    __break(1u);
    return;
  }
  unint64_t v17 = v25;
  uint64_t v23 = (void *)*v11;
  if (v21) {
    goto LABEL_8;
  }
LABEL_11:
  v23[(v17 >> 6) + 8] |= 1 << v17;
  uint64_t v27 = (uint64_t *)(v23[6] + 16 * v17);
  *uint64_t v27 = a2;
  v27[1] = a3;
  *(void *)(v23[7] + 8 * v17) = a1;
  uint64_t v28 = v23[2];
  BOOL v29 = __OFADD__(v28, 1);
  uint64_t v30 = v28 + 1;
  if (v29)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v23[2] = v30;
  swift_bridgeObjectRetain();
}

_OWORD *sub_1C2B017D4(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_1C2AE056C(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1C2B01EB8();
      goto LABEL_7;
    }
    sub_1C2B2365C(v15, a4 & 1);
    unint64_t v21 = sub_1C2AE056C(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      uint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = (_OWORD *)sub_1C2B74BB0();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    BOOL v19 = (_OWORD *)(v18[7] + 32 * v12);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
    return sub_1C2AF45B4(a1, v19);
  }
LABEL_13:
  sub_1C2B01A8C(v12, a2, a3, a1, v18);
  return (_OWORD *)swift_bridgeObjectRetain();
}

void sub_1C2B01928(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
}

uint64_t sub_1C2B01958(char a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_1C2B00480(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1C2B02588();
LABEL_7:
    char v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      *(unsigned char *)(v16[7] + v10) = a1 & 1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(void *)(v16[6] + 8 * v10) = a2;
    *(unsigned char *)(v16[7] + v10) = a1 & 1;
    uint64_t v18 = v16[2];
    BOOL v19 = __OFADD__(v18, 1);
    uint64_t v20 = v18 + 1;
    if (!v19)
    {
      v16[2] = v20;
      return result;
    }
    goto LABEL_14;
  }
  sub_1C2B23F54(result, a3 & 1);
  uint64_t result = sub_1C2B00480(a2);
  if ((v14 & 1) == (v17 & 1))
  {
    unint64_t v10 = result;
    char v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  type metadata accessor for HKMedicationListOnboardingAnalyticsStepType(0);
  uint64_t result = sub_1C2B74BB0();
  __break(1u);
  return result;
}

_OWORD *sub_1C2B01A8C(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  *uint64_t v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_1C2AF45B4(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

id sub_1C2B01AF8()
{
  return sub_1C2B020CC(&qword_1EBF112E0, (unint64_t *)&qword_1EBF112D0);
}

id sub_1C2B01B14()
{
  return sub_1C2B020CC(&qword_1EA32BC00, &qword_1EA32BC08);
}

id sub_1C2B01B30()
{
  uint64_t v1 = v0;
  sub_1C2B029C4();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C2B749D0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    char v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    long long v25 = *(_OWORD *)(*(void *)(v2 + 56) + v16);
    uint64_t v20 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v20 = v19;
    v20[1] = v18;
    *(_OWORD *)(*(void *)(v4 + 56) + v16) = v25;
    swift_bridgeObjectRetain();
    id v21 = (id)v25;
    id result = *((id *)&v25 + 1);
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C2B01CFC()
{
  uint64_t v1 = v0;
  sub_1C2B02970(0, &qword_1EA32BBF0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C2B749D0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    char v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 8 * v15;
    uint64_t v21 = *(void *)(*(void *)(v2 + 56) + v20);
    int64_t v22 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v22 = v19;
    v22[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v20) = v21;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C2B01EB8()
{
  uint64_t v1 = v0;
  sub_1C2B02970(0, (unint64_t *)&qword_1EA32BBE0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C2B749D0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v25 = v1;
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    char v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    sub_1C2AF4658(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = v19;
    v21[1] = v18;
    sub_1C2AF45B4(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1C2B020B0()
{
  return sub_1C2B020CC(&qword_1EBF10BD0, &qword_1EBF10B78);
}

id sub_1C2B020CC(unint64_t *a1, unint64_t *a2)
{
  uint64_t v3 = v2;
  sub_1C2B02288(0, a1, a2);
  uint64_t v4 = *v2;
  uint64_t v5 = sub_1C2B749D0();
  uint64_t v6 = v5;
  if (!*(void *)(v4 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t *v3 = v6;
    return result;
  }
  id result = (id)(v5 + 64);
  uint64_t v8 = v4 + 64;
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v6 + 32)) + 63) >> 6;
  if (v6 != v4 || (unint64_t)result >= v4 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v4 + 64), 8 * v9);
  }
  int64_t v11 = 0;
  *(void *)(v6 + 16) = *(void *)(v4 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v4 + 64);
  int64_t v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v15) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v8 + 8 * v24);
    ++v11;
    if (!v25)
    {
      int64_t v11 = v24 + 1;
      if (v24 + 1 >= v15) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v8 + 8 * v11);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v14 = (v25 - 1) & v25;
    unint64_t v17 = __clz(__rbit64(v25)) + (v11 << 6);
LABEL_12:
    uint64_t v18 = 16 * v17;
    uint64_t v19 = (void *)(*(void *)(v4 + 48) + 16 * v17);
    uint64_t v20 = v19[1];
    uint64_t v21 = 8 * v17;
    int64_t v22 = *(void **)(*(void *)(v4 + 56) + v21);
    unint64_t v23 = (void *)(*(void *)(v6 + 48) + v18);
    *unint64_t v23 = *v19;
    v23[1] = v20;
    *(void *)(*(void *)(v6 + 56) + v21) = v22;
    swift_bridgeObjectRetain();
    id result = v22;
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v15) {
    goto LABEL_26;
  }
  unint64_t v25 = *(void *)(v8 + 8 * v26);
  if (v25)
  {
    int64_t v11 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v11 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v11 >= v15) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v8 + 8 * v11);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_1C2B02288(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1C2AE3A18(255, a3);
    unint64_t v4 = sub_1C2B74A00();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void *sub_1C2B022F0()
{
  sub_1C2B027C8();
  uint64_t v35 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2B0284C();
  uint64_t v32 = v0;
  uint64_t v4 = *v0;
  uint64_t v5 = sub_1C2B749D0();
  uint64_t v6 = *(void *)(v4 + 16);
  uint64_t v36 = v5;
  if (!v6)
  {
    id result = (void *)swift_release();
    uint64_t v30 = v36;
    BOOL v29 = v32;
LABEL_28:
    *BOOL v29 = v30;
    return result;
  }
  uint64_t v7 = v5;
  id result = (void *)(v5 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v4 || (unint64_t)result >= v4 + 64 + 8 * v9)
  {
    id result = memmove(result, (const void *)(v4 + 64), 8 * v9);
    uint64_t v7 = v36;
  }
  uint64_t v33 = v4 + 64;
  int64_t v11 = 0;
  *(void *)(v7 + 16) = *(void *)(v4 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v4 + 64);
  int64_t v34 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    int64_t v26 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v26 >= v34) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v33 + 8 * v26);
    ++v11;
    if (!v27)
    {
      int64_t v11 = v26 + 1;
      if (v26 + 1 >= v34) {
        goto LABEL_26;
      }
      unint64_t v27 = *(void *)(v33 + 8 * v11);
      if (!v27) {
        break;
      }
    }
LABEL_25:
    unint64_t v14 = (v27 - 1) & v27;
    unint64_t v16 = __clz(__rbit64(v27)) + (v11 << 6);
LABEL_12:
    uint64_t v17 = 32 * v16;
    uint64_t v18 = (uint64_t *)(*(void *)(v4 + 48) + 32 * v16);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    uint64_t v21 = v18[2];
    uint64_t v22 = v18[3];
    unint64_t v23 = *(void *)(v35 + 72) * v16;
    sub_1C2B0290C(*(void *)(v4 + 56) + v23, (uint64_t)v3);
    uint64_t v24 = v36;
    unint64_t v25 = (void *)(*(void *)(v36 + 48) + v17);
    *unint64_t v25 = v20;
    v25[1] = v19;
    v25[2] = v21;
    v25[3] = v22;
    sub_1C2AE886C((uint64_t)v3, *(void *)(v24 + 56) + v23);
    swift_bridgeObjectRetain();
    id result = (void *)sub_1C2AE8858(v21, v22);
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v34)
  {
LABEL_26:
    id result = (void *)swift_release();
    BOOL v29 = v32;
    uint64_t v30 = v36;
    goto LABEL_28;
  }
  unint64_t v27 = *(void *)(v33 + 8 * v28);
  if (v27)
  {
    int64_t v11 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v11 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v11 >= v34) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v33 + 8 * v11);
    ++v28;
    if (v27) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C2B02588()
{
  uint64_t v1 = v0;
  sub_1C2B02714();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C2B749D0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v20 = __clz(__rbit64(v18));
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = v20 + (v9 << 6);
LABEL_12:
    char v16 = *(unsigned char *)(*(void *)(v2 + 56) + v15);
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 56) + v15) = v16;
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_1C2B02714()
{
  if (!qword_1EA32BBC0)
  {
    type metadata accessor for HKMedicationListOnboardingAnalyticsStepType(255);
    sub_1C2B02E80(&qword_1EA32BBC8, 255, type metadata accessor for HKMedicationListOnboardingAnalyticsStepType);
    unint64_t v0 = sub_1C2B74A00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA32BBC0);
    }
  }
}

uint64_t sub_1C2B027B4(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1C2B027C8()
{
  if (!qword_1EA32B970)
  {
    sub_1C2AFDD44(255, (unint64_t *)&qword_1EBF10D28, &qword_1EBF10D30, 0x1E4FB1618, MEMORY[0x1E4F29518]);
    unint64_t v0 = sub_1C2B74630();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA32B970);
    }
  }
}

void sub_1C2B0284C()
{
  if (!qword_1EA32BBD0)
  {
    sub_1C2B027C8();
    sub_1C2B028B8();
    unint64_t v0 = sub_1C2B74A00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA32BBD0);
    }
  }
}

unint64_t sub_1C2B028B8()
{
  unint64_t result = qword_1EBF111C8;
  if (!qword_1EBF111C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBF111C8);
  }
  return result;
}

uint64_t sub_1C2B0290C(uint64_t a1, uint64_t a2)
{
  sub_1C2B027C8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1C2B02970(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_1C2B74A00();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

void sub_1C2B029C4()
{
  if (!qword_1EA32BBF8)
  {
    sub_1C2AE3984();
    unint64_t v0 = sub_1C2B74A00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA32BBF8);
    }
  }
}

void sub_1C2B02A2C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C2B74630();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C2B02A80()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C2B02AB8()
{
  sub_1C2B02CCC(0, (unint64_t *)&unk_1EBF107A0, MEMORY[0x1E4FBD038]);
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 48) & ~v4;
  uint64_t v6 = v5 + *(void *)(v3 + 64);
  uint64_t v7 = v4 | 7;
  swift_unknownObjectRelease();

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0 + v5, v2);
  return MEMORY[0x1F4186498](v0, v6, v7);
}

uint64_t sub_1C2B02BB0(uint64_t a1)
{
  sub_1C2B02CCC(0, (unint64_t *)&unk_1EBF107A0, MEMORY[0x1E4FBD038]);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = v1[5];
  uint64_t v9 = (uint64_t)v1
     + ((*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_1C2AF9A8C;
  return sub_1C2AFE1C0(a1, v5, v6, v7, v8, v9);
}

void sub_1C2B02CCC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_1C2AFDD44(255, &qword_1EBF11288, (unint64_t *)&qword_1EBF112D0, 0x1E4F66B80, MEMORY[0x1E4FBB320]);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_1C2B02D58()
{
  if (!qword_1EA32BC28)
  {
    sub_1C2B73A30();
    unint64_t v0 = sub_1C2B73C10();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA32BC28);
    }
  }
}

void sub_1C2B02DC0(uint64_t a1)
{
}

void sub_1C2B02DE0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_1C2B02D58();
    uint64_t v7 = v6;
    uint64_t v8 = sub_1C2B02E80(&qword_1EA32BC30, 255, (void (*)(uint64_t))sub_1C2B02D58);
    unint64_t v9 = a3(a1, v7, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1C2B02E80(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t MedicationShape.fragments.getter()
{
  switch(*v0)
  {
    case 1:
      sub_1C2B05080(0, &qword_1EA32BC48, (uint64_t)&type metadata for MedicationVisualizationFragment, MEMORY[0x1E4FBBE00]);
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_1C2B76500;
      *(void *)(result + 32) = 0x705F656C63726963;
      *(void *)(result + 40) = 0xEB000000006C6C69;
      long long v3 = xmmword_1C2B76C00;
      goto LABEL_49;
    case 2:
      sub_1C2B05080(0, &qword_1EA32BC48, (uint64_t)&type metadata for MedicationVisualizationFragment, MEMORY[0x1E4FBBE00]);
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_1C2B76500;
      *(void *)(result + 32) = 0x6C69705F6C61766FLL;
      *(void *)(result + 40) = 0xE90000000000006CLL;
      long long v3 = xmmword_1C2B76B70;
      goto LABEL_49;
    case 3:
      sub_1C2B05080(0, &qword_1EA32BC48, (uint64_t)&type metadata for MedicationVisualizationFragment, MEMORY[0x1E4FBBE00]);
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_1C2B76500;
      *(void *)(result + 32) = 0x705F676E6F6C626FLL;
      *(void *)(result + 40) = 0xEB000000006C6C69;
      long long v3 = xmmword_1C2B76B90;
      goto LABEL_49;
    case 4:
      sub_1C2B05080(0, &qword_1EA32BC48, (uint64_t)&type metadata for MedicationVisualizationFragment, MEMORY[0x1E4FBBE00]);
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_1C2B764E0;
      *(void *)(result + 32) = 0xD000000000000010;
      *(void *)(result + 40) = 0x80000001C2B7AF10;
      *(_OWORD *)(result + 48) = xmmword_1C2B76C10;
      *(void *)(result + 64) = 0xD000000000000010;
      *(void *)(result + 72) = 0x80000001C2B7AF30;
      long long v2 = xmmword_1C2B76DA0;
      goto LABEL_52;
    case 5:
      sub_1C2B05080(0, &qword_1EA32BC48, (uint64_t)&type metadata for MedicationVisualizationFragment, MEMORY[0x1E4FBBE00]);
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_1C2B764E0;
      *(void *)(result + 32) = 0x657361625F72616ALL;
      *(void *)(result + 40) = 0xE800000000000000;
      *(_OWORD *)(result + 48) = xmmword_1C2B76C10;
      *(void *)(result + 64) = 0x6B73616D5F72616ALL;
      *(void *)(result + 72) = 0xE800000000000000;
      long long v2 = xmmword_1C2B76C90;
      goto LABEL_52;
    case 6:
      sub_1C2B05080(0, &qword_1EA32BC48, (uint64_t)&type metadata for MedicationVisualizationFragment, MEMORY[0x1E4FBBE00]);
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_1C2B764E0;
      strcpy((char *)(result + 32), "liquidCup_base");
      *(unsigned char *)(result + 47) = -18;
      *(_OWORD *)(result + 48) = xmmword_1C2B76C10;
      strcpy((char *)(result + 64), "liquidCup_mask");
      *(unsigned char *)(result + 79) = -18;
      long long v2 = xmmword_1C2B76C80;
      goto LABEL_52;
    case 7:
      sub_1C2B05080(0, &qword_1EA32BC48, (uint64_t)&type metadata for MedicationVisualizationFragment, MEMORY[0x1E4FBBE00]);
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_1C2B764E0;
      *(void *)(result + 32) = 0x7361625F65627574;
      *(void *)(result + 40) = 0xE900000000000065;
      *(_OWORD *)(result + 48) = xmmword_1C2B76C10;
      *(void *)(result + 64) = 0x73616D5F65627574;
      *(void *)(result + 72) = 0xE90000000000006BLL;
      long long v2 = xmmword_1C2B76C20;
      goto LABEL_52;
    case 8:
      sub_1C2B05080(0, &qword_1EA32BC48, (uint64_t)&type metadata for MedicationVisualizationFragment, MEMORY[0x1E4FBBE00]);
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_1C2B76500;
      strcpy((char *)(result + 32), "diamond_soft");
      *(unsigned char *)(result + 45) = 0;
      *(_WORD *)(result + 46) = -5120;
      long long v3 = xmmword_1C2B76BD0;
      goto LABEL_49;
    case 9:
      sub_1C2B05080(0, &qword_1EA32BC48, (uint64_t)&type metadata for MedicationVisualizationFragment, MEMORY[0x1E4FBBE00]);
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_1C2B76500;
      strcpy((char *)(result + 32), "diamond_pill");
      *(unsigned char *)(result + 45) = 0;
      *(_WORD *)(result + 46) = -5120;
      long long v3 = xmmword_1C2B76C40;
      goto LABEL_49;
    case 0xA:
      sub_1C2B05080(0, &qword_1EA32BC48, (uint64_t)&type metadata for MedicationVisualizationFragment, MEMORY[0x1E4FBBE00]);
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_1C2B76500;
      strcpy((char *)(result + 32), "triangle_pill");
      *(_WORD *)(result + 46) = -4864;
      long long v3 = xmmword_1C2B76B10;
      goto LABEL_49;
    case 0xB:
      sub_1C2B05080(0, &qword_1EA32BC48, (uint64_t)&type metadata for MedicationVisualizationFragment, MEMORY[0x1E4FBBE00]);
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_1C2B76500;
      *(void *)(result + 32) = 0x6165745F6C6C6970;
      *(void *)(result + 40) = 0xE900000000000072;
      long long v3 = xmmword_1C2B76B50;
      goto LABEL_49;
    case 0xC:
      sub_1C2B05080(0, &qword_1EA32BC48, (uint64_t)&type metadata for MedicationVisualizationFragment, MEMORY[0x1E4FBBE00]);
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_1C2B76500;
      *(void *)(result + 32) = 0x705F657261757173;
      *(void *)(result + 40) = 0xEB000000006C6C69;
      long long v3 = xmmword_1C2B76B30;
      goto LABEL_49;
    case 0xD:
      sub_1C2B05080(0, &qword_1EA32BC48, (uint64_t)&type metadata for MedicationVisualizationFragment, MEMORY[0x1E4FBBE00]);
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_1C2B76500;
      unint64_t v4 = 0xD000000000000010;
      *(void *)(result + 32) = 0xD000000000000010;
      *(void *)(result + 40) = 0x80000001C2B7AE10;
      uint64_t v5 = "Square Long Pill";
      goto LABEL_22;
    case 0xE:
      sub_1C2B05080(0, &qword_1EA32BC48, (uint64_t)&type metadata for MedicationVisualizationFragment, MEMORY[0x1E4FBBE00]);
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_1C2B76500;
      strcpy((char *)(result + 32), "trapezoid_pill");
      *(unsigned char *)(result + 47) = -18;
      long long v3 = xmmword_1C2B76B20;
      goto LABEL_49;
    case 0xF:
      sub_1C2B05080(0, &qword_1EA32BC48, (uint64_t)&type metadata for MedicationVisualizationFragment, MEMORY[0x1E4FBBE00]);
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_1C2B76500;
      strcpy((char *)(result + 32), "pentagon_pill");
      *(_WORD *)(result + 46) = -4864;
      long long v3 = xmmword_1C2B76B60;
      goto LABEL_49;
    case 0x10:
      sub_1C2B05080(0, &qword_1EA32BC48, (uint64_t)&type metadata for MedicationVisualizationFragment, MEMORY[0x1E4FBBE00]);
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_1C2B76500;
      strcpy((char *)(result + 32), "hexagon_pill");
      *(unsigned char *)(result + 45) = 0;
      *(_WORD *)(result + 46) = -5120;
      long long v3 = xmmword_1C2B76BA0;
      goto LABEL_49;
    case 0x11:
      sub_1C2B05080(0, &qword_1EA32BC48, (uint64_t)&type metadata for MedicationVisualizationFragment, MEMORY[0x1E4FBBE00]);
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_1C2B76500;
      unint64_t v4 = 0xD000000000000011;
      *(void *)(result + 32) = 0xD000000000000011;
      *(void *)(result + 40) = 0x80000001C2B7AE90;
      uint64_t v5 = "Long Hexagon Pill";
      goto LABEL_22;
    case 0x12:
      sub_1C2B05080(0, &qword_1EA32BC48, (uint64_t)&type metadata for MedicationVisualizationFragment, MEMORY[0x1E4FBBE00]);
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_1C2B76500;
      strcpy((char *)(result + 32), "octagon_pill");
      *(unsigned char *)(result + 45) = 0;
      *(_WORD *)(result + 46) = -5120;
      long long v3 = xmmword_1C2B76B80;
      goto LABEL_49;
    case 0x13:
      sub_1C2B05080(0, &qword_1EA32BC48, (uint64_t)&type metadata for MedicationVisualizationFragment, MEMORY[0x1E4FBBE00]);
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_1C2B76500;
      unint64_t v4 = 0xD000000000000011;
      *(void *)(result + 32) = 0xD000000000000011;
      *(void *)(result + 40) = 0x80000001C2B7AE50;
      uint64_t v5 = "Long Octagon Pill";
LABEL_22:
      *(void *)(result + 48) = v4;
      *(void *)(result + 56) = (unint64_t)(v5 - 32) | 0x8000000000000000;
      return result;
    case 0x14:
      sub_1C2B05080(0, &qword_1EA32BC48, (uint64_t)&type metadata for MedicationVisualizationFragment, MEMORY[0x1E4FBBE00]);
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_1C2B76500;
      *(void *)(result + 32) = 0x705F646C65696873;
      *(void *)(result + 40) = 0xEB000000006C6C69;
      long long v3 = xmmword_1C2B76B40;
      goto LABEL_49;
    case 0x15:
      sub_1C2B05080(0, &qword_1EA32BC48, (uint64_t)&type metadata for MedicationVisualizationFragment, MEMORY[0x1E4FBBE00]);
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_1C2B76500;
      *(void *)(result + 32) = 0x6C6C69705F44;
      *(void *)(result + 40) = 0xE600000000000000;
      long long v3 = xmmword_1C2B76BF0;
      goto LABEL_49;
    case 0x16:
      sub_1C2B05080(0, &qword_1EA32BC48, (uint64_t)&type metadata for MedicationVisualizationFragment, MEMORY[0x1E4FBBE00]);
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_1C2B76500;
      *(void *)(result + 32) = 0x705F6E776F445F44;
      *(void *)(result + 40) = 0xEB000000006C6C69;
      long long v3 = xmmword_1C2B76BE0;
      goto LABEL_49;
    case 0x17:
      sub_1C2B05080(0, &qword_1EA32BC48, (uint64_t)&type metadata for MedicationVisualizationFragment, MEMORY[0x1E4FBBE00]);
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_1C2B764E0;
      strcpy((char *)(result + 32), "pillpack_base");
      *(_WORD *)(result + 46) = -4864;
      *(_OWORD *)(result + 48) = xmmword_1C2B76C10;
      strcpy((char *)(result + 64), "pillpack_mask");
      *(_WORD *)(result + 78) = -4864;
      long long v2 = xmmword_1C2B76D90;
      goto LABEL_52;
    case 0x18:
      sub_1C2B05080(0, &qword_1EA32BC48, (uint64_t)&type metadata for MedicationVisualizationFragment, MEMORY[0x1E4FBBE00]);
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_1C2B76500;
      *(void *)(result + 32) = 0x69705F7472616568;
      *(void *)(result + 40) = 0xEA00000000006C6CLL;
      long long v3 = xmmword_1C2B76BB0;
      goto LABEL_49;
    case 0x19:
      sub_1C2B05080(0, &qword_1EA32BC48, (uint64_t)&type metadata for MedicationVisualizationFragment, MEMORY[0x1E4FBBE00]);
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_1C2B76500;
      *(void *)(result + 32) = 0xD000000000000011;
      *(void *)(result + 40) = 0x80000001C2B7AED0;
      long long v3 = xmmword_1C2B76BC0;
      goto LABEL_49;
    case 0x1A:
      sub_1C2B05080(0, &qword_1EA32BC48, (uint64_t)&type metadata for MedicationVisualizationFragment, MEMORY[0x1E4FBBE00]);
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_1C2B76500;
      *(void *)(result + 32) = 0x65676E657A6F6CLL;
      *(void *)(result + 40) = 0xE700000000000000;
      long long v3 = xmmword_1C2B76D60;
      goto LABEL_49;
    case 0x1B:
      sub_1C2B05080(0, &qword_1EA32BC48, (uint64_t)&type metadata for MedicationVisualizationFragment, MEMORY[0x1E4FBBE00]);
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_1C2B76500;
      *(void *)(result + 32) = 7173479;
      *(void *)(result + 40) = 0xE300000000000000;
      long long v3 = xmmword_1C2B76DD0;
      goto LABEL_49;
    case 0x1C:
      sub_1C2B05080(0, &qword_1EA32BC48, (uint64_t)&type metadata for MedicationVisualizationFragment, MEMORY[0x1E4FBBE00]);
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_1C2B764E0;
      *(void *)(result + 32) = 0x625F656C74746F62;
      *(void *)(result + 40) = 0xEB00000000657361;
      *(_OWORD *)(result + 48) = xmmword_1C2B76C10;
      *(void *)(result + 64) = 0x6D5F656C74746F62;
      *(void *)(result + 72) = 0xEB000000006B7361;
      long long v2 = xmmword_1C2B76D10;
      goto LABEL_52;
    case 0x1D:
      sub_1C2B05080(0, &qword_1EA32BC48, (uint64_t)&type metadata for MedicationVisualizationFragment, MEMORY[0x1E4FBBE00]);
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_1C2B76500;
      strcpy((char *)(result + 32), "nostril_spray");
      *(_WORD *)(result + 46) = -4864;
      long long v3 = xmmword_1C2B76D80;
      goto LABEL_49;
    case 0x1E:
      sub_1C2B05080(0, &qword_1EA32BC48, (uint64_t)&type metadata for MedicationVisualizationFragment, MEMORY[0x1E4FBBE00]);
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_1C2B76500;
      *(void *)(result + 32) = 1818323318;
      *(void *)(result + 40) = 0xE400000000000000;
      long long v3 = xmmword_1C2B76CE0;
      goto LABEL_49;
    case 0x1F:
      sub_1C2B05080(0, &qword_1EA32BC48, (uint64_t)&type metadata for MedicationVisualizationFragment, MEMORY[0x1E4FBBE00]);
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_1C2B764E0;
      strcpy((char *)(result + 32), "syringe_base");
      *(unsigned char *)(result + 45) = 0;
      *(_WORD *)(result + 46) = -5120;
      *(_OWORD *)(result + 48) = xmmword_1C2B76C10;
      strcpy((char *)(result + 64), "syringe_mask");
      *(unsigned char *)(result + 77) = 0;
      *(_WORD *)(result + 78) = -5120;
      long long v2 = xmmword_1C2B76D00;
      goto LABEL_52;
    case 0x20:
      sub_1C2B05080(0, &qword_1EA32BC48, (uint64_t)&type metadata for MedicationVisualizationFragment, MEMORY[0x1E4FBBE00]);
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_1C2B76500;
      strcpy((char *)(result + 32), "injectable_pen");
      *(unsigned char *)(result + 47) = -18;
      long long v3 = xmmword_1C2B76DC0;
      goto LABEL_49;
    case 0x21:
      sub_1C2B05080(0, &qword_1EA32BC48, (uint64_t)&type metadata for MedicationVisualizationFragment, MEMORY[0x1E4FBBE00]);
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_1C2B764E0;
      *(void *)(result + 32) = 0x70706F7244657965;
      *(void *)(result + 40) = 0xEF657361625F7265;
      *(_OWORD *)(result + 48) = xmmword_1C2B76C10;
      *(void *)(result + 64) = 0x70706F7244657965;
      *(void *)(result + 72) = 0xEF6B73616D5F7265;
      long long v2 = xmmword_1C2B76CD0;
      goto LABEL_52;
    case 0x22:
      sub_1C2B05080(0, &qword_1EA32BC48, (uint64_t)&type metadata for MedicationVisualizationFragment, MEMORY[0x1E4FBBE00]);
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_1C2B76500;
      *(void *)(result + 32) = 0x74656B636170;
      *(void *)(result + 40) = 0xE600000000000000;
      long long v3 = xmmword_1C2B76C50;
      goto LABEL_49;
    case 0x23:
      sub_1C2B05080(0, &qword_1EA32BC48, (uint64_t)&type metadata for MedicationVisualizationFragment, MEMORY[0x1E4FBBE00]);
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_1C2B764E0;
      strcpy((char *)(result + 32), "inhaler_base");
      *(unsigned char *)(result + 45) = 0;
      *(_WORD *)(result + 46) = -5120;
      *(_OWORD *)(result + 48) = xmmword_1C2B76C10;
      strcpy((char *)(result + 64), "inhaler_mask");
      *(unsigned char *)(result + 77) = 0;
      *(_WORD *)(result + 78) = -5120;
      long long v2 = xmmword_1C2B76CB0;
      goto LABEL_52;
    case 0x24:
      sub_1C2B05080(0, &qword_1EA32BC48, (uint64_t)&type metadata for MedicationVisualizationFragment, MEMORY[0x1E4FBBE00]);
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_1C2B76500;
      *(void *)(result + 32) = 4478281;
      *(void *)(result + 40) = 0xE300000000000000;
      long long v3 = xmmword_1C2B76CA0;
      goto LABEL_49;
    case 0x25:
      sub_1C2B05080(0, &qword_1EA32BC48, (uint64_t)&type metadata for MedicationVisualizationFragment, MEMORY[0x1E4FBBE00]);
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_1C2B76500;
      *(void *)(result + 32) = 0x726C616E69676176;
      *(void *)(result + 40) = 0xEB00000000676E69;
      long long v3 = xmmword_1C2B76CF0;
      goto LABEL_49;
    case 0x26:
      sub_1C2B05080(0, &qword_1EA32BC48, (uint64_t)&type metadata for MedicationVisualizationFragment, MEMORY[0x1E4FBBE00]);
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_1C2B764E0;
      *(void *)(result + 32) = 0x61625F6863746170;
      *(void *)(result + 40) = 0xEA00000000006573;
      *(_OWORD *)(result + 48) = xmmword_1C2B76C10;
      *(void *)(result + 64) = 0x616D5F6863746170;
      *(void *)(result + 72) = 0xEA00000000006B73;
      long long v2 = xmmword_1C2B76C60;
      goto LABEL_52;
    case 0x27:
      sub_1C2B05080(0, &qword_1EA32BC48, (uint64_t)&type metadata for MedicationVisualizationFragment, MEMORY[0x1E4FBBE00]);
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_1C2B76500;
      *(void *)(result + 32) = 0x74656C6C7562;
      *(void *)(result + 40) = 0xE600000000000000;
      long long v3 = xmmword_1C2B76DE0;
      goto LABEL_49;
    case 0x28:
      sub_1C2B05080(0, &qword_1EA32BC48, (uint64_t)&type metadata for MedicationVisualizationFragment, MEMORY[0x1E4FBBE00]);
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_1C2B76500;
      *(void *)(result + 32) = 1886351972;
      *(void *)(result + 40) = 0xE400000000000000;
      long long v3 = xmmword_1C2B76D40;
      goto LABEL_49;
    case 0x29:
      sub_1C2B05080(0, &qword_1EA32BC48, (uint64_t)&type metadata for MedicationVisualizationFragment, MEMORY[0x1E4FBBE00]);
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_1C2B76500;
      *(void *)(result + 32) = 1835102054;
      *(void *)(result + 40) = 0xE400000000000000;
      long long v3 = xmmword_1C2B76CC0;
      goto LABEL_49;
    case 0x2A:
      sub_1C2B05080(0, &qword_1EA32BC48, (uint64_t)&type metadata for MedicationVisualizationFragment, MEMORY[0x1E4FBBE00]);
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_1C2B764E0;
      *(void *)(result + 32) = 0x61625F6E6F6F7073;
      *(void *)(result + 40) = 0xEA00000000006573;
      *(_OWORD *)(result + 48) = xmmword_1C2B76C10;
      *(void *)(result + 64) = 0x616D5F6E6F6F7073;
      *(void *)(result + 72) = 0xEA00000000006B73;
      long long v2 = xmmword_1C2B76C30;
      goto LABEL_52;
    case 0x2B:
      sub_1C2B05080(0, &qword_1EA32BC48, (uint64_t)&type metadata for MedicationVisualizationFragment, MEMORY[0x1E4FBBE00]);
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_1C2B76500;
      *(void *)(result + 32) = 0xD000000000000010;
      *(void *)(result + 40) = 0x80000001C2B7AEF0;
      long long v3 = xmmword_1C2B76D50;
      goto LABEL_49;
    case 0x2C:
      sub_1C2B05080(0, &qword_1EA32BC48, (uint64_t)&type metadata for MedicationVisualizationFragment, MEMORY[0x1E4FBBE00]);
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_1C2B76500;
      *(void *)(result + 32) = 0x657A696C7562656ELL;
      *(void *)(result + 40) = 0xEF656B6F6D735F72;
      long long v3 = xmmword_1C2B76C70;
      goto LABEL_49;
    case 0x2D:
      sub_1C2B05080(0, &qword_1EA32BC48, (uint64_t)&type metadata for MedicationVisualizationFragment, MEMORY[0x1E4FBBE00]);
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_1C2B76500;
      *(void *)(result + 32) = 0x73656C62627562;
      *(void *)(result + 40) = 0xE700000000000000;
      long long v3 = xmmword_1C2B76DF0;
LABEL_49:
      *(_OWORD *)(result + 48) = v3;
      return result;
    case 0x2E:
      sub_1C2B05080(0, &qword_1EA32BC48, (uint64_t)&type metadata for MedicationVisualizationFragment, MEMORY[0x1E4FBBE00]);
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_1C2B764E0;
      *(void *)(result + 32) = 0x657361625F64696CLL;
      *(void *)(result + 40) = 0xE800000000000000;
      *(_OWORD *)(result + 48) = xmmword_1C2B76C10;
      *(void *)(result + 64) = 0x6B73616D5F64696CLL;
      *(void *)(result + 72) = 0xE800000000000000;
      long long v2 = xmmword_1C2B76DB0;
      goto LABEL_52;
    case 0x2F:
      sub_1C2B05080(0, &qword_1EA32BC48, (uint64_t)&type metadata for MedicationVisualizationFragment, MEMORY[0x1E4FBBE00]);
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_1C2B764E0;
      *(void *)(result + 32) = 0x657361625F616574;
      *(void *)(result + 40) = 0xE800000000000000;
      *(_OWORD *)(result + 48) = xmmword_1C2B76C10;
      *(void *)(result + 64) = 0x6B73616D5F616574;
      *(void *)(result + 72) = 0xE800000000000000;
      long long v2 = xmmword_1C2B76D70;
      goto LABEL_52;
    default:
      sub_1C2B05080(0, &qword_1EA32BC48, (uint64_t)&type metadata for MedicationVisualizationFragment, MEMORY[0x1E4FBBE00]);
      uint64_t result = swift_allocObject();
      *(_OWORD *)(result + 16) = xmmword_1C2B764E0;
      strcpy((char *)(result + 32), "capsule_left");
      *(unsigned char *)(result + 45) = 0;
      *(_WORD *)(result + 46) = -5120;
      *(_OWORD *)(result + 48) = xmmword_1C2B76D20;
      strcpy((char *)(result + 64), "capsule_right");
      *(_WORD *)(result + 78) = -4864;
      long long v2 = xmmword_1C2B76D30;
LABEL_52:
      *(_OWORD *)(result + 80) = v2;
      return result;
  }
}

HealthMedicationsExperience::MedicationShape_optional __swiftcall MedicationShape.init(rawValue:)(Swift::String rawValue)
{
  long long v2 = v1;
  uint64_t v3 = sub_1C2B74B70();
  result.value = swift_bridgeObjectRelease();
  char v5 = 0;
  char v6 = 30;
  switch(v3)
  {
    case 0:
      goto LABEL_32;
    case 1:
      char v5 = 1;
      goto LABEL_32;
    case 2:
      char v5 = 2;
      goto LABEL_32;
    case 3:
      char v5 = 3;
      goto LABEL_32;
    case 4:
      char v5 = 4;
      goto LABEL_32;
    case 5:
      char v5 = 5;
      goto LABEL_32;
    case 6:
      char v5 = 6;
      goto LABEL_32;
    case 7:
      char v5 = 7;
      goto LABEL_32;
    case 8:
      char v5 = 8;
      goto LABEL_32;
    case 9:
      char v5 = 9;
      goto LABEL_32;
    case 10:
      char v5 = 10;
      goto LABEL_32;
    case 11:
      char v5 = 11;
      goto LABEL_32;
    case 12:
      char v5 = 12;
      goto LABEL_32;
    case 13:
      char v5 = 13;
      goto LABEL_32;
    case 14:
      char v5 = 14;
      goto LABEL_32;
    case 15:
      char v5 = 15;
      goto LABEL_32;
    case 16:
      char v5 = 16;
      goto LABEL_32;
    case 17:
      char v5 = 17;
      goto LABEL_32;
    case 18:
      char v5 = 18;
      goto LABEL_32;
    case 19:
      char v5 = 19;
      goto LABEL_32;
    case 20:
      char v5 = 20;
      goto LABEL_32;
    case 21:
      char v5 = 21;
      goto LABEL_32;
    case 22:
      char v5 = 22;
      goto LABEL_32;
    case 23:
      char v5 = 23;
      goto LABEL_32;
    case 24:
      char v5 = 24;
      goto LABEL_32;
    case 25:
      char v5 = 25;
      goto LABEL_32;
    case 26:
      char v5 = 26;
      goto LABEL_32;
    case 27:
      char v5 = 27;
      goto LABEL_32;
    case 28:
      char v5 = 28;
      goto LABEL_32;
    case 29:
      char v5 = 29;
LABEL_32:
      char v6 = v5;
      break;
    case 30:
      break;
    case 31:
      char v6 = 31;
      break;
    case 32:
      char v6 = 32;
      break;
    case 33:
      char v6 = 33;
      break;
    case 34:
      char v6 = 34;
      break;
    case 35:
      char v6 = 35;
      break;
    case 36:
      char v6 = 36;
      break;
    case 37:
      char v6 = 37;
      break;
    case 38:
      char v6 = 38;
      break;
    case 39:
      char v6 = 39;
      break;
    case 40:
      char v6 = 40;
      break;
    case 41:
      char v6 = 41;
      break;
    case 42:
      char v6 = 42;
      break;
    case 43:
      char v6 = 43;
      break;
    case 44:
      char v6 = 44;
      break;
    case 45:
      char v6 = 45;
      break;
    case 46:
      char v6 = 46;
      break;
    case 47:
      char v6 = 47;
      break;
    default:
      char v6 = 48;
      break;
  }
  *long long v2 = v6;
  return result;
}

void *static MedicationShape.allCases.getter()
{
  return &unk_1F1DF99F8;
}

uint64_t MedicationShape.rawValue.getter()
{
  uint64_t result = 0x656C7573706163;
  switch(*v0)
  {
    case 1:
      uint64_t v2 = 0x656C63726963;
      return v2 & 0xFFFFFFFFFFFFLL | 0x6950000000000000;
    case 2:
      return 0x6C6C69506C61766FLL;
    case 3:
      uint64_t v2 = 0x676E6F6C626FLL;
      return v2 & 0xFFFFFFFFFFFFLL | 0x6950000000000000;
    case 4:
      return 0x74746F426C6C6970;
    case 5:
      return 7496042;
    case 6:
      return 0x754364697571696CLL;
    case 7:
      return 1700951412;
    case 8:
      return 0x53646E6F6D616964;
    case 9:
      return 0xD000000000000015;
    case 0xA:
      return 0x656C676E61697274;
    case 0xB:
      return 0x726165546C6C6970;
    case 0xC:
      uint64_t v2 = 0x657261757173;
      return v2 & 0xFFFFFFFFFFFFLL | 0x6950000000000000;
    case 0xD:
      return 0x6F4C657261757173;
    case 0xE:
      return 0x696F7A6570617274;
    case 0xF:
      return 0x6E6F6761746E6570;
    case 0x10:
      unsigned int v3 = 1635280232;
      return v3 | 0x506E6F6700000000;
    case 0x11:
      return 0x61786548676E6F6CLL;
    case 0x12:
      unsigned int v3 = 1635017583;
      return v3 | 0x506E6F6700000000;
    case 0x13:
      return 0x6174634F676E6F6CLL;
    case 0x14:
      uint64_t v2 = 0x646C65696873;
      return v2 & 0xFFFFFFFFFFFFLL | 0x6950000000000000;
    case 0x15:
      return 0x6C6C695064;
    case 0x16:
      uint64_t v4 = 0x506E776F4464;
      return v4 & 0xFFFFFFFFFFFFLL | 0x6C69000000000000;
    case 0x17:
      return 0x6B6361506C6C6970;
    case 0x18:
      uint64_t v4 = 0x507472616568;
      return v4 & 0xFFFFFFFFFFFFLL | 0x6C69000000000000;
    case 0x19:
      return 0xD000000000000010;
    case 0x1A:
      unsigned int v5 = 1702522732;
      goto LABEL_38;
    case 0x1B:
      return 7173479;
    case 0x1C:
      return 0x656C74746F62;
    case 0x1D:
      return 0x7961727073;
    case 0x1E:
      return 1818323318;
    case 0x1F:
      unsigned int v5 = 1769109875;
LABEL_38:
      uint64_t result = v5 | 0x65676E00000000;
      break;
    case 0x20:
      uint64_t result = 0x62617463656A6E69;
      break;
    case 0x21:
      uint64_t result = 0x70706F7244657965;
      break;
    case 0x22:
      uint64_t result = 0x74656B636170;
      break;
    case 0x23:
      uint64_t result = 0x72656C61686E69;
      break;
    case 0x24:
      uint64_t result = 6583657;
      break;
    case 0x25:
      uint64_t result = 0x526C616E69676176;
      break;
    case 0x26:
      uint64_t result = 0x6863746170;
      break;
    case 0x27:
      uint64_t result = 0x74656C6C7562;
      break;
    case 0x28:
      uint64_t result = 1886351972;
      break;
    case 0x29:
      uint64_t result = 1835102054;
      break;
    case 0x2A:
      uint64_t result = 0x6E6F6F7073;
      break;
    case 0x2B:
      uint64_t result = 0x656666456C61726FLL;
      break;
    case 0x2C:
      uint64_t result = 0x657A696C7562656ELL;
      break;
    case 0x2D:
      uint64_t result = 0x73656C62627562;
      break;
    case 0x2E:
      uint64_t result = 6580588;
      break;
    case 0x2F:
      uint64_t result = 6382964;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C2B04E38()
{
  return sub_1C2B2EBAC();
}

unint64_t sub_1C2B04E48()
{
  unint64_t result = qword_1EA32BC50;
  if (!qword_1EA32BC50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA32BC50);
  }
  return result;
}

uint64_t sub_1C2B04E9C()
{
  return sub_1C2B74C60();
}

uint64_t sub_1C2B04F04()
{
  MedicationShape.rawValue.getter();
  sub_1C2B74070();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2B04F68()
{
  return sub_1C2B74C60();
}

HealthMedicationsExperience::MedicationShape_optional sub_1C2B04FCC(Swift::String *a1)
{
  return MedicationShape.init(rawValue:)(*a1);
}

uint64_t sub_1C2B04FD8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = MedicationShape.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1C2B05004()
{
  unint64_t result = qword_1EA32BC58;
  if (!qword_1EA32BC58)
  {
    sub_1C2B05080(255, &qword_1EA32BC60, (uint64_t)&type metadata for MedicationShape, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA32BC58);
  }
  return result;
}

void sub_1C2B05080(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1C2B050CC(void *a1@<X8>)
{
  *a1 = &unk_1F1DF99F8;
}

uint64_t getEnumTagSinglePayload for MedicationShape(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xD1) {
    goto LABEL_17;
  }
  if (a2 + 47 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 47) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 47;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 47;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 47;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x30;
  int v8 = v6 - 48;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for MedicationShape(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 47 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 47) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xD1) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xD0)
  {
    unsigned int v6 = ((a2 - 209) >> 8) + 1;
    *unint64_t result = a2 + 47;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C2B05238);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 47;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicationShape()
{
  return &type metadata for MedicationShape;
}

unint64_t _s27HealthMedicationsExperience21SearchItemDisplayablePAAE21primaryTextAttributesSDySo21NSAttributedStringKeyaypGvg_0()
{
  sub_1C2B0550C();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C2B764E0;
  uint64_t v1 = (void *)*MEMORY[0x1E4FB06F8];
  *(void *)(inited + 32) = *MEMORY[0x1E4FB06F8];
  uint64_t v2 = sub_1C2AE3A18(0, &qword_1EBF107E8);
  id v3 = v1;
  *(void *)(inited + 40) = sub_1C2B745B0();
  unsigned int v4 = (void *)*MEMORY[0x1E4FB0700];
  *(void *)(inited + 64) = v2;
  *(void *)(inited + 72) = v4;
  uint64_t v5 = self;
  id v6 = v4;
  id v7 = objc_msgSend(v5, sel_labelColor);
  *(void *)(inited + 104) = sub_1C2AE3A18(0, &qword_1EBF10D30);
  *(void *)(inited + 80) = v7;
  return sub_1C2B25AA4(inited);
}

unint64_t _s27HealthMedicationsExperience21SearchItemDisplayablePAAE23secondaryTextAttributesSDySo21NSAttributedStringKeyaypGvg_0()
{
  sub_1C2B0550C();
  uint64_t inited = swift_initStackObject();
  uint64_t v1 = (void **)MEMORY[0x1E4FB06F8];
  *(_OWORD *)(inited + 16) = xmmword_1C2B764E0;
  uint64_t v2 = *v1;
  *(void *)(inited + 32) = *v1;
  id v3 = self;
  uint64_t v4 = *MEMORY[0x1E4FB2950];
  id v5 = v2;
  id v6 = objc_msgSend(v3, sel_preferredFontForTextStyle_, v4);
  uint64_t v7 = sub_1C2AE3A18(0, &qword_1EBF107E8);
  *(void *)(inited + 40) = v6;
  int v8 = (void *)*MEMORY[0x1E4FB0700];
  *(void *)(inited + 64) = v7;
  *(void *)(inited + 72) = v8;
  unint64_t v9 = self;
  id v10 = v8;
  id v11 = objc_msgSend(v9, sel_labelColor);
  *(void *)(inited + 104) = sub_1C2AE3A18(0, &qword_1EBF10D30);
  *(void *)(inited + 80) = v11;
  return sub_1C2B25AA4(inited);
}

uint64_t dispatch thunk of SearchItemDisplayable.searchItemDisplayString.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SearchItemDisplayable.primaryTextAttributes.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of SearchItemDisplayable.secondaryTextAttributes.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

void sub_1C2B0550C()
{
  if (!qword_1EBF10828)
  {
    sub_1C2B05564();
    unint64_t v0 = sub_1C2B74B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBF10828);
    }
  }
}

void sub_1C2B05564()
{
  if (!qword_1EBF107D8)
  {
    type metadata accessor for Key(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EBF107D8);
    }
  }
}

void *sub_1C2B055D0(unint64_t a1, uint64_t *a2)
{
  if (a1 >> 62) {
    goto LABEL_22;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; uint64_t v3 = sub_1C2B749C0())
  {
    unint64_t v23 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v4 = 4;
    uint64_t v21 = v3;
    while (1)
    {
      id v5 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C8766C90](v4 - 4, a1) : *(id *)(a1 + 8 * v4);
      id v6 = v5;
      uint64_t v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1)) {
        break;
      }
      if (objc_msgSend(v5, sel_isUnavailable)
        || (id v8 = objc_msgSend(v6, sel_medicationIdentifier)) == 0)
      {
      }
      else
      {
        unint64_t v9 = v8;
        uint64_t v10 = sub_1C2B73FA0();
        uint64_t v12 = v11;

        uint64_t v13 = *a2;
        if (*(void *)(*a2 + 16) && (unint64_t v14 = sub_1C2AE056C(v10, v12), (v15 & 1) != 0))
        {
          id v16 = *(id *)(*(void *)(v13 + 56) + 8 * v14);
          swift_bridgeObjectRelease();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v23 = sub_1C2AE1EE4(0, v23[2] + 1, 1, v23);
          }
          unint64_t v18 = v23[2];
          unint64_t v17 = v23[3];
          if (v18 >= v17 >> 1) {
            unint64_t v23 = sub_1C2AE1EE4((void *)(v17 > 1), v18 + 1, 1, v23);
          }
          v23[2] = v18 + 1;
          int64_t v19 = &v23[2 * v18];
          v19[4] = v16;
          v19[5] = v6;
        }
        else
        {

          swift_bridgeObjectRelease();
        }
        uint64_t v3 = v21;
      }
      ++v4;
      if (v7 == v3) {
        goto LABEL_24;
      }
    }
    __break(1u);
LABEL_22:
    swift_bridgeObjectRetain();
  }
  unint64_t v23 = (void *)MEMORY[0x1E4FBC860];
LABEL_24:
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t RemoteScheduleUnavailableAlertDeterminer.Status.unavailableScheduleRecords.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RemoteScheduleUnavailableAlertDeterminer.Status.newlyAvailableScheduleRecords.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t RemoteScheduleUnavailableAlertDeterminer.Status.allRecords.getter()
{
  uint64_t v3 = *v0;
  swift_bridgeObjectRetain();
  unint64_t v1 = swift_bridgeObjectRetain();
  sub_1C2AEE714(v1);
  return v3;
}

uint64_t RemoteScheduleUnavailableAlertDeterminer.status.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t RemoteScheduleUnavailableAlertDeterminer.init(medications:schedules:dismissedRecords:accountDevicesInfo:pairedDevice:interactionControl:)@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, void *a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  a7[2] = a1;
  a7[3] = a2;
  a7[4] = a3;
  a7[5] = (uint64_t)a4;
  a7[6] = (uint64_t)a5;
  sub_1C2B059E8(a6, (uint64_t)(a7 + 7));
  id v25 = a5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v14 = a4;
  uint64_t v15 = sub_1C2B086E0(a1, a2);
  id v16 = v14;
  sub_1C2B079E4(v15, v16);
  uint64_t v18 = v17;

  id v19 = v16;
  unint64_t v20 = sub_1C2B084F0(v18, v19);
  swift_bridgeObjectRelease();

  uint64_t v21 = objc_msgSend(v19, sel_localDeviceInfo);
  uint64_t v22 = sub_1C2B08998(v20, a3, v21, (uint64_t)a5);

  swift_bridgeObjectRelease();
  uint64_t v23 = sub_1C2B08C64(v15, a3, v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t result = __swift_destroy_boxed_opaque_existential_0(a6);
  *a7 = v22;
  a7[1] = v23;
  return result;
}

uint64_t sub_1C2B059E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t RemoteScheduleUnavailableAlertDeterminer.saveRecords(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2[10];
  uint64_t v6 = v2[11];
  __swift_project_boxed_opaque_existential_0(v2 + 7, v5);
  uint64_t v9 = *v2;
  swift_bridgeObjectRetain();
  unint64_t v7 = swift_bridgeObjectRetain();
  sub_1C2AEE714(v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 8))(v9, a1, a2, v5, v6);
  return swift_bridgeObjectRelease();
}

uint64_t RemoteScheduleUnavailableAlertDeterminer.saveRecords()()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x1F4188298](sub_1C2B05B24, 0, 0);
}

uint64_t sub_1C2B05B24()
{
  uint64_t v1 = (uint64_t *)v0[2];
  uint64_t v2 = v1[10];
  uint64_t v3 = v1[11];
  __swift_project_boxed_opaque_existential_0(v1 + 7, v2);
  uint64_t v8 = *v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = swift_bridgeObjectRetain();
  sub_1C2AEE714(v4);
  v0[3] = v8;
  unint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 16) + **(int **)(v3 + 16));
  uint64_t v5 = (void *)swift_task_alloc();
  v0[4] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1C2B05C5C;
  return v7(v8, v2, v3);
}

uint64_t sub_1C2B05C5C(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(v4 + 40) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return MEMORY[0x1F4188298](sub_1C2B05DAC, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = *(uint64_t (**)(void))(v4 + 8);
    return v5(a1 & 1);
  }
}

uint64_t sub_1C2B05DAC()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1(0);
}

uint64_t sub_1C2B05E14(id *a1, uint64_t *a2, void *a3, void *a4)
{
  id v67 = a3;
  sub_1C2B09CE8();
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v11 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v64 - v12;
  uint64_t v14 = sub_1C2B73740();
  uint64_t v71 = *(void *)(v14 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  unint64_t v76 = (char *)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  int64_t v70 = (char *)&v64 - v17;
  id v68 = *a1;
  id v18 = objc_msgSend(v68, sel_medication);
  id v19 = objc_msgSend(v18, sel_semanticIdentifier);

  id v20 = objc_msgSend(v19, sel_stringValue);
  uint64_t v21 = sub_1C2B73FA0();
  uint64_t v23 = v22;

  uint64_t v24 = *a2;
  if (!*(void *)(*a2 + 16) || (unint64_t v25 = sub_1C2AE056C(v21, v23), (v26 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  uint64_t v75 = v13;
  id v27 = *(id *)(*(void *)(v24 + 56) + 8 * v25);
  swift_bridgeObjectRelease();
  id v28 = v68;
  id v29 = objc_msgSend(v68, sel_schedule);
  id v30 = objc_msgSend(v29, sel_scheduleType);

  if (v30 != objc_msgSend(v27, sel_scheduleType))
  {

    return 1;
  }
  id v64 = v27;
  id v31 = objc_msgSend(v28, sel_devices);
  sub_1C2B09CA8();
  unint64_t v32 = sub_1C2B741D0();

  uint64_t v77 = v14;
  id v65 = a4;
  if (v32 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1C2B749C0();
    uint64_t v33 = result;
    uint64_t v66 = v4;
    if (result) {
      goto LABEL_6;
    }
LABEL_26:
    uint64_t v38 = MEMORY[0x1E4FBC860];
    goto LABEL_27;
  }
  uint64_t v33 = *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v66 = v4;
  if (!v33) {
    goto LABEL_26;
  }
LABEL_6:
  if (v33 < 1)
  {
    __break(1u);
    return result;
  }
  uint64_t v35 = 0;
  uint64_t v72 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v71 + 56);
  unint64_t v73 = v32 & 0xC000000000000001;
  uint64_t v36 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v71 + 48);
  uint64_t v37 = (void (**)(char *, uint64_t, uint64_t))(v71 + 32);
  uint64_t v38 = MEMORY[0x1E4FBC860];
  uint64_t v69 = v11;
  unint64_t v74 = v32;
  uint64_t v39 = v77;
  do
  {
    if (v73) {
      id v40 = (id)MEMORY[0x1C8766C90](v35, v32);
    }
    else {
      id v40 = *(id *)(v32 + 8 * v35 + 32);
    }
    char v41 = v40;
    id v42 = objc_msgSend(v40, sel_hardwareIdentifier);
    if (v42)
    {
      uint64_t v43 = v42;
      sub_1C2B73730();

      uint64_t v44 = 0;
    }
    else
    {
      uint64_t v44 = 1;
    }
    (*v72)(v11, v44, 1, v39);
    uint64_t v45 = (uint64_t)v75;
    sub_1C2B09D40((uint64_t)v11, (uint64_t)v75);

    if ((*v36)(v45, 1, v39) == 1)
    {
      sub_1C2B09EB8(v45, (uint64_t (*)(void))sub_1C2B09CE8);
    }
    else
    {
      uint64_t v46 = v45;
      unint64_t v47 = *v37;
      uint64_t v48 = v70;
      (*v37)(v70, v46, v39);
      v47(v76, (uint64_t)v48, v39);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v38 = sub_1C2AE200C(0, *(void *)(v38 + 16) + 1, 1, v38);
      }
      unint64_t v50 = *(void *)(v38 + 16);
      unint64_t v49 = *(void *)(v38 + 24);
      if (v50 >= v49 >> 1) {
        uint64_t v38 = sub_1C2AE200C(v49 > 1, v50 + 1, 1, v38);
      }
      *(void *)(v38 + 16) = v50 + 1;
      v47((char *)(v38+ ((*(unsigned __int8 *)(v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80))+ *(void *)(v71 + 72) * v50), (uint64_t)v76, v77);
      uint64_t v11 = v69;
    }
    ++v35;
    unint64_t v32 = v74;
  }
  while (v33 != v35);
LABEL_27:
  swift_bridgeObjectRelease_n();
  uint64_t v51 = sub_1C2B39958(v38);
  swift_bridgeObjectRelease();
  id v52 = v64;
  id v53 = objc_msgSend(v64, sel_deviceIdentifiers);
  uint64_t v54 = sub_1C2B741D0();

  uint64_t v55 = sub_1C2B39958(v54);
  swift_bridgeObjectRelease();
  if (*(void *)(v55 + 16) <= *(void *)(v51 + 16) >> 3)
  {
    uint64_t v78 = v51;
    sub_1C2B06A74(v55);
    swift_bridgeObjectRelease();
    uint64_t v56 = v78;
  }
  else
  {
    uint64_t v56 = sub_1C2B06E04(v55, v51);
    swift_bridgeObjectRelease();
  }
  id v57 = v65;
  id v58 = v68;
  id v59 = v65;
  id v60 = v58;
  id v61 = v67;
  uint64_t v62 = sub_1C2B07F18(v56, v60, v61, v57);

  uint64_t v63 = v62[2];
  swift_release();
  return v63 != 0;
}

uint64_t sub_1C2B06410(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v65 = a4;
  id v66 = a3;
  uint64_t v6 = sub_1C2B73740();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v60 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2B09DF0();
  uint64_t v10 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2B09CE8();
  uint64_t v14 = MEMORY[0x1F4188790](v13 - 8);
  uint64_t v64 = (uint64_t)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  id v18 = (char *)&v59 - v17;
  MEMORY[0x1F4188790](v16);
  id v20 = (char *)&v59 - v19;
  uint64_t v21 = (void *)sub_1C2B73720();
  id v63 = a2;
  id v22 = objc_msgSend(a2, sel_deviceForIdentifier_, v21);

  if (!v22) {
    return 0;
  }
  id v61 = v22;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v20, a1, v6);
  uint64_t v62 = v7;
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  uint64_t v24 = 1;
  v23(v20, 0, 1, v6);
  id v25 = objc_msgSend(v66, sel_hardwareIdentifier);
  if (v25)
  {
    char v26 = v25;
    sub_1C2B73730();

    uint64_t v24 = 0;
  }
  v23(v18, v24, 1, v6);
  uint64_t v27 = (uint64_t)&v12[*(int *)(v10 + 48)];
  sub_1C2B09E54((uint64_t)v20, (uint64_t)v12);
  sub_1C2B09E54((uint64_t)v18, v27);
  uint64_t v28 = v62;
  id v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v62 + 48);
  if (v29((uint64_t)v12, 1, v6) == 1)
  {
    sub_1C2B09EB8((uint64_t)v18, (uint64_t (*)(void))sub_1C2B09CE8);
    sub_1C2B09EB8((uint64_t)v20, (uint64_t (*)(void))sub_1C2B09CE8);
    int v30 = v29(v27, 1, v6);
    id v31 = v61;
    if (v30 == 1)
    {
      sub_1C2B09EB8((uint64_t)v12, (uint64_t (*)(void))sub_1C2B09CE8);
LABEL_23:

      return 0;
    }
    goto LABEL_10;
  }
  uint64_t v33 = v64;
  sub_1C2B09E54((uint64_t)v12, v64);
  if (v29(v27, 1, v6) == 1)
  {
    sub_1C2B09EB8((uint64_t)v18, (uint64_t (*)(void))sub_1C2B09CE8);
    sub_1C2B09EB8((uint64_t)v20, (uint64_t (*)(void))sub_1C2B09CE8);
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v33, v6);
    id v31 = v61;
LABEL_10:
    sub_1C2B09EB8((uint64_t)v12, (uint64_t (*)(void))sub_1C2B09DF0);
    goto LABEL_11;
  }
  uint64_t v43 = v33;
  uint64_t v44 = v60;
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 32))(v60, v27, v6);
  sub_1C2B09DAC(&qword_1EA32BBB8);
  char v45 = sub_1C2B73F50();
  uint64_t v46 = *(void (**)(char *, uint64_t))(v28 + 8);
  v46(v44, v6);
  sub_1C2B09EB8((uint64_t)v18, (uint64_t (*)(void))sub_1C2B09CE8);
  sub_1C2B09EB8((uint64_t)v20, (uint64_t (*)(void))sub_1C2B09CE8);
  v46((char *)v43, v6);
  sub_1C2B09EB8((uint64_t)v12, (uint64_t (*)(void))sub_1C2B09CE8);
  id v31 = v61;
  if (v45) {
    goto LABEL_23;
  }
LABEL_11:
  id v34 = objc_msgSend(v31, sel_name);
  uint64_t v35 = sub_1C2B73FA0();
  uint64_t v37 = v36;

  id v38 = v65;
  if (v65)
  {
    id v39 = objc_msgSend(v65, sel_name);
    uint64_t v40 = sub_1C2B73FA0();
    uint64_t v42 = v41;

    if (v35 == v40 && v37 == v42)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v47 = sub_1C2B74B50();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v47 & 1) == 0) {
        goto LABEL_24;
      }
    }
    id v48 = objc_msgSend(v31, sel_model);
    uint64_t v49 = sub_1C2B73FA0();
    uint64_t v51 = v50;

    id v52 = objc_msgSend(v38, sel_model);
    uint64_t v53 = sub_1C2B73FA0();
    uint64_t v55 = v54;

    if (v49 == v53 && v51 == v55)
    {

      swift_bridgeObjectRelease_n();
      return 0;
    }
    char v56 = sub_1C2B74B50();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v56) {
      goto LABEL_23;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
LABEL_24:
  id v57 = objc_msgSend(v63, sel_schedule);
  unsigned int v58 = objc_msgSend(v31, sel_isCompatibleWithSchedule_, v57);

  return v58 ^ 1;
}

uint64_t sub_1C2B06A74(uint64_t a1)
{
  uint64_t v3 = sub_1C2B73740();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2B09CE8();
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v8);
  uint64_t v13 = (char *)&v24 - v12;
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v14 = *(void *)(a1 + 56);
  uint64_t v24 = a1 + 56;
  uint64_t v15 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  uint64_t v27 = v4 + 16;
  uint64_t v28 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
  int64_t v25 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v26 = v4 + 48;
  uint64_t v29 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v18 = 0;
  if (!v17) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v19 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  for (unint64_t i = v19 | (v18 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v18 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v13, *(void *)(v29 + 48) + *(void *)(v4 + 72) * i, v3);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v13, 0, 1, v3);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v13, 1, v3) == 1) {
      return swift_release();
    }
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v13, v3);
    sub_1C2B48678((uint64_t)v6, (uint64_t)v10);
    sub_1C2B09EB8((uint64_t)v10, (uint64_t (*)(void))sub_1C2B09CE8);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    if (v17) {
      goto LABEL_5;
    }
LABEL_6:
    int64_t v21 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v21 >= v25) {
      goto LABEL_25;
    }
    unint64_t v22 = *(void *)(v24 + 8 * v21);
    ++v18;
    if (!v22)
    {
      int64_t v18 = v21 + 1;
      if (v21 + 1 >= v25) {
        goto LABEL_25;
      }
      unint64_t v22 = *(void *)(v24 + 8 * v18);
      if (!v22)
      {
        int64_t v18 = v21 + 2;
        if (v21 + 2 >= v25) {
          goto LABEL_25;
        }
        unint64_t v22 = *(void *)(v24 + 8 * v18);
        if (!v22)
        {
          int64_t v18 = v21 + 3;
          if (v21 + 3 >= v25) {
            goto LABEL_25;
          }
          unint64_t v22 = *(void *)(v24 + 8 * v18);
          if (!v22) {
            break;
          }
        }
      }
    }
LABEL_21:
    unint64_t v17 = (v22 - 1) & v22;
  }
  int64_t v23 = v21 + 4;
  if (v23 >= v25)
  {
LABEL_25:
    (*v28)(v13, 1, 1, v3);
    return swift_release();
  }
  unint64_t v22 = *(void *)(v24 + 8 * v23);
  if (v22)
  {
    int64_t v18 = v23;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v18 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v18 >= v25) {
      goto LABEL_25;
    }
    unint64_t v22 = *(void *)(v24 + 8 * v18);
    ++v23;
    if (v22) {
      goto LABEL_21;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1C2B06E04(uint64_t a1, uint64_t a2)
{
  uint64_t v65 = *MEMORY[0x1E4F143B8];
  sub_1C2B09CE8();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C2B73740();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v59 = (char *)&v49 - v12;
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x1E4FBC870];
  }
  uint64_t v13 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v14 = ~v13;
  uint64_t v15 = a1 + 56;
  uint64_t v16 = -v13;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & *(void *)(a1 + 56);
  uint64_t v60 = a1;
  uint64_t v61 = a1 + 56;
  uint64_t v54 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
  uint64_t v55 = v6;
  uint64_t v62 = v14;
  uint64_t v63 = 0;
  unint64_t v64 = v18;
  uint64_t v53 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  uint64_t v51 = (void (**)(char *, uint64_t, uint64_t))(v8 + 32);
  uint64_t v57 = v8 + 16;
  unsigned int v58 = (char *)(a2 + 56);
  unint64_t v19 = (void (**)(char *, uint64_t))(v8 + 8);
  swift_bridgeObjectRetain();
  int64_t v20 = 0;
  uint64_t v56 = v8;
  uint64_t v52 = a2;
  uint64_t v50 = 0;
  if (!v18) {
    goto LABEL_8;
  }
LABEL_6:
  uint64_t v21 = (v18 - 1) & v18;
  unint64_t v22 = __clz(__rbit64(v18)) | (v20 << 6);
  int64_t v23 = v20;
LABEL_7:
  unint64_t v24 = *(void *)(a1 + 48) + *(void *)(v8 + 72) * v22;
  int64_t v25 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  uint64_t v26 = (uint64_t)v55;
  v25(v55, v24, v7);
  uint64_t v27 = 0;
  while (1)
  {
    (*v54)(v26, v27, 1, v7);
    uint64_t v60 = a1;
    uint64_t v61 = v15;
    uint64_t v62 = v14;
    uint64_t v63 = v23;
    unint64_t v64 = v21;
    if ((*v53)(v26, 1, v7) == 1)
    {
      sub_1C2B09DA4();
      sub_1C2B09EB8(v26, (uint64_t (*)(void))sub_1C2B09CE8);
      return v52;
    }
    (*v51)(v59, v26, v7);
    uint64_t v31 = v52;
    sub_1C2B09DAC((unint64_t *)&qword_1EA32BC78);
    uint64_t v32 = sub_1C2B73F10();
    uint64_t v33 = -1 << *(unsigned char *)(v31 + 32);
    unint64_t v34 = v32 & ~v33;
    if ((*(void *)&v58[(v34 >> 3) & 0xFFFFFFFFFFFFFF8] >> v34)) {
      break;
    }
    uint64_t v40 = *v19;
    uint64_t v8 = v56;
LABEL_35:
    v40(v59, v7);
    int64_t v20 = v63;
    unint64_t v18 = v64;
    a1 = v60;
    uint64_t v15 = v61;
    uint64_t v14 = v62;
    uint64_t v50 = v63;
    if (v64) {
      goto LABEL_6;
    }
LABEL_8:
    int64_t v23 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      __break(1u);
    }
    int64_t v28 = (unint64_t)(v14 + 64) >> 6;
    if (v23 >= v28) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v15 + 8 * v23);
    if (v29) {
      goto LABEL_11;
    }
    v20 += 2;
    if (v23 + 1 >= v28) {
      goto LABEL_37;
    }
    unint64_t v29 = *(void *)(v15 + 8 * v20);
    if (v29) {
      goto LABEL_14;
    }
    if (v23 + 2 >= v28) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v15 + 8 * (v23 + 2));
    if (v29)
    {
      v23 += 2;
      goto LABEL_11;
    }
    int64_t v20 = v23 + 3;
    if (v23 + 3 < v28)
    {
      unint64_t v29 = *(void *)(v15 + 8 * v20);
      if (v29)
      {
LABEL_14:
        int64_t v23 = v20;
LABEL_11:
        uint64_t v21 = (v29 - 1) & v29;
        unint64_t v22 = __clz(__rbit64(v29)) + (v23 << 6);
        goto LABEL_7;
      }
      v23 += 4;
      if (v23 >= v28)
      {
LABEL_26:
        uint64_t v21 = 0;
        uint64_t v27 = 1;
        int64_t v23 = v20;
        goto LABEL_27;
      }
      unint64_t v29 = *(void *)(v15 + 8 * v23);
      if (v29) {
        goto LABEL_11;
      }
      int64_t v23 = v28 - 1;
      uint64_t v30 = v50 + 6;
      while (v28 != v30)
      {
        unint64_t v29 = *(void *)(v15 + 8 * v30++);
        if (v29)
        {
          int64_t v23 = v30 - 1;
          goto LABEL_11;
        }
      }
LABEL_37:
      uint64_t v21 = 0;
      uint64_t v27 = 1;
      goto LABEL_27;
    }
    uint64_t v21 = 0;
    uint64_t v27 = 1;
    v23 += 2;
LABEL_27:
    uint64_t v26 = (uint64_t)v55;
  }
  uint64_t v50 = (unint64_t)v19 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v35 = v31;
  uint64_t v36 = ~v33;
  uint64_t v37 = *(void *)(v56 + 72);
  id v38 = *(void (**)(char *, unint64_t, uint64_t))(v56 + 16);
  while (1)
  {
    v38(v11, *(void *)(v35 + 48) + v37 * v34, v7);
    sub_1C2B09DAC(&qword_1EA32BBB8);
    char v39 = sub_1C2B73F50();
    uint64_t v40 = *v19;
    (*v19)(v11, v7);
    if (v39) {
      break;
    }
    unint64_t v34 = (v34 + 1) & v36;
    if (((*(void *)&v58[(v34 >> 3) & 0xFFFFFFFFFFFFFF8] >> v34) & 1) == 0)
    {
      uint64_t v8 = v56;
      goto LABEL_35;
    }
  }
  uint64_t isStackAllocationSafe = ((uint64_t (*)(char *, uint64_t))v40)(v59, v7);
  char v42 = *(unsigned char *)(v35 + 32);
  unint64_t v43 = (unint64_t)((1 << v42) + 63) >> 6;
  size_t v44 = 8 * v43;
  if ((v42 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    memcpy((char *)&v49 - ((v44 + 15) & 0x3FFFFFFFFFFFFFF0), v58, v44);
    uint64_t v45 = sub_1C2B074A8((unint64_t *)((char *)&v49 - ((v44 + 15) & 0x3FFFFFFFFFFFFFF0)), v43, v35, v34, &v60);
    swift_release();
    sub_1C2B09DA4();
    return v45;
  }
  else
  {
    char v47 = (void *)swift_slowAlloc();
    memcpy(v47, v58, v44);
    uint64_t v48 = sub_1C2B074A8((unint64_t *)v47, v43, v35, v34, &v60);
    swift_release();
    sub_1C2B09DA4();
    MEMORY[0x1C8767A10](v47, -1, -1);
    return v48;
  }
}

uint64_t sub_1C2B074A8(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v49 = a2;
  sub_1C2B09CE8();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1C2B73740();
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v13);
  uint64_t v63 = (char *)&v48 - v17;
  uint64_t v18 = *(void *)(a3 + 16);
  uint64_t v19 = (a4 >> 3) & 0x1FFFFFFFFFFFFFF8;
  uint64_t v20 = *(unint64_t *)((char *)a1 + v19);
  uint64_t v51 = a1;
  uint64_t v52 = v21;
  *(unint64_t *)((char *)a1 + v19) = v20 & ((-1 << a4) - 1);
  uint64_t v22 = v21;
  uint64_t v23 = v18 - 1;
  uint64_t v61 = v21 + 16;
  uint64_t v62 = a3;
  uint64_t v56 = (unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  uint64_t v57 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
  uint64_t v54 = a5;
  uint64_t v55 = (void (**)(char *, char *, uint64_t))(v21 + 32);
  uint64_t v60 = a3 + 56;
  unint64_t v24 = (void (**)(char *, uint64_t))(v21 + 8);
  uint64_t v53 = v11;
  while (2)
  {
    uint64_t v50 = v23;
    do
    {
      while (1)
      {
        uint64_t v26 = *a5;
        uint64_t v27 = a5[1];
        uint64_t v28 = a5[2];
        int64_t v29 = a5[3];
        unint64_t v30 = a5[4];
        uint64_t v59 = v28;
        if (v30)
        {
          uint64_t v58 = (v30 - 1) & v30;
          unint64_t v31 = __clz(__rbit64(v30)) | (v29 << 6);
LABEL_7:
          (*(void (**)(char *, unint64_t, uint64_t))(v22 + 16))(v11, *(void *)(v26 + 48) + *(void *)(v22 + 72) * v31, v12);
          uint64_t v32 = 0;
          goto LABEL_8;
        }
        int64_t v41 = v29 + 1;
        if (__OFADD__(v29, 1))
        {
          __break(1u);
          goto LABEL_42;
        }
        int64_t v42 = (unint64_t)(v28 + 64) >> 6;
        if (v41 >= v42)
        {
          uint64_t v58 = 0;
          uint64_t v32 = 1;
          goto LABEL_8;
        }
        unint64_t v43 = *(void *)(v27 + 8 * v41);
        if (v43) {
          goto LABEL_17;
        }
        if (v29 + 2 >= v42) {
          goto LABEL_34;
        }
        unint64_t v43 = *(void *)(v27 + 8 * (v29 + 2));
        if (v43)
        {
          int64_t v41 = v29 + 2;
LABEL_17:
          uint64_t v58 = (v43 - 1) & v43;
          unint64_t v31 = __clz(__rbit64(v43)) + (v41 << 6);
          int64_t v29 = v41;
          goto LABEL_7;
        }
        if (v29 + 3 >= v42)
        {
          uint64_t v58 = 0;
          uint64_t v32 = 1;
          v29 += 2;
          goto LABEL_8;
        }
        unint64_t v43 = *(void *)(v27 + 8 * (v29 + 3));
        if (v43)
        {
          int64_t v41 = v29 + 3;
          goto LABEL_17;
        }
        int64_t v41 = v29 + 4;
        if (v29 + 4 < v42)
        {
          unint64_t v43 = *(void *)(v27 + 8 * v41);
          if (v43) {
            goto LABEL_17;
          }
          int64_t v41 = v42 - 1;
          int64_t v46 = v29 + 5;
          while (v42 != v46)
          {
            unint64_t v43 = *(void *)(v27 + 8 * v46++);
            if (v43)
            {
              int64_t v41 = v46 - 1;
              goto LABEL_17;
            }
          }
LABEL_34:
          uint64_t v58 = 0;
          uint64_t v32 = 1;
          int64_t v29 = v41;
          goto LABEL_8;
        }
        uint64_t v58 = 0;
        uint64_t v32 = 1;
        v29 += 3;
LABEL_8:
        (*v57)(v11, v32, 1, v12);
        *a5 = v26;
        a5[1] = v27;
        a5[2] = v59;
        a5[3] = v29;
        a5[4] = v58;
        if ((*v56)(v11, 1, v12) == 1)
        {
          sub_1C2B09EB8((uint64_t)v11, (uint64_t (*)(void))sub_1C2B09CE8);
          uint64_t v47 = v62;
          swift_retain();
          return sub_1C2B60134(v51, v49, v50, v47);
        }
        (*v55)(v63, v11, v12);
        uint64_t v33 = v62;
        sub_1C2B09DAC((unint64_t *)&qword_1EA32BC78);
        uint64_t v34 = sub_1C2B73F10();
        uint64_t v35 = -1 << *(unsigned char *)(v33 + 32);
        unint64_t v36 = v34 & ~v35;
        if ((*(void *)(v60 + ((v36 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v36)) {
          break;
        }
        int64_t v25 = *v24;
LABEL_4:
        uint64_t result = ((uint64_t (*)(char *, uint64_t))v25)(v63, v12);
      }
      uint64_t v59 = (unint64_t)v24 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      uint64_t v37 = ~v35;
      uint64_t v38 = *(void *)(v22 + 72);
      char v39 = *(void (**)(char *, unint64_t, uint64_t))(v22 + 16);
      while (1)
      {
        v39(v15, *(void *)(v62 + 48) + v38 * v36, v12);
        sub_1C2B09DAC(&qword_1EA32BBB8);
        char v40 = sub_1C2B73F50();
        int64_t v25 = *v24;
        (*v24)(v15, v12);
        if (v40) {
          break;
        }
        unint64_t v36 = (v36 + 1) & v37;
        if (((*(void *)(v60 + ((v36 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v36) & 1) == 0)
        {
          uint64_t v11 = v53;
          a5 = v54;
          uint64_t v22 = v52;
          goto LABEL_4;
        }
      }
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v25)(v63, v12);
      uint64_t v44 = (v36 >> 3) & 0x1FFFFFFFFFFFFFF8;
      uint64_t v22 = v52;
      uint64_t v45 = *(unint64_t *)((char *)v51 + v44);
      *(unint64_t *)((char *)v51 + v44) = v45 & ~(1 << v36);
      uint64_t v11 = v53;
      a5 = v54;
    }
    while ((v45 & (1 << v36)) == 0);
    uint64_t v23 = v50 - 1;
    if (__OFSUB__(v50, 1))
    {
LABEL_42:
      __break(1u);
      return result;
    }
    if (v50 != 1) {
      continue;
    }
    return MEMORY[0x1E4FBC870];
  }
}

void sub_1C2B079E4(uint64_t a1, void *a2)
{
  unint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return;
  }
  unint64_t v3 = 0;
  uint64_t v19 = a1 + 32;
  uint64_t v17 = MEMORY[0x1E4FBC860];
  unint64_t v18 = *(void *)(a1 + 16);
  do
  {
    if (v3 > v2) {
      unint64_t v2 = v3;
    }
    unint64_t v21 = v2;
    while (1)
    {
      if (v3 == v21)
      {
LABEL_28:
        __break(1u);
        return;
      }
      long long v23 = *(_OWORD *)(v19 + 16 * v3);
      id v4 = (id)v23;
      id v5 = *((id *)&v23 + 1);
      id v6 = objc_msgSend(a2, sel_medicationFeatureDevicesInfo);
      sub_1C2B09CA8();
      unint64_t v7 = sub_1C2B741D0();

      uint64_t v22 = v4;
      if (v7 >> 62) {
        break;
      }
      uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
      ++v3;
      if (v8) {
        goto LABEL_10;
      }
LABEL_6:

      swift_bridgeObjectRelease();
      if (v3 == v18) {
        return;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1C2B749C0();
    swift_bridgeObjectRelease();
    ++v3;
    if (!v8) {
      goto LABEL_6;
    }
LABEL_10:
    uint64_t v9 = 4;
    while (1)
    {
      if ((v7 & 0xC000000000000001) != 0) {
        id v10 = (id)MEMORY[0x1C8766C90](v9 - 4, v7);
      }
      else {
        id v10 = *(id *)(v7 + 8 * v9);
      }
      uint64_t v11 = v10;
      uint64_t v12 = v9 - 3;
      if (__OFADD__(v9 - 4, 1))
      {
        __break(1u);
        goto LABEL_28;
      }
      unsigned int v13 = objc_msgSend(v10, sel_isCompatibleWithSchedule_, v5);

      if (!v13) {
        break;
      }
      ++v9;
      if (v12 == v8) {
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v14 = v17;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1C2B1D9D8(0, *(void *)(v17 + 16) + 1, 1);
      uint64_t v14 = v17;
    }
    unint64_t v16 = *(void *)(v14 + 16);
    unint64_t v15 = *(void *)(v14 + 24);
    if (v16 >= v15 >> 1)
    {
      sub_1C2B1D9D8(v15 > 1, v16 + 1, 1);
      uint64_t v14 = v17;
    }
    *(void *)(v14 + 16) = v16 + 1;
    uint64_t v17 = v14;
    *(_OWORD *)(v14 + 16 * v16 + 32) = v23;
    unint64_t v2 = v18;
  }
  while (v3 != v18);
}

uint64_t sub_1C2B07C44(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, void *a6)
{
  uint64_t v37 = a5;
  uint64_t v38 = a6;
  unint64_t v36 = a4;
  uint64_t v30 = a2;
  unint64_t v31 = a1;
  uint64_t v8 = sub_1C2B73740();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t result = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v13 = 0;
  uint64_t v39 = a3;
  uint64_t v14 = *(void *)(a3 + 56);
  uint64_t v32 = 0;
  uint64_t v33 = a3 + 56;
  uint64_t v15 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  int64_t v34 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v35 = v9 + 16;
  unint64_t v18 = (uint64_t (**)(char *, uint64_t))(v9 + 8);
  while (v17)
  {
    unint64_t v19 = __clz(__rbit64(v17));
    v17 &= v17 - 1;
    unint64_t v20 = v19 | (v13 << 6);
LABEL_17:
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v12, *(void *)(v39 + 48) + *(void *)(v9 + 72) * v20, v8);
    char v24 = sub_1C2B06410((uint64_t)v12, v36, v37, v38);
    if (v6) {
      return (*v18)(v12, v8);
    }
    char v25 = v24;
    uint64_t result = (*v18)(v12, v8);
    if (v25)
    {
      *(unint64_t *)((char *)v31 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
      BOOL v21 = __OFADD__(v32++, 1);
      if (v21) {
        goto LABEL_30;
      }
    }
  }
  BOOL v21 = __OFADD__(v13++, 1);
  if (v21)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v13 >= v34) {
    goto LABEL_27;
  }
  unint64_t v22 = *(void *)(v33 + 8 * v13);
  if (v22)
  {
LABEL_16:
    unint64_t v17 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v13 << 6);
    goto LABEL_17;
  }
  int64_t v23 = v13 + 1;
  if (v13 + 1 >= v34) {
    goto LABEL_27;
  }
  unint64_t v22 = *(void *)(v33 + 8 * v23);
  if (v22) {
    goto LABEL_15;
  }
  int64_t v23 = v13 + 2;
  if (v13 + 2 >= v34) {
    goto LABEL_27;
  }
  unint64_t v22 = *(void *)(v33 + 8 * v23);
  if (v22) {
    goto LABEL_15;
  }
  int64_t v23 = v13 + 3;
  if (v13 + 3 >= v34)
  {
LABEL_27:
    uint64_t v26 = v30;
    uint64_t v27 = v32;
    uint64_t v28 = v39;
    swift_retain();
    return sub_1C2B60134(v31, v26, v27, v28);
  }
  unint64_t v22 = *(void *)(v33 + 8 * v23);
  if (v22)
  {
LABEL_15:
    int64_t v13 = v23;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v13 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v13 >= v34) {
      goto LABEL_27;
    }
    unint64_t v22 = *(void *)(v33 + 8 * v13);
    ++v23;
    if (v22) {
      goto LABEL_16;
    }
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C2B07F18(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v4 = a4;
  uint64_t v34 = *MEMORY[0x1E4F143B8];
  char v8 = *(unsigned char *)(a1 + 32);
  unsigned int v9 = v8 & 0x3F;
  unint64_t v10 = (unint64_t)((1 << v8) + 63) >> 6;
  id v11 = a4;
  id v12 = a2;
  id v13 = a3;
  id v14 = v11;
  id v33 = v12;
  uint64_t isStackAllocationSafe = (uint64_t)v13;
  uint64_t v16 = (void *)isStackAllocationSafe;
  id v32 = (id)isStackAllocationSafe;
  if (v9 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    unint64_t v17 = (char *)&v29 - ((8 * v10 + 15) & 0x3FFFFFFFFFFFFFF0);
    bzero(v17, 8 * v10);
    id v18 = v33;
    id v19 = v16;
    id v30 = v14;
    id v20 = v14;
    uint64_t v21 = v31;
    id v4 = (void *)sub_1C2B07C44((unint64_t *)v17, v10, a1, v18, v19, v4);
    swift_release();

    if (v21) {
      swift_willThrow();
    }

    id v14 = v30;
  }
  else
  {
    unint64_t v22 = v16;
    int64_t v23 = (void *)swift_slowAlloc();
    bzero(v23, 8 * v10);
    id v24 = v33;
    id v25 = v22;
    id v26 = v14;
    uint64_t v27 = sub_1C2B07C44((unint64_t *)v23, v10, a1, v24, v25, v4);
    if (!v31) {
      id v4 = (void *)v27;
    }
    swift_release();

    MEMORY[0x1C8767A10](v23, -1, -1);
  }

  return v4;
}

void *sub_1C2B081C0(unint64_t a1, uint64_t *a2, void *a3, void *a4)
{
  unint64_t v8 = a1;
  uint64_t v21 = (void *)MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9)
  {
    while (1)
    {
      unint64_t v10 = 0;
      uint64_t v18 = v8 & 0xFFFFFFFFFFFFFF8;
      unint64_t v19 = v8 & 0xC000000000000001;
      uint64_t v16 = a2;
      unint64_t v17 = v8;
      while (v19)
      {
        id v11 = (id)MEMORY[0x1C8766C90](v10, v8);
LABEL_9:
        id v12 = v11;
        unint64_t v13 = v10 + 1;
        if (__OFADD__(v10, 1)) {
          goto LABEL_17;
        }
        id v20 = v11;
        char v14 = sub_1C2B05E14(&v20, a2, a3, a4);
        if (v4)
        {
          swift_bridgeObjectRelease();

          swift_release();
          return a4;
        }
        if (v14)
        {
          sub_1C2B748D0();
          sub_1C2B74910();
          sub_1C2B74920();
          sub_1C2B748E0();
          a2 = v16;
          unint64_t v8 = v17;
        }
        else
        {
        }
        ++v10;
        if (v13 == v9)
        {
          a4 = v21;
          goto LABEL_20;
        }
      }
      if (v10 < *(void *)(v18 + 16)) {
        break;
      }
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      uint64_t v9 = sub_1C2B749C0();
      if (!v9) {
        goto LABEL_19;
      }
    }
    id v11 = *(id *)(v8 + 8 * v10 + 32);
    goto LABEL_9;
  }
LABEL_19:
  a4 = (void *)MEMORY[0x1E4FBC860];
LABEL_20:
  swift_bridgeObjectRelease();
  return a4;
}

uint64_t sub_1C2B08374(unint64_t a1, uint64_t a2)
{
  unint64_t v3 = a1;
  uint64_t v14 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_16;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      unint64_t v12 = v3;
      unint64_t v5 = 0;
      unint64_t v6 = v3 & 0xC000000000000001;
      uint64_t v7 = v3 & 0xFFFFFFFFFFFFFF8;
      uint64_t v13 = v4;
      while (v6)
      {
        id v8 = (id)MEMORY[0x1C8766C90](v5, v3);
LABEL_9:
        uint64_t v9 = v8;
        unint64_t v10 = v5 + 1;
        if (__OFADD__(v5, 1)) {
          goto LABEL_15;
        }
        if (objc_msgSend(v8, sel_isCompatibleWithSchedule_, a2))
        {
        }
        else
        {
          sub_1C2B748D0();
          sub_1C2B74910();
          sub_1C2B74920();
          sub_1C2B748E0();
          unint64_t v3 = v12;
          uint64_t v4 = v13;
        }
        ++v5;
        if (v10 == v4) {
          return v14;
        }
      }
      if (v5 < *(void *)(v7 + 16)) {
        break;
      }
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      uint64_t v4 = sub_1C2B749C0();
      if (!v4) {
        return MEMORY[0x1E4FBC860];
      }
    }
    id v8 = *(id *)(v3 + 8 * v5 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1C2B084F0(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v3)
  {
    uint64_t v18 = MEMORY[0x1E4FBC860];
    sub_1C2B74900();
    unint64_t v5 = (void **)(a1 + 40);
    do
    {
      unint64_t v6 = *v5;
      id v7 = *(v5 - 1);
      id v8 = v6;
      id v9 = objc_msgSend(a2, sel_remoteDevices);
      sub_1C2B09CA8();
      sub_1C2B741D0();

      id v10 = v8;
      unint64_t v11 = swift_bridgeObjectRetain();
      unint64_t v12 = sub_1C2B08374(v11, (uint64_t)v10);
      swift_bridgeObjectRelease();

      if (v12 >> 62)
      {
        sub_1C2B749A0();
      }
      else
      {
        swift_bridgeObjectRetain();
        sub_1C2B74B60();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v13 = objc_allocWithZone(MEMORY[0x1E4F66BB8]);
      id v14 = v7;
      id v15 = v10;
      uint64_t v16 = (void *)sub_1C2B741C0();
      swift_bridgeObjectRelease();
      objc_msgSend(v13, sel_initWithMedication_schedule_devices_, v14, v15, v16);

      sub_1C2B748D0();
      sub_1C2B74910();
      sub_1C2B74920();
      sub_1C2B748E0();
      v5 += 2;
      --v3;
    }
    while (v3);
    return v18;
  }
  return result;
}

uint64_t sub_1C2B086E0(unint64_t a1, unint64_t a2)
{
  uint64_t v3 = a1;
  unint64_t v36 = (void *)MEMORY[0x1E4FBC868];
  if (a1 >> 62)
  {
LABEL_26:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1C2B749C0();
    if (v4) {
      goto LABEL_3;
    }
LABEL_22:
    swift_bridgeObjectRelease();
    uint64_t v31 = sub_1C2B055D0(a2, (uint64_t *)&v36);
    swift_bridgeObjectRelease();
    return (uint64_t)v31;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v4) {
    goto LABEL_22;
  }
LABEL_3:
  unint64_t v33 = a2;
  unint64_t v35 = v3 & 0xC000000000000001;
  unint64_t v5 = (void *)MEMORY[0x1E4FBC868];
  a2 = 4;
  uint64_t v34 = v3;
  while (1)
  {
    if (v35) {
      id v9 = (id)MEMORY[0x1C8766C90](a2 - 4, v3);
    }
    else {
      id v9 = *(id *)(v3 + 8 * a2);
    }
    id v10 = v9;
    unint64_t v11 = a2 - 3;
    if (__OFADD__(a2 - 4, 1))
    {
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    uint64_t v3 = v4;
    id v12 = objc_msgSend(v9, sel_semanticIdentifier);
    id v13 = objc_msgSend(v12, sel_stringValue);

    uint64_t v14 = sub_1C2B73FA0();
    uint64_t v16 = v15;

    id v17 = v10;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v20 = sub_1C2AE056C(v14, v16);
    uint64_t v21 = v5[2];
    BOOL v22 = (v19 & 1) == 0;
    uint64_t v23 = v21 + v22;
    if (__OFADD__(v21, v22)) {
      goto LABEL_24;
    }
    char v24 = v19;
    if (v5[3] < v23) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      if (v19) {
        goto LABEL_4;
      }
    }
    else
    {
      sub_1C2B01AF8();
      if (v24)
      {
LABEL_4:
        uint64_t v6 = v5[7];
        uint64_t v7 = 8 * v20;

        *(void *)(v6 + v7) = v17;
        goto LABEL_5;
      }
    }
LABEL_17:
    v5[(v20 >> 6) + 8] |= 1 << v20;
    uint64_t v27 = (uint64_t *)(v5[6] + 16 * v20);
    *uint64_t v27 = v14;
    v27[1] = v16;
    *(void *)(v5[7] + 8 * v20) = v17;
    uint64_t v28 = v5[2];
    BOOL v29 = __OFADD__(v28, 1);
    uint64_t v30 = v28 + 1;
    if (v29) {
      goto LABEL_25;
    }
    v5[2] = v30;
    swift_bridgeObjectRetain();
LABEL_5:

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    ++a2;
    uint64_t v4 = v3;
    BOOL v8 = v11 == v3;
    uint64_t v3 = v34;
    if (v8)
    {
      unint64_t v36 = v5;
      a2 = v33;
      goto LABEL_22;
    }
  }
  sub_1C2B22694(v23, isUniquelyReferenced_nonNull_native);
  unint64_t v25 = sub_1C2AE056C(v14, v16);
  if ((v24 & 1) == (v26 & 1))
  {
    unint64_t v20 = v25;
    if (v24) {
      goto LABEL_4;
    }
    goto LABEL_17;
  }
  uint64_t result = sub_1C2B74BB0();
  __break(1u);
  return result;
}

uint64_t sub_1C2B08998(unint64_t a1, unint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v6 = a2;
  char v40 = (void *)MEMORY[0x1E4FBC868];
  if (a2 >> 62)
  {
LABEL_26:
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C2B749C0();
    if (v7) {
      goto LABEL_3;
    }
LABEL_22:
    swift_bridgeObjectRelease();
    id v31 = (id)a4;
    swift_bridgeObjectRetain();
    id v32 = a3;
    unint64_t v33 = sub_1C2B081C0(a1, (uint64_t *)&v40, v32, (void *)a4);

    swift_bridgeObjectRelease();
    return (uint64_t)v33;
  }
  uint64_t v7 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v7) {
    goto LABEL_22;
  }
LABEL_3:
  unint64_t v35 = a3;
  uint64_t v36 = a4;
  unint64_t v39 = v6 & 0xC000000000000001;
  a3 = (void *)MEMORY[0x1E4FBC868];
  a4 = 4;
  uint64_t v38 = v6;
  while (1)
  {
    if (v39) {
      id v10 = (id)MEMORY[0x1C8766C90](a4 - 4, v6);
    }
    else {
      id v10 = *(id *)(v6 + 8 * a4);
    }
    unint64_t v11 = v10;
    uint64_t v12 = a4 - 3;
    if (__OFADD__(a4 - 4, 1))
    {
      __break(1u);
LABEL_24:
      __break(1u);
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    uint64_t v6 = v7;
    id v13 = objc_msgSend(v10, sel_medicationIdentifier);
    uint64_t v14 = sub_1C2B73FA0();
    uint64_t v16 = v15;

    id v17 = v11;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v20 = sub_1C2AE056C(v14, v16);
    uint64_t v21 = a3[2];
    BOOL v22 = (v19 & 1) == 0;
    uint64_t v23 = v21 + v22;
    if (__OFADD__(v21, v22)) {
      goto LABEL_24;
    }
    char v24 = v19;
    if (a3[3] < v23) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      if (v19) {
        goto LABEL_4;
      }
    }
    else
    {
      sub_1C2B01B14();
      if (v24)
      {
LABEL_4:
        uint64_t v8 = a3[7];

        *(void *)(v8 + 8 * v20) = v17;
        goto LABEL_5;
      }
    }
LABEL_17:
    a3[(v20 >> 6) + 8] |= 1 << v20;
    uint64_t v27 = (uint64_t *)(a3[6] + 16 * v20);
    *uint64_t v27 = v14;
    v27[1] = v16;
    *(void *)(a3[7] + 8 * v20) = v17;
    uint64_t v28 = a3[2];
    BOOL v29 = __OFADD__(v28, 1);
    uint64_t v30 = v28 + 1;
    if (v29) {
      goto LABEL_25;
    }
    a3[2] = v30;
    swift_bridgeObjectRetain();
LABEL_5:

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    ++a4;
    uint64_t v7 = v6;
    BOOL v9 = v12 == v6;
    uint64_t v6 = v38;
    if (v9)
    {
      char v40 = a3;
      a3 = v35;
      a4 = v36;
      goto LABEL_22;
    }
  }
  sub_1C2B226B0(v23, isUniquelyReferenced_nonNull_native);
  unint64_t v25 = sub_1C2AE056C(v14, v16);
  if ((v24 & 1) == (v26 & 1))
  {
    unint64_t v20 = v25;
    if (v24) {
      goto LABEL_4;
    }
    goto LABEL_17;
  }
  uint64_t result = sub_1C2B74BB0();
  __break(1u);
  return result;
}

uint64_t sub_1C2B08C64(uint64_t a1, unint64_t a2, void *a3)
{
  id v84 = *(id *)(a1 + 16);
  if (v84)
  {
    uint64_t v4 = swift_bridgeObjectRetain();
    unint64_t v5 = 0;
    id v87 = (void *)MEMORY[0x1E4FBC868];
    while (1)
    {
      uint64_t v8 = v4;
      long long v85 = *(_OWORD *)(v4 + 16 * (void)v5 + 32);
      id v9 = (id)v85;
      id v10 = *((id *)&v85 + 1);
      id v11 = objc_msgSend(v9, sel_semanticIdentifier);
      id v12 = objc_msgSend(v11, sel_stringValue);

      uint64_t v13 = sub_1C2B73FA0();
      uint64_t v15 = v14;

      id v16 = v9;
      id v17 = v10;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v89 = (unint64_t)v87;
      unint64_t v20 = sub_1C2AE056C(v13, v15);
      uint64_t v21 = v87[2];
      BOOL v22 = (v19 & 1) == 0;
      uint64_t v23 = v21 + v22;
      if (__OFADD__(v21, v22)) {
        break;
      }
      unint64_t v3 = v19;
      if (v87[3] >= v23)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_1C2B01B30();
        }
      }
      else
      {
        sub_1C2B226CC(v23, isUniquelyReferenced_nonNull_native);
        unint64_t v24 = sub_1C2AE056C(v13, v15);
        if ((v3 & 1) != (v25 & 1))
        {
          uint64_t result = sub_1C2B74BB0();
          __break(1u);
          return result;
        }
        unint64_t v20 = v24;
      }
      if (v3)
      {
        uint64_t v6 = v87[7] + 16 * v20;
        uint64_t v7 = *(void **)v6;

        *(_OWORD *)uint64_t v6 = v85;
      }
      else
      {
        v87[(v20 >> 6) + 8] |= 1 << v20;
        char v26 = (uint64_t *)(v87[6] + 16 * v20);
        *char v26 = v13;
        v26[1] = v15;
        *(_OWORD *)(v87[7] + 16 * v20) = v85;
        uint64_t v27 = v87[2];
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28) {
          goto LABEL_69;
        }
        v87[2] = v29;
        swift_bridgeObjectRetain();
      }
      unint64_t v5 = (char *)v5 + 1;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v4 = v8;
      if (v84 == v5)
      {
        swift_bridgeObjectRelease();
        unint64_t v3 = a2;
        goto LABEL_16;
      }
    }
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
  }
  else
  {
    unint64_t v3 = a2;
    id v87 = (void *)MEMORY[0x1E4FBC868];
LABEL_16:
    unint64_t v89 = MEMORY[0x1E4FBC860];
    if (!(v3 >> 62))
    {
      uint64_t v30 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v30) {
        goto LABEL_73;
      }
      goto LABEL_18;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v30 = sub_1C2B749C0();
  if (v30)
  {
LABEL_18:
    unint64_t v31 = 0;
    unint64_t v32 = v3 & 0xC000000000000001;
    unint64_t v80 = v3 + 32;
    uint64_t v81 = v3 & 0xFFFFFFFFFFFFFF8;
    unint64_t v33 = (SEL *)&block_descriptor_0;
    unint64_t v77 = v3 & 0xC000000000000001;
    uint64_t v78 = v30;
    while (1)
    {
      if (v32)
      {
        id v34 = (id)MEMORY[0x1C8766C90](v31, v3);
        BOOL v28 = __OFADD__(v31, 1);
        unint64_t v35 = v31 + 1;
        if (v28) {
          goto LABEL_68;
        }
      }
      else
      {
        if (v31 >= *(void *)(v81 + 16)) {
          goto LABEL_70;
        }
        id v34 = *(id *)(v80 + 8 * v31);
        BOOL v28 = __OFADD__(v31, 1);
        unint64_t v35 = v31 + 1;
        if (v28) {
          goto LABEL_68;
        }
      }
      unint64_t v86 = v35;
      uint64_t v36 = v34;
      id v37 = [v34 v33[205]];
      uint64_t v38 = sub_1C2B73FA0();
      uint64_t v40 = v39;

      if (v87[2])
      {
        unint64_t v41 = sub_1C2AE056C(v38, v40);
        if (v42) {
          break;
        }
      }

      swift_bridgeObjectRelease();
LABEL_20:
      unint64_t v31 = v86;
      if (v86 == v30)
      {
        swift_bridgeObjectRelease();
        unint64_t v74 = v89;
        goto LABEL_74;
      }
    }
    uint64_t v43 = v87[7] + 16 * v41;
    uint64_t v44 = *(void **)(v43 + 8);
    id v45 = *(id *)v43;
    id v46 = v44;
    swift_bridgeObjectRelease();
    id v82 = v45;
    id v47 = v46;
    id v48 = objc_msgSend(a3, sel_remoteDevices);
    sub_1C2B09CA8();
    unint64_t v49 = sub_1C2B741D0();

    id v50 = objc_msgSend(v36, sel_scheduleCompatibilityVersion);
    unint64_t v88 = MEMORY[0x1E4FBC860];
    if (v49 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v51 = sub_1C2B749C0();
      if (v51) {
        goto LABEL_31;
      }
    }
    else
    {
      uint64_t v51 = *(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v51)
      {
LABEL_31:
        if (v51 < 1) {
          goto LABEL_71;
        }
        id v79 = v47;
        for (uint64_t i = 0; i != v51; ++i)
        {
          if ((v49 & 0xC000000000000001) != 0) {
            id v53 = (id)MEMORY[0x1C8766C90](i, v49);
          }
          else {
            id v53 = *(id *)(v49 + 8 * i + 32);
          }
          uint64_t v54 = v53;
          if (objc_msgSend(v53, sel_isCompatibleWithScheduleCompatibilityVersion_, v50))
          {
          }
          else
          {
            sub_1C2B748D0();
            sub_1C2B74910();
            sub_1C2B74920();
            sub_1C2B748E0();
          }
        }
        swift_bridgeObjectRelease();
        unint64_t v55 = v88;
        unint64_t v3 = a2;
        id v47 = v79;
LABEL_44:
        swift_bridgeObjectRetain();
        if ((v55 & 0x8000000000000000) != 0 || (v55 & 0x4000000000000000) != 0)
        {
          unint64_t v56 = sub_1C2B749A0();
          swift_bridgeObjectRelease();
          swift_release_n();
          if (!(v56 >> 62)) {
            goto LABEL_47;
          }
        }
        else
        {
          sub_1C2B74B60();
          swift_bridgeObjectRelease();
          swift_release();
          unint64_t v56 = v55;
          if (!(v55 >> 62))
          {
LABEL_47:
            uint64_t v57 = *(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_48:
            swift_bridgeObjectRelease();
            id v58 = objc_msgSend(a3, sel_remoteDevices);
            sub_1C2B741D0();

            id v59 = v47;
            unint64_t v60 = swift_bridgeObjectRetain();
            unint64_t v61 = sub_1C2B08374(v60, (uint64_t)v59);
            swift_bridgeObjectRelease();

            if (v61 >> 62)
            {
              uint64_t v62 = sub_1C2B749A0();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              unint64_t v61 = v62;
            }
            else
            {
              swift_bridgeObjectRetain();
              sub_1C2B74B60();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v62 = v61;
            }
            unint64_t v33 = (SEL *)&block_descriptor_0;
            if (v61 >> 62)
            {
              swift_bridgeObjectRetain();
              uint64_t v63 = sub_1C2B749C0();
              swift_bridgeObjectRelease();
            }
            else
            {
              uint64_t v63 = *(void *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x10);
            }
            swift_bridgeObjectRelease();
            if (!v57 || v63)
            {
            }
            else
            {
              id v64 = objc_msgSend(a3, sel_remoteDevices);
              sub_1C2B741D0();

              id v65 = v59;
              unint64_t v66 = swift_bridgeObjectRetain();
              unint64_t v67 = sub_1C2B08374(v66, (uint64_t)v65);
              swift_bridgeObjectRelease();

              if (v67 >> 62)
              {
                sub_1C2B749A0();
              }
              else
              {
                swift_bridgeObjectRetain();
                sub_1C2B74B60();
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              id v68 = objc_allocWithZone(MEMORY[0x1E4F66BB8]);
              id v69 = v82;
              id v70 = v65;
              uint64_t v71 = (void *)sub_1C2B741C0();
              swift_bridgeObjectRelease();
              id v72 = objc_msgSend(v68, sel_initWithMedication_schedule_devices_, v69, v70, v71);

              id v73 = v72;
              MEMORY[0x1C87665F0]();
              if (*(void *)((v89 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v89 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                sub_1C2B74210();
              }
              sub_1C2B74250();
              sub_1C2B741F0();
            }
            unint64_t v32 = v77;
            uint64_t v30 = v78;
            goto LABEL_20;
          }
        }
        swift_bridgeObjectRetain();
        uint64_t v57 = sub_1C2B749C0();
        swift_bridgeObjectRelease();
        goto LABEL_48;
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v55 = MEMORY[0x1E4FBC860];
    goto LABEL_44;
  }
LABEL_73:
  swift_bridgeObjectRelease();
  unint64_t v74 = MEMORY[0x1E4FBC860];
LABEL_74:
  swift_bridgeObjectRelease();
  return v74;
}

uint64_t initializeBufferWithCopyOfBuffer for MedicationVisualizationFragment(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for RemoteScheduleUnavailableAlertDeterminer(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return __swift_destroy_boxed_opaque_existential_0(a1 + 56);
}

uint64_t initializeWithCopy for RemoteScheduleUnavailableAlertDeterminer(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  unint64_t v5 = *(void **)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void **)(a2 + 48);
  *(void *)(a1 + 48) = v6;
  uint64_t v13 = a2 + 56;
  uint64_t v14 = a1 + 56;
  long long v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 80) = v7;
  uint64_t v8 = v7;
  id v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v10 = v5;
  id v11 = v6;
  v9(v14, v13, v8);
  return a1;
}

void *assignWithCopy for RemoteScheduleUnavailableAlertDeterminer(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a2[5];
  unint64_t v5 = (void *)a1[5];
  a1[5] = v4;
  id v6 = v4;

  long long v7 = (void *)a1[6];
  uint64_t v8 = (void *)a2[6];
  a1[6] = v8;
  id v9 = v8;

  __swift_assign_boxed_opaque_existential_1(a1 + 7, a2 + 7);
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        uint64_t *v3 = v12;
      }
      else
      {
        id v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          uint64_t *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

__n128 __swift_memcpy96_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t assignWithTake for RemoteScheduleUnavailableAlertDeterminer(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  long long v4 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);

  long long v5 = *(void **)(a1 + 48);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);

  __swift_destroy_boxed_opaque_existential_0(a1 + 56);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoteScheduleUnavailableAlertDeterminer(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RemoteScheduleUnavailableAlertDeterminer(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteScheduleUnavailableAlertDeterminer()
{
  return &type metadata for RemoteScheduleUnavailableAlertDeterminer;
}

uint64_t destroy for RemoteScheduleUnavailableAlertDeterminer.Status()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s27HealthMedicationsExperience40RemoteScheduleUnavailableAlertDeterminerV6StatusVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for RemoteScheduleUnavailableAlertDeterminer.Status(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for RemoteScheduleUnavailableAlertDeterminer.Status(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoteScheduleUnavailableAlertDeterminer.Status(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RemoteScheduleUnavailableAlertDeterminer.Status(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteScheduleUnavailableAlertDeterminer.Status()
{
  return &type metadata for RemoteScheduleUnavailableAlertDeterminer.Status;
}

unint64_t sub_1C2B09CA8()
{
  unint64_t result = qword_1EA32BC70;
  if (!qword_1EA32BC70)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA32BC70);
  }
  return result;
}

void sub_1C2B09CE8()
{
  if (!qword_1EA32BBB0)
  {
    sub_1C2B73740();
    unint64_t v0 = sub_1C2B74630();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA32BBB0);
    }
  }
}

uint64_t sub_1C2B09D40(uint64_t a1, uint64_t a2)
{
  sub_1C2B09CE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C2B09DA4()
{
  return swift_release();
}

uint64_t sub_1C2B09DAC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C2B73740();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C2B09DF0()
{
  if (!qword_1EA32BC80)
  {
    sub_1C2B09CE8();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA32BC80);
    }
  }
}

uint64_t sub_1C2B09E54(uint64_t a1, uint64_t a2)
{
  sub_1C2B09CE8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C2B09EB8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C2B09F18(uint64_t a1)
{
  uint64_t v2 = a1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v26 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v7 = 0;
  char v25 = (void *)MEMORY[0x1E4FBC860];
  if (!v5) {
    goto LABEL_13;
  }
LABEL_4:
  unint64_t v8 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  for (unint64_t i = v8 | (v7 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v7 << 6))
  {
    unint64_t v17 = *(void *)(*(void *)(a1 + 56) + 8 * i);
    if (v17 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v24 = sub_1C2B749C0();
      uint64_t result = swift_bridgeObjectRelease();
      if (!v24) {
        goto LABEL_12;
      }
    }
    else
    {
      uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      if (!v18) {
        goto LABEL_12;
      }
    }
    if ((v17 & 0xC000000000000001) == 0) {
      break;
    }
    id v19 = (id)MEMORY[0x1C8766C90](0, v17);
LABEL_31:
    id v20 = v19;
    id v21 = objc_msgSend(v20, sel_routedDoseFormProducts);
    sub_1C2AE3A18(0, (unint64_t *)&qword_1EA32BA78);
    unint64_t v22 = sub_1C2B741D0();

    if (v22 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v23 = sub_1C2B749C0();

      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (!v23)
    {

      id v20 = 0;
    }
    id v10 = v20;
    char v11 = sub_1C2B24BEC(v17, v20);

    if ((v11 & 1) == 0)
    {
LABEL_12:
      uint64_t result = swift_bridgeObjectRelease();
      if (v5) {
        goto LABEL_4;
      }
      goto LABEL_13;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1C2AE22DC(0, v25[2] + 1, 1, v25);
      char v25 = (void *)result;
    }
    unint64_t v13 = v25[2];
    unint64_t v12 = v25[3];
    if (v13 >= v12 >> 1)
    {
      uint64_t result = (uint64_t)sub_1C2AE22DC((void *)(v12 > 1), v13 + 1, 1, v25);
      char v25 = (void *)result;
    }
    v25[2] = v13 + 1;
    v25[v13 + 4] = v17;
    if (v5) {
      goto LABEL_4;
    }
LABEL_13:
    if (__OFADD__(v7++, 1)) {
      goto LABEL_45;
    }
    if (v7 >= v26)
    {
LABEL_43:
      swift_release();
      return (uint64_t)v25;
    }
    unint64_t v15 = *(void *)(v2 + 8 * v7);
    if (!v15)
    {
      int64_t v16 = v7 + 1;
      if (v7 + 1 >= v26) {
        goto LABEL_43;
      }
      unint64_t v15 = *(void *)(v2 + 8 * v16);
      if (!v15)
      {
        int64_t v16 = v7 + 2;
        if (v7 + 2 >= v26) {
          goto LABEL_43;
        }
        unint64_t v15 = *(void *)(v2 + 8 * v16);
        if (!v15)
        {
          int64_t v16 = v7 + 3;
          if (v7 + 3 >= v26) {
            goto LABEL_43;
          }
          unint64_t v15 = *(void *)(v2 + 8 * v16);
          if (!v15)
          {
            int64_t v16 = v7 + 4;
            if (v7 + 4 >= v26) {
              goto LABEL_43;
            }
            unint64_t v15 = *(void *)(v2 + 8 * v16);
            if (!v15)
            {
              while (1)
              {
                int64_t v7 = v16 + 1;
                if (__OFADD__(v16, 1)) {
                  goto LABEL_46;
                }
                if (v7 >= v26) {
                  goto LABEL_43;
                }
                unint64_t v15 = *(void *)(v2 + 8 * v7);
                ++v16;
                if (v15) {
                  goto LABEL_25;
                }
              }
            }
          }
        }
      }
      int64_t v7 = v16;
    }
LABEL_25:
    unint64_t v5 = (v15 - 1) & v15;
  }
  if (*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v19 = *(id *)(v17 + 32);
    goto LABEL_31;
  }
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
  return result;
}

uint64_t MedicationOntologyContentProvider.minimumSearchTermLength.getter()
{
  return 2;
}

uint64_t MedicationOntologyContentProvider.medicationsPublisher(with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v22 = *v2;
  sub_1C2B0A660();
  uint64_t v6 = v5;
  uint64_t v23 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2B0A6DC();
  uint64_t v10 = v9;
  uint64_t v24 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  unint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2B0A770();
  uint64_t v14 = v13;
  uint64_t v15 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  unint64_t v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_1C2B74080() < 3)
  {
    uint64_t v25 = MEMORY[0x1E4FBC860];
    sub_1C2B0E6F4(0, &qword_1EA32BC90, (uint64_t)&type metadata for MedicationSearchCluster, MEMORY[0x1E4FBB320]);
    sub_1C2B73C50();
    sub_1C2AF44C8();
    sub_1C2B73C30();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v6);
    sub_1C2B0A8D4(&qword_1EA32BCB8, (void (*)(uint64_t))sub_1C2B0A6DC);
    uint64_t v20 = sub_1C2B73D00();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v12, v10);
  }
  else
  {
    uint64_t v18 = (void *)swift_allocObject();
    void v18[2] = a1;
    v18[3] = a2;
    uint64_t v19 = v22;
    v18[4] = v2;
    v18[5] = v19;
    sub_1C2B0A804();
    sub_1C2B0A8D4(&qword_1EA32BCB0, (void (*)(uint64_t))sub_1C2B0A804);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1C2B73C90();
    sub_1C2B0A8D4(&qword_1EA32BCC0, (void (*)(uint64_t))sub_1C2B0A770);
    uint64_t v20 = sub_1C2B73D00();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
  return v20;
}

void sub_1C2B0A660()
{
  if (!qword_1EA32BC88)
  {
    sub_1C2B0E6F4(255, &qword_1EA32BC90, (uint64_t)&type metadata for MedicationSearchCluster, MEMORY[0x1E4FBB320]);
    unint64_t v0 = sub_1C2B73C40();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA32BC88);
    }
  }
}

void sub_1C2B0A6DC()
{
  if (!qword_1EA32BC98)
  {
    sub_1C2B0E6F4(255, &qword_1EA32BC90, (uint64_t)&type metadata for MedicationSearchCluster, MEMORY[0x1E4FBB320]);
    sub_1C2AF44C8();
    unint64_t v0 = sub_1C2B74C70();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA32BC98);
    }
  }
}

void sub_1C2B0A770()
{
  if (!qword_1EA32BCA0)
  {
    sub_1C2B0A804();
    sub_1C2B0A8D4(&qword_1EA32BCB0, (void (*)(uint64_t))sub_1C2B0A804);
    unint64_t v0 = sub_1C2B73CA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA32BCA0);
    }
  }
}

void sub_1C2B0A804()
{
  if (!qword_1EA32BCA8)
  {
    type metadata accessor for HKHealthStore.HKMedicationClusterPublisher(255);
    sub_1C2B0E6F4(255, &qword_1EA32BC90, (uint64_t)&type metadata for MedicationSearchCluster, MEMORY[0x1E4FBB320]);
    sub_1C2B0A8D4(&qword_1EA32B980, (void (*)(uint64_t))type metadata accessor for HKHealthStore.HKMedicationClusterPublisher);
    unint64_t v0 = sub_1C2B73B40();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA32BCA8);
    }
  }
}

uint64_t sub_1C2B0A8D4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C2B0A91C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v71 = a4;
  unint64_t v66 = a3;
  unint64_t v68 = a2;
  uint64_t v69 = a1;
  uint64_t v77 = a5;
  uint64_t v67 = type metadata accessor for HKHealthStore.HKMedicationClusterPublisher(0);
  MEMORY[0x1F4188790](v67);
  unint64_t v8 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2B0BF44();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v73 = v9;
  uint64_t v74 = v10;
  MEMORY[0x1F4188790](v9);
  id v70 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2B0A804();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v75 = v12;
  uint64_t v76 = v13;
  MEMORY[0x1F4188790](v12);
  id v72 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_1C2B73710();
  uint64_t v15 = *(void *)(v78 - 8);
  uint64_t v64 = *(void *)(v15 + 64);
  uint64_t v16 = MEMORY[0x1F4188790](v78);
  uint64_t v63 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  id v79 = (char *)&v59 - v18;
  uint64_t Descriptor = type metadata accessor for HKMedicationClusterQueryDescriptor();
  uint64_t v20 = Descriptor - 8;
  MEMORY[0x1F4188790](Descriptor);
  uint64_t v22 = (char *)&v59 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1C2B734E0();
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  int64_t v26 = (char *)&v59 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = a1;
  unint64_t v81 = a2;
  sub_1C2B734C0();
  sub_1C2AE1354();
  uint64_t v27 = MEMORY[0x1E4FBB1A0];
  uint64_t v28 = sub_1C2B74670();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
  uint64_t v80 = v28;
  id v65 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBB320];
  sub_1C2B0E6F4(0, (unint64_t *)&qword_1EBF10FB0, v27, MEMORY[0x1E4FBB320]);
  sub_1C2AE04F8();
  uint64_t v80 = sub_1C2B73F40();
  unint64_t v81 = v29;
  uint64_t v60 = sub_1C2B74040();
  uint64_t v61 = v30;
  uint64_t v31 = *MEMORY[0x1E4F66948];
  *((_OWORD *)v22 + 1) = 0u;
  *((_OWORD *)v22 + 2) = 0u;
  v22[48] = 1;
  *((void *)v22 + 8) = 0;
  uint64_t v32 = v15;
  unint64_t v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  uint64_t v34 = v78;
  v33(&v22[*(int *)(v20 + 52)], 1, 1, v78);
  sub_1C2B73E80();
  *uint64_t v22 = 2;
  *((void *)v22 + 7) = v28;
  *((void *)v22 + 1) = v31;
  unint64_t v35 = v79;
  sub_1C2B736F0();
  unint64_t v66 = (void *)v66[2];
  uint64_t v36 = v66;
  uint64_t v80 = 0;
  unint64_t v81 = 0xE000000000000000;
  sub_1C2B74820();
  swift_bridgeObjectRelease();
  uint64_t v80 = 0xD000000000000014;
  unint64_t v81 = 0x80000001C2B7AF50;
  sub_1C2B740A0();
  uint64_t v37 = v80;
  unint64_t v38 = v81;
  sub_1C2B0BFF0((uint64_t)v22, (uint64_t)v8);
  uint64_t v39 = &v8[*(int *)(type metadata accessor for HKHealthStore.HKMedicationClusterPublisher.Configuration(0) + 20)];
  *(void *)uint64_t v39 = v37;
  *((void *)v39 + 1) = v38;
  *(void *)&v8[*(int *)(v67 + 20)] = v36;
  uint64_t v40 = v32;
  unint64_t v41 = *(void (**)(char *, char *, uint64_t))(v32 + 16);
  char v42 = v63;
  v41(v63, v35, v34);
  uint64_t v43 = *(unsigned __int8 *)(v40 + 80);
  uint64_t v62 = v40;
  uint64_t v44 = (v43 + 16) & ~v43;
  unint64_t v45 = (v64 + v44 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v46 = swift_allocObject();
  (*(void (**)(uint64_t, char *, uint64_t))(v40 + 32))(v46 + v44, v42, v34);
  id v47 = (uint64_t *)(v46 + v45);
  uint64_t v48 = v60;
  uint64_t v49 = v61;
  *id v47 = v60;
  v47[1] = v49;
  uint64_t v50 = v71;
  *(void *)(v46 + ((v45 + 23) & 0xFFFFFFFFFFFFFFF8)) = v71;
  sub_1C2AEB708(0);
  sub_1C2B0A8D4(&qword_1EA32B980, (void (*)(uint64_t))type metadata accessor for HKHealthStore.HKMedicationClusterPublisher);
  uint64_t v51 = v66;
  swift_bridgeObjectRetain();
  uint64_t v52 = v70;
  sub_1C2B73D30();
  swift_release();
  sub_1C2B0C254((uint64_t)v8, type metadata accessor for HKHealthStore.HKMedicationClusterPublisher);
  id v53 = (void *)swift_allocObject();
  v53[2] = v48;
  v53[3] = v49;
  v53[4] = v50;
  sub_1C2B0E6F4(0, &qword_1EA32BC90, (uint64_t)&type metadata for MedicationSearchCluster, v65);
  swift_bridgeObjectRetain();
  unint64_t v55 = v72;
  uint64_t v54 = v73;
  sub_1C2B73B30();
  swift_release();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v52, v54);
  unint64_t v56 = (void *)swift_allocObject();
  v56[2] = v48;
  v56[3] = v49;
  v56[4] = v69;
  v56[5] = v68;
  v56[6] = v50;
  swift_bridgeObjectRetain();
  uint64_t v57 = v75;
  sub_1C2B73B30();
  swift_release();
  (*(void (**)(char *, uint64_t))(v76 + 8))(v55, v57);
  (*(void (**)(char *, uint64_t))(v62 + 8))(v79, v78);
  return sub_1C2B0C254((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for HKMedicationClusterQueryDescriptor);
}

uint64_t sub_1C2B0B080()
{
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1C2B0B0C0@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2B0A91C(*(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void *)(v1 + 40), a1);
}

uint64_t sub_1C2B0B0CC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, void *a4@<X8>)
{
  uint64_t v8 = sub_1C2B73710();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *a1;
  sub_1C2B736F0();
  sub_1C2B736A0();
  uint64_t v14 = v13;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (qword_1EBF11340 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_1C2B73A90();
  __swift_project_value_buffer(v15, (uint64_t)qword_1EBF11348);
  swift_bridgeObjectRetain_n();
  uint64_t v16 = sub_1C2B73A80();
  os_log_type_t v17 = sub_1C2B744B0();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    int64_t v26 = a4;
    uint64_t v20 = v19;
    uint64_t v28 = v19;
    *(_DWORD *)uint64_t v18 = 136446722;
    uint64_t v21 = sub_1C2B74CD0();
    uint64_t v27 = sub_1C2AEEE6C(v21, v22, &v28);
    sub_1C2B74650();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_1C2AEEE6C(a2, a3, &v28);
    sub_1C2B74650();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v18 + 22) = 2048;
    uint64_t v27 = v14;
    sub_1C2B74650();
    _os_log_impl(&dword_1C2ADB000, v16, v17, "[%{public}s] searching for [%s] took: %f", (uint8_t *)v18, 0x20u);
    swift_arrayDestroy();
    uint64_t v23 = v20;
    a4 = v26;
    MEMORY[0x1C8767A10](v23, -1, -1);
    MEMORY[0x1C8767A10](v18, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  *a4 = v12;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C2B0B3B4@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  unint64_t v43 = a3;
  uint64_t v44 = a4;
  uint64_t v41 = a2;
  uint64_t v39 = a5;
  uint64_t v42 = sub_1C2B73710();
  uint64_t v40 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  unint64_t v7 = *a1;
  uint64_t v38 = (uint64_t)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2B736F0();
  uint64_t v49 = (void *)MEMORY[0x1E4FBC868];
  if (v7 >> 62)
  {
LABEL_29:
    swift_bridgeObjectRetain_n();
    uint64_t v8 = sub_1C2B749C0();
    swift_bridgeObjectRelease();
    if (v8) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v8)
    {
LABEL_3:
      unint64_t v47 = v7 & 0xC000000000000001;
      uint64_t v9 = (void *)MEMORY[0x1E4FBC868];
      uint64_t v10 = 4;
      uint64_t v46 = MEMORY[0x1E4FBC838] + 8;
      long long v45 = xmmword_1C2B764F0;
      while (1)
      {
        uint64_t v12 = v10 - 4;
        if (v47)
        {
          id v13 = (id)MEMORY[0x1C8766C90](v10 - 4, v7);
          uint64_t v14 = v10 - 3;
          if (__OFADD__(v12, 1)) {
            goto LABEL_26;
          }
        }
        else
        {
          id v13 = *(id *)(v7 + 8 * v10);
          uint64_t v14 = v10 - 3;
          if (__OFADD__(v12, 1))
          {
LABEL_26:
            __break(1u);
LABEL_27:
            __break(1u);
LABEL_28:
            __break(1u);
            goto LABEL_29;
          }
        }
        id v15 = v13;
        id v16 = objc_msgSend(v15, sel_routedDoseFormProducts);
        sub_1C2AE3A18(0, (unint64_t *)&qword_1EA32BA78);
        unint64_t v17 = sub_1C2B741D0();

        if (v17 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v18 = sub_1C2B749C0();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        swift_bridgeObjectRelease();
        if (v18)
        {
          uint64_t v19 = v15;
        }
        else
        {

          uint64_t v19 = 0;
        }
        unint64_t v21 = sub_1C2B00220(v19);
        uint64_t v22 = v9[2];
        BOOL v23 = (v20 & 1) == 0;
        uint64_t v24 = v22 + v23;
        if (__OFADD__(v22, v23)) {
          goto LABEL_27;
        }
        char v25 = v20;
        if (v9[3] < v24)
        {
          sub_1C2B229E0(v24, 1);
          uint64_t v9 = v49;
          unint64_t v26 = sub_1C2B00220(v19);
          if ((v25 & 1) != (v27 & 1))
          {
            sub_1C2B0E6F4(0, &qword_1EA32BCE8, (uint64_t)&type metadata for MedicationGroupingKey, MEMORY[0x1E4FBB718]);
            uint64_t result = sub_1C2B74BB0();
            __break(1u);
            return result;
          }
          unint64_t v21 = v26;
        }
        if (v25)
        {

          uint64_t v11 = (void *)(v9[7] + 8 * v21);
          MEMORY[0x1C87665F0]();
          if (*(void *)((*v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1C2B74210();
          }
          sub_1C2B74250();
          sub_1C2B741F0();
        }
        else
        {
          sub_1C2B0E6F4(0, (unint64_t *)&qword_1EBF11390, v46, MEMORY[0x1E4FBBE00]);
          uint64_t v28 = swift_allocObject();
          *(_OWORD *)(v28 + 16) = v45;
          *(void *)(v28 + 32) = v15;
          uint64_t v48 = v28;
          sub_1C2B741F0();
          uint64_t v29 = v48;
          v9[(v21 >> 6) + 8] |= 1 << v21;
          uint64_t v30 = 8 * v21;
          *(void *)(v9[6] + v30) = v19;
          *(void *)(v9[7] + v30) = v29;
          uint64_t v31 = v9[2];
          BOOL v32 = __OFADD__(v31, 1);
          uint64_t v33 = v31 + 1;
          if (v32) {
            goto LABEL_28;
          }
          v9[2] = v33;
        }
        ++v10;
        if (v14 == v8) {
          goto LABEL_31;
        }
      }
    }
  }
  uint64_t v9 = (void *)MEMORY[0x1E4FBC868];
LABEL_31:
  swift_bridgeObjectRelease();
  uint64_t v34 = sub_1C2B09F18((uint64_t)v9);
  swift_release();
  *uint64_t v39 = v34;
  uint64_t v35 = v38;
  sub_1C2B0B9C8(v38, v41, v43, v44, "[%{public}s] grouping for [%s] took: %f");
  return (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 8))(v35, v42);
}

uint64_t sub_1C2B0B7EC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  unint64_t v20 = a3;
  uint64_t v21 = a6;
  uint64_t v12 = sub_1C2B73710();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  id v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *a1;
  sub_1C2B736F0();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = MEMORY[0x1E4FBC868];
  uint64_t v18 = (void *)swift_allocObject();
  void v18[2] = v17;
  v18[3] = a4;
  v18[4] = a5;
  uint64_t v22 = v16;
  swift_bridgeObjectRetain_n();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1C2B0E530(&v22, a4, a5, sub_1C2B0C32C);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  *a7 = v22;
  sub_1C2B0B9C8((uint64_t)v15, a2, v20, v21, "[%{public}s] sorting for [%s] took: %f");
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

void sub_1C2B0B9C8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, const char *a5)
{
  uint64_t v8 = sub_1C2B73710();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2B736F0();
  sub_1C2B736A0();
  uint64_t v13 = v12;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (qword_1EBF11340 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_1C2B73A90();
  __swift_project_value_buffer(v14, (uint64_t)qword_1EBF11348);
  swift_bridgeObjectRetain_n();
  id v15 = sub_1C2B73A80();
  os_log_type_t v16 = sub_1C2B744B0();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    uint64_t v22 = v18;
    *(_DWORD *)uint64_t v17 = 136446722;
    uint64_t v19 = sub_1C2B74CD0();
    uint64_t v21 = sub_1C2AEEE6C(v19, v20, &v22);
    sub_1C2B74650();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_1C2AEEE6C(a2, a3, &v22);
    sub_1C2B74650();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v17 + 22) = 2048;
    uint64_t v21 = v13;
    sub_1C2B74650();
    _os_log_impl(&dword_1C2ADB000, v15, v16, a5, (uint8_t *)v17, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1C8767A10](v18, -1, -1);
    MEMORY[0x1C8767A10](v17, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_1C2B0BC90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1C2B0E6F4(0, &qword_1EA32BCD0, MEMORY[0x1E4FBAF58], MEMORY[0x1E4FBBD80]);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v22 - v13;
  id v15 = (uint64_t *)(a3 + 16);
  swift_beginAccess();
  uint64_t v16 = *(void *)(a3 + 16);
  if (!*(void *)(v16 + 16)) {
    goto LABEL_5;
  }
  swift_bridgeObjectRetain();
  unint64_t v17 = sub_1C2AE056C(a1, a2);
  if ((v18 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    swift_endAccess();
    uint64_t v25 = a1;
    uint64_t v26 = a2;
    uint64_t v23 = a4;
    uint64_t v24 = a5;
    sub_1C2B0E624();
    sub_1C2B73F30();
    sub_1C2B0E678();
    sub_1C2B74400();
    sub_1C2B74430();
    uint64_t v19 = sub_1C2B74420();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v23 = *v15;
    *id v15 = 0x8000000000000000;
    sub_1C2B01490(v19, a1, a2, isUniquelyReferenced_nonNull_native);
    *id v15 = v23;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    return v19;
  }
  uint64_t v19 = *(void *)(*(void *)(v16 + 56) + 8 * v17);
  swift_endAccess();
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_1C2B0BEF0()
{
  return 2;
}

uint64_t sub_1C2B0BEF8(uint64_t a1, uint64_t a2)
{
  return MedicationOntologyContentProvider.medicationsPublisher(with:)(a1, a2);
}

uint64_t dispatch thunk of MedicationOntologySearching.minimumSearchTermLength.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of MedicationOntologySearching.medicationsPublisher(with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

void sub_1C2B0BF44()
{
  if (!qword_1EA32BCC8)
  {
    type metadata accessor for HKHealthStore.HKMedicationClusterPublisher(255);
    sub_1C2AEB708(255);
    sub_1C2B0A8D4(&qword_1EA32B980, (void (*)(uint64_t))type metadata accessor for HKHealthStore.HKMedicationClusterPublisher);
    unint64_t v0 = sub_1C2B73B40();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA32BCC8);
    }
  }
}

uint64_t sub_1C2B0BFF0(uint64_t a1, uint64_t a2)
{
  uint64_t Descriptor = type metadata accessor for HKMedicationClusterQueryDescriptor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(Descriptor - 8) + 16))(a2, a1, Descriptor);
  return a2;
}

uint64_t sub_1C2B0C054()
{
  uint64_t v1 = sub_1C2B73710();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, v6, v5);
}

uint64_t sub_1C2B0C104@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_1C2B73710() - 8);
  unint64_t v6 = (*(void *)(v5 + 64)
      + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
      + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)(v2 + v6);
  unint64_t v8 = *(void *)(v2 + v6 + 8);
  return sub_1C2B0B0CC(a1, v7, v8, a2);
}

uint64_t sub_1C2B0C1C0()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C2B0C1F8@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C2B0B3B4(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), a2);
}

uint64_t sub_1C2B0C204()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1C2B0C244@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1C2B0B7EC(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), a2);
}

uint64_t sub_1C2B0C254(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C2B0C2B4()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C2B0C2EC()
{
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C2B0C32C(uint64_t a1, uint64_t a2)
{
  return sub_1C2B0BC90(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_1C2B0C338(char *__src, char *a2, unint64_t a3, char *__dst, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t))
{
  uint64_t v7 = __dst;
  unint64_t v8 = a2;
  uint64_t v9 = __src;
  int64_t v10 = a2 - __src;
  int64_t v11 = a2 - __src + 7;
  if (a2 - __src >= 0) {
    int64_t v11 = a2 - __src;
  }
  uint64_t v12 = v11 >> 3;
  uint64_t v13 = a3 - (void)a2;
  uint64_t v14 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v14 = a3 - (void)a2;
  }
  uint64_t v15 = v14 >> 3;
  uint64_t v48 = __src;
  unint64_t v47 = __dst;
  if (v12 >= v14 >> 3)
  {
    if (v13 < -7) {
      goto LABEL_51;
    }
    if (__dst != a2 || &a2[8 * v15] <= __dst) {
      memmove(__dst, a2, 8 * v15);
    }
    uint64_t v23 = &v7[8 * v15];
    uint64_t v46 = v23;
    uint64_t v48 = v8;
    if (v9 >= v8 || v13 < 8) {
      goto LABEL_50;
    }
    uint64_t v24 = (char *)(a3 - 8);
    uint64_t v25 = v8;
    long long v45 = v7;
    while (1)
    {
      unint64_t v43 = v8;
      unint64_t v39 = (unint64_t)v23;
      uint64_t v41 = v24 + 8;
      uint64_t v34 = v23 - 8;
      uint64_t v35 = v25 - 8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      MedicationSearchCluster.primaryName.getter();
      unsigned __int8 v26 = sub_1C2B74110();
      swift_bridgeObjectRelease();
      MedicationSearchCluster.primaryName.getter();
      unsigned __int8 v37 = sub_1C2B74110();
      swift_bridgeObjectRelease();
      uint64_t v27 = MedicationSearchCluster.primaryName.getter();
      uint64_t v28 = a7(v27);
      swift_bridgeObjectRelease();
      uint64_t v29 = MedicationSearchCluster.primaryName.getter();
      uint64_t v30 = a7(v29);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v31 = ((v26 ^ v37) & 1) != 0 ? v26 : v28 < v30;
      if (v31) {
        break;
      }
      uint64_t v46 = v34;
      if ((unint64_t)v41 < v39 || (unint64_t)v24 >= v39)
      {
        *(void *)uint64_t v24 = *(void *)v34;
        uint64_t v25 = v43;
        uint64_t v23 = v34;
        goto LABEL_48;
      }
      BOOL v32 = v45;
      if (v41 != (char *)v39) {
        *(void *)uint64_t v24 = *(void *)v34;
      }
      uint64_t v25 = v43;
      uint64_t v23 = v34;
      if (v43 <= v9) {
        goto LABEL_50;
      }
LABEL_49:
      v24 -= 8;
      unint64_t v8 = v25;
      if (v23 <= v32) {
        goto LABEL_50;
      }
    }
    uint64_t v23 = (char *)v39;
    uint64_t v25 = v35;
    if (v41 != v43 || v24 >= v43) {
      *(void *)uint64_t v24 = *(void *)v35;
    }
    uint64_t v48 = v35;
LABEL_48:
    BOOL v32 = v45;
    if (v25 <= v9) {
      goto LABEL_50;
    }
    goto LABEL_49;
  }
  if (v10 >= -7)
  {
    if (__dst != __src || &__src[8 * v12] <= __dst) {
      memmove(__dst, __src, 8 * v12);
    }
    uint64_t v38 = &v7[8 * v12];
    uint64_t v46 = v38;
    if ((unint64_t)v8 < a3 && v10 >= 8)
    {
      do
      {
        uint64_t v44 = v7;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        MedicationSearchCluster.primaryName.getter();
        unsigned __int8 v16 = sub_1C2B74110();
        swift_bridgeObjectRelease();
        MedicationSearchCluster.primaryName.getter();
        unsigned __int8 v42 = sub_1C2B74110();
        swift_bridgeObjectRelease();
        uint64_t v17 = MedicationSearchCluster.primaryName.getter();
        uint64_t v18 = a7(v17);
        swift_bridgeObjectRelease();
        uint64_t v19 = MedicationSearchCluster.primaryName.getter();
        uint64_t v20 = a7(v19);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v16 ^ v42)) {
          BOOL v21 = v16;
        }
        else {
          BOOL v21 = v18 < v20;
        }
        if (v21)
        {
          uint64_t v22 = v8 + 8;
          uint64_t v7 = v44;
          if (v9 < v8 || v9 >= v22 || v9 != v8) {
            *(void *)uint64_t v9 = *(void *)v8;
          }
        }
        else
        {
          if (v9 != v44) {
            *(void *)uint64_t v9 = *(void *)v44;
          }
          uint64_t v7 = v44 + 8;
          unint64_t v47 = v44 + 8;
          uint64_t v22 = v8;
        }
        v9 += 8;
        if (v7 >= v38) {
          break;
        }
        unint64_t v8 = v22;
      }
      while ((unint64_t)v22 < a3);
      uint64_t v48 = v9;
    }
LABEL_50:
    sub_1C2B224F4((void **)&v48, &v47, &v46);
    return 1;
  }
LABEL_51:
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1C2B74A10();
  __break(1u);
  return result;
}

uint64_t sub_1C2B0C830(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t, uint64_t))
{
  v52[10] = a6;
  uint64_t v41 = result;
  if (a3 == a2) {
    return result;
  }
  uint64_t v43 = *a4;
  uint64_t v7 = (unint64_t *)(*a4 + 8 * a3 - 8);
LABEL_5:
  uint64_t v44 = a3;
  unint64_t v8 = *(void *)(v43 + 8 * a3);
  uint64_t v45 = v41;
  unsigned __int8 v42 = v7;
  while (1)
  {
    unint64_t v9 = *v7;
    unint64_t v10 = v8 >> 62;
    if (v8 >> 62) {
      break;
    }
    uint64_t v11 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    uint64_t result = swift_bridgeObjectRetain();
    if (v11) {
      goto LABEL_8;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    if (qword_1EBF10F78 != -1) {
      swift_once();
    }
    id v14 = (id)qword_1EBF10F60;
    swift_bridgeObjectRetain();
    sub_1C2B735A0();
    swift_bridgeObjectRelease();

LABEL_16:
    char v15 = sub_1C2B74110();
    swift_bridgeObjectRelease();
    unint64_t v16 = v9 >> 62;
    if (v9 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t result = sub_1C2B749C0();
      BOOL v47 = v15;
      if (!result)
      {
LABEL_23:
        swift_bridgeObjectRelease();
        if (qword_1EBF10F78 != -1) {
          swift_once();
        }
        id v20 = (id)qword_1EBF10F60;
        swift_bridgeObjectRetain();
        sub_1C2B735A0();
        swift_bridgeObjectRelease();

        unint64_t v16 = v9 >> 62;
        unint64_t v10 = v8 >> 62;
        goto LABEL_26;
      }
    }
    else
    {
      uint64_t v17 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      BOOL v47 = v15;
      if (!v17) {
        goto LABEL_23;
      }
    }
    if ((v9 & 0xC000000000000001) != 0)
    {
      id v18 = (id)MEMORY[0x1C8766C90](0, v9);
    }
    else
    {
      if (!*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_58;
      }
      id v18 = *(id *)(v9 + 32);
    }
    uint64_t v19 = v18;
    swift_bridgeObjectRelease();
    sub_1C2AFA550(&v50);
    swift_bridgeObjectRetain();
    sub_1C2AFB2B8((uint64_t)&v50);

LABEL_26:
    unsigned __int8 v21 = sub_1C2B74110();
    swift_bridgeObjectRelease();
    if (v10)
    {
      swift_bridgeObjectRetain();
      uint64_t result = sub_1C2B749C0();
      unsigned __int8 v46 = v21;
      if (!result)
      {
LABEL_33:
        swift_bridgeObjectRelease();
        if (qword_1EBF10F78 != -1) {
          swift_once();
        }
        id v27 = (id)qword_1EBF10F60;
        swift_bridgeObjectRetain();
        uint64_t v25 = sub_1C2B735A0();
        uint64_t v26 = v28;
        swift_bridgeObjectRelease();

        goto LABEL_36;
      }
    }
    else
    {
      uint64_t v22 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      unsigned __int8 v46 = v21;
      if (!v22) {
        goto LABEL_33;
      }
    }
    if ((v8 & 0xC000000000000001) != 0)
    {
      id v23 = (id)MEMORY[0x1C8766C90](0, v8);
    }
    else
    {
      if (!*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_59;
      }
      id v23 = *(id *)(v8 + 32);
    }
    uint64_t v24 = v23;
    swift_bridgeObjectRelease();
    sub_1C2AFA550(v51);
    uint64_t v25 = v51[0];
    uint64_t v26 = v51[1];
    swift_bridgeObjectRetain();
    sub_1C2AFB2B8((uint64_t)v51);

LABEL_36:
    uint64_t v29 = a7(v25, v26);
    swift_bridgeObjectRelease();
    if (v16)
    {
      swift_bridgeObjectRetain();
      uint64_t result = sub_1C2B749C0();
      if (result)
      {
LABEL_38:
        if ((v9 & 0xC000000000000001) != 0)
        {
          id v31 = (id)MEMORY[0x1C8766C90](0, v9);
        }
        else
        {
          if (!*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_60;
          }
          id v31 = *(id *)(v9 + 32);
        }
        BOOL v32 = v31;
        swift_bridgeObjectRelease();
        sub_1C2AFA550(v52);
        uint64_t v34 = v52[0];
        uint64_t v33 = v52[1];
        swift_bridgeObjectRetain();
        sub_1C2AFB2B8((uint64_t)v52);

        goto LABEL_46;
      }
    }
    else
    {
      uint64_t v30 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      if (v30) {
        goto LABEL_38;
      }
    }
    swift_bridgeObjectRelease();
    if (qword_1EBF10F78 != -1) {
      swift_once();
    }
    id v35 = (id)qword_1EBF10F60;
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_1C2B735A0();
    uint64_t v33 = v36;
    swift_bridgeObjectRelease();

LABEL_46:
    uint64_t v37 = a7(v34, v33);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v47 ^ v46)) {
      BOOL v38 = v47;
    }
    else {
      BOOL v38 = v29 < v37;
    }
    if (v38)
    {
      if (!v43) {
        goto LABEL_61;
      }
      unint64_t v39 = *v7;
      unint64_t v8 = v7[1];
      *uint64_t v7 = v8;
      v7[1] = v39;
      --v7;
      if (v44 != ++v45) {
        continue;
      }
    }
    a3 = v44 + 1;
    uint64_t v7 = v42 + 1;
    if (v44 + 1 == a2) {
      return result;
    }
    goto LABEL_5;
  }
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C2B749C0();
  if (!result) {
    goto LABEL_13;
  }
LABEL_8:
  if ((v8 & 0xC000000000000001) != 0)
  {
    id v12 = (id)MEMORY[0x1C8766C90](0, v8);
    goto LABEL_11;
  }
  if (*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v12 = *(id *)(v8 + 32);
LABEL_11:
    uint64_t v13 = v12;
    swift_bridgeObjectRelease();
    sub_1C2AFA550(&v49);
    swift_bridgeObjectRetain();
    sub_1C2AFB2B8((uint64_t)&v49);

    goto LABEL_16;
  }
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  __break(1u);
LABEL_60:
  __break(1u);
LABEL_61:
  __break(1u);
  return result;
}

uint64_t sub_1C2B0CF44(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7 = a1[1];
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v8 = sub_1C2B74B00();
  if (v8 >= v7)
  {
    if (v7 < 0) {
      goto LABEL_240;
    }
    if (v7)
    {
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1C2B0C830(0, v7, 1, a1, a2, a3, a4);
      swift_bridgeObjectRelease_n();
      swift_release_n();
    }
    else
    {
      swift_release();
      swift_bridgeObjectRelease_n();
    }
LABEL_210:
    swift_bridgeObjectRelease();
    return swift_release_n();
  }
  if (v7 >= 0) {
    uint64_t v9 = v7;
  }
  else {
    uint64_t v9 = v7 + 1;
  }
  if (v7 < -1) {
    goto LABEL_248;
  }
  uint64_t v168 = v7;
  uint64_t v162 = v8;
  uint64_t v175 = v4;
  v159 = a1;
  if (v7 < 2)
  {
    uint64_t v11 = MEMORY[0x1E4FBC860];
    __dst = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v7 != 1)
    {
      unint64_t v96 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v13 = (char *)MEMORY[0x1E4FBC860];
LABEL_197:
      if (v96 < 2)
      {
LABEL_208:
        swift_bridgeObjectRelease();
        *(void *)(v11 + 16) = 0;
        swift_release();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        goto LABEL_210;
      }
      uint64_t v148 = *v159;
      uint64_t v170 = v11;
      *(void *)v190 = *v159;
      while (1)
      {
        unint64_t v149 = v96 - 2;
        if (v96 < 2) {
          goto LABEL_234;
        }
        if (!v148) {
          goto LABEL_247;
        }
        v174 = v13;
        v150 = v13 + 32;
        uint64_t v151 = *(void *)&v13[16 * v149 + 32];
        uint64_t v152 = *(void *)&v150[16 * v96 - 8];
        v153 = (char *)(v148 + 8 * v151);
        v154 = (char *)(v148 + 8 * *(void *)&v150[16 * v96 - 16]);
        unint64_t v155 = v148 + 8 * v152;
        swift_bridgeObjectRetain();
        swift_retain();
        sub_1C2B0C338(v153, v154, v155, __dst, a2, a3, (uint64_t (*)(uint64_t))a4);
        if (v175) {
          goto LABEL_209;
        }
        swift_bridgeObjectRelease();
        swift_release();
        if (v152 < v151) {
          goto LABEL_235;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          v174 = sub_1C2B22680((uint64_t)v174);
        }
        if (v149 >= *((void *)v174 + 2)) {
          goto LABEL_236;
        }
        v156 = &v174[16 * v149 + 32];
        *(void *)v156 = v151;
        *((void *)v156 + 1) = v152;
        unint64_t v157 = *((void *)v174 + 2);
        if (v96 > v157) {
          goto LABEL_237;
        }
        uint64_t v13 = v174;
        memmove(&v174[16 * v96 + 16], &v174[16 * v96 + 32], 16 * (v157 - v96));
        *((void *)v174 + 2) = v157 - 1;
        unint64_t v96 = v157 - 1;
        uint64_t v11 = v170;
        uint64_t v148 = *(void *)v190;
        if (v157 <= 2) {
          goto LABEL_208;
        }
      }
    }
  }
  else
  {
    uint64_t v10 = v9 >> 1;
    uint64_t v11 = sub_1C2B74230();
    *(void *)(v11 + 16) = v10;
    __dst = (char *)(v11 + 32);
  }
  uint64_t v12 = 0;
  uint64_t v176 = *a1;
  uint64_t v160 = *a1 - 8;
  uint64_t v161 = *a1 + 16;
  uint64_t v13 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v180 = a3;
  uint64_t v170 = v11;
  uint64_t v14 = v7;
LABEL_13:
  uint64_t v15 = v12;
  uint64_t v16 = v12 + 1;
  if (v12 + 1 < v14)
  {
    v171 = v13;
    uint64_t v18 = *(void *)(v176 + 8 * v12);
    uint64_t v201 = *(void *)(v176 + 8 * v16);
    uint64_t v17 = v201;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    MedicationSearchCluster.primaryName.getter();
    unsigned __int8 v188 = sub_1C2B74110();
    swift_bridgeObjectRelease();
    uint64_t v201 = v18;
    MedicationSearchCluster.primaryName.getter();
    unsigned __int8 v184 = sub_1C2B74110();
    swift_bridgeObjectRelease();
    uint64_t v201 = v17;
    uint64_t v19 = MedicationSearchCluster.primaryName.getter();
    uint64_t v181 = ((uint64_t (*)(uint64_t))a4)(v19);
    swift_bridgeObjectRelease();
    uint64_t v201 = v18;
    uint64_t v20 = MedicationSearchCluster.primaryName.getter();
    uint64_t v21 = ((uint64_t (*)(uint64_t))a4)(v20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v188 ^ v184)) {
      BOOL v22 = v188;
    }
    else {
      BOOL v22 = v181 < v21;
    }
    BOOL v166 = v22;
    uint64_t v16 = v15 + 2;
    uint64_t v164 = v15;
    if (v15 + 2 < v14)
    {
      id v23 = (uint64_t *)(v161 + 8 * v15);
      while (1)
      {
        unint64_t v25 = *(v23 - 1);
        uint64_t v24 = *v23;
        unint64_t v26 = (unint64_t)*v23 >> 62;
        if (v26)
        {
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          uint64_t v27 = sub_1C2B749C0();
        }
        else
        {
          uint64_t v27 = *(void *)((*v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
        }
        uint64_t v177 = v16;
        if (v27)
        {
          if ((v24 & 0xC000000000000001) != 0)
          {
            id v28 = (id)MEMORY[0x1C8766C90](0, v24);
          }
          else
          {
            if (!*(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_229;
            }
            id v28 = *(id *)(v24 + 32);
          }
          uint64_t v29 = v28;
          swift_bridgeObjectRelease();
          sub_1C2AFA550(&v193);
          swift_bridgeObjectRetain();
          sub_1C2AFB2B8((uint64_t)&v193);
        }
        else
        {
          swift_bridgeObjectRelease();
          if (qword_1EBF10F78 != -1) {
            swift_once();
          }
          id v30 = (id)qword_1EBF10F60;
          swift_bridgeObjectRetain();
          sub_1C2B735A0();
          swift_bridgeObjectRelease();
        }
        char v31 = sub_1C2B74110();
        swift_bridgeObjectRelease();
        if (v25 >> 62)
        {
          swift_bridgeObjectRetain();
          BOOL v185 = v31;
          if (!sub_1C2B749C0())
          {
LABEL_37:
            swift_bridgeObjectRelease();
            if (qword_1EBF10F78 != -1) {
              swift_once();
            }
            id v35 = (id)qword_1EBF10F60;
            swift_bridgeObjectRetain();
            sub_1C2B735A0();
            swift_bridgeObjectRelease();

            goto LABEL_40;
          }
        }
        else
        {
          uint64_t v32 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          BOOL v185 = v31;
          if (!v32) {
            goto LABEL_37;
          }
        }
        if ((v25 & 0xC000000000000001) != 0)
        {
          id v33 = (id)MEMORY[0x1C8766C90](0, v25);
        }
        else
        {
          if (!*(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_230;
          }
          id v33 = *(id *)(v25 + 32);
        }
        uint64_t v34 = v33;
        swift_bridgeObjectRelease();
        sub_1C2AFA550(&v194);
        swift_bridgeObjectRetain();
        sub_1C2AFB2B8((uint64_t)&v194);

LABEL_40:
        unsigned __int8 v36 = sub_1C2B74110();
        swift_bridgeObjectRelease();
        if (v26)
        {
          swift_bridgeObjectRetain();
          unsigned __int8 v182 = v36;
          if (!sub_1C2B749C0())
          {
LABEL_47:
            swift_bridgeObjectRelease();
            if (qword_1EBF10F78 != -1) {
              swift_once();
            }
            id v42 = (id)qword_1EBF10F60;
            swift_bridgeObjectRetain();
            uint64_t v40 = sub_1C2B735A0();
            uint64_t v41 = v43;
            swift_bridgeObjectRelease();

            goto LABEL_50;
          }
        }
        else
        {
          uint64_t v37 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          unsigned __int8 v182 = v36;
          if (!v37) {
            goto LABEL_47;
          }
        }
        if ((v24 & 0xC000000000000001) != 0)
        {
          id v38 = (id)MEMORY[0x1C8766C90](0, v24);
        }
        else
        {
          if (!*(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_231;
          }
          id v38 = *(id *)(v24 + 32);
        }
        unint64_t v39 = v38;
        swift_bridgeObjectRelease();
        sub_1C2AFA550(v195);
        uint64_t v40 = v195[0];
        uint64_t v41 = v195[1];
        swift_bridgeObjectRetain();
        sub_1C2AFB2B8((uint64_t)v195);

LABEL_50:
        uint64_t v44 = a4(v40, v41);
        swift_bridgeObjectRelease();
        if (v25 >> 62)
        {
          swift_bridgeObjectRetain();
          if (!sub_1C2B749C0())
          {
LABEL_57:
            swift_bridgeObjectRelease();
            if (qword_1EBF10F78 != -1) {
              swift_once();
            }
            id v50 = (id)qword_1EBF10F60;
            swift_bridgeObjectRetain();
            uint64_t v48 = sub_1C2B735A0();
            uint64_t v49 = v51;
            swift_bridgeObjectRelease();

            goto LABEL_60;
          }
        }
        else
        {
          uint64_t v45 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (!v45) {
            goto LABEL_57;
          }
        }
        if ((v25 & 0xC000000000000001) != 0)
        {
          id v46 = (id)MEMORY[0x1C8766C90](0, v25);
        }
        else
        {
          if (!*(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_232;
          }
          id v46 = *(id *)(v25 + 32);
        }
        BOOL v47 = v46;
        swift_bridgeObjectRelease();
        sub_1C2AFA550(v196);
        uint64_t v48 = v196[0];
        uint64_t v49 = v196[1];
        swift_bridgeObjectRetain();
        sub_1C2AFB2B8((uint64_t)v196);

LABEL_60:
        uint64_t v52 = a4(v48, v49);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v185 ^ v182)) {
          BOOL v53 = v185;
        }
        else {
          BOOL v53 = v44 < v52;
        }
        if (v166 != v53)
        {
          uint64_t v16 = v177;
          a3 = v180;
          break;
        }
        a3 = v180;
        uint64_t v16 = v177 + 1;
        ++v23;
        if (v168 == v177 + 1)
        {
          uint64_t v16 = v168;
          break;
        }
      }
    }
    uint64_t v11 = v170;
    uint64_t v13 = v171;
    uint64_t v15 = v164;
    if (v166)
    {
      if (v16 < v164) {
        goto LABEL_243;
      }
      if (v164 < v16)
      {
        uint64_t v54 = (uint64_t *)(v160 + 8 * v16);
        uint64_t v55 = v16;
        uint64_t v56 = v164;
        uint64_t v57 = (uint64_t *)(v176 + 8 * v164);
        do
        {
          if (v56 != --v55)
          {
            if (!v176) {
              goto LABEL_246;
            }
            uint64_t v58 = *v57;
            *uint64_t v57 = *v54;
            *uint64_t v54 = v58;
          }
          ++v56;
          --v54;
          ++v57;
        }
        while (v56 < v55);
      }
    }
  }
  if (v16 >= v168) {
    goto LABEL_144;
  }
  if (__OFSUB__(v16, v15)) {
    goto LABEL_239;
  }
  if (v16 - v15 >= v162) {
    goto LABEL_144;
  }
  if (__OFADD__(v15, v162)) {
    goto LABEL_241;
  }
  uint64_t v59 = v168;
  if (v15 + v162 < v168) {
    uint64_t v59 = v15 + v162;
  }
  if (v59 < v15) {
    goto LABEL_242;
  }
  if (v16 == v59) {
    goto LABEL_144;
  }
  uint64_t v163 = v59;
  uint64_t v165 = v15;
  v172 = v13;
  uint64_t v60 = (void *)(v160 + 8 * v16);
LABEL_91:
  uint64_t v178 = v16;
  unint64_t v62 = *(void *)(v176 + 8 * v16);
  uint64_t v63 = v165;
  v167 = v60;
  uint64_t v64 = v60;
  while (1)
  {
    unint64_t v65 = *v64;
    if (v62 >> 62) {
      break;
    }
    uint64_t v66 = *(void *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v183 = v64;
    uint64_t v186 = v63;
    if (v66) {
      goto LABEL_94;
    }
LABEL_99:
    swift_bridgeObjectRelease();
    if (qword_1EBF10F78 != -1) {
      swift_once();
    }
    id v69 = (id)qword_1EBF10F60;
    swift_bridgeObjectRetain();
    sub_1C2B735A0();
    swift_bridgeObjectRelease();

LABEL_102:
    char v70 = sub_1C2B74110();
    swift_bridgeObjectRelease();
    if (v65 >> 62)
    {
      swift_bridgeObjectRetain();
      BOOL v189 = v70;
      if (!sub_1C2B749C0())
      {
LABEL_109:
        swift_bridgeObjectRelease();
        if (qword_1EBF10F78 != -1) {
          swift_once();
        }
        id v74 = (id)qword_1EBF10F60;
        swift_bridgeObjectRetain();
        sub_1C2B735A0();
        swift_bridgeObjectRelease();

        goto LABEL_112;
      }
    }
    else
    {
      uint64_t v71 = *(void *)((v65 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      BOOL v189 = v70;
      if (!v71) {
        goto LABEL_109;
      }
    }
    if ((v65 & 0xC000000000000001) != 0)
    {
      id v72 = (id)MEMORY[0x1C8766C90](0, v65);
    }
    else
    {
      if (!*(void *)((v65 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_212;
      }
      id v72 = *(id *)(v65 + 32);
    }
    uint64_t v73 = v72;
    swift_bridgeObjectRelease();
    sub_1C2AFA550(&v198);
    swift_bridgeObjectRetain();
    sub_1C2AFB2B8((uint64_t)&v198);

LABEL_112:
    unsigned __int8 v75 = sub_1C2B74110();
    swift_bridgeObjectRelease();
    if (v62 >> 62)
    {
      swift_bridgeObjectRetain();
      if (!sub_1C2B749C0())
      {
LABEL_119:
        swift_bridgeObjectRelease();
        if (qword_1EBF10F78 != -1) {
          swift_once();
        }
        id v81 = (id)qword_1EBF10F60;
        swift_bridgeObjectRetain();
        uint64_t v79 = sub_1C2B735A0();
        uint64_t v80 = v82;
        swift_bridgeObjectRelease();

        goto LABEL_122;
      }
    }
    else
    {
      uint64_t v76 = *(void *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v76) {
        goto LABEL_119;
      }
    }
    if ((v62 & 0xC000000000000001) != 0)
    {
      id v77 = (id)MEMORY[0x1C8766C90](0, v62);
    }
    else
    {
      if (!*(void *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_213;
      }
      id v77 = *(id *)(v62 + 32);
    }
    uint64_t v78 = v77;
    swift_bridgeObjectRelease();
    sub_1C2AFA550(v199);
    uint64_t v79 = v199[0];
    uint64_t v80 = v199[1];
    swift_bridgeObjectRetain();
    sub_1C2AFB2B8((uint64_t)v199);

LABEL_122:
    uint64_t v83 = a4(v79, v80);
    swift_bridgeObjectRelease();
    if (v65 >> 62)
    {
      swift_bridgeObjectRetain();
      if (!sub_1C2B749C0())
      {
LABEL_129:
        swift_bridgeObjectRelease();
        if (qword_1EBF10F78 != -1) {
          swift_once();
        }
        id v89 = (id)qword_1EBF10F60;
        swift_bridgeObjectRetain();
        uint64_t v87 = sub_1C2B735A0();
        uint64_t v88 = v90;
        swift_bridgeObjectRelease();

        goto LABEL_132;
      }
    }
    else
    {
      uint64_t v84 = *(void *)((v65 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v84) {
        goto LABEL_129;
      }
    }
    if ((v65 & 0xC000000000000001) != 0)
    {
      id v85 = (id)MEMORY[0x1C8766C90](0, v65);
    }
    else
    {
      if (!*(void *)((v65 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_214;
      }
      id v85 = *(id *)(v65 + 32);
    }
    unint64_t v86 = v85;
    swift_bridgeObjectRelease();
    sub_1C2AFA550(v200);
    uint64_t v87 = v200[0];
    uint64_t v88 = v200[1];
    swift_bridgeObjectRetain();
    sub_1C2AFB2B8((uint64_t)v200);

LABEL_132:
    uint64_t v91 = a4(v87, v88);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v189 ^ v75)) {
      BOOL v92 = v189;
    }
    else {
      BOOL v92 = v83 < v91;
    }
    if (!v92)
    {
      uint64_t v61 = v178;
      a3 = v180;
LABEL_90:
      uint64_t v16 = v61 + 1;
      uint64_t v60 = v167 + 1;
      if (v16 != v163) {
        goto LABEL_91;
      }
      uint64_t v16 = v163;
      uint64_t v11 = v170;
      uint64_t v13 = v172;
      uint64_t v15 = v165;
LABEL_144:
      if (v16 < v15) {
        goto LABEL_238;
      }
      uint64_t v179 = v16;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v13 = sub_1C2B22324(0, *((void *)v13 + 2) + 1, 1, v13);
      }
      unint64_t v95 = *((void *)v13 + 2);
      unint64_t v94 = *((void *)v13 + 3);
      unint64_t v96 = v95 + 1;
      uint64_t v97 = a3;
      if (v95 >= v94 >> 1) {
        uint64_t v13 = sub_1C2B22324((char *)(v94 > 1), v95 + 1, 1, v13);
      }
      *((void *)v13 + 2) = v96;
      uint64_t v98 = v13 + 32;
      uint64_t v99 = &v13[16 * v95 + 32];
      *(void *)uint64_t v99 = v15;
      *((void *)v99 + 1) = v179;
      if (v95)
      {
        v173 = v13;
        v187 = v13 + 32;
        while (1)
        {
          unint64_t v100 = v96 - 1;
          if (v96 >= 4)
          {
            uint64_t v105 = &v98[16 * v96];
            uint64_t v106 = *((void *)v105 - 8);
            uint64_t v107 = *((void *)v105 - 7);
            BOOL v111 = __OFSUB__(v107, v106);
            uint64_t v108 = v107 - v106;
            if (v111) {
              goto LABEL_219;
            }
            uint64_t v110 = *((void *)v105 - 6);
            uint64_t v109 = *((void *)v105 - 5);
            BOOL v111 = __OFSUB__(v109, v110);
            uint64_t v103 = v109 - v110;
            char v104 = v111;
            if (v111) {
              goto LABEL_220;
            }
            unint64_t v112 = v96 - 2;
            v113 = &v98[16 * v96 - 32];
            uint64_t v115 = *(void *)v113;
            uint64_t v114 = *((void *)v113 + 1);
            BOOL v111 = __OFSUB__(v114, v115);
            uint64_t v116 = v114 - v115;
            if (v111) {
              goto LABEL_222;
            }
            BOOL v111 = __OFADD__(v103, v116);
            uint64_t v117 = v103 + v116;
            if (v111) {
              goto LABEL_225;
            }
            if (v117 >= v108)
            {
              v135 = &v98[16 * v100];
              uint64_t v137 = *(void *)v135;
              uint64_t v136 = *((void *)v135 + 1);
              BOOL v111 = __OFSUB__(v136, v137);
              uint64_t v138 = v136 - v137;
              if (v111) {
                goto LABEL_233;
              }
              BOOL v128 = v103 < v138;
              goto LABEL_182;
            }
          }
          else
          {
            if (v96 != 3)
            {
              uint64_t v129 = *((void *)v13 + 4);
              uint64_t v130 = *((void *)v13 + 5);
              BOOL v111 = __OFSUB__(v130, v129);
              uint64_t v122 = v130 - v129;
              char v123 = v111;
              goto LABEL_176;
            }
            uint64_t v102 = *((void *)v13 + 4);
            uint64_t v101 = *((void *)v13 + 5);
            BOOL v111 = __OFSUB__(v101, v102);
            uint64_t v103 = v101 - v102;
            char v104 = v111;
          }
          if (v104) {
            goto LABEL_221;
          }
          unint64_t v112 = v96 - 2;
          v118 = &v98[16 * v96 - 32];
          uint64_t v120 = *(void *)v118;
          uint64_t v119 = *((void *)v118 + 1);
          BOOL v121 = __OFSUB__(v119, v120);
          uint64_t v122 = v119 - v120;
          char v123 = v121;
          if (v121) {
            goto LABEL_224;
          }
          v124 = &v98[16 * v100];
          uint64_t v126 = *(void *)v124;
          uint64_t v125 = *((void *)v124 + 1);
          BOOL v111 = __OFSUB__(v125, v126);
          uint64_t v127 = v125 - v126;
          if (v111) {
            goto LABEL_227;
          }
          if (__OFADD__(v122, v127)) {
            goto LABEL_228;
          }
          if (v122 + v127 >= v103)
          {
            BOOL v128 = v103 < v127;
LABEL_182:
            if (v128) {
              unint64_t v100 = v112;
            }
            goto LABEL_184;
          }
LABEL_176:
          if (v123) {
            goto LABEL_223;
          }
          v131 = &v98[16 * v100];
          uint64_t v133 = *(void *)v131;
          uint64_t v132 = *((void *)v131 + 1);
          BOOL v111 = __OFSUB__(v132, v133);
          uint64_t v134 = v132 - v133;
          if (v111) {
            goto LABEL_226;
          }
          if (v134 < v122) {
            goto LABEL_193;
          }
LABEL_184:
          unint64_t v139 = v100 - 1;
          if (v100 - 1 >= v96) {
            goto LABEL_215;
          }
          if (!v176) {
            goto LABEL_245;
          }
          v140 = &v98[16 * v139];
          uint64_t v141 = *(void *)v140;
          unint64_t v142 = v100;
          v143 = &v98[16 * v100];
          uint64_t v144 = *((void *)v143 + 1);
          v145 = (char *)(v176 + 8 * *(void *)v140);
          v146 = (char *)(v176 + 8 * *(void *)v143);
          swift_bridgeObjectRetain();
          swift_retain();
          sub_1C2B0C338(v145, v146, v176 + 8 * v144, __dst, a2, v180, (uint64_t (*)(uint64_t))a4);
          if (v175)
          {
LABEL_209:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
            *(void *)(v170 + 16) = 0;
            swift_release();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            goto LABEL_210;
          }
          swift_bridgeObjectRelease();
          swift_release();
          if (v144 < v141) {
            goto LABEL_216;
          }
          if (v142 > *((void *)v173 + 2)) {
            goto LABEL_217;
          }
          *(void *)v140 = v141;
          uint64_t v98 = v187;
          *(void *)&v187[16 * v139 + 8] = v144;
          unint64_t v147 = *((void *)v173 + 2);
          if (v142 >= v147) {
            goto LABEL_218;
          }
          uint64_t v13 = v173;
          uint64_t v175 = 0;
          unint64_t v96 = v147 - 1;
          memmove(v143, v143 + 16, 16 * (v147 - 1 - v142));
          *((void *)v173 + 2) = v147 - 1;
          uint64_t v97 = v180;
          uint64_t v11 = v170;
          if (v147 <= 2) {
            goto LABEL_193;
          }
        }
      }
      unint64_t v96 = 1;
LABEL_193:
      uint64_t v14 = v168;
      uint64_t v12 = v179;
      a3 = v97;
      if (v179 >= v168) {
        goto LABEL_197;
      }
      goto LABEL_13;
    }
    uint64_t v61 = v178;
    a3 = v180;
    if (!v176) {
      goto LABEL_244;
    }
    unint64_t v93 = *v183;
    unint64_t v62 = v183[1];
    unint64_t *v183 = v62;
    v183[1] = v93;
    uint64_t v64 = v183 - 1;
    uint64_t v63 = v186 + 1;
    if (v178 == v186 + 1) {
      goto LABEL_90;
    }
  }
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v183 = v64;
  uint64_t v186 = v63;
  if (!sub_1C2B749C0()) {
    goto LABEL_99;
  }
LABEL_94:
  if ((v62 & 0xC000000000000001) != 0)
  {
    id v67 = (id)MEMORY[0x1C8766C90](0, v62);
    goto LABEL_97;
  }
  if (*(void *)((v62 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v67 = *(id *)(v62 + 32);
LABEL_97:
    unint64_t v68 = v67;
    swift_bridgeObjectRelease();
    sub_1C2AFA550(&v197);
    swift_bridgeObjectRetain();
    sub_1C2AFB2B8((uint64_t)&v197);

    goto LABEL_102;
  }
  __break(1u);
LABEL_212:
  __break(1u);
LABEL_213:
  __break(1u);
LABEL_214:
  __break(1u);
LABEL_215:
  __break(1u);
LABEL_216:
  __break(1u);
LABEL_217:
  __break(1u);
LABEL_218:
  __break(1u);
LABEL_219:
  __break(1u);
LABEL_220:
  __break(1u);
LABEL_221:
  __break(1u);
LABEL_222:
  __break(1u);
LABEL_223:
  __break(1u);
LABEL_224:
  __break(1u);
LABEL_225:
  __break(1u);
LABEL_226:
  __break(1u);
LABEL_227:
  __break(1u);
LABEL_228:
  __break(1u);
LABEL_229:
  __break(1u);
LABEL_230:
  __break(1u);
LABEL_231:
  __break(1u);
LABEL_232:
  __break(1u);
LABEL_233:
  __break(1u);
LABEL_234:
  __break(1u);
LABEL_235:
  __break(1u);
LABEL_236:
  __break(1u);
LABEL_237:
  __break(1u);
LABEL_238:
  __break(1u);
LABEL_239:
  __break(1u);
LABEL_240:
  __break(1u);
LABEL_241:
  __break(1u);
LABEL_242:
  __break(1u);
LABEL_243:
  __break(1u);
LABEL_244:
  swift_release_n();
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_245:
  swift_release_n();
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_246:
  swift_release_n();
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_247:
  swift_release_n();
  swift_bridgeObjectRelease_n();
  __break(1u);
LABEL_248:
  swift_release_n();
  swift_bridgeObjectRelease_n();
  uint64_t result = sub_1C2B74980();
  __break(1u);
  return result;
}

uint64_t sub_1C2B0E530(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v8 = *a1;
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v8 = sub_1C2B24A44(v8);
  }
  uint64_t v9 = *(void *)(v8 + 16);
  v11[0] = v8 + 32;
  v11[1] = v9;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1C2B0CF44(v11, a2, a3, a4);
  swift_bridgeObjectRelease();
  swift_release();
  *a1 = v8;
  swift_release_n();
  return swift_bridgeObjectRelease_n();
}

unint64_t sub_1C2B0E624()
{
  unint64_t result = qword_1EA32BCD8;
  if (!qword_1EA32BCD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA32BCD8);
  }
  return result;
}

unint64_t sub_1C2B0E678()
{
  unint64_t result = qword_1EA32BCE0;
  if (!qword_1EA32BCE0)
  {
    sub_1C2B0E6F4(255, &qword_1EA32BCD0, MEMORY[0x1E4FBAF58], MEMORY[0x1E4FBBD80]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA32BCE0);
  }
  return result;
}

void sub_1C2B0E6F4(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1C2B0E740()
{
  uint64_t result = sub_1C2B73FA0();
  qword_1EBF10FD8 = result;
  unk_1EBF10FE0 = v1;
  return result;
}

uint64_t static NSUserDefaults.medicationsUserDefaultsDomain.getter()
{
  return sub_1C2AE0BB8(&qword_1EBF10FE8, &qword_1EBF10FD8);
}

uint64_t sub_1C2B0E798()
{
  uint64_t result = sub_1C2B0E7B8();
  qword_1EBF11008 = result;
  return result;
}

uint64_t sub_1C2B0E7B8()
{
  if (qword_1EBF10FE8 != -1) {
    swift_once();
  }
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1CB18]);
  swift_bridgeObjectRetain();
  uint64_t v1 = (void *)sub_1C2B73F60();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (v2) {
    return (uint64_t)v2;
  }
  sub_1C2B74820();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C2B740A0();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1C2B74990();
  __break(1u);
  return result;
}

uint64_t sub_1C2B0E910()
{
  uint64_t result = sub_1C2B73FA0();
  qword_1EBF11038 = result;
  unk_1EBF11040 = v1;
  return result;
}

uint64_t static NSUserDefaults.doseRemindersEnabledKey.getter()
{
  return sub_1C2AE0BB8(&qword_1EBF11048, &qword_1EBF11038);
}

uint64_t sub_1C2B0E968()
{
  uint64_t result = sub_1C2B73FA0();
  qword_1EBF11050 = result;
  *(void *)algn_1EBF11058 = v1;
  return result;
}

uint64_t static NSUserDefaults.followUpNotificationsEnabledKey.getter()
{
  return sub_1C2AE0BB8(&qword_1EBF11060, &qword_1EBF11050);
}

uint64_t sub_1C2B0E9C0()
{
  uint64_t result = sub_1C2B73FA0();
  qword_1EBF11068 = result;
  unk_1EBF11070 = v1;
  return result;
}

uint64_t static NSUserDefaults.didShowLifeStyleFactorsSelectionPageKey.getter()
{
  return sub_1C2AE0BB8(&qword_1EBF11078, &qword_1EBF11068);
}

uint64_t sub_1C2B0EA18()
{
  uint64_t result = sub_1C2B73FA0();
  qword_1EBF10FF0 = result;
  *(void *)algn_1EBF10FF8 = v1;
  return result;
}

uint64_t static NSUserDefaults.timeZoneExperienceEnabledKey.getter()
{
  return sub_1C2AE0BB8(&qword_1EBF11000, &qword_1EBF10FF0);
}

uint64_t sub_1C2B0EA70()
{
  uint64_t result = sub_1C2B73FA0();
  qword_1EBF11080 = result;
  unk_1EBF11088 = v1;
  return result;
}

uint64_t sub_1C2B0EAA0()
{
  uint64_t result = sub_1C2B73FA0();
  qword_1EBF0FED0 = result;
  *(void *)algn_1EBF0FED8 = v1;
  return result;
}

uint64_t static NSUserDefaults.didDismissFollowUpTipKey.getter()
{
  return sub_1C2AE0BB8(&qword_1EBF0FEE0, &qword_1EBF0FED0);
}

uint64_t sub_1C2B0EAF8()
{
  uint64_t result = sub_1C2B73FA0();
  qword_1EBF0FF20 = result;
  unk_1EBF0FF28 = v1;
  return result;
}

uint64_t static NSUserDefaults.scheduleCompatibilityTileDismissalDateKey.getter()
{
  return sub_1C2AE0BB8(&qword_1EBF0FF38, &qword_1EBF0FF20);
}

uint64_t sub_1C2B0EB50()
{
  uint64_t result = sub_1C2B73FA0();
  qword_1EBF0FF60 = result;
  *(void *)algn_1EBF0FF68 = v1;
  return result;
}

uint64_t static NSUserDefaults.scheduleCompatibilityLearnMoreOverrideURLKey.getter()
{
  return sub_1C2AE0BB8(&qword_1EBF0FF70, &qword_1EBF0FF60);
}

uint64_t sub_1C2B0EBA8()
{
  uint64_t result = sub_1C2B73FA0();
  qword_1EA32BCF0 = result;
  *(void *)algn_1EA32BCF8 = v1;
  return result;
}

uint64_t static NSUserDefaults.scheduleUnavailableHasShownFirstAppearanceKey.getter()
{
  return sub_1C2AE0BB8(&qword_1EA32B618, &qword_1EA32BCF0);
}

uint64_t sub_1C2B0EC00()
{
  uint64_t result = sub_1C2B73FA0();
  qword_1EA32BD00 = result;
  *(void *)algn_1EA32BD08 = v1;
  return result;
}

uint64_t static NSUserDefaults.scheduleUnavailableAcknowledgedMedicationIdentifiersKey.getter()
{
  return sub_1C2AE0BB8(&qword_1EA32B620, &qword_1EA32BD00);
}

uint64_t sub_1C2B0EC58()
{
  uint64_t result = sub_1C2B73FA0();
  qword_1EBF0FF08 = result;
  unk_1EBF0FF10 = v1;
  return result;
}

uint64_t static NSUserDefaults.medicationsCategoryRoomLastEnteredDateKey.getter()
{
  return sub_1C2AE0BB8(&qword_1EBF0FF18, &qword_1EBF0FF08);
}

uint64_t sub_1C2B0ECB0()
{
  uint64_t result = sub_1C2B73FA0();
  qword_1EBF11018 = result;
  unk_1EBF11020 = v1;
  return result;
}

uint64_t static NSUserDefaults.shardCheckOverrideKey.getter()
{
  return sub_1C2AE0BB8(&qword_1EBF11030, &qword_1EBF11018);
}

uint64_t sub_1C2B0ED08()
{
  uint64_t result = sub_1C2B73FA0();
  qword_1EBF0FF40 = result;
  unk_1EBF0FF48 = v1;
  return result;
}

uint64_t static NSUserDefaults.alwaysShowLifeStyleFactorsSelectionPageKey.getter()
{
  return sub_1C2AE0BB8(&qword_1EBF0FF58, &qword_1EBF0FF40);
}

uint64_t sub_1C2B0ED60()
{
  uint64_t result = sub_1C2B73FA0();
  qword_1EBF0FEE8 = result;
  *(void *)algn_1EBF0FEF0 = v1;
  return result;
}

uint64_t static NSUserDefaults.showMinorDrugInteractionsKey.getter()
{
  return sub_1C2AE0BB8(&qword_1EBF0FF00, &qword_1EBF0FEE8);
}

id MedicationDoseEvent.medicationDoseEvent.getter()
{
  return *(id *)(v0 + 16);
}

uint64_t sub_1C2B0EDC0@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C2B73CE0();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1C2B0EE40(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = v1;
  swift_retain();
  return sub_1C2B73CF0();
}

uint64_t sub_1C2B0EEB8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C2B73CE0();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1C2B0EF34()
{
  return swift_endAccess();
}

uint64_t sub_1C2B0EFC8(uint64_t a1)
{
  sub_1C2B10080(0, &qword_1EA32BD10, (uint64_t (*)(uint64_t))sub_1C2B0F224, MEMORY[0x1E4F1AC60]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v2);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v12 - v8;
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v10((char *)&v12 - v8, a1, v3);
  v10(v7, (uint64_t)v9, v3);
  swift_beginAccess();
  sub_1C2B10080(0, &qword_1EBF10770, (uint64_t (*)(uint64_t))sub_1C2B0F224, MEMORY[0x1E4F1AC70]);
  sub_1C2B73CD0();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, v3);
}

uint64_t sub_1C2B0F194()
{
  return swift_endAccess();
}

void sub_1C2B0F224()
{
  if (!qword_1EBF107E0)
  {
    sub_1C2AE3A18(255, (unint64_t *)&qword_1EBF112D0);
    unint64_t v0 = sub_1C2B74630();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBF107E0);
    }
  }
}

uint64_t MedicationDoseEvent.__allocating_init(_:medicationDetailProvider:medication:)(void *a1, uint64_t a2, void *a3)
{
  uint64_t v6 = swift_allocObject();
  MedicationDoseEvent.init(_:medicationDetailProvider:medication:)(a1, a2, a3);
  return v6;
}

uint64_t MedicationDoseEvent.init(_:medicationDetailProvider:medication:)(void *a1, uint64_t a2, void *a3)
{
  sub_1C2B10080(0, &qword_1EBF10770, (uint64_t (*)(uint64_t))sub_1C2B0F224, MEMORY[0x1E4F1AC70]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v20 - v10;
  uint64_t v12 = v3 + OBJC_IVAR____TtC27HealthMedicationsExperience19MedicationDoseEvent__medication;
  uint64_t v21 = 0;
  sub_1C2B0F224();
  sub_1C2B73CB0();
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v12, v11, v8);
  *(void *)(v3 + OBJC_IVAR____TtC27HealthMedicationsExperience19MedicationDoseEvent_medicationDetailProvider) = 0;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + OBJC_IVAR____TtC27HealthMedicationsExperience19MedicationDoseEvent_medicationDetailProvider) = a2;
  id v13 = a1;
  swift_retain();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v21 = a3;
  id v14 = a3;
  swift_retain();
  sub_1C2B73CF0();
  if (a2)
  {
    swift_retain();
    swift_retain();
    id v15 = objc_msgSend(v13, sel_medicationIdentifier);
    uint64_t v16 = sub_1C2B73FA0();
    uint64_t v18 = v17;

    sub_1C2B0FA3C(v3, v16, v18, a2, (uint64_t)&unk_1F1DFA648, (uint64_t)sub_1C2B10270, (uint64_t)&block_descriptor_25_0);
    swift_release();
    swift_bridgeObjectRelease();

    swift_release_n();
  }
  else
  {
  }
  return v3;
}

uint64_t sub_1C2B0F538(void *a1, uint64_t a2, uint64_t a3)
{
  id v7 = objc_msgSend(*(id *)(v3 + 16), sel_medicationIdentifier);
  uint64_t v8 = sub_1C2B73FA0();
  uint64_t v10 = v9;

  if (v8 == a2 && v10 == a3)
  {
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  char v12 = sub_1C2B74B50();
  uint64_t result = swift_bridgeObjectRelease();
  if (v12)
  {
LABEL_8:
    swift_getKeyPath();
    swift_getKeyPath();
    id v14 = a1;
    swift_retain();
    return sub_1C2B73CF0();
  }
  return result;
}

unint64_t sub_1C2B0F6AC()
{
  sub_1C2B74820();
  swift_bridgeObjectRelease();
  id v1 = *(id *)(v0 + 16);
  id v2 = objc_msgSend(v1, sel_description);
  sub_1C2B73FA0();

  sub_1C2B740A0();
  swift_bridgeObjectRelease();
  sub_1C2B740A0();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C2B73CE0();
  swift_release();
  swift_release();
  sub_1C2B0F224();
  sub_1C2B74010();
  sub_1C2B740A0();
  swift_bridgeObjectRelease();
  return 0xD000000000000015;
}

uint64_t MedicationDoseEvent.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC27HealthMedicationsExperience19MedicationDoseEvent__medication;
  sub_1C2B10080(0, &qword_1EBF10770, (uint64_t (*)(uint64_t))sub_1C2B0F224, MEMORY[0x1E4F1AC70]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return v0;
}

uint64_t MedicationDoseEvent.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC27HealthMedicationsExperience19MedicationDoseEvent__medication;
  sub_1C2B10080(0, &qword_1EBF10770, (uint64_t (*)(uint64_t))sub_1C2B0F224, MEMORY[0x1E4F1AC70]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return swift_deallocClassInstance();
}

unint64_t sub_1C2B0F9A0()
{
  return sub_1C2B0F6AC();
}

uint64_t sub_1C2B0F9C4@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for MedicationDoseEvent();
  uint64_t result = sub_1C2B73BB0();
  *a1 = result;
  return result;
}

uint64_t sub_1C2B0FA08()
{
  return _s27HealthMedicationsExperience19MedicationDoseEventC2eeoiySbAC_ACtFZ_0();
}

uint64_t sub_1C2B0FA14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2B0FA3C(a1, a2, a3, a4, (uint64_t)&unk_1F1DFA5F8, (uint64_t)sub_1C2B10120, (uint64_t)&block_descriptor_5);
}

uint64_t sub_1C2B0FA3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v23 = a6;
  uint64_t v24 = a7;
  uint64_t v22 = a2;
  uint64_t v10 = sub_1C2B73D90();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  id v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_1C2B73DC0();
  uint64_t v14 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = *(void *)(a4 + 72);
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  uint64_t v18 = (void *)swift_allocObject();
  uint64_t v19 = v22;
  void v18[2] = v17;
  v18[3] = v19;
  v18[4] = a3;
  v18[5] = a1;
  aBlock[4] = v23;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C2B12CDC;
  aBlock[3] = v24;
  uint64_t v20 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1C2B73DB0();
  uint64_t v27 = MEMORY[0x1E4FBC860];
  sub_1C2B10144();
  sub_1C2B10080(0, &qword_1EBF10B58, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1C2B1019C();
  sub_1C2B74700();
  MEMORY[0x1C8766990](0, v16, v13, v20);
  _Block_release(v20);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v26);
  swift_release();
  return swift_release();
}

uint64_t _s27HealthMedicationsExperience19MedicationDoseEventC2eeoiySbAC_ACtFZ_0()
{
  sub_1C2AE3A18(0, (unint64_t *)&qword_1EBF10810);
  if (sub_1C2B745F0())
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1C2B73CE0();
    swift_release();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1C2B73CE0();
    swift_release();
    swift_release();
    if (v3)
    {
      sub_1C2AE3A18(0, (unint64_t *)&qword_1EBF112D0);
      id v0 = v3;
      char v1 = sub_1C2B745F0();
    }
    else
    {
      char v1 = 1;
    }
  }
  else
  {
    char v1 = 0;
  }
  return v1 & 1;
}

uint64_t sub_1C2B0FE84()
{
  return MEMORY[0x1E4F1ABE8];
}

uint64_t sub_1C2B0FE98()
{
  return type metadata accessor for MedicationDoseEvent();
}

uint64_t type metadata accessor for MedicationDoseEvent()
{
  uint64_t result = qword_1EBF10708;
  if (!qword_1EBF10708) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C2B0FEEC()
{
  sub_1C2B10080(319, &qword_1EBF10770, (uint64_t (*)(uint64_t))sub_1C2B0F224, MEMORY[0x1E4F1AC70]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for MedicationDoseEvent(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationDoseEvent);
}

uint64_t dispatch thunk of MedicationDoseEvent.medication.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of MedicationDoseEvent.$medication.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of MedicationDoseEvent.__allocating_init(_:medicationDetailProvider:medication:)()
{
  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of MedicationDoseEvent.medicationDetailDidUpdate(_:for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of MedicationDoseEvent.description.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

void sub_1C2B10080(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C2B100E4()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C2B10120()
{
  return sub_1C2B4561C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

unint64_t sub_1C2B10144()
{
  unint64_t result = qword_1EBF10B50;
  if (!qword_1EBF10B50)
  {
    sub_1C2B73D90();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBF10B50);
  }
  return result;
}

unint64_t sub_1C2B1019C()
{
  unint64_t result = qword_1EBF10B60;
  if (!qword_1EBF10B60)
  {
    sub_1C2B10080(255, &qword_1EBF10B58, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBF10B60);
  }
  return result;
}

uint64_t objectdestroy_16Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

void *sub_1C2B1027C()
{
  char v1 = (void **)(v0 + OBJC_IVAR____TtC27HealthMedicationsExperience23MedicationFragmentLayer_color);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void sub_1C2B102CC(void *a1)
{
  sub_1C2B10CDC(a1);
}

void (*sub_1C2B10304(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1C2B10364;
}

void sub_1C2B10364(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v4 = (uint64_t *)(*(void *)(a1 + 24)
                   + OBJC_IVAR____TtC27HealthMedicationsExperience23MedicationFragmentLayer_fragment);
    uint64_t v5 = v4[1];
    if (v5)
    {
      uint64_t v6 = v4[2];
      uint64_t v7 = v4[3];
      uint64_t v8 = *v4;
      sub_1C2AE8858(v6, v7);
      sub_1C2B10DB8(v8, v5, v6, v7);
      sub_1C2B10E04(v8, v5, v6, v7);
      if (v7 != 1)
      {
        objc_msgSend(*(id *)(a1 + 24), sel_setNeedsDisplay);
        sub_1C2B027B4(v6, v7);
      }
    }
  }
}

char *MedicationFragmentLayer.__allocating_init(fragment:)(uint64_t *a1)
{
  id v3 = objc_allocWithZone(v1);
  return MedicationFragmentLayer.init(fragment:)(a1);
}

char *MedicationFragmentLayer.init(fragment:)(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  uint64_t v6 = &v1[OBJC_IVAR____TtC27HealthMedicationsExperience23MedicationFragmentLayer_fragment];
  *(_OWORD *)uint64_t v6 = 0u;
  *((_OWORD *)v6 + 1) = 0u;
  *(void *)&v1[OBJC_IVAR____TtC27HealthMedicationsExperience23MedicationFragmentLayer_color] = 0;
  v23.receiver = v1;
  v23.super_class = (Class)type metadata accessor for MedicationFragmentLayer();
  id v7 = objc_msgSendSuper2(&v23, sel_init);
  uint64_t v8 = self;
  id v9 = v7;
  id v10 = objc_msgSend(v8, sel_mainScreen);
  objc_msgSend(v10, sel_scale);
  double v12 = v11;

  objc_msgSend(v9, sel_setContentsScale_, v12);
  id v13 = (char *)v9;
  id v14 = objc_msgSend(v8, sel_mainScreen);
  objc_msgSend(v14, sel_scale);
  double v16 = v15;

  objc_msgSend(v13, sel_setRasterizationScale_, v16);
  objc_msgSend(v13, sel_setNeedsDisplayOnBoundsChange_, 1);

  uint64_t v17 = &v13[OBJC_IVAR____TtC27HealthMedicationsExperience23MedicationFragmentLayer_fragment];
  uint64_t v18 = *(void *)&v13[OBJC_IVAR____TtC27HealthMedicationsExperience23MedicationFragmentLayer_fragment];
  uint64_t v19 = *(void *)&v13[OBJC_IVAR____TtC27HealthMedicationsExperience23MedicationFragmentLayer_fragment + 8];
  uint64_t v20 = *(void *)&v13[OBJC_IVAR____TtC27HealthMedicationsExperience23MedicationFragmentLayer_fragment + 16];
  uint64_t v21 = *(void *)&v13[OBJC_IVAR____TtC27HealthMedicationsExperience23MedicationFragmentLayer_fragment + 24];
  *(void *)uint64_t v17 = v2;
  *((void *)v17 + 1) = v3;
  *((void *)v17 + 2) = v4;
  *((void *)v17 + 3) = v5;
  sub_1C2B10E04(v18, v19, v20, v21);
  return v13;
}

id MedicationFragmentLayer.__allocating_init(layer:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  __swift_project_boxed_opaque_existential_0(a1, a1[3]);
  id v4 = objc_msgSend(v3, sel_initWithLayer_, sub_1C2B74B40());
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v4;
}

char *MedicationFragmentLayer.init(layer:)(void *a1)
{
  id v3 = &v1[OBJC_IVAR____TtC27HealthMedicationsExperience23MedicationFragmentLayer_fragment];
  *(_OWORD *)id v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *(void *)&v1[OBJC_IVAR____TtC27HealthMedicationsExperience23MedicationFragmentLayer_color] = 0;
  __swift_project_boxed_opaque_existential_0(a1, a1[3]);
  uint64_t v4 = sub_1C2B74B40();
  v27.receiver = v1;
  v27.super_class = (Class)type metadata accessor for MedicationFragmentLayer();
  id v5 = objc_msgSendSuper2(&v27, sel_initWithLayer_, v4);
  swift_unknownObjectRelease();
  uint64_t v6 = self;
  id v7 = v5;
  id v8 = objc_msgSend(v6, sel_mainScreen);
  objc_msgSend(v8, sel_scale);
  double v10 = v9;

  objc_msgSend(v7, sel_setContentsScale_, v10);
  double v11 = (char *)v7;
  id v12 = objc_msgSend(v6, sel_mainScreen);
  objc_msgSend(v12, sel_scale);
  double v14 = v13;

  objc_msgSend(v11, sel_setRasterizationScale_, v14);
  objc_msgSend(v11, sel_setNeedsDisplayOnBoundsChange_, 1);

  sub_1C2AF4658((uint64_t)a1, (uint64_t)v26);
  if (swift_dynamicCast())
  {
    uint64_t v15 = *(void *)&v25[OBJC_IVAR____TtC27HealthMedicationsExperience23MedicationFragmentLayer_fragment];
    uint64_t v16 = *(void *)&v25[OBJC_IVAR____TtC27HealthMedicationsExperience23MedicationFragmentLayer_fragment + 8];
    uint64_t v17 = *(void *)&v25[OBJC_IVAR____TtC27HealthMedicationsExperience23MedicationFragmentLayer_fragment + 16];
    uint64_t v18 = *(void *)&v25[OBJC_IVAR____TtC27HealthMedicationsExperience23MedicationFragmentLayer_fragment + 24];
    sub_1C2B10DB8(v15, v16, v17, v18);

    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    if (v16)
    {
      uint64_t v19 = (uint64_t *)&v11[OBJC_IVAR____TtC27HealthMedicationsExperience23MedicationFragmentLayer_fragment];
      uint64_t v20 = *(void *)&v11[OBJC_IVAR____TtC27HealthMedicationsExperience23MedicationFragmentLayer_fragment];
      uint64_t v21 = *(void *)&v11[OBJC_IVAR____TtC27HealthMedicationsExperience23MedicationFragmentLayer_fragment + 8];
      uint64_t v22 = *(void *)&v11[OBJC_IVAR____TtC27HealthMedicationsExperience23MedicationFragmentLayer_fragment + 16];
      uint64_t v23 = *(void *)&v11[OBJC_IVAR____TtC27HealthMedicationsExperience23MedicationFragmentLayer_fragment + 24];
      *uint64_t v19 = v15;
      v19[1] = v16;
      v19[2] = v17;
      v19[3] = v18;
      sub_1C2B10E04(v20, v21, v22, v23);
    }
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v11;
}

void sub_1C2B1093C(CGContext *a1)
{
  UIGraphicsPushContext(a1);
  uint64_t v2 = (uint64_t *)&v1[OBJC_IVAR____TtC27HealthMedicationsExperience23MedicationFragmentLayer_fragment];
  uint64_t v3 = *(void *)&v1[OBJC_IVAR____TtC27HealthMedicationsExperience23MedicationFragmentLayer_fragment + 8];
  if (!v3) {
    goto LABEL_7;
  }
  uint64_t v4 = *v2;
  uint64_t v5 = v2[2];
  uint64_t v6 = v2[3];
  swift_bridgeObjectRetain();
  sub_1C2B10DB8(v4, v3, v5, v6);
  if (qword_1EBF10BD8 != -1) {
    swift_once();
  }
  id v7 = (id)qword_1EBF10BE8;
  id v8 = (void *)sub_1C2B73F60();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(self, sel_imageNamed_inBundle_withConfiguration_, v8, v7, 0);

  sub_1C2B10E04(v4, v3, v5, v6);
  if (v9)
  {
    objc_msgSend(v1, sel_bounds);
    objc_msgSend(v9, sel_drawInRect_);
    double v10 = (id *)&v1[OBJC_IVAR____TtC27HealthMedicationsExperience23MedicationFragmentLayer_color];
    swift_beginAccess();
    if (*v10)
    {
      id v11 = *v10;
      id v12 = objc_msgSend(v11, sel_colorWithAlphaComponent_, 0.85);
      objc_msgSend(v12, sel_setFill);

      objc_msgSend(v1, sel_bounds);
      UIRectFillUsingBlendMode(v14, kCGBlendModePlusDarker);
      objc_msgSend(v1, sel_bounds);
      objc_msgSend(v9, sel_drawInRect_blendMode_alpha_, 22);
    }
    else
    {
    }
  }
  else
  {
LABEL_7:
  }
  UIGraphicsPopContext();
}

id MedicationFragmentLayer.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void MedicationFragmentLayer.init()()
{
}

id MedicationFragmentLayer.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationFragmentLayer();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1C2B10CDC(void *a1)
{
  uint64_t v3 = (void **)&v1[OBJC_IVAR____TtC27HealthMedicationsExperience23MedicationFragmentLayer_color];
  swift_beginAccess();
  uint64_t v4 = *v3;
  char *v3 = a1;
  id v5 = a1;

  uint64_t v6 = (uint64_t *)&v1[OBJC_IVAR____TtC27HealthMedicationsExperience23MedicationFragmentLayer_fragment];
  uint64_t v7 = *(void *)&v1[OBJC_IVAR____TtC27HealthMedicationsExperience23MedicationFragmentLayer_fragment + 8];
  if (v7)
  {
    uint64_t v8 = v6[2];
    uint64_t v9 = v6[3];
    uint64_t v10 = *v6;
    sub_1C2AE8858(v8, v9);
    sub_1C2B10DB8(v10, v7, v8, v9);
    sub_1C2B10E04(v10, v7, v8, v9);
    if (v9 != 1)
    {
      objc_msgSend(v1, sel_setNeedsDisplay);
      sub_1C2B027B4(v8, v9);
    }
  }
}

void sub_1C2B10DB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_1C2AE8858(a3, a4);
  }
}

void sub_1C2B10E04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    sub_1C2B027B4(a3, a4);
  }
}

uint64_t type metadata accessor for MedicationFragmentLayer()
{
  return self;
}

id sub_1C2B10E74@<X0>(void *a1@<X0>, void **a2@<X8>)
{
  uint64_t v3 = (void **)(*a1 + OBJC_IVAR____TtC27HealthMedicationsExperience23MedicationFragmentLayer_color);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *a2 = *v3;
  return v4;
}

void sub_1C2B10ED8(id *a1)
{
  id v1 = *a1;
  id v2 = *a1;
  sub_1C2B10CDC(v1);
}

uint64_t method lookup function for MedicationFragmentLayer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationFragmentLayer);
}

uint64_t dispatch thunk of MedicationFragmentLayer.color.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of MedicationFragmentLayer.color.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of MedicationFragmentLayer.color.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of MedicationFragmentLayer.__allocating_init(fragment:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

void sub_1C2B10FF0(id *a1)
{
  id v1 = objc_msgSend(*a1, sel_startDate);
  sub_1C2B736E0();
}

uint64_t MedicationDoseDaySummary.loggedDoses.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MedicationDoseDaySummary.loggedDoses.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *id v1 = a1;
  return result;
}

uint64_t (*MedicationDoseDaySummary.loggedDoses.modify())()
{
  return nullsub_1;
}

uint64_t MedicationDoseDaySummary.scheduledDoses.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MedicationDoseDaySummary.scheduledDoses.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*MedicationDoseDaySummary.scheduledDoses.modify())()
{
  return nullsub_1;
}

uint64_t MedicationDoseDaySummary.hasSchedules.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t MedicationDoseDaySummary.hasSchedules.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 16) = result;
  return result;
}

uint64_t (*MedicationDoseDaySummary.hasSchedules.modify())()
{
  return nullsub_1;
}

uint64_t MedicationDoseDaySummary.initialDataLoaded.getter()
{
  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t MedicationDoseDaySummary.initialDataLoaded.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 17) = result;
  return result;
}

uint64_t (*MedicationDoseDaySummary.initialDataLoaded.modify())()
{
  return nullsub_1;
}

void sub_1C2B11158()
{
  qword_1EBF12FB0 = MEMORY[0x1E4FBC860];
  *(void *)algn_1EBF12FB8 = MEMORY[0x1E4FBC860];
  word_1EBF12FC0 = 0;
}

double sub_1C2B11174@<D0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C2B73CE0();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(unsigned char *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 17) = v5;
  return result;
}

uint64_t sub_1C2B11204(uint64_t a1, void **a2)
{
  id v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v3 = v2;
  return sub_1C2B73CF0();
}

uint64_t sub_1C2B112A4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C2B73CE0();
  swift_release();
  return swift_release();
}

uint64_t sub_1C2B11324()
{
  return swift_endAccess();
}

uint64_t sub_1C2B113A4(uint64_t a1)
{
  sub_1C2B193B4(0, &qword_1EA32BE00, MEMORY[0x1E4F1AC60]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v2);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v12 - v8;
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v10((char *)&v12 - v8, a1, v3);
  v10(v7, (uint64_t)v9, v3);
  swift_beginAccess();
  sub_1C2B193B4(0, &qword_1EBF10B38, MEMORY[0x1E4F1AC70]);
  sub_1C2B73CD0();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, v3);
}

uint64_t sub_1C2B11548()
{
  return swift_endAccess();
}

char *MedicationDoseDaySummaryProvider.__allocating_init(healthStore:date:medicationDetailProvider:)(void *a1, uint64_t a2, uint64_t a3)
{
  id v7 = objc_allocWithZone(v3);
  uint64_t v8 = sub_1C2B18674(a1, a2, a3);

  swift_release();
  return v8;
}

char *MedicationDoseDaySummaryProvider.init(healthStore:date:medicationDetailProvider:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_1C2B18674(a1, a2, a3);

  swift_release();
  return v4;
}

id MedicationDoseDaySummaryProvider.__deallocating_deinit()
{
  if (*(void *)&v0[OBJC_IVAR____TtC27HealthMedicationsExperience32MedicationDoseDaySummaryProvider_observerQuery]) {
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC27HealthMedicationsExperience32MedicationDoseDaySummaryProvider_healthStore], sel_stopQuery_);
  }
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationDoseDaySummaryProvider();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C2B11870(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C2B73710();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = v2 + OBJC_IVAR____TtC27HealthMedicationsExperience32MedicationDoseDaySummaryProvider_date;
  swift_beginAccess();
  uint64_t v9 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16);
  v9(v7, v8, v4);
  sub_1C2B18F2C((unint64_t *)&unk_1EA32BD28, MEMORY[0x1E4F27928]);
  char v10 = sub_1C2B73F50();
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  if ((v10 & 1) == 0)
  {
    if (*(void *)(v2 + OBJC_IVAR____TtC27HealthMedicationsExperience32MedicationDoseDaySummaryProvider_observerQuery)) {
      objc_msgSend(*(id *)(v2 + OBJC_IVAR____TtC27HealthMedicationsExperience32MedicationDoseDaySummaryProvider_healthStore), sel_stopQuery_);
    }
    v9(v7, a1, v4);
    swift_beginAccess();
    (*(void (**)(uint64_t, unsigned char *, uint64_t))(v5 + 40))(v8, v7, v4);
    swift_endAccess();
    return sub_1C2B11A60();
  }
  return result;
}

uint64_t sub_1C2B11A60()
{
  uint64_t v40 = sub_1C2B73870();
  uint64_t v1 = *(void *)(v40 - 8);
  MEMORY[0x1F4188790](v40);
  uint64_t v3 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C2B73710();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  id v11 = (char *)&v34 - v10;
  MEMORY[0x1F4188790](v9);
  double v13 = (char *)&v34 - v12;
  uint64_t v14 = v0 + OBJC_IVAR____TtC27HealthMedicationsExperience32MedicationDoseDaySummaryProvider_date;
  swift_beginAccess();
  id v35 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v35(v11, v14, v4);
  sub_1C2B73850();
  uint64_t v37 = v13;
  sub_1C2B737A0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v40);
  uint64_t v15 = *(void (**)(char *, uint64_t))(v5 + 8);
  v15(v11, v4);
  unint64_t v39 = v15;
  uint64_t v40 = v5 + 8;
  uint64_t v38 = v4;
  v35(v8, v14, v4);
  uint64_t v16 = v11;
  Date.endOfDay()(v11);
  v15(v8, v4);
  uint64_t v17 = self;
  uint64_t v18 = (void *)sub_1C2B736C0();
  uint64_t v19 = (void *)sub_1C2B736C0();
  id v20 = objc_msgSend(v17, sel_predicateForSamplesWithStartDate_endDate_options_, v18, v19, 0);

  uint64_t v21 = OBJC_IVAR____TtC27HealthMedicationsExperience32MedicationDoseDaySummaryProvider_doseEventPredicate;
  uint64_t v22 = v36;
  uint64_t v23 = *(void **)(v36
                 + OBJC_IVAR____TtC27HealthMedicationsExperience32MedicationDoseDaySummaryProvider_doseEventPredicate);
  *(void *)(v36 + OBJC_IVAR____TtC27HealthMedicationsExperience32MedicationDoseDaySummaryProvider_doseEventPredicate) = v20;

  id v24 = objc_msgSend(self, sel_medicationDoseEventType);
  uint64_t v25 = *(void *)(v22 + v21);
  uint64_t v26 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v27 = objc_allocWithZone(MEMORY[0x1E4F2B2C8]);
  aBlock[4] = sub_1C2B19588;
  aBlock[5] = v26;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C2B185A0;
  aBlock[3] = &block_descriptor_100;
  id v28 = _Block_copy(aBlock);
  swift_retain();
  id v29 = objc_msgSend(v27, sel_initWithSampleType_predicate_updateHandler_, v24, v25, v28);

  _Block_release(v28);
  swift_release();
  swift_release();
  objc_msgSend(*(id *)(v22 + OBJC_IVAR____TtC27HealthMedicationsExperience32MedicationDoseDaySummaryProvider_healthStore), sel_executeQuery_, v29);
  id v30 = *(void **)(v22 + OBJC_IVAR____TtC27HealthMedicationsExperience32MedicationDoseDaySummaryProvider_observerQuery);
  *(void *)(v22 + OBJC_IVAR____TtC27HealthMedicationsExperience32MedicationDoseDaySummaryProvider_observerQuery) = v29;

  uint64_t v31 = v38;
  uint64_t v32 = (uint64_t (*)(char *, uint64_t))v39;
  v39(v16, v38);
  return v32(v37, v31);
}

void sub_1C2B11E8C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  sub_1C2B19308(0, (unint64_t *)&unk_1EBF11290, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v29 - v8;
  swift_beginAccess();
  uint64_t v10 = MEMORY[0x1C8767AE0](a5 + 16);
  if (v10)
  {
    id v11 = (void *)v10;
    if (a4)
    {
      if (qword_1EBF11340 != -1) {
        swift_once();
      }
      uint64_t v12 = sub_1C2B73A90();
      __swift_project_value_buffer(v12, (uint64_t)qword_1EBF11348);
      id v13 = v11;
      id v14 = a4;
      id v15 = v13;
      id v16 = a4;
      uint64_t v17 = sub_1C2B73A80();
      os_log_type_t v18 = sub_1C2B744C0();
      if (os_log_type_enabled(v17, v18))
      {
        uint64_t v19 = swift_slowAlloc();
        id v20 = (void *)swift_slowAlloc();
        uint64_t v29 = swift_slowAlloc();
        uint64_t v30 = (uint64_t)v15;
        uint64_t v31 = v29;
        *(_DWORD *)uint64_t v19 = 138412546;
        id v21 = v15;
        sub_1C2B74650();
        *id v20 = v11;

        *(_WORD *)(v19 + 12) = 2080;
        uint64_t v30 = (uint64_t)a4;
        id v22 = a4;
        sub_1C2B19308(0, &qword_1EA32BDF8, (uint64_t (*)(uint64_t))sub_1C2AF44C8, MEMORY[0x1E4FBB718]);
        uint64_t v23 = sub_1C2B74010();
        uint64_t v30 = sub_1C2AEEE6C(v23, v24, &v31);
        sub_1C2B74650();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1C2ADB000, v17, v18, "[%@] Error fetching medication dose event samples HKObserverQuery returned error: %s", (uint8_t *)v19, 0x16u);
        sub_1C2B19074(0, (unint64_t *)&qword_1EA32BAF0, (unint64_t *)&qword_1EBF10810, 0x1E4FBA8A8, MEMORY[0x1E4FBB718]);
        swift_arrayDestroy();
        MEMORY[0x1C8767A10](v20, -1, -1);
        uint64_t v25 = v29;
        swift_arrayDestroy();
        MEMORY[0x1C8767A10](v25, -1, -1);
        MEMORY[0x1C8767A10](v19, -1, -1);
      }
      else
      {
      }
    }
    else
    {
      uint64_t v26 = sub_1C2B74310();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v9, 1, 1, v26);
      id v27 = (void *)swift_allocObject();
      v27[2] = 0;
      v27[3] = 0;
      v27[4] = v11;
      id v28 = v11;
      sub_1C2B12364((uint64_t)v9, (uint64_t)&unk_1EA32BE18, (uint64_t)v27);
      swift_release();

      sub_1C2B18F74((uint64_t)v9, (unint64_t *)&unk_1EBF11290, MEMORY[0x1E4FBCFE8]);
    }
  }
}

uint64_t sub_1C2B122A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v6;
  *uint64_t v6 = v4;
  v6[1] = sub_1C2AFA544;
  v6[234] = a4;
  v6[235] = swift_getObjectType();
  return MEMORY[0x1F4188298](sub_1C2B13EA4, 0, 0);
}

uint64_t sub_1C2B12364(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C2B19308(0, (unint64_t *)&unk_1EBF11290, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v16 - v7;
  sub_1C2B19404(a1, (uint64_t)v16 - v7);
  uint64_t v9 = sub_1C2B74310();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1C2B18F74((uint64_t)v8, (unint64_t *)&unk_1EBF11290, MEMORY[0x1E4FBCFE8]);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v11 = sub_1C2B742A0();
      uint64_t v13 = v12;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_1C2B74300();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v11 = 0;
  uint64_t v13 = 0;
LABEL_6:
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = a3;
  if (v13 | v11)
  {
    v16[0] = 0;
    v16[1] = 0;
    v16[2] = v11;
    v16[3] = v13;
  }
  return swift_task_create();
}

void sub_1C2B1258C()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC27HealthMedicationsExperience32MedicationDoseDaySummaryProvider_scheduleControl);
  uint64_t v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  *(void *)(v4 + 24) = ObjectType;
  v6[4] = sub_1C2B19300;
  v6[5] = v4;
  v6[0] = MEMORY[0x1E4F143A8];
  v6[1] = 1107296256;
  v6[2] = sub_1C2B12D20;
  v6[3] = &block_descriptor_85;
  uint64_t v5 = _Block_copy(v6);
  swift_release();
  objc_msgSend(v2, sel_fetchAllSchedulesWithCompletion_, v5);
  _Block_release(v5);
}

void sub_1C2B12694(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v33 = a4;
  uint64_t v7 = sub_1C2B73D90();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C2B73DC0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 && (swift_beginAccess(), (uint64_t v15 = MEMORY[0x1C8767AE0](a3 + 16)) != 0))
  {
    id v16 = (void *)v15;
    sub_1C2AE3A18(0, &qword_1EBF10BA8);
    swift_bridgeObjectRetain();
    uint64_t v17 = (void *)sub_1C2B74540();
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = v16;
    *(void *)(v18 + 24) = a1;
    aBlock[4] = (uint64_t)sub_1C2B193AC;
    aBlock[5] = v18;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1C2B12CDC;
    aBlock[3] = (uint64_t)&block_descriptor_91;
    uint64_t v19 = _Block_copy(aBlock);
    id v33 = v16;
    swift_release();
    sub_1C2B73DB0();
    aBlock[0] = MEMORY[0x1E4FBC860];
    sub_1C2B18F2C((unint64_t *)&qword_1EBF10B50, MEMORY[0x1E4FBCB00]);
    sub_1C2B19308(0, &qword_1EBF10B58, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
    sub_1C2B1019C();
    sub_1C2B74700();
    MEMORY[0x1C8766990](0, v14, v10, v19);
    _Block_release(v19);

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  else
  {
    if (qword_1EBF11340 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_1C2B73A90();
    __swift_project_value_buffer(v20, (uint64_t)qword_1EBF11348);
    id v21 = a2;
    id v22 = a2;
    uint64_t v23 = sub_1C2B73A80();
    os_log_type_t v24 = sub_1C2B744C0();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      aBlock[0] = v26;
      *(_DWORD *)uint64_t v25 = 136315394;
      uint64_t v27 = sub_1C2B74CD0();
      uint64_t v35 = sub_1C2AEEE6C(v27, v28, aBlock);
      sub_1C2B74650();
      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 12) = 2080;
      uint64_t v35 = (uint64_t)a2;
      id v29 = a2;
      sub_1C2B19308(0, &qword_1EA32BDF8, (uint64_t (*)(uint64_t))sub_1C2AF44C8, MEMORY[0x1E4FBB718]);
      uint64_t v30 = sub_1C2B74010();
      uint64_t v35 = sub_1C2AEEE6C(v30, v31, aBlock);
      sub_1C2B74650();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C2ADB000, v23, v24, "[%s] Could not load schedules with error: %s", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C8767A10](v26, -1, -1);
      MEMORY[0x1C8767A10](v25, -1, -1);
    }
    else
    {
    }
  }
}

uint64_t sub_1C2B12BC4(void *a1, unint64_t a2)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C2B73CE0();
  swift_release();
  swift_release();
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1C2B749C0();
    swift_bridgeObjectRelease();
  }
  swift_getKeyPath();
  swift_getKeyPath();
  id v4 = a1;
  return sub_1C2B73CF0();
}

uint64_t sub_1C2B12CDC(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_1C2B12D20(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1C2AE3A18(0, (unint64_t *)&qword_1EBF112A0);
    uint64_t v4 = sub_1C2B741D0();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2B12DC4()
{
  v1[2] = v0;
  sub_1C2B19074(0, &qword_1EBF11270, &qword_1EBF112D8, 0x1E4F2B420, MEMORY[0x1E4F29558]);
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C2B12EB0, 0, 0);
}

uint64_t sub_1C2B12EB0()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4F29540];
  sub_1C2B19258(0, (unint64_t *)&unk_1EBF11330, &qword_1EBF11268, MEMORY[0x1E4F29540]);
  sub_1C2B19074(0, &qword_1EBF11268, &qword_1EBF112D8, 0x1E4F2B420, v2);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C2B76500;
  id v3 = objc_msgSend(self, sel_medicationDoseEventType);
  uint64_t v4 = *(void **)(v1 + OBJC_IVAR____TtC27HealthMedicationsExperience32MedicationDoseDaySummaryProvider_doseEventPredicate);
  sub_1C2AE3A18(0, &qword_1EBF112D8);
  id v5 = v4;
  sub_1C2B73EA0();

  id v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4F26FC8];
  sub_1C2B19258(0, (unint64_t *)&unk_1EBF11320, &qword_1EBF110F8, MEMORY[0x1E4F26FC8]);
  sub_1C2B19074(0, &qword_1EBF110F8, &qword_1EBF112D8, 0x1E4F2B420, v6);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C2B76500;
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x1C87659D0](KeyPath, 0);
  sub_1C2B73EB0();
  uint64_t v8 = *(void *)(v1 + OBJC_IVAR____TtC27HealthMedicationsExperience32MedicationDoseDaySummaryProvider_healthStore);
  uint64_t v9 = (void *)swift_task_alloc();
  v0[6] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_1C2B131B0;
  uint64_t v10 = v0[3];
  return MEMORY[0x1F40E7850](v8, v10);
}

uint64_t sub_1C2B131B0(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 56) = v1;
  swift_task_dealloc();
  if (v1)
  {
    id v5 = sub_1C2B13398;
  }
  else
  {
    *(void *)(v4 + 64) = a1;
    id v5 = sub_1C2B132D8;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1C2B132D8()
{
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  uint64_t v3 = v0[3];
  uint64_t v4 = sub_1C2B5E424(v0[8]);
  swift_bridgeObjectRelease();
  if (v4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = MEMORY[0x1E4FBC860];
  }
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  id v6 = (uint64_t (*)(uint64_t))v0[1];
  return v6(v5);
}

uint64_t sub_1C2B13398()
{
  (*(void (**)(void, void))(v0[4] + 8))(v0[5], v0[3]);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1C2B13418()
{
  v1[14] = v0;
  sub_1C2B19308(0, (unint64_t *)&qword_1EBF11360, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  v1[15] = swift_task_alloc();
  v1[16] = swift_task_alloc();
  sub_1C2B19074(0, &qword_1EBF11260, (unint64_t *)&unk_1EBF112B0, 0x1E4F66B50, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for HKMedicationScheduleItemQueryDescriptor);
  v1[17] = v2;
  v1[18] = swift_task_alloc();
  v1[19] = swift_task_alloc();
  sub_1C2B19074(0, &qword_1EBF110F0, (unint64_t *)&unk_1EBF112B0, 0x1E4F66B50, MEMORY[0x1E4F26FC8]);
  v1[20] = v3;
  v1[21] = *(void *)(v3 - 8);
  v1[22] = swift_task_alloc();
  uint64_t v4 = sub_1C2B73870();
  v1[23] = v4;
  v1[24] = *(void *)(v4 - 8);
  v1[25] = swift_task_alloc();
  uint64_t v5 = sub_1C2B73710();
  v1[26] = v5;
  v1[27] = *(void *)(v5 - 8);
  v1[28] = swift_task_alloc();
  v1[29] = swift_task_alloc();
  v1[30] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C2B136B8, 0, 0);
}

uint64_t sub_1C2B136B8()
{
  uint64_t v1 = v0[29];
  uint64_t v2 = (void *)v0[27];
  uint64_t v27 = (char *)v0[28];
  uint64_t v3 = v0[25];
  uint64_t v4 = v0[26];
  uint64_t v5 = v0[24];
  uint64_t v17 = v0[23];
  uint64_t v18 = v0[30];
  uint64_t v28 = v0[22];
  uint64_t v22 = v0[20];
  uint64_t v23 = v0[18];
  uint64_t v19 = v0[15];
  uint64_t v20 = v0[21];
  uint64_t v24 = v0[14];
  uint64_t v25 = v0[19];
  uint64_t v6 = v24 + OBJC_IVAR____TtC27HealthMedicationsExperience32MedicationDoseDaySummaryProvider_date;
  id v21 = (int *)v0[17];
  uint64_t v26 = v0[16];
  swift_beginAccess();
  uint64_t v7 = (void (*)(uint64_t, uint64_t, uint64_t))v2[2];
  v7(v1, v6, v4);
  sub_1C2B73850();
  sub_1C2B737A0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v17);
  uint64_t v8 = (void (*)(uint64_t, uint64_t))v2[1];
  v0[31] = v8;
  v0[32] = (unint64_t)(v2 + 1) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v8(v1, v4);
  v7(v1, v6, v4);
  Date.endOfDay()(v27);
  v8(v1, v4);
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x1C87659D0](KeyPath, 0);
  v7(v26, v18, v4);
  uint64_t v10 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v2[7];
  v10(v26, 0, 1, v4);
  v7(v19, (uint64_t)v27, v4);
  v10(v19, 0, 1, v4);
  sub_1C2AF5EE8();
  unint64_t v11 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1C2B76500;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v20 + 16))(v12 + v11, v28, v22);
  v10(v23, 1, 1, v4);
  uint64_t v13 = v23 + v21[7];
  v10(v13, 1, 1, v4);
  uint64_t v14 = (void *)(v23 + v21[8]);
  *uint64_t v14 = 0;
  v14[1] = 0;
  uint64_t v15 = v21[9];
  *(void *)(v23 + v15) = 0;
  sub_1C2B73E80();
  sub_1C2AF5F6C(v26, v23);
  sub_1C2AF5F6C(v19, v13);
  swift_bridgeObjectRelease();
  *uint64_t v14 = 0;
  v14[1] = 0;
  swift_bridgeObjectRelease();
  *(void *)(v23 + v15) = v12;
  sub_1C2AF5FD0(v23, v25);
  v0[33] = *(void *)(v24 + OBJC_IVAR____TtC27HealthMedicationsExperience32MedicationDoseDaySummaryProvider_healthStore);
  return MEMORY[0x1F4188298](sub_1C2B13A04, 0, 0);
}

uint64_t sub_1C2B13A04()
{
  uint64_t v1 = (void *)v0[33];
  uint64_t v2 = v0[19];
  v0[2] = v0;
  v0[7] = v0 + 13;
  v0[3] = sub_1C2B13AB4;
  uint64_t v3 = swift_continuation_init();
  sub_1C2AF9278(v3, v2, v1);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1C2B13AB4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 272) = v2;
  if (v2)
  {
    swift_willThrow();
    uint64_t v3 = sub_1C2B13D08;
  }
  else
  {
    *(void *)(v1 + 280) = *(void *)(v1 + 104);
    uint64_t v3 = sub_1C2B13BD8;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1C2B13BD8()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[31];
  uint64_t v2 = v0[30];
  uint64_t v3 = v0[28];
  uint64_t v4 = v0[26];
  uint64_t v5 = v0[21];
  uint64_t v6 = v0[22];
  uint64_t v7 = v0[20];
  sub_1C2AF9648(v0[19]);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v6, v7);
  v1(v3, v4);
  v1(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v9 = v0[35];
  return v8(v9);
}

uint64_t sub_1C2B13D08()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[31];
  uint64_t v2 = v0[30];
  uint64_t v3 = v0[28];
  uint64_t v4 = v0[26];
  uint64_t v5 = v0[21];
  uint64_t v6 = v0[22];
  uint64_t v7 = v0[20];
  sub_1C2AF9648(v0[19]);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v6, v7);
  v1(v3, v4);
  v1(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1C2B13E34()
{
  *(void *)(v1 + 1872) = v0;
  *(void *)(v1 + 1880) = swift_getObjectType();
  return MEMORY[0x1F4188298](sub_1C2B13EA4, 0, 0);
}

uint64_t sub_1C2B13EA4()
{
  uint64_t v12 = v0;
  if (qword_1EBF11340 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1C2B73A90();
  v0[236] = __swift_project_value_buffer(v1, (uint64_t)qword_1EBF11348);
  uint64_t v2 = sub_1C2B73A80();
  os_log_type_t v3 = sub_1C2B744E0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    v11[0] = v5;
    *(_DWORD *)uint64_t v4 = 136446210;
    uint64_t v6 = sub_1C2B74CD0();
    v0[233] = sub_1C2AEEE6C(v6, v7, v11);
    sub_1C2B74650();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2ADB000, v2, v3, "[%{public}s] Aquiring database assertion", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C8767A10](v5, -1, -1);
    MEMORY[0x1C8767A10](v4, -1, -1);
  }

  uint64_t v8 = *(void **)(v0[234] + OBJC_IVAR____TtC27HealthMedicationsExperience32MedicationDoseDaySummaryProvider_healthStore);
  v11[0] = 0x6C7070612E6D6F63;
  v11[1] = 0xEA00000000002E65;
  sub_1C2B74CD0();
  sub_1C2B740A0();
  swift_bridgeObjectRelease();
  uint64_t v9 = sub_1C2B73F60();
  v0[237] = v9;
  swift_bridgeObjectRelease();
  v0[162] = v0;
  v0[167] = v0 + 185;
  v0[163] = sub_1C2B14170;
  v0[179] = swift_continuation_init();
  v0[175] = MEMORY[0x1E4F143A8];
  v0[176] = 0x40000000;
  v0[177] = sub_1C2B15AA4;
  v0[178] = &block_descriptor_46;
  objc_msgSend(v8, sel_requestDatabaseAccessibilityAssertion_timeout_completion_, v9, v0 + 175, 10.0);
  return MEMORY[0x1F41881E8](v0 + 162);
}

uint64_t sub_1C2B14170()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 1328);
  *(void *)(*(void *)v0 + 1904) = v1;
  if (v1) {
    uint64_t v2 = sub_1C2B14B58;
  }
  else {
    uint64_t v2 = sub_1C2B14280;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C2B14280()
{
  id v16 = v0;
  uint64_t v1 = (void *)v0[237];
  v0[239] = v0[185];

  uint64_t v2 = sub_1C2B73A80();
  os_log_type_t v3 = sub_1C2B744E0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    uint64_t v15 = v5;
    *(_DWORD *)uint64_t v4 = 136446210;
    uint64_t v6 = sub_1C2B74CD0();
    v0[227] = sub_1C2AEEE6C(v6, v7, &v15);
    sub_1C2B74650();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2ADB000, v2, v3, "[%{public}s] Took assertion and beginning query for underlying data.", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C8767A10](v5, -1, -1);
    MEMORY[0x1C8767A10](v4, -1, -1);
  }

  uint64_t v8 = (void *)v0[234];
  uint64_t v9 = swift_allocObject();
  v0[240] = v9;
  *(void *)(v9 + 16) = v8;
  id v10 = v8;
  swift_retain();
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB320];
  sub_1C2B19074(255, &qword_1EBF11278, &qword_1EBF110C0, 0x1E4F2B1F0, MEMORY[0x1E4FBB320]);
  swift_asyncLet_begin();
  uint64_t v12 = swift_allocObject();
  v0[241] = v12;
  *(void *)(v12 + 16) = v10;
  id v13 = v10;
  swift_retain();
  sub_1C2B19074(255, &qword_1EBF11280, (unint64_t *)&unk_1EBF112B0, 0x1E4F66B50, v11);
  swift_asyncLet_begin();
  return MEMORY[0x1F41881E0](v0 + 2, v0 + 197, sub_1C2B1453C, v0 + 210);
}

uint64_t sub_1C2B1453C()
{
  v1[242] = v0;
  if (v0)
  {
    return MEMORY[0x1F41881D0](v1 + 82, v1 + 191, sub_1C2B14E30, v1 + 198);
  }
  else
  {
    v1[243] = v1[197];
    swift_bridgeObjectRetain();
    return MEMORY[0x1F41881E0](v1 + 82, v1 + 191, sub_1C2B14608, v1 + 228);
  }
}

uint64_t sub_1C2B14608()
{
  v1[244] = v0;
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1C2B1522C, 0, 0);
  }
  else
  {
    uint64_t v2 = v1[191];
    v1[245] = v2;
    swift_bridgeObjectRetain();
    uint64_t v3 = (void *)swift_task_alloc();
    v1[246] = v3;
    void *v3 = v1;
    v3[1] = sub_1C2B14704;
    uint64_t v4 = v1[243];
    return sub_1C2B15C88(v4, v2);
  }
}

uint64_t sub_1C2B14704()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 1976) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return MEMORY[0x1F41881D0](v2 + 656, v2 + 1528, sub_1C2B156A8, v2 + 1536);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return MEMORY[0x1F4188298](sub_1C2B14884, 0, 0);
  }
}

uint64_t sub_1C2B14884()
{
  uint64_t v9 = v0;
  uint64_t v1 = sub_1C2B73A80();
  os_log_type_t v2 = sub_1C2B744E0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    uint64_t v8 = v4;
    *(_DWORD *)uint64_t v3 = 136446210;
    uint64_t v5 = sub_1C2B74CD0();
    *(void *)(v0 + 1768) = sub_1C2AEEE6C(v5, v6, &v8);
    sub_1C2B74650();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2ADB000, v1, v2, "[%{public}s] Finished query and update handler for underlying data. Invalidating assertion.", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C8767A10](v4, -1, -1);
    MEMORY[0x1C8767A10](v3, -1, -1);
  }

  objc_msgSend(*(id *)(v0 + 1912), sel_invalidate);
  return MEMORY[0x1F41881D0](v0 + 656, v0 + 1528, sub_1C2B14A24, v0 + 1440);
}

uint64_t sub_1C2B14A24()
{
  return MEMORY[0x1F4188298](sub_1C2B14A40, 0, 0);
}

uint64_t sub_1C2B14A40()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 16, v0 + 1576, sub_1C2B14AC0, v0 + 1360);
}

uint64_t sub_1C2B14AC0()
{
  return MEMORY[0x1F4188298](sub_1C2B14ADC, 0, 0);
}

uint64_t sub_1C2B14ADC()
{
  swift_release_n();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C2B14B58()
{
  uint64_t v22 = v0;
  uint64_t v1 = *(void **)(v0 + 1896);
  swift_willThrow();

  uint64_t v2 = *(void **)(v0 + 1904);
  id v3 = *(id *)(v0 + 1872);
  id v4 = v2;
  id v5 = v3;
  id v6 = v2;
  unint64_t v7 = sub_1C2B73A80();
  os_log_type_t v8 = sub_1C2B744C0();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = *(void **)(v0 + 1872);
    uint64_t v10 = swift_slowAlloc();
    log = v7;
    uint64_t v11 = (void *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    uint64_t v21 = v20;
    *(_DWORD *)uint64_t v10 = 138412546;
    *(void *)(v0 + 1720) = v9;
    id v12 = v9;
    sub_1C2B74650();
    void *v11 = v9;

    *(_WORD *)(v10 + 12) = 2080;
    *(void *)(v0 + 1672) = v2;
    id v13 = v2;
    sub_1C2AF44C8();
    uint64_t v14 = sub_1C2B74010();
    *(void *)(v0 + 1624) = sub_1C2AEEE6C(v14, v15, &v21);
    sub_1C2B74650();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C2ADB000, log, v8, "[%@] Error fetching medication dose data error: %s", (uint8_t *)v10, 0x16u);
    sub_1C2B19074(0, (unint64_t *)&qword_1EA32BAF0, (unint64_t *)&qword_1EBF10810, 0x1E4FBA8A8, MEMORY[0x1E4FBB718]);
    swift_arrayDestroy();
    MEMORY[0x1C8767A10](v11, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1C8767A10](v20, -1, -1);
    MEMORY[0x1C8767A10](v10, -1, -1);
  }
  else
  {
    id v16 = *(void **)(v0 + 1872);
  }
  sub_1C2B19064(0);
  sub_1C2B19064(0);
  uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
  return v17();
}

uint64_t sub_1C2B14E30()
{
  return MEMORY[0x1F4188298](sub_1C2B14E4C, 0, 0);
}

uint64_t sub_1C2B14E4C()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 16, v0 + 1576, sub_1C2B14ECC, v0 + 1776);
}

uint64_t sub_1C2B14ECC()
{
  return MEMORY[0x1F4188298](sub_1C2B14EE8, 0, 0);
}

uint64_t sub_1C2B14EE8()
{
  uint64_t v21 = v0;

  swift_release();
  uint64_t v1 = *(void **)(v0 + 1936);
  id v2 = *(id *)(v0 + 1872);
  id v3 = v1;
  id v4 = v2;
  id v5 = v1;
  id v6 = sub_1C2B73A80();
  os_log_type_t v7 = sub_1C2B744C0();
  if (os_log_type_enabled(v6, v7))
  {
    os_log_type_t v8 = *(void **)(v0 + 1872);
    uint64_t v9 = swift_slowAlloc();
    log = v6;
    uint64_t v10 = (void *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    uint64_t v20 = v19;
    *(_DWORD *)uint64_t v9 = 138412546;
    *(void *)(v0 + 1720) = v8;
    id v11 = v8;
    sub_1C2B74650();
    *uint64_t v10 = v8;

    *(_WORD *)(v9 + 12) = 2080;
    *(void *)(v0 + 1672) = v1;
    id v12 = v1;
    sub_1C2AF44C8();
    uint64_t v13 = sub_1C2B74010();
    *(void *)(v0 + 1624) = sub_1C2AEEE6C(v13, v14, &v20);
    sub_1C2B74650();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C2ADB000, log, v7, "[%@] Error fetching medication dose data error: %s", (uint8_t *)v9, 0x16u);
    sub_1C2B19074(0, (unint64_t *)&qword_1EA32BAF0, (unint64_t *)&qword_1EBF10810, 0x1E4FBA8A8, MEMORY[0x1E4FBB718]);
    swift_arrayDestroy();
    MEMORY[0x1C8767A10](v10, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1C8767A10](v19, -1, -1);
    MEMORY[0x1C8767A10](v9, -1, -1);

    sub_1C2B19064((uint64_t)&unk_1EA32BDE0);
  }
  else
  {
    unint64_t v15 = *(void **)(v0 + 1872);

    sub_1C2B19064((uint64_t)&unk_1EA32BDE0);
  }
  sub_1C2B19064((uint64_t)&unk_1EA32BDF0);
  id v16 = *(uint64_t (**)(void))(v0 + 8);
  return v16();
}

uint64_t sub_1C2B1522C()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F41881D0](v0 + 656, v0 + 1528, sub_1C2B152AC, v0 + 1728);
}

uint64_t sub_1C2B152AC()
{
  return MEMORY[0x1F4188298](sub_1C2B152C8, 0, 0);
}

uint64_t sub_1C2B152C8()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 16, v0 + 1576, sub_1C2B15348, v0 + 1632);
}

uint64_t sub_1C2B15348()
{
  return MEMORY[0x1F4188298](sub_1C2B15364, 0, 0);
}

uint64_t sub_1C2B15364()
{
  uint64_t v21 = v0;

  swift_release();
  uint64_t v1 = *(void **)(v0 + 1952);
  id v2 = *(id *)(v0 + 1872);
  id v3 = v1;
  id v4 = v2;
  id v5 = v1;
  id v6 = sub_1C2B73A80();
  os_log_type_t v7 = sub_1C2B744C0();
  if (os_log_type_enabled(v6, v7))
  {
    os_log_type_t v8 = *(void **)(v0 + 1872);
    uint64_t v9 = swift_slowAlloc();
    log = v6;
    uint64_t v10 = (void *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    uint64_t v20 = v19;
    *(_DWORD *)uint64_t v9 = 138412546;
    *(void *)(v0 + 1720) = v8;
    id v11 = v8;
    sub_1C2B74650();
    *uint64_t v10 = v8;

    *(_WORD *)(v9 + 12) = 2080;
    *(void *)(v0 + 1672) = v1;
    id v12 = v1;
    sub_1C2AF44C8();
    uint64_t v13 = sub_1C2B74010();
    *(void *)(v0 + 1624) = sub_1C2AEEE6C(v13, v14, &v20);
    sub_1C2B74650();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C2ADB000, log, v7, "[%@] Error fetching medication dose data error: %s", (uint8_t *)v9, 0x16u);
    sub_1C2B19074(0, (unint64_t *)&qword_1EA32BAF0, (unint64_t *)&qword_1EBF10810, 0x1E4FBA8A8, MEMORY[0x1E4FBB718]);
    swift_arrayDestroy();
    MEMORY[0x1C8767A10](v10, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1C8767A10](v19, -1, -1);
    MEMORY[0x1C8767A10](v9, -1, -1);

    sub_1C2B19064((uint64_t)&unk_1EA32BDE0);
  }
  else
  {
    unint64_t v15 = *(void **)(v0 + 1872);

    sub_1C2B19064((uint64_t)&unk_1EA32BDE0);
  }
  sub_1C2B19064((uint64_t)&unk_1EA32BDF0);
  id v16 = *(uint64_t (**)(void))(v0 + 8);
  return v16();
}

uint64_t sub_1C2B156A8()
{
  return MEMORY[0x1F4188298](sub_1C2B156C4, 0, 0);
}

uint64_t sub_1C2B156C4()
{
  swift_release();
  return MEMORY[0x1F41881D0](v0 + 16, v0 + 1576, sub_1C2B15744, v0 + 1488);
}

uint64_t sub_1C2B15744()
{
  return MEMORY[0x1F4188298](sub_1C2B15760, 0, 0);
}

uint64_t sub_1C2B15760()
{
  uint64_t v21 = v0;

  swift_release();
  uint64_t v1 = *(void **)(v0 + 1976);
  id v2 = *(id *)(v0 + 1872);
  id v3 = v1;
  id v4 = v2;
  id v5 = v1;
  id v6 = sub_1C2B73A80();
  os_log_type_t v7 = sub_1C2B744C0();
  if (os_log_type_enabled(v6, v7))
  {
    os_log_type_t v8 = *(void **)(v0 + 1872);
    uint64_t v9 = swift_slowAlloc();
    log = v6;
    uint64_t v10 = (void *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    uint64_t v20 = v19;
    *(_DWORD *)uint64_t v9 = 138412546;
    *(void *)(v0 + 1720) = v8;
    id v11 = v8;
    sub_1C2B74650();
    *uint64_t v10 = v8;

    *(_WORD *)(v9 + 12) = 2080;
    *(void *)(v0 + 1672) = v1;
    id v12 = v1;
    sub_1C2AF44C8();
    uint64_t v13 = sub_1C2B74010();
    *(void *)(v0 + 1624) = sub_1C2AEEE6C(v13, v14, &v20);
    sub_1C2B74650();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C2ADB000, log, v7, "[%@] Error fetching medication dose data error: %s", (uint8_t *)v9, 0x16u);
    sub_1C2B19074(0, (unint64_t *)&qword_1EA32BAF0, (unint64_t *)&qword_1EBF10810, 0x1E4FBA8A8, MEMORY[0x1E4FBB718]);
    swift_arrayDestroy();
    MEMORY[0x1C8767A10](v10, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1C8767A10](v19, -1, -1);
    MEMORY[0x1C8767A10](v9, -1, -1);

    sub_1C2B19064((uint64_t)&unk_1EA32BDE0);
  }
  else
  {
    unint64_t v15 = *(void **)(v0 + 1872);

    sub_1C2B19064((uint64_t)&unk_1EA32BDE0);
  }
  sub_1C2B19064((uint64_t)&unk_1EA32BDF0);
  id v16 = *(uint64_t (**)(void))(v0 + 8);
  return v16();
}

uint64_t sub_1C2B15AA4(uint64_t result, void *a2, void *a3)
{
  if (a3)
  {
    sub_1C2AF44C8();
    swift_allocError();
    *id v4 = a3;
    id v5 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else if (a2)
  {
    **(void **)(*(void *)(*(void *)(result + 32) + 64) + 40) = a2;
    id v6 = a2;
    return swift_continuation_throwingResume();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C2B15B60(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  id v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *id v2 = v1;
  v2[1] = sub_1C2AF87FC;
  return sub_1C2B12DC4();
}

uint64_t sub_1C2B15BF4(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  id v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *id v2 = v1;
  v2[1] = sub_1C2AF8600;
  return sub_1C2B13418();
}

uint64_t sub_1C2B15C88(uint64_t a1, uint64_t a2)
{
  v3[33] = a2;
  v3[34] = v2;
  v3[32] = a1;
  sub_1C2B19308(0, (unint64_t *)&qword_1EBF11360, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  v3[35] = swift_task_alloc();
  uint64_t v4 = sub_1C2B73710();
  v3[36] = v4;
  v3[37] = *(void *)(v4 - 8);
  v3[38] = swift_task_alloc();
  v3[39] = swift_task_alloc();
  uint64_t v5 = sub_1C2B73D90();
  v3[40] = v5;
  v3[41] = *(void *)(v5 - 8);
  v3[42] = swift_task_alloc();
  uint64_t v6 = sub_1C2B73DC0();
  v3[43] = v6;
  v3[44] = *(void *)(v6 - 8);
  v3[45] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C2B15E70, 0, 0);
}

void sub_1C2B15E70()
{
  uint64_t v1 = MEMORY[0x1E4FBC860];
  v0[27] = MEMORY[0x1E4FBC860];
  unint64_t v2 = v0[32];
  v0[30] = v1;
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1C2B749C0();
    v0[46] = v11;
    if (v11)
    {
LABEL_3:
      uint64_t v4 = v0[32];
      v0[47] = *(void *)(v0[34]
                         + OBJC_IVAR____TtC27HealthMedicationsExperience32MedicationDoseDaySummaryProvider_medicationDetailProvider);
      v0[48] = v1;
      if ((v4 & 0xC000000000000001) != 0) {
        id v5 = (id)MEMORY[0x1C8766C90](0);
      }
      else {
        id v5 = *(id *)(v4 + 32);
      }
      v0[49] = v5;
      v0[50] = 1;
      id v6 = objc_msgSend(v5, sel_medicationIdentifier);
      uint64_t v7 = sub_1C2B73FA0();
      uint64_t v9 = v8;

      v0[51] = v9;
      uint64_t v10 = (void *)swift_task_alloc();
      v0[52] = v10;
      *uint64_t v10 = v0;
      v10[1] = sub_1C2B164DC;
LABEL_7:
      sub_1C2B43470(v7, v9);
      return;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    v0[46] = v3;
    if (v3) {
      goto LABEL_3;
    }
  }
  swift_bridgeObjectRelease();
  v0[55] = v1;
  unint64_t v12 = v0[33];
  if (v12 >> 62)
  {
LABEL_31:
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_1C2B749C0();
    v0[56] = v33;
    if (v33) {
      goto LABEL_13;
    }
LABEL_32:
    uint64_t v34 = v0[45];
    uint64_t v35 = v0[42];
    uint64_t v45 = v0[44];
    uint64_t v46 = v0[43];
    uint64_t v37 = v0[40];
    uint64_t v36 = v0[41];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C2AE3A18(0, &qword_1EBF10BA8);
    uint64_t v44 = (void *)sub_1C2B74540();
    uint64_t v38 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v39 = v0[30];
    uint64_t v40 = v0[27];
    uint64_t v41 = (void *)swift_allocObject();
    v41[2] = v38;
    v41[3] = v39;
    v41[4] = v40;
    v0[6] = sub_1C2B18F08;
    v0[7] = v41;
    v0[2] = MEMORY[0x1E4F143A8];
    v0[3] = 1107296256;
    v0[4] = sub_1C2B12CDC;
    v0[5] = &block_descriptor_6;
    id v42 = _Block_copy(v0 + 2);
    swift_retain();
    sub_1C2B73DB0();
    v0[28] = v1;
    sub_1C2B18F2C((unint64_t *)&qword_1EBF10B50, MEMORY[0x1E4FBCB00]);
    sub_1C2B19308(0, &qword_1EBF10B58, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
    sub_1C2B1019C();
    sub_1C2B74700();
    MEMORY[0x1C8766990](0, v34, v35, v42);
    _Block_release(v42);

    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v35, v37);
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v34, v46);
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v43 = (void (*)(void))v0[1];
    v43();
    return;
  }
  uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v0[56] = v13;
  if (!v13) {
    goto LABEL_32;
  }
LABEL_13:
  unint64_t v14 = 0;
  v0[57] = OBJC_IVAR____TtC27HealthMedicationsExperience32MedicationDoseDaySummaryProvider_medicationDetailProvider;
  while (1)
  {
    uint64_t v15 = v0[33];
    if ((v15 & 0xC000000000000001) != 0)
    {
      id v16 = (id)MEMORY[0x1C8766C90](v14);
    }
    else
    {
      if (v14 >= *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_30;
      }
      id v16 = *(id *)(v15 + 8 * v14 + 32);
    }
    uint64_t v17 = v16;
    v0[58] = v16;
    v0[59] = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
    id v18 = objc_msgSend(v16, sel_identifier);
    uint64_t v19 = sub_1C2B73FA0();
    uint64_t v21 = v20;

    v0[60] = v19;
    v0[61] = v21;
    id v22 = objc_msgSend(v17, sel_doses);
    sub_1C2AE3A18(0, (unint64_t *)&unk_1EBF112C0);
    unint64_t v23 = sub_1C2B741D0();
    v0[62] = v23;

    if (v23 >> 62) {
      break;
    }
    uint64_t v24 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v0[63] = v24;
    if (v24) {
      goto LABEL_24;
    }
LABEL_21:
    uint64_t v25 = v0[59];
    uint64_t v26 = v0[56];

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v25 == v26) {
      goto LABEL_32;
    }
    unint64_t v14 = v0[59];
  }
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_1C2B749C0();
  swift_bridgeObjectRelease();
  v0[63] = v27;
  if (!v27) {
    goto LABEL_21;
  }
LABEL_24:
  v0[64] = *(void *)(v0[34] + v0[57]);
  uint64_t v28 = v0[62];
  if ((v28 & 0xC000000000000001) != 0)
  {
    id v29 = (id)MEMORY[0x1C8766C90](0);
LABEL_28:
    v0[65] = v29;
    v0[66] = 1;
    id v30 = objc_msgSend(v29, sel_medicationIdentifier);
    uint64_t v7 = sub_1C2B73FA0();
    uint64_t v9 = v31;

    v0[67] = v9;
    uint64_t v32 = (void *)swift_task_alloc();
    v0[68] = v32;
    *uint64_t v32 = v0;
    v32[1] = sub_1C2B174C0;
    goto LABEL_7;
  }
  if (*(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v29 = *(id *)(v28 + 32);
    goto LABEL_28;
  }
  __break(1u);
}

uint64_t sub_1C2B164DC(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 424) = a1;
  *(void *)(v3 + 432) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_1C2B17EF8;
  }
  else
  {
    uint64_t v4 = sub_1C2B16630;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

uint64_t sub_1C2B16630()
{
  uint64_t v1 = (void *)v0[53];
  if (!v1)
  {
    uint64_t v28 = (void *)v0[48];
    goto LABEL_15;
  }
  if (objc_msgSend((id)v0[49], sel_status) == (id)4 || objc_msgSend((id)v0[49], sel_status) == (id)5)
  {
    unint64_t v2 = (void *)v0[49];
    uint64_t v3 = v0[47];
    uint64_t v117 = (void (**)(void, void))v0[44];
    uint64_t v119 = v0[43];
    uint64_t v108 = v0[45];
    uint64_t v114 = v0[41];
    uint64_t v110 = v0[42];
    uint64_t v111 = v0[40];
    type metadata accessor for MedicationDose();
    uint64_t v4 = swift_allocObject();
    uint64_t v5 = OBJC_IVAR____TtC27HealthMedicationsExperience14MedicationDose_medicationDetailProvider;
    *(void *)(v4 + OBJC_IVAR____TtC27HealthMedicationsExperience14MedicationDose_medicationDetailProvider) = 0;
    *(void *)(v4 + 16) = v2;
    *(void *)(v4 + 24) = 0;
    *(unsigned char *)(v4 + 32) = 0;
    *(void *)(v4 + v5) = v3;
    id v6 = v2;
    swift_retain_n();
    id v7 = v6;
    BOOL v121 = v1;
    id v8 = v1;
    swift_release();
    swift_beginAccess();
    v0[29] = v8;
    sub_1C2AE3A18(0, (unint64_t *)&qword_1EBF112D0);
    id v109 = v8;
    sub_1C2B73CB0();
    swift_endAccess();
    id v9 = v7;
    swift_retain();
    swift_retain();
    id v10 = objc_msgSend(v9, sel_medicationIdentifier);
    uint64_t v11 = sub_1C2B73FA0();
    uint64_t v13 = v12;

    uint64_t v14 = swift_allocObject();
    swift_weakInit();
    uint64_t v15 = (void *)swift_allocObject();
    v15[2] = v14;
    v15[3] = v11;
    v15[4] = v13;
    v15[5] = v4;
    v0[12] = sub_1C2B10120;
    v0[13] = v15;
    v0[8] = MEMORY[0x1E4F143A8];
    v0[9] = 1107296256;
    v0[10] = sub_1C2B12CDC;
    v0[11] = &block_descriptor_45;
    id v16 = _Block_copy(v0 + 8);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1C2B73DB0();
    v0[31] = MEMORY[0x1E4FBC860];
    sub_1C2B18F2C((unint64_t *)&qword_1EBF10B50, MEMORY[0x1E4FBCB00]);
    sub_1C2B19308(0, &qword_1EBF10B58, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
    sub_1C2B1019C();
    sub_1C2B74700();
    MEMORY[0x1C8766990](0, v108, v110, v16);
    _Block_release(v16);
    (*(void (**)(uint64_t, uint64_t))(v114 + 8))(v110, v111);
    v117[1](v108, v119);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release_n();

    swift_release();
    uint64_t v17 = swift_release();
    MEMORY[0x1C87665F0](v17);
    if (*(void *)((v0[30] & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v0[30] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    {
LABEL_5:
      sub_1C2B74250();
      sub_1C2B741F0();
      uint64_t v1 = v121;
      goto LABEL_6;
    }
LABEL_58:
    sub_1C2B74210();
    goto LABEL_5;
  }
  id v60 = objc_msgSend((id)v0[49], sel_scheduleItemIdentifier);
  if (!v60) {
    goto LABEL_6;
  }
  uint64_t v61 = v60;
  unint64_t v62 = (void *)v0[49];
  uint64_t v63 = sub_1C2B73FA0();
  uint64_t v65 = v64;

  id v66 = objc_msgSend(v62, sel_scheduledDate);
  if (!v66)
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(v0[37] + 56))(v0[35], 1, 1, v0[36]);
    goto LABEL_49;
  }
  id v67 = v66;
  uint64_t v120 = v63;
  BOOL v121 = v1;
  uint64_t v69 = v0[37];
  uint64_t v68 = v0[38];
  uint64_t v71 = v0[35];
  uint64_t v70 = v0[36];
  sub_1C2B736E0();

  id v72 = *(void (**)(uint64_t, uint64_t, uint64_t))(v69 + 32);
  v72(v71, v68, v70);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v69 + 56))(v71, 0, 1, v70);
  int v73 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v69 + 48))(v71, 1, v70);
  uint64_t v1 = v121;
  if (v73 == 1)
  {
LABEL_49:
    uint64_t v96 = v0[35];
    swift_bridgeObjectRelease();
    sub_1C2B18F74(v96, (unint64_t *)&qword_1EBF11360, MEMORY[0x1E4F27928]);
    goto LABEL_6;
  }
  id v74 = (void *)v0[49];
  v72(v0[39], v0[35], v0[36]);
  id v75 = objc_msgSend(v74, sel_scheduledDoseQuantity);
  if (v75)
  {
    uint64_t v76 = (void (**)(void, void))v75;
    id v77 = (void *)v0[49];
    uint64_t v115 = v0[47];
    uint64_t v78 = v0[38];
    uint64_t v79 = v0[36];
    (*(void (**)(uint64_t, void, uint64_t))(v0[37] + 16))(v78, v0[39], v79);
    id v80 = objc_msgSend(v77, sel_medicationIdentifier);
    uint64_t v81 = sub_1C2B73FA0();
    uint64_t v112 = v82;

    sub_1C2B74360();
    uint64_t v84 = v83;
    uint64_t v117 = v76;
    LOBYTE(v76) = objc_msgSend(v77, sel_isLastScheduledDose);
    type metadata accessor for ScheduleItem();
    uint64_t v85 = swift_allocObject();
    *(void *)(v85 + 16) = v120;
    *(void *)(v85 + 24) = v65;
    v72(v85 + OBJC_IVAR____TtC27HealthMedicationsExperience12ScheduleItem_date, v78, v79);
    unint64_t v86 = (uint64_t *)(v85 + OBJC_IVAR____TtC27HealthMedicationsExperience12ScheduleItem_medicationIdentifier);
    *unint64_t v86 = v81;
    v86[1] = v112;
    *(void *)(v85 + OBJC_IVAR____TtC27HealthMedicationsExperience12ScheduleItem_doseAmount) = v84;
    *(unsigned char *)(v85 + OBJC_IVAR____TtC27HealthMedicationsExperience12ScheduleItem_isLastScheduledDose) = (_BYTE)v76;
    v0[17] = v85;
    v0[18] = v77;
    *((unsigned char *)v0 + 152) = 1;
    type metadata accessor for MedicationDose();
    swift_allocObject();
    id v87 = v77;
    uint64_t v1 = v121;
    swift_retain();
    id v88 = v121;
    swift_retain();
    MedicationDose.init(_:medicationDetailProvider:medication:)((char **)v0 + 17, v115, v88);
    MEMORY[0x1C87665F0]();
    if (*(void *)((v0[27] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v0[27] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_60;
    }
    goto LABEL_41;
  }
  (*(void (**)(void, void))(v0[37] + 8))(v0[39], v0[36]);
  swift_bridgeObjectRelease();
LABEL_6:
  id v18 = objc_msgSend((id)v0[49], sel_scheduleItemIdentifier);
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v20 = (void *)v0[49];
    uint64_t v21 = sub_1C2B73FA0();
    uint64_t v23 = v22;

    v0[25] = v21;
    v0[26] = v23;
    sub_1C2B740A0();
    id v24 = objc_msgSend(v20, sel_medicationIdentifier);
    sub_1C2B73FA0();

    sub_1C2B740A0();
    swift_bridgeObjectRelease();
    uint64_t v25 = v0[25];
    uint64_t v26 = v0[26];
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v28 = (void *)v0[48];
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v28 = sub_1C2AE08C0(0, v28[2] + 1, 1, (void *)v0[48]);
    }
    unint64_t v30 = v28[2];
    unint64_t v29 = v28[3];
    if (v30 >= v29 >> 1) {
      uint64_t v28 = sub_1C2AE08C0((void *)(v29 > 1), v30 + 1, 1, v28);
    }
    v28[2] = v30 + 1;
    uint64_t v31 = &v28[2 * v30];
    v31[4] = v25;
    v31[5] = v26;
  }
  else
  {
    uint64_t v28 = (void *)v0[48];
  }

LABEL_15:
  uint64_t v32 = v0[50];
  uint64_t v33 = v0[46];

  if (v32 == v33)
  {
    swift_bridgeObjectRelease();
    v0[55] = v28;
    unint64_t v34 = v0[33];
    if (v34 >> 62)
    {
LABEL_53:
      swift_bridgeObjectRetain();
      uint64_t v97 = sub_1C2B749C0();
      v0[56] = v97;
      if (v97) {
        goto LABEL_18;
      }
    }
    else
    {
      uint64_t v35 = *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      v0[56] = v35;
      if (v35)
      {
LABEL_18:
        unint64_t v36 = 0;
        v0[57] = OBJC_IVAR____TtC27HealthMedicationsExperience32MedicationDoseDaySummaryProvider_medicationDetailProvider;
        uint64_t v1 = &block_descriptor_0;
        while (1)
        {
          uint64_t v37 = v0[33];
          if ((v37 & 0xC000000000000001) != 0)
          {
            id v38 = (id)MEMORY[0x1C8766C90](v36);
          }
          else
          {
            if (v36 >= *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_52;
            }
            id v38 = *(id *)(v37 + 8 * v36 + 32);
          }
          uint64_t v39 = v38;
          v0[58] = v38;
          v0[59] = v36 + 1;
          if (__OFADD__(v36, 1))
          {
            __break(1u);
LABEL_52:
            __break(1u);
            goto LABEL_53;
          }
          id v40 = objc_msgSend(v38, sel_identifier);
          uint64_t v41 = sub_1C2B73FA0();
          uint64_t v43 = v42;

          v0[60] = v41;
          v0[61] = v43;
          id v44 = objc_msgSend(v39, sel_doses);
          sub_1C2AE3A18(0, (unint64_t *)&unk_1EBF112C0);
          unint64_t v45 = sub_1C2B741D0();
          v0[62] = v45;

          if (v45 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v49 = sub_1C2B749C0();
            swift_bridgeObjectRelease();
            v0[63] = v49;
            if (v49)
            {
LABEL_29:
              v0[64] = *(void *)(v0[34] + v0[57]);
              uint64_t v50 = v0[62];
              if ((v50 & 0xC000000000000001) != 0)
              {
                id v51 = (id)MEMORY[0x1C8766C90](0);
LABEL_44:
                v0[65] = v51;
                v0[66] = 1;
                id v92 = objc_msgSend(v51, sel_medicationIdentifier);
                uint64_t v56 = sub_1C2B73FA0();
                uint64_t v58 = v93;

                v0[67] = v58;
                unint64_t v94 = (void *)swift_task_alloc();
                v0[68] = v94;
                *unint64_t v94 = v0;
                v94[1] = sub_1C2B174C0;
                goto LABEL_45;
              }
              if (*(void *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10))
              {
                id v51 = *(id *)(v50 + 32);
                goto LABEL_44;
              }
              __break(1u);
LABEL_60:
              sub_1C2B74210();
LABEL_41:
              uint64_t v89 = v0[39];
              uint64_t v90 = v0[36];
              uint64_t v91 = v0[37];
              sub_1C2B74250();
              sub_1C2B741F0();
              swift_release();

              (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v89, v90);
              goto LABEL_6;
            }
          }
          else
          {
            uint64_t v46 = *(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10);
            v0[63] = v46;
            if (v46) {
              goto LABEL_29;
            }
          }
          uint64_t v47 = v0[59];
          uint64_t v48 = v0[56];

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v47 == v48) {
            break;
          }
          unint64_t v36 = v0[59];
        }
      }
    }
    uint64_t v98 = v0[45];
    uint64_t v99 = v0[42];
    uint64_t v116 = v0[44];
    uint64_t v118 = v0[43];
    uint64_t v101 = v0[40];
    uint64_t v100 = v0[41];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C2AE3A18(0, &qword_1EBF10BA8);
    v113 = (void *)sub_1C2B74540();
    uint64_t v102 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v103 = v0[30];
    uint64_t v104 = v0[27];
    uint64_t v105 = (void *)swift_allocObject();
    v105[2] = v102;
    v105[3] = v103;
    v105[4] = v104;
    v0[6] = sub_1C2B18F08;
    v0[7] = v105;
    v0[2] = MEMORY[0x1E4F143A8];
    v0[3] = 1107296256;
    v0[4] = sub_1C2B12CDC;
    v0[5] = &block_descriptor_6;
    uint64_t v106 = _Block_copy(v0 + 2);
    swift_retain();
    sub_1C2B73DB0();
    v0[28] = MEMORY[0x1E4FBC860];
    sub_1C2B18F2C((unint64_t *)&qword_1EBF10B50, MEMORY[0x1E4FBCB00]);
    sub_1C2B19308(0, &qword_1EBF10B58, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
    sub_1C2B1019C();
    sub_1C2B74700();
    MEMORY[0x1C8766990](0, v98, v99, v106);
    _Block_release(v106);

    (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v99, v101);
    (*(void (**)(uint64_t, uint64_t))(v116 + 8))(v98, v118);
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v107 = (uint64_t (*)(void))v0[1];
    return v107();
  }
  else
  {
    uint64_t v52 = v0[50];
    v0[48] = v28;
    uint64_t v53 = v0[32];
    if ((v53 & 0xC000000000000001) != 0) {
      id v54 = (id)MEMORY[0x1C8766C90](v52);
    }
    else {
      id v54 = *(id *)(v53 + 8 * v52 + 32);
    }
    v0[49] = v54;
    v0[50] = v52 + 1;
    if (__OFADD__(v52, 1))
    {
      __break(1u);
      goto LABEL_58;
    }
    id v55 = objc_msgSend(v54, sel_medicationIdentifier);
    uint64_t v56 = sub_1C2B73FA0();
    uint64_t v58 = v57;

    v0[51] = v58;
    uint64_t v59 = (void *)swift_task_alloc();
    v0[52] = v59;
    *uint64_t v59 = v0;
    v59[1] = sub_1C2B164DC;
LABEL_45:
    return sub_1C2B43470(v56, v58);
  }
}

uint64_t sub_1C2B174C0(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 552) = a1;
  *(void *)(v3 + 560) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_1C2B17FA4;
  }
  else
  {
    uint64_t v4 = sub_1C2B17634;
  }
  return MEMORY[0x1F4188298](v4, 0, 0);
}

void sub_1C2B17634()
{
  v0[23] = v0[60];
  uint64_t v1 = v0 + 23;
  unint64_t v2 = (void *)v0[65];
  uint64_t v3 = v0[55];
  v0[24] = v0[61];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C2B740A0();
  uint64_t v4 = (SEL *)&block_descriptor_0;
  id v5 = objc_msgSend(v2, sel_medicationIdentifier);
  sub_1C2B73FA0();

  sub_1C2B740A0();
  swift_bridgeObjectRelease();
  uint64_t v6 = v0[24];
  uint64_t v7 = *(void *)(v3 + 16);
  uint64_t v8 = v0[55];
  if (!v7) {
    goto LABEL_9;
  }
  unint64_t v9 = *v1;
  BOOL v10 = *(void *)(v8 + 32) == *v1 && *(void *)(v8 + 40) == v6;
  if (v10 || (sub_1C2B74B50() & 1) != 0) {
    goto LABEL_7;
  }
  uint64_t v13 = v0[55];
  if (v7 == 1) {
    goto LABEL_9;
  }
  if (*(void *)(v13 + 48) == v9 && *(void *)(v13 + 56) == v6 || (sub_1C2B74B50() & 1) != 0)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    uint64_t v11 = (void *)v0[69];
    uint64_t v12 = (void *)v0[65];
    swift_bridgeObjectRelease();

    goto LABEL_13;
  }
  if (v7 != 2)
  {
    uint64_t v61 = 0;
    uint64_t v62 = 2;
    do
    {
      uint64_t v63 = v62 + 1;
      if (__OFADD__(v62, 1))
      {
LABEL_54:
        __break(1u);
        return;
      }
      uint64_t v64 = v0[55];
      BOOL v65 = *(void *)(v64 + v61 + 64) == v9 && *(void *)(v64 + v61 + 72) == v6;
      if (v65 || (sub_1C2B74B50() & 1) != 0) {
        goto LABEL_7;
      }
      ++v62;
      v61 += 16;
    }
    while (v63 != v7);
  }
LABEL_9:
  swift_bridgeObjectRelease();
  unint64_t v9 = v0[69];
  swift_bridgeObjectRelease();
  if (v9)
  {
    uint64_t v14 = (void *)v0[69];
    uint64_t v15 = (void *)v0[65];
    uint64_t v16 = v0[64];
    uint64_t v17 = v0[61];
    id v18 = (void *)v0[58];
    uint64_t v20 = v0[37];
    uint64_t v19 = v0[38];
    uint64_t v68 = v0[60];
    uint64_t v70 = v0[36];
    swift_bridgeObjectRetain();
    id v71 = v14;
    id v21 = objc_msgSend(v18, sel_scheduledDateTime);
    sub_1C2B736E0();

    id v22 = objc_msgSend(v15, sel_medicationIdentifier);
    uint64_t v23 = sub_1C2B73FA0();
    uint64_t v25 = v24;

    id v26 = objc_msgSend(v15, sel_dose);
    sub_1C2B74360();
    uint64_t v28 = v27;

    LOBYTE(v26) = objc_msgSend(v15, sel_isLastScheduledDose);
    type metadata accessor for ScheduleItem();
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = v68;
    *(void *)(v29 + 24) = v17;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 32))(v29 + OBJC_IVAR____TtC27HealthMedicationsExperience12ScheduleItem_date, v19, v70);
    unint64_t v30 = (uint64_t *)(v29 + OBJC_IVAR____TtC27HealthMedicationsExperience12ScheduleItem_medicationIdentifier);
    *unint64_t v30 = v23;
    v30[1] = v25;
    *(void *)(v29 + OBJC_IVAR____TtC27HealthMedicationsExperience12ScheduleItem_doseAmount) = v28;
    *(unsigned char *)(v29 + OBJC_IVAR____TtC27HealthMedicationsExperience12ScheduleItem_isLastScheduledDose) = (_BYTE)v26;
    v0[20] = v29;
    v0[21] = 0;
    *((unsigned char *)v0 + 176) = 1;
    type metadata accessor for MedicationDose();
    swift_allocObject();
    unint64_t v9 = (unint64_t)v71;
    swift_retain();
    swift_retain();
    MedicationDose.init(_:medicationDetailProvider:medication:)((char **)v0 + 20, v16, (void *)v9);
    MEMORY[0x1C87665F0]();
    if (*(void *)((v0[27] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v0[27] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_52;
    }
    goto LABEL_11;
  }
  uint64_t v11 = (void *)v0[65];
  while (1)
  {
LABEL_13:

    unint64_t v31 = v0[66];
    if (v31 == v0[63])
    {
      while (1)
      {
        unint64_t v9 = v0[62];
        uint64_t v32 = v0[59];
        uint64_t v33 = v0[56];

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v32 == v33)
        {
          uint64_t v51 = v0[45];
          uint64_t v52 = v0[42];
          uint64_t v67 = v0[44];
          uint64_t v69 = v0[43];
          uint64_t v54 = v0[40];
          uint64_t v53 = v0[41];
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1C2AE3A18(0, &qword_1EBF10BA8);
          id v66 = (void *)sub_1C2B74540();
          uint64_t v55 = swift_allocObject();
          swift_unknownObjectWeakInit();
          uint64_t v56 = v0[30];
          uint64_t v57 = v0[27];
          uint64_t v58 = (void *)swift_allocObject();
          v58[2] = v55;
          v58[3] = v56;
          v58[4] = v57;
          v0[6] = sub_1C2B18F08;
          v0[7] = v58;
          v0[2] = MEMORY[0x1E4F143A8];
          v0[3] = 1107296256;
          v0[4] = sub_1C2B12CDC;
          v0[5] = &block_descriptor_6;
          uint64_t v59 = _Block_copy(v0 + 2);
          swift_retain();
          sub_1C2B73DB0();
          v0[28] = MEMORY[0x1E4FBC860];
          sub_1C2B18F2C((unint64_t *)&qword_1EBF10B50, MEMORY[0x1E4FBCB00]);
          sub_1C2B19308(0, &qword_1EBF10B58, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
          sub_1C2B1019C();
          sub_1C2B74700();
          MEMORY[0x1C8766990](0, v51, v52, v59);
          _Block_release(v59);

          (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v52, v54);
          (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v51, v69);
          swift_release();
          swift_release();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          id v60 = (void (*)(void))v0[1];
          v60();
          return;
        }
        unint64_t v34 = v0[59];
        uint64_t v35 = v0[33];
        if ((v35 & 0xC000000000000001) != 0)
        {
          id v36 = (id)MEMORY[0x1C8766C90](v0[59]);
        }
        else
        {
          if (v34 >= *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_50;
          }
          id v36 = *(id *)(v35 + 8 * v34 + 32);
        }
        unint64_t v9 = (unint64_t)v36;
        v0[58] = v36;
        v0[59] = v34 + 1;
        if (__OFADD__(v34, 1)) {
          break;
        }
        id v37 = objc_msgSend(v36, sel_identifier);
        uint64_t v38 = sub_1C2B73FA0();
        uint64_t v40 = v39;

        v0[60] = v38;
        v0[61] = v40;
        id v41 = objc_msgSend((id)v9, sel_doses);
        sub_1C2AE3A18(0, (unint64_t *)&unk_1EBF112C0);
        unint64_t v9 = sub_1C2B741D0();
        v0[62] = v9;

        if (v9 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v43 = sub_1C2B749C0();
          swift_bridgeObjectRelease();
          v0[63] = v43;
          if (v43)
          {
LABEL_24:
            unint64_t v31 = 0;
            v0[64] = *(void *)(v0[34] + v0[57]);
            goto LABEL_25;
          }
        }
        else
        {
          uint64_t v42 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
          v0[63] = v42;
          if (v42) {
            goto LABEL_24;
          }
        }
      }
      __break(1u);
LABEL_50:
      __break(1u);
      goto LABEL_51;
    }
LABEL_25:
    uint64_t v44 = v0[62];
    if ((v44 & 0xC000000000000001) != 0)
    {
      id v45 = (id)MEMORY[0x1C8766C90](v31);
    }
    else
    {
      if (v31 >= *(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_54;
      }
      id v45 = *(id *)(v44 + 8 * v31 + 32);
    }
    v0[65] = v45;
    v0[66] = v31 + 1;
    if (!__OFADD__(v31, 1)) {
      break;
    }
LABEL_51:
    __break(1u);
LABEL_52:
    sub_1C2B74210();
LABEL_11:
    uint64_t v11 = (void *)v0[65];
    sub_1C2B74250();
    sub_1C2B741F0();
    swift_release();

    uint64_t v4 = (SEL *)&block_descriptor_0;
  }
  id v46 = [v45 v4[205]];
  uint64_t v47 = sub_1C2B73FA0();
  uint64_t v49 = v48;

  v0[67] = v49;
  uint64_t v50 = (void *)swift_task_alloc();
  v0[68] = v50;
  void *v50 = v0;
  v50[1] = sub_1C2B174C0;
  sub_1C2B43470(v47, v49);
}

uint64_t sub_1C2B17EF8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C2B17FA4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C2B18058(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C8767AE0](v1);
  if (result)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C2B73CE0();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_getKeyPath();
    swift_getKeyPath();
    return sub_1C2B73CF0();
  }
  return result;
}

id MedicationDoseDaySummaryProvider.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void MedicationDoseDaySummaryProvider.init()()
{
}

uint64_t sub_1C2B182D0@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for MedicationDoseDaySummaryProvider();
  uint64_t result = sub_1C2B73BB0();
  *a1 = result;
  return result;
}

Swift::Void __swiftcall MedicationDoseDaySummaryProvider.scheduleControlDidRescheduleItems()()
{
  id v1 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCFE8];
  sub_1C2B19308(0, (unint64_t *)&unk_1EBF11290, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v8 - v3;
  uint64_t v5 = sub_1C2B74310();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = 0;
  v6[3] = 0;
  v6[4] = v0;
  id v7 = v0;
  sub_1C2B12364((uint64_t)v4, (uint64_t)&unk_1EA32BD40, (uint64_t)v6);
  swift_release();
  sub_1C2B18F74((uint64_t)v4, (unint64_t *)&unk_1EBF11290, v1);
}

void sub_1C2B185A0(uint64_t a1, void *a2, void *aBlock, void *a4)
{
  uint64_t v6 = *(void (**)(id, uint64_t (*)(), uint64_t, void *))(a1 + 32);
  id v7 = _Block_copy(aBlock);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  swift_retain();
  id v10 = a2;
  id v9 = a4;
  v6(v10, sub_1C2B195C8, v8, a4);
  swift_release();
  swift_release();
}

char *sub_1C2B18674(void *a1, uint64_t a2, uint64_t a3)
{
  sub_1C2B193B4(0, &qword_1EBF10B38, MEMORY[0x1E4F1AC70]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v31 - v10;
  uint64_t v12 = &v3[OBJC_IVAR____TtC27HealthMedicationsExperience32MedicationDoseDaySummaryProvider__daySummary];
  uint64_t v13 = qword_1EBF10AE8;
  uint64_t v14 = v3;
  if (v13 != -1) {
    swift_once();
  }
  uint64_t v33 = qword_1EBF12FB0;
  uint64_t v34 = *(void *)algn_1EBF12FB8;
  __int16 v35 = word_1EBF12FC0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C2B73CB0();
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v12, v11, v8);
  *(void *)&v14[OBJC_IVAR____TtC27HealthMedicationsExperience32MedicationDoseDaySummaryProvider_observerQuery] = 0;
  *(void *)&v14[OBJC_IVAR____TtC27HealthMedicationsExperience32MedicationDoseDaySummaryProvider_doseEventPredicate] = 0;
  *(void *)&v14[OBJC_IVAR____TtC27HealthMedicationsExperience32MedicationDoseDaySummaryProvider_healthStore] = a1;
  if (a3)
  {
    id v15 = a1;
    uint64_t v16 = a3;
  }
  else
  {
    uint64_t v17 = qword_1EBF10AE0;
    id v18 = a1;
    if (v17 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v16 = swift_retain();
  }
  *(void *)&v14[OBJC_IVAR____TtC27HealthMedicationsExperience32MedicationDoseDaySummaryProvider_medicationDetailProvider] = v16;
  id v19 = objc_allocWithZone(MEMORY[0x1E4F66B38]);
  swift_retain();
  id v20 = objc_msgSend(v19, sel_initWithHealthStore_, a1);
  *(void *)&v14[OBJC_IVAR____TtC27HealthMedicationsExperience32MedicationDoseDaySummaryProvider_scheduleControl] = v20;
  id v21 = &v14[OBJC_IVAR____TtC27HealthMedicationsExperience32MedicationDoseDaySummaryProvider_date];
  uint64_t v22 = sub_1C2B73710();
  uint64_t v23 = *(void *)(v22 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v21, a2, v22);

  uint64_t v24 = (objc_class *)type metadata accessor for MedicationDoseDaySummaryProvider();
  v32.receiver = v14;
  v32.super_class = v24;
  uint64_t v25 = (char *)objc_msgSendSuper2(&v32, sel_init);
  id v26 = *(void **)&v25[OBJC_IVAR____TtC27HealthMedicationsExperience32MedicationDoseDaySummaryProvider_scheduleControl];
  sub_1C2AE3A18(0, &qword_1EBF10BA8);
  uint64_t v27 = v25;
  id v28 = v26;
  uint64_t v29 = (void *)sub_1C2B74540();
  objc_msgSend(v28, sel_registerObserver_queue_, v27, v29);

  sub_1C2B11A60();
  sub_1C2B1258C();

  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(a2, v22);
  return v27;
}

uint64_t type metadata accessor for MedicationDoseDaySummaryProvider()
{
  uint64_t result = qword_1EBF10230;
  if (!qword_1EBF10230) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C2B18A34(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1C2AFA544;
  return sub_1C2B122A8(a1, v4, v5, v6);
}

uint64_t sub_1C2B18AF4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MedicationDoseDaySummary(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  return a1;
}

__n128 __swift_memcpy18_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for MedicationDoseDaySummary(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  return a1;
}

uint64_t getEnumTagSinglePayload for MedicationDoseDaySummary(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 18)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MedicationDoseDaySummary(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_WORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 18) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 18) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicationDoseDaySummary()
{
  return &type metadata for MedicationDoseDaySummary;
}

uint64_t sub_1C2B18CA0()
{
  return type metadata accessor for MedicationDoseDaySummaryProvider();
}

void sub_1C2B18CA8()
{
  sub_1C2B193B4(319, &qword_1EBF10B38, MEMORY[0x1E4F1AC70]);
  if (v0 <= 0x3F)
  {
    sub_1C2B73710();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for MedicationDoseDaySummaryProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationDoseDaySummaryProvider);
}

uint64_t dispatch thunk of MedicationDoseDaySummaryProvider.daySummary.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of MedicationDoseDaySummaryProvider.$daySummary.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of MedicationDoseDaySummaryProvider.__allocating_init(healthStore:date:medicationDetailProvider:)()
{
  return (*(uint64_t (**)(void))(v0 + 256))();
}

uint64_t dispatch thunk of MedicationDoseDaySummaryProvider.changeDate(_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x108))();
}

uint64_t sub_1C2B18E88()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C2B18EC0()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C2B18F08()
{
  return sub_1C2B18058(*(void *)(v0 + 16));
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t sub_1C2B18F2C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C2B18F74(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C2B19308(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C2B18FE4()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C2B1901C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1C2B19064(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

void sub_1C2B19074(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1C2AE3A18(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1C2B190DC()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C2B19114(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_1C2AF9A8C;
  return sub_1C2B15B60(a1);
}

uint64_t sub_1C2B191B4(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_1C2AFA544;
  return sub_1C2B15BF4(a1);
}

void sub_1C2B19258(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_1C2B19074(255, a3, &qword_1EBF112D8, 0x1E4F2B420, a4);
    unint64_t v5 = sub_1C2B74B20();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_1C2B192C8()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1C2B19300(uint64_t a1, void *a2)
{
  sub_1C2B12694(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24));
}

void sub_1C2B19308(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C2B1936C()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C2B193AC()
{
  return sub_1C2B12BC4(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

void sub_1C2B193B4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, ValueMetadata *))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, &type metadata for MedicationDoseDaySummary);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C2B19404(uint64_t a1, uint64_t a2)
{
  sub_1C2B19308(0, (unint64_t *)&unk_1EBF11290, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C2B19498()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C2B194D0(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1C2AFA544;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1EA32C090 + dword_1EA32C090);
  return v6(a1, v4);
}

void sub_1C2B19588(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  sub_1C2B11E8C(a1, a2, a3, a4, v4);
}

uint64_t sub_1C2B19590()
{
  _Block_release(*(const void **)(v0 + 16));
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C2B195C8()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t objectdestroyTm_0()
{
  swift_unknownObjectRelease();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C2B1961C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1C2AF9A8C;
  return sub_1C2B122A8(a1, v4, v5, v6);
}

uint64_t HKMedicationUserDomainConcept.ontologyPregnancyTrimesterLactationRatings.getter()
{
  return sub_1C2ADE150((uint64_t)&unk_1C2B773B8, 0x53555F6E65);
}

id HKMedicationUserDomainConcept.freeTextMedicationLoggingUnit.getter()
{
  return sub_1C2ADEAD4((SEL *)&selRef_freeTextMedicationLoggingUnitCode);
}

void sub_1C2B19718(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1C2B19724(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1C2B19730(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

char *keypath_get_selector_localizedOntologyBrandNames()
{
  return sel_localizedOntologyBrandNames;
}

void sub_1C2B1974C(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

char *keypath_get_selector_localizedOntologyPreferredNames()
{
  return sel_localizedOntologyPreferredNames;
}

void sub_1C2B19778(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

char *keypath_get_selector_localizedOntologyGenericNames()
{
  return sel_localizedOntologyGenericNames;
}

void sub_1C2B197A4(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

char *keypath_get_selector_localizedOntologyManufacturedDoseForms()
{
  return sel_localizedOntologyManufacturedDoseForms;
}

void sub_1C2B197D0(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

char *keypath_get_selector_localizedOntologyBasicDoseForms()
{
  return sel_localizedOntologyBasicDoseForms;
}

void sub_1C2B197FC(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

char *keypath_get_selector_localizedOntologyLoggingUnitSingular()
{
  return sel_localizedOntologyLoggingUnitSingular;
}

void sub_1C2B19828(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

char *keypath_get_selector_localizedOntologyLoggingUnitPlural()
{
  return sel_localizedOntologyLoggingUnitPlural;
}

void sub_1C2B19854(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

Swift::String __swiftcall HKMedicationUserDomainConcept.localizedResolvedLoggingUnit(for:)(Swift::Double a1)
{
  Swift::String v3 = HKMedicationUserDomainConcept.localizedResolvedLoggingUnit(for:standalone:)(a1, 0);
  object = v3._object;
  uint64_t countAndFlagsBits = v3._countAndFlagsBits;
  result._object = object;
  result._uint64_t countAndFlagsBits = countAndFlagsBits;
  return result;
}

Swift::String __swiftcall HKMedicationUserDomainConcept.localizedResolvedLoggingUnit(for:standalone:)(Swift::Double a1, Swift::Bool standalone)
{
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v6 = sub_1C2AE0100(KeyPath, 0x53552D6E65, 0xE500000000000000);
  uint64_t v8 = v7;
  swift_release();
  uint64_t v9 = swift_getKeyPath();
  uint64_t v10 = sub_1C2AE0100(v9, 0x53552D6E65, 0xE500000000000000);
  uint64_t v12 = v11;
  swift_release();
  id v13 = objc_msgSend(v2, sel_freeTextMedicationLoggingUnitCode);
  uint64_t v14 = v13;
  if (v13)
  {
    id v15 = objc_msgSend(v13, sel_longLongValue);
  }
  else
  {
    id v15 = 0;
  }
  uint64_t v16 = sub_1C2B19F7C(standalone, v6, v8, v10, v12, (uint64_t)v15, v14 == 0, a1);
  id v18 = v17;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C2AE1354();
  uint64_t v19 = sub_1C2B74690();
  if (standalone && v19)
  {
    uint64_t v16 = sub_1C2B74680();
    id v21 = v20;
    swift_bridgeObjectRelease();
    id v18 = v21;
  }
  uint64_t v22 = v16;
  uint64_t v23 = v18;
  result._object = v23;
  result._uint64_t countAndFlagsBits = v22;
  return result;
}

uint64_t static HKMedicationUserDomainConcept.localizedResolvedLoggingUnit(for:standalone:singularUnit:pluralUnit:freeTextMedicationLoggingUnit:)(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, double a8)
{
  return sub_1C2B19F7C(a1, a2, a3, a4, a5, a6, a7 & 1, a8);
}

Swift::String __swiftcall HKMedicationUserDomainConcept.localizedLoggingQuantityAffix()()
{
  id v1 = objc_msgSend(v0, sel_freeTextMedicationLoggingUnitCode);
  uint64_t v2 = v1;
  if (v1)
  {
    id v3 = objc_msgSend(v1, sel_longLongValue);
  }
  else
  {
    id v3 = 0;
  }
  uint64_t v4 = sub_1C2B1A200((uint64_t)v3, v2 == 0);
  result._object = v5;
  result._uint64_t countAndFlagsBits = v4;
  return result;
}

uint64_t static HKMedicationUserDomainConcept.localizedLoggingQuantityAffix(freeTextMedicationLoggingUnit:)(uint64_t a1, char a2)
{
  return sub_1C2B1A200(a1, a2 & 1);
}

uint64_t HKMedicationUserDomainConcept.localizedResolvedForm.getter()
{
  uint64_t KeyPath = swift_getKeyPath();
  sub_1C2AE0100(KeyPath, 0x53555F6E65, 0xE500000000000000);
  uint64_t v3 = v2;
  swift_release();
  if (v3)
  {
    sub_1C2AE1354();
    uint64_t v4 = sub_1C2B74680();
  }
  else
  {
    id v5 = objc_msgSend(v0, sel_freeTextMedicationFormCode);
    if (!v5)
    {
      uint64_t v10 = swift_getKeyPath();
      uint64_t v4 = sub_1C2AE0100(v10, 0x53555F6E65, 0xE500000000000000);
      swift_release();
      return v4;
    }
    uint64_t v6 = v5;
    id v7 = objc_msgSend(v5, sel_longLongValue);

    HKMedicationFreeTextFormTypeCode.localizationKey.getter((uint64_t)v7);
    if (qword_1EBF10F78 != -1) {
      swift_once();
    }
    id v8 = (id)qword_1EBF10F60;
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1C2B735A0();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return v4;
}

void HKMedicationUserDomainConcept.resolvedQuantifiedStrengthDisplayString.getter()
{
  id v1 = objc_msgSend(v0, sel_unlocalizedQuantifiedUnitStrengthPreferredDisplayString);
  if (!v1)
  {
    id v4 = objc_msgSend(v0, sel_freeTextMedicationIngredientNamedStrengthQuantities);
    sub_1C2AE3A18(0, &qword_1EA32BE20);
    unint64_t v5 = sub_1C2B741D0();

    if (v5 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v7 = sub_1C2B749C0();
      swift_bridgeObjectRelease();
      if (v7)
      {
LABEL_6:
        if ((v5 & 0xC000000000000001) != 0)
        {
          id v6 = (id)MEMORY[0x1C8766C90](0, v5);
        }
        else
        {
          if (!*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            return;
          }
          id v6 = *(id *)(v5 + 32);
        }
        uint64_t v3 = v6;
        swift_bridgeObjectRelease();
        HKUserDomainConceptNamedQuantity.formattedDisplayString.getter();
        goto LABEL_10;
      }
    }
    else if (*(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_6;
    }
    swift_bridgeObjectRelease();
    return;
  }

  id v2 = objc_msgSend(v0, sel_unlocalizedQuantifiedUnitStrengthPreferredDisplayString);
  if (v2)
  {
    uint64_t v3 = v2;
    sub_1C2B73FA0();
LABEL_10:
  }
}

id HKUserDomainConceptNamedQuantity.formattedDisplayString.getter()
{
  id v1 = objc_msgSend(v0, sel_quantity);
  if (!v1) {
    return 0;
  }
  id v2 = v1;
  id result = objc_msgSend(self, sel_medicationDoseEventTypeForIdentifier_, *MEMORY[0x1E4F2A040]);
  if (result)
  {
    id v4 = result;
    id v5 = objc_msgSend(v2, sel__unit);
    sub_1C2AE3A18(0, (unint64_t *)&qword_1EA32BE28);
    id v6 = objc_msgSend(self, sel_percentUnit);
    char v7 = sub_1C2B745F0();

    id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67BE0]), sel_init);
    uint64_t v9 = v8;
    if (v7) {
      objc_msgSend(v8, sel_setHasSpaceBetweenValueAndUnit_, 0);
    }

    id v10 = objc_msgSend(v2, sel_localizedStringForType_parameters_, v4, v9);
    uint64_t v11 = sub_1C2B73FA0();

    return (id)v11;
  }
  __break(1u);
  return result;
}

uint64_t HKMedicationUserDomainConcept.unitString.getter()
{
  return 26477;
}

uint64_t sub_1C2B19F54(Swift::Double a1)
{
  return HKMedicationUserDomainConcept.localizedResolvedLoggingUnit(for:standalone:)(a1, 0)._countAndFlagsBits;
}

uint64_t sub_1C2B19F7C(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, double a8)
{
  if (a8 != 1.0 || a3 == 0)
  {
    if (a5)
    {
      swift_bridgeObjectRetain();
      return a4;
    }
    else
    {
      if ((a7 & 1) != 0 || (sub_1C2B38080(a1 & 1, a6), !v13))
      {
        if (a1)
        {
          if (qword_1EBF10F78 != -1) {
            swift_once();
          }
        }
        else if (qword_1EBF10F78 != -1)
        {
          swift_once();
        }
        id v17 = (id)qword_1EBF10F60;
        swift_bridgeObjectRetain();
        sub_1C2B735A0();
        swift_bridgeObjectRelease();

        sub_1C2AE8504();
        uint64_t v18 = swift_allocObject();
        uint64_t v19 = MEMORY[0x1E4FBB3D0];
        *(_OWORD *)(v18 + 16) = xmmword_1C2B76500;
        uint64_t v20 = MEMORY[0x1E4FBB460];
        *(void *)(v18 + 56) = v19;
        *(void *)(v18 + 64) = v20;
        *(double *)(v18 + 32) = a8;
        a2 = sub_1C2B73F70();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1C2AE8504();
        uint64_t v14 = swift_allocObject();
        uint64_t v15 = MEMORY[0x1E4FBB3D0];
        *(_OWORD *)(v14 + 16) = xmmword_1C2B76500;
        uint64_t v16 = MEMORY[0x1E4FBB460];
        *(void *)(v14 + 56) = v15;
        *(void *)(v14 + 64) = v16;
        *(double *)(v14 + 32) = a8;
        a2 = sub_1C2B73F70();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return a2;
}

uint64_t sub_1C2B1A200(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0 || (sub_1C2B37F00(a1), !v2))
  {
    if (qword_1EBF10F78 != -1) {
      swift_once();
    }
    id v4 = (id)qword_1EBF10F60;
    swift_bridgeObjectRetain();
    sub_1C2B735A0();
    swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_1EBF10F78 != -1) {
      swift_once();
    }
    id v3 = (id)qword_1EBF10F60;
    swift_bridgeObjectRetain();
    sub_1C2B735A0();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
  }
  uint64_t v5 = sub_1C2B73F70();
  swift_bridgeObjectRelease();
  return v5;
}

char *keypath_get_selector_localizedOntologyComponentNames()
{
  return sel_localizedOntologyComponentNames;
}

void HKMedicationSearchResult.groupingKey.getter(void *a1@<X8>)
{
  id v3 = v1;
  id v4 = objc_msgSend(v3, sel_routedDoseFormProducts);
  sub_1C2AE3A18(0, (unint64_t *)&qword_1EA32BA78);
  unint64_t v5 = sub_1C2B741D0();

  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1C2B749C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (!v6)
  {

    id v3 = 0;
  }
  *a1 = v3;
}

HealthMedicationsExperience::MedicationSearchCluster_optional __swiftcall MedicationSearchCluster.init(results:)(Swift::OpaquePointer results)
{
  unint64_t rawValue = (unint64_t)results._rawValue;
  id v3 = v1;
  if (!((unint64_t)results._rawValue >> 62))
  {
    id v4 = *(id *)(((unint64_t)results._rawValue & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4) {
      goto LABEL_3;
    }
LABEL_11:
    uint64_t v11 = (void *)swift_bridgeObjectRelease();
    unint64_t rawValue = 0;
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  id v4 = (id)sub_1C2B749C0();
  swift_bridgeObjectRelease();
  if (!v4) {
    goto LABEL_11;
  }
LABEL_3:
  if ((rawValue & 0xC000000000000001) != 0)
  {
    id v5 = (id)MEMORY[0x1C8766C90](0, rawValue);
  }
  else
  {
    if (!*(void *)((rawValue & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_17;
    }
    id v5 = *(id *)(rawValue + 32);
  }
  id v4 = v5;
  id v6 = objc_msgSend(v4, sel_routedDoseFormProducts);
  sub_1C2AE3A18(0, (unint64_t *)&qword_1EA32BA78);
  unint64_t v7 = sub_1C2B741D0();

  if (!(v7 >> 62))
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);

    goto LABEL_8;
  }
LABEL_17:
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1C2B749C0();

  swift_bridgeObjectRelease();
LABEL_8:
  swift_bridgeObjectRelease();
  if (!v8)
  {

    id v4 = 0;
  }
  id v9 = v4;
  char v10 = sub_1C2B24BEC(rawValue, v4);

  if ((v10 & 1) == 0) {
    goto LABEL_11;
  }
LABEL_12:
  unint64_t *v3 = rawValue;
  result.value.results._unint64_t rawValue = v11;
  result.is_nil = v12;
  return result;
}

uint64_t MedicationSearchCluster.primaryTitle.getter()
{
  return MedicationSearchCluster.primaryName.getter();
}

uint64_t MedicationSearchCluster.primaryName.getter()
{
  uint64_t v1 = *v0;
  if (!((unint64_t)*v0 >> 62))
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2) {
      goto LABEL_3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    if (qword_1EBF10F78 == -1)
    {
LABEL_9:
      id v6 = (id)qword_1EBF10F60;
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_1C2B735A0();
      swift_bridgeObjectRelease();

      return v5;
    }
LABEL_13:
    swift_once();
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  if (!sub_1C2B749C0()) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0)
  {
    id v3 = (id)MEMORY[0x1C8766C90](0, v1);
    goto LABEL_6;
  }
  if (!*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_13;
  }
  id v3 = *(id *)(v1 + 32);
LABEL_6:
  id v4 = v3;
  swift_bridgeObjectRelease();
  sub_1C2AFA550(&v8);
  uint64_t v5 = v8;
  swift_bridgeObjectRetain();
  sub_1C2AFB2B8((uint64_t)&v8);

  return v5;
}

void MedicationGroupingKey.hash(into:)(uint64_t a1)
{
  id v3 = *v1;
  id v4 = objc_msgSend(v3, sel_ingredientProducts);
  sub_1C2AE3A18(0, (unint64_t *)&qword_1EA32BA78);
  unint64_t v5 = sub_1C2B741D0();

  sub_1C2B24918(a1, v5);
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v3, sel_tradeNameProduct);
  if (v6)
  {
    id v7 = v6;
    sub_1C2B74600();
  }
}

uint64_t sub_1C2B1A8CC(uint64_t a1, uint64_t a2)
{
  return sub_1C2B1A8E0(a1, a2, (uint64_t)&qword_1EA32BA78);
}

uint64_t sub_1C2B1A8E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C2B749C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v8 = (unint64_t)a2 >> 62;
  if ((unint64_t)a2 >> 62)
  {
    swift_bridgeObjectRetain();
    id v9 = (void *)sub_1C2B749C0();
    swift_bridgeObjectRelease();
    if ((void *)v7 == v9) {
      goto LABEL_5;
    }
    return 0;
  }
  id v9 = *(void **)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if ((void *)v7 != v9) {
    return 0;
  }
LABEL_5:
  if (!v7) {
    return 1;
  }
  uint64_t v10 = a1 & 0xFFFFFFFFFFFFFF8;
  uint64_t v11 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a1 < 0) {
    uint64_t v10 = a1;
  }
  if (v6) {
    uint64_t v11 = v10;
  }
  uint64_t v12 = a2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v13 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0) {
    uint64_t v12 = a2;
  }
  if (v8) {
    uint64_t v13 = v12;
  }
  if (v11 == v13) {
    return 1;
  }
  if (v7 < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  unint64_t v23 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_42:
    uint64_t result = MEMORY[0x1C8766C90](0, a1);
    goto LABEL_19;
  }
  if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_44;
  }
  uint64_t result = (uint64_t)*(id *)(a1 + 32);
LABEL_19:
  id v9 = (void *)result;
  unint64_t v8 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
  {
LABEL_44:
    id v15 = (id)MEMORY[0x1C8766C90](0, a2);
LABEL_22:
    uint64_t v16 = v15;
    sub_1C2AE3A18(0, (unint64_t *)a3);
    a3 = sub_1C2B745F0();

    if (a3)
    {
      uint64_t v17 = 1 - v7;
      for (uint64_t i = 5; ; ++i)
      {
        uint64_t v7 = v17 + i == 5;
        if (v17 + i == 5) {
          return v7;
        }
        unint64_t v22 = i - 4;
        if (v23)
        {
          a3 = MEMORY[0x1C8766C90](i - 4, a1);
          if (v8) {
            goto LABEL_24;
          }
        }
        else
        {
          if (v22 >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_40:
            __break(1u);
            goto LABEL_41;
          }
          a3 = (uint64_t)*(id *)(a1 + 8 * i);
          if (v8)
          {
LABEL_24:
            id v19 = (id)MEMORY[0x1C8766C90](i - 4, a2);
            goto LABEL_25;
          }
        }
        if (v22 >= *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_40;
        }
        id v19 = *(id *)(a2 + 8 * i);
LABEL_25:
        uint64_t v20 = v19;
        char v21 = sub_1C2B745F0();

        if ((v21 & 1) == 0) {
          return v7;
        }
      }
    }
    return 0;
  }
  if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v15 = *(id *)(a2 + 32);
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C2B1AB60(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16))
  {
LABEL_14:
    char v20 = 0;
    return v20 & 1;
  }
  if (v2 && a1 != a2)
  {
    sub_1C2AE3A18(0, (unint64_t *)&qword_1EBF10810);
    uint64_t v5 = v2 - 1;
    unint64_t v6 = (void **)(a2 + 56);
    uint64_t v7 = (void **)(a1 + 56);
    while (1)
    {
      uint64_t v22 = v5;
      uint64_t v8 = (uint64_t)*(v7 - 2);
      uint64_t v9 = (uint64_t)*(v7 - 1);
      uint64_t v10 = *v7;
      uint64_t v11 = *(v6 - 3);
      uint64_t v12 = (uint64_t)*(v6 - 2);
      uint64_t v13 = (uint64_t)*(v6 - 1);
      unint64_t v23 = *v6;
      id v14 = *(v7 - 3);
      swift_bridgeObjectRetain();
      id v15 = v10;
      id v16 = v11;
      swift_bridgeObjectRetain();
      id v17 = v23;
      if ((sub_1C2B745F0() & 1) == 0 || (v8 != v12 || v9 != v13) && (sub_1C2B74B50() & 1) == 0) {
        break;
      }
      id v18 = v15;
      id v19 = v17;
      char v20 = sub_1C2B745F0();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      uint64_t v5 = v22 - 1;
      if (v20)
      {
        v7 += 4;
        v6 += 4;
        if (v22) {
          continue;
        }
      }
      return v20 & 1;
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    goto LABEL_14;
  }
  char v20 = 1;
  return v20 & 1;
}

uint64_t MedicationGroupingKey.hashValue.getter()
{
  uint64_t v1 = *v0;
  sub_1C2B74C20();
  id v2 = objc_msgSend(v1, sel_ingredientProducts);
  sub_1C2AE3A18(0, (unint64_t *)&qword_1EA32BA78);
  unint64_t v3 = sub_1C2B741D0();

  sub_1C2B24918((uint64_t)v7, v3);
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(v1, sel_tradeNameProduct);
  if (v4)
  {
    uint64_t v5 = v4;
    sub_1C2B74600();
  }
  return sub_1C2B74C60();
}

uint64_t sub_1C2B1ADF0()
{
  uint64_t v1 = *v0;
  sub_1C2B74C20();
  id v2 = objc_msgSend(v1, sel_ingredientProducts);
  sub_1C2AE3A18(0, (unint64_t *)&qword_1EA32BA78);
  unint64_t v3 = sub_1C2B741D0();

  sub_1C2B24918((uint64_t)v7, v3);
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(v1, sel_tradeNameProduct);
  if (v4)
  {
    uint64_t v5 = v4;
    sub_1C2B74600();
  }
  return sub_1C2B74C60();
}

void sub_1C2B1AEBC(uint64_t a1)
{
  unint64_t v3 = *v1;
  id v4 = objc_msgSend(v3, sel_ingredientProducts);
  sub_1C2AE3A18(0, (unint64_t *)&qword_1EA32BA78);
  unint64_t v5 = sub_1C2B741D0();

  sub_1C2B24918(a1, v5);
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v3, sel_tradeNameProduct);
  if (v6)
  {
    id v7 = v6;
    sub_1C2B74600();
  }
}

uint64_t sub_1C2B1AFA4()
{
  uint64_t v1 = *v0;
  sub_1C2B74C20();
  id v2 = objc_msgSend(v1, sel_ingredientProducts);
  sub_1C2AE3A18(0, (unint64_t *)&qword_1EA32BA78);
  unint64_t v3 = sub_1C2B741D0();

  sub_1C2B24918((uint64_t)v7, v3);
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(v1, sel_tradeNameProduct);
  if (v4)
  {
    unint64_t v5 = v4;
    sub_1C2B74600();
  }
  return sub_1C2B74C60();
}

uint64_t MedicationRouteFormConcept.uniqueIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

HealthMedicationsExperience::MedicationRouteFormConcept __swiftcall MedicationRouteFormConcept.init(_:)(Swift::OpaquePointer a1)
{
  id v2 = v1;
  if (((unint64_t)a1._rawValue & 0x8000000000000000) != 0
    || ((unint64_t)a1._rawValue & 0x4000000000000000) != 0)
  {
    unint64_t v18 = swift_bridgeObjectRetain();
    uint64_t v3 = (uint64_t)sub_1C2B1D67C(v18);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = (unint64_t)a1._rawValue & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  uint64_t v25 = v3;
  sub_1C2B1EA14(&v25);
  swift_bridgeObjectRelease();
  uint64_t v4 = v25;
  if (v25 < 0 || (v25 & 0x4000000000000000) != 0)
  {
    swift_retain();
    uint64_t v5 = sub_1C2B749C0();
    if (v5) {
      goto LABEL_7;
    }
LABEL_18:
    swift_release();
    uint64_t v7 = MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  uint64_t v5 = *(void *)(v25 + 16);
  swift_retain();
  if (!v5) {
    goto LABEL_18;
  }
LABEL_7:
  uint64_t v25 = MEMORY[0x1E4FBC860];
  sub_1C2B1D9F8(0, v5 & ~(v5 >> 63), 0);
  if (v5 < 0)
  {
    __break(1u);
    id v19 = (void *)swift_release();
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v24 = v2;
  uint64_t v6 = 0;
  uint64_t v7 = v25;
  do
  {
    if ((v4 & 0xC000000000000001) != 0) {
      id v8 = (id)MEMORY[0x1C8766C90](v6, v4);
    }
    else {
      id v8 = *(id *)(v4 + 8 * v6 + 32);
    }
    uint64_t v9 = v8;
    id v10 = objc_msgSend(v8, sel_identifier);
    id v11 = objc_msgSend(v10, sel_rawIdentifier);

    id v27 = v11;
    uint64_t v12 = sub_1C2B74B10();
    uint64_t v14 = v13;

    uint64_t v25 = v7;
    unint64_t v16 = *(void *)(v7 + 16);
    unint64_t v15 = *(void *)(v7 + 24);
    if (v16 >= v15 >> 1)
    {
      sub_1C2B1D9F8(v15 > 1, v16 + 1, 1);
      uint64_t v7 = v25;
    }
    ++v6;
    *(void *)(v7 + 16) = v16 + 1;
    uint64_t v17 = v7 + 16 * v16;
    *(void *)(v17 + 32) = v12;
    *(void *)(v17 + 40) = v14;
  }
  while (v5 != v6);
  swift_release();
  id v2 = v24;
LABEL_19:
  uint64_t v25 = v7;
  sub_1C2B257E0(0, (unint64_t *)&qword_1EBF10FB0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  sub_1C2AE04F8();
  sub_1C2B73F40();
  swift_bridgeObjectRelease();
  uint64_t v25 = 0xD00000000000001BLL;
  unint64_t v26 = 0x80000001C2B7B430;
  sub_1C2B740A0();
  id v19 = (void *)swift_bridgeObjectRelease();
  uint64_t v22 = v25;
  unint64_t v23 = v26;
  *id v2 = v4;
  v2[1] = v22;
  uint64_t v2[2] = v23;
LABEL_21:
  result.uniqueIdentifier._object = v21;
  result.uniqueIdentifier._uint64_t countAndFlagsBits = v20;
  result.routeConcepts._unint64_t rawValue = v19;
  return result;
}

uint64_t MedicationRouteFormConcept.displayString.getter()
{
  unint64_t v1 = *v0;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v3 = sub_1C2B1B54C(KeyPath, v1);
  swift_release();
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = (uint64_t *)(v3 + 40);
    uint64_t v6 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      uint64_t v8 = *v5;
      if (*v5)
      {
        uint64_t v9 = *(v5 - 1);
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v6 = sub_1C2AE08C0(0, v6[2] + 1, 1, v6);
        }
        unint64_t v11 = v6[2];
        unint64_t v10 = v6[3];
        if (v11 >= v10 >> 1) {
          uint64_t v6 = sub_1C2AE08C0((void *)(v10 > 1), v11 + 1, 1, v6);
        }
        v6[2] = v11 + 1;
        uint64_t v7 = &v6[2 * v11];
        v7[4] = v9;
        v7[5] = v8;
      }
      v5 += 2;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  sub_1C2B257E0(0, (unint64_t *)&qword_1EBF10FB0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  sub_1C2AE04F8();
  uint64_t v12 = sub_1C2B73F40();
  swift_bridgeObjectRelease();
  return v12;
}

void sub_1C2B1B4C8(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = *a1;
  if (objc_msgSend(*a1, sel_meds_isRoutedDoseFormProduct)
    && (id v4 = objc_msgSend(v3, sel_meds_preferredNameForFirstObjectOfRelationshipType_, 982)) != 0)
  {
    uint64_t v5 = v4;
    uint64_t v6 = sub_1C2B73FA0();
    uint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = 0;
  }
  *a2 = v6;
  a2[1] = v8;
}

uint64_t sub_1C2B1B54C(uint64_t a1, unint64_t a2)
{
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA70]), sel_init);
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1C2B749C0();
    uint64_t v4 = result;
    if (!result) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v4) {
      goto LABEL_10;
    }
  }
  if (v4 < 1)
  {
    __break(1u);
    return result;
  }
  uint64_t v6 = 0;
  uint64_t v7 = MEMORY[0x1E4FBB1A0];
  do
  {
    if ((a2 & 0xC000000000000001) != 0) {
      id v8 = (id)MEMORY[0x1C8766C90](v6, a2);
    }
    else {
      id v8 = *(id *)(a2 + 8 * v6 + 32);
    }
    uint64_t v9 = v8;
    ++v6;
    swift_getAtKeyPath();

    sub_1C2B257E0(0, (unint64_t *)&qword_1EBF0FEC8, v7, MEMORY[0x1E4FBB718]);
    objc_msgSend(v3, sel_addObject_, sub_1C2B74B90(), v13, v14);
    swift_unknownObjectRelease();
  }
  while (v4 != v6);
LABEL_10:
  swift_bridgeObjectRelease();
  id v10 = objc_msgSend(v3, sel_array);
  uint64_t v11 = sub_1C2B741D0();

  uint64_t v12 = sub_1C2B5E60C(v11);
  swift_bridgeObjectRelease();

  if (v12) {
    return v12;
  }
  else {
    return MEMORY[0x1E4FBC860];
  }
}

uint64_t sub_1C2B1B720(uint64_t a1, unint64_t a2)
{
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA70]), sel_init);
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1C2B749C0();
    uint64_t v4 = result;
    if (!result) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v4) {
      goto LABEL_10;
    }
  }
  if (v4 < 1)
  {
    __break(1u);
    return result;
  }
  uint64_t v6 = 0;
  do
  {
    if ((a2 & 0xC000000000000001) != 0) {
      id v7 = (id)MEMORY[0x1C8766C90](v6, a2);
    }
    else {
      id v7 = *(id *)(a2 + 8 * v6 + 32);
    }
    id v8 = v7;
    ++v6;
    swift_getAtKeyPath();

    sub_1C2B25248(0, (unint64_t *)&qword_1EA32BA80, (unint64_t *)&qword_1EA32BA78, 0x1E4F2ADD8, MEMORY[0x1E4FBB320]);
    objc_msgSend(v3, sel_addObject_, sub_1C2B74B90());
    swift_unknownObjectRelease();
  }
  while (v4 != v6);
LABEL_10:
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(v3, sel_array);
  uint64_t v10 = sub_1C2B741D0();

  uint64_t v11 = sub_1C2B5E784(v10);
  swift_bridgeObjectRelease();

  if (v11) {
    return v11;
  }
  else {
    return MEMORY[0x1E4FBC860];
  }
}

uint64_t static MedicationRouteFormConcept.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_1C2B1A8E0(*a1, *a2, (uint64_t)&qword_1EA32BA78) & 1;
}

uint64_t MedicationRouteFormConcept.hash(into:)(uint64_t a1)
{
  unint64_t v3 = *v1;
  swift_bridgeObjectRetain();
  sub_1C2B24918(a1, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C2B74070();
  return swift_bridgeObjectRelease();
}

uint64_t MedicationRouteFormConcept.hashValue.getter()
{
  unint64_t v1 = *v0;
  sub_1C2B74C20();
  swift_bridgeObjectRetain();
  sub_1C2B24918((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C2B74070();
  swift_bridgeObjectRelease();
  return sub_1C2B74C60();
}

uint64_t sub_1C2B1BA2C()
{
  unint64_t v1 = *v0;
  sub_1C2B74C20();
  swift_bridgeObjectRetain();
  sub_1C2B24918((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C2B74070();
  swift_bridgeObjectRelease();
  return sub_1C2B74C60();
}

uint64_t sub_1C2B1BAB0(uint64_t a1)
{
  unint64_t v3 = *v1;
  swift_bridgeObjectRetain();
  sub_1C2B24918(a1, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C2B74070();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2B1BB28()
{
  unint64_t v1 = *v0;
  sub_1C2B74C20();
  swift_bridgeObjectRetain();
  sub_1C2B24918((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C2B74070();
  swift_bridgeObjectRelease();
  return sub_1C2B74C60();
}

uint64_t sub_1C2B1BBA8(uint64_t *a1, uint64_t *a2)
{
  return sub_1C2B1A8E0(*a1, *a2, (uint64_t)&qword_1EA32BA78) & 1;
}

BOOL MedicationSearchCluster.isTradeCluster.getter()
{
  uint64_t v1 = *v0;
  if ((unint64_t)*v0 >> 62) {
    goto LABEL_15;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  for (; v2; uint64_t v2 = sub_1C2B749C0())
  {
    uint64_t v3 = 4;
    while (1)
    {
      id v4 = (v1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C8766C90](v3 - 4, v1) : *(id *)(v1 + 8 * v3);
      uint64_t v5 = v4;
      uint64_t v6 = v3 - 3;
      if (__OFADD__(v3 - 4, 1)) {
        break;
      }
      id v7 = objc_msgSend(v4, sel_tradeNameProduct);

      BOOL v8 = v7 != 0;
      ++v3;
      if (v7) {
        BOOL v9 = v6 == v2;
      }
      else {
        BOOL v9 = 1;
      }
      if (v9) {
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain_n();
  }
  BOOL v8 = 1;
LABEL_17:
  swift_bridgeObjectRelease_n();
  return v8;
}

uint64_t MedicationSearchCluster.ingredientProductName.getter()
{
  unint64_t v1 = *v0;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v3 = sub_1C2B1B720(KeyPath, v1);
  swift_release();
  unint64_t v4 = MEMORY[0x1E4FBC860];
  unint64_t v24 = MEMORY[0x1E4FBC860];
  uint64_t v5 = *(void *)(v3 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v5; ++i)
    {
      unint64_t v7 = swift_bridgeObjectRetain();
      sub_1C2AEE72C(v7);
    }
    swift_bridgeObjectRelease_n();
    unint64_t v8 = v24;
    if (!(v24 >> 62))
    {
LABEL_5:
      uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v9) {
        goto LABEL_6;
      }
LABEL_19:
      swift_bridgeObjectRelease();
      uint64_t v11 = MEMORY[0x1E4FBC860];
LABEL_20:
      unint64_t v24 = v11;
      swift_bridgeObjectRetain();
      sub_1C2B1EA90((uint64_t *)&v24, sub_1C2B24A30, sub_1C2B1EB14);
      swift_bridgeObjectRelease();
      sub_1C2B257E0(0, (unint64_t *)&qword_1EBF10FB0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
      sub_1C2AE04F8();
      uint64_t v22 = sub_1C2B73F40();
      swift_release();
      return v22;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v8 = MEMORY[0x1E4FBC860];
    if (!(MEMORY[0x1E4FBC860] >> 62)) {
      goto LABEL_5;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1C2B749C0();
  swift_bridgeObjectRelease();
  if (!v9) {
    goto LABEL_19;
  }
LABEL_6:
  unint64_t v24 = v4;
  sub_1C2B1D9F8(0, v9 & ~(v9 >> 63), 0);
  if ((v9 & 0x8000000000000000) == 0)
  {
    uint64_t v10 = 0;
    uint64_t v11 = v24;
    do
    {
      id v12 = *(id *)(v8 + 8 * v10 + 32);
      id v13 = objc_msgSend(v12, sel_localizedPreferredName);
      if (v13)
      {
        id v14 = v13;
        uint64_t v15 = sub_1C2B73FA0();
        uint64_t v17 = v16;
      }
      else
      {
        if (qword_1EBF10F78 != -1) {
          swift_once();
        }
        id v14 = (id)qword_1EBF10F60;
        swift_bridgeObjectRetain();
        uint64_t v15 = sub_1C2B735A0();
        uint64_t v17 = v18;

        swift_bridgeObjectRelease();
      }

      unint64_t v24 = v11;
      unint64_t v20 = *(void *)(v11 + 16);
      unint64_t v19 = *(void *)(v11 + 24);
      if (v20 >= v19 >> 1)
      {
        sub_1C2B1D9F8(v19 > 1, v20 + 1, 1);
        uint64_t v11 = v24;
      }
      ++v10;
      *(void *)(v11 + 16) = v20 + 1;
      uint64_t v21 = v11 + 16 * v20;
      *(void *)(v21 + 32) = v15;
      *(void *)(v21 + 40) = v17;
    }
    while (v9 != v10);
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

void sub_1C2B1C040(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_ingredientProducts);
  sub_1C2AE3A18(0, (unint64_t *)&qword_1EA32BA78);
  uint64_t v4 = sub_1C2B741D0();

  *a2 = v4;
}

uint64_t sub_1C2B1C0B4(uint64_t a1)
{
  uint64_t v17 = MEMORY[0x1E4FBC860];
  uint64_t v3 = a1 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  if (!v6) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (unint64_t i = v10 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v9 << 6))
  {
    unint64_t v16 = *(void *)(*(void *)(a1 + 56) + 8 * i);
    swift_bridgeObjectRetain();
    sub_1C2B1D2F8(&v16, (unint64_t)&v15);
    if (v1)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t result = sub_1C2AEE72C(v15);
    if (v6) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v9++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v9 >= v7) {
      goto LABEL_26;
    }
    unint64_t v13 = *(void *)(v3 + 8 * v9);
    if (!v13) {
      break;
    }
LABEL_17:
    unint64_t v6 = (v13 - 1) & v13;
  }
  int64_t v14 = v9 + 1;
  if (v9 + 1 >= v7) {
    goto LABEL_26;
  }
  unint64_t v13 = *(void *)(v3 + 8 * v14);
  if (v13) {
    goto LABEL_16;
  }
  int64_t v14 = v9 + 2;
  if (v9 + 2 >= v7) {
    goto LABEL_26;
  }
  unint64_t v13 = *(void *)(v3 + 8 * v14);
  if (v13) {
    goto LABEL_16;
  }
  int64_t v14 = v9 + 3;
  if (v9 + 3 >= v7) {
    goto LABEL_26;
  }
  unint64_t v13 = *(void *)(v3 + 8 * v14);
  if (v13) {
    goto LABEL_16;
  }
  int64_t v14 = v9 + 4;
  if (v9 + 4 >= v7)
  {
LABEL_26:
    swift_release();
    return v17;
  }
  unint64_t v13 = *(void *)(v3 + 8 * v14);
  if (v13)
  {
LABEL_16:
    int64_t v9 = v14;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v9 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v9 >= v7) {
      goto LABEL_26;
    }
    unint64_t v13 = *(void *)(v3 + 8 * v9);
    ++v14;
    if (v13) {
      goto LABEL_17;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t MedicationSearchCluster.secondaryTitle.getter()
{
  if (MedicationSearchCluster.isTradeCluster.getter()) {
    return MedicationSearchCluster.ingredientProductName.getter();
  }
  else {
    return 0;
  }
}

uint64_t MedicationSearchCluster.hash(into:)(uint64_t a1)
{
  unint64_t v3 = *v1;
  swift_bridgeObjectRetain();
  sub_1C2B24918(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t static MedicationSearchCluster.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_1C2B1A8E0(*a1, *a2, (uint64_t)&qword_1EA32B9C0) & 1;
}

uint64_t MedicationSearchCluster.hashValue.getter()
{
  unint64_t v1 = *v0;
  sub_1C2B74C20();
  swift_bridgeObjectRetain();
  sub_1C2B24918((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  return sub_1C2B74C60();
}

uint64_t sub_1C2B1C39C()
{
  unint64_t v1 = *v0;
  sub_1C2B74C20();
  swift_bridgeObjectRetain();
  sub_1C2B24918((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  return sub_1C2B74C60();
}

uint64_t sub_1C2B1C3F4(uint64_t a1)
{
  unint64_t v3 = *v1;
  swift_bridgeObjectRetain();
  sub_1C2B24918(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2B1C440()
{
  unint64_t v1 = *v0;
  sub_1C2B74C20();
  swift_bridgeObjectRetain();
  sub_1C2B24918((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  return sub_1C2B74C60();
}

uint64_t sub_1C2B1C494(uint64_t *a1, uint64_t *a2)
{
  return sub_1C2B1A8E0(*a1, *a2, (uint64_t)&qword_1EA32B9C0) & 1;
}

HealthMedicationsExperience::MedicationSearchClusterFormsGrouper __swiftcall MedicationSearchClusterFormsGrouper.init(_:)(HealthMedicationsExperience::MedicationSearchCluster a1)
{
  uint64_t v29 = v1;
  uint64_t v2 = *(void *)a1.results._rawValue;
  id v37 = (void *)MEMORY[0x1E4FBC868];
  if (*(void *)a1.results._rawValue >> 62)
  {
LABEL_23:
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1C2B749C0();
    swift_bridgeObjectRelease();
    if (v3) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v3)
    {
LABEL_3:
      uint64_t v4 = (void *)MEMORY[0x1E4FBC868];
      uint64_t v5 = 4;
      uint64_t v30 = MEMORY[0x1E4FBC838] + 8;
      uint64_t v31 = v3;
      while (1)
      {
        uint64_t v8 = v5 - 4;
        if ((v2 & 0xC000000000000001) != 0)
        {
          id v9 = (id)MEMORY[0x1C8766C90](v5 - 4, v2);
          uint64_t v10 = v5 - 3;
          if (__OFADD__(v8, 1)) {
            goto LABEL_20;
          }
        }
        else
        {
          id v9 = *(id *)(v2 + 8 * v5);
          uint64_t v10 = v5 - 3;
          if (__OFADD__(v8, 1))
          {
LABEL_20:
            __break(1u);
LABEL_21:
            __break(1u);
LABEL_22:
            __break(1u);
            goto LABEL_23;
          }
        }
        uint64_t v32 = v10;
        id v11 = v9;
        id v12 = objc_msgSend(v9, sel_routedDoseFormProducts);
        sub_1C2AE3A18(0, (unint64_t *)&qword_1EA32BA78);
        uint64_t v13 = sub_1C2B741D0();

        MedicationRouteFormConcept.init(_:)((Swift::OpaquePointer)v13);
        sub_1C2B0033C(v34, v35, v36);
        unint64_t v16 = v15;
        uint64_t v17 = v4[2];
        BOOL v18 = (v14 & 1) == 0;
        uint64_t v19 = v17 + v18;
        if (__OFADD__(v17, v18)) {
          goto LABEL_21;
        }
        char v20 = v14;
        if (v4[3] < v19)
        {
          sub_1C2B22EFC(v19, 1);
          uint64_t v4 = v37;
          sub_1C2B0033C(v34, v35, v36);
          if ((v20 & 1) != (v22 & 1))
          {
            result.routesToConcepts._unint64_t rawValue = (void *)sub_1C2B74BB0();
            __break(1u);
            return result;
          }
          unint64_t v16 = v21;
        }
        if (v20)
        {
          swift_bridgeObjectRelease();
          uint64_t v6 = swift_bridgeObjectRelease();
          int64_t v7 = (void *)(v4[7] + 8 * v16);
          MEMORY[0x1C87665F0](v6);
          if (*(void *)((*v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1C2B74210();
          }
          sub_1C2B74250();
          sub_1C2B741F0();
        }
        else
        {
          sub_1C2B257E0(0, (unint64_t *)&qword_1EBF11390, v30, MEMORY[0x1E4FBBE00]);
          uint64_t v23 = swift_allocObject();
          *(_OWORD *)(v23 + 16) = xmmword_1C2B764F0;
          *(void *)(v23 + 32) = v11;
          uint64_t v33 = v23;
          sub_1C2B741F0();
          v4[(v16 >> 6) + 8] |= 1 << v16;
          unint64_t v24 = (unint64_t *)(v4[6] + 24 * v16);
          *unint64_t v24 = v34;
          v24[1] = v35;
          v24[2] = v36;
          *(void *)(v4[7] + 8 * v16) = v33;
          uint64_t v25 = v4[2];
          BOOL v26 = __OFADD__(v25, 1);
          uint64_t v27 = v25 + 1;
          if (v26) {
            goto LABEL_22;
          }
          v4[2] = v27;
        }
        ++v5;
        if (v32 == v31) {
          goto LABEL_25;
        }
      }
    }
  }
  uint64_t v4 = (void *)MEMORY[0x1E4FBC868];
LABEL_25:
  result.routesToConcepts._unint64_t rawValue = (void *)swift_bridgeObjectRelease();
  *uint64_t v29 = v4;
  return result;
}

uint64_t MedicationSearchClusterFormsGrouper.availableRoutes.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_1C2B1D798(v1);
  swift_bridgeObjectRelease();
  uint64_t v4 = v2;
  sub_1C2B1EA90((uint64_t *)&v4, sub_1C2B24A6C, sub_1C2B1F9F0);
  swift_bridgeObjectRelease();
  return (uint64_t)v4;
}

BOOL MedicationSearchClusterFormsGrouper.hasSingleRoute.getter()
{
  return *(void *)(*(void *)v0 + 16) == 1;
}

uint64_t MedicationSearchClusterFormsGrouper.hasSingleProduct.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain_n();
  unint64_t v16 = sub_1C2B1D798(v1);
  sub_1C2B1EA90((uint64_t *)&v16, sub_1C2B24A6C, sub_1C2B1F9F0);
  swift_bridgeObjectRelease_n();
  if (!v16[2])
  {
    swift_release();
    return 0;
  }
  unint64_t v3 = v16[4];
  uint64_t v2 = v16[5];
  uint64_t v4 = v16[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_release();
  if (*(void *)(v1 + 16) != 1 || (sub_1C2B0033C(v3, v2, v4), (v6 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  unint64_t v7 = *(void *)(*(void *)(v1 + 56) + 8 * v5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1C2B749C0();
    swift_bridgeObjectRelease();
    if (v8) {
      goto LABEL_6;
    }
LABEL_20:
    swift_bridgeObjectRelease();
    unint64_t v14 = MEMORY[0x1E4FBC860];
    if (!(MEMORY[0x1E4FBC860] >> 62))
    {
LABEL_17:
      uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_18:
      swift_bridgeObjectRelease();
      return v15 == 1;
    }
LABEL_21:
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_1C2B749C0();
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v8) {
    goto LABEL_20;
  }
LABEL_6:
  unint64_t v16 = (void *)MEMORY[0x1E4FBC860];
  sub_1C2B74900();
  if ((v8 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = 0;
    do
    {
      if ((v7 & 0xC000000000000001) != 0) {
        id v10 = (id)MEMORY[0x1C8766C90](v9, v7);
      }
      else {
        id v10 = *(id *)(v7 + 8 * v9 + 32);
      }
      id v11 = v10;
      ++v9;
      id v12 = objc_msgSend(v10, sel_specificProduct);

      sub_1C2B748D0();
      sub_1C2B74910();
      sub_1C2B74920();
      sub_1C2B748E0();
    }
    while (v8 != v9);
    unint64_t v14 = (unint64_t)v16;
    swift_bridgeObjectRelease();
    if (!(v14 >> 62)) {
      goto LABEL_17;
    }
    goto LABEL_21;
  }
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t MedicationSearchClusterFormsGrouper.singleSpecificProduct.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain_n();
  BOOL v18 = sub_1C2B1D798(v1);
  sub_1C2B1EA90((uint64_t *)&v18, sub_1C2B24A6C, sub_1C2B1F9F0);
  swift_bridgeObjectRelease_n();
  if (!v18[2])
  {
    swift_release();
    return 0;
  }
  unint64_t v3 = v18[4];
  uint64_t v2 = v18[5];
  uint64_t v4 = v18[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_release();
  if (*(void *)(v1 + 16) != 1 || (sub_1C2B0033C(v3, v2, v4), (v6 & 1) == 0))
  {
    swift_bridgeObjectRelease();
LABEL_13:
    swift_bridgeObjectRelease();
    return 0;
  }
  unint64_t v7 = *(void *)(*(void *)(v1 + 56) + 8 * v5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!(v7 >> 62))
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v8) {
      goto LABEL_6;
    }
LABEL_25:
    swift_bridgeObjectRelease();
    unint64_t v9 = MEMORY[0x1E4FBC860];
    if (!(MEMORY[0x1E4FBC860] >> 62)) {
      goto LABEL_18;
    }
    goto LABEL_26;
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_1C2B749C0();
  swift_bridgeObjectRelease();
  if (!v8) {
    goto LABEL_25;
  }
LABEL_6:
  BOOL v18 = (void *)MEMORY[0x1E4FBC860];
  unint64_t v9 = (unint64_t)&v18;
  sub_1C2B74900();
  if (v8 < 0)
  {
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v10 = 0;
  do
  {
    if ((v7 & 0xC000000000000001) != 0) {
      id v11 = (id)MEMORY[0x1C8766C90](v10, v7);
    }
    else {
      id v11 = *(id *)(v7 + 8 * v10 + 32);
    }
    id v12 = v11;
    ++v10;
    id v13 = objc_msgSend(v11, sel_specificProduct);

    sub_1C2B748D0();
    sub_1C2B74910();
    sub_1C2B74920();
    sub_1C2B748E0();
  }
  while (v8 != v10);
  unint64_t v9 = (unint64_t)v18;
  swift_bridgeObjectRelease();
  if (!(v9 >> 62))
  {
LABEL_18:
    if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) == 1) {
      goto LABEL_19;
    }
    goto LABEL_13;
  }
LABEL_26:
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_1C2B749C0();
  swift_bridgeObjectRelease();
  if (v17 != 1) {
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1C2B749C0();
  swift_bridgeObjectRelease();
  if (!v14) {
    goto LABEL_23;
  }
LABEL_19:
  if ((v9 & 0xC000000000000001) != 0)
  {
LABEL_31:
    unint64_t v16 = (void *)MEMORY[0x1C8766C90](0, v9);
    goto LABEL_22;
  }
  if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    unint64_t v16 = *(id *)(v9 + 32);
LABEL_22:
    uint64_t v14 = (uint64_t)v16;
LABEL_23:
    swift_bridgeObjectRelease();
    return v14;
  }
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

Swift::OpaquePointer_optional __swiftcall MedicationSearchClusterFormsGrouper.getSpecificProducts(for:)(HealthMedicationsExperience::MedicationRouteFormConcept a1)
{
  uint64_t v2 = *v1;
  unint64_t v3 = MEMORY[0x1E4FBC860];
  if (!*(void *)(v2 + 16)) {
    goto LABEL_19;
  }
  uint64_t v4 = *((void *)a1.routeConcepts._rawValue + 1);
  uint64_t v5 = *((void *)a1.routeConcepts._rawValue + 2);
  unint64_t v6 = *(void *)a1.routeConcepts._rawValue;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C2B0033C(v6, v4, v5);
  if (v8)
  {
    unint64_t v9 = *(void *)(*(void *)(v2 + 56) + 8 * v7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v9 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v10 = sub_1C2B749C0();
      if (v10) {
        goto LABEL_5;
      }
    }
    else
    {
      uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v10)
      {
LABEL_5:
        if (v10 < 1)
        {
          __break(1u);
LABEL_50:
          sub_1C2B25248(0, &qword_1EA32BE30, &qword_1EA32BBE8, 0x1E4F2ADE8, MEMORY[0x1E4FBB718]);
          uint64_t v39 = (void *)sub_1C2B74BB0();
          __break(1u);
          goto LABEL_51;
        }
        for (uint64_t i = 0; i != v10; ++i)
        {
          if ((v9 & 0xC000000000000001) != 0) {
            id v12 = (id)MEMORY[0x1C8766C90](i, v9);
          }
          else {
            id v12 = *(id *)(v9 + 8 * i + 32);
          }
          id v13 = v12;
          id v14 = objc_msgSend(v12, sel_specificProduct);

          if (v14)
          {
            MEMORY[0x1C87665F0]();
            if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_1C2B74210();
            }
            sub_1C2B74250();
            sub_1C2B741F0();
          }
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_19:
  uint64_t v44 = (void *)MEMORY[0x1E4FBC868];
  if (v3 >> 62) {
    goto LABEL_46;
  }
  uint64_t v15 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v15)
  {
    unint64_t v42 = v3 & 0xC000000000000001;
    unint64_t v16 = (void *)MEMORY[0x1E4FBC868];
    uint64_t v17 = 4;
    uint64_t v41 = MEMORY[0x1E4FBC838] + 8;
    long long v40 = xmmword_1C2B764F0;
    BOOL v18 = (id *)v3;
    while (1)
    {
      char v20 = v42
          ? (id *)MEMORY[0x1C8766C90](v17 - 4, v3, a1.uniqueIdentifier._object)
          : (id *)*(id *)(v3 + 8 * v17);
      unint64_t v3 = (unint64_t)v20;
      uint64_t v21 = v17 - 3;
      if (__OFADD__(v17 - 4, 1)) {
        break;
      }
      if (objc_msgSend(v20, sel_meds_isClinicalProduct))
      {
        char v22 = (id *)(id)v3;
LABEL_34:
        id v23 = objc_msgSend(v22, sel_identifier, v40);

        goto LABEL_36;
      }
      if (objc_msgSend((id)v3, sel_meds_isSpecificProduct))
      {
        char v22 = (id *)objc_msgSend((id)v3, sel_firstConceptOfRelationshipType_, 798);
        if (v22) {
          goto LABEL_34;
        }
      }
      id v23 = 0;
LABEL_36:
      unint64_t v25 = sub_1C2B003F0(v23);
      uint64_t v26 = v16[2];
      BOOL v27 = (v24 & 1) == 0;
      uint64_t v28 = v26 + v27;
      if (__OFADD__(v26, v27)) {
        goto LABEL_44;
      }
      char v29 = v24;
      if (v16[3] < v28)
      {
        sub_1C2B23344(v28, 1);
        unint64_t v16 = v44;
        unint64_t v30 = sub_1C2B003F0(v23);
        if ((v29 & 1) != (v31 & 1)) {
          goto LABEL_50;
        }
        unint64_t v25 = v30;
      }
      if (v29)
      {

        uint64_t v19 = (void *)(v16[7] + 8 * v25);
        MEMORY[0x1C87665F0]();
        if (*(void *)((*v19 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v19 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C2B74210();
        }
        sub_1C2B74250();
        sub_1C2B741F0();
      }
      else
      {
        sub_1C2B257E0(0, (unint64_t *)&qword_1EBF11390, v41, MEMORY[0x1E4FBBE00]);
        uint64_t v32 = swift_allocObject();
        *(_OWORD *)(v32 + 16) = v40;
        *(void *)(v32 + 32) = v3;
        uint64_t v43 = v32;
        sub_1C2B741F0();
        v16[(v25 >> 6) + 8] |= 1 << v25;
        uint64_t v33 = 8 * v25;
        *(void *)(v16[6] + v33) = v23;
        *(void *)(v16[7] + v33) = v43;
        uint64_t v34 = v16[2];
        BOOL v35 = __OFADD__(v34, 1);
        uint64_t v36 = v34 + 1;
        if (v35) {
          goto LABEL_45;
        }
        v16[2] = v36;
      }
      unint64_t v3 = (unint64_t)v18;
      ++v17;
      if (v21 == v15) {
        goto LABEL_48;
      }
    }
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_1C2B749C0();
    swift_bridgeObjectRelease();
  }
  unint64_t v16 = (void *)MEMORY[0x1E4FBC868];
LABEL_48:
  swift_bridgeObjectRelease();
  uint64_t v37 = sub_1C2B1C0B4((uint64_t)v16);
  swift_release();
  uint64_t v39 = (void *)v37;
LABEL_51:
  result.value._unint64_t rawValue = v39;
  result.is_nil = v38;
  return result;
}

uint64_t sub_1C2B1D2F8@<X0>(unint64_t *a1@<X0>, unint64_t a2@<X8>)
{
  unint64_t v3 = *a1;
  uint64_t v26 = MEMORY[0x1E4FBC870];
  uint64_t v25 = MEMORY[0x1E4FBC860];
  if (v3 >> 62) {
    goto LABEL_30;
  }
  uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v4)
  {
    while (1)
    {
      id v23 = (void *)a2;
      a2 = 0;
      unint64_t v5 = v3 & 0xC000000000000001;
      while (v5)
      {
        id v6 = (id)MEMORY[0x1C8766C90](a2, v3);
LABEL_9:
        uint64_t v7 = v6;
        char v8 = (char *)(a2 + 1);
        if (__OFADD__(a2, 1)) {
          goto LABEL_29;
        }
        if (objc_msgSend(v6, sel_meds_isClinicalProduct))
        {
          id v9 = v7;
        }
        else
        {
          if ((objc_msgSend(v7, sel_meds_isSpecificProduct) & 1) == 0) {
            goto LABEL_16;
          }
          id v9 = objc_msgSend(v7, sel_firstConceptOfRelationshipType_, 798);
          if (!v9) {
            goto LABEL_16;
          }
        }
        id v10 = objc_msgSend(v9, sel_firstAttributeForType_, 984, v22);

        if (v10)
        {
          id v11 = objc_msgSend(v10, sel_stringValue);

          goto LABEL_20;
        }
LABEL_16:
        id v12 = objc_msgSend(v7, sel_firstAttributeForType_, 984, v22);
        if (v12)
        {
          id v13 = v12;
          id v11 = objc_msgSend(v12, sel_stringValue);
        }
        else
        {
          id v14 = objc_msgSend(v7, sel_localizedPreferredName);
          if (!v14)
          {
            if (qword_1EBF10F78 != -1) {
              swift_once();
            }
            id v11 = (id)qword_1EBF10F60;
            swift_bridgeObjectRetain();
            unint64_t v22 = 0xE000000000000000;
            uint64_t v15 = sub_1C2B735A0();
            uint64_t v17 = v19;
            swift_bridgeObjectRelease();
            unint64_t v5 = v3 & 0xC000000000000001;
            goto LABEL_21;
          }
          id v11 = v14;
        }
LABEL_20:
        uint64_t v15 = sub_1C2B73FA0();
        uint64_t v17 = v16;
LABEL_21:

        swift_bridgeObjectRetain();
        char v18 = sub_1C2B46E5C(&v24, v15, v17);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v18)
        {
          sub_1C2B748D0();
          sub_1C2B74910();
          sub_1C2B74920();
          sub_1C2B748E0();
        }
        else
        {
        }
        ++a2;
        if (v8 == (char *)v4)
        {
          uint64_t v20 = v25;
          a2 = (unint64_t)v23;
          goto LABEL_32;
        }
      }
      if (a2 < *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        break;
      }
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      swift_bridgeObjectRetain();
      uint64_t v4 = sub_1C2B749C0();
      if (!v4) {
        goto LABEL_31;
      }
    }
    id v6 = *(id *)(v3 + 8 * a2 + 32);
    goto LABEL_9;
  }
LABEL_31:
  uint64_t v20 = MEMORY[0x1E4FBC860];
LABEL_32:
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v20;
  return result;
}

void *sub_1C2B1D67C(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_10;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  while (1)
  {
    if (v2 <= 0)
    {
      unint64_t v3 = (void *)MEMORY[0x1E4FBC860];
    }
    else
    {
      sub_1C2B257E0(0, (unint64_t *)&qword_1EBF11390, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
      unint64_t v3 = (void *)swift_allocObject();
      int64_t v4 = _swift_stdlib_malloc_size(v3);
      uint64_t v5 = v4 - 32;
      if (v4 < 32) {
        uint64_t v5 = v4 - 25;
      }
      v3[2] = v2;
      v3[3] = (2 * (v5 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_1C2AEFB1C((unint64_t)(v3 + 4), v2, v1);
    unint64_t v1 = v6;
    swift_bridgeObjectRelease();
    if (v1 == v2) {
      break;
    }
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C2B749C0();
    swift_bridgeObjectRelease();
    if (!v2) {
      return (void *)MEMORY[0x1E4FBC860];
    }
  }
  return v3;
}

void *sub_1C2B1D798(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1C2B257E0(0, &qword_1EA32BE78, (uint64_t)&type metadata for MedicationRouteFormConcept, MEMORY[0x1E4FBBE00]);
  unint64_t v3 = (void *)swift_allocObject();
  size_t v4 = _swift_stdlib_malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 24);
  uint64_t v5 = sub_1C2B244F4(&v7, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1C2B09DA4();
  if (v5 != (void *)v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

void *sub_1C2B1D8B0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1C2B257E0(0, (unint64_t *)&qword_1EBF110A8, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  unint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_1C2B24714((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1C2B09DA4();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

uint64_t sub_1C2B1D9B8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C2B1DC24(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1C2B1D9D8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C2B1DE7C(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1C2B1D9F8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C2B1DA98(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_1C2B1DA18(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C2B1E1A8(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1C2B1DA38(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C2B1E350(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1C2B1DA58(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C2B1E6A8(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1C2B1DA78(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C2B1E864(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_1C2B1DA98(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C2B257E0(0, (unint64_t *)&qword_1EBF110A8, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    id v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    id v10 = (char *)MEMORY[0x1E4FBC860];
  }
  id v13 = v10 + 32;
  id v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C2B74A10();
  __break(1u);
  return result;
}

uint64_t sub_1C2B1DC24(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    id v13 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  sub_1C2B254F0(0, &qword_1EA32B728, MEMORY[0x1E4F27990]);
  uint64_t v10 = *(void *)(sub_1C2B73740() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  id v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_1C2B73740() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  char v18 = (char *)v13 + v17;
  uint64_t v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  uint64_t v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_1C2B74A10();
  __break(1u);
  return result;
}

uint64_t sub_1C2B1DE7C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C2B254F0(0, &qword_1EA32B730, (void (*)(uint64_t))sub_1C2AE3984);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    sub_1C2AE3984();
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C2B74A10();
  __break(1u);
  return result;
}

uint64_t sub_1C2B1E01C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C2B257E0(0, &qword_1EA32B720, (uint64_t)&type metadata for MedicationSearchCluster, MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C2B74A10();
  __break(1u);
  return result;
}

uint64_t sub_1C2B1E1A8(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C2ADE4F0();
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    sub_1C2B257E0(0, (unint64_t *)&qword_1EBF0FEC8, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C2B74A10();
  __break(1u);
  return result;
}

uint64_t sub_1C2B1E350(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C2B25690();
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    sub_1C2B25248(0, (unint64_t *)&qword_1EA32BA80, (unint64_t *)&qword_1EA32BA78, 0x1E4F2ADD8, MEMORY[0x1E4FBB320]);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C2B74A10();
  __break(1u);
  return result;
}

uint64_t sub_1C2B1E500(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C2B257E0(0, &qword_1EA32BE78, (uint64_t)&type metadata for MedicationRouteFormConcept, MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8]) {
      memmove(v12, v13, 24 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C2B74A10();
  __break(1u);
  return result;
}

uint64_t sub_1C2B1E6A8(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C2B254F0(0, &qword_1EA32BE50, (void (*)(uint64_t))sub_1C2B252B0);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8) {
      memmove(v10 + 4, a4 + 4, 24 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    sub_1C2B252B0();
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C2B74A10();
  __break(1u);
  return result;
}

uint64_t sub_1C2B1E864(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C2B257E0(0, &qword_1EA32B708, (uint64_t)&type metadata for Weekdays.Day, MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C2B74A10();
  __break(1u);
  return result;
}

uint64_t sub_1C2B1E9D4(uint64_t *a1)
{
  return sub_1C2B1EA90(a1, sub_1C2B24A30, sub_1C2B1EB14);
}

uint64_t sub_1C2B1EA14(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    sub_1C2B24A58();
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_1C2B1F200(v6);
  return sub_1C2B748E0();
}

uint64_t sub_1C2B1EA90(uint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(void *))
{
  uint64_t v6 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v6 = a2(v6);
  }
  uint64_t v7 = *(void *)(v6 + 16);
  v9[0] = v6 + 32;
  v9[1] = v7;
  uint64_t result = a3(v9);
  *a1 = v6;
  return result;
}

uint64_t sub_1C2B1EB14(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1C2B74B00();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_1C2B20ED0(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_160;
  }
  uint64_t v105 = result;
  uint64_t v102 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    __dst = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      size_t v11 = (char *)MEMORY[0x1E4FBC860];
LABEL_118:
      unint64_t v94 = v11;
      uint64_t v104 = v8;
      if (v12 >= 2)
      {
        uint64_t v95 = *v102;
        do
        {
          unint64_t v96 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_147;
          }
          if (!v95) {
            goto LABEL_159;
          }
          uint64_t v97 = v94;
          uint64_t v98 = *(void *)&v94[16 * v96 + 32];
          uint64_t v99 = *(void *)&v94[16 * v12 + 24];
          sub_1C2B21820((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(void *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1) {
            break;
          }
          if (v99 < v98) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v97 = sub_1C2B22680((uint64_t)v97);
          }
          if (v96 >= *((void *)v97 + 2)) {
            goto LABEL_149;
          }
          uint64_t v100 = &v97[16 * v96 + 32];
          *(void *)uint64_t v100 = v98;
          *((void *)v100 + 1) = v99;
          unint64_t v101 = *((void *)v97 + 2);
          if (v12 > v101) {
            goto LABEL_150;
          }
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          unint64_t v94 = v97;
          *((void *)v97 + 2) = v101 - 1;
          unint64_t v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(void *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v104 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_1C2B74230();
    *(void *)(v7 + 16) = v6;
    uint64_t v104 = v7;
    __dst = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v103 = v10 + 8;
  size_t v11 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v106 = v3;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_46;
    }
    unint64_t v14 = (uint64_t *)(v10 + 16 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    unint64_t v17 = (void *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_45;
      }
      int v19 = 0;
    }
    else
    {
      int v19 = sub_1C2B74B50();
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    uint64_t v21 = (void *)(v103 + 16 * v20);
    do
    {
      id v23 = (void *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if (v19) {
          goto LABEL_37;
        }
      }
      else if ((v19 ^ sub_1C2B74B50()))
      {
        goto LABEL_36;
      }
      v21 += 2;
      uint64_t v22 = v20 + 1;
      uint64_t v9 = v20;
      uint64_t v20 = v22;
    }
    while (v22 < v3);
    uint64_t v20 = v22;
LABEL_36:
    uint64_t v9 = v20;
    if (v19)
    {
LABEL_37:
      if (v20 < v13) {
        goto LABEL_155;
      }
      if (v13 < v20)
      {
        uint64_t v25 = 16 * v20;
        uint64_t v26 = 16 * v13;
        uint64_t v27 = v20;
        uint64_t v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10) {
              goto LABEL_158;
            }
            uint64_t v29 = v10 + v25;
            uint64_t v30 = *(void *)(v10 + v26);
            uint64_t v31 = *(void *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(void *)(v29 - 16) = v30;
            *(void *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      uint64_t v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13)) {
        goto LABEL_151;
      }
      if (v9 - v13 < v105) {
        break;
      }
    }
LABEL_67:
    if (v9 < v13) {
      goto LABEL_146;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      size_t v11 = sub_1C2B22324(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v41 = *((void *)v11 + 2);
    unint64_t v40 = *((void *)v11 + 3);
    unint64_t v12 = v41 + 1;
    if (v41 >= v40 >> 1) {
      size_t v11 = sub_1C2B22324((char *)(v40 > 1), v41 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    unint64_t v42 = v11 + 32;
    uint64_t v43 = &v11[16 * v41 + 32];
    *(void *)uint64_t v43 = v13;
    *((void *)v43 + 1) = v9;
    if (v41)
    {
      uint64_t v107 = v9;
      while (1)
      {
        unint64_t v44 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v49 = &v42[16 * v12];
          uint64_t v50 = *((void *)v49 - 8);
          uint64_t v51 = *((void *)v49 - 7);
          BOOL v55 = __OFSUB__(v51, v50);
          uint64_t v52 = v51 - v50;
          if (v55) {
            goto LABEL_135;
          }
          uint64_t v54 = *((void *)v49 - 6);
          uint64_t v53 = *((void *)v49 - 5);
          BOOL v55 = __OFSUB__(v53, v54);
          uint64_t v47 = v53 - v54;
          char v48 = v55;
          if (v55) {
            goto LABEL_136;
          }
          unint64_t v56 = v12 - 2;
          uint64_t v57 = &v42[16 * v12 - 32];
          uint64_t v59 = *(void *)v57;
          uint64_t v58 = *((void *)v57 + 1);
          BOOL v55 = __OFSUB__(v58, v59);
          uint64_t v60 = v58 - v59;
          if (v55) {
            goto LABEL_138;
          }
          BOOL v55 = __OFADD__(v47, v60);
          uint64_t v61 = v47 + v60;
          if (v55) {
            goto LABEL_141;
          }
          if (v61 >= v52)
          {
            uint64_t v79 = &v42[16 * v44];
            uint64_t v81 = *(void *)v79;
            uint64_t v80 = *((void *)v79 + 1);
            BOOL v55 = __OFSUB__(v80, v81);
            uint64_t v82 = v80 - v81;
            if (v55) {
              goto LABEL_145;
            }
            BOOL v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v73 = *((void *)v11 + 4);
            uint64_t v74 = *((void *)v11 + 5);
            BOOL v55 = __OFSUB__(v74, v73);
            uint64_t v66 = v74 - v73;
            char v67 = v55;
            goto LABEL_99;
          }
          uint64_t v46 = *((void *)v11 + 4);
          uint64_t v45 = *((void *)v11 + 5);
          BOOL v55 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          char v48 = v55;
        }
        if (v48) {
          goto LABEL_137;
        }
        unint64_t v56 = v12 - 2;
        uint64_t v62 = &v42[16 * v12 - 32];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v65 = __OFSUB__(v63, v64);
        uint64_t v66 = v63 - v64;
        char v67 = v65;
        if (v65) {
          goto LABEL_140;
        }
        uint64_t v68 = &v42[16 * v44];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v55 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v55) {
          goto LABEL_143;
        }
        if (__OFADD__(v66, v71)) {
          goto LABEL_144;
        }
        if (v66 + v71 >= v47)
        {
          BOOL v72 = v47 < v71;
LABEL_105:
          if (v72) {
            unint64_t v44 = v56;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v67) {
          goto LABEL_139;
        }
        id v75 = &v42[16 * v44];
        uint64_t v77 = *(void *)v75;
        uint64_t v76 = *((void *)v75 + 1);
        BOOL v55 = __OFSUB__(v76, v77);
        uint64_t v78 = v76 - v77;
        if (v55) {
          goto LABEL_142;
        }
        if (v78 < v66) {
          goto LABEL_15;
        }
LABEL_107:
        unint64_t v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        uint64_t v84 = v10;
        if (!v10) {
          goto LABEL_157;
        }
        uint64_t v85 = v11;
        unint64_t v86 = &v42[16 * v83];
        uint64_t v87 = *(void *)v86;
        id v88 = v42;
        unint64_t v89 = v44;
        uint64_t v90 = &v42[16 * v44];
        uint64_t v91 = *((void *)v90 + 1);
        uint64_t v92 = v84;
        sub_1C2B21820((char *)(v84 + 16 * *(void *)v86), (char *)(v84 + 16 * *(void *)v90), v84 + 16 * v91, __dst);
        if (v1) {
          goto LABEL_115;
        }
        if (v91 < v87) {
          goto LABEL_132;
        }
        if (v89 > *((void *)v85 + 2)) {
          goto LABEL_133;
        }
        *(void *)unint64_t v86 = v87;
        *(void *)&v88[16 * v83 + 8] = v91;
        unint64_t v93 = *((void *)v85 + 2);
        if (v89 >= v93) {
          goto LABEL_134;
        }
        size_t v11 = v85;
        unint64_t v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        unint64_t v42 = v88;
        *((void *)v85 + 2) = v93 - 1;
        uint64_t v10 = v92;
        uint64_t v9 = v107;
        if (v93 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v106;
    if (v9 >= v106)
    {
      uint64_t v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105)) {
    goto LABEL_153;
  }
  if (v13 + v105 >= v3) {
    uint64_t v32 = v3;
  }
  else {
    uint64_t v32 = v13 + v105;
  }
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      uint64_t v33 = (void *)(v10 + 16 * v9);
      do
      {
        uint64_t v34 = (uint64_t *)(v10 + 16 * v9);
        uint64_t v35 = *v34;
        uint64_t v36 = v34[1];
        uint64_t v37 = v13;
        Swift::Bool v38 = v33;
        do
        {
          BOOL v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (sub_1C2B74B50() & 1) == 0) {
            break;
          }
          if (!v10) {
            goto LABEL_156;
          }
          uint64_t v35 = *v38;
          uint64_t v36 = v38[1];
          *(_OWORD *)Swift::Bool v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      uint64_t v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  uint64_t result = sub_1C2B74980();
  __break(1u);
  return result;
}

void sub_1C2B1F200(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t v4 = sub_1C2B74B00();
  if (v4 >= v3)
  {
    if (v3 < 0) {
      goto LABEL_131;
    }
    if (v3) {
      sub_1C2B20FA0(0, v3, 1, a1);
    }
    return;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_139;
  }
  uint64_t v102 = v4;
  uint64_t v99 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v113 = MEMORY[0x1E4FBC860];
    uint64_t v111 = (void **)((MEMORY[0x1E4FBC860] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 != 1)
    {
      unint64_t v11 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_97:
      if (v11 >= 2)
      {
        uint64_t v93 = *v99;
        do
        {
          unint64_t v94 = v11 - 2;
          if (v11 < 2) {
            goto LABEL_126;
          }
          if (!v93) {
            goto LABEL_138;
          }
          uint64_t v95 = *(void *)&v8[16 * v94 + 32];
          uint64_t v96 = *(void *)&v8[16 * v11 + 24];
          sub_1C2B21ABC((id *)(v93 + 8 * v95), (id *)(v93 + 8 * *(void *)&v8[16 * v11 + 16]), v93 + 8 * v96, v111);
          if (v1) {
            break;
          }
          if (v96 < v95) {
            goto LABEL_127;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v8 = sub_1C2B22680((uint64_t)v8);
          }
          if (v94 >= *((void *)v8 + 2)) {
            goto LABEL_128;
          }
          uint64_t v97 = &v8[16 * v94 + 32];
          *(void *)uint64_t v97 = v95;
          *((void *)v97 + 1) = v96;
          unint64_t v98 = *((void *)v8 + 2);
          if (v11 > v98) {
            goto LABEL_129;
          }
          memmove(&v8[16 * v11 + 16], &v8[16 * v11 + 32], 16 * (v98 - v11));
          *((void *)v8 + 2) = v98 - 1;
          unint64_t v11 = v98 - 1;
        }
        while (v98 > 2);
      }
LABEL_108:
      swift_bridgeObjectRelease();
      *(void *)((v113 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_1C2B741F0();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    sub_1C2AE3A18(0, (unint64_t *)&qword_1EA32BA78);
    uint64_t v7 = sub_1C2B74230();
    *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
    uint64_t v111 = (void **)((v7 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v113 = v7;
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v100 = *a1 - 8;
  uint64_t v101 = *a1 + 16;
  uint64_t v8 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v107 = v3;
  uint64_t v112 = *a1;
  while (1)
  {
    uint64_t v12 = v9++;
    uint64_t v108 = v12;
    if (v9 < v3)
    {
      uint64_t v103 = v8;
      uint64_t v13 = *(void **)(v10 + 8 * v12);
      id v14 = *(id *)(v10 + 8 * v9);
      id v15 = v13;
      id v16 = objc_msgSend(v14, sel_identifier);
      id v109 = objc_msgSend(v16, sel_rawIdentifier);

      id v17 = objc_msgSend(v15, sel_identifier);
      id v105 = objc_msgSend(v17, sel_rawIdentifier);

      uint64_t v9 = v12 + 2;
      if (v12 + 2 < v3)
      {
        char v18 = (id *)(v101 + 8 * v12);
        while (1)
        {
          int v19 = *(v18 - 1);
          id v20 = *v18;
          id v21 = v19;
          id v22 = objc_msgSend(v20, sel_identifier);
          id v23 = objc_msgSend(v22, sel_rawIdentifier);

          id v24 = objc_msgSend(v21, sel_identifier);
          id v25 = objc_msgSend(v24, sel_rawIdentifier);

          if ((uint64_t)v109 < (uint64_t)v105 == (uint64_t)v23 >= (uint64_t)v25) {
            break;
          }
          ++v9;
          ++v18;
          uint64_t v3 = v107;
          if (v107 == v9)
          {
            uint64_t v9 = v107;
            goto LABEL_22;
          }
        }
        uint64_t v3 = v107;
LABEL_22:
        uint64_t v12 = v108;
      }
      uint64_t v8 = v103;
      uint64_t v10 = v112;
      if ((uint64_t)v109 < (uint64_t)v105)
      {
        if (v9 < v12) {
          goto LABEL_132;
        }
        if (v12 < v9)
        {
          uint64_t v26 = (uint64_t *)(v100 + 8 * v9);
          uint64_t v27 = v9;
          uint64_t v28 = v12;
          uint64_t v29 = (uint64_t *)(v112 + 8 * v12);
          do
          {
            if (v28 != --v27)
            {
              if (!v112) {
                goto LABEL_137;
              }
              uint64_t v30 = *v29;
              *uint64_t v29 = *v26;
              *uint64_t v26 = v30;
            }
            ++v28;
            --v26;
            ++v29;
          }
          while (v28 < v27);
        }
      }
    }
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v12)) {
        goto LABEL_130;
      }
      if (v9 - v12 < v102) {
        break;
      }
    }
LABEL_49:
    if (v9 < v12) {
      goto LABEL_125;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v8 = sub_1C2B22324(0, *((void *)v8 + 2) + 1, 1, v8);
    }
    unint64_t v44 = *((void *)v8 + 2);
    unint64_t v43 = *((void *)v8 + 3);
    unint64_t v11 = v44 + 1;
    uint64_t v10 = v112;
    if (v44 >= v43 >> 1)
    {
      uint64_t v92 = sub_1C2B22324((char *)(v43 > 1), v44 + 1, 1, v8);
      uint64_t v10 = v112;
      uint64_t v8 = v92;
    }
    *((void *)v8 + 2) = v11;
    uint64_t v45 = v8 + 32;
    uint64_t v46 = &v8[16 * v44 + 32];
    *(void *)uint64_t v46 = v12;
    *((void *)v46 + 1) = v9;
    if (v44)
    {
      while (1)
      {
        unint64_t v47 = v11 - 1;
        if (v11 >= 4)
        {
          uint64_t v52 = &v45[16 * v11];
          uint64_t v53 = *((void *)v52 - 8);
          uint64_t v54 = *((void *)v52 - 7);
          BOOL v58 = __OFSUB__(v54, v53);
          uint64_t v55 = v54 - v53;
          if (v58) {
            goto LABEL_114;
          }
          uint64_t v57 = *((void *)v52 - 6);
          uint64_t v56 = *((void *)v52 - 5);
          BOOL v58 = __OFSUB__(v56, v57);
          uint64_t v50 = v56 - v57;
          char v51 = v58;
          if (v58) {
            goto LABEL_115;
          }
          unint64_t v59 = v11 - 2;
          uint64_t v60 = &v45[16 * v11 - 32];
          uint64_t v62 = *(void *)v60;
          uint64_t v61 = *((void *)v60 + 1);
          BOOL v58 = __OFSUB__(v61, v62);
          uint64_t v63 = v61 - v62;
          if (v58) {
            goto LABEL_117;
          }
          BOOL v58 = __OFADD__(v50, v63);
          uint64_t v64 = v50 + v63;
          if (v58) {
            goto LABEL_120;
          }
          if (v64 >= v55)
          {
            uint64_t v82 = &v45[16 * v47];
            uint64_t v84 = *(void *)v82;
            uint64_t v83 = *((void *)v82 + 1);
            BOOL v58 = __OFSUB__(v83, v84);
            uint64_t v85 = v83 - v84;
            if (v58) {
              goto LABEL_124;
            }
            BOOL v75 = v50 < v85;
            goto LABEL_86;
          }
        }
        else
        {
          if (v11 != 3)
          {
            uint64_t v76 = *((void *)v8 + 4);
            uint64_t v77 = *((void *)v8 + 5);
            BOOL v58 = __OFSUB__(v77, v76);
            uint64_t v69 = v77 - v76;
            char v70 = v58;
            goto LABEL_80;
          }
          uint64_t v49 = *((void *)v8 + 4);
          uint64_t v48 = *((void *)v8 + 5);
          BOOL v58 = __OFSUB__(v48, v49);
          uint64_t v50 = v48 - v49;
          char v51 = v58;
        }
        if (v51) {
          goto LABEL_116;
        }
        unint64_t v59 = v11 - 2;
        BOOL v65 = &v45[16 * v11 - 32];
        uint64_t v67 = *(void *)v65;
        uint64_t v66 = *((void *)v65 + 1);
        BOOL v68 = __OFSUB__(v66, v67);
        uint64_t v69 = v66 - v67;
        char v70 = v68;
        if (v68) {
          goto LABEL_119;
        }
        uint64_t v71 = &v45[16 * v47];
        uint64_t v73 = *(void *)v71;
        uint64_t v72 = *((void *)v71 + 1);
        BOOL v58 = __OFSUB__(v72, v73);
        uint64_t v74 = v72 - v73;
        if (v58) {
          goto LABEL_122;
        }
        if (__OFADD__(v69, v74)) {
          goto LABEL_123;
        }
        if (v69 + v74 >= v50)
        {
          BOOL v75 = v50 < v74;
LABEL_86:
          if (v75) {
            unint64_t v47 = v59;
          }
          goto LABEL_88;
        }
LABEL_80:
        if (v70) {
          goto LABEL_118;
        }
        uint64_t v78 = &v45[16 * v47];
        uint64_t v80 = *(void *)v78;
        uint64_t v79 = *((void *)v78 + 1);
        BOOL v58 = __OFSUB__(v79, v80);
        uint64_t v81 = v79 - v80;
        if (v58) {
          goto LABEL_121;
        }
        if (v81 < v69) {
          goto LABEL_14;
        }
LABEL_88:
        unint64_t v86 = v47 - 1;
        if (v47 - 1 >= v11)
        {
          __break(1u);
LABEL_111:
          __break(1u);
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
          goto LABEL_134;
        }
        if (!v10) {
          goto LABEL_136;
        }
        uint64_t v87 = &v45[16 * v86];
        uint64_t v88 = *(void *)v87;
        unint64_t v89 = &v45[16 * v47];
        uint64_t v90 = *((void *)v89 + 1);
        sub_1C2B21ABC((id *)(v10 + 8 * *(void *)v87), (id *)(v10 + 8 * *(void *)v89), v10 + 8 * v90, v111);
        if (v1) {
          goto LABEL_108;
        }
        if (v90 < v88) {
          goto LABEL_111;
        }
        if (v47 > *((void *)v8 + 2)) {
          goto LABEL_112;
        }
        *(void *)uint64_t v87 = v88;
        *(void *)&v45[16 * v86 + 8] = v90;
        unint64_t v91 = *((void *)v8 + 2);
        if (v47 >= v91) {
          goto LABEL_113;
        }
        unint64_t v11 = v91 - 1;
        memmove(&v45[16 * v47], v89 + 16, 16 * (v91 - 1 - v47));
        *((void *)v8 + 2) = v91 - 1;
        uint64_t v10 = v112;
        if (v91 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v11 = 1;
LABEL_14:
    uint64_t v3 = v107;
    if (v9 >= v107) {
      goto LABEL_97;
    }
  }
  if (__OFADD__(v12, v102)) {
    goto LABEL_133;
  }
  if (v12 + v102 >= v3) {
    uint64_t v31 = v3;
  }
  else {
    uint64_t v31 = v12 + v102;
  }
  if (v31 >= v12)
  {
    if (v9 != v31)
    {
      uint64_t v104 = v8;
      uint64_t v106 = v31;
      uint64_t v32 = v100 + 8 * v9;
      do
      {
        uint64_t v33 = *(void **)(v10 + 8 * v9);
        uint64_t v34 = v12;
        uint64_t v110 = v32;
        while (1)
        {
          uint64_t v35 = *(void **)v32;
          id v36 = v33;
          id v37 = v35;
          id v38 = objc_msgSend(v36, sel_identifier);
          id v39 = objc_msgSend(v38, sel_rawIdentifier);

          id v40 = objc_msgSend(v37, sel_identifier);
          id v41 = objc_msgSend(v40, sel_rawIdentifier);

          if ((uint64_t)v39 >= (uint64_t)v41) {
            break;
          }
          uint64_t v10 = v112;
          if (!v112) {
            goto LABEL_135;
          }
          unint64_t v42 = *(void **)v32;
          uint64_t v33 = *(void **)(v32 + 8);
          *(void *)uint64_t v32 = v33;
          *(void *)(v32 + 8) = v42;
          v32 -= 8;
          if (v9 == ++v34) {
            goto LABEL_42;
          }
        }
        uint64_t v10 = v112;
LABEL_42:
        ++v9;
        uint64_t v12 = v108;
        uint64_t v32 = v110 + 8;
      }
      while (v9 != v106);
      uint64_t v9 = v106;
      uint64_t v8 = v104;
    }
    goto LABEL_49;
  }
LABEL_134:
  __break(1u);
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  sub_1C2B74980();
  __break(1u);
}

uint64_t sub_1C2B1F9F0(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1C2B74B00();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_262;
    }
    if (v3) {
      return sub_1C2B210D8(0, v3, 1, a1);
    }
    return result;
  }
  BOOL v189 = a1;
  uint64_t v190 = result;
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_270;
  }
  uint64_t v6 = (char *)MEMORY[0x1E4FBC860];
  if (v3 < 2)
  {
    uint64_t v9 = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v129 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v188 = MEMORY[0x1E4FBC860];
      goto LABEL_224;
    }
    uint64_t v188 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    uint64_t v8 = sub_1C2B74230();
    *(void *)(v8 + 16) = v7;
    uint64_t v6 = (char *)MEMORY[0x1E4FBC860];
    uint64_t v188 = v8;
    uint64_t v9 = (char *)(v8 + 32);
  }
  __dst = v9;
  uint64_t v10 = 0;
  uint64_t v11 = *v189;
  uint64_t v196 = v3;
  uint64_t v200 = *v189;
LABEL_14:
  while (2)
  {
    v192 = v6;
    uint64_t v12 = v10 + 1;
    uint64_t v199 = v10;
    if (v10 + 1 < v3)
    {
      uint64_t v193 = v1;
      uint64_t v13 = v10 + 1;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v14 = MedicationRouteFormConcept.displayString.getter();
      uint64_t v16 = v15;
      if (v14 == MedicationRouteFormConcept.displayString.getter() && v16 == v17) {
        int v202 = 0;
      }
      else {
        int v202 = sub_1C2B74B50();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v11 = v200;
      uint64_t v18 = v199 + 2;
      uint64_t v3 = v196;
      if (v199 + 2 >= v196)
      {
LABEL_80:
        if (v202)
        {
LABEL_81:
          uint64_t v10 = v199;
          uint64_t v1 = v193;
          if (v18 < v199) {
            goto LABEL_265;
          }
          if (v199 < v18)
          {
            uint64_t v66 = 24 * v18;
            uint64_t v67 = 24 * v199;
            uint64_t v68 = v18;
            uint64_t v69 = v199;
            do
            {
              if (v69 != --v68)
              {
                if (!v11) {
                  goto LABEL_268;
                }
                uint64_t v70 = v11 + v67;
                uint64_t v71 = v11 + v66;
                long long v72 = *(_OWORD *)(v11 + v67);
                uint64_t v73 = *(void *)(v11 + v67 + 16);
                uint64_t v74 = *(void *)(v11 + v66 - 8);
                *(_OWORD *)uint64_t v70 = *(_OWORD *)(v11 + v66 - 24);
                *(void *)(v70 + 16) = v74;
                *(_OWORD *)(v71 - 24) = v72;
                *(void *)(v71 - 8) = v73;
              }
              ++v69;
              v66 -= 24;
              v67 += 24;
            }
            while (v69 < v68);
          }
          uint64_t v12 = v18;
          goto LABEL_92;
        }
      }
      else
      {
        do
        {
          uint64_t v209 = v18;
          unint64_t v19 = *(void *)(v11 + 24 * v18);
          unint64_t v20 = *(void *)(v11 + 24 * v13);
          id v21 = objc_allocWithZone(MEMORY[0x1E4F1CA70]);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v22 = objc_msgSend(v21, sel_init);
          if (v19 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v23 = sub_1C2B749C0();
          }
          else
          {
            uint64_t v23 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain();
          }
          unint64_t v210 = v20;
          if (v23)
          {
            if (v23 < 1)
            {
LABEL_253:
              __break(1u);
LABEL_254:
              __break(1u);
LABEL_255:
              __break(1u);
              goto LABEL_256;
            }
            uint64_t v24 = 0;
            do
            {
              if ((v19 & 0xC000000000000001) != 0) {
                id v25 = (id)MEMORY[0x1C8766C90](v24, v19);
              }
              else {
                id v25 = *(id *)(v19 + 8 * v24 + 32);
              }
              uint64_t v26 = v25;
              if (objc_msgSend(v25, sel_meds_isRoutedDoseFormProduct)
                && (id v27 = objc_msgSend(v26, sel_meds_preferredNameForFirstObjectOfRelationshipType_, 982)) != 0)
              {
                uint64_t v28 = v27;
                sub_1C2B73FA0();
              }
              else
              {
              }
              ++v24;
              sub_1C2B257E0(0, (unint64_t *)&qword_1EBF0FEC8, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
              objc_msgSend(v22, sel_addObject_, sub_1C2B74B90());
              swift_unknownObjectRelease();
            }
            while (v23 != v24);
          }
          swift_bridgeObjectRelease();
          id v29 = objc_msgSend(v22, sel_array);
          uint64_t v30 = sub_1C2B741D0();

          uint64_t v31 = sub_1C2B5E60C(v30);
          swift_bridgeObjectRelease();

          uint64_t v32 = (void *)MEMORY[0x1E4FBC860];
          if (!v31) {
            uint64_t v31 = MEMORY[0x1E4FBC860];
          }
          uint64_t v33 = *(void *)(v31 + 16);
          if (v33)
          {
            swift_bridgeObjectRetain();
            uint64_t v34 = (uint64_t *)(v31 + 40);
            do
            {
              uint64_t v36 = *v34;
              if (*v34)
              {
                uint64_t v37 = *(v34 - 1);
                swift_bridgeObjectRetain();
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  uint64_t v32 = sub_1C2AE08C0(0, v32[2] + 1, 1, v32);
                }
                unint64_t v39 = v32[2];
                unint64_t v38 = v32[3];
                if (v39 >= v38 >> 1) {
                  uint64_t v32 = sub_1C2AE08C0((void *)(v38 > 1), v39 + 1, 1, v32);
                }
                v32[2] = v39 + 1;
                uint64_t v35 = &v32[2 * v39];
                v35[4] = v37;
                v35[5] = v36;
              }
              v34 += 2;
              --v33;
            }
            while (v33);
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          sub_1C2B257E0(0, (unint64_t *)&qword_1EBF10FB0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
          sub_1C2AE04F8();
          uint64_t v40 = sub_1C2B73F40();
          uint64_t v42 = v41;
          swift_bridgeObjectRelease();
          id v43 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA70]), sel_init);
          unint64_t v44 = v210;
          if (v210 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v45 = sub_1C2B749C0();
          }
          else
          {
            uint64_t v45 = *(void *)((v210 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain();
          }
          uint64_t v206 = v42;
          uint64_t v205 = v40;
          if (v45)
          {
            if (v45 < 1) {
              goto LABEL_254;
            }
            uint64_t v46 = 0;
            do
            {
              if ((v210 & 0xC000000000000001) != 0) {
                id v47 = (id)MEMORY[0x1C8766C90](v46, v44);
              }
              else {
                id v47 = *(id *)(v44 + 8 * v46 + 32);
              }
              uint64_t v48 = v47;
              if (objc_msgSend(v47, sel_meds_isRoutedDoseFormProduct)
                && (id v49 = objc_msgSend(v48, sel_meds_preferredNameForFirstObjectOfRelationshipType_, 982)) != 0)
              {
                uint64_t v50 = v49;
                sub_1C2B73FA0();
              }
              else
              {
              }
              ++v46;
              sub_1C2B257E0(0, (unint64_t *)&qword_1EBF0FEC8, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
              objc_msgSend(v43, sel_addObject_, sub_1C2B74B90());
              swift_unknownObjectRelease();
              unint64_t v44 = v210;
            }
            while (v45 != v46);
          }
          swift_bridgeObjectRelease();
          id v51 = objc_msgSend(v43, sel_array);
          uint64_t v52 = sub_1C2B741D0();

          uint64_t v53 = sub_1C2B5E60C(v52);
          swift_bridgeObjectRelease();

          uint64_t v54 = (void *)MEMORY[0x1E4FBC860];
          if (!v53) {
            uint64_t v53 = MEMORY[0x1E4FBC860];
          }
          uint64_t v55 = *(void *)(v53 + 16);
          if (v55)
          {
            swift_bridgeObjectRetain();
            uint64_t v56 = (uint64_t *)(v53 + 40);
            do
            {
              uint64_t v58 = *v56;
              if (*v56)
              {
                uint64_t v59 = *(v56 - 1);
                swift_bridgeObjectRetain();
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  uint64_t v54 = sub_1C2AE08C0(0, v54[2] + 1, 1, v54);
                }
                unint64_t v61 = v54[2];
                unint64_t v60 = v54[3];
                if (v61 >= v60 >> 1) {
                  uint64_t v54 = sub_1C2AE08C0((void *)(v60 > 1), v61 + 1, 1, v54);
                }
                v54[2] = v61 + 1;
                uint64_t v57 = &v54[2 * v61];
                v57[4] = v59;
                v57[5] = v58;
              }
              v56 += 2;
              --v55;
            }
            while (v55);
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          uint64_t v62 = sub_1C2B73F40();
          uint64_t v64 = v63;
          swift_bridgeObjectRelease();
          if (v205 == v62 && v206 == v64) {
            int v65 = 0;
          }
          else {
            int v65 = sub_1C2B74B50();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v202 ^ v65))
          {
            uint64_t v3 = v196;
            uint64_t v11 = v200;
            uint64_t v18 = v209;
            goto LABEL_80;
          }
          uint64_t v13 = v209;
          uint64_t v18 = v209 + 1;
          uint64_t v3 = v196;
          uint64_t v11 = v200;
        }
        while (v209 + 1 != v196);
        uint64_t v18 = v196;
        if (v202) {
          goto LABEL_81;
        }
      }
      uint64_t v12 = v18;
      uint64_t v1 = v193;
      uint64_t v10 = v199;
    }
LABEL_92:
    uint64_t v194 = v1;
    if (v12 < v3)
    {
      if (__OFSUB__(v12, v10)) {
        goto LABEL_261;
      }
      if (v12 - v10 < v190)
      {
        uint64_t v75 = v10 + v190;
        if (__OFADD__(v10, v190)) {
          goto LABEL_263;
        }
        if (v75 >= v3) {
          uint64_t v75 = v3;
        }
        if (v75 < v10) {
          goto LABEL_264;
        }
        uint64_t v195 = v75;
        if (v12 != v75)
        {
          while (2)
          {
            unint64_t v76 = *(void *)(v11 + 24 * v12);
            uint64_t v197 = v12;
            uint64_t v77 = v12;
            while (1)
            {
              uint64_t v78 = (unint64_t *)(v11 + 24 * v77);
              unint64_t v79 = *(v78 - 3);
              uint64_t v201 = v78 - 3;
              v203 = v78;
              id v80 = objc_allocWithZone(MEMORY[0x1E4F1CA70]);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              id v81 = objc_msgSend(v80, sel_init);
              if (v76 >> 62)
              {
                swift_bridgeObjectRetain();
                uint64_t v82 = sub_1C2B749C0();
              }
              else
              {
                uint64_t v82 = *(void *)((v76 & 0xFFFFFFFFFFFFFF8) + 0x10);
                swift_bridgeObjectRetain();
              }
              unint64_t v211 = v79;
              uint64_t v204 = v77;
              if (v82)
              {
                if (v82 < 1)
                {
                  __break(1u);
LABEL_238:
                  __break(1u);
LABEL_239:
                  __break(1u);
LABEL_240:
                  __break(1u);
LABEL_241:
                  __break(1u);
LABEL_242:
                  __break(1u);
LABEL_243:
                  __break(1u);
LABEL_244:
                  __break(1u);
LABEL_245:
                  __break(1u);
LABEL_246:
                  __break(1u);
LABEL_247:
                  __break(1u);
LABEL_248:
                  __break(1u);
LABEL_249:
                  __break(1u);
LABEL_250:
                  __break(1u);
LABEL_251:
                  __break(1u);
LABEL_252:
                  __break(1u);
                  goto LABEL_253;
                }
                uint64_t v83 = 0;
                do
                {
                  if ((v76 & 0xC000000000000001) != 0) {
                    id v84 = (id)MEMORY[0x1C8766C90](v83, v76);
                  }
                  else {
                    id v84 = *(id *)(v76 + 8 * v83 + 32);
                  }
                  uint64_t v85 = v84;
                  if (objc_msgSend(v84, sel_meds_isRoutedDoseFormProduct))
                  {
                    id v86 = objc_msgSend(v85, sel_meds_preferredNameForFirstObjectOfRelationshipType_, 982);
                    if (v86)
                    {
                      uint64_t v87 = v86;
                      sub_1C2B73FA0();
                    }
                    else
                    {
                    }
                    unint64_t v79 = v211;
                  }
                  else
                  {
                  }
                  ++v83;
                  sub_1C2B257E0(0, (unint64_t *)&qword_1EBF0FEC8, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
                  objc_msgSend(v81, sel_addObject_, sub_1C2B74B90());
                  swift_unknownObjectRelease();
                }
                while (v82 != v83);
              }
              swift_bridgeObjectRelease();
              id v88 = objc_msgSend(v81, sel_array);
              uint64_t v89 = sub_1C2B741D0();

              uint64_t v90 = sub_1C2B5E60C(v89);
              swift_bridgeObjectRelease();

              unint64_t v91 = (void *)MEMORY[0x1E4FBC860];
              if (!v90) {
                uint64_t v90 = MEMORY[0x1E4FBC860];
              }
              uint64_t v92 = *(void *)(v90 + 16);
              if (v92)
              {
                swift_bridgeObjectRetain();
                uint64_t v93 = (uint64_t *)(v90 + 40);
                do
                {
                  uint64_t v95 = *v93;
                  if (*v93)
                  {
                    uint64_t v96 = *(v93 - 1);
                    swift_bridgeObjectRetain();
                    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                      unint64_t v91 = sub_1C2AE08C0(0, v91[2] + 1, 1, v91);
                    }
                    unint64_t v98 = v91[2];
                    unint64_t v97 = v91[3];
                    if (v98 >= v97 >> 1) {
                      unint64_t v91 = sub_1C2AE08C0((void *)(v97 > 1), v98 + 1, 1, v91);
                    }
                    v91[2] = v98 + 1;
                    unint64_t v94 = &v91[2 * v98];
                    v94[4] = v96;
                    v94[5] = v95;
                  }
                  v93 += 2;
                  --v92;
                }
                while (v92);
                swift_bridgeObjectRelease();
                unint64_t v79 = v211;
              }
              swift_bridgeObjectRelease();
              sub_1C2B257E0(0, (unint64_t *)&qword_1EBF10FB0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
              sub_1C2AE04F8();
              uint64_t v207 = sub_1C2B73F40();
              uint64_t v100 = v99;
              swift_bridgeObjectRelease();
              id v101 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA70]), sel_init);
              if (v79 >> 62)
              {
                swift_bridgeObjectRetain();
                uint64_t v102 = sub_1C2B749C0();
              }
              else
              {
                uint64_t v102 = *(void *)((v79 & 0xFFFFFFFFFFFFFF8) + 0x10);
                swift_bridgeObjectRetain();
              }
              uint64_t v208 = v100;
              if (v102)
              {
                if (v102 < 1) {
                  goto LABEL_238;
                }
                uint64_t v103 = 0;
                unint64_t v104 = v79 & 0xC000000000000001;
                do
                {
                  if (v104) {
                    id v105 = (id)MEMORY[0x1C8766C90](v103, v79);
                  }
                  else {
                    id v105 = *(id *)(v79 + 8 * v103 + 32);
                  }
                  uint64_t v106 = v105;
                  if (objc_msgSend(v105, sel_meds_isRoutedDoseFormProduct))
                  {
                    id v107 = objc_msgSend(v106, sel_meds_preferredNameForFirstObjectOfRelationshipType_, 982);
                    if (v107)
                    {
                      uint64_t v108 = v107;
                      sub_1C2B73FA0();
                    }
                    else
                    {
                    }
                    unint64_t v79 = v211;
                  }
                  else
                  {
                  }
                  ++v103;
                  sub_1C2B257E0(0, (unint64_t *)&qword_1EBF0FEC8, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
                  objc_msgSend(v101, sel_addObject_, sub_1C2B74B90());
                  swift_unknownObjectRelease();
                }
                while (v102 != v103);
              }
              swift_bridgeObjectRelease();
              id v109 = objc_msgSend(v101, sel_array);
              uint64_t v110 = sub_1C2B741D0();

              uint64_t v111 = sub_1C2B5E60C(v110);
              swift_bridgeObjectRelease();

              uint64_t v112 = (void *)MEMORY[0x1E4FBC860];
              if (!v111) {
                uint64_t v111 = MEMORY[0x1E4FBC860];
              }
              uint64_t v113 = *(void *)(v111 + 16);
              if (v113)
              {
                swift_bridgeObjectRetain();
                uint64_t v114 = (uint64_t *)(v111 + 40);
                do
                {
                  uint64_t v116 = *v114;
                  if (*v114)
                  {
                    uint64_t v117 = *(v114 - 1);
                    swift_bridgeObjectRetain();
                    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                      uint64_t v112 = sub_1C2AE08C0(0, v112[2] + 1, 1, v112);
                    }
                    unint64_t v119 = v112[2];
                    unint64_t v118 = v112[3];
                    if (v119 >= v118 >> 1) {
                      uint64_t v112 = sub_1C2AE08C0((void *)(v118 > 1), v119 + 1, 1, v112);
                    }
                    v112[2] = v119 + 1;
                    uint64_t v115 = &v112[2 * v119];
                    v115[4] = v117;
                    v115[5] = v116;
                  }
                  v114 += 2;
                  --v113;
                }
                while (v113);
                swift_bridgeObjectRelease();
              }
              swift_bridgeObjectRelease();
              uint64_t v120 = sub_1C2B73F40();
              uint64_t v122 = v121;
              swift_bridgeObjectRelease();
              if (v207 == v120 && v208 == v122) {
                break;
              }
              char v123 = sub_1C2B74B50();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v123 & 1) == 0) {
                goto LABEL_102;
              }
              uint64_t v11 = v200;
              if (!v200) {
                goto LABEL_266;
              }
              uint64_t v77 = v204 - 1;
              v124 = v203 - 2;
              unint64_t v76 = *v203;
              unint64_t v125 = v203[1];
              unint64_t v126 = v203[2];
              *(_OWORD *)v203 = *(_OWORD *)v201;
              v203[2] = v201[2];
              *uint64_t v201 = v76;
              unint64_t *v124 = v125;
              v124[1] = v126;
              if (v204 - 1 == v199) {
                goto LABEL_103;
              }
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
LABEL_102:
            uint64_t v11 = v200;
LABEL_103:
            uint64_t v12 = v197 + 1;
            if (v197 + 1 != v195) {
              continue;
            }
            break;
          }
          uint64_t v12 = v195;
        }
      }
    }
    if (v12 < v199) {
      goto LABEL_257;
    }
    uint64_t v198 = v12;
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      uint64_t v6 = v192;
      uint64_t v1 = v194;
    }
    else
    {
      uint64_t v6 = sub_1C2B22324(0, *((void *)v192 + 2) + 1, 1, v192);
      uint64_t v1 = v194;
    }
    uint64_t v9 = __dst;
    unint64_t v128 = *((void *)v6 + 2);
    unint64_t v127 = *((void *)v6 + 3);
    unint64_t v129 = v128 + 1;
    uint64_t v3 = v196;
    uint64_t v10 = v198;
    uint64_t v11 = v200;
    if (v128 >= v127 >> 1)
    {
      uint64_t v179 = sub_1C2B22324((char *)(v127 > 1), v128 + 1, 1, v6);
      uint64_t v9 = __dst;
      uint64_t v10 = v198;
      uint64_t v11 = v200;
      uint64_t v6 = v179;
    }
    *((void *)v6 + 2) = v129;
    uint64_t v130 = v6 + 32;
    v131 = &v6[16 * v128 + 32];
    *(void *)v131 = v199;
    *((void *)v131 + 1) = v10;
    if (v128)
    {
      while (1)
      {
        unint64_t v132 = v129 - 1;
        if (v129 >= 4)
        {
          uint64_t v137 = &v130[16 * v129];
          uint64_t v138 = *((void *)v137 - 8);
          uint64_t v139 = *((void *)v137 - 7);
          BOOL v143 = __OFSUB__(v139, v138);
          uint64_t v140 = v139 - v138;
          if (v143) {
            goto LABEL_243;
          }
          uint64_t v142 = *((void *)v137 - 6);
          uint64_t v141 = *((void *)v137 - 5);
          BOOL v143 = __OFSUB__(v141, v142);
          uint64_t v135 = v141 - v142;
          char v136 = v143;
          if (v143) {
            goto LABEL_244;
          }
          unint64_t v144 = v129 - 2;
          v145 = &v130[16 * v129 - 32];
          uint64_t v147 = *(void *)v145;
          uint64_t v146 = *((void *)v145 + 1);
          BOOL v143 = __OFSUB__(v146, v147);
          uint64_t v148 = v146 - v147;
          if (v143) {
            goto LABEL_246;
          }
          BOOL v143 = __OFADD__(v135, v148);
          uint64_t v149 = v135 + v148;
          if (v143) {
            goto LABEL_249;
          }
          if (v149 >= v140)
          {
            v167 = &v130[16 * v132];
            uint64_t v169 = *(void *)v167;
            uint64_t v168 = *((void *)v167 + 1);
            BOOL v143 = __OFSUB__(v168, v169);
            uint64_t v170 = v168 - v169;
            if (v143) {
              goto LABEL_255;
            }
            BOOL v160 = v135 < v170;
            goto LABEL_205;
          }
        }
        else
        {
          if (v129 != 3)
          {
            uint64_t v161 = *((void *)v6 + 4);
            uint64_t v162 = *((void *)v6 + 5);
            BOOL v143 = __OFSUB__(v162, v161);
            uint64_t v154 = v162 - v161;
            char v155 = v143;
            goto LABEL_199;
          }
          uint64_t v134 = *((void *)v6 + 4);
          uint64_t v133 = *((void *)v6 + 5);
          BOOL v143 = __OFSUB__(v133, v134);
          uint64_t v135 = v133 - v134;
          char v136 = v143;
        }
        if (v136) {
          goto LABEL_245;
        }
        unint64_t v144 = v129 - 2;
        v150 = &v130[16 * v129 - 32];
        uint64_t v152 = *(void *)v150;
        uint64_t v151 = *((void *)v150 + 1);
        BOOL v153 = __OFSUB__(v151, v152);
        uint64_t v154 = v151 - v152;
        char v155 = v153;
        if (v153) {
          goto LABEL_248;
        }
        v156 = &v130[16 * v132];
        uint64_t v158 = *(void *)v156;
        uint64_t v157 = *((void *)v156 + 1);
        BOOL v143 = __OFSUB__(v157, v158);
        uint64_t v159 = v157 - v158;
        if (v143) {
          goto LABEL_251;
        }
        if (__OFADD__(v154, v159)) {
          goto LABEL_252;
        }
        if (v154 + v159 >= v135)
        {
          BOOL v160 = v135 < v159;
LABEL_205:
          if (v160) {
            unint64_t v132 = v144;
          }
          goto LABEL_207;
        }
LABEL_199:
        if (v155) {
          goto LABEL_247;
        }
        uint64_t v163 = &v130[16 * v132];
        uint64_t v165 = *(void *)v163;
        uint64_t v164 = *((void *)v163 + 1);
        BOOL v143 = __OFSUB__(v164, v165);
        uint64_t v166 = v164 - v165;
        if (v143) {
          goto LABEL_250;
        }
        if (v166 < v154)
        {
          uint64_t v10 = v198;
          if (v198 >= v3) {
            goto LABEL_224;
          }
          goto LABEL_14;
        }
LABEL_207:
        unint64_t v171 = v132 - 1;
        if (v132 - 1 >= v129) {
          goto LABEL_239;
        }
        if (!v11) {
          goto LABEL_267;
        }
        v172 = v6;
        v173 = &v130[16 * v171];
        uint64_t v174 = *(void *)v173;
        uint64_t v175 = &v130[16 * v132];
        uint64_t v176 = *((void *)v175 + 1);
        uint64_t v177 = v9;
        sub_1C2B21E7C((char *)(v11 + 24 * *(void *)v173), (char *)(v11 + 24 * *(void *)v175), v11 + 24 * v176, v9);
        if (v1) {
          goto LABEL_235;
        }
        if (v176 < v174) {
          goto LABEL_240;
        }
        if (v132 > *((void *)v172 + 2)) {
          goto LABEL_241;
        }
        *(void *)v173 = v174;
        *(void *)&v130[16 * v171 + 8] = v176;
        unint64_t v178 = *((void *)v172 + 2);
        if (v132 >= v178) {
          goto LABEL_242;
        }
        unint64_t v129 = v178 - 1;
        memmove(&v130[16 * v132], v175 + 16, 16 * (v178 - 1 - v132));
        uint64_t v6 = v172;
        *((void *)v172 + 2) = v178 - 1;
        BOOL v160 = v178 > 2;
        uint64_t v3 = v196;
        uint64_t v10 = v198;
        uint64_t v11 = v200;
        uint64_t v9 = v177;
        if (!v160) {
          goto LABEL_216;
        }
      }
    }
    unint64_t v129 = 1;
LABEL_216:
    if (v10 < v3) {
      continue;
    }
    break;
  }
LABEL_224:
  if (v129 < 2)
  {
LABEL_235:
    swift_bridgeObjectRelease();
    *(void *)(v188 + 16) = 0;
    return swift_bridgeObjectRelease();
  }
  uint64_t v180 = *v189;
  while (1)
  {
    unint64_t v181 = v129 - 2;
    if (v129 < 2) {
      break;
    }
    if (!v180) {
      goto LABEL_269;
    }
    unsigned __int8 v182 = v6;
    uint64_t v183 = *(void *)&v6[16 * v181 + 32];
    uint64_t v184 = *(void *)&v6[16 * v129 + 24];
    BOOL v185 = v9;
    sub_1C2B21E7C((char *)(v180 + 24 * v183), (char *)(v180 + 24 * *(void *)&v6[16 * v129 + 16]), v180 + 24 * v184, v9);
    if (v1) {
      goto LABEL_235;
    }
    if (v184 < v183) {
      goto LABEL_258;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unsigned __int8 v182 = sub_1C2B22680((uint64_t)v182);
    }
    if (v181 >= *((void *)v182 + 2)) {
      goto LABEL_259;
    }
    uint64_t v186 = &v182[16 * v181 + 32];
    *(void *)uint64_t v186 = v183;
    *((void *)v186 + 1) = v184;
    unint64_t v187 = *((void *)v182 + 2);
    if (v129 > v187) {
      goto LABEL_260;
    }
    memmove(&v182[16 * v129 + 16], &v182[16 * v129 + 32], 16 * (v187 - v129));
    uint64_t v6 = v182;
    *((void *)v182 + 2) = v187 - 1;
    unint64_t v129 = v187 - 1;
    uint64_t v9 = v185;
    if (v187 <= 2) {
      goto LABEL_235;
    }
  }
LABEL_256:
  __break(1u);
LABEL_257:
  __break(1u);
LABEL_258:
  __break(1u);
LABEL_259:
  __break(1u);
LABEL_260:
  __break(1u);
LABEL_261:
  __break(1u);
LABEL_262:
  __break(1u);
LABEL_263:
  __break(1u);
LABEL_264:
  __break(1u);
LABEL_265:
  __break(1u);
LABEL_266:
  __break(1u);
LABEL_267:
  __break(1u);
LABEL_268:
  __break(1u);
LABEL_269:
  __break(1u);
LABEL_270:
  uint64_t result = sub_1C2B74980();
  __break(1u);
  return result;
}

uint64_t sub_1C2B20ED0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 16 * a3;
LABEL_5:
    uint64_t v9 = (uint64_t *)(v7 + 16 * v4);
    uint64_t result = *v9;
    uint64_t v10 = v9[1];
    uint64_t v11 = v6;
    uint64_t v12 = (uint64_t *)v8;
    while (1)
    {
      BOOL v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (uint64_t result = sub_1C2B74B50(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      uint64_t result = *v12;
      uint64_t v10 = v12[1];
      *(_OWORD *)uint64_t v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

void sub_1C2B20FA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v19 = *a4;
    uint64_t v5 = *a4 + 8 * a3 - 8;
LABEL_5:
    uint64_t v6 = *(void **)(v19 + 8 * v4);
    uint64_t v7 = a1;
    uint64_t v18 = v5;
    while (1)
    {
      uint64_t v8 = *(void **)v5;
      id v9 = v6;
      id v10 = v8;
      id v11 = objc_msgSend(v9, sel_identifier);
      id v12 = objc_msgSend(v11, sel_rawIdentifier);

      id v13 = objc_msgSend(v10, sel_identifier);
      id v14 = objc_msgSend(v13, sel_rawIdentifier);

      if ((uint64_t)v12 >= (uint64_t)v14)
      {
LABEL_4:
        ++v4;
        uint64_t v5 = v18 + 8;
        if (v4 == a2) {
          return;
        }
        goto LABEL_5;
      }
      if (!v19) {
        break;
      }
      uint64_t v15 = *(void **)v5;
      uint64_t v6 = *(void **)(v5 + 8);
      *(void *)uint64_t v5 = v6;
      *(void *)(v5 + 8) = v15;
      v5 -= 8;
      if (v4 == ++v7) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

uint64_t sub_1C2B210D8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v60 = result;
  if (a3 == a2) {
    return result;
  }
  uint64_t v4 = *a4;
  uint64_t v61 = *a4;
LABEL_6:
  unint64_t v5 = *(void *)(v4 + 24 * a3);
  uint64_t v59 = a3;
  uint64_t v6 = a3;
  while (1)
  {
    uint64_t v7 = (unint64_t *)(v4 + 24 * v6);
    unint64_t v8 = *(v7 - 3);
    uint64_t v62 = v7 - 3;
    uint64_t v63 = v7;
    id v9 = objc_allocWithZone(MEMORY[0x1E4F1CA70]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v67 = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v10 = objc_msgSend(v9, sel_init);
    uint64_t v64 = v6;
    if (v5 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t result = sub_1C2B749C0();
      uint64_t v11 = result;
      if (!result) {
        goto LABEL_20;
      }
    }
    else
    {
      uint64_t v11 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      if (!v11) {
        goto LABEL_20;
      }
    }
    if (v11 < 1) {
      break;
    }
    uint64_t v12 = 0;
    do
    {
      if ((v5 & 0xC000000000000001) != 0) {
        id v13 = (id)MEMORY[0x1C8766C90](v12, v5);
      }
      else {
        id v13 = *(id *)(v5 + 8 * v12 + 32);
      }
      id v14 = v13;
      if (objc_msgSend(v13, sel_meds_isRoutedDoseFormProduct)
        && (id v15 = objc_msgSend(v14, sel_meds_preferredNameForFirstObjectOfRelationshipType_, 982)) != 0)
      {
        uint64_t v16 = v15;
        sub_1C2B73FA0();
      }
      else
      {
      }
      ++v12;
      sub_1C2B257E0(0, (unint64_t *)&qword_1EBF0FEC8, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
      objc_msgSend(v10, sel_addObject_, sub_1C2B74B90());
      swift_unknownObjectRelease();
    }
    while (v11 != v12);
LABEL_20:
    swift_bridgeObjectRelease();
    id v17 = objc_msgSend(v10, sel_array);
    uint64_t v18 = sub_1C2B741D0();

    uint64_t v19 = sub_1C2B5E60C(v18);
    swift_bridgeObjectRelease();

    if (v19) {
      uint64_t v20 = v19;
    }
    else {
      uint64_t v20 = MEMORY[0x1E4FBC860];
    }
    id v21 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v22 = *(void *)(v20 + 16);
    if (v22)
    {
      swift_bridgeObjectRetain();
      uint64_t v23 = (uint64_t *)(v20 + 40);
      do
      {
        uint64_t v25 = *v23;
        if (*v23)
        {
          uint64_t v26 = *(v23 - 1);
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            id v21 = sub_1C2AE08C0(0, v21[2] + 1, 1, v21);
          }
          unint64_t v28 = v21[2];
          unint64_t v27 = v21[3];
          if (v28 >= v27 >> 1) {
            id v21 = sub_1C2AE08C0((void *)(v27 > 1), v28 + 1, 1, v21);
          }
          v21[2] = v28 + 1;
          uint64_t v24 = &v21[2 * v28];
          v24[4] = v26;
          v24[5] = v25;
        }
        v23 += 2;
        --v22;
      }
      while (v22);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    sub_1C2B257E0(0, (unint64_t *)&qword_1EBF10FB0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    sub_1C2AE04F8();
    uint64_t v65 = sub_1C2B73F40();
    uint64_t v30 = v29;
    swift_bridgeObjectRelease();
    id v31 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA70]), sel_init);
    unint64_t v32 = v67;
    uint64_t v66 = v30;
    if (v67 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t result = sub_1C2B749C0();
      uint64_t v33 = result;
      if (!result) {
        goto LABEL_46;
      }
    }
    else
    {
      uint64_t v33 = *(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      if (!v33) {
        goto LABEL_46;
      }
    }
    if (v33 < 1) {
      goto LABEL_66;
    }
    uint64_t v34 = 0;
    do
    {
      if ((v67 & 0xC000000000000001) != 0) {
        id v35 = (id)MEMORY[0x1C8766C90](v34, v32);
      }
      else {
        id v35 = *(id *)(v32 + 8 * v34 + 32);
      }
      uint64_t v36 = v35;
      if (objc_msgSend(v35, sel_meds_isRoutedDoseFormProduct)
        && (id v37 = objc_msgSend(v36, sel_meds_preferredNameForFirstObjectOfRelationshipType_, 982)) != 0)
      {
        unint64_t v38 = v37;
        sub_1C2B73FA0();
      }
      else
      {
      }
      ++v34;
      sub_1C2B257E0(0, (unint64_t *)&qword_1EBF0FEC8, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
      objc_msgSend(v31, sel_addObject_, sub_1C2B74B90());
      swift_unknownObjectRelease();
      unint64_t v32 = v67;
    }
    while (v33 != v34);
LABEL_46:
    swift_bridgeObjectRelease();
    id v39 = objc_msgSend(v31, sel_array);
    uint64_t v40 = sub_1C2B741D0();

    uint64_t v41 = sub_1C2B5E60C(v40);
    swift_bridgeObjectRelease();

    if (v41) {
      uint64_t v42 = v41;
    }
    else {
      uint64_t v42 = MEMORY[0x1E4FBC860];
    }
    id v43 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v44 = *(void *)(v42 + 16);
    if (v44)
    {
      swift_bridgeObjectRetain();
      uint64_t v45 = (uint64_t *)(v42 + 40);
      do
      {
        uint64_t v47 = *v45;
        if (*v45)
        {
          uint64_t v48 = *(v45 - 1);
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            id v43 = sub_1C2AE08C0(0, v43[2] + 1, 1, v43);
          }
          unint64_t v50 = v43[2];
          unint64_t v49 = v43[3];
          if (v50 >= v49 >> 1) {
            id v43 = sub_1C2AE08C0((void *)(v49 > 1), v50 + 1, 1, v43);
          }
          v43[2] = v50 + 1;
          uint64_t v46 = &v43[2 * v50];
          v46[4] = v48;
          v46[5] = v47;
        }
        v45 += 2;
        --v44;
      }
      while (v44);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t v51 = sub_1C2B73F40();
    uint64_t v53 = v52;
    swift_bridgeObjectRelease();
    if (v65 == v51 && v66 == v53)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease_n();
      uint64_t v4 = v61;
LABEL_5:
      a3 = v59 + 1;
      if (v59 + 1 == a2) {
        return result;
      }
      goto LABEL_6;
    }
    char v54 = sub_1C2B74B50();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v4 = v61;
    if (v54)
    {
      if (!v61) {
        goto LABEL_67;
      }
      uint64_t v6 = v64 - 1;
      uint64_t v55 = v63 - 2;
      unint64_t v5 = *v63;
      unint64_t v56 = v63[1];
      unint64_t v57 = v63[2];
      *(_OWORD *)uint64_t v63 = *(_OWORD *)v62;
      v63[2] = v62[2];
      *uint64_t v62 = v5;
      unint64_t *v55 = v56;
      v55[1] = v57;
      if (v64 - 1 != v60) {
        continue;
      }
    }
    goto LABEL_5;
  }
  __break(1u);
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
  return result;
}

uint64_t sub_1C2B21820(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  unint64_t v27 = __src;
  uint64_t v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      id v17 = &v4[16 * v13];
      uint64_t v25 = v17;
      unint64_t v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        uint64_t v18 = (char *)(a3 - 16);
        uint64_t v19 = v6;
        while (1)
        {
          uint64_t v20 = v18 + 16;
          uint64_t v21 = *((void *)v19 - 2);
          uint64_t v22 = *((void *)v19 - 1);
          v19 -= 16;
          BOOL v23 = *((void *)v17 - 2) == v21 && *((void *)v17 - 1) == v22;
          if (v23 || (sub_1C2B74B50() & 1) == 0)
          {
            uint64_t v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17) {
              *(_OWORD *)uint64_t v18 = *((_OWORD *)v17 - 1);
            }
            uint64_t v19 = v6;
            v17 -= 16;
            if (v6 <= v7) {
              goto LABEL_50;
            }
          }
          else
          {
            if (v20 != v6 || v18 >= v6) {
              *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
            }
            unint64_t v27 = v19;
            if (v19 <= v7) {
              goto LABEL_50;
            }
          }
          v18 -= 16;
          uint64_t v6 = v19;
          if (v17 <= v4) {
            goto LABEL_50;
          }
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    id v14 = &v4[16 * v10];
    uint64_t v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        BOOL v15 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
        if (v15 || (sub_1C2B74B50() & 1) == 0)
        {
          if (v7 != v4) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
          }
          v4 += 16;
          uint64_t v26 = v4;
          uint64_t v16 = v6;
        }
        else
        {
          uint64_t v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
          }
        }
        v7 += 16;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      unint64_t v27 = v7;
    }
LABEL_50:
    sub_1C2B22438((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  uint64_t result = sub_1C2B74A10();
  __break(1u);
  return result;
}

uint64_t sub_1C2B21ABC(id *__src, id *a2, unint64_t a3, void **a4)
{
  uint64_t v4 = a2;
  unint64_t v5 = __src;
  int64_t v6 = (char *)a2 - (char *)__src;
  int64_t v7 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v7 = (char *)a2 - (char *)__src;
  }
  uint64_t v8 = v7 >> 3;
  uint64_t v9 = a3 - (void)a2;
  uint64_t v10 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v10 = a3 - (void)a2;
  }
  uint64_t v11 = v10 >> 3;
  id v43 = __src;
  uint64_t v42 = a4;
  if (v8 >= v10 >> 3)
  {
    if (v9 < -7) {
      goto LABEL_46;
    }
    if (a4 != a2 || &a2[v11] <= a4) {
      memmove(a4, a2, 8 * v11);
    }
    BOOL v23 = (char *)&a4[v11];
    uint64_t v41 = v23;
    id v43 = v4;
    if (v5 >= v4 || v9 < 8) {
      goto LABEL_45;
    }
    uint64_t v24 = (id *)(a3 - 8);
    uint64_t v25 = v4;
    id v35 = v5;
    while (1)
    {
      unint64_t v37 = (unint64_t)v23;
      id v39 = v24 + 1;
      uint64_t v26 = v23 - 8;
      unint64_t v27 = *--v25;
      id v28 = *((id *)v23 - 1);
      id v29 = v27;
      id v30 = objc_msgSend(v28, sel_identifier);
      id v31 = objc_msgSend(v30, sel_rawIdentifier);

      id v32 = objc_msgSend(v29, sel_identifier);
      id v33 = objc_msgSend(v32, sel_rawIdentifier);

      if ((uint64_t)v31 < (uint64_t)v33) {
        break;
      }
      uint64_t v41 = v26;
      if ((unint64_t)v39 < v37 || (unint64_t)v24 >= v37)
      {
        *uint64_t v24 = *(id *)v26;
        uint64_t v25 = v4;
        BOOL v23 = v26;
        goto LABEL_43;
      }
      if (v39 != (id *)v37) {
        *uint64_t v24 = *(id *)v26;
      }
      uint64_t v25 = v4;
      BOOL v23 = v26;
      if (v4 <= v35) {
        goto LABEL_45;
      }
LABEL_44:
      --v24;
      uint64_t v4 = v25;
      if (v23 <= (char *)a4) {
        goto LABEL_45;
      }
    }
    BOOL v23 = (char *)v37;
    if (v39 != v4 || v24 >= v4) {
      *uint64_t v24 = *v25;
    }
    id v43 = v25;
LABEL_43:
    if (v25 <= v35) {
      goto LABEL_45;
    }
    goto LABEL_44;
  }
  if (v6 >= -7)
  {
    if (a4 != __src || &__src[v8] <= a4) {
      memmove(a4, __src, 8 * v8);
    }
    unint64_t v38 = (char *)&a4[v8];
    uint64_t v41 = v38;
    if ((unint64_t)v4 < a3 && v6 >= 8)
    {
      uint64_t v12 = a4;
      do
      {
        uint64_t v13 = v5;
        id v14 = *v12;
        id v15 = *v4;
        id v16 = v14;
        id v17 = objc_msgSend(v15, sel_identifier);
        id v18 = objc_msgSend(v17, sel_rawIdentifier);

        id v19 = objc_msgSend(v16, sel_identifier);
        id v20 = objc_msgSend(v19, sel_rawIdentifier);

        if ((uint64_t)v18 >= (uint64_t)v20)
        {
          uint64_t v22 = v13;
          if (v13 != v12) {
            *uint64_t v13 = *v12;
          }
          uint64_t v42 = ++v12;
          uint64_t v21 = v4;
        }
        else
        {
          uint64_t v21 = v4 + 1;
          uint64_t v22 = v13;
          if (v13 < v4 || v13 >= v21 || v13 != v4) {
            *uint64_t v13 = *v4;
          }
        }
        unint64_t v5 = v22 + 1;
        if (v12 >= (void **)v38) {
          break;
        }
        uint64_t v4 = v21;
      }
      while ((unint64_t)v21 < a3);
      id v43 = v5;
    }
LABEL_45:
    sub_1C2B224F4((void **)&v43, (const void **)&v42, &v41);
    return 1;
  }
LABEL_46:
  uint64_t result = sub_1C2B74A10();
  __break(1u);
  return result;
}

uint64_t sub_1C2B21E7C(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  unint64_t v5 = __src;
  uint64_t v6 = a2 - __src;
  uint64_t v7 = (a2 - __src) / 24;
  uint64_t v8 = a3 - (void)a2;
  uint64_t v9 = (uint64_t)(a3 - (void)a2) / 24;
  uint64_t v44 = __src;
  id v43 = __dst;
  if (v7 >= v9)
  {
    if (v8 >= -23)
    {
      if (__dst != a2 || &a2[24 * v9] <= __dst)
      {
        id v20 = a2;
        memmove(__dst, a2, 24 * v9);
        a2 = v20;
      }
      uint64_t v21 = &v4[24 * v9];
      uint64_t v42 = v21;
      uint64_t v44 = a2;
      if (v5 < a2 && v8 >= 24)
      {
        unint64_t v22 = a3 - 24;
        BOOL v23 = a2;
        id v35 = v4;
        id v39 = v5;
        do
        {
          unint64_t v38 = v21;
          uint64_t v24 = v21 - 24;
          v23 -= 24;
          uint64_t v41 = a2;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v25 = MedicationRouteFormConcept.displayString.getter();
          uint64_t v27 = v26;
          if (v25 == MedicationRouteFormConcept.displayString.getter() && v27 == v28) {
            char v29 = 0;
          }
          else {
            char v29 = sub_1C2B74B50();
          }
          id v30 = (char *)(v22 + 24);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v29)
          {
            id v31 = v35;
            uint64_t v21 = v38;
            if (v30 != v41 || v22 >= (unint64_t)v41)
            {
              long long v32 = *(_OWORD *)v23;
              *(void *)(v22 + 16) = *((void *)v23 + 2);
              *(_OWORD *)unint64_t v22 = v32;
            }
            uint64_t v44 = v23;
          }
          else
          {
            uint64_t v42 = v24;
            id v31 = v35;
            BOOL v23 = v41;
            if (v30 < v38 || v22 >= (unint64_t)v38 || v30 != v38)
            {
              long long v33 = *(_OWORD *)v24;
              *(void *)(v22 + 16) = *((void *)v24 + 2);
              *(_OWORD *)unint64_t v22 = v33;
            }
            uint64_t v21 = v24;
          }
          if (v23 <= v39) {
            break;
          }
          v22 -= 24;
          a2 = v23;
        }
        while (v21 > v31);
      }
LABEL_45:
      sub_1C2B225B0((void **)&v44, (const void **)&v43, &v42);
      return 1;
    }
  }
  else if (v6 >= -23)
  {
    if (__dst != __src || &__src[24 * v7] <= __dst)
    {
      uint64_t v10 = a2;
      memmove(__dst, __src, 24 * v7);
      a2 = v10;
    }
    uint64_t v36 = &v4[24 * v7];
    uint64_t v42 = v36;
    if ((unint64_t)a2 < a3 && v6 >= 24)
    {
      while (1)
      {
        uint64_t v40 = a2;
        uint64_t v11 = v4;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v12 = MedicationRouteFormConcept.displayString.getter();
        uint64_t v14 = v13;
        if (v12 == MedicationRouteFormConcept.displayString.getter() && v14 == v15)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
        }
        else
        {
          char v16 = sub_1C2B74B50();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v16)
          {
            id v17 = v40 + 24;
            if (v5 < v40 || v5 >= v17 || v5 != v40)
            {
              long long v18 = *(_OWORD *)v40;
              *((void *)v5 + 2) = *((void *)v40 + 2);
              *(_OWORD *)unint64_t v5 = v18;
            }
            goto LABEL_19;
          }
        }
        if (v5 != v4)
        {
          long long v19 = *(_OWORD *)v4;
          *((void *)v5 + 2) = *((void *)v4 + 2);
          *(_OWORD *)unint64_t v5 = v19;
        }
        v4 += 24;
        id v43 = v11 + 24;
        id v17 = v40;
LABEL_19:
        v5 += 24;
        if (v4 < v36)
        {
          a2 = v17;
          if ((unint64_t)v17 < a3) {
            continue;
          }
        }
        uint64_t v44 = v5;
        goto LABEL_45;
      }
    }
    goto LABEL_45;
  }
  uint64_t result = sub_1C2B74A10();
  __break(1u);
  return result;
}

char *sub_1C2B22324(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C2B254F0(0, &qword_1EA32BE80, (void (*)(uint64_t))sub_1C2B25544);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1C2B22438(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 15;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -16)
  {
    uint64_t result = (char *)sub_1C2B74A10();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
    {
      return (char *)memmove(result, v3, 16 * v7);
    }
  }
  return result;
}

char *sub_1C2B224F4(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 7;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -8)
  {
    uint64_t result = (char *)sub_1C2B74A10();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
    {
      return (char *)memmove(result, v3, 8 * v7);
    }
  }
  return result;
}

char *sub_1C2B225B0(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -24)
  {
    uint64_t result = (char *)sub_1C2B74A10();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 24;
    if (result != v3 || result >= &v3[24 * v6])
    {
      return (char *)memmove(result, v3, 24 * v6);
    }
  }
  return result;
}

char *sub_1C2B22680(uint64_t a1)
{
  return sub_1C2B22324(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1C2B22694(uint64_t a1, char a2)
{
  return sub_1C2B2398C(a1, a2, &qword_1EBF112E0, (unint64_t *)&qword_1EBF112D0);
}

uint64_t sub_1C2B226B0(uint64_t a1, char a2)
{
  return sub_1C2B2398C(a1, a2, &qword_1EA32BC00, &qword_1EA32BC08);
}

uint64_t sub_1C2B226CC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1C2B029C4();
  char v6 = a2;
  uint64_t v7 = sub_1C2B749E0();
  uint64_t v8 = v7;
  if (*(void *)(v5 + 16))
  {
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    unint64_t v38 = (void *)(v5 + 64);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v37 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = v7 + 64;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v22 = v21 | (v14 << 6);
      }
      else
      {
        int64_t v23 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v23 >= v37) {
          goto LABEL_33;
        }
        unint64_t v24 = v38[v23];
        ++v14;
        if (!v24)
        {
          int64_t v14 = v23 + 1;
          if (v23 + 1 >= v37) {
            goto LABEL_33;
          }
          unint64_t v24 = v38[v14];
          if (!v24)
          {
            int64_t v25 = v23 + 2;
            if (v25 >= v37)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v6)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
                if (v36 >= 64) {
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v38 = -1 << v36;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v24 = v38[v25];
            if (!v24)
            {
              while (1)
              {
                int64_t v14 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_40;
                }
                if (v14 >= v37) {
                  goto LABEL_33;
                }
                unint64_t v24 = v38[v14];
                ++v25;
                if (v24) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v14 = v25;
          }
        }
LABEL_30:
        unint64_t v11 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v14 << 6);
      }
      uint64_t v30 = 16 * v22;
      id v31 = (uint64_t *)(*(void *)(v5 + 48) + v30);
      uint64_t v33 = *v31;
      uint64_t v32 = v31[1];
      long long v39 = *(_OWORD *)(*(void *)(v5 + 56) + v30);
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        id v34 = (id)v39;
        id v35 = *((id *)&v39 + 1);
      }
      sub_1C2B74C20();
      sub_1C2B74070();
      uint64_t result = sub_1C2B74C60();
      uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v16 = result & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v28 = v17 == v27;
          if (v17 == v27) {
            unint64_t v17 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v12 + 8 * v17);
        }
        while (v29 == -1);
        unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
      }
      *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      uint64_t v19 = 16 * v18;
      id v20 = (void *)(*(void *)(v8 + 48) + v19);
      *id v20 = v33;
      v20[1] = v32;
      *(_OWORD *)(*(void *)(v8 + 56) + v19) = v39;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v8;
  return result;
}

unint64_t sub_1C2B229E0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1C2B25714();
  char v6 = (void *)sub_1C2B749E0();
  if (*(void *)(v5 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v8 = (void *)(v5 + 64);
    uint64_t v9 = -1;
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    unint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v14 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v15 = v14 | (v13 << 6);
      }
      else
      {
        int64_t v16 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return result;
        }
        if (v16 >= v11) {
          goto LABEL_22;
        }
        unint64_t v17 = v8[v16];
        ++v13;
        if (!v17)
        {
          int64_t v13 = v16 + 1;
          if (v16 + 1 >= v11) {
            goto LABEL_22;
          }
          unint64_t v17 = v8[v13];
          if (!v17)
          {
            int64_t v18 = v16 + 2;
            if (v18 >= v11)
            {
LABEL_22:
              swift_release();
              if (a2)
              {
                uint64_t v23 = 1 << *(unsigned char *)(v5 + 32);
                if (v23 > 63) {
                  bzero((void *)(v5 + 64), ((unint64_t)(v23 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v8 = -1 << v23;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v17 = v8[v18];
            if (!v17)
            {
              while (1)
              {
                int64_t v13 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_29;
                }
                if (v13 >= v11) {
                  goto LABEL_22;
                }
                unint64_t v17 = v8[v13];
                ++v18;
                if (v17) {
                  goto LABEL_19;
                }
              }
            }
            int64_t v13 = v18;
          }
        }
LABEL_19:
        unint64_t v10 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v13 << 6);
      }
      uint64_t v19 = 8 * v15;
      id v20 = *(void **)(*(void *)(v5 + 48) + v19);
      uint64_t v21 = *(void *)(*(void *)(v5 + 56) + v19);
      if ((a2 & 1) == 0)
      {
        id v22 = v20;
        swift_bridgeObjectRetain();
      }
      unint64_t result = sub_1C2B24218(v20, v21, v6);
    }
  }
  unint64_t result = swift_release();
  void *v3 = v6;
  return result;
}

uint64_t sub_1C2B22BC8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1C2B02970(0, &qword_1EA32BBF0);
  char v37 = a2;
  uint64_t v6 = sub_1C2B749E0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  id v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    id v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_1C2B74C20();
    sub_1C2B74070();
    uint64_t result = sub_1C2B74C60();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    int64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *int64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  id v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *id v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1C2B22EE0(uint64_t a1, char a2)
{
  return sub_1C2B2398C(a1, a2, (unint64_t *)&qword_1EA32BBD8, (unint64_t *)&qword_1EBF10810);
}

uint64_t sub_1C2B22EFC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1C2B255A4();
  char v44 = a2;
  uint64_t v6 = sub_1C2B749E0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_51;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v42 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v40 = v2;
  int64_t v41 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  uint64_t v43 = v5;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      goto LABEL_53;
    }
    if (v18 >= v41) {
      break;
    }
    unint64_t v19 = v42;
    unint64_t v20 = v42[v18];
    ++v13;
    if (!v20)
    {
      int64_t v13 = v18 + 1;
      if (v18 + 1 >= v41) {
        goto LABEL_44;
      }
      unint64_t v20 = v42[v13];
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v41)
        {
LABEL_44:
          swift_release();
          uint64_t v3 = v40;
          if ((v44 & 1) == 0) {
            goto LABEL_51;
          }
          goto LABEL_47;
        }
        unint64_t v20 = v42[v21];
        if (!v20)
        {
          while (1)
          {
            int64_t v13 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_54;
            }
            if (v13 >= v41) {
              goto LABEL_44;
            }
            unint64_t v20 = v42[v13];
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v21;
      }
    }
LABEL_21:
    unint64_t v10 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_22:
    id v22 = (unint64_t *)(*(void *)(v5 + 48) + 24 * v17);
    unint64_t v24 = *v22;
    unint64_t v23 = v22[1];
    unint64_t v25 = v22[2];
    uint64_t v26 = *(void *)(*(void *)(v5 + 56) + 8 * v17);
    if ((v44 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1C2B74C20();
    int64_t v45 = v13;
    if (v24 >> 62)
    {
      swift_bridgeObjectRetain_n();
      sub_1C2B749C0();
      swift_bridgeObjectRelease();
      sub_1C2B74C30();
      swift_bridgeObjectRetain();
      uint64_t v27 = sub_1C2B749C0();
      uint64_t result = swift_bridgeObjectRelease();
      if (!v27) {
        goto LABEL_33;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t result = sub_1C2B74C30();
      uint64_t v27 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v27) {
        goto LABEL_33;
      }
    }
    if (v27 < 1)
    {
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
      return result;
    }
    if ((v24 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v27; ++i)
      {
        MEMORY[0x1C8766C90](i, v24);
        sub_1C2B74600();
        swift_unknownObjectRelease();
      }
    }
    else
    {
      uint64_t v29 = 0;
      do
      {
        uint64_t v30 = *(void **)(v24 + 8 * v29++ + 32);
        id v31 = v30;
        sub_1C2B74600();
      }
      while (v27 != v29);
    }
LABEL_33:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1C2B74070();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1C2B74C60();
    uint64_t v32 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v33 = result & ~v32;
    unint64_t v34 = v33 >> 6;
    if (((-1 << v33) & ~*(void *)(v11 + 8 * (v33 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v33) & ~*(void *)(v11 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v35 = 0;
      unint64_t v36 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_52;
        }
        BOOL v37 = v34 == v36;
        if (v34 == v36) {
          unint64_t v34 = 0;
        }
        v35 |= v37;
        uint64_t v38 = *(void *)(v11 + 8 * v34);
      }
      while (v38 == -1);
      unint64_t v14 = __clz(__rbit64(~v38)) + (v34 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    unint64_t v15 = (unint64_t *)(*(void *)(v7 + 48) + 24 * v14);
    *unint64_t v15 = v24;
    v15[1] = v23;
    v15[2] = v25;
    *(void *)(*(void *)(v7 + 56) + 8 * v14) = v26;
    ++*(void *)(v7 + 16);
    uint64_t v5 = v43;
    int64_t v13 = v45;
  }
  swift_release();
  uint64_t v3 = v40;
  unint64_t v19 = v42;
  if ((v44 & 1) == 0) {
    goto LABEL_51;
  }
LABEL_47:
  uint64_t v39 = 1 << *(unsigned char *)(v5 + 32);
  if (v39 >= 64) {
    bzero(v19, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v19 = -1 << v39;
  }
  *(void *)(v5 + 16) = 0;
LABEL_51:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1C2B23344(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1C2B25318();
  uint64_t v6 = sub_1C2B749E0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_42;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  char v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
      return result;
    }
    if (v18 >= v36) {
      break;
    }
    unint64_t v19 = (void *)(v5 + 64);
    unint64_t v20 = *(void *)(v37 + 8 * v18);
    ++v13;
    if (!v20)
    {
      int64_t v13 = v18 + 1;
      if (v18 + 1 >= v36) {
        goto LABEL_35;
      }
      unint64_t v20 = *(void *)(v37 + 8 * v13);
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v36)
        {
LABEL_35:
          swift_release();
          uint64_t v3 = v35;
          if ((a2 & 1) == 0) {
            goto LABEL_42;
          }
          goto LABEL_38;
        }
        unint64_t v20 = *(void *)(v37 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            int64_t v13 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_44;
            }
            if (v13 >= v36) {
              goto LABEL_35;
            }
            unint64_t v20 = *(void *)(v37 + 8 * v13);
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v21;
      }
    }
LABEL_21:
    unint64_t v10 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_22:
    uint64_t v22 = 8 * v17;
    unint64_t v23 = *(void **)(*(void *)(v5 + 48) + v22);
    uint64_t v24 = *(void *)(*(void *)(v5 + 56) + v22);
    if ((a2 & 1) == 0)
    {
      id v25 = v23;
      swift_bridgeObjectRetain();
    }
    sub_1C2B74C20();
    sub_1C2B74C40();
    if (v23)
    {
      id v26 = v23;
      sub_1C2B74600();
    }
    uint64_t result = sub_1C2B74C60();
    uint64_t v27 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v28 = result & ~v27;
    unint64_t v29 = v28 >> 6;
    if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v30 = 0;
      unint64_t v31 = (unint64_t)(63 - v27) >> 6;
      do
      {
        if (++v29 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_43;
        }
        BOOL v32 = v29 == v31;
        if (v29 == v31) {
          unint64_t v29 = 0;
        }
        v30 |= v32;
        uint64_t v33 = *(void *)(v11 + 8 * v29);
      }
      while (v33 == -1);
      unint64_t v14 = __clz(__rbit64(~v33)) + (v29 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    uint64_t v15 = 8 * v14;
    *(void *)(*(void *)(v7 + 48) + v15) = v23;
    *(void *)(*(void *)(v7 + 56) + v15) = v24;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  unint64_t v19 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_42;
  }
LABEL_38:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v19, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v19 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_42:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_1C2B2365C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1C2B02970(0, (unint64_t *)&qword_1EA32BBE0);
  char v6 = a2;
  uint64_t v7 = sub_1C2B749E0();
  uint64_t v8 = v7;
  if (*(void *)(v5 + 16))
  {
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    char v35 = (void *)(v5 + 64);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v34 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = v7 + 64;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v18 = v17 | (v14 << 6);
      }
      else
      {
        int64_t v19 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v19 >= v34) {
          goto LABEL_34;
        }
        unint64_t v20 = v35[v19];
        ++v14;
        if (!v20)
        {
          int64_t v14 = v19 + 1;
          if (v19 + 1 >= v34) {
            goto LABEL_34;
          }
          unint64_t v20 = v35[v14];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v34)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v2;
              if (v6)
              {
                uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
                if (v33 >= 64) {
                  bzero(v35, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *char v35 = -1 << v33;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v20 = v35[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v14 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_41;
                }
                if (v14 >= v34) {
                  goto LABEL_34;
                }
                unint64_t v20 = v35[v14];
                ++v21;
                if (v20) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v14 = v21;
          }
        }
LABEL_21:
        unint64_t v11 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v14 << 6);
      }
      uint64_t v22 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v18);
      uint64_t v24 = *v22;
      uint64_t v23 = v22[1];
      id v25 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v18);
      if (v6)
      {
        sub_1C2AF45B4(v25, v36);
      }
      else
      {
        sub_1C2AF4658((uint64_t)v25, (uint64_t)v36);
        swift_bridgeObjectRetain();
      }
      sub_1C2B74C20();
      sub_1C2B74070();
      uint64_t result = sub_1C2B74C60();
      uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v27 = result & ~v26;
      unint64_t v28 = v27 >> 6;
      if (((-1 << v27) & ~*(void *)(v12 + 8 * (v27 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v27) & ~*(void *)(v12 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v29 = 0;
        unint64_t v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v31 = v28 == v30;
          if (v28 == v30) {
            unint64_t v28 = 0;
          }
          v29 |= v31;
          uint64_t v32 = *(void *)(v12 + 8 * v28);
        }
        while (v32 == -1);
        unint64_t v15 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      unint64_t v16 = (void *)(*(void *)(v8 + 48) + 16 * v15);
      *unint64_t v16 = v24;
      v16[1] = v23;
      uint64_t result = (uint64_t)sub_1C2AF45B4(v36, (_OWORD *)(*(void *)(v8 + 56) + 32 * v15));
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v8;
  return result;
}

uint64_t sub_1C2B23970(uint64_t a1, char a2)
{
  return sub_1C2B2398C(a1, a2, &qword_1EBF10BD0, &qword_1EBF10B78);
}

uint64_t sub_1C2B2398C(uint64_t a1, char a2, unint64_t *a3, unint64_t *a4)
{
  uint64_t v5 = v4;
  uint64_t v7 = *v4;
  sub_1C2B02288(0, a3, a4);
  char v40 = a2;
  uint64_t v8 = sub_1C2B749E0();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16)) {
    goto LABEL_40;
  }
  uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v39 = v7 + 64;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & *(void *)(v7 + 64);
  uint64_t v37 = v4;
  int64_t v38 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v13 = v8 + 64;
  uint64_t result = swift_retain();
  int64_t v15 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v21 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v22 = v21 | (v15 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v38) {
      break;
    }
    uint64_t v24 = (void *)(v7 + 64);
    unint64_t v25 = *(void *)(v39 + 8 * v23);
    ++v15;
    if (!v25)
    {
      int64_t v15 = v23 + 1;
      if (v23 + 1 >= v38) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v39 + 8 * v15);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v38)
        {
LABEL_33:
          swift_release();
          uint64_t v5 = v37;
          if ((v40 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v39 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v15 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v15 >= v38) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v39 + 8 * v15);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v15 = v26;
      }
    }
LABEL_30:
    unint64_t v12 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v15 << 6);
LABEL_31:
    BOOL v31 = (uint64_t *)(*(void *)(v7 + 48) + 16 * v22);
    uint64_t v33 = *v31;
    uint64_t v32 = v31[1];
    int64_t v34 = *(void **)(*(void *)(v7 + 56) + 8 * v22);
    if ((v40 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v35 = v34;
    }
    sub_1C2B74C20();
    sub_1C2B74070();
    uint64_t result = sub_1C2B74C60();
    uint64_t v16 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v17 = result & ~v16;
    unint64_t v18 = v17 >> 6;
    if (((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v18 == v28;
        if (v18 == v28) {
          unint64_t v18 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v13 + 8 * v18);
      }
      while (v30 == -1);
      unint64_t v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(void *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    unint64_t v20 = (void *)(*(void *)(v9 + 48) + 16 * v19);
    *unint64_t v20 = v33;
    v20[1] = v32;
    *(void *)(*(void *)(v9 + 56) + 8 * v19) = v34;
    ++*(void *)(v9 + 16);
  }
  swift_release();
  uint64_t v5 = v37;
  uint64_t v24 = (void *)(v7 + 64);
  if ((v40 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v36 = 1 << *(unsigned char *)(v7 + 32);
  if (v36 >= 64) {
    bzero(v24, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v24 = -1 << v36;
  }
  *(void *)(v7 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v5 = v9;
  return result;
}

uint64_t sub_1C2B23CA4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  sub_1C2B027C8();
  uint64_t v32 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_1C2B0284C();
  char v9 = a2;
  uint64_t v33 = (void *)sub_1C2B749E0();
  if (*(void *)(v8 + 16))
  {
    uint64_t v10 = 1 << *(unsigned char *)(v8 + 32);
    uint64_t v11 = *(void *)(v8 + 64);
    uint64_t v30 = v2;
    BOOL v31 = (void *)(v8 + 64);
    uint64_t v12 = -1;
    if (v10 < 64) {
      uint64_t v12 = ~(-1 << v10);
    }
    unint64_t v13 = v12 & v11;
    int64_t v14 = (unint64_t)(v10 + 63) >> 6;
    uint64_t result = swift_retain();
    int64_t v16 = 0;
    while (1)
    {
      if (v13)
      {
        unint64_t v17 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        unint64_t v18 = v17 | (v16 << 6);
      }
      else
      {
        int64_t v19 = v16 + 1;
        if (__OFADD__(v16, 1))
        {
          __break(1u);
LABEL_32:
          __break(1u);
          return result;
        }
        unint64_t v20 = v31;
        if (v19 >= v14) {
          goto LABEL_23;
        }
        unint64_t v21 = v31[v19];
        ++v16;
        if (!v21)
        {
          int64_t v16 = v19 + 1;
          if (v19 + 1 >= v14) {
            goto LABEL_23;
          }
          unint64_t v21 = v31[v16];
          if (!v21)
          {
            int64_t v22 = v19 + 2;
            if (v22 >= v14)
            {
LABEL_23:
              swift_release();
              if ((v9 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v30;
                goto LABEL_30;
              }
              uint64_t v29 = 1 << *(unsigned char *)(v8 + 32);
              if (v29 >= 64) {
                bzero(v20, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *unint64_t v20 = -1 << v29;
              }
              uint64_t v3 = v30;
              *(void *)(v8 + 16) = 0;
              break;
            }
            unint64_t v21 = v31[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v16 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_32;
                }
                if (v16 >= v14) {
                  goto LABEL_23;
                }
                unint64_t v21 = v31[v16];
                ++v22;
                if (v21) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v16 = v22;
          }
        }
LABEL_20:
        unint64_t v13 = (v21 - 1) & v21;
        unint64_t v18 = __clz(__rbit64(v21)) + (v16 << 6);
      }
      int64_t v23 = (uint64_t *)(*(void *)(v8 + 48) + 32 * v18);
      uint64_t v24 = *v23;
      uint64_t v25 = v23[1];
      uint64_t v27 = v23[2];
      uint64_t v26 = v23[3];
      uint64_t v28 = *(void *)(v8 + 56) + *(void *)(v32 + 72) * v18;
      if (v9)
      {
        sub_1C2AE886C(v28, (uint64_t)v7);
      }
      else
      {
        sub_1C2B0290C(v28, (uint64_t)v7);
        swift_bridgeObjectRetain();
        sub_1C2AE8858(v27, v26);
      }
      uint64_t result = sub_1C2B2437C(v24, v25, v27, v26, (uint64_t)v7, v33);
    }
  }
  uint64_t result = swift_release();
LABEL_30:
  void *v3 = v33;
  return result;
}

uint64_t sub_1C2B23F54(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_1C2B02714();
  uint64_t result = sub_1C2B749E0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v30 = a2;
    int64_t v8 = 0;
    BOOL v31 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v12 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v16 = v15 | (v8 << 6);
      }
      else
      {
        int64_t v17 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v17 >= v12) {
          goto LABEL_31;
        }
        unint64_t v18 = v31[v17];
        ++v8;
        if (!v18)
        {
          int64_t v8 = v17 + 1;
          if (v17 + 1 >= v12) {
            goto LABEL_31;
          }
          unint64_t v18 = v31[v8];
          if (!v18)
          {
            int64_t v19 = v17 + 2;
            if (v19 >= v12)
            {
LABEL_31:
              if ((v30 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_38;
              }
              uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
              if (v29 >= 64) {
                bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *BOOL v31 = -1 << v29;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v18 = v31[v19];
            if (!v18)
            {
              while (1)
              {
                int64_t v8 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v12) {
                  goto LABEL_31;
                }
                unint64_t v18 = v31[v8];
                ++v19;
                if (v18) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v19;
          }
        }
LABEL_21:
        unint64_t v11 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v8 << 6);
      }
      uint64_t v20 = *(void *)(*(void *)(v5 + 48) + 8 * v16);
      char v21 = *(unsigned char *)(*(void *)(v5 + 56) + v16);
      sub_1C2B74C20();
      sub_1C2B74C30();
      uint64_t result = sub_1C2B74C60();
      uint64_t v22 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v13 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v23) & ~*(void *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v13 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v14 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(void *)(*(void *)(v7 + 48) + 8 * v14) = v20;
      *(unsigned char *)(*(void *)(v7 + 56) + v14) = v21;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  uint64_t *v3 = v7;
  return result;
}

unint64_t sub_1C2B24218(void *a1, uint64_t a2, void *a3)
{
  sub_1C2B74C20();
  if (a1)
  {
    sub_1C2B74C40();
    id v6 = a1;
    id v7 = objc_msgSend(v6, sel_ingredientProducts);
    sub_1C2AE3A18(0, (unint64_t *)&qword_1EA32BA78);
    unint64_t v8 = sub_1C2B741D0();

    sub_1C2B24918((uint64_t)v13, v8);
    swift_bridgeObjectRelease();
    id v9 = objc_msgSend(v6, sel_tradeNameProduct);
    if (v9)
    {
      uint64_t v10 = v9;
      sub_1C2B74600();
    }
    else
    {
    }
  }
  else
  {
    sub_1C2B74C40();
  }
  sub_1C2B74C60();
  unint64_t result = sub_1C2B74720();
  *(void *)((char *)a3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
  uint64_t v12 = 8 * result;
  *(void *)(a3[6] + v12) = a1;
  *(void *)(a3[7] + v12) = a2;
  ++a3[2];
  return result;
}

uint64_t sub_1C2B2437C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  sub_1C2B74C20();
  swift_bridgeObjectRetain();
  sub_1C2B74070();
  swift_bridgeObjectRelease();
  if (a4 == 1)
  {
    sub_1C2B74C30();
  }
  else
  {
    sub_1C2B74C30();
    sub_1C2B74C40();
    if (a4)
    {
      swift_bridgeObjectRetain();
      sub_1C2B74070();
      uint64_t v12 = a3;
      uint64_t v13 = a4;
    }
    else
    {
      uint64_t v12 = a3;
      uint64_t v13 = 0;
    }
    sub_1C2B027B4(v12, v13);
  }
  sub_1C2B74C60();
  unint64_t v14 = sub_1C2B74720();
  *(void *)((char *)a6 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v14;
  unint64_t v15 = (void *)(a6[6] + 32 * v14);
  *unint64_t v15 = a1;
  v15[1] = a2;
  v15[2] = a3;
  v15[3] = a4;
  uint64_t v16 = a6[7];
  sub_1C2B027C8();
  uint64_t result = sub_1C2AE886C(a5, v16 + *(void *)(*(void *)(v17 - 8) + 72) * v14);
  ++a6[2];
  return result;
}

void *sub_1C2B244F4(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a4 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v7 = ~(-1 << -(char)v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v11 = 0;
    uint64_t v9 = 0;
LABEL_39:
    *uint64_t result = a4;
    result[1] = v5;
    result[2] = ~v6;
    result[3] = v11;
    result[4] = v8;
    return (void *)v9;
  }
  uint64_t v9 = a3;
  if (!a3)
  {
    int64_t v11 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v10 = a2;
  uint64_t v22 = -1 << *(unsigned char *)(a4 + 32);
  unint64_t v23 = result;
  int64_t v11 = 0;
  uint64_t v12 = 0;
  int64_t v13 = (unint64_t)(63 - v6) >> 6;
  if (!v8) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v14 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  unint64_t v15 = v14 | (v11 << 6);
  while (1)
  {
    ++v12;
    int64_t v19 = (void *)(*(void *)(a4 + 48) + 24 * v15);
    uint64_t v20 = v19[1];
    uint64_t v21 = v19[2];
    *uint64_t v10 = *v19;
    v10[1] = v20;
    v10[2] = v21;
    if (v12 == v9)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v10 += 3;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v16 >= v13) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v5 + 8 * v16);
    if (!v17)
    {
      v11 += 2;
      if (v16 + 1 >= v13)
      {
        unint64_t v8 = 0;
        int64_t v11 = v16;
      }
      else
      {
        unint64_t v17 = *(void *)(v5 + 8 * v11);
        if (v17) {
          goto LABEL_14;
        }
        int64_t v18 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v5 + 8 * v18);
        if (v17)
        {
LABEL_17:
          int64_t v16 = v18;
          goto LABEL_18;
        }
        int64_t v11 = v16 + 3;
        if (v16 + 3 < v13)
        {
          unint64_t v17 = *(void *)(v5 + 8 * v11);
          if (v17)
          {
LABEL_14:
            int64_t v16 = v11;
            goto LABEL_18;
          }
          int64_t v18 = v16 + 4;
          if (v16 + 4 >= v13)
          {
LABEL_33:
            unint64_t v8 = 0;
            goto LABEL_37;
          }
          unint64_t v17 = *(void *)(v5 + 8 * v18);
          if (!v17)
          {
            while (1)
            {
              int64_t v16 = v18 + 1;
              if (__OFADD__(v18, 1)) {
                goto LABEL_42;
              }
              if (v16 >= v13)
              {
                unint64_t v8 = 0;
                int64_t v11 = v13 - 1;
                goto LABEL_37;
              }
              unint64_t v17 = *(void *)(v5 + 8 * v16);
              ++v18;
              if (v17) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v8 = 0;
        int64_t v11 = v16 + 2;
      }
LABEL_37:
      uint64_t v9 = v12;
LABEL_38:
      uint64_t v6 = v22;
      uint64_t result = v23;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v16 << 6);
    int64_t v11 = v16;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1C2B24714(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  int64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    void *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void sub_1C2B24918(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1C2B749C0();
    swift_bridgeObjectRelease();
    sub_1C2B74C30();
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1C2B749C0();
    swift_bridgeObjectRelease();
    if (!v3) {
      return;
    }
  }
  else
  {
    sub_1C2B74C30();
    uint64_t v3 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v3) {
      return;
    }
  }
  if (v3 < 1)
  {
    __break(1u);
  }
  else if ((a2 & 0xC000000000000001) != 0)
  {
    for (uint64_t i = 0; i != v3; ++i)
    {
      MEMORY[0x1C8766C90](i, a2);
      sub_1C2B74600();
      swift_unknownObjectRelease();
    }
  }
  else
  {
    uint64_t v5 = (void **)(a2 + 32);
    do
    {
      uint64_t v6 = *v5++;
      id v7 = v6;
      sub_1C2B74600();

      --v3;
    }
    while (v3);
  }
}

uint64_t sub_1C2B24A30(uint64_t a1)
{
  return sub_1C2B1DA98(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1C2B24A44(uint64_t a1)
{
  return sub_1C2B1E01C(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void sub_1C2B24A58()
{
}

uint64_t sub_1C2B24A6C(uint64_t a1)
{
  return sub_1C2B1E500(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t _s27HealthMedicationsExperience21MedicationGroupingKeyV2eeoiySbAC_ACtFZ_0(id *a1, void **a2)
{
  id v2 = *a1;
  uint64_t v3 = *a2;
  id v4 = objc_msgSend(*a1, sel_ingredientProducts);
  sub_1C2AE3A18(0, (unint64_t *)&qword_1EA32BA78);
  uint64_t v5 = sub_1C2B741D0();

  id v6 = objc_msgSend(v3, sel_ingredientProducts);
  uint64_t v7 = sub_1C2B741D0();

  LOBYTE(v6) = sub_1C2B1A8E0(v5, v7, (uint64_t)&qword_1EA32BA78);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v6)
  {
    id v8 = objc_msgSend(v2, sel_tradeNameProduct);
    id v9 = objc_msgSend(v3, sel_tradeNameProduct);
    id v10 = v9;
    if (v8)
    {
      if (!v9)
      {
        char v12 = 0;
        goto LABEL_10;
      }
      id v11 = v8;
      char v12 = sub_1C2B745F0();
    }
    else
    {
      if (!v9)
      {
        char v12 = 1;
        return v12 & 1;
      }
      char v12 = 0;
    }
    id v8 = v10;
LABEL_10:

    return v12 & 1;
  }
  char v12 = 0;
  return v12 & 1;
}

uint64_t sub_1C2B24BEC(unint64_t a1, void *a2)
{
  unint64_t v3 = a1;
  if (a1 >> 62)
  {
LABEL_35:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1C2B749C0();
    if (v4) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
    {
LABEL_3:
      uint64_t v26 = v4;
      BOOL v27 = a2;
      unint64_t v28 = v3 & 0xC000000000000001;
      uint64_t v5 = 4;
      while (1)
      {
        uint64_t v6 = v5 - 4;
        if (v28)
        {
          id v7 = (id)MEMORY[0x1C8766C90](v5 - 4, v3);
          uint64_t v8 = v5 - 3;
          if (__OFADD__(v6, 1)) {
            goto LABEL_34;
          }
        }
        else
        {
          id v7 = *(id *)(v3 + 8 * v5);
          uint64_t v8 = v5 - 3;
          if (__OFADD__(v6, 1))
          {
LABEL_34:
            __break(1u);
            goto LABEL_35;
          }
        }
        uint64_t v29 = v8;
        id v9 = v7;
        id v10 = objc_msgSend(v9, sel_routedDoseFormProducts);
        sub_1C2AE3A18(0, (unint64_t *)&qword_1EA32BA78);
        unint64_t v11 = sub_1C2B741D0();

        if (v11 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v12 = sub_1C2B749C0();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        swift_bridgeObjectRelease();
        if (!v12) {
          break;
        }
        if (!a2)
        {
          unint64_t v24 = v9;
LABEL_28:
          swift_bridgeObjectRelease();

          return 0;
        }
        unint64_t v13 = v3;
        id v14 = v9;
        id v15 = objc_msgSend(v14, sel_ingredientProducts);
        uint64_t v16 = sub_1C2B741D0();

        id v17 = objc_msgSend(a2, sel_ingredientProducts);
        uint64_t v18 = sub_1C2B741D0();

        LOBYTE(v17) = sub_1C2B1A8E0(v16, v18, (uint64_t)&qword_1EA32BA78);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v17 & 1) == 0)
        {
          id v19 = v14;
LABEL_30:

          uint64_t v21 = v19;
LABEL_31:

LABEL_32:
          swift_bridgeObjectRelease();
          return 0;
        }
        id v19 = objc_msgSend(v14, sel_tradeNameProduct);
        id v20 = objc_msgSend(a2, sel_tradeNameProduct);
        uint64_t v21 = v20;
        if (!v19)
        {

          unint64_t v3 = v13;
          uint64_t v4 = v26;
          a2 = v27;
          if (v21) {
            goto LABEL_31;
          }
LABEL_5:

          goto LABEL_6;
        }
        unint64_t v3 = v13;
        if (!v20)
        {

          goto LABEL_30;
        }
        id v22 = v19;
        char v23 = sub_1C2B745F0();

        uint64_t v4 = v26;
        a2 = v27;
        if ((v23 & 1) == 0) {
          goto LABEL_32;
        }
LABEL_6:
        ++v5;
        if (v29 == v4) {
          goto LABEL_36;
        }
      }

      if (a2)
      {
        unint64_t v24 = 0;
        goto LABEL_28;
      }
      goto LABEL_5;
    }
  }
LABEL_36:
  swift_bridgeObjectRelease();
  return 1;
}

char *keypath_get_selector_ingredientProducts()
{
  return sel_ingredientProducts;
}

unint64_t sub_1C2B24F38()
{
  unint64_t result = qword_1EA32BE38;
  if (!qword_1EA32BE38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA32BE38);
  }
  return result;
}

unint64_t sub_1C2B24F90()
{
  unint64_t result = qword_1EA32BE40;
  if (!qword_1EA32BE40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA32BE40);
  }
  return result;
}

unint64_t sub_1C2B24FE8()
{
  unint64_t result = qword_1EA32BE48;
  if (!qword_1EA32BE48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA32BE48);
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicationGroupingKey()
{
  return &type metadata for MedicationGroupingKey;
}

uint64_t destroy for MedicationRouteFormConcept()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s27HealthMedicationsExperience26MedicationRouteFormConceptVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for MedicationRouteFormConcept(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

void *assignWithTake for MedicationRouteFormConcept(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MedicationRouteFormConcept(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MedicationRouteFormConcept(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicationRouteFormConcept()
{
  return &type metadata for MedicationRouteFormConcept;
}

ValueMetadata *type metadata accessor for MedicationSearchCluster()
{
  return &type metadata for MedicationSearchCluster;
}

ValueMetadata *type metadata accessor for MedicationSearchClusterFormsGrouper()
{
  return &type metadata for MedicationSearchClusterFormsGrouper;
}

void sub_1C2B25248(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1C2AE3A18(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_1C2B252B0()
{
  if (!qword_1EA32BE58)
  {
    type metadata accessor for HKMedicationFreeTextFormTypeCode(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA32BE58);
    }
  }
}

void sub_1C2B25318()
{
  if (!qword_1EA32BE60)
  {
    sub_1C2B25248(255, &qword_1EA32BE30, &qword_1EA32BBE8, 0x1E4F2ADE8, MEMORY[0x1E4FBB718]);
    sub_1C2B25248(255, (unint64_t *)&qword_1EA32BA80, (unint64_t *)&qword_1EA32BA78, 0x1E4F2ADD8, MEMORY[0x1E4FBB320]);
    sub_1C2B253EC();
    unint64_t v0 = sub_1C2B74A00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA32BE60);
    }
  }
}

unint64_t sub_1C2B253EC()
{
  unint64_t result = qword_1EA32BE68;
  if (!qword_1EA32BE68)
  {
    sub_1C2B25248(255, &qword_1EA32BE30, &qword_1EA32BBE8, 0x1E4F2ADE8, MEMORY[0x1E4FBB718]);
    sub_1C2B25488();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA32BE68);
  }
  return result;
}

unint64_t sub_1C2B25488()
{
  unint64_t result = qword_1EA32BE70;
  if (!qword_1EA32BE70)
  {
    sub_1C2AE3A18(255, &qword_1EA32BBE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA32BE70);
  }
  return result;
}

void sub_1C2B254F0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C2B74B20();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C2B25544()
{
  if (!qword_1EA32BE88)
  {
    unint64_t v0 = sub_1C2B74470();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA32BE88);
    }
  }
}

void sub_1C2B255A4()
{
  if (!qword_1EA32BE90)
  {
    sub_1C2B25248(255, &qword_1EA32B9B8, (unint64_t *)&qword_1EA32B9C0, 0x1E4F66B78, MEMORY[0x1E4FBB320]);
    sub_1C2B2563C();
    unint64_t v0 = sub_1C2B74A00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA32BE90);
    }
  }
}

unint64_t sub_1C2B2563C()
{
  unint64_t result = qword_1EA32BE98;
  if (!qword_1EA32BE98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA32BE98);
  }
  return result;
}

void sub_1C2B25690()
{
  if (!qword_1EA32BEA0)
  {
    sub_1C2B25248(255, (unint64_t *)&qword_1EA32BA80, (unint64_t *)&qword_1EA32BA78, 0x1E4F2ADD8, MEMORY[0x1E4FBB320]);
    unint64_t v0 = sub_1C2B74B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA32BEA0);
    }
  }
}

void sub_1C2B25714()
{
  if (!qword_1EA32BEA8)
  {
    sub_1C2B257E0(255, &qword_1EA32BCE8, (uint64_t)&type metadata for MedicationGroupingKey, MEMORY[0x1E4FBB718]);
    sub_1C2B25248(255, &qword_1EA32B9B8, (unint64_t *)&qword_1EA32B9C0, 0x1E4F66B78, MEMORY[0x1E4FBB320]);
    sub_1C2B2582C();
    unint64_t v0 = sub_1C2B74A00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA32BEA8);
    }
  }
}

void sub_1C2B257E0(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_1C2B2582C()
{
  unint64_t result = qword_1EA32BEB0;
  if (!qword_1EA32BEB0)
  {
    sub_1C2B257E0(255, &qword_1EA32BCE8, (uint64_t)&type metadata for MedicationGroupingKey, MEMORY[0x1E4FBB718]);
    sub_1C2B258C0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA32BEB0);
  }
  return result;
}

unint64_t sub_1C2B258C0()
{
  unint64_t result = qword_1EA32BEB8;
  if (!qword_1EA32BEB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA32BEB8);
  }
  return result;
}

uint64_t sub_1C2B25914()
{
  return sub_1C2B741A0();
}

uint64_t sub_1C2B25974()
{
  return sub_1C2B74190();
}

unint64_t sub_1C2B259C4()
{
  unint64_t result = qword_1EBF0FFE0;
  if (!qword_1EBF0FFE0)
  {
    type metadata accessor for HKMedicationDoseEventStatus(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBF0FFE0);
  }
  return result;
}

id MedicationRoomInteractionEvent.__allocating_init(action:roomType:provenance:calendarCache:hasSideEffectsContent:hasPregnancyContent:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, char a5, char a6)
{
  swift_allocObject();
  id v12 = sub_1C2B291F8(a1, a2, a3, a4, a5, a6);

  return v12;
}

unint64_t sub_1C2B25AA4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C2B2B2C8();
  uint64_t v2 = sub_1C2B749F0();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1C2B2B3B0(v6, (uint64_t)&v13, (uint64_t (*)(void))sub_1C2B05564);
    uint64_t v7 = v13;
    unint64_t result = sub_1C2B0018C(v13);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v7;
    unint64_t result = (unint64_t)sub_1C2AF45B4(&v14, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C2B25BD0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C2B2AEB8();
  uint64_t v2 = (void *)sub_1C2B749F0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 2);
    uint64_t v6 = (uint64_t)*(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    id v8 = v7;
    unint64_t result = sub_1C2AE056C(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    BOOL v11 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v11 = v5;
    v11[1] = v6;
    *(void *)(v2[7] + 8 * result) = v8;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    uint64_t v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C2B25CE8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C2B2B1F0();
  uint64_t v2 = sub_1C2B749F0();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1C2B2B3B0(v6, (uint64_t)&v15, (uint64_t (*)(void))sub_1C2B2B25C);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_1C2AE056C(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    BOOL v11 = (uint64_t *)(v3[6] + 16 * result);
    uint64_t *v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_1C2AF45B4(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1C2B25E24(unint64_t a1)
{
  uint64_t v2 = v1;
  unint64_t v3 = a1;
  uint64_t v23 = MEMORY[0x1E4FBC860];
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C2B74740();
    sub_1C2AE3A18(0, &qword_1EA32BF40);
    sub_1C2B2AFA4(&qword_1EA32BF48, &qword_1EA32BF40);
    uint64_t result = sub_1C2B743D0();
    unint64_t v3 = (unint64_t)v22[1];
    id v20 = v22[2];
    uint64_t v5 = (uint64_t)v22[3];
    int64_t v6 = (int64_t)v22[4];
    unint64_t v7 = (unint64_t)v22[5];
  }
  else
  {
    uint64_t v8 = -1 << *(unsigned char *)(a1 + 32);
    id v20 = (void *)(a1 + 56);
    uint64_t v5 = ~v8;
    uint64_t v9 = -v8;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v7 = v10 & *(void *)(a1 + 56);
    uint64_t result = swift_bridgeObjectRetain();
    int64_t v6 = 0;
  }
  int64_t v11 = (unint64_t)(v5 + 64) >> 6;
  if ((v3 & 0x8000000000000000) == 0) {
    goto LABEL_11;
  }
LABEL_8:
  uint64_t v12 = sub_1C2B747B0();
  if (!v12) {
    goto LABEL_35;
  }
  unint64_t v21 = v12;
  sub_1C2AE3A18(0, &qword_1EA32BF40);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  id v13 = v22[0];
  swift_unknownObjectRelease();
  int64_t v14 = v6;
  uint64_t v15 = v7;
  if (!v13) {
    goto LABEL_35;
  }
  while (1)
  {
    v22[0] = v13;
    sub_1C2B27588(v22, &v21);

    if (v2)
    {
      sub_1C2B09DA4();
      return swift_bridgeObjectRelease();
    }
    uint64_t result = sub_1C2AEE744(v21);
    int64_t v6 = v14;
    unint64_t v7 = v15;
    if ((v3 & 0x8000000000000000) != 0) {
      goto LABEL_8;
    }
LABEL_11:
    if (!v7) {
      break;
    }
    uint64_t v15 = (v7 - 1) & v7;
    unint64_t v16 = __clz(__rbit64(v7)) | (v6 << 6);
    int64_t v14 = v6;
LABEL_24:
    id v13 = *(id *)(*(void *)(v3 + 48) + 8 * v16);
    if (!v13) {
      goto LABEL_35;
    }
  }
  int64_t v14 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
    return result;
  }
  if (v14 >= v11) {
    goto LABEL_35;
  }
  unint64_t v17 = v20[v14];
  if (v17)
  {
LABEL_23:
    uint64_t v15 = (v17 - 1) & v17;
    unint64_t v16 = __clz(__rbit64(v17)) + (v14 << 6);
    goto LABEL_24;
  }
  int64_t v18 = v6 + 2;
  if (v6 + 2 >= v11) {
    goto LABEL_35;
  }
  unint64_t v17 = v20[v18];
  if (v17) {
    goto LABEL_22;
  }
  int64_t v18 = v6 + 3;
  if (v6 + 3 >= v11) {
    goto LABEL_35;
  }
  unint64_t v17 = v20[v18];
  if (v17) {
    goto LABEL_22;
  }
  int64_t v18 = v6 + 4;
  if (v6 + 4 >= v11) {
    goto LABEL_35;
  }
  unint64_t v17 = v20[v18];
  if (v17)
  {
LABEL_22:
    int64_t v14 = v18;
    goto LABEL_23;
  }
  int64_t v14 = v6 + 5;
  if (v6 + 5 >= v11) {
    goto LABEL_35;
  }
  unint64_t v17 = v20[v14];
  if (v17) {
    goto LABEL_23;
  }
  id v19 = (char *)(v6 + 6);
  while ((char *)v11 != v19)
  {
    unint64_t v17 = v20[(void)v19++];
    if (v17)
    {
      int64_t v14 = (int64_t)(v19 - 1);
      goto LABEL_23;
    }
  }
LABEL_35:
  sub_1C2B09DA4();
  return v23;
}

id MedicationRoomInteractionEvent.init(action:roomType:provenance:calendarCache:hasSideEffectsContent:hasPregnancyContent:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, char a5, char a6)
{
  id v7 = sub_1C2B291F8(a1, a2, a3, a4, a5, a6);

  return v7;
}

uint64_t sub_1C2B26170()
{
  return 0;
}

uint64_t sub_1C2B26204()
{
  return sub_1C2B26170();
}

uint64_t sub_1C2B2622C()
{
  return 1;
}

unint64_t sub_1C2B26274()
{
  return 0xD00000000000002CLL;
}

uint64_t sub_1C2B26290(void *a1)
{
  uint64_t v2 = sub_1C2B73A90();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(a1, sel_healthDataSource);
  swift_unknownObjectRelease();
  if (v6)
  {
    unint64_t v45 = sub_1C2B25CE8(MEMORY[0x1E4FBC860]);
    if (qword_1EBF10BE0 != -1) {
      swift_once();
    }
    id v7 = off_1EBF10E78;
    sub_1C2B293B0();
    swift_getKeyPath();
    swift_getKeyPath();
    *(void *)&v42[0] = v7;
    swift_retain();
    sub_1C2B73920();
    swift_release();
    swift_release();
    swift_release();
    unint64_t v8 = sub_1C2B73A10();
    swift_release();
    if (v8 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_1C2B749C0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    uint64_t v10 = MEMORY[0x1E4FBB390];
    uint64_t v44 = MEMORY[0x1E4FBB390];
    LOBYTE(v43) = v9 > 0;
    sub_1C2AF45B4(&v43, v42);
    unint64_t v11 = v45;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v41 = v11;
    sub_1C2B017D4(v42, 0x4C7364654D736168, 0xEB00000000747369, isUniquelyReferenced_nonNull_native);
    unint64_t v13 = v41;
    unint64_t v45 = v41;
    swift_bridgeObjectRelease();
    uint64_t v14 = sub_1C2B73FA0();
    uint64_t v16 = v15;
    unint64_t v17 = (SEL *)&block_descriptor_0;
    id v18 = objc_msgSend(a1, sel_environmentDataSource);
    id v19 = objc_msgSend(v18, sel_activePairedDeviceProductType);

    if (v19)
    {
      uint64_t v20 = sub_1C2B73FA0();
      uint64_t v21 = v10;
      uint64_t v23 = v22;

      uint64_t v44 = MEMORY[0x1E4FBB1A0];
      *(void *)&long long v43 = v20;
      *((void *)&v43 + 1) = v23;
      uint64_t v10 = v21;
      unint64_t v17 = (SEL *)&block_descriptor_0;
      sub_1C2AF45B4(&v43, v42);
      char v24 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v41 = v13;
      unint64_t v45 = 0x8000000000000000;
      sub_1C2B017D4(v42, v14, v16, v24);
      unint64_t v45 = v41;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C2B2888C(v14, v16, &v43);
      swift_bridgeObjectRelease();
      sub_1C2B29420((uint64_t)&v43);
    }
    uint64_t v33 = sub_1C2B73FA0();
    uint64_t v35 = v34;
    id v36 = [a1 v17[321]];
    unsigned __int8 v37 = objc_msgSend(v36, sel_isImproveHealthAndActivityEnabled);

    uint64_t v44 = v10;
    LOBYTE(v43) = v37;
    sub_1C2AF45B4(&v43, v42);
    unint64_t v38 = v45;
    char v39 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v41 = v38;
    unint64_t v45 = 0x8000000000000000;
    sub_1C2B017D4(v42, v33, v35, v39);
    unint64_t v45 = v41;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v45;
  }
  else
  {
    sub_1C2B73A70();
    char v25 = sub_1C2B73A80();
    uint64_t v26 = sub_1C2B744D0();
    if (os_log_type_enabled(v25, (os_log_type_t)v26))
    {
      BOOL v27 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      *(void *)&long long v43 = v28;
      *(_DWORD *)BOOL v27 = 136446210;
      char v40 = v27 + 4;
      uint64_t v29 = sub_1C2B74CD0();
      *(void *)&v42[0] = sub_1C2AEEE6C(v29, v30, (uint64_t *)&v43);
      sub_1C2B74650();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2ADB000, v25, (os_log_type_t)v26, "[%{public}s] Tried to create a payload with a dataSource containing nil healthDataSource", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C8767A10](v28, -1, -1);
      MEMORY[0x1C8767A10](v27, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    sub_1C2B2935C();
    swift_allocError();
    *BOOL v31 = 0xD00000000000002CLL;
    v31[1] = 0x80000001C2B7B450;
    return swift_willThrow();
  }
}

uint64_t sub_1C2B26840(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1C2B73A90();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)&v82 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C2B73710();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v83 = v8;
  uint64_t v84 = v9;
  MEMORY[0x1F4188790](v8);
  unint64_t v11 = (char *)&v82 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = objc_msgSend(a1, sel_healthDataSource);
  if (v12)
  {
    unint64_t v13 = v12;
    unint64_t v14 = sub_1C2B25CE8(MEMORY[0x1E4FBC860]);
    id v85 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F66AD8]), sel_initWithDataSource_, v13);
    id v15 = (id)HKStringFromMedicationRoomProvenance();
    uint64_t v16 = sub_1C2B73FA0();
    uint64_t v18 = v17;

    uint64_t v19 = MEMORY[0x1E4FBB1A0];
    uint64_t v89 = MEMORY[0x1E4FBB1A0];
    *(void *)&long long v88 = v16;
    *((void *)&v88 + 1) = v18;
    sub_1C2AF45B4(&v88, v87);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v90 = v14;
    sub_1C2B017D4(v87, 0x6E616E65766F7270, 0xEA00000000006563, isUniquelyReferenced_nonNull_native);
    unint64_t v21 = v90;
    swift_bridgeObjectRelease();
    id v22 = (id)HKStringFromMedicationRoomType();
    uint64_t v23 = sub_1C2B73FA0();
    uint64_t v25 = v24;

    uint64_t v89 = v19;
    *(void *)&long long v88 = v23;
    *((void *)&v88 + 1) = v25;
    sub_1C2AF45B4(&v88, v87);
    char v26 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v90 = v21;
    sub_1C2B017D4(v87, 0x657079546D6F6F72, 0xE800000000000000, v26);
    unint64_t v27 = v90;
    swift_bridgeObjectRelease();
    id v28 = (id)HKStringFromMedicationRoomAnalyticsAction();
    uint64_t v29 = sub_1C2B73FA0();
    uint64_t v31 = v30;

    uint64_t v89 = v19;
    *(void *)&long long v88 = v29;
    *((void *)&v88 + 1) = v31;
    sub_1C2AF45B4(&v88, v87);
    char v32 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v90 = v27;
    sub_1C2B017D4(v87, 0x6E6F69746361, 0xE600000000000000, v32);
    unint64_t v33 = v90;
    swift_bridgeObjectRelease();
    char v34 = sub_1C2B2983C();
    uint64_t v35 = MEMORY[0x1E4FBB390];
    uint64_t v89 = MEMORY[0x1E4FBB390];
    LOBYTE(v88) = v34 & 1;
    sub_1C2AF45B4(&v88, v87);
    char v36 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v90 = v33;
    sub_1C2B017D4(v87, 0xD000000000000013, 0x80000001C2B7B480, v36);
    unint64_t v37 = v90;
    swift_bridgeObjectRelease();
    char v38 = *(unsigned char *)(v2 + 48);
    uint64_t v89 = v35;
    LOBYTE(v88) = v38;
    sub_1C2AF45B4(&v88, v87);
    char v39 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v90 = v37;
    sub_1C2B017D4(v87, 0xD000000000000015, 0x80000001C2B7AC90, v39);
    unint64_t v40 = v90;
    swift_bridgeObjectRelease();
    char v41 = *(unsigned char *)(v2 + 49);
    uint64_t v89 = v35;
    LOBYTE(v88) = v41;
    sub_1C2AF45B4(&v88, v87);
    char v42 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v86 = v40;
    sub_1C2B017D4(v87, 0xD000000000000013, 0x80000001C2B7ACB0, v42);
    unint64_t v43 = v86;
    unint64_t v90 = v86;
    swift_bridgeObjectRelease();
    id v44 = sub_1C2B2A13C();
    if (v45)
    {
      uint64_t v89 = v19;
      *(void *)&long long v88 = v44;
      *((void *)&v88 + 1) = v45;
      sub_1C2AF45B4(&v88, v87);
      char v46 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v86 = v43;
      sub_1C2B017D4(v87, 0xD000000000000018, 0x80000001C2B7B4A0, v46);
      unint64_t v90 = v86;
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C2B2888C(0xD000000000000018, 0x80000001C2B7B4A0, &v88);
      sub_1C2B29420((uint64_t)&v88);
    }
    uint64_t v55 = v19;
    uint64_t v56 = sub_1C2B73FA0();
    uint64_t v58 = v57;
    id v59 = objc_msgSend(v85, sel_biologicalSex);
    if (v59)
    {
      uint64_t v60 = v59;
      uint64_t v61 = sub_1C2B73FA0();
      uint64_t v63 = v62;

      uint64_t v89 = v55;
      uint64_t v64 = v83;
      if (v63)
      {
LABEL_13:
        *(void *)&long long v88 = v61;
        *((void *)&v88 + 1) = v63;
        sub_1C2AF45B4(&v88, v87);
        unint64_t v66 = v90;
        char v67 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v86 = v66;
        unint64_t v90 = 0x8000000000000000;
        sub_1C2B017D4(v87, v56, v58, v67);
        unint64_t v90 = v86;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v68 = sub_1C2B73FA0();
        uint64_t v70 = v69;
        sub_1C2B73700();
        uint64_t v71 = (void *)sub_1C2B736C0();
        (*(void (**)(char *, uint64_t))(v84 + 8))(v11, v64);
        id v72 = v85;
        id v73 = objc_msgSend(v85, sel_bucketedUserAgeForCurrentDate_, v71);

        uint64_t v89 = sub_1C2AE3A18(0, &qword_1EA32BA48);
        *(void *)&long long v88 = v73;
        sub_1C2AF45B4(&v88, v87);
        unint64_t v74 = v90;
        char v75 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v86 = v74;
        unint64_t v90 = 0x8000000000000000;
        sub_1C2B017D4(v87, v68, v70, v75);
        unint64_t v90 = v86;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v76 = sub_1C2B73FA0();
        uint64_t v78 = v77;
        char v79 = sub_1C2B28000(v13);
        uint64_t v89 = MEMORY[0x1E4FBB390];
        LOBYTE(v88) = v79 & 1;
        sub_1C2AF45B4(&v88, v87);
        unint64_t v80 = v90;
        char v81 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v86 = v80;
        unint64_t v90 = 0x8000000000000000;
        sub_1C2B017D4(v87, v76, v78, v81);
        unint64_t v90 = v86;
        swift_unknownObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v90;
      }
    }
    else
    {
      uint64_t v89 = v55;
      uint64_t v64 = v83;
    }
    uint64_t v61 = sub_1C2B73FA0();
    uint64_t v63 = v65;
    goto LABEL_13;
  }
  sub_1C2B73A70();
  uint64_t v47 = sub_1C2B73A80();
  os_log_type_t v48 = sub_1C2B744D0();
  if (os_log_type_enabled(v47, v48))
  {
    unint64_t v49 = (uint8_t *)swift_slowAlloc();
    uint64_t v50 = swift_slowAlloc();
    *(void *)&long long v88 = v50;
    *(_DWORD *)unint64_t v49 = 136446210;
    id v85 = v49 + 4;
    uint64_t v51 = sub_1C2B74CD0();
    *(void *)&v87[0] = sub_1C2AEEE6C(v51, v52, (uint64_t *)&v88);
    sub_1C2B74650();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2ADB000, v47, v48, "[%{public}s] Tried to create a payload with a dataSource containing nil healthDataSource", v49, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C8767A10](v50, -1, -1);
    MEMORY[0x1C8767A10](v49, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1C2B2935C();
  swift_allocError();
  void *v53 = 0xD00000000000002CLL;
  v53[1] = 0x80000001C2B7B450;
  return swift_willThrow();
}

id sub_1C2B270E0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(id))
{
  id v6 = a3;
  swift_retain();
  a5(v6);
  swift_release();

  id v7 = (void *)sub_1C2B73EE0();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1C2B271D8(unint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = sub_1C2B73A90();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  id v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v14 = result;
    if (a2)
    {
      id v15 = a2;
      sub_1C2B73A70();
      id v16 = a2;
      id v17 = a2;
      uint64_t v18 = sub_1C2B73A80();
      os_log_type_t v19 = sub_1C2B744C0();
      int v20 = v19;
      if (os_log_type_enabled(v18, v19))
      {
        uint64_t v21 = swift_slowAlloc();
        uint64_t v34 = swift_slowAlloc();
        v37[0] = v34;
        *(_DWORD *)uint64_t v21 = 136315650;
        int v33 = v20;
        uint64_t v22 = sub_1C2B74CD0();
        uint64_t v24 = sub_1C2AEEE6C(v22, v23, v37);
        uint64_t v35 = a4;
        uint64_t v36 = v24;
        sub_1C2B74650();
        swift_bridgeObjectRelease();
        *(_WORD *)(v21 + 12) = 2080;
        uint64_t v36 = sub_1C2AEEE6C(0xD00000000000001DLL, 0x80000001C2B7B690, v37);
        sub_1C2B74650();
        *(_WORD *)(v21 + 22) = 2080;
        uint64_t v36 = (uint64_t)a2;
        id v25 = a2;
        sub_1C2AF44C8();
        uint64_t v26 = sub_1C2B74020();
        uint64_t v36 = sub_1C2AEEE6C(v26, v27, v37);
        sub_1C2B74650();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1C2ADB000, v18, (os_log_type_t)v33, "%s.%s Error: %s", (uint8_t *)v21, 0x20u);
        uint64_t v28 = v34;
        swift_arrayDestroy();
        MEMORY[0x1C8767A10](v28, -1, -1);
        MEMORY[0x1C8767A10](v21, -1, -1);
      }
      else
      {
      }
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      sub_1C2B74590();
    }
    else
    {
      if (a1)
      {
        unint64_t v29 = sub_1C2B25E24(a1);
        swift_retain();
        uint64_t v30 = sub_1C2B294A4(v29, v14);
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v31 = (unint64_t)v30 >> 62
            ? sub_1C2B749C0()
            : *(void *)(((unint64_t)v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRelease();
        if (v31 >= 1)
        {
          swift_beginAccess();
          *(unsigned char *)(a5 + 16) = 1;
        }
      }
      sub_1C2B74590();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1C2B27588@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id v2 = objc_msgSend(*a1, sel_interactions);
  sub_1C2AE3A18(0, &qword_1EA32BF50);
  sub_1C2B2AFA4(&qword_1EA32BF58, &qword_1EA32BF50);
  uint64_t v3 = sub_1C2B74380();

  if ((v3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = sub_1C2B74780();
    if (!v4) {
      goto LABEL_15;
    }
    uint64_t v5 = v4;
    uint64_t v28 = MEMORY[0x1E4FBC860];
    sub_1C2B74900();
    uint64_t v25 = sub_1C2B74730();
    uint64_t v26 = v6;
    char v27 = 1;
    if ((v5 & 0x8000000000000000) == 0) {
      goto LABEL_9;
    }
    __break(1u);
  }
  uint64_t v5 = *(void *)(v3 + 16);
  if (!v5)
  {
LABEL_15:
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v22 = MEMORY[0x1E4FBC860];
LABEL_16:
    *a2 = v22;
    return result;
  }
  uint64_t v28 = MEMORY[0x1E4FBC860];
  sub_1C2B74900();
  uint64_t v25 = sub_1C2B29170(v3);
  uint64_t v26 = v7;
  char v27 = v8 & 1;
  while (1)
  {
LABEL_9:
    while (1)
    {
      int64_t v14 = v25;
      uint64_t v15 = v26;
      char v16 = v27;
      sub_1C2B28EF8(v25, v26, v27, v3);
      uint64_t v18 = v17;
      id v19 = objc_msgSend(v17, sel_severity);

      sub_1C2B748D0();
      sub_1C2B74910();
      sub_1C2B74920();
      uint64_t result = sub_1C2B748E0();
      if ((v3 & 0xC000000000000001) != 0) {
        break;
      }
      int64_t v9 = sub_1C2B28E14(v14, v15, v16, v3);
      uint64_t v11 = v10;
      char v13 = v12;
      sub_1C2B2B1E4(v14, v15, v16);
      uint64_t v25 = v9;
      uint64_t v26 = v11;
      char v27 = v13 & 1;
      if (!--v5) {
        goto LABEL_14;
      }
    }
    if ((v16 & 1) == 0) {
      break;
    }
    if (sub_1C2B74750()) {
      swift_isUniquelyReferenced_nonNull_native();
    }
    sub_1C2B2B150();
    uint64_t v21 = (void (*)(unsigned char *, void))sub_1C2B743A0();
    sub_1C2B747C0();
    v21(v24, 0);
    if (!--v5)
    {
LABEL_14:
      sub_1C2B2B1E4(v25, v26, v27);
      uint64_t v22 = v28;
      uint64_t result = swift_bridgeObjectRelease();
      goto LABEL_16;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C2B27834(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1C2AE3A18(0, &qword_1EA32BF40);
    sub_1C2B2AFA4(&qword_1EA32BF48, &qword_1EA32BF40);
    uint64_t v4 = sub_1C2B74380();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2B27904()
{
  sub_1C2B2B104(0, &qword_1EBF0FE00, MEMORY[0x1E4FBB390], MEMORY[0x1E4F65FF8]);
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v5 = (char *)&v16 - v4;
  if ((MEMORY[0x1E4FBC860] & 0xC000000000000000) != 0 && sub_1C2B749C0()) {
    sub_1C2AF3D64(MEMORY[0x1E4FBC860]);
  }
  else {
    uint64_t v6 = MEMORY[0x1E4FBC870];
  }
  uint64_t v20 = v6;
  uint64_t v7 = *(void *)(v0 + 64);
  uint64_t v8 = v7
     + OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__isAlcoholDrugInteractionFactorEnabled;
  swift_beginAccess();
  int64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v9(v5, v8, v2);
  sub_1C2B73980();
  uint64_t v10 = *(void (**)(char *, uint64_t))(v3 + 8);
  v10(v5, v2);
  if (LOBYTE(v19[0]) == 1)
  {
    sub_1C2B4700C(v19, objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithUnsignedInteger_, 1));
  }
  uint64_t v11 = v7
      + OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__isTobaccoDrugInteractionFactorEnabled;
  swift_beginAccess();
  v9(v5, v11, v2);
  sub_1C2B73980();
  v10(v5, v2);
  if (LOBYTE(v18[0]) == 1)
  {
    sub_1C2B4700C(v18, objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithUnsignedInteger_, 3));
  }
  uint64_t v12 = v7
      + OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__isMarijuanaDrugInteractionFactorEnabled;
  swift_beginAccess();
  v9(v5, v12, v2);
  sub_1C2B73980();
  v10(v5, v2);
  if (v17 == 1)
  {
    sub_1C2B4700C(&v17, objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithUnsignedInteger_, 2));
  }
  uint64_t v13 = v20;
  if ((v20 & 0xC000000000000001) == 0)
  {
    if (*(void *)(v20 + 16)) {
      return v13;
    }
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_1C2B74780();
  swift_bridgeObjectRelease();
  if (!v14)
  {
LABEL_11:
    sub_1C2B4700C(&v17, objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithUnsignedInteger_, 0));

    return v20;
  }
  return v13;
}

void sub_1C2B27C78(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = sub_1C2B73A90();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    if (!a2)
    {
LABEL_12:
      sub_1C2B74590();
      return;
    }
    if (a2 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v25 = sub_1C2B749C0();
      if (v25) {
        goto LABEL_7;
      }
    }
    else
    {
      uint64_t v25 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v25)
      {
LABEL_7:
        if ((a2 & 0xC000000000000001) != 0)
        {
          id v26 = (id)MEMORY[0x1C8766C90](0, a2);
        }
        else
        {
          if (!*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            return;
          }
          id v26 = *(id *)(a2 + 32);
        }
        uint64_t v25 = (uint64_t)v26;
      }
    }
    swift_bridgeObjectRelease();
    swift_beginAccess();
    char v27 = *(void **)(a5 + 16);
    *(void *)(a5 + 16) = v25;

    goto LABEL_12;
  }
  id v13 = a3;
  sub_1C2B73A70();
  id v14 = a3;
  id v15 = a3;
  uint64_t v16 = sub_1C2B73A80();
  os_log_type_t v17 = sub_1C2B744C0();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    v28[0] = swift_slowAlloc();
    v30[0] = v28[0];
    *(_DWORD *)uint64_t v18 = 136315650;
    v28[1] = a4;
    uint64_t v19 = sub_1C2B74CD0();
    uint64_t v29 = sub_1C2AEEE6C(v19, v20, v30);
    sub_1C2B74650();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2080;
    uint64_t v29 = sub_1C2AEEE6C(0xD000000000000021, 0x80000001C2B7B640, v30);
    sub_1C2B74650();
    *(_WORD *)(v18 + 22) = 2080;
    uint64_t v29 = (uint64_t)a3;
    id v21 = a3;
    sub_1C2AF44C8();
    uint64_t v22 = sub_1C2B74020();
    uint64_t v29 = sub_1C2AEEE6C(v22, v23, v30);
    sub_1C2B74650();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C2ADB000, v16, v17, "%s.%s Error: %s", (uint8_t *)v18, 0x20u);
    uint64_t v24 = v28[0];
    swift_arrayDestroy();
    MEMORY[0x1C8767A10](v24, -1, -1);
    MEMORY[0x1C8767A10](v18, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_1C2B74590();
}

uint64_t sub_1C2B28000(void *a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1C2B73DE0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v29 - v9;
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = 0;
  dispatch_semaphore_t v12 = dispatch_semaphore_create(0);
  id v13 = (void *)swift_allocObject();
  v13[2] = v11;
  v13[3] = v12;
  uint64_t v31 = v3;
  v13[4] = v3;
  aBlock[4] = (uint64_t)sub_1C2B2AF80;
  aBlock[5] = (uint64_t)v13;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1C2B28594;
  aBlock[3] = (uint64_t)&block_descriptor_7;
  id v14 = _Block_copy(aBlock);
  swift_retain();
  id v15 = v12;
  swift_release();
  objc_msgSend(a1, sel_isImproveHealthRecordsAnalyticsSubmissionAllowedWithCompletion_, v14);
  _Block_release(v14);
  sub_1C2B73DD0();
  MEMORY[0x1C8766240](v8, 3.0);
  uint64_t v16 = *(void (**)(char *, uint64_t))(v5 + 8);
  os_log_type_t v17 = v8;
  uint64_t v18 = v15;
  v16(v17, v4);
  sub_1C2B74580();
  v16(v10, v4);
  if ((sub_1C2B73D80() & 1) == 0) {
    goto LABEL_7;
  }
  if (qword_1EBF11340 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_1C2B73A90();
  __swift_project_value_buffer(v19, (uint64_t)qword_1EBF11348);
  unint64_t v20 = sub_1C2B73A80();
  os_log_type_t v21 = sub_1C2B744C0();
  if (!os_log_type_enabled(v20, v21))
  {

LABEL_7:
    goto LABEL_8;
  }
  uint64_t v22 = (uint8_t *)swift_slowAlloc();
  uint64_t v23 = swift_slowAlloc();
  uint64_t v30 = v18;
  uint64_t v24 = v23;
  aBlock[0] = v23;
  *(_DWORD *)uint64_t v22 = 136446210;
  uint64_t v25 = sub_1C2B74CD0();
  uint64_t v32 = sub_1C2AEEE6C(v25, v26, aBlock);
  sub_1C2B74650();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_1C2ADB000, v20, v21, "[%{public}s] Timed out fetching IHR status for analytics.", v22, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x1C8767A10](v24, -1, -1);
  MEMORY[0x1C8767A10](v22, -1, -1);

LABEL_8:
  swift_beginAccess();
  uint64_t v27 = *(unsigned __int8 *)(v11 + 16);
  swift_release();
  return v27;
}

uint64_t sub_1C2B283D0(void *a1, uint64_t a2, uint64_t a3)
{
  if (a1)
  {
    unsigned __int8 v4 = objc_msgSend(a1, sel_BOOLValue);
    swift_beginAccess();
    *(unsigned char *)(a3 + 16) = v4;
  }
  else
  {
    if (qword_1EBF11340 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_1C2B73A90();
    __swift_project_value_buffer(v5, (uint64_t)qword_1EBF11348);
    uint64_t v6 = sub_1C2B73A80();
    os_log_type_t v7 = sub_1C2B744C0();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      v13[0] = v9;
      *(_DWORD *)uint64_t v8 = 136446210;
      uint64_t v10 = sub_1C2B74CD0();
      v13[3] = sub_1C2AEEE6C(v10, v11, v13);
      sub_1C2B74650();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2ADB000, v6, v7, "[%{public}s] failed fetching IHR status for analytics.", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C8767A10](v9, -1, -1);
      MEMORY[0x1C8767A10](v8, -1, -1);
    }
  }
  return sub_1C2B74590();
}

void sub_1C2B28594(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t MedicationRoomInteractionEvent.deinit()
{
  swift_release();
  return v0;
}

uint64_t MedicationRoomInteractionEvent.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1C2B28698@<X0>(void *a1@<X8>)
{
  sub_1C2B293B0();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1C2B73920();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1C2B28740()
{
  return sub_1C2B73930();
}

uint64_t sub_1C2B287D4(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v5 = a3;
  id v7 = *(void (**)(id, uint64_t, void *))(a1 + 32);
  if (a3)
  {
    sub_1C2AE3A18(0, &qword_1EBF112D8);
    uint64_t v5 = sub_1C2B741D0();
  }
  swift_retain();
  id v8 = a2;
  id v9 = a4;
  v7(v8, v5, a4);
  swift_release();

  return swift_bridgeObjectRelease();
}

double sub_1C2B2888C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  unsigned __int8 v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_1C2AE056C(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v13 = *v4;
    *unsigned __int8 v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1C2B01EB8();
      uint64_t v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_1C2AF45B4((_OWORD *)(*(void *)(v11 + 56) + 32 * v8), a3);
    sub_1C2B28A64(v8, v11);
    *unsigned __int8 v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_1C2B28990(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1C2AE056C(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  uint64_t *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1C2B020B0();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 8 * v6);
  sub_1C2B28C3C(v6, v9);
  uint64_t *v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

unint64_t sub_1C2B28A64(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_1C2B74710();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1C2B74C20();
        swift_bridgeObjectRetain();
        sub_1C2B74070();
        uint64_t v10 = sub_1C2B74C60();
        double result = swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(a2 + 48);
          uint64_t v13 = (_OWORD *)(v12 + 16 * v3);
          id v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1) {
            *uint64_t v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          uint64_t v16 = (_OWORD *)(v15 + 32 * v3);
          os_log_type_t v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 2))
          {
            long long v9 = v17[1];
            *uint64_t v16 = *v17;
            v16[1] = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *uint64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1C2B28C3C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    double result = sub_1C2B74710();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1C2B74C20();
        swift_bridgeObjectRetain();
        sub_1C2B74070();
        uint64_t v9 = sub_1C2B74C60();
        double result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (void *)(v14 + 8 * v3);
          uint64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *uint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    os_log_type_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    os_log_type_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *os_log_type_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

int64_t sub_1C2B28E14(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (double result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  unint64_t v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    unint64_t v11 = *(void *)(v6 + 8 * v9);
    if (v11) {
      return __clz(__rbit64(v11)) + (v9 << 6);
    }
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      unint64_t v11 = *(void *)(v6 + 8 * v9);
      if (v11) {
        return __clz(__rbit64(v11)) + (v9 << 6);
      }
      while (v10 - 3 != v5)
      {
        unint64_t v11 = *(void *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

void sub_1C2B28EF8(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  unint64_t v6 = a1;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if (a3)
    {
      if (a4 < 0) {
        uint64_t v7 = a4;
      }
      else {
        uint64_t v7 = a4 & 0xFFFFFFFFFFFFFF8;
      }
      MEMORY[0x1C8766BE0](a1, a2, v7);
      sub_1C2AE3A18(0, &qword_1EA32BF50);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      return;
    }
LABEL_27:
    __break(1u);
    return;
  }
  if (a3) {
    goto LABEL_13;
  }
  if (a1 < 0 || 1 << *(unsigned char *)(a4 + 32) <= a1)
  {
    __break(1u);
    goto LABEL_24;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)a1 >> 6) + 56) >> a1) & 1) == 0)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    goto LABEL_20;
  }
  __break(1u);
LABEL_13:
  if (sub_1C2B74760() != *(_DWORD *)(a4 + 36))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  sub_1C2B74770();
  sub_1C2AE3A18(0, &qword_1EA32BF50);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  unint64_t v4 = v17;
  swift_unknownObjectRelease();
  uint64_t v8 = sub_1C2B745E0();
  uint64_t v9 = -1 << *(unsigned char *)(a4 + 32);
  unint64_t v6 = v8 & ~v9;
  if (((*(void *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
  {
LABEL_26:

    __break(1u);
    goto LABEL_27;
  }
  id v10 = *(id *)(*(void *)(a4 + 48) + 8 * v6);
  char v11 = sub_1C2B745F0();

  if ((v11 & 1) == 0)
  {
    uint64_t v12 = ~v9;
    do
    {
      unint64_t v6 = (v6 + 1) & v12;
      if (((*(void *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
        goto LABEL_26;
      }
      id v13 = *(id *)(*(void *)(a4 + 48) + 8 * v6);
      char v14 = sub_1C2B745F0();
    }
    while ((v14 & 1) == 0);
  }

LABEL_20:
  uint64_t v15 = *(void **)(*(void *)(a4 + 48) + 8 * v6);
  id v16 = v15;
}

uint64_t sub_1C2B29170(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 72);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

id sub_1C2B291F8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, char a5, char a6)
{
  uint64_t v7 = v6;
  *(void *)(v6 + 56) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B0B8]), sel_init);
  if (qword_1EBF10BE0 != -1) {
    swift_once();
  }
  uint64_t v14 = qword_1EBF11010;
  id v15 = *((id *)off_1EBF10E78 + 2);
  if (v14 != -1) {
    swift_once();
  }
  id v16 = (void *)qword_1EBF11008;
  type metadata accessor for MedicationsSettingsManager();
  swift_allocObject();
  uint64_t v17 = sub_1C2ADF2A4(v15, 0, (void (*)(void, void, void))v16);

  *(void *)(v7 + 64) = v17;
  id result = objc_msgSend(a4, sel_currentCalendar);
  if (result)
  {
    *(void *)(v7 + 16) = result;
    *(void *)(v7 + 24) = a1;
    *(void *)(v7 + 32) = a2;
    *(void *)(v7 + 40) = a3;
    *(unsigned char *)(v7 + 48) = a5 & 1;
    *(unsigned char *)(v7 + 49) = a6 & 1;
    return (id)v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_1C2B2935C()
{
  unint64_t result = qword_1EA32BEC0;
  if (!qword_1EA32BEC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA32BEC0);
  }
  return result;
}

void sub_1C2B293B0()
{
  if (!qword_1EBF0FFE8)
  {
    type metadata accessor for MedicationsExperienceStore();
    sub_1C2B73A20();
    unint64_t v0 = sub_1C2B73940();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBF0FFE8);
    }
  }
}

uint64_t sub_1C2B29420(uint64_t a1)
{
  sub_1C2B2B104(0, (unint64_t *)&qword_1EA32BAB8, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_1C2B294A4(unint64_t a1, uint64_t a2)
{
  id v3 = v2;
  uint64_t v24 = a2;
  sub_1C2B2B104(0, (unint64_t *)&unk_1EBF0FD70, MEMORY[0x1E4FBB390], MEMORY[0x1E4F67098]);
  uint64_t v6 = v5;
  uint64_t v7 = *(char **)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v19 - v8;
  uint64_t v26 = MEMORY[0x1E4FBC860];
  if (a1 >> 62)
  {
LABEL_19:
    uint64_t v10 = sub_1C2B749C0();
    if (v10) {
      goto LABEL_3;
    }
    return (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v10) {
    return (char *)MEMORY[0x1E4FBC860];
  }
LABEL_3:
  id v19 = v3;
  uint64_t v20 = v10;
  unint64_t v11 = 0;
  uint64_t v22 = a1 & 0xFFFFFFFFFFFFFF8;
  unint64_t v23 = a1 & 0xC000000000000001;
  BOOL v21 = (void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v12 = (void (**)(char *, uint64_t))(v7 + 8);
  while (1)
  {
    if (v23)
    {
      unint64_t v14 = a1;
      id v15 = (id)MEMORY[0x1C8766C90](v11, a1);
    }
    else
    {
      if (v11 >= *(void *)(v22 + 16))
      {
        __break(1u);
LABEL_18:
        __break(1u);
        goto LABEL_19;
      }
      unint64_t v14 = a1;
      id v15 = *(id *)(a1 + 8 * v11 + 32);
    }
    id v16 = v15;
    a1 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_18;
    }
    uint64_t v17 = *(void *)(v24 + 64)
        + OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__showMinorDrugInteractions;
    swift_beginAccess();
    (*v21)(v9, v17, v6);
    uint64_t v7 = v9;
    sub_1C2B738D0();
    (*v12)(v9, v6);
    if (v25 == 1) {
      break;
    }
LABEL_13:
    if (objc_msgSend(v16, sel_severityLevel, v19) == (id)4)
    {

      goto LABEL_5;
    }
LABEL_4:
    uint64_t v7 = (char *)&v26;
    sub_1C2B748D0();
    id v3 = *(id *)(v26 + 16);
    sub_1C2B74910();
    sub_1C2B74920();
    sub_1C2B748E0();
LABEL_5:
    ++v11;
    BOOL v13 = a1 == v20;
    a1 = v14;
    if (v13) {
      return (char *)v26;
    }
  }
  unint64_t result = (char *)objc_msgSend(self, sel_sharedBehavior);
  if (result)
  {
    uint64_t v7 = result;
    id v3 = objc_msgSend(result, sel_isAppleInternalInstall);

    if (v3) {
      goto LABEL_4;
    }
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

unint64_t sub_1C2B29768(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_1C2B02714();
    id v3 = (void *)sub_1C2B749F0();
    for (uint64_t i = (unsigned char *)(a1 + 40); ; i += 16)
    {
      uint64_t v5 = *((void *)i - 1);
      char v6 = *i;
      unint64_t result = sub_1C2B00480(v5);
      if (v8) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(void *)(v3[6] + 8 * result) = v5;
      *(unsigned char *)(v3[7] + result) = v6;
      uint64_t v9 = v3[2];
      BOOL v10 = __OFADD__(v9, 1);
      uint64_t v11 = v9 + 1;
      if (v10) {
        goto LABEL_10;
      }
      v3[2] = v11;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC868];
  }
  return result;
}

uint64_t sub_1C2B2983C()
{
  uint64_t v1 = v0;
  v51.Class isa = v0->isa;
  uint64_t v2 = sub_1C2B73DE0();
  uint64_t v50 = *(void *)(v2 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  unint64_t v49 = (char *)&v45 - v6;
  if (qword_1EBF10BE0 != -1) {
    swift_once();
  }
  uint64_t v7 = off_1EBF10E78;
  sub_1C2B293B0();
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v53 = (uint64_t)v7;
  swift_retain();
  sub_1C2B73920();
  swift_release();
  swift_release();
  swift_release();
  unint64_t v8 = sub_1C2B73A10();
  swift_release();
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_1C2B749C0();
    swift_bridgeObjectRelease();
    if (v20)
    {
      aBlock[0] = MEMORY[0x1E4FBC860];
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_1C2B749C0();
      swift_bridgeObjectRelease();
      if (!v9)
      {
        uint64_t v48 = v2;
        swift_bridgeObjectRelease();
        uint64_t v14 = MEMORY[0x1E4FBC860];
        goto LABEL_15;
      }
      if (v9 >= 1)
      {
        uint64_t v48 = v2;
LABEL_6:
        for (uint64_t i = 0; i != v9; ++i)
        {
          if ((v8 & 0xC000000000000001) != 0) {
            id v11 = (id)MEMORY[0x1C8766C90](i, v8);
          }
          else {
            id v11 = *(id *)(v8 + 8 * i + 32);
          }
          uint64_t v12 = v11;
          id v13 = objc_msgSend(v11, sel_firstOntologyCoding);

          if (v13)
          {
            sub_1C2B748D0();
            sub_1C2B74910();
            sub_1C2B74920();
            sub_1C2B748E0();
          }
          else
          {
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v14 = aBlock[0];
LABEL_15:
        aBlock[0] = MEMORY[0x1E4FBC860];
        if (v14 < 0 || (v14 & 0x4000000000000000) != 0)
        {
          swift_retain();
          uint64_t v15 = sub_1C2B749C0();
          if (v15) {
            goto LABEL_18;
          }
        }
        else
        {
          uint64_t v15 = *(void *)(v14 + 16);
          swift_retain();
          if (v15)
          {
LABEL_18:
            if (v15 < 1)
            {
              __break(1u);
              goto LABEL_50;
            }
            for (uint64_t j = 0; j != v15; ++j)
            {
              if ((v14 & 0xC000000000000001) != 0) {
                id v17 = (id)MEMORY[0x1C8766C90](j, v14);
              }
              else {
                id v17 = *(id *)(v14 + 8 * j + 32);
              }
              uint64_t v18 = v17;
              self;
              if (swift_dynamicCastObjCClass())
              {
                MEMORY[0x1C87665F0]();
                if (*(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8)
                                                                                        + 0x18) >> 1)
                  sub_1C2B74210();
                sub_1C2B74250();
                sub_1C2B741F0();
              }
              else
              {
              }
            }
            swift_release();
            unint64_t v19 = aBlock[0];
LABEL_37:
            swift_release();
            sub_1C2B27904();
            id v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F66AC0]), sel_initWithHealthStore_, v1[7].isa);
            dispatch_semaphore_t v23 = dispatch_semaphore_create(0);
            uint64_t v14 = swift_allocObject();
            *(unsigned char *)(v14 + 16) = 0;
            uint64_t v47 = v14 + 16;
            sub_1C2B39C28(v19);
            swift_bridgeObjectRelease();
            sub_1C2AE3A18(0, (unint64_t *)&qword_1EBF112D0);
            sub_1C2B2AFA4(&qword_1EA32BF38, (unint64_t *)&qword_1EBF112D0);
            uint64_t v24 = (void *)sub_1C2B74370();
            swift_bridgeObjectRelease();
            sub_1C2AE3A18(0, &qword_1EA32BA48);
            sub_1C2B2AFA4((unint64_t *)&qword_1EA32BA50, &qword_1EA32BA48);
            char v25 = (void *)sub_1C2B74370();
            swift_bridgeObjectRelease();
            uint64_t v26 = swift_allocObject();
            swift_weakInit();
            uint64_t v27 = (void *)swift_allocObject();
            v27[2] = v26;
            v27[3] = v23;
            Class isa = v51.isa;
            v27[4] = v14;
            v27[5] = isa;
            aBlock[4] = (uint64_t)sub_1C2B2B0F8;
            aBlock[5] = (uint64_t)v27;
            aBlock[0] = MEMORY[0x1E4F143A8];
            aBlock[1] = 1107296256;
            aBlock[2] = (uint64_t)sub_1C2B27834;
            aBlock[3] = (uint64_t)&block_descriptor_28;
            uint64_t v29 = _Block_copy(aBlock);
            uint64_t v1 = v23;
            swift_retain();
            swift_release();
            id v46 = v22;
            objc_msgSend(v22, sel_interactionResultsForMedications_lifestyleFactors_completion_, v24, v25, v29);
            _Block_release(v29);

            sub_1C2B73DD0();
            uint64_t v30 = v49;
            MEMORY[0x1C8766240](v5, 3.0);
            uint64_t v31 = *(void (**)(char *, uint64_t))(v50 + 8);
            uint64_t v32 = v48;
            v31(v5, v48);
            LOBYTE(v29) = sub_1C2B74580();
            v31(v30, v32);
            if (v29)
            {
              if (qword_1EBF11340 != -1) {
                swift_once();
              }
              uint64_t v41 = sub_1C2B73A90();
              __swift_project_value_buffer(v41, (uint64_t)qword_1EBF11348);
              uint64_t v34 = sub_1C2B73A80();
              os_log_type_t v35 = sub_1C2B744C0();
              if (os_log_type_enabled(v34, v35))
              {
                uint64_t v36 = (uint8_t *)swift_slowAlloc();
                uint64_t v37 = swift_slowAlloc();
                aBlock[0] = v37;
                *(_DWORD *)uint64_t v36 = 136446210;
                uint64_t v42 = sub_1C2B74CD0();
                uint64_t v53 = sub_1C2AEEE6C(v42, v43, aBlock);
                sub_1C2B74650();
                swift_bridgeObjectRelease();
                unint64_t v40 = "[%{public}s] Timed out fetching ddi interaction info for analytics.";
                goto LABEL_45;
              }
LABEL_46:

              goto LABEL_47;
            }
            if (qword_1EBF11340 == -1)
            {
LABEL_39:
              uint64_t v33 = sub_1C2B73A90();
              __swift_project_value_buffer(v33, (uint64_t)qword_1EBF11348);
              uint64_t v34 = sub_1C2B73A80();
              os_log_type_t v35 = sub_1C2B744E0();
              if (os_log_type_enabled(v34, v35))
              {
                uint64_t v36 = (uint8_t *)swift_slowAlloc();
                uint64_t v37 = swift_slowAlloc();
                aBlock[0] = v37;
                *(_DWORD *)uint64_t v36 = 136446210;
                uint64_t v38 = sub_1C2B74CD0();
                uint64_t v53 = sub_1C2AEEE6C(v38, v39, aBlock);
                sub_1C2B74650();
                swift_bridgeObjectRelease();
                unint64_t v40 = "[%{public}s] Successfully fetched ddi interaction info for analytics.";
LABEL_45:
                _os_log_impl(&dword_1C2ADB000, v34, v35, v40, v36, 0xCu);
                swift_arrayDestroy();
                MEMORY[0x1C8767A10](v37, -1, -1);
                MEMORY[0x1C8767A10](v36, -1, -1);

LABEL_47:
                swift_beginAccess();
                uint64_t v21 = *(unsigned __int8 *)(v14 + 16);
                swift_release();
                return v21;
              }
              goto LABEL_46;
            }
LABEL_50:
            swift_once();
            goto LABEL_39;
          }
        }
        swift_release();
        unint64_t v19 = MEMORY[0x1E4FBC860];
        goto LABEL_37;
      }
      __break(1u);
    }
  }
  else
  {
    uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v9)
    {
      uint64_t v48 = v2;
      aBlock[0] = MEMORY[0x1E4FBC860];
      goto LABEL_6;
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

id sub_1C2B2A13C()
{
  uint64_t v86 = *v0;
  uint64_t v1 = sub_1C2B73710();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v1);
  uint64_t v71 = (char *)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v70 - v6;
  MEMORY[0x1F4188790](v5);
  id v72 = (char *)&v70 - v8;
  uint64_t v9 = (void *)sub_1C2B73DE0();
  uint64_t v83 = *(v9 - 1);
  id v84 = v9;
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  char v81 = (char *)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v82 = (char *)&v70 - v12;
  id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B0B8]), sel_init);
  sub_1C2B2B104(0, (unint64_t *)&qword_1EBF11390, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C2B76A80;
  *(void *)(inited + 32) = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, 4);
  *(void *)(inited + 40) = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, 5);
  aBlock[0] = inited;
  sub_1C2B741F0();
  unint64_t v15 = aBlock[0];
  if ((unint64_t)aBlock[0] >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_1C2B749C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v16 = *(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v75 = v1;
  uint64_t v74 = v2;
  id v73 = v7;
  if (v16) {
    sub_1C2AF3D64(v15);
  }
  id v85 = v13;
  swift_bridgeObjectRelease();
  id v17 = self;
  sub_1C2AE3A18(0, &qword_1EA32BA48);
  sub_1C2B2AFA4((unint64_t *)&qword_1EA32BA50, &qword_1EA32BA48);
  uint64_t v18 = (void *)sub_1C2B74370();
  swift_bridgeObjectRelease();
  id v19 = objc_msgSend(v17, sel_predicateForMedicationDoseEventWithStatuses_, v18);

  sub_1C2AE3A18(0, &qword_1EA32BF28);
  id result = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_medicationDoseEventTypeForIdentifier_, *MEMORY[0x1E4F2A040]);
  if (result)
  {
    uint64_t v21 = result;
    id v22 = objc_allocWithZone(MEMORY[0x1E4F2B3D0]);
    id v78 = v21;
    id v79 = v19;
    id v23 = objc_msgSend(v22, sel_initWithSampleType_predicate_, v21, v19);
    sub_1C2B73FA0();
    id v24 = objc_allocWithZone(MEMORY[0x1E4F29008]);
    char v25 = (void *)sub_1C2B73F60();
    swift_bridgeObjectRelease();
    id v26 = objc_msgSend(v24, sel_initWithKey_ascending_, v25, 1);

    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + 16) = 0;
    uint64_t v28 = (id *)(v27 + 16);
    dispatch_semaphore_t v29 = dispatch_semaphore_create(0);
    uint64_t v30 = swift_allocObject();
    long long v80 = xmmword_1C2B764F0;
    *(_OWORD *)(v30 + 16) = xmmword_1C2B764F0;
    *(void *)(v30 + 32) = v23;
    aBlock[0] = v30;
    sub_1C2B741F0();
    uint64_t v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = v80;
    *(void *)(v31 + 32) = v26;
    aBlock[0] = v31;
    sub_1C2B741F0();
    uint64_t v32 = (void *)swift_allocObject();
    v32[2] = v29;
    v32[3] = v27;
    v32[4] = v86;
    id v33 = objc_allocWithZone(MEMORY[0x1E4F2B440]);
    sub_1C2AE3A18(0, &qword_1EA32BF30);
    id v77 = v23;
    *(void *)&long long v80 = v26;
    uint64_t v34 = v29;
    uint64_t v35 = v27;
    uint64_t v36 = v34;
    swift_retain();
    uint64_t v37 = (void *)sub_1C2B741C0();
    swift_bridgeObjectRelease();
    sub_1C2AE3A18(0, (unint64_t *)&unk_1EBF11380);
    uint64_t v38 = (void *)sub_1C2B741C0();
    swift_bridgeObjectRelease();
    aBlock[4] = (uint64_t)sub_1C2B2B06C;
    aBlock[5] = (uint64_t)v32;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1C2B287D4;
    aBlock[3] = (uint64_t)&block_descriptor_18;
    unint64_t v39 = _Block_copy(aBlock);
    id v40 = objc_msgSend(v33, sel_initWithQueryDescriptors_limit_sortDescriptors_resultsHandler_, v37, 1, v38, v39);

    _Block_release(v39);
    swift_release();
    id v41 = v85;
    id v76 = v40;
    objc_msgSend(v85, sel_executeQuery_, v40);
    uint64_t v42 = v81;
    sub_1C2B73DD0();
    unint64_t v43 = v82;
    MEMORY[0x1C8766240](v42, 3.0);
    id v44 = v84;
    Class isa = (void (*)(char *, id))v83[1].isa;
    isa(v42, v84);
    LOBYTE(v42) = sub_1C2B74580();
    isa(v43, v44);
    if (v42)
    {
      if (qword_1EBF11340 != -1) {
        swift_once();
      }
      uint64_t v62 = sub_1C2B73A90();
      __swift_project_value_buffer(v62, (uint64_t)qword_1EBF11348);
      uint64_t v63 = sub_1C2B73A80();
      os_log_type_t v64 = sub_1C2B744C0();
      if (os_log_type_enabled(v63, v64))
      {
        uint64_t v65 = (uint8_t *)swift_slowAlloc();
        uint64_t v66 = swift_slowAlloc();
        aBlock[0] = v66;
        *(_DWORD *)uint64_t v65 = 136446210;
        uint64_t v67 = sub_1C2B74CD0();
        uint64_t v87 = sub_1C2AEEE6C(v67, v68, aBlock);
        sub_1C2B74650();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C2ADB000, v63, v64, "[%{public}s] Timed out fetching oldest dose event for analytics.", v65, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C8767A10](v66, -1, -1);
        MEMORY[0x1C8767A10](v65, -1, -1);
        swift_release();

        return 0;
      }
      swift_release();

      uint64_t v69 = &v90;
    }
    else
    {
      swift_beginAccess();
      if (*v28)
      {
        id v46 = *(void **)(v70 + 16);
        id v84 = *v28;
        id v47 = objc_msgSend(v84, sel_startDate);
        uint64_t v86 = v35;
        uint64_t v48 = v73;
        sub_1C2B736E0();

        unint64_t v49 = (void *)sub_1C2B736C0();
        uint64_t v50 = *(void (**)(char *, uint64_t))(v74 + 8);
        uint64_t v83 = v36;
        uint64_t v51 = v75;
        v50(v48, v75);
        id v52 = objc_msgSend(v46, sel_startOfDayForDate_, v49);

        uint64_t v53 = v72;
        sub_1C2B736E0();

        char v54 = v71;
        sub_1C2B736F0();
        uint64_t v55 = (void *)sub_1C2B736C0();
        v50(v54, v51);
        id v56 = objc_msgSend(v46, sel_startOfDayForDate_, v55);

        sub_1C2B736E0();
        uint64_t v57 = (void *)sub_1C2B736C0();
        uint64_t v58 = (void *)sub_1C2B736C0();
        id v59 = (id)HKMedicationAnalyticsWeeksBetweenDates();

        id v60 = objc_msgSend(v59, sel_stringValue);
        uint64_t v61 = sub_1C2B73FA0();

        v50(v48, v51);
        v50(v53, v51);
        swift_release();
        return (id)v61;
      }

      swift_release();
      uint64_t v69 = &v89;
    }

    return 0;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for MedicationRoomInteractionEvent()
{
  return self;
}

uint64_t method lookup function for MedicationRoomInteractionEvent(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationRoomInteractionEvent);
}

uint64_t dispatch thunk of MedicationRoomInteractionEvent.__allocating_init(action:roomType:provenance:calendarCache:hasSideEffectsContent:hasPregnancyContent:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of MedicationRoomInteractionEvent.isEventSubmissionIHAGated.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of MedicationRoomInteractionEvent.eventName.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of MedicationRoomInteractionEvent.makeUnrestrictedEventPayload(with:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of MedicationRoomInteractionEvent.makeIHAGatedEventPayload(with:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

void *initializeBufferWithCopyOfBuffer for MedicationRoomInteractionEvent.AnalyticsEventPayloadError(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for MedicationRoomInteractionEvent.AnalyticsEventPayloadError()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for MedicationRoomInteractionEvent.AnalyticsEventPayloadError(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for MedicationRoomInteractionEvent.AnalyticsEventPayloadError(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MedicationRoomInteractionEvent.AnalyticsEventPayloadError(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MedicationRoomInteractionEvent.AnalyticsEventPayloadError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)id result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicationRoomInteractionEvent.AnalyticsEventPayloadError()
{
  return &type metadata for MedicationRoomInteractionEvent.AnalyticsEventPayloadError;
}

void sub_1C2B2AEB8()
{
  if (!qword_1EA32BBD8)
  {
    sub_1C2AE3A18(255, (unint64_t *)&qword_1EBF10810);
    unint64_t v0 = sub_1C2B74A00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA32BBD8);
    }
  }
}

uint64_t sub_1C2B2AF30()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1C2B2AF40()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C2B2AF80(void *a1, uint64_t a2)
{
  return sub_1C2B283D0(a1, a2, *(void *)(v2 + 16));
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t sub_1C2B2AFA4(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C2AE3A18(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C2B2AFF4()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C2B2B02C()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_1C2B2B06C(uint64_t a1, unint64_t a2, void *a3)
{
  sub_1C2B27C78(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24));
}

uint64_t sub_1C2B2B078()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C2B2B0B0()
{
  swift_release();

  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1C2B2B0F8(unint64_t a1, void *a2)
{
  return sub_1C2B271D8(a1, a2, v2[2], v2[3], v2[4]);
}

void sub_1C2B2B104(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1C2B2B150()
{
  if (!qword_1EA32BF60)
  {
    sub_1C2AE3A18(255, &qword_1EA32BF50);
    sub_1C2B2AFA4(&qword_1EA32BF58, &qword_1EA32BF50);
    unint64_t v0 = sub_1C2B743B0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA32BF60);
    }
  }
}

uint64_t sub_1C2B2B1E4(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1C2B2B1F0()
{
  if (!qword_1EA32BBE0)
  {
    unint64_t v0 = sub_1C2B74A00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA32BBE0);
    }
  }
}

void sub_1C2B2B25C()
{
  if (!qword_1EA32BF68)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA32BF68);
    }
  }
}

void sub_1C2B2B2C8()
{
  if (!qword_1EBF10818)
  {
    type metadata accessor for Key(255);
    sub_1C2B2B368(&qword_1EBF107C0, type metadata accessor for Key);
    unint64_t v0 = sub_1C2B74A00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBF10818);
    }
  }
}

uint64_t sub_1C2B2B368(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C2B2B3B0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t HKMedicationScheduleItemQueryDescriptor.init(_:toDate:identifier:sortDescriptors:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11 = sub_1C2B73710();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
  v12(a6, 1, 1, v11);
  uint64_t Descriptor = (int *)type metadata accessor for HKMedicationScheduleItemQueryDescriptor();
  uint64_t v14 = a6 + Descriptor[7];
  v12(v14, 1, 1, v11);
  unint64_t v15 = (void *)(a6 + Descriptor[8]);
  *unint64_t v15 = 0;
  v15[1] = 0;
  uint64_t v16 = Descriptor[9];
  *(void *)(a6 + v16) = 0;
  sub_1C2B73E80();
  sub_1C2AF5F6C(a1, a6);
  sub_1C2AF5F6C(a2, v14);
  swift_bridgeObjectRelease();
  *unint64_t v15 = a3;
  v15[1] = a4;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a6 + v16) = a5;
  return result;
}

uint64_t type metadata accessor for HKMedicationScheduleItemQueryDescriptor()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t HKMedicationScheduleItemQueryDescriptor.result(for:)(uint64_t a1, uint64_t a2)
{
  v3[12] = a2;
  v3[13] = v2;
  v3[11] = a1;
  return MEMORY[0x1F4188298](sub_1C2B2B5A0, 0, 0);
}

uint64_t sub_1C2B2B5A0()
{
  uint64_t v2 = v0[12];
  uint64_t v1 = v0[13];
  uint64_t v3 = (void *)v0[11];
  v0[2] = v0;
  v0[7] = v0 + 10;
  v0[3] = sub_1C2B2B654;
  uint64_t v4 = swift_continuation_init();
  sub_1C2B2BA10(v4, v1, v3, *(void *)(v2 + 16));
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1C2B2B654()
{
  uint64_t v1 = *v0;
  if (*(void *)(*v0 + 48))
  {
    swift_willThrow();
    uint64_t v2 = *(uint64_t (**)(void))(v1 + 8);
    return v2();
  }
  else
  {
    uint64_t v4 = *(void *)(*v0 + 80);
    uint64_t v5 = *(uint64_t (**)(uint64_t))(v1 + 8);
    return v5(v4);
  }
}

uint64_t HKMedicationScheduleItemQueryDescriptor.fromDate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C2AF4520(v1, a1);
}

uint64_t HKMedicationScheduleItemQueryDescriptor.fromDate.setter(uint64_t a1)
{
  return sub_1C2AF5F6C(a1, v1);
}

uint64_t (*HKMedicationScheduleItemQueryDescriptor.fromDate.modify())()
{
  return nullsub_1;
}

uint64_t HKMedicationScheduleItemQueryDescriptor.toDate.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C2AF4520(v2 + *(int *)(a1 + 28), a2);
}

uint64_t HKMedicationScheduleItemQueryDescriptor.toDate.setter(uint64_t a1, uint64_t a2)
{
  return sub_1C2AF5F6C(a1, v2 + *(int *)(a2 + 28));
}

uint64_t (*HKMedicationScheduleItemQueryDescriptor.toDate.modify())()
{
  return nullsub_1;
}

uint64_t HKMedicationScheduleItemQueryDescriptor.identifier.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 32));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t HKMedicationScheduleItemQueryDescriptor.identifier.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)(v3 + *(int *)(a3 + 32));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v6 = a1;
  v6[1] = a2;
  return result;
}

uint64_t (*HKMedicationScheduleItemQueryDescriptor.identifier.modify())()
{
  return nullsub_1;
}

uint64_t HKMedicationScheduleItemQueryDescriptor.sortDescriptors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t HKMedicationScheduleItemQueryDescriptor.sortDescriptors.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(int *)(a2 + 36);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + v4) = a1;
  return result;
}

uint64_t (*HKMedicationScheduleItemQueryDescriptor.sortDescriptors.modify())()
{
  return nullsub_1;
}

uint64_t HKMedicationScheduleItemQueryDescriptor.queryAttributes.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 40);
  uint64_t v5 = sub_1C2B73E90();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t HKMedicationScheduleItemQueryDescriptor.queryAttributes.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 40);
  uint64_t v5 = sub_1C2B73E90();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);
  return v6(v4, a1, v5);
}

uint64_t (*HKMedicationScheduleItemQueryDescriptor.queryAttributes.modify())()
{
  return nullsub_1;
}

void sub_1C2B2BA10(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  sub_1C2AE0F7C();
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  id v13 = (char *)&v28 - v12;
  uint64_t Descriptor = type metadata accessor for HKMedicationScheduleItemQueryDescriptor();
  uint64_t v15 = Descriptor;
  uint64_t v16 = *(void *)(a2 + *(int *)(Descriptor + 36));
  if (v16)
  {
    uint64_t v29 = a1;
    uint64_t v30 = v16;
    MEMORY[0x1F4188790](Descriptor);
    *(&v28 - 2) = a4;
    sub_1C2B73580();
    uint64_t v17 = sub_1C2B74280();
    uint64_t v18 = sub_1C2AE3A18(0, (unint64_t *)&unk_1EBF11380);
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v21 = sub_1C2B628F8((void (*)(char *, char *))sub_1C2B2D4C0, (uint64_t)(&v28 - 4), v17, v18, MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v20);
    a1 = v29;
  }
  else
  {
    uint64_t v21 = 0;
  }
  sub_1C2AF4520(a2, (uint64_t)v13);
  sub_1C2AF4520(a2 + *(int *)(v15 + 28), (uint64_t)v11);
  id v22 = (uint64_t *)(a2 + *(int *)(v15 + 32));
  uint64_t v23 = *v22;
  uint64_t v24 = v22[1];
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = a3;
  *(void *)(v25 + 24) = a1;
  objc_allocWithZone(MEMORY[0x1E4F66B60]);
  swift_bridgeObjectRetain();
  id v26 = a3;
  id v27 = sub_1C2B2D270((uint64_t)v13, (uint64_t)v11, v23, v24, v21, (uint64_t)sub_1C2AFA53C, v25);
  sub_1C2B745D0();
  objc_msgSend(v26, sel_executeQuery_, v27);
}

uint64_t sub_1C2B2BC7C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_1C2B73580();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v9 - v6;
  sub_1C2AE3A18(0, (unint64_t *)&unk_1EBF11380);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  uint64_t result = sub_1C2B74500();
  *a2 = result;
  return result;
}

uint64_t sub_1C2B2BD88(uint64_t a1, uint64_t a2, void *a3, id a4, uint64_t a5)
{
  objc_msgSend(a4, sel_stopQuery_, a1);
  if (a2)
  {
    **(void **)(*(void *)(a5 + 64) + 40) = a2;
    swift_bridgeObjectRetain();
    return swift_continuation_throwingResume();
  }
  else
  {
    if (a3)
    {
      uint64_t v9 = a3;
    }
    else
    {
      type metadata accessor for HKError(0);
      sub_1C2B5E0A8(MEMORY[0x1E4FBC860]);
      sub_1C2B2D5B0();
      sub_1C2B73610();
      uint64_t v9 = v12;
    }
    sub_1C2AF44C8();
    swift_allocError();
    *uint64_t v10 = v9;
    id v11 = a3;
    return swift_continuation_throwingResumeWithError();
  }
}

uint64_t sub_1C2B2BEA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v4 + 16) = a1;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v4 + 24) = v7;
  *uint64_t v7 = v4;
  v7[1] = sub_1C2B2BF68;
  v7[12] = a3;
  v7[13] = v3;
  v7[11] = a2;
  return MEMORY[0x1F4188298](sub_1C2B2B5A0, 0, 0);
}

uint64_t sub_1C2B2BF68(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (!v1) {
    **(void **)(v4 + 16) = a1;
  }
  uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
  return v6();
}

uint64_t sub_1C2B2C078(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 32);
}

void sub_1C2B2C080()
{
  sub_1C2AE0F7C();
  if (v0 <= 0x3F)
  {
    sub_1C2B73E90();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *sub_1C2B2C15C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1C2B73710();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    if (v9(a2, 1, v7))
    {
      sub_1C2AE0F7C();
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v12 = a3[7];
    id v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    if (v9((uint64_t *)((char *)a2 + v12), 1, v7))
    {
      sub_1C2AE0F7C();
      memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v14, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
    }
    uint64_t v16 = a3[8];
    uint64_t v17 = a3[9];
    uint64_t v18 = (uint64_t *)((char *)a1 + v16);
    id v19 = (uint64_t *)((char *)a2 + v16);
    uint64_t v20 = v19[1];
    uint64_t v21 = *(uint64_t *)((char *)a2 + v17);
    *uint64_t v18 = *v19;
    v18[1] = v20;
    *(uint64_t *)((char *)a1 + v17) = v21;
    uint64_t v22 = a3[10];
    uint64_t v23 = (char *)a1 + v22;
    uint64_t v24 = (char *)a2 + v22;
    uint64_t v25 = sub_1C2B73E90();
    id v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v26(v23, v24, v25);
  }
  return a1;
}

uint64_t sub_1C2B2C3E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C2B73710();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 28);
  if (!v6(v7, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v7, v4);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = a1 + *(int *)(a2 + 40);
  uint64_t v9 = sub_1C2B73E90();
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  return v10(v8, v9);
}

char *sub_1C2B2C550(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1C2B73710();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    sub_1C2AE0F7C();
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v10 = a3[7];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  if (v8(&a2[v10], 1, v6))
  {
    sub_1C2AE0F7C();
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v12, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  uint64_t v14 = a3[8];
  uint64_t v15 = a3[9];
  uint64_t v16 = &a1[v14];
  uint64_t v17 = &a2[v14];
  uint64_t v18 = *((void *)v17 + 1);
  uint64_t v19 = *(void *)&a2[v15];
  *(void *)uint64_t v16 = *(void *)v17;
  *((void *)v16 + 1) = v18;
  *(void *)&a1[v15] = v19;
  uint64_t v20 = a3[10];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  uint64_t v23 = sub_1C2B73E90();
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v24(v21, v22, v23);
  return a1;
}

char *sub_1C2B2C788(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1C2B73710();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    sub_1C2AE0F7C();
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[7];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  int v15 = v8(&a1[v12], 1, v6);
  int v16 = v8(v14, 1, v6);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v13, v14, v6);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    goto LABEL_12;
  }
  if (v16)
  {
LABEL_12:
    sub_1C2AE0F7C();
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v13, v14, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
LABEL_13:
  uint64_t v18 = a3[8];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  *(void *)uint64_t v19 = *(void *)v20;
  *((void *)v19 + 1) = *((void *)v20 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[10];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  uint64_t v24 = sub_1C2B73E90();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 24))(v22, v23, v24);
  return a1;
}

char *sub_1C2B2CA94(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1C2B73710();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    sub_1C2AE0F7C();
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v10 = a3[7];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  if (v8(&a2[v10], 1, v6))
  {
    sub_1C2AE0F7C();
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v11, v12, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  uint64_t v14 = a3[9];
  *(_OWORD *)&a1[a3[8]] = *(_OWORD *)&a2[a3[8]];
  *(void *)&a1[v14] = *(void *)&a2[v14];
  uint64_t v15 = a3[10];
  int v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = sub_1C2B73E90();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

char *sub_1C2B2CCB0(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1C2B73710();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    sub_1C2AE0F7C();
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[7];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  int v15 = v8(&a1[v12], 1, v6);
  int v16 = v8(v14, 1, v6);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v13, v14, v6);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    goto LABEL_12;
  }
  if (v16)
  {
LABEL_12:
    sub_1C2AE0F7C();
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v13, v14, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
LABEL_13:
  uint64_t v18 = a3[8];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  uint64_t v22 = *(void *)v20;
  uint64_t v21 = *((void *)v20 + 1);
  *(void *)uint64_t v19 = v22;
  *((void *)v19 + 1) = v21;
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  swift_bridgeObjectRelease();
  uint64_t v23 = a3[10];
  uint64_t v24 = &a1[v23];
  uint64_t v25 = &a2[v23];
  uint64_t v26 = sub_1C2B73E90();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  return a1;
}

uint64_t sub_1C2B2CFA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C2B2CFB8);
}

uint64_t sub_1C2B2CFB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C2AE0F7C();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 2147483646)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 32) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
  else
  {
    uint64_t v12 = sub_1C2B73E90();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a3 + 40);
    return v13(v15, a2, v14);
  }
}

uint64_t sub_1C2B2D0F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C2B2D108);
}

void sub_1C2B2D108(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_1C2AE0F7C();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v10(a1, a2, a2, v8);
  }
  else if (a3 == 2147483646)
  {
    *(void *)(a1 + *(int *)(a4 + 32) + 8) = a2;
  }
  else
  {
    uint64_t v11 = sub_1C2B73E90();
    uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 40);
    v12(v14, a2, a2, v13);
  }
}

uint64_t sub_1C2B2D238()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

id sub_1C2B2D270(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12 = sub_1C2B73710();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
  uint64_t v15 = 0;
  if (v14(a1, 1, v12) != 1)
  {
    uint64_t v15 = (void *)sub_1C2B736C0();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a1, v12);
  }
  if (v14(a2, 1, v12) == 1)
  {
    int v16 = 0;
  }
  else
  {
    int v16 = (void *)sub_1C2B736C0();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a2, v12);
  }
  uint64_t v17 = a7;
  if (!a4)
  {
    uint64_t v18 = 0;
    if (a5) {
      goto LABEL_8;
    }
LABEL_10:
    uint64_t v19 = 0;
    goto LABEL_11;
  }
  uint64_t v18 = (void *)sub_1C2B73F60();
  swift_bridgeObjectRelease();
  if (!a5) {
    goto LABEL_10;
  }
LABEL_8:
  sub_1C2AE3A18(0, (unint64_t *)&unk_1EBF11380);
  uint64_t v19 = (void *)sub_1C2B741C0();
  swift_bridgeObjectRelease();
LABEL_11:
  aBlock[4] = a6;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C2B2D4E0;
  aBlock[3] = &block_descriptor_8;
  uint64_t v20 = _Block_copy(aBlock);
  id v21 = objc_msgSend(v24, sel_initWithFromDate_toDate_identifier_sortDescriptors_resultsHandler_, v15, v16, v18, v19, v20);

  _Block_release(v20);
  swift_release();
  return v21;
}

uint64_t sub_1C2B2D4C0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C2B2BC7C(a1, a2);
}

uint64_t sub_1C2B2D4E0(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v5 = a3;
  uint64_t v7 = *(void (**)(id, uint64_t, void *))(a1 + 32);
  if (a3)
  {
    sub_1C2AE3A18(0, (unint64_t *)&unk_1EBF112B0);
    uint64_t v5 = sub_1C2B741D0();
  }
  swift_retain();
  id v8 = a2;
  id v9 = a4;
  v7(v8, v5, a4);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

unint64_t sub_1C2B2D5B0()
{
  unint64_t result = qword_1EA32B7E8;
  if (!qword_1EA32B7E8)
  {
    type metadata accessor for HKError(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA32B7E8);
  }
  return result;
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

uint64_t NotificationActionHandler.init(_:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t NotificationActionHandler.doseEventStatus.getter()
{
  uint64_t result = 4;
  switch(*v0)
  {
    case 1:
    case 5:
      return result;
    case 2:
    case 6:
      uint64_t result = 5;
      break;
    case 3:
      uint64_t result = 3;
      break;
    default:
      uint64_t result = 0;
      break;
  }
  return result;
}

uint64_t NotificationActionHandler.analyticsInteraction.getter()
{
  uint64_t result = 2;
  switch(*v0)
  {
    case 1:
    case 5:
      uint64_t result = 4;
      break;
    case 2:
    case 6:
      uint64_t result = 5;
      break;
    case 3:
      uint64_t result = 6;
      break;
    case 4:
      return result;
    default:
      uint64_t result = 0;
      break;
  }
  return result;
}

ValueMetadata *type metadata accessor for NotificationActionHandler()
{
  return &type metadata for NotificationActionHandler;
}

uint64_t HKMedicationScheduleControl.fetchAllMedicationSchedules()()
{
  *(void *)(v1 + 24) = v0;
  return MEMORY[0x1F4188298](sub_1C2B2D764, 0, 0);
}

uint64_t sub_1C2B2D764()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = swift_task_alloc();
  v0[4] = v2;
  *(void *)(v2 + 16) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[5] = v3;
  sub_1C2B2E2B4(0, &qword_1EBF10780, (uint64_t (*)(uint64_t))sub_1C2B2DBF8, MEMORY[0x1E4FBB320]);
  void *v3 = v0;
  v3[1] = sub_1C2B2D894;
  return MEMORY[0x1F4188160](v0 + 2, 0, 0, 0xD00000000000001DLL, 0x80000001C2B7B6F0, sub_1C2B2DBF0, v2, v4);
}

uint64_t sub_1C2B2D894()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1C2B2D9CC;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1C2B2D9B0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C2B2D9B0()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 16));
}

uint64_t sub_1C2B2D9CC()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1C2B2DA30(uint64_t a1, void *a2)
{
  sub_1C2B2E95C(0, &qword_1EA32BF98, MEMORY[0x1E4FBCF48]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v8 = (char *)aBlock - v7;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)aBlock - v7, a1, v5);
  unint64_t v9 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v10 + v9, v8, v5);
  aBlock[4] = sub_1C2B2EAB0;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C2B12D20;
  aBlock[3] = &block_descriptor_19;
  uint64_t v11 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(a2, sel_fetchAllSchedulesWithCompletion_, v11);
  _Block_release(v11);
}

void sub_1C2B2DBF0(uint64_t a1)
{
  sub_1C2B2DA30(a1, *(void **)(v1 + 16));
}

unint64_t sub_1C2B2DBF8()
{
  unint64_t result = qword_1EBF112A0;
  if (!qword_1EBF112A0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBF112A0);
  }
  return result;
}

uint64_t sub_1C2B2DC38(uint64_t a1, id a2)
{
  if (a1)
  {
    sub_1C2B2E95C(0, &qword_1EA32BF98, MEMORY[0x1E4FBCF48]);
    swift_bridgeObjectRetain();
    return sub_1C2B742C0();
  }
  else
  {
    if (!a2)
    {
      type metadata accessor for HKError(0);
      sub_1C2B5E0A8(MEMORY[0x1E4FBC860]);
      sub_1C2B2EB64((unint64_t *)&qword_1EA32B7E8, type metadata accessor for HKError);
      sub_1C2B73610();
    }
    id v4 = a2;
    sub_1C2B2E95C(0, &qword_1EA32BF98, MEMORY[0x1E4FBCF48]);
    return sub_1C2B742B0();
  }
}

uint64_t HKMedicationScheduleControl.schedulePublisher(for:using:)(uint64_t a1)
{
  sub_1C2B2DF10();
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v1;
  *(void *)(v8 + 24) = a1;
  sub_1C2B2E95C(0, &qword_1EBF10758, MEMORY[0x1E4F1AC28]);
  sub_1C2B2DF90();
  id v9 = v1;
  swift_bridgeObjectRetain();
  sub_1C2B73C90();
  sub_1C2B2EB64(&qword_1EBF10760, (void (*)(uint64_t))sub_1C2B2DF10);
  uint64_t v10 = sub_1C2B73D00();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v10;
}

void sub_1C2B2DF10()
{
  if (!qword_1EBF10768)
  {
    sub_1C2B2E95C(255, &qword_1EBF10758, MEMORY[0x1E4F1AC28]);
    sub_1C2B2DF90();
    unint64_t v0 = sub_1C2B73CA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBF10768);
    }
  }
}

unint64_t sub_1C2B2DF90()
{
  unint64_t result = qword_1EBF10750;
  if (!qword_1EBF10750)
  {
    sub_1C2B2E95C(255, &qword_1EBF10758, MEMORY[0x1E4F1AC28]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBF10750);
  }
  return result;
}

uint64_t sub_1C2B2E004@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  sub_1C2B2E95C(0, &qword_1EBF10758, MEMORY[0x1E4F1AC28]);
  swift_allocObject();
  id v7 = a1;
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C2B73C70();
  *a3 = result;
  return result;
}

uint64_t sub_1C2B2E0C0@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C2B2E004(*(void **)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_1C2B2E0C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C2B2E2B4(0, (unint64_t *)&unk_1EBF11290, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  id v9 = (char *)&v15 - v8;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  uint64_t v11 = sub_1C2B74310();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v9, 1, 1, v11);
  uint64_t v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = 0;
  v13[3] = 0;
  uint64_t v13[4] = v12;
  v13[5] = a4;
  v13[6] = sub_1C2B2E350;
  v13[7] = v10;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1C2B12364((uint64_t)v9, (uint64_t)&unk_1EA32BF90, (uint64_t)v13);
  swift_release();
  return sub_1C2B2E8D0((uint64_t)v9);
}

uint64_t objectdestroyTm_1()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C2B2E2AC(uint64_t a1, uint64_t a2)
{
  return sub_1C2B2E0C8(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

void sub_1C2B2E2B4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C2B2E318()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C2B2E350(uint64_t a1, char a2)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t *))(v2 + 16);
  uint64_t v5 = a1;
  char v6 = a2 & 1;
  return v3(&v5);
}

uint64_t sub_1C2B2E390()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C2B2E3C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[21] = a6;
  v7[22] = a7;
  v7[19] = a4;
  v7[20] = a5;
  return MEMORY[0x1F4188298](sub_1C2B2E3EC, 0, 0);
}

uint64_t sub_1C2B2E3EC()
{
  uint64_t v1 = v0[19] + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x1C8767AE0](v1);
  v0[23] = v2;
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    uint64_t v4 = sub_1C2B741C0();
    v0[24] = v4;
    v0[2] = v0;
    v0[7] = v0 + 18;
    v0[3] = sub_1C2B2E570;
    uint64_t v5 = swift_continuation_init();
    v0[10] = MEMORY[0x1E4F143A8];
    v0[11] = 0x40000000;
    v0[12] = sub_1C2B7084C;
    v0[13] = &block_descriptor_0;
    v0[14] = v5;
    objc_msgSend(v3, sel_fetchSchedulesWithMedicationIdentifiers_completion_, v4, v0 + 10);
    return MEMORY[0x1F41881E8](v0 + 2);
  }
  else
  {
    char v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
}

uint64_t sub_1C2B2E570()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 200) = v1;
  if (v1) {
    uint64_t v2 = sub_1C2B2E71C;
  }
  else {
    uint64_t v2 = sub_1C2B2E680;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C2B2E680()
{
  uint64_t v1 = *(void **)(v0 + 184);
  uint64_t v2 = *(void (**)(uint64_t, void))(v0 + 168);
  uint64_t v3 = *(void *)(v0 + 144);

  if (!v3) {
    uint64_t v3 = MEMORY[0x1E4FBC860];
  }
  v2(v3, 0);

  swift_bridgeObjectRelease();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1C2B2E71C()
{
  uint64_t v2 = (void *)v0[24];
  uint64_t v1 = (void *)v0[25];
  uint64_t v3 = (void *)v0[23];
  uint64_t v4 = (void (*)(void *, uint64_t))v0[21];
  swift_willThrow();

  id v5 = v1;
  v4(v1, 1);

  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_1C2B2E7D0()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_1C2B2E820()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 32);
  long long v4 = *(_OWORD *)(v0 + 48);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_1C2AF9A8C;
  *(_OWORD *)(v2 + 168) = v4;
  *(_OWORD *)(v2 + 152) = v3;
  return MEMORY[0x1F4188298](sub_1C2B2E3EC, 0, 0);
}

uint64_t sub_1C2B2E8D0(uint64_t a1)
{
  sub_1C2B2E2B4(0, (unint64_t *)&unk_1EBF11290, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C2B2E95C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, void))
{
  if (!*a2)
  {
    sub_1C2B2E2B4(255, &qword_1EBF10780, (uint64_t (*)(uint64_t))sub_1C2B2DBF8, MEMORY[0x1E4FBB320]);
    uint64_t v7 = v6;
    unint64_t v8 = sub_1C2AF44C8();
    unint64_t v9 = a3(a1, v7, v8, MEMORY[0x1E4FBC0F0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1C2B2EA04()
{
  sub_1C2B2E95C(0, &qword_1EA32BF98, MEMORY[0x1E4FBCF48]);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1C2B2EAB0(uint64_t a1, void *a2)
{
  sub_1C2B2E95C(0, &qword_1EA32BF98, MEMORY[0x1E4FBCF48]);
  return sub_1C2B2DC38(a1, a2);
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t sub_1C2B2EB64(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C2B2EBAC()
{
  uint64_t v0 = MedicationShape.rawValue.getter();
  uint64_t v2 = v1;
  if (v0 == MedicationShape.rawValue.getter() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_1C2B74B50();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

BOOL sub_1C2B2EC44(char a1, char a2)
{
  return a1 == a2;
}

id HKConcept.clinicalProduct.getter()
{
  if (objc_msgSend(v0, sel_meds_isClinicalProduct))
  {
    id v1 = v0;
  }
  else if (objc_msgSend(v0, sel_meds_isSpecificProduct))
  {
    return objc_msgSend(v0, sel_firstConceptOfRelationshipType_, 798);
  }
  else
  {
    return 0;
  }
  return v0;
}

uint64_t HKConcept.routedDoseFormName.getter()
{
  if (!objc_msgSend(v0, sel_meds_isRoutedDoseFormProduct)) {
    return 0;
  }
  id v1 = objc_msgSend(v0, sel_meds_preferredNameForFirstObjectOfRelationshipType_, 982);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_1C2B73FA0();

  return v3;
}

uint64_t HKConcept.conceptDisplayName.getter()
{
  id v1 = objc_msgSend(v0, sel_localizedPreferredName);
  if (v1)
  {
    id v2 = v1;
    uint64_t v3 = sub_1C2B73FA0();
  }
  else
  {
    if (qword_1EBF10F78 != -1) {
      swift_once();
    }
    id v2 = (id)qword_1EBF10F60;
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1C2B735A0();
    swift_bridgeObjectRelease();
  }

  return v3;
}

uint64_t HKConcept.strengthDisplay.getter()
{
  if (objc_msgSend(v0, sel_meds_isClinicalProduct))
  {
    id v1 = v0;
  }
  else
  {
    if (!objc_msgSend(v0, sel_meds_isSpecificProduct)) {
      goto LABEL_7;
    }
    id v1 = objc_msgSend(v0, sel_firstConceptOfRelationshipType_, 798);
    if (!v1) {
      goto LABEL_7;
    }
  }
  id v2 = objc_msgSend(v1, sel_firstAttributeForType_, 984);

  if (v2)
  {
    id v3 = objc_msgSend(v2, sel_stringValue);
LABEL_9:
    id v5 = v3;

LABEL_10:
    uint64_t v6 = sub_1C2B73FA0();
    goto LABEL_11;
  }
LABEL_7:
  id v4 = objc_msgSend(v0, sel_firstAttributeForType_, 984);
  if (v4)
  {
    id v2 = v4;
    id v3 = objc_msgSend(v4, sel_stringValue);
    goto LABEL_9;
  }
  id v8 = objc_msgSend(v0, sel_localizedPreferredName);
  if (v8)
  {
    id v5 = v8;
    goto LABEL_10;
  }
  if (qword_1EBF10F78 != -1) {
    swift_once();
  }
  id v5 = (id)qword_1EBF10F60;
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1C2B735A0();
  swift_bridgeObjectRelease();
LABEL_11:

  return v6;
}

uint64_t MedicationConceptType.init(rawValue:)@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  char v2 = result - 73;
  if ((unint64_t)(result - 841) >= 5) {
    char v2 = 5;
  }
  *a2 = v2;
  return result;
}

id MedicationConceptType.conceptIdentifier.getter()
{
  uint64_t v1 = *v0 + 841;
  id v2 = objc_allocWithZone(MEMORY[0x1E4F2ADE8]);
  return objc_msgSend(v2, sel_initWithRawIdentifier_, v1);
}

uint64_t MedicationConceptType.rawValue.getter()
{
  return *v0 + 841;
}

unint64_t MedicationConceptType.debugDescription.getter()
{
  unint64_t result = 0x6369666963657073;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6C6163696E696C63;
      break;
    case 2:
      unint64_t result = 0xD000000000000018;
      break;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    case 4:
      unint64_t result = 0x6D614E6564617254;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_1C2B2F164(char *a1, char *a2)
{
  return sub_1C2B2EC44(*a1, *a2);
}

uint64_t sub_1C2B2F170()
{
  return sub_1C2B74C60();
}

uint64_t sub_1C2B2F1B8()
{
  return sub_1C2B74C50();
}

uint64_t sub_1C2B2F1E8()
{
  return sub_1C2B74C60();
}

void *sub_1C2B2F22C@<X0>(void *result@<X0>, unsigned char *a2@<X8>)
{
  unint64_t v2 = *result - 841;
  if (v2 >= 5) {
    LOBYTE(v2) = 5;
  }
  *a2 = v2;
  return result;
}

void sub_1C2B2F248(void *a1@<X8>)
{
  *a1 = *v1 + 841;
}

void *HKConcept.formDisplay.getter()
{
  id v1 = objc_msgSend(v0, sel_firstAttributeForType_, 796);
  unint64_t v2 = v1;
  if (v1)
  {
    id v3 = objc_msgSend(v1, sel_stringValue);

    unint64_t v2 = (void *)sub_1C2B73FA0();
  }
  id v4 = objc_msgSend(v0, sel_firstAttributeForType_, 795);
  id v5 = v4;
  if (v4)
  {
    id v6 = objc_msgSend(v4, sel_stringValue);

    sub_1C2B73FA0();
  }
  return v2;
}

id HKConcept.loggingDoseForm.getter()
{
  if (!objc_msgSend(v0, sel_meds_isSpecificProduct)) {
    return 0;
  }
  id v1 = objc_msgSend(v0, sel_firstConceptOfRelationshipType_, 798);
  if (!v1) {
    return 0;
  }
  unint64_t v2 = v1;
  id v3 = objc_msgSend(v1, sel_firstConceptOfRelationshipType_, 798);

  if (v3)
  {
    id v4 = objc_msgSend(v3, sel_firstConceptOfRelationshipType_, 982);

    if (v4)
    {
      id v3 = objc_msgSend(v4, sel_firstConceptOfRelationshipType_, 797);

      return v3;
    }
    return 0;
  }
  return v3;
}

uint64_t HKConcept.educationalContent.getter()
{
  id v1 = objc_msgSend(v0, sel_allConceptsOfRelationshipType_, 988);
  sub_1C2B2F578();
  uint64_t v2 = sub_1C2B741D0();

  return v2;
}

id HKConcept.tradeName.getter()
{
  return sub_1C2B2F498((SEL *)&selRef_meds_isTradeNameProduct, 985);
}

id HKConcept.ingredientProduct.getter()
{
  return sub_1C2B2F498((SEL *)&selRef_meds_isIngredientProduct, 798);
}

id sub_1C2B2F498(SEL *a1, uint64_t a2)
{
  if ([v2 *a1]) {
    return objc_msgSend(v2, sel_firstConceptOfRelationshipType_, a2);
  }
  else {
    return 0;
  }
}

void *HKConcept.firstAttribute(for:)(uint64_t a1)
{
  id v2 = objc_msgSend(v1, sel_firstAttributeForType_, a1);
  id v3 = v2;
  if (v2)
  {
    id v4 = objc_msgSend(v2, sel_stringValue);

    id v3 = (void *)sub_1C2B73FA0();
  }
  return v3;
}

unint64_t sub_1C2B2F578()
{
  unint64_t result = qword_1EA32BA78;
  if (!qword_1EA32BA78)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA32BA78);
  }
  return result;
}

unint64_t sub_1C2B2F5BC()
{
  unint64_t result = qword_1EA32BFA0;
  if (!qword_1EA32BFA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA32BFA0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for MedicationConceptType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for MedicationConceptType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C2B2F76CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicationConceptType()
{
  return &type metadata for MedicationConceptType;
}

uint64_t HKMedicationFreeTextFormTypeCode.localizedFormString.getter(uint64_t a1)
{
  if (qword_1EBF10F78 != -1) {
    swift_once();
  }
  HKMedicationFreeTextFormTypeCode.localizationKey.getter(a1);
  id v2 = (id)qword_1EBF10F60;
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1C2B735A0();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return v3;
}

unint64_t HKMedicationFreeTextFormTypeCode.localizationKey.getter(uint64_t a1)
{
  uint64_t v1 = a1 - 1;
  unint64_t result = 0xD000000000000017;
  switch(v1)
  {
    case 0:
      return result;
    case 2:
      unint64_t result = 0xD000000000000016;
      break;
    case 4:
      unint64_t result = 0xD000000000000014;
      break;
    case 5:
      unint64_t result = 0xD000000000000013;
      break;
    case 6:
      unint64_t result = 0xD000000000000017;
      break;
    case 7:
      unint64_t result = 0xD000000000000019;
      break;
    case 8:
      unint64_t result = 0xD000000000000016;
      break;
    case 9:
      unint64_t result = 0xD000000000000016;
      break;
    case 10:
      unint64_t result = 0xD000000000000018;
      break;
    case 12:
      unint64_t result = 0xD000000000000016;
      break;
    case 14:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 15:
      unint64_t result = 0xD000000000000016;
      break;
    case 16:
      unint64_t result = 0xD000000000000017;
      break;
    default:
      unint64_t result = 0xD000000000000015;
      break;
  }
  return result;
}

uint64_t HKMedicationFreeTextFormTypeCode.englishFormString.getter(uint64_t a1)
{
  sub_1C2B30058();
  MEMORY[0x1F4188790](v2 - 8);
  unsigned int v4 = (char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C2B73660();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  int v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBF10F78 != -1) {
    swift_once();
  }
  v21[0] = qword_1EBF10F60;
  v21[1] = *(void *)algn_1EBF10F68;
  v21[2] = qword_1EBF10F70;
  id v9 = (id)qword_1EBF10F60;
  swift_bridgeObjectRetain();
  LocalizationSource.stringsTable(forLanguageCode:)(28261, 0xE200000000000000, (uint64_t)v4);
  swift_bridgeObjectRelease();

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    id v12 = objc_allocWithZone(MEMORY[0x1E4F1C9E8]);
    uint64_t v13 = (void *)sub_1C2B73640();
    id v14 = objc_msgSend(v12, sel_initWithContentsOfURL_, v13);

    if (v14)
    {
      HKMedicationFreeTextFormTypeCode.localizationKey.getter(a1);
      uint64_t v15 = (void *)sub_1C2B73F60();
      swift_bridgeObjectRelease();
      id v16 = objc_msgSend(v14, sel_valueForKey_, v15);

      if (v16)
      {
        sub_1C2B746D0();
        swift_unknownObjectRelease();
      }
      else
      {
        memset(v20, 0, sizeof(v20));
      }
      sub_1C2B300B0((uint64_t)v20, (uint64_t)v21);
      if (v21[3])
      {
        if (swift_dynamicCast())
        {

          uint64_t v11 = v19;
LABEL_16:
          (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
          return v11;
        }
      }
      else
      {
        sub_1C2B30170((uint64_t)v21, (uint64_t (*)(void))sub_1C2B30114);
      }
      id v17 = (id)qword_1EBF10F60;
      swift_bridgeObjectRetain();
      uint64_t v11 = sub_1C2B735A0();
    }
    else
    {
      HKMedicationFreeTextFormTypeCode.localizationKey.getter(a1);
      id v17 = (id)qword_1EBF10F60;
      swift_bridgeObjectRetain();
      uint64_t v11 = sub_1C2B735A0();
    }
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  sub_1C2B30170((uint64_t)v4, (uint64_t (*)(void))sub_1C2B30058);
  HKMedicationFreeTextFormTypeCode.localizationKey.getter(a1);
  id v10 = (id)qword_1EBF10F60;
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1C2B735A0();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return v11;
}

uint64_t static HKMedicationFreeTextFormTypeCode.allFormsAndTheirDisplayInEnglish.getter()
{
  uint64_t v0 = _sSo32HKMedicationFreeTextFormTypeCodeV27HealthMedicationsExperienceE8allCasesSayABGvgZ_0();
  int64_t v1 = v0[2];
  if (v1)
  {
    uint64_t v12 = MEMORY[0x1E4FBC860];
    sub_1C2B1DA58(0, v1, 0);
    uint64_t v2 = 0;
    uint64_t v3 = v12;
    do
    {
      uint64_t v4 = v0[v2 + 4];
      uint64_t v5 = HKMedicationFreeTextFormTypeCode.englishFormString.getter(v4);
      uint64_t v7 = v6;
      unint64_t v9 = *(void *)(v12 + 16);
      unint64_t v8 = *(void *)(v12 + 24);
      if (v9 >= v8 >> 1) {
        sub_1C2B1DA58(v8 > 1, v9 + 1, 1);
      }
      ++v2;
      *(void *)(v12 + 16) = v9 + 1;
      id v10 = (void *)(v12 + 24 * v9);
      v10[4] = v4;
      v10[5] = v5;
      v10[6] = v7;
    }
    while (v1 != v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  return v3;
}

void *_sSo32HKMedicationFreeTextFormTypeCodeV27HealthMedicationsExperienceE8allCasesSayABGvgZ_0()
{
  uint64_t v0 = sub_1C2AE240C(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v2 = v0[2];
  unint64_t v1 = v0[3];
  if (v2 >= v1 >> 1) {
    uint64_t v0 = sub_1C2AE240C((void *)(v1 > 1), v2 + 1, 1, v0);
  }
  v0[2] = v2 + 1;
  v0[v2 + 4] = 1;
  unint64_t v3 = v2 + 5;
  uint64_t v4 = -16;
  do
  {
    unint64_t v5 = v0[3];
    if (v3 - 4 >= v5 >> 1) {
      uint64_t v0 = sub_1C2AE240C((void *)(v5 > 1), v3 - 3, 1, v0);
    }
    v0[2] = v3 - 3;
    v0[v3++] = v4 + 18;
  }
  while (!__CFADD__(v4++, 1));
  return v0;
}

void sub_1C2B30058()
{
  if (!qword_1EA32BFA8)
  {
    sub_1C2B73660();
    unint64_t v0 = sub_1C2B74630();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA32BFA8);
    }
  }
}

uint64_t sub_1C2B300B0(uint64_t a1, uint64_t a2)
{
  sub_1C2B30114();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1C2B30114()
{
  if (!qword_1EA32BAB8)
  {
    unint64_t v0 = sub_1C2B74630();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA32BAB8);
    }
  }
}

uint64_t sub_1C2B30170(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

id static HKQuantityFormattingParameters.parametersForUnit(_:)()
{
  sub_1C2B30274();
  id v0 = objc_msgSend(self, sel_percentUnit);
  char v1 = sub_1C2B745F0();

  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67BE0]), sel_init);
  id v3 = v2;
  if (v1) {
    objc_msgSend(v2, sel_setHasSpaceBetweenValueAndUnit_, 0);
  }
  return v3;
}

unint64_t sub_1C2B30274()
{
  unint64_t result = qword_1EA32BE28;
  if (!qword_1EA32BE28)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA32BE28);
  }
  return result;
}

uint64_t sub_1C2B302B4()
{
  return swift_deallocClassInstance();
}

id sub_1C2B302C4()
{
  _s38HealthMedicationsExperienceBundleClassCMa();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id result = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  qword_1EBF10BE8 = (uint64_t)result;
  return result;
}

id static NSBundle.healthMedicationsExperience.getter()
{
  if (qword_1EBF10BD8 != -1) {
    swift_once();
  }
  id v0 = (void *)qword_1EBF10BE8;
  return v0;
}

uint64_t _s38HealthMedicationsExperienceBundleClassCMa()
{
  return self;
}

uint64_t Weekdays.rawValue.getter()
{
  return *(void *)v0;
}

HealthMedicationsExperience::Weekdays __swiftcall Weekdays.init(rawValue:)(HealthMedicationsExperience::Weekdays rawValue)
{
  v1->unint64_t rawValue = rawValue.rawValue;
  return rawValue;
}

void static Weekdays.none.getter(void *a1@<X8>)
{
  *a1 = 0;
}

void static Weekdays.monday.getter(void *a1@<X8>)
{
  *a1 = 1;
}

void static Weekdays.tuesday.getter(void *a1@<X8>)
{
  *a1 = 2;
}

void static Weekdays.wednesday.getter(void *a1@<X8>)
{
  *a1 = 4;
}

void static Weekdays.thursday.getter(void *a1@<X8>)
{
  *a1 = 8;
}

void static Weekdays.friday.getter(void *a1@<X8>)
{
  *a1 = 16;
}

void static Weekdays.saturday.getter(void *a1@<X8>)
{
  *a1 = 32;
}

void static Weekdays.sunday.getter(void *a1@<X8>)
{
  *a1 = 64;
}

void static Weekdays.everyDay.getter(uint64_t *a1@<X8>)
{
  uint64_t v1 = unk_1F1DF9A70;
  if ((unk_1F1DF9A70 & ~qword_1F1DF9A68) == 0) {
    uint64_t v1 = 0;
  }
  uint64_t v2 = v1 | qword_1F1DF9A68;
  uint64_t v3 = qword_1F1DF9A78;
  if ((qword_1F1DF9A78 & ~v2) == 0) {
    uint64_t v3 = 0;
  }
  uint64_t v4 = v3 | v2;
  if ((unk_1F1DF9A80 & ~v4) != 0) {
    uint64_t v5 = unk_1F1DF9A80;
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = v5 | v4;
  uint64_t v7 = qword_1F1DF9A88;
  if ((qword_1F1DF9A88 & ~v6) == 0) {
    uint64_t v7 = 0;
  }
  uint64_t v8 = v7 | v6;
  if ((unk_1F1DF9A90 & ~v8) != 0) {
    uint64_t v9 = unk_1F1DF9A90;
  }
  else {
    uint64_t v9 = 0;
  }
  uint64_t v10 = v9 | v8;
  uint64_t v11 = qword_1F1DF9A98;
  if ((qword_1F1DF9A98 & ~v10) == 0) {
    uint64_t v11 = 0;
  }
  *a1 = v11 | v10;
}

void static Weekdays.weekends.getter(void *a1@<X8>)
{
  sub_1C2B31D14();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = unk_1F1DF9AC8;
  if ((unk_1F1DF9AC8 & ~qword_1F1DF9AC0) == 0) {
    uint64_t v7 = 0;
  }
  uint64_t v8 = v7 | qword_1F1DF9AC0;
  uint64_t v9 = qword_1F1DF9AD0;
  if ((qword_1F1DF9AD0 & ~v8) == 0) {
    uint64_t v9 = 0;
  }
  uint64_t v10 = v9 | v8;
  if ((unk_1F1DF9AD8 & ~v10) != 0) {
    uint64_t v11 = unk_1F1DF9AD8;
  }
  else {
    uint64_t v11 = 0;
  }
  uint64_t v12 = v11 | v10;
  uint64_t v13 = qword_1F1DF9AE0;
  if ((qword_1F1DF9AE0 & ~v12) == 0) {
    uint64_t v13 = 0;
  }
  uint64_t v14 = v13 | v12;
  if ((unk_1F1DF9AE8 & ~v14) != 0) {
    uint64_t v15 = unk_1F1DF9AE8;
  }
  else {
    uint64_t v15 = 0;
  }
  uint64_t v16 = v15 | v14;
  uint64_t v17 = qword_1F1DF9AF0;
  if ((qword_1F1DF9AF0 & ~v16) == 0) {
    uint64_t v17 = 0;
  }
  uint64_t v22 = v17 | v16;
  sub_1C2B31D70();
  sub_1C2B74CC0();
  uint64_t v18 = 0;
  while (1)
  {
    sub_1C2B73E20();
    if (v23)
    {
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      *a1 = v18;
      return;
    }
    uint64_t v19 = v22;
    float v20 = log2f((float)v22);
    if ((~LODWORD(v20) & 0x7F800000) == 0) {
      break;
    }
    if (v20 <= -9.2234e18) {
      goto LABEL_27;
    }
    if (v20 >= 9.2234e18) {
      goto LABEL_28;
    }
    if ((unint64_t)(uint64_t)v20 <= 6)
    {
      if ((objc_msgSend(self, sel_weekdayIsWeekend_, qword_1C2B78030[(uint64_t)v20]) & ((v19 & ~v18) != 0)) != 0) {
        uint64_t v21 = v19;
      }
      else {
        uint64_t v21 = 0;
      }
      v18 |= v21;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
}

void Weekdays.singleDay.getter(unsigned char *a1@<X8>)
{
  float v3 = log2f((float)*v1);
  if ((~LODWORD(v3) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v3 <= -9.2234e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v3 >= 9.2234e18)
  {
LABEL_9:
    __break(1u);
    return;
  }
  uint64_t v4 = (uint64_t)v3;
  if ((unint64_t)(uint64_t)v3 >= 7) {
    LOBYTE(v4) = 7;
  }
  *a1 = v4;
}

id Weekdays.Day.isWeekendInCurrentLocale.getter()
{
  return objc_msgSend(self, sel_weekdayIsWeekend_, qword_1C2B78030[*v0]);
}

void static Weekdays.weekDays.getter(void *a1@<X8>)
{
  sub_1C2B31D14();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = unk_1F1DF9B20;
  if ((unk_1F1DF9B20 & ~qword_1F1DF9B18) == 0) {
    uint64_t v7 = 0;
  }
  uint64_t v8 = v7 | qword_1F1DF9B18;
  uint64_t v9 = qword_1F1DF9B28;
  if ((qword_1F1DF9B28 & ~v8) == 0) {
    uint64_t v9 = 0;
  }
  uint64_t v10 = v9 | v8;
  if ((unk_1F1DF9B30 & ~v10) != 0) {
    uint64_t v11 = unk_1F1DF9B30;
  }
  else {
    uint64_t v11 = 0;
  }
  uint64_t v12 = v11 | v10;
  uint64_t v13 = qword_1F1DF9B38;
  if ((qword_1F1DF9B38 & ~v12) == 0) {
    uint64_t v13 = 0;
  }
  uint64_t v14 = v13 | v12;
  if ((unk_1F1DF9B40 & ~v14) != 0) {
    uint64_t v15 = unk_1F1DF9B40;
  }
  else {
    uint64_t v15 = 0;
  }
  uint64_t v16 = v15 | v14;
  uint64_t v17 = qword_1F1DF9B48;
  if ((qword_1F1DF9B48 & ~v16) == 0) {
    uint64_t v17 = 0;
  }
  uint64_t v24 = v17 | v16;
  sub_1C2B31D70();
  sub_1C2B74CC0();
  uint64_t v18 = 0;
  while (1)
  {
    sub_1C2B73E20();
    if (v25)
    {
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      *a1 = v18;
      return;
    }
    uint64_t v19 = v24;
    float v20 = log2f((float)v24);
    if ((~LODWORD(v20) & 0x7F800000) == 0) {
      break;
    }
    if (v20 <= -9.2234e18) {
      goto LABEL_30;
    }
    if (v20 >= 9.2234e18) {
      goto LABEL_31;
    }
    if ((unint64_t)(uint64_t)v20 <= 6)
    {
      unsigned int v21 = objc_msgSend(self, sel_weekdayIsWeekend_, qword_1C2B78030[(uint64_t)v20]);
      if ((v19 & ~v18) != 0) {
        int v22 = v21;
      }
      else {
        int v22 = 1;
      }
      if (v22) {
        uint64_t v23 = 0;
      }
      else {
        uint64_t v23 = v19;
      }
      v18 |= v23;
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
}

uint64_t Weekdays.sortedWeekdays(calendar:)()
{
  unint64_t v1 = *v0;
  uint64_t result = sub_1C2B737B0();
  if (result > 7)
  {
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v3 = result;
  uint64_t v4 = result - 1;
  uint64_t v5 = MEMORY[0x1E4FBC860];
  while (1)
  {
    if ((unint64_t)(v3 - 1) < 6)
    {
      unint64_t v7 = 0x40302010006uLL >> (8 * v4);
      goto LABEL_8;
    }
    if (v4 == 6) {
      break;
    }
LABEL_3:
    ++v4;
    if (__OFADD__(v3++, 1))
    {
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
  }
  LOBYTE(v7) = 5;
LABEL_8:
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1C2AE2534(0, *(void *)(v5 + 16) + 1, 1, (char *)v5);
    uint64_t v5 = result;
  }
  unint64_t v9 = *(void *)(v5 + 16);
  unint64_t v8 = *(void *)(v5 + 24);
  if (v9 >= v8 >> 1)
  {
    uint64_t result = (uint64_t)sub_1C2AE2534((char *)(v8 > 1), v9 + 1, 1, (char *)v5);
    uint64_t v5 = result;
  }
  *(void *)(v5 + 16) = v9 + 1;
  *(unsigned char *)(v5 + v9 + 32) = v7;
  if (v4 != 6) {
    goto LABEL_3;
  }
  if (sub_1C2B737B0() < 2)
  {
LABEL_25:
    uint64_t v14 = *(void *)(v5 + 16);
    if (v14)
    {
      swift_bridgeObjectRetain();
      uint64_t v15 = 0;
      uint64_t v16 = MEMORY[0x1E4FBC860];
      do
      {
        unint64_t v19 = *(unsigned __int8 *)(v5 + v15 + 32);
        if (v19 > 0x3F || ((v1 >> v19) & 1) != 0)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_1C2B1DA78(0, *(void *)(v16 + 16) + 1, 1);
          }
          unint64_t v18 = *(void *)(v16 + 16);
          unint64_t v17 = *(void *)(v16 + 24);
          if (v18 >= v17 >> 1) {
            sub_1C2B1DA78(v17 > 1, v18 + 1, 1);
          }
          *(void *)(v16 + 16) = v18 + 1;
          *(unsigned char *)(v16 + v18 + 32) = v19;
        }
        ++v15;
      }
      while (v14 != v15);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v16 = MEMORY[0x1E4FBC860];
    }
    swift_bridgeObjectRelease();
    return v16;
  }
  uint64_t result = sub_1C2B737B0();
  if (__OFSUB__(result, 1)) {
    goto LABEL_41;
  }
  if (result - 1 >= 1)
  {
    unint64_t v10 = 0;
    uint64_t v11 = result - 2;
    while (1)
    {
      if (v10 <= 6)
      {
        unint64_t v13 = *(void *)(v5 + 16);
        unint64_t v12 = *(void *)(v5 + 24);
        if (v13 >= v12 >> 1)
        {
          uint64_t result = (uint64_t)sub_1C2AE2534((char *)(v12 > 1), v13 + 1, 1, (char *)v5);
          uint64_t v5 = result;
        }
        *(void *)(v5 + 16) = v13 + 1;
        *(unsigned char *)(v5 + v13 + 32) = 0x5040302010006uLL >> (8 * v10);
      }
      if (v11 == v10) {
        goto LABEL_25;
      }
      if (__OFADD__(++v10, 1)) {
        goto LABEL_39;
      }
    }
  }
LABEL_42:
  __break(1u);
  return result;
}

void Weekdays.Day.weekday.getter(uint64_t *a1@<X8>)
{
  unsigned int v2 = *v1;
  if (v2 >= 0x40) {
    uint64_t v3 = 0;
  }
  else {
    uint64_t v3 = 1 << v2;
  }
  *a1 = v3;
}

uint64_t Weekdays.enumerate(_:_:)(uint64_t a1, void (*a2)(char *))
{
  uint64_t v10 = *v2;
  uint64_t v4 = Weekdays.sortedWeekdays(calendar:)();
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = (char *)(v4 + 32);
    do
    {
      char v7 = *v6++;
      char v9 = v7;
      a2(&v9);
      --v5;
    }
    while (v5);
  }
  return swift_bridgeObjectRelease();
}

HealthMedicationsExperience::Weekdays::Day_optional __swiftcall Weekdays.Day.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 7;
  if ((unint64_t)rawValue < 7) {
    char v2 = rawValue;
  }
  *unint64_t v1 = v2;
  return (HealthMedicationsExperience::Weekdays::Day_optional)rawValue;
}

uint64_t Weekdays.Day.rawValue.getter()
{
  return *v0;
}

uint64_t Weekdays.Day.gregorianCalendarDay.getter()
{
  return qword_1C2B78030[*v0];
}

void *static Weekdays.Day.allCases.getter()
{
  return &unk_1F1DF9B50;
}

HealthMedicationsExperience::Weekdays::Day_optional sub_1C2B30CE4(Swift::Int *a1)
{
  return Weekdays.Day.init(rawValue:)(*a1);
}

void sub_1C2B30CEC(void *a1@<X8>)
{
  *a1 = &unk_1F1DF9B50;
}

void Weekdays.toString(calendar:)()
{
  uint64_t v76 = sub_1C2B73790();
  uint64_t v1 = *(void *)(v76 - 8);
  MEMORY[0x1F4188790](v76);
  uint64_t v3 = (char *)&v64 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2B31EBC(0, &qword_1EA32BFC0, MEMORY[0x1E4F27258]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v8 = (char *)&v64 - v7;
  sub_1C2B31EBC(0, &qword_1EA32BFD8, MEMORY[0x1E4F27230]);
  uint64_t v10 = v9;
  uint64_t v75 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v74 = (char *)&v64 - v11;
  sub_1C2B31EBC(0, &qword_1EA32BFE0, MEMORY[0x1E4F27260]);
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v64 - v15;
  uint64_t v17 = *v0;
  if (*v0)
  {
    unint64_t v68 = v16;
    uint64_t v69 = v14;
    uint64_t v70 = v13;
    uint64_t v78 = v17;
    uint64_t v18 = Weekdays.sortedWeekdays(calendar:)();
    uint64_t v19 = unk_1F1DF9BA0;
    if ((unk_1F1DF9BA0 & ~qword_1F1DF9B98) == 0) {
      uint64_t v19 = 0;
    }
    uint64_t v20 = v19 | qword_1F1DF9B98;
    uint64_t v21 = qword_1F1DF9BA8;
    if ((qword_1F1DF9BA8 & ~v20) == 0) {
      uint64_t v21 = 0;
    }
    uint64_t v22 = v21 | v20;
    if ((unk_1F1DF9BB0 & ~v22) != 0) {
      uint64_t v23 = unk_1F1DF9BB0;
    }
    else {
      uint64_t v23 = 0;
    }
    uint64_t v24 = v23 | v22;
    uint64_t v25 = qword_1F1DF9BB8;
    if ((qword_1F1DF9BB8 & ~v24) == 0) {
      uint64_t v25 = 0;
    }
    uint64_t v26 = v25 | v24;
    if ((unk_1F1DF9BC0 & ~v26) != 0) {
      uint64_t v27 = unk_1F1DF9BC0;
    }
    else {
      uint64_t v27 = 0;
    }
    uint64_t v28 = v27 | v26;
    uint64_t v29 = qword_1F1DF9BC8;
    if ((qword_1F1DF9BC8 & ~v28) == 0) {
      uint64_t v29 = 0;
    }
    if (v17 == (v29 | v28))
    {
      swift_bridgeObjectRelease();
      if (qword_1EBF10F78 == -1) {
        goto LABEL_24;
      }
      goto LABEL_46;
    }
    static Weekdays.weekDays.getter(&v78);
    if (v17 == v78)
    {
      swift_bridgeObjectRelease();
      if (qword_1EBF10F78 == -1) {
        goto LABEL_24;
      }
      goto LABEL_46;
    }
    static Weekdays.weekends.getter(&v78);
    if (v17 == v78)
    {
      swift_bridgeObjectRelease();
      if (qword_1EBF10F78 == -1)
      {
LABEL_24:
        id v30 = (id)qword_1EBF10F60;
        swift_bridgeObjectRetain();
        sub_1C2B735A0();
        swift_bridgeObjectRelease();

        return;
      }
LABEL_46:
      swift_once();
      goto LABEL_24;
    }
    id v73 = v3;
    uint64_t v31 = *(void *)(v18 + 16);
    if (v31)
    {
      if (v31 != 1)
      {
        uint64_t v64 = v10;
        uint64_t v65 = v8;
        uint64_t v66 = v6;
        uint64_t v67 = v5;
        id v72 = (void (**)(char *, uint64_t))(v1 + 8);
        swift_bridgeObjectRetain();
        uint64_t v37 = 0;
        uint64_t v38 = (void *)MEMORY[0x1E4FBC860];
        uint64_t v71 = v18;
        while (1)
        {
          uint64_t v39 = v37 + 1;
          if (__OFADD__(v37, 1)) {
            break;
          }
          uint64_t v40 = *(char *)(v18 + v37 + 32);
          id v41 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28C10]), sel_init);
          if (!*(void *)(sub_1C2B73760() + 16)) {
            goto LABEL_44;
          }
          uint64_t v42 = v38;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          unint64_t v43 = v73;
          sub_1C2B73750();
          id v44 = (void *)sub_1C2B73770();
          objc_msgSend(v41, sel_setLocale_, v44);

          objc_msgSend(v41, sel_setFormattingContext_, 2);
          (*v72)(v43, v76);
          id v45 = objc_msgSend(v41, sel_shortStandaloneWeekdaySymbols);
          if (!v45) {
            goto LABEL_50;
          }
          id v46 = v45;
          uint64_t v47 = sub_1C2B741D0();

          unint64_t v48 = qword_1C2B78068[v40];
          if (v48 >= *(void *)(v47 + 16)) {
            goto LABEL_45;
          }
          uint64_t v38 = v42;
          uint64_t v49 = v47 + 16 * v48;
          uint64_t v51 = *(void *)(v49 + 32);
          uint64_t v50 = *(void *)(v49 + 40);
          swift_bridgeObjectRetain();

          swift_bridgeObjectRelease();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v38 = sub_1C2AE08C0(0, v42[2] + 1, 1, v42);
          }
          uint64_t v18 = v71;
          unint64_t v53 = v38[2];
          unint64_t v52 = v38[3];
          if (v53 >= v52 >> 1) {
            uint64_t v38 = sub_1C2AE08C0((void *)(v52 > 1), v53 + 1, 1, v38);
          }
          v38[2] = v53 + 1;
          char v54 = &v38[2 * v53];
          v54[4] = v51;
          v54[5] = v50;
          ++v37;
          if (v39 == v31)
          {
            swift_bridgeObjectRelease_n();
            id v77 = v38;
            id v56 = v74;
            uint64_t v55 = v75;
            uint64_t v57 = v64;
            (*(void (**)(char *, void, uint64_t))(v75 + 104))(v74, *MEMORY[0x1E4F27220], v64);
            id v59 = v65;
            uint64_t v58 = v66;
            uint64_t v60 = v67;
            (*(void (**)(char *, void, uint64_t))(v66 + 104))(v65, *MEMORY[0x1E4F27250], v67);
            uint64_t v61 = MEMORY[0x1E4FBB1A0];
            sub_1C2B32798(0, (unint64_t *)&qword_1EBF10FB0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
            sub_1C2B31E64(&qword_1EA32BFD0, (unint64_t *)&qword_1EBF10FB0, v61);
            uint64_t v62 = v68;
            sub_1C2B733F0();
            (*(void (**)(char *, uint64_t))(v58 + 8))(v59, v60);
            (*(void (**)(char *, uint64_t))(v55 + 8))(v56, v57);
            sub_1C2B31FD8();
            uint64_t v63 = v70;
            sub_1C2B74150();
            (*(void (**)(char *, uint64_t))(v69 + 8))(v62, v63);
            swift_bridgeObjectRelease();
            return;
          }
        }
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
      uint64_t v32 = *(char *)(v18 + 32);
      swift_bridgeObjectRelease();
      sub_1C2B3204C();
      NSDateFormatter v79 = NSDateFormatter.init(formattingContext:)(NSFormattingContextStandalone);
      Class isa = v79.super.super.isa;
      id v34 = [(objc_class *)v79.super.super.isa standaloneWeekdaySymbols];
      if (v34)
      {
        uint64_t v35 = v34;
        uint64_t v36 = sub_1C2B741D0();

        if (qword_1C2B78068[v32] < *(void *)(v36 + 16))
        {
          swift_bridgeObjectRetain();

          swift_bridgeObjectRelease();
          return;
        }
        __break(1u);
LABEL_50:
        __break(1u);
      }
      __break(1u);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
}

NSDateFormatter __swiftcall NSDateFormatter.init(formattingContext:)(NSFormattingContext formattingContext)
{
  uint64_t v2 = sub_1C2B73790();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  uint64_t v7 = (objc_class *)sub_1C2B73760();
  if (*((void *)v7 + 2))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1C2B73750();
    uint64_t v11 = (void *)sub_1C2B73770();
    objc_msgSend(v6, sel_setLocale_, v11);

    objc_msgSend(v6, sel_setFormattingContext_, formattingContext);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    uint64_t v7 = (objc_class *)v6;
  }
  else
  {
    __break(1u);
  }
  result._counter = v10;
  result._formatter = v9;
  result._attributes = v8;
  result.super.super.Class isa = v7;
  return result;
}

Swift::String_optional __swiftcall NSDateFormatter.standaloneWeekdaySymbol(for:)(HealthMedicationsExperience::Weekdays::Day a1)
{
  uint64_t v2 = *(char *)a1;
  id v3 = objc_msgSend(v1, sel_standaloneWeekdaySymbols);
  if (!v3) {
    goto LABEL_5;
  }
  uint64_t v5 = v3;
  uint64_t v6 = sub_1C2B741D0();

  unint64_t v7 = qword_1C2B78068[v2];
  if (v7 >= *(void *)(v6 + 16))
  {
    __break(1u);
LABEL_5:
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v8 = v6 + 16 * v7;
  uint64_t v9 = *(void **)(v8 + 32);
  NSUInteger v10 = *(void **)(v8 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v3 = v9;
  uint64_t v4 = v10;
LABEL_6:
  result.value._object = v4;
  result.value._uint64_t countAndFlagsBits = (uint64_t)v3;
  return result;
}

Swift::String_optional __swiftcall NSDateFormatter.shortStandaloneWeekdaySymbol(for:)(HealthMedicationsExperience::Weekdays::Day a1)
{
  uint64_t v2 = *(char *)a1;
  id v3 = objc_msgSend(v1, sel_shortStandaloneWeekdaySymbols);
  if (!v3) {
    goto LABEL_5;
  }
  uint64_t v5 = v3;
  uint64_t v6 = sub_1C2B741D0();

  unint64_t v7 = qword_1C2B78068[v2];
  if (v7 >= *(void *)(v6 + 16))
  {
    __break(1u);
LABEL_5:
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v8 = v6 + 16 * v7;
  uint64_t v9 = *(void **)(v8 + 32);
  NSUInteger v10 = *(void **)(v8 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v3 = v9;
  uint64_t v4 = v10;
LABEL_6:
  result.value._object = v4;
  result.value._uint64_t countAndFlagsBits = (uint64_t)v3;
  return result;
}

void *sub_1C2B31870@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1C2B3187C()
{
  sub_1C2B31D70();
  return sub_1C2B74CC0();
}

uint64_t sub_1C2B318C8()
{
  return 0;
}

uint64_t sub_1C2B318D0()
{
  return sub_1C2B32510(*v0);
}

uint64_t sub_1C2B318D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2B318E0(a1, a2, a3, *v3);
}

uint64_t sub_1C2B318E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C2B31D14();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a4;
  sub_1C2B324BC();
  uint64_t result = sub_1C2B74160();
  if (!a2)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(a1, v12, v9);
    return 0;
  }
  if (!a3)
  {
LABEL_11:
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(a1, v12, v9);
    return a3;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    sub_1C2B32220(&qword_1EA32C010, (void (*)(uint64_t))sub_1C2B31D14);
    sub_1C2B74640();
    if (v16)
    {
      uint64_t v14 = 0;
LABEL_10:
      (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(a1, v12, v9);
      return v14;
    }
    uint64_t v14 = 0;
    while (1)
    {
      *(void *)(a2 + 8 * v14) = v15[1];
      if (a3 - 1 == v14) {
        goto LABEL_11;
      }
      sub_1C2B74640();
      ++v14;
      if (v16) {
        goto LABEL_10;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C2B31AD8()
{
  return sub_1C2B74180();
}

uint64_t sub_1C2B31AFC()
{
  return sub_1C2B74C60();
}

uint64_t sub_1C2B31B44()
{
  return sub_1C2B74C60();
}

void sub_1C2B31B88(void *a1@<X8>)
{
  *a1 = 0;
}

void *sub_1C2B31B90@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_1C2B31BA4@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

void *sub_1C2B31BB8@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_1C2B31BCC(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_1C2B31BFC@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_1C2B31C28@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v5 == 0;
  return result;
}

void *sub_1C2B31C4C(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_1C2B31C60(void *result)
{
  *v1 &= *result;
  return result;
}

void *sub_1C2B31C74(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_1C2B31C88@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_1C2B31C9C(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_1C2B31CB0(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_1C2B31CC4(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_1C2B31CD8()
{
  return *v0 == 0;
}

uint64_t sub_1C2B31CE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x1F4184B08](a1, a4, a2, a5, a3);
}

void *sub_1C2B31D00(void *result)
{
  *v1 &= ~*result;
  return result;
}

void sub_1C2B31D14()
{
  if (!qword_1EA32BFB0)
  {
    sub_1C2B31D70();
    unint64_t v0 = sub_1C2B73E30();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA32BFB0);
    }
  }
}

unint64_t sub_1C2B31D70()
{
  unint64_t result = qword_1EA32BFB8;
  if (!qword_1EA32BFB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA32BFB8);
  }
  return result;
}

Swift::String_optional __swiftcall NSDateFormatter.veryShortStandaloneWeekdaySymbol(for:)(HealthMedicationsExperience::Weekdays::Day a1)
{
  uint64_t v2 = *(char *)a1;
  id v3 = objc_msgSend(v1, sel_veryShortStandaloneWeekdaySymbols);
  if (!v3) {
    goto LABEL_5;
  }
  uint64_t v5 = v3;
  uint64_t v6 = sub_1C2B741D0();

  unint64_t v7 = qword_1C2B78068[v2];
  if (v7 >= *(void *)(v6 + 16))
  {
    __break(1u);
LABEL_5:
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v8 = v6 + 16 * v7;
  uint64_t v9 = *(void **)(v8 + 32);
  uint64_t v10 = *(void **)(v8 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v3 = v9;
  uint64_t v4 = v10;
LABEL_6:
  result.value._object = v4;
  result.value._uint64_t countAndFlagsBits = (uint64_t)v3;
  return result;
}

uint64_t sub_1C2B31E64(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C2B32798(255, a2, a3, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C2B31EBC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, void *))
{
  if (!*a2)
  {
    uint64_t v6 = sub_1C2B73490();
    uint64_t v7 = MEMORY[0x1E4FBB1A0];
    sub_1C2B32798(255, (unint64_t *)&qword_1EBF10FB0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
    v11[0] = v6;
    v11[1] = v8;
    uint64_t v11[2] = sub_1C2B32220(&qword_1EA32BFC8, MEMORY[0x1E4F26DE8]);
    v11[3] = sub_1C2B31E64(&qword_1EA32BFD0, (unint64_t *)&qword_1EBF10FB0, v7);
    unint64_t v9 = a3(a1, v11);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

unint64_t sub_1C2B31FD8()
{
  unint64_t result = qword_1EA32BFE8;
  if (!qword_1EA32BFE8)
  {
    sub_1C2B31EBC(255, &qword_1EA32BFE0, MEMORY[0x1E4F27260]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA32BFE8);
  }
  return result;
}

unint64_t sub_1C2B3204C()
{
  unint64_t result = qword_1EA32BFF0;
  if (!qword_1EA32BFF0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA32BFF0);
  }
  return result;
}

unint64_t sub_1C2B32090()
{
  unint64_t result = qword_1EA32BFF8;
  if (!qword_1EA32BFF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA32BFF8);
  }
  return result;
}

uint64_t sub_1C2B320E4()
{
  return sub_1C2B31E64(&qword_1EA32C000, &qword_1EA32C008, (uint64_t)&type metadata for Weekdays.Day);
}

unint64_t sub_1C2B3212C()
{
  unint64_t result = qword_1EBF10730;
  if (!qword_1EBF10730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBF10730);
  }
  return result;
}

unint64_t sub_1C2B32184()
{
  unint64_t result = qword_1EBF10738;
  if (!qword_1EBF10738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBF10738);
  }
  return result;
}

uint64_t sub_1C2B321D8()
{
  return sub_1C2B32220(&qword_1EA32C010, (void (*)(uint64_t))sub_1C2B31D14);
}

uint64_t sub_1C2B32220(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C2B3226C()
{
  unint64_t result = qword_1EBF10728;
  if (!qword_1EBF10728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBF10728);
  }
  return result;
}

unint64_t sub_1C2B322C4()
{
  unint64_t result = qword_1EBF10740;
  if (!qword_1EBF10740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBF10740);
  }
  return result;
}

ValueMetadata *type metadata accessor for Weekdays()
{
  return &type metadata for Weekdays;
}

uint64_t getEnumTagSinglePayload for Weekdays.Day(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Weekdays.Day(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C2B32484);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Weekdays.Day()
{
  return &type metadata for Weekdays.Day;
}

unint64_t sub_1C2B324BC()
{
  unint64_t result = qword_1EA32C018;
  if (!qword_1EA32C018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA32C018);
  }
  return result;
}

uint64_t sub_1C2B32510(uint64_t a1)
{
  sub_1C2B31D14();
  uint64_t v3 = v2;
  uint64_t v26 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = a1;
  sub_1C2B324BC();
  sub_1C2B74160();
  sub_1C2B32220(&qword_1EA32C010, (void (*)(uint64_t))sub_1C2B31D14);
  uint64_t result = sub_1C2B74640();
  BOOL v7 = (void *)MEMORY[0x1E4FBC860];
  if (v28)
  {
    uint64_t v8 = 0;
LABEL_22:
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v5, v3);
    unint64_t v22 = v7[3];
    if (v22 < 2) {
      return (uint64_t)v7;
    }
    unint64_t v23 = v22 >> 1;
    BOOL v21 = __OFSUB__(v23, v8);
    uint64_t v24 = v23 - v8;
    if (!v21)
    {
      v7[2] = v24;
      return (uint64_t)v7;
    }
  }
  else
  {
    uint64_t v8 = 0;
    unint64_t v9 = (void *)(MEMORY[0x1E4FBC860] + 32);
    while (1)
    {
      uint64_t v10 = v27;
      if (!v8)
      {
        unint64_t v11 = v7[3];
        if ((uint64_t)((v11 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_27;
        }
        int64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
        if (v12 <= 1) {
          uint64_t v13 = 1;
        }
        else {
          uint64_t v13 = v12;
        }
        sub_1C2B32798(0, (unint64_t *)&unk_1EA32C020, (uint64_t)&type metadata for Weekdays, MEMORY[0x1E4FBBE00]);
        uint64_t v14 = (void *)swift_allocObject();
        int64_t v15 = _swift_stdlib_malloc_size(v14);
        uint64_t v16 = v15 - 32;
        if (v15 < 32) {
          uint64_t v16 = v15 - 25;
        }
        uint64_t v17 = v16 >> 3;
        v14[2] = v13;
        v14[3] = 2 * (v16 >> 3);
        unint64_t v18 = (unint64_t)(v14 + 4);
        uint64_t v19 = v7[3] >> 1;
        if (v7[2])
        {
          if (v14 != v7 || v18 >= (unint64_t)&v7[v19 + 4]) {
            memmove(v14 + 4, v7 + 4, 8 * v19);
          }
          v7[2] = 0;
        }
        unint64_t v9 = (void *)(v18 + 8 * v19);
        uint64_t v8 = (v17 & 0x7FFFFFFFFFFFFFFFLL) - v19;
        uint64_t result = swift_release();
        BOOL v7 = v14;
      }
      BOOL v21 = __OFSUB__(v8--, 1);
      if (v21) {
        break;
      }
      *v9++ = v10;
      uint64_t result = sub_1C2B74640();
      if (v28) {
        goto LABEL_22;
      }
    }
    __break(1u);
LABEL_27:
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1C2B32798(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t static String.MedicationsDisableFixedScannerReticleDefaultKey.getter()
{
  return 0xD00000000000002FLL;
}

unint64_t static String.MedicationsHideTapToRadarWhileScanningDefaultKey.getter()
{
  return 0xD000000000000030;
}

unint64_t static String.MedicationsLimitCandidateCountDefaultKey.getter()
{
  return 0xD000000000000028;
}

unint64_t static String.MedicationsAllowEndDatesInPastDefaultKey.getter()
{
  return 0xD000000000000028;
}

uint64_t sub_1C2B32858(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C2B74310();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1C2B74300();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1C2B2E8D0(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1C2B742A0();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1C2B329FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C2B74310();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1C2B74300();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_1C2B2E8D0(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1C2B742A0();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  sub_1C2B359A0(0, &qword_1EA32C078, (void (*)(uint64_t))type metadata accessor for TimeZoneChange);
  return swift_task_create();
}

uint64_t sub_1C2B32BC0()
{
  swift_getObjectType();
  uint64_t v1 = sub_1C2B73A90();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2B3382C();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = v0
      + OBJC_IVAR____TtC27HealthMedicationsExperience39MedicationsScheduleIncompatibilityCache__incompatibilityCacheObject;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  sub_1C2B73980();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v11 = v22[0];
  unint64_t v12 = v22[1];
  uint64_t v13 = sub_1C2B32EB0();
  sub_1C2B35C24(v11, v12);
  if (!v13)
  {
    sub_1C2B73A70();
    uint64_t v14 = sub_1C2B73A80();
    os_log_type_t v15 = sub_1C2B744C0();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      v22[0] = v17;
      *(_DWORD *)uint64_t v16 = 136315138;
      v21[1] = v16 + 4;
      uint64_t v18 = sub_1C2B74CD0();
      v21[2] = sub_1C2AEEE6C(v18, v19, v22);
      sub_1C2B74650();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2ADB000, v14, v15, "%s Failed to get the incompatibility result back from cache, getter returned nil.", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C8767A10](v17, -1, -1);
      MEMORY[0x1C8767A10](v16, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return v13;
}

uint64_t sub_1C2B32EB0()
{
  v28[4] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v0 = sub_1C2B73A90();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = self;
  uint64_t v5 = self;
  sub_1C2AE3A18(0, &qword_1EA32C0B8);
  id v6 = objc_msgSend(v5, sel_hk_typesForArrayOf_, swift_getObjCClassFromMetadata());
  sub_1C2B74380();

  uint64_t v7 = (void *)sub_1C2B74370();
  swift_bridgeObjectRelease();
  uint64_t v8 = (void *)sub_1C2B73670();
  v28[0] = 0;
  id v9 = objc_msgSend(v4, sel_unarchivedObjectOfClasses_fromData_error_, v7, v8, v28);

  if (v9)
  {
    id v10 = v28[0];
    sub_1C2B746D0();
    swift_unknownObjectRelease();
    sub_1C2B35B64(0, &qword_1EA32C0B0, &qword_1EA32C0B8, 0x1E4F66B40, MEMORY[0x1E4FBB320]);
    if (swift_dynamicCast()) {
      return v27;
    }
    else {
      return 0;
    }
  }
  else
  {
    id v12 = v28[0];
    uint64_t v13 = (void *)sub_1C2B73630();

    swift_willThrow();
    sub_1C2B73A70();
    id v14 = v13;
    id v15 = v13;
    uint64_t v16 = sub_1C2B73A80();
    os_log_type_t v17 = sub_1C2B744C0();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      unint64_t v19 = (void *)swift_slowAlloc();
      uint64_t v25 = (void *)swift_slowAlloc();
      v28[0] = v25;
      *(_DWORD *)uint64_t v18 = 136315394;
      uint64_t v20 = sub_1C2AEEE6C(1635017028, 0xE400000000000000, (uint64_t *)v28);
      uint64_t v26 = v1;
      uint64_t v27 = v20;
      sub_1C2B74650();
      *(_WORD *)(v18 + 12) = 2112;
      id v21 = v13;
      uint64_t v22 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v27 = v22;
      sub_1C2B74650();
      *unint64_t v19 = v22;

      _os_log_impl(&dword_1C2ADB000, v16, v17, "%s Failed to unserialize the incompatibility cache data to an object array, returning nil. %@", (uint8_t *)v18, 0x16u);
      sub_1C2B35B64(0, (unint64_t *)&qword_1EA32BAF0, (unint64_t *)&qword_1EBF10810, 0x1E4FBA8A8, MEMORY[0x1E4FBB718]);
      swift_arrayDestroy();
      MEMORY[0x1C8767A10](v19, -1, -1);
      unint64_t v23 = v25;
      swift_arrayDestroy();
      MEMORY[0x1C8767A10](v23, -1, -1);
      MEMORY[0x1C8767A10](v18, -1, -1);

      (*(void (**)(char *, uint64_t))(v26 + 8))(v3, v0);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    }
    return 0;
  }
}

char *MedicationsScheduleIncompatibilityCache.__allocating_init(healthStore:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return MedicationsScheduleIncompatibilityCache.init(healthStore:)(a1);
}

char *MedicationsScheduleIncompatibilityCache.init(healthStore:)(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_1C2B359A0(0, (unint64_t *)&unk_1EBF11290, MEMORY[0x1E4FBCFE8]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v38 = (char *)&v35 - v4;
  uint64_t v37 = sub_1C2B73DA0();
  uint64_t v5 = *(void *)(v37 - 8);
  MEMORY[0x1F4188790](v37);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2B3382C();
  uint64_t v35 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = &v1[OBJC_IVAR____TtC27HealthMedicationsExperience39MedicationsScheduleIncompatibilityCache_unitTestingCacheUpdateHandler];
  *(void *)id v12 = 0;
  *((void *)v12 + 1) = 0;
  *(void *)&v1[OBJC_IVAR____TtC27HealthMedicationsExperience39MedicationsScheduleIncompatibilityCache_healthStore] = a1;
  uint64_t v13 = *MEMORY[0x1E4F669C0];
  uint64_t v14 = qword_1EBF0FF88;
  id v15 = v1;
  id v16 = a1;
  if (v14 != -1) {
    swift_once();
  }
  id v17 = objc_allocWithZone(MEMORY[0x1E4F2B138]);
  id v18 = v16;
  swift_bridgeObjectRetain();
  unint64_t v19 = (void *)sub_1C2B73F60();
  swift_bridgeObjectRelease();
  id v20 = objc_msgSend(v17, sel_initWithCategory_domainName_healthStore_, v13, v19, v18);

  *(void *)&v15[OBJC_IVAR____TtC27HealthMedicationsExperience39MedicationsScheduleIncompatibilityCache_keyValueDomain] = v20;
  id v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F66B38]), sel_initWithHealthStore_, v18);
  *(void *)&v15[OBJC_IVAR____TtC27HealthMedicationsExperience39MedicationsScheduleIncompatibilityCache_scheduleControl] = v21;
  uint64_t v22 = qword_1EA32B668;
  id v23 = v20;
  if (v22 != -1) {
    swift_once();
  }
  long long v40 = xmmword_1C2B780A0;
  swift_bridgeObjectRetain();
  sub_1C2B73960();
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v15[OBJC_IVAR____TtC27HealthMedicationsExperience39MedicationsScheduleIncompatibilityCache__incompatibilityCacheObject], v11, v35);

  v39.receiver = v15;
  v39.super_class = ObjectType;
  uint64_t v24 = (char *)objc_msgSendSuper2(&v39, sel_init);
  uint64_t v25 = *(void **)&v24[OBJC_IVAR____TtC27HealthMedicationsExperience39MedicationsScheduleIncompatibilityCache_scheduleControl];
  sub_1C2AE3A18(0, &qword_1EBF10BA8);
  uint64_t v26 = v37;
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4FBCB50], v37);
  uint64_t v27 = v24;
  id v28 = v25;
  uint64_t v29 = (void *)sub_1C2B74570();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v26);
  objc_msgSend(v28, sel_registerObserver_queue_, v27, v29);

  uint64_t v30 = sub_1C2B74310();
  uint64_t v31 = (uint64_t)v38;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v38, 1, 1, v30);
  uint64_t v32 = (void *)swift_allocObject();
  v32[2] = 0;
  v32[3] = 0;
  v32[4] = v27;
  id v33 = v27;
  sub_1C2B32858(v31, (uint64_t)&unk_1EA32C058, (uint64_t)v32);

  swift_release();
  return v33;
}

void sub_1C2B3382C()
{
  if (!qword_1EBF10148)
  {
    unint64_t v0 = sub_1C2B739A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBF10148);
    }
  }
}

uint64_t sub_1C2B33884(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v6;
  *uint64_t v6 = v4;
  v6[1] = sub_1C2AFA544;
  v6[8] = a4;
  v6[9] = swift_getObjectType();
  return MEMORY[0x1F4188298](sub_1C2B339B0, 0, 0);
}

uint64_t sub_1C2B33940()
{
  *(void *)(v1 + 64) = v0;
  *(void *)(v1 + 72) = swift_getObjectType();
  return MEMORY[0x1F4188298](sub_1C2B339B0, 0, 0);
}

uint64_t sub_1C2B339B0()
{
  uint64_t v1 = swift_task_alloc();
  *(void *)(v0 + 80) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 64);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v2;
  sub_1C2B35AE0();
  *uint64_t v2 = v0;
  v2[1] = sub_1C2B33AB0;
  return MEMORY[0x1F41880D8](v0 + 56, 0, 0, 0xD000000000000023, 0x80000001C2B7BC30, sub_1C2B35AD8, v1, v3);
}

uint64_t sub_1C2B33AB0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C2B33BC8, 0, 0);
}

uint64_t sub_1C2B33BC8()
{
  if (v0[7])
  {
    uint64_t v1 = _s27HealthMedicationsExperience0B28ScheduleIncompatibilityCacheC010serializedF06result10Foundation4DataVSaySo012HKMedicationdE6ResultCG_tF_0();
    unint64_t v3 = v2;
    swift_bridgeObjectRelease();
    v0[5] = v1;
    v0[6] = v3;
    swift_beginAccess();
    sub_1C2B35BCC(v1, v3);
    sub_1C2B3382C();
    sub_1C2B73990();
    swift_endAccess();
    sub_1C2B35C24(v1, v3);
  }
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

void sub_1C2B33CBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v28 = a3;
  uint64_t v29 = a1;
  sub_1C2B35C7C();
  uint64_t v30 = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = sub_1C2B73A90();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F179C8]), sel_init);
  id v12 = objc_msgSend(v11, sel_primaryAppleAccount);
  if (v12
    && (uint64_t v13 = v12,
        id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F4BFA8]), sel_initWithAccount_, v12),
        v13,
        v14))
  {
    id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F66B30]), sel_initWithHealthStore_accountStore_deviceRequest_, *(void *)(a2+ OBJC_IVAR____TtC27HealthMedicationsExperience39MedicationsScheduleIncompatibilityCache_healthStore), v11, v14);
    uint64_t v16 = v30;
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v29, v30);
    unint64_t v17 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v18 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v18 + v17, (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v16);
    *(void *)(v18 + ((v6 + v17 + 7) & 0xFFFFFFFFFFFFFFF8)) = v28;
    aBlock[4] = (uint64_t)sub_1C2B35D80;
    aBlock[5] = v18;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1C2B34444;
    aBlock[3] = (uint64_t)&block_descriptor_9;
    unint64_t v19 = _Block_copy(aBlock);
    swift_release();
    objc_msgSend(v15, sel_resolveIncompatibleSchedulesWithCompletion_, v19);
    _Block_release(v19);
  }
  else
  {
    sub_1C2B73A70();
    id v20 = sub_1C2B73A80();
    os_log_type_t v21 = sub_1C2B744B0();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      aBlock[0] = v23;
      *(_DWORD *)uint64_t v22 = 136315138;
      id v27 = v11;
      uint64_t v24 = sub_1C2B74CD0();
      void aBlock[6] = sub_1C2AEEE6C(v24, v25, aBlock);
      id v11 = v27;
      sub_1C2B74650();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2ADB000, v20, v21, "[%s] Unable to create AADeviceListRequest", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C8767A10](v23, -1, -1);
      MEMORY[0x1C8767A10](v22, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    aBlock[0] = 0;
    sub_1C2B742C0();
  }
}

uint64_t sub_1C2B340D0(uint64_t a1, void *a2, uint64_t a3)
{
  v26[1] = *MEMORY[0x1E4F143B8];
  uint64_t v6 = sub_1C2B73A90();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v26[0] = a1;
    sub_1C2B35C7C();
    swift_bridgeObjectRetain();
  }
  else
  {
    sub_1C2B73A70();
    id v10 = a2;
    id v11 = a2;
    id v12 = sub_1C2B73A80();
    os_log_type_t v13 = sub_1C2B744B0();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v24 = a3;
      uint64_t v14 = swift_slowAlloc();
      uint64_t v22 = (void *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      v26[0] = v23;
      *(_DWORD *)uint64_t v14 = 136315394;
      uint64_t v15 = sub_1C2B74CD0();
      uint64_t v25 = sub_1C2AEEE6C(v15, v16, v26);
      sub_1C2B74650();
      swift_bridgeObjectRelease();
      *(_WORD *)(v14 + 12) = 2112;
      if (a2)
      {
        id v17 = a2;
        uint64_t v18 = _swift_stdlib_bridgeErrorToNSError();
        uint64_t v25 = v18;
        sub_1C2B74650();
      }
      else
      {
        uint64_t v25 = 0;
        sub_1C2B74650();
        uint64_t v18 = 0;
      }
      unint64_t v19 = v22;
      *uint64_t v22 = v18;

      _os_log_impl(&dword_1C2ADB000, v12, v13, "[%s] IncompatibilityResult is nil. Error: '%@'", (uint8_t *)v14, 0x16u);
      sub_1C2B35B64(0, (unint64_t *)&qword_1EA32BAF0, (unint64_t *)&qword_1EBF10810, 0x1E4FBA8A8, MEMORY[0x1E4FBB718]);
      swift_arrayDestroy();
      MEMORY[0x1C8767A10](v19, -1, -1);
      uint64_t v20 = v23;
      swift_arrayDestroy();
      MEMORY[0x1C8767A10](v20, -1, -1);
      MEMORY[0x1C8767A10](v14, -1, -1);

      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
    v26[0] = 0;
    sub_1C2B35C7C();
  }
  return sub_1C2B742C0();
}

uint64_t sub_1C2B34444(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1C2AE3A18(0, &qword_1EA32C0B8);
    uint64_t v4 = sub_1C2B741D0();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t _s27HealthMedicationsExperience0B28ScheduleIncompatibilityCacheC010serializedF06result10Foundation4DataVSaySo012HKMedicationdE6ResultCG_tF_0()
{
  v26[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v0 = sub_1C2B73A90();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  unint64_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = self;
  sub_1C2AE3A18(0, &qword_1EA32C0B8);
  uint64_t v5 = (void *)sub_1C2B741C0();
  v26[0] = 0;
  id v6 = objc_msgSend(v4, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v5, 1, v26);

  id v7 = v26[0];
  if (v6)
  {
    uint64_t v8 = sub_1C2B73680();
  }
  else
  {
    uint64_t v9 = v7;
    id v10 = (void *)sub_1C2B73630();

    swift_willThrow();
    sub_1C2B73A70();
    id v11 = v10;
    id v12 = v10;
    os_log_type_t v13 = sub_1C2B73A80();
    os_log_type_t v14 = sub_1C2B744C0();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = swift_slowAlloc();
      uint64_t v23 = (void *)swift_slowAlloc();
      uint64_t v24 = (void *)swift_slowAlloc();
      v26[0] = v24;
      *(_DWORD *)uint64_t v15 = 136315394;
      sub_1C2B35B64(0, &qword_1EA32C0B0, &qword_1EA32C0B8, 0x1E4F66B40, MEMORY[0x1E4FBB320]);
      uint64_t v16 = sub_1C2B74CD0();
      uint64_t v25 = sub_1C2AEEE6C(v16, v17, (uint64_t *)v26);
      sub_1C2B74650();
      swift_bridgeObjectRelease();
      *(_WORD *)(v15 + 12) = 2112;
      id v18 = v10;
      uint64_t v19 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v25 = v19;
      sub_1C2B74650();
      uint64_t v20 = v23;
      *uint64_t v23 = v19;

      _os_log_impl(&dword_1C2ADB000, v13, v14, "%s Failed to serialize the incompatibility cache, returning empty data object. %@", (uint8_t *)v15, 0x16u);
      sub_1C2B35B64(0, (unint64_t *)&qword_1EA32BAF0, (unint64_t *)&qword_1EBF10810, 0x1E4FBA8A8, MEMORY[0x1E4FBB718]);
      swift_arrayDestroy();
      MEMORY[0x1C8767A10](v20, -1, -1);
      os_log_type_t v21 = v24;
      swift_arrayDestroy();
      MEMORY[0x1C8767A10](v21, -1, -1);
      MEMORY[0x1C8767A10](v15, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);

    return 0;
  }
  return v8;
}

uint64_t MedicationsScheduleIncompatibilityCache.subscript.getter(void *a1)
{
  return sub_1C2B348E0(a1, (uint64_t (*)(uint64_t, id))sub_1C2B35104);
}

{
  return sub_1C2B348E0(a1, (uint64_t (*)(uint64_t, id))sub_1C2B3533C);
}

uint64_t sub_1C2B348E0(void *a1, uint64_t (*a2)(uint64_t, id))
{
  uint64_t v4 = sub_1C2B32BC0();
  if (!v4) {
    return 0;
  }
  uint64_t v5 = v4;
  id v6 = a1;
  uint64_t v7 = a2(v5, v6);
  swift_bridgeObjectRelease();

  return v7;
}

uint64_t MedicationsScheduleIncompatibilityCache.addHandlerForCacheUpdate(handler:)(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = (void *)(v2
                + OBJC_IVAR____TtC27HealthMedicationsExperience39MedicationsScheduleIncompatibilityCache_unitTestingCacheUpdateHandler);
  uint64_t v4 = *(void *)(v2
                 + OBJC_IVAR____TtC27HealthMedicationsExperience39MedicationsScheduleIncompatibilityCache_unitTestingCacheUpdateHandler);
  void *v3 = a1;
  v3[1] = a2;
  sub_1C2B19064(v4);
  return swift_retain();
}

id MedicationsScheduleIncompatibilityCache.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void MedicationsScheduleIncompatibilityCache.init()()
{
}

id MedicationsScheduleIncompatibilityCache.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C2B34B38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return MEMORY[0x1F4188298](sub_1C2B34B58, 0, 0);
}

uint64_t sub_1C2B34B58()
{
  id v1 = *(void (**)(uint64_t))(*(void *)(v0 + 16)
                                      + OBJC_IVAR____TtC27HealthMedicationsExperience39MedicationsScheduleIncompatibilityCache_unitTestingCacheUpdateHandler);
  if (v1)
  {
    uint64_t v2 = swift_retain();
    v1(v2);
    sub_1C2B19064((uint64_t)v1);
  }
  unint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v3;
  void *v3 = v0;
  v3[1] = sub_1C2B34C48;
  v3[8] = *(void *)(v0 + 16);
  v3[9] = swift_getObjectType();
  return MEMORY[0x1F4188298](sub_1C2B339B0, 0, 0);
}

uint64_t sub_1C2B34C48()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  id v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1C2B34DA0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1C2AF9A8C;
  return sub_1C2B33884(a1, v4, v5, v6);
}

uint64_t sub_1C2B34E54(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1C2B35E4C;
  return v6(a1);
}

uint64_t sub_1C2B34F30(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1C2B3500C;
  return v6(a1);
}

uint64_t sub_1C2B3500C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  id v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

void *sub_1C2B35104(unint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  unint64_t v4 = a1;
  if (a1 >> 62)
  {
LABEL_28:
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_1C2B749C0();
    if (v5) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v5)
    {
LABEL_3:
      uint64_t v22 = v3;
      uint64_t v23 = v5;
      unint64_t v24 = v4;
      unint64_t v25 = v4 & 0xC000000000000001;
      uint64_t v6 = 4;
      uint64_t v7 = (SEL *)&block_descriptor_0;
      while (1)
      {
        if (v25) {
          id v8 = (id)MEMORY[0x1C8766C90](v6 - 4, v4);
        }
        else {
          id v8 = *(id *)(v4 + 8 * v6);
        }
        id v9 = v8;
        uint64_t v10 = v6 - 3;
        if (__OFADD__(v6 - 4, 1))
        {
          __break(1u);
          goto LABEL_28;
        }
        uint64_t v3 = (uint64_t)objc_msgSend(v8, sel_schedule);
        id v11 = [(id)v3 v7[205]];

        id v12 = v9;
        if (v11)
        {
          uint64_t v13 = sub_1C2B73FA0();
          uint64_t v15 = v14;
        }
        else
        {
          uint64_t v13 = 0;
          uint64_t v15 = 0;
        }
        uint64_t v16 = v7;
        id v17 = objc_msgSend(a2, v7[205], v22);
        if (!v17) {
          break;
        }
        uint64_t v3 = (uint64_t)v17;
        uint64_t v18 = sub_1C2B73FA0();
        uint64_t v20 = v19;

        if (!v15)
        {
          if (!v20) {
            goto LABEL_26;
          }
          goto LABEL_5;
        }
        if (!v20) {
          goto LABEL_5;
        }
        if (v13 == v18 && v15 == v20)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_26:
          swift_bridgeObjectRelease();
          return v12;
        }
        uint64_t v3 = sub_1C2B74B50();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v3) {
          goto LABEL_26;
        }

LABEL_6:
        unint64_t v4 = v24;
        ++v6;
        uint64_t v7 = v16;
        if (v10 == v23) {
          goto LABEL_29;
        }
      }
      if (!v15) {
        goto LABEL_26;
      }
LABEL_5:

      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
  }
LABEL_29:
  swift_bridgeObjectRelease();
  return 0;
}

void *sub_1C2B3533C(unint64_t a1, void *a2)
{
  if (a1 >> 62) {
    goto LABEL_22;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; uint64_t v3 = sub_1C2B749C0())
  {
    uint64_t v20 = v3;
    uint64_t v4 = 4;
    while (1)
    {
      id v5 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1C8766C90](v4 - 4, a1) : *(id *)(a1 + 8 * v4);
      uint64_t v6 = v5;
      uint64_t v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1)) {
        break;
      }
      id v8 = objc_msgSend(v5, sel_schedule);
      id v9 = objc_msgSend(v8, sel_medicationIdentifier);

      if (v9)
      {
        uint64_t v10 = sub_1C2B73FA0();
        uint64_t v12 = v11;
      }
      else
      {
        uint64_t v10 = 0;
        uint64_t v12 = 0;
      }
      id v13 = objc_msgSend(a2, sel_semanticIdentifier);
      id v14 = objc_msgSend(v13, sel_stringValue);

      uint64_t v15 = sub_1C2B73FA0();
      uint64_t v17 = v16;

      if (v12)
      {
        if (v10 == v15 && v12 == v17)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_20:
          swift_bridgeObjectRelease();
          return v6;
        }
        char v18 = sub_1C2B74B50();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v18) {
          goto LABEL_20;
        }
      }
      else
      {

        swift_bridgeObjectRelease();
      }
      ++v4;
      if (v7 == v20) {
        goto LABEL_23;
      }
    }
    __break(1u);
LABEL_22:
    swift_bridgeObjectRetain();
  }
LABEL_23:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t _s27HealthMedicationsExperience0B28ScheduleIncompatibilityCacheC15scheduleControl_14didAddOrModifyySo012HKMedicationdH0C_SaySo0mD0CGtF_0()
{
  sub_1C2B359A0(0, (unint64_t *)&unk_1EBF11290, MEMORY[0x1E4FBCFE8]);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)v14 - v2;
  uint64_t v4 = sub_1C2B74310();
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
  uint64_t v6 = (void *)swift_allocObject();
  uint64_t v6[2] = 0;
  v6[3] = 0;
  v6[4] = v0;
  int v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4);
  id v8 = v0;
  if (v7 == 1)
  {
    sub_1C2B2E8D0((uint64_t)v3);
    uint64_t v9 = 0;
    uint64_t v10 = 0;
  }
  else
  {
    sub_1C2B74300();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v3, v4);
    if (v6[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v9 = sub_1C2B742A0();
      uint64_t v10 = v11;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v9 = 0;
      uint64_t v10 = 0;
    }
  }
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = &unk_1EA32C088;
  *(void *)(v12 + 24) = v6;
  if (v10 | v9)
  {
    v14[0] = 0;
    v14[1] = 0;
    v14[2] = v9;
    v14[3] = v10;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_1C2B357BC()
{
  return type metadata accessor for MedicationsScheduleIncompatibilityCache();
}

uint64_t type metadata accessor for MedicationsScheduleIncompatibilityCache()
{
  uint64_t result = qword_1EBF10158;
  if (!qword_1EBF10158) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C2B35810()
{
  sub_1C2B3382C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for MedicationsScheduleIncompatibilityCache(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationsScheduleIncompatibilityCache);
}

uint64_t dispatch thunk of MedicationsScheduleIncompatibilityCache.__allocating_init(healthStore:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_1C2B358E8(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1C2AF9A8C;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1EA32C068 + dword_1EA32C068);
  return v6(a1, v4);
}

void sub_1C2B359A0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C2B74630();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C2B359F8()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_1C2AFA544;
  v3[2] = v2;
  return MEMORY[0x1F4188298](sub_1C2B34B58, 0, 0);
}

uint64_t sub_1C2B35AA0()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1C2B35AD8(uint64_t a1)
{
  sub_1C2B33CBC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_1C2B35AE0()
{
  if (!qword_1EA32C0A8)
  {
    sub_1C2B35B64(255, &qword_1EA32C0B0, &qword_1EA32C0B8, 0x1E4F66B40, MEMORY[0x1E4FBB320]);
    unint64_t v0 = sub_1C2B74630();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA32C0A8);
    }
  }
}

void sub_1C2B35B64(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1C2AE3A18(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1C2B35BCC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_1C2B35C24(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

void sub_1C2B35C7C()
{
  if (!qword_1EA32C0C0)
  {
    sub_1C2B35AE0();
    unint64_t v0 = sub_1C2B742D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA32C0C0);
    }
  }
}

uint64_t sub_1C2B35CE4()
{
  sub_1C2B35C7C();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v6, v5);
}

uint64_t sub_1C2B35D80(uint64_t a1, void *a2)
{
  sub_1C2B35C7C();
  uint64_t v6 = v2
     + ((*(unsigned __int8 *)(*(void *)(v5 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80));
  return sub_1C2B340D0(a1, a2, v6);
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t sub_1C2B35E50(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5, uint64_t a6, char a7, char a8, uint64_t a9, char a10, uint64_t a11, char a12, uint64_t a13, char a14, char a15, uint64_t a16, char a17, char a18, uint64_t a19, char a20,char a21)
{
  *(void *)(v21 + 16) = a1;
  *(void *)(v21 + 24) = a2;
  *(void *)(v21 + 32) = a3;
  *(unsigned char *)(v21 + 40) = a4 & 1;
  *(unsigned char *)(v21 + 41) = a5;
  *(void *)(v21 + 48) = a6;
  *(unsigned char *)(v21 + 56) = a7 & 1;
  *(unsigned char *)(v21 + 57) = a8;
  *(void *)(v21 + 64) = a9;
  *(unsigned char *)(v21 + 72) = a10 & 1;
  *(void *)(v21 + 96) = a13;
  *(unsigned char *)(v21 + 104) = a14 & 1;
  *(void *)(v21 + 80) = a11;
  *(unsigned char *)(v21 + 88) = a12 & 1;
  *(unsigned char *)(v21 + 105) = a15;
  *(void *)(v21 + 112) = a16;
  *(unsigned char *)(v21 + 120) = a17 & 1;
  *(unsigned char *)(v21 + 121) = a18;
  *(void *)(v21 + 128) = a19;
  *(unsigned char *)(v21 + 136) = a20 & 1;
  *(unsigned char *)(v21 + 137) = a21;
  return v21;
}

uint64_t sub_1C2B35FBC(void *a1)
{
  uint64_t v121 = *v1;
  uint64_t v123 = sub_1C2B73A90();
  uint64_t v4 = *(void *)(v123 - 8);
  MEMORY[0x1F4188790](v123);
  uint64_t v6 = (char *)&v117 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C2B73710();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v117 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = objc_msgSend(a1, sel_healthDataSource);
  if (v11)
  {
    id v12 = v11;
    unint64_t v118 = v1;
    uint64_t v120 = v2;
    id v13 = objc_allocWithZone(MEMORY[0x1E4F66AD8]);
    id v119 = v12;
    id v14 = objc_msgSend(v13, sel_initWithDataSource_, v12);
    unint64_t v129 = sub_1C2B25CE8(MEMORY[0x1E4FBC860]);
    uint64_t v15 = sub_1C2B73FA0();
    uint64_t v17 = v16;
    id v122 = v14;
    id v18 = objc_msgSend(v14, sel_biologicalSex);
    uint64_t v19 = MEMORY[0x1E4FBB1A0];
    if (v18)
    {
      uint64_t v20 = v18;
      uint64_t v21 = sub_1C2B73FA0();
      uint64_t v23 = v22;

      *((void *)&v128 + 1) = v19;
      if (v23) {
        goto LABEL_10;
      }
    }
    else
    {
      *((void *)&v128 + 1) = MEMORY[0x1E4FBB1A0];
    }
    uint64_t v21 = sub_1C2B73FA0();
    uint64_t v23 = v32;
LABEL_10:
    id v33 = v118;
    *(void *)&long long v127 = v21;
    *((void *)&v127 + 1) = v23;
    sub_1C2AF45B4(&v127, &v125);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v124 = v129;
    unint64_t v129 = 0x8000000000000000;
    sub_1C2B017D4(&v125, v15, v17, isUniquelyReferenced_nonNull_native);
    unint64_t v129 = v124;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v35 = sub_1C2B73FA0();
    uint64_t v37 = v36;
    sub_1C2B73700();
    uint64_t v38 = (void *)sub_1C2B736C0();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    id v39 = v122;
    id v40 = objc_msgSend(v122, sel_bucketedUserAgeForCurrentDate_, v38);

    *((void *)&v128 + 1) = sub_1C2AE3A18(0, &qword_1EA32BA48);
    *(void *)&long long v127 = v40;
    sub_1C2AF45B4(&v127, &v125);
    char v41 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v124 = v129;
    unint64_t v129 = 0x8000000000000000;
    sub_1C2B017D4(&v125, v35, v37, v41);
    unint64_t v129 = v124;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v42 = sub_1C2B73FA0();
    uint64_t v44 = v43;
    id v45 = objc_msgSend(v39, sel_activePairedWatchProductType);
    if (v45)
    {
      id v46 = v45;
      uint64_t v47 = sub_1C2B73FA0();
      uint64_t v49 = v48;

      *((void *)&v128 + 1) = MEMORY[0x1E4FBB1A0];
      if (v49) {
        goto LABEL_15;
      }
    }
    else
    {
      *((void *)&v128 + 1) = MEMORY[0x1E4FBB1A0];
    }
    uint64_t v47 = sub_1C2B73FA0();
    uint64_t v49 = v50;
LABEL_15:
    *(void *)&long long v127 = v47;
    *((void *)&v127 + 1) = v49;
    sub_1C2AF45B4(&v127, &v125);
    char v51 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v124 = v129;
    unint64_t v129 = 0x8000000000000000;
    sub_1C2B017D4(&v125, v42, v44, v51);
    unint64_t v129 = v124;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v52 = (id)HKStringFromMedicationListOnboardingProvenanceType();
    uint64_t v53 = sub_1C2B73FA0();
    uint64_t v55 = v54;

    uint64_t v56 = MEMORY[0x1E4FBB1A0];
    *((void *)&v128 + 1) = MEMORY[0x1E4FBB1A0];
    *(void *)&long long v127 = v53;
    *((void *)&v127 + 1) = v55;
    sub_1C2AF45B4(&v127, &v125);
    char v57 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v124 = v129;
    unint64_t v129 = 0x8000000000000000;
    sub_1C2B017D4(&v125, 0x6E616E65766F7270, 0xEA00000000006563, v57);
    unint64_t v129 = v124;
    swift_bridgeObjectRelease();
    id v58 = (id)HKStringFromMedicationListOnboardingStepType();
    uint64_t v59 = sub_1C2B73FA0();
    uint64_t v61 = v60;

    *((void *)&v128 + 1) = v56;
    *(void *)&long long v127 = v59;
    *((void *)&v127 + 1) = v61;
    sub_1C2AF45B4(&v127, &v125);
    char v62 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v124 = v129;
    unint64_t v129 = 0x8000000000000000;
    sub_1C2B017D4(&v125, 1885697139, 0xE400000000000000, v62);
    unint64_t v129 = v124;
    swift_bridgeObjectRelease();
    char v63 = *((unsigned char *)v33 + 41);
    uint64_t v64 = MEMORY[0x1E4FBB390];
    *((void *)&v128 + 1) = MEMORY[0x1E4FBB390];
    LOBYTE(v127) = v63;
    sub_1C2AF45B4(&v127, &v125);
    char v65 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v124 = v129;
    unint64_t v129 = 0x8000000000000000;
    sub_1C2B017D4(&v125, 0xD000000000000010, 0x80000001C2B7BCD0, v65);
    unint64_t v129 = v124;
    swift_bridgeObjectRelease();
    objc_msgSend(v39, sel_isOntologySupportedRegion);
    uint64_t v66 = sub_1C2B74290();
    uint64_t v67 = sub_1C2AE3A18(0, (unint64_t *)&qword_1EBF10810);
    *((void *)&v128 + 1) = v67;
    *(void *)&long long v127 = v66;
    sub_1C2AF45B4(&v127, &v125);
    char v68 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v124 = v129;
    unint64_t v129 = 0x8000000000000000;
    sub_1C2B017D4(&v125, 0xD000000000000019, 0x80000001C2B7BE20, v68);
    unint64_t v129 = v124;
    swift_bridgeObjectRelease();
    if (*((unsigned char *)v33 + 57) == 2)
    {
      sub_1C2B2888C(0xD00000000000001FLL, 0x80000001C2B7BD10, &v127);
      sub_1C2B29420((uint64_t)&v127);
    }
    else
    {
      uint64_t v69 = sub_1C2B74290();
      *((void *)&v128 + 1) = v67;
      *(void *)&long long v127 = v69;
      sub_1C2AF45B4(&v127, &v125);
      char v70 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v124 = v129;
      unint64_t v129 = 0x8000000000000000;
      sub_1C2B017D4(&v125, 0xD00000000000001FLL, 0x80000001C2B7BD10, v70);
      unint64_t v129 = v124;
      swift_bridgeObjectRelease();
    }
    uint64_t v71 = MEMORY[0x1E4FBB550];
    if (v33[9])
    {
      sub_1C2B2888C(0xD000000000000013, 0x80000001C2B7BE40, &v127);
      sub_1C2B29420((uint64_t)&v127);
      if ((v33[11] & 1) == 0)
      {
LABEL_20:
        uint64_t v72 = v33[10];
        *((void *)&v128 + 1) = v71;
        *(void *)&long long v127 = v72;
        sub_1C2AF45B4(&v127, &v125);
        char v73 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v124 = v129;
        unint64_t v129 = 0x8000000000000000;
        sub_1C2B017D4(&v125, 0xD00000000000001DLL, 0x80000001C2B7BE60, v73);
        unint64_t v129 = v124;
        swift_bridgeObjectRelease();
        goto LABEL_23;
      }
    }
    else
    {
      uint64_t v74 = v33[8];
      *((void *)&v128 + 1) = MEMORY[0x1E4FBB550];
      *(void *)&long long v127 = v74;
      sub_1C2AF45B4(&v127, &v125);
      char v75 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v124 = v129;
      unint64_t v129 = 0x8000000000000000;
      sub_1C2B017D4(&v125, 0xD000000000000013, 0x80000001C2B7BE40, v75);
      unint64_t v129 = v124;
      swift_bridgeObjectRelease();
      if ((v33[11] & 1) == 0) {
        goto LABEL_20;
      }
    }
    sub_1C2B2888C(0xD00000000000001DLL, 0x80000001C2B7BE60, &v127);
    sub_1C2B29420((uint64_t)&v127);
LABEL_23:
    if (*((unsigned char *)v33 + 105) == 2)
    {
      sub_1C2B2888C(0xD000000000000018, 0x80000001C2B7BD70, &v127);
      sub_1C2B29420((uint64_t)&v127);
    }
    else
    {
      uint64_t v76 = sub_1C2B74290();
      *((void *)&v128 + 1) = v67;
      *(void *)&long long v127 = v76;
      sub_1C2AF45B4(&v127, &v125);
      char v77 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v124 = v129;
      unint64_t v129 = 0x8000000000000000;
      sub_1C2B017D4(&v125, 0xD000000000000018, 0x80000001C2B7BD70, v77);
      unint64_t v129 = v124;
      swift_bridgeObjectRelease();
    }
    if (*((unsigned char *)v33 + 120) == 1)
    {
      *((void *)&v128 + 1) = MEMORY[0x1E4FBB1A0];
    }
    else
    {
      id v78 = (id)HKStringFromHKMedicationListOnboardingAlgorithmType();
      uint64_t v79 = sub_1C2B73FA0();
      uint64_t v81 = v80;

      *((void *)&v128 + 1) = MEMORY[0x1E4FBB1A0];
      if (v81) {
        goto LABEL_30;
      }
    }
    uint64_t v79 = sub_1C2B73FA0();
    uint64_t v81 = v82;
LABEL_30:
    *(void *)&long long v127 = v79;
    *((void *)&v127 + 1) = v81;
    sub_1C2AF45B4(&v127, &v125);
    char v83 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v124 = v129;
    unint64_t v129 = 0x8000000000000000;
    sub_1C2B017D4(&v125, 0x687469726F676C61, 0xED0000657079546DLL, v83);
    unint64_t v129 = v124;
    swift_bridgeObjectRelease();
    if (v33[13])
    {
      sub_1C2B2888C(0xD00000000000001CLL, 0x80000001C2B7BD50, &v127);
      sub_1C2B29420((uint64_t)&v127);
    }
    else
    {
      uint64_t v84 = v33[12];
      *((void *)&v128 + 1) = v71;
      *(void *)&long long v127 = v84;
      sub_1C2AF45B4(&v127, &v125);
      char v85 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v124 = v129;
      unint64_t v129 = 0x8000000000000000;
      sub_1C2B017D4(&v125, 0xD00000000000001CLL, 0x80000001C2B7BD50, v85);
      unint64_t v129 = v124;
      swift_bridgeObjectRelease();
    }
    uint64_t v86 = MEMORY[0x1E4FBB1A0];
    if (*((unsigned char *)v33 + 56) == 1)
    {
      *((void *)&v128 + 1) = MEMORY[0x1E4FBB1A0];
    }
    else
    {
      id v87 = (id)HKStringFromMedicationListOnboardingDetailsEntryType();
      uint64_t v88 = sub_1C2B73FA0();
      uint64_t v90 = v89;

      *((void *)&v128 + 1) = v86;
      if (v90) {
        goto LABEL_37;
      }
    }
    uint64_t v88 = sub_1C2B73FA0();
    uint64_t v90 = v91;
LABEL_37:
    *(void *)&long long v127 = v88;
    *((void *)&v127 + 1) = v90;
    sub_1C2AF45B4(&v127, &v125);
    char v92 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v124 = v129;
    unint64_t v129 = 0x8000000000000000;
    sub_1C2B017D4(&v125, 0xD000000000000015, 0x80000001C2B7BCF0, v92);
    unint64_t v129 = v124;
    swift_bridgeObjectRelease();
    if (*((unsigned char *)v33 + 40) == 1)
    {
      *((void *)&v128 + 1) = v86;
    }
    else
    {
      id v93 = (id)HKStringFromMedicationListOnboardingActionType();
      uint64_t v94 = sub_1C2B73FA0();
      uint64_t v96 = v95;

      *((void *)&v128 + 1) = v86;
      if (v96) {
        goto LABEL_41;
      }
    }
    uint64_t v94 = sub_1C2B73FA0();
    uint64_t v96 = v97;
LABEL_41:
    *(void *)&long long v127 = v94;
    *((void *)&v127 + 1) = v96;
    sub_1C2AF45B4(&v127, &v125);
    char v98 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v124 = v129;
    unint64_t v129 = 0x8000000000000000;
    sub_1C2B017D4(&v125, 0x6E6F69746361, 0xE600000000000000, v98);
    unint64_t v129 = v124;
    swift_bridgeObjectRelease();
    char v99 = *((unsigned char *)v33 + 121);
    *((void *)&v128 + 1) = v64;
    LOBYTE(v127) = v99;
    sub_1C2AF45B4(&v127, &v125);
    char v100 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v124 = v129;
    unint64_t v129 = 0x8000000000000000;
    sub_1C2B017D4(&v125, 0xD000000000000016, 0x80000001C2B7BDA0, v100);
    unint64_t v129 = v124;
    swift_bridgeObjectRelease();
    if (*((unsigned char *)v33 + 136) == 1)
    {
      long long v127 = 0u;
      long long v128 = 0u;
    }
    else
    {
      id v101 = (id)HKStringFromMedicationScheduleType();
      uint64_t v102 = sub_1C2B73FA0();
      uint64_t v104 = v103;

      uint64_t v126 = v86;
      *(void *)&long long v125 = v102;
      *((void *)&v125 + 1) = v104;
      sub_1C2AF45B4(&v125, &v127);
      if (*((void *)&v128 + 1))
      {
        sub_1C2AF45B4(&v127, &v125);
        char v105 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v124 = v129;
        unint64_t v129 = 0x8000000000000000;
        sub_1C2B017D4(&v125, 0x656C756465686373, 0xEC00000065707954, v105);
        unint64_t v129 = v124;
        swift_bridgeObjectRelease();
LABEL_46:
        uint64_t v106 = sub_1C2B74290();
        *((void *)&v128 + 1) = v67;
        *(void *)&long long v127 = v106;
        sub_1C2AF45B4(&v127, &v125);
        char v107 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v124 = v129;
        unint64_t v129 = 0x8000000000000000;
        sub_1C2B017D4(&v125, 0xD000000000000013, 0x80000001C2B7BDD0, v107);
        unint64_t v129 = v124;
        swift_bridgeObjectRelease();
        if (qword_1EBF11340 != -1) {
          swift_once();
        }
        __swift_project_value_buffer(v123, (uint64_t)qword_1EBF11348);
        uint64_t v108 = sub_1C2B73A80();
        os_log_type_t v109 = sub_1C2B744E0();
        if (os_log_type_enabled(v108, v109))
        {
          uint64_t v110 = swift_slowAlloc();
          uint64_t v111 = swift_slowAlloc();
          *(void *)&long long v127 = v111;
          *(_DWORD *)uint64_t v110 = 136315394;
          uint64_t v112 = sub_1C2B74CD0();
          *(void *)&long long v125 = sub_1C2AEEE6C(v112, v113, (uint64_t *)&v127);
          sub_1C2B74650();
          swift_bridgeObjectRelease();
          *(_WORD *)(v110 + 12) = 2080;
          swift_beginAccess();
          swift_bridgeObjectRetain();
          uint64_t v114 = sub_1C2B73F00();
          unint64_t v116 = v115;
          swift_bridgeObjectRelease();
          uint64_t v124 = sub_1C2AEEE6C(v114, v116, (uint64_t *)&v127);
          sub_1C2B74650();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1C2ADB000, v108, v109, "%s IHA gated event payload: %s", (uint8_t *)v110, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1C8767A10](v111, -1, -1);
          MEMORY[0x1C8767A10](v110, -1, -1);
          swift_unknownObjectRelease();
        }
        else
        {

          swift_unknownObjectRelease();
        }
        swift_beginAccess();
        return v129;
      }
    }
    sub_1C2B29420((uint64_t)&v127);
    sub_1C2B2888C(0x656C756465686373, 0xEC00000065707954, &v125);
    sub_1C2B29420((uint64_t)&v125);
    goto LABEL_46;
  }
  sub_1C2B73A70();
  unint64_t v24 = sub_1C2B73A80();
  os_log_type_t v25 = sub_1C2B744D0();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = (uint8_t *)swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    *(void *)&long long v127 = v27;
    *(_DWORD *)uint64_t v26 = 136446210;
    uint64_t v28 = sub_1C2B74CD0();
    *(void *)&long long v125 = sub_1C2AEEE6C(v28, v29, (uint64_t *)&v127);
    sub_1C2B74650();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2ADB000, v24, v25, "[%{public}s] Tried to create a payload with a dataSource containing nil healthDataSource", v26, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C8767A10](v27, -1, -1);
    MEMORY[0x1C8767A10](v26, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v123);
  sub_1C2B3719C();
  swift_allocError();
  *uint64_t v30 = 0xD000000000000020;
  v30[1] = 0x80000001C2B7BDF0;
  return swift_willThrow();
}

uint64_t sub_1C2B37168()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MedicationListOnboardingEvent()
{
  return self;
}

unint64_t sub_1C2B3719C()
{
  unint64_t result = qword_1EA32C0D0;
  if (!qword_1EA32C0D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA32C0D0);
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicationListOnboardingEvent.AnalyticsEventPayloadError()
{
  return &type metadata for MedicationListOnboardingEvent.AnalyticsEventPayloadError;
}

uint64_t sub_1C2B37204()
{
  return *(void *)v0;
}

uint64_t sub_1C2B3720C()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C2B3723C(uint64_t a1)
{
  return sub_1C2B379C0(a1, *v1);
}

uint64_t static ListConceptManager.activeMedicationsListManager(using:changeProvider:)(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = (id)HKStringFromListUserDomainType();
  sub_1C2B73FA0();

  sub_1C2B372FC();
  sub_1C2B73A20();
  swift_allocObject();
  id v5 = a2;
  return sub_1C2B73A00();
}

unint64_t sub_1C2B372FC()
{
  unint64_t result = qword_1EBF10E70;
  if (!qword_1EBF10E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBF10E70);
  }
  return result;
}

uint64_t ListConceptManager.contains(concept:)(void *a1)
{
  unint64_t v2 = sub_1C2B73A10();
  id v3 = a1;
  char v4 = sub_1C2B37680(v2, v3);
  swift_bridgeObjectRelease();

  if (v4)
  {
    char v5 = 1;
  }
  else
  {
    unint64_t v6 = sub_1C2B739F0();
    id v7 = v3;
    char v5 = sub_1C2B37680(v6, v7);
    swift_bridgeObjectRelease();
  }
  return v5 & 1;
}

uint64_t ListConceptManager.isActive(concept:)(void *a1)
{
  return sub_1C2B37424(a1, MEMORY[0x1E4F677E0]);
}

uint64_t ListConceptManager.isArchived(concept:)(void *a1)
{
  return sub_1C2B37424(a1, MEMORY[0x1E4F677D8]);
}

uint64_t sub_1C2B37424(void *a1, uint64_t (*a2)(void))
{
  unint64_t v3 = a2();
  id v4 = a1;
  char v5 = sub_1C2B374B0(v3, v4);
  swift_bridgeObjectRelease();

  if (v5)
  {
    self;
    uint64_t result = swift_dynamicCastObjCClass();
    if (result) {
      return result;
    }
  }
  return 0;
}

void *sub_1C2B374B0(unint64_t a1, void *a2)
{
  unint64_t v3 = a1;
  if (a1 >> 62)
  {
LABEL_19:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1C2B749C0();
    if (v4) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
    {
LABEL_3:
      unint64_t v17 = v3;
      unint64_t v18 = v3 & 0xC000000000000001;
      uint64_t v5 = 4;
      while (1)
      {
        if (v18) {
          id v7 = (id)MEMORY[0x1C8766C90](v5 - 4, v3);
        }
        else {
          id v7 = *(id *)(v3 + 8 * v5);
        }
        unint64_t v6 = v7;
        uint64_t v8 = v5 - 3;
        if (__OFADD__(v5 - 4, 1))
        {
          __break(1u);
          goto LABEL_19;
        }
        id v9 = objc_msgSend(v7, sel_firstConceptIdentifier);
        id v10 = objc_msgSend(a2, sel_identifier);
        id v11 = v10;
        if (!v9) {
          break;
        }
        if (!v10)
        {
          id v11 = v9;
LABEL_5:

          unint64_t v6 = v11;
          goto LABEL_6;
        }
        sub_1C2AE3A18(0, &qword_1EA32BBE8);
        uint64_t v12 = v4;
        id v13 = a2;
        id v14 = v9;
        char v15 = sub_1C2B745F0();

        a2 = v13;
        uint64_t v4 = v12;
        unint64_t v3 = v17;

        if (v15)
        {
LABEL_17:
          swift_bridgeObjectRelease();
          return v6;
        }
LABEL_6:

        ++v5;
        if (v8 == v4) {
          goto LABEL_20;
        }
      }
      if (!v10) {
        goto LABEL_17;
      }
      goto LABEL_5;
    }
  }
LABEL_20:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1C2B37680(unint64_t a1, void *a2)
{
  unint64_t v3 = a1;
  if (a1 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1C2B749C0();
    if (v4) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
    {
LABEL_3:
      unint64_t v17 = v3;
      unint64_t v18 = v3 & 0xC000000000000001;
      uint64_t v5 = 4;
      while (1)
      {
        if (v18) {
          id v6 = (id)MEMORY[0x1C8766C90](v5 - 4, v3);
        }
        else {
          id v6 = *(id *)(v3 + 8 * v5);
        }
        id v7 = v6;
        uint64_t v8 = v5 - 3;
        if (__OFADD__(v5 - 4, 1))
        {
          __break(1u);
          goto LABEL_20;
        }
        id v9 = objc_msgSend(v6, sel_firstConceptIdentifier);
        id v10 = objc_msgSend(a2, sel_identifier);
        id v11 = v10;
        if (!v9) {
          break;
        }
        if (!v10)
        {
          id v11 = v9;
LABEL_5:

          goto LABEL_6;
        }
        sub_1C2AE3A18(0, &qword_1EA32BBE8);
        uint64_t v12 = v4;
        id v13 = a2;
        id v14 = v9;
        char v15 = sub_1C2B745F0();

        a2 = v13;
        uint64_t v4 = v12;
        unint64_t v3 = v17;

        if (v15)
        {
          swift_bridgeObjectRelease();
          return 1;
        }
LABEL_6:
        ++v5;
        if (v8 == v4) {
          goto LABEL_21;
        }
      }
      if (!v10)
      {
        swift_bridgeObjectRelease();

        return 1;
      }
      goto LABEL_5;
    }
  }
LABEL_21:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t initializeBufferWithCopyOfBuffer for MedicationsListDataProvider(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for MedicationsListDataProvider()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for MedicationsListDataProvider(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for MedicationsListDataProvider(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MedicationsListDataProvider(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MedicationsListDataProvider(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicationsListDataProvider()
{
  return &type metadata for MedicationsListDataProvider;
}

uint64_t sub_1C2B379C0(uint64_t a1, uint64_t a2)
{
  sub_1C2B37C6C();
  uint64_t v17 = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  id v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2AE3A18(0, &qword_1EBF10FD0);
  sub_1C2AE3A18(0, &qword_1EBF11368);
  id v7 = self;
  id v8 = objc_msgSend(self, sel_medicationUserDomainConceptTypeIdentifier);
  id v9 = objc_msgSend(v7, sel_predicateForUserDomainConceptsWithTypeIdentifier_, v8);

  uint64_t v10 = sub_1C2B744A0();
  sub_1C2AE3A18(0, &qword_1EBF110A0);
  id v11 = objc_msgSend(v7, sel_predicateForListUserDomainConceptWithListType_, a2);
  uint64_t v12 = sub_1C2B744A0();

  uint64_t v18 = v12;
  uint64_t v19 = v10;
  sub_1C2B37D38(0, &qword_1EBF10F98, &qword_1EBF10FC0, &qword_1EBF11368);
  sub_1C2B37D38(0, &qword_1EBF10FA8, &qword_1EBF10FC8, &qword_1EBF110A0);
  sub_1C2B37DB4();
  sub_1C2B37E2C();
  swift_retain();
  swift_retain();
  sub_1C2B73AD0();
  sub_1C2B37EA4();
  uint64_t v13 = v17;
  uint64_t v14 = sub_1C2B73D00();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v13);
  return v14;
}

void sub_1C2B37C6C()
{
  if (!qword_1EBF10F88)
  {
    sub_1C2B37D38(255, &qword_1EBF10F98, &qword_1EBF10FC0, &qword_1EBF11368);
    sub_1C2B37D38(255, &qword_1EBF10FA8, &qword_1EBF10FC8, &qword_1EBF110A0);
    sub_1C2B37DB4();
    sub_1C2B37E2C();
    unint64_t v0 = sub_1C2B73AC0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBF10F88);
    }
  }
}

void sub_1C2B37D38(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4)
{
  if (!*a2)
  {
    sub_1C2AF4398(255, a3, a4);
    sub_1C2AF44C8();
    unint64_t v5 = sub_1C2B73B60();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_1C2B37DB4()
{
  unint64_t result = qword_1EBF10F90;
  if (!qword_1EBF10F90)
  {
    sub_1C2B37D38(255, &qword_1EBF10F98, &qword_1EBF10FC0, &qword_1EBF11368);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBF10F90);
  }
  return result;
}

unint64_t sub_1C2B37E2C()
{
  unint64_t result = qword_1EBF10FA0;
  if (!qword_1EBF10FA0)
  {
    sub_1C2B37D38(255, &qword_1EBF10FA8, &qword_1EBF10FC8, &qword_1EBF110A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBF10FA0);
  }
  return result;
}

unint64_t sub_1C2B37EA4()
{
  unint64_t result = qword_1EBF10F80;
  if (!qword_1EBF10F80)
  {
    sub_1C2B37C6C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBF10F80);
  }
  return result;
}

unint64_t sub_1C2B37F00(uint64_t a1)
{
  unint64_t result = 0;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD00000000000002ELL;
      break;
    case 2:
      unint64_t result = 0xD000000000000032;
      break;
    case 3:
      unint64_t result = 0xD00000000000002DLL;
      break;
    case 4:
      unint64_t result = 0xD00000000000002BLL;
      break;
    case 5:
      unint64_t result = 0xD000000000000031;
      break;
    case 6:
      unint64_t result = 0xD000000000000030;
      break;
    case 7:
      unint64_t result = 0xD000000000000032;
      break;
    case 8:
    case 9:
    case 10:
      unint64_t result = 0xD00000000000002CLL;
      break;
    case 12:
      unint64_t result = 0xD00000000000002BLL;
      break;
    case 13:
      unint64_t result = 0xD00000000000002DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C2B38080(char a1, uint64_t a2)
{
  uint64_t v2 = 0;
  switch(a2)
  {
    case 1:
      if (a1)
      {
        if (qword_1EBF10F78 != -1) {
          swift_once();
        }
      }
      else if (qword_1EBF10F78 != -1)
      {
        swift_once();
      }
      goto LABEL_85;
    case 2:
      if (a1)
      {
        if (qword_1EBF10F78 != -1) {
          swift_once();
        }
      }
      else if (qword_1EBF10F78 != -1)
      {
        swift_once();
      }
      goto LABEL_85;
    case 3:
      if (a1)
      {
        if (qword_1EBF10F78 != -1) {
          swift_once();
        }
      }
      else if (qword_1EBF10F78 != -1)
      {
        swift_once();
      }
      goto LABEL_85;
    case 4:
      if (a1)
      {
        if (qword_1EBF10F78 != -1) {
          swift_once();
        }
      }
      else if (qword_1EBF10F78 != -1)
      {
        swift_once();
      }
      goto LABEL_85;
    case 5:
      if (a1)
      {
        if (qword_1EBF10F78 != -1) {
          swift_once();
        }
      }
      else if (qword_1EBF10F78 != -1)
      {
        swift_once();
      }
      goto LABEL_85;
    case 6:
      if (a1)
      {
        if (qword_1EBF10F78 != -1) {
          swift_once();
        }
      }
      else if (qword_1EBF10F78 != -1)
      {
        swift_once();
      }
      goto LABEL_85;
    case 7:
      if (a1)
      {
        if (qword_1EBF10F78 != -1) {
          swift_once();
        }
      }
      else if (qword_1EBF10F78 != -1)
      {
        swift_once();
      }
      goto LABEL_85;
    case 8:
      if (a1)
      {
        if (qword_1EBF10F78 != -1) {
          swift_once();
        }
      }
      else if (qword_1EBF10F78 != -1)
      {
        swift_once();
      }
      goto LABEL_85;
    case 9:
      if (a1)
      {
        if (qword_1EBF10F78 != -1) {
          swift_once();
        }
      }
      else if (qword_1EBF10F78 != -1)
      {
        swift_once();
      }
      goto LABEL_85;
    case 10:
      if (a1)
      {
        if (qword_1EBF10F78 != -1) {
          swift_once();
        }
      }
      else if (qword_1EBF10F78 != -1)
      {
        swift_once();
      }
      goto LABEL_85;
    case 12:
      if (a1)
      {
        if (qword_1EBF10F78 != -1) {
          swift_once();
        }
      }
      else if (qword_1EBF10F78 != -1)
      {
        swift_once();
      }
      goto LABEL_85;
    case 13:
      if (a1)
      {
        if (qword_1EBF10F78 != -1) {
          swift_once();
        }
      }
      else if (qword_1EBF10F78 != -1)
      {
        swift_once();
      }
LABEL_85:
      id v3 = (id)qword_1EBF10F60;
      swift_bridgeObjectRetain();
      uint64_t v2 = sub_1C2B735A0();
      swift_bridgeObjectRelease();

      break;
    default:
      return v2;
  }
  return v2;
}

uint64_t Date.startOfDay()()
{
  uint64_t v0 = sub_1C2B73870();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  id v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2B73850();
  sub_1C2B737A0();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t Date.endOfDay()@<X0>(char *a1@<X8>)
{
  char v63 = a1;
  uint64_t v1 = sub_1C2B737F0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v60 = v1;
  uint64_t v61 = v2;
  MEMORY[0x1F4188790](v1);
  uint64_t v59 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_1C2B73810();
  uint64_t v4 = *(void *)(v55 - 8);
  MEMORY[0x1F4188790](v55);
  uint64_t v54 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C2B737C0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v48 = v6;
  uint64_t v49 = v7;
  MEMORY[0x1F4188790](v6);
  id v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1C2B73710();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v56 = v10;
  uint64_t v57 = v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  char v62 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  id v58 = (char *)&v48 - v15;
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v48 - v16;
  uint64_t v18 = sub_1C2B73870();
  uint64_t v50 = v18;
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  uint64_t v22 = (char *)&v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  unint64_t v24 = (char *)&v48 - v23;
  sub_1C2B3A010(0, (unint64_t *)&qword_1EBF11360, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  uint64_t v26 = MEMORY[0x1F4188790](v25 - 8);
  uint64_t v53 = (uint64_t)&v48 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v26);
  uint64_t v64 = (uint64_t)&v48 - v28;
  sub_1C2B73850();
  sub_1C2B73850();
  sub_1C2B737A0();
  unint64_t v29 = *(void (**)(char *, uint64_t))(v19 + 8);
  uint64_t v51 = v19 + 8;
  id v52 = v29;
  v29(v22, v18);
  uint64_t v30 = v9;
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4F27B68], v6);
  uint64_t v32 = v54;
  uint64_t v31 = v55;
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v54, *MEMORY[0x1E4F27BA8], v55);
  uint64_t v34 = v60;
  uint64_t v33 = v61;
  uint64_t v35 = v59;
  (*(void (**)(char *, void, uint64_t))(v61 + 104))(v59, *MEMORY[0x1E4F27B80], v60);
  sub_1C2B73820();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v35, v34);
  uint64_t v36 = v4;
  uint64_t v37 = v56;
  (*(void (**)(char *, uint64_t))(v36 + 8))(v32, v31);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v30, v48);
  uint64_t v38 = v57;
  id v39 = *(void (**)(char *, uint64_t))(v57 + 8);
  v39(v17, v37);
  uint64_t v40 = v50;
  char v41 = v52;
  v52(v24, v50);
  sub_1C2B73850();
  sub_1C2B737A0();
  v41(v24, v40);
  uint64_t v42 = v58;
  sub_1C2B736B0();
  uint64_t v43 = v17;
  uint64_t v44 = v62;
  v39(v43, v37);
  uint64_t v45 = v53;
  sub_1C2AF0734(v64, v53);
  id v46 = *(void (**)(char *, char *, uint64_t))(v38 + 32);
  v46(v44, v42, v37);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v45, 1, v37) == 1)
  {
    v46(v63, v44, v37);
    return sub_1C2AFA240(v45);
  }
  else
  {
    v39(v44, v37);
    return ((uint64_t (*)(char *, uint64_t, uint64_t))v46)(v63, v45, v37);
  }
}

uint64_t Date.localizedRelative.getter()
{
  uint64_t v43 = sub_1C2B73710();
  uint64_t v42 = *(void *)(v43 - 8);
  MEMORY[0x1F4188790](v43);
  uint64_t v1 = (char *)&v37 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_1C2B73870();
  uint64_t v40 = *(void *)(v2 - 8);
  uint64_t v41 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C2B73540();
  uint64_t v38 = *(void *)(v5 - 8);
  uint64_t v39 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2B3A010(0, &qword_1EA32B9C8, MEMORY[0x1E4F27C88], MEMORY[0x1E4FBBE00]);
  uint64_t v8 = sub_1C2B73860();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 72);
  unint64_t v11 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1C2B764D0;
  unint64_t v13 = v12 + v11;
  uint64_t v14 = *(void (**)(unint64_t, void, uint64_t))(v9 + 104);
  v14(v13, *MEMORY[0x1E4F27C10], v8);
  v14(v13 + v10, *MEMORY[0x1E4F27C48], v8);
  v14(v13 + 2 * v10, *MEMORY[0x1E4F27BF0], v8);
  uint64_t v15 = v7;
  sub_1C2B39D9C(v12);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1C2B73850();
  sub_1C2B73700();
  sub_1C2B737D0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v1, v43);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v4, v41);
  uint64_t result = sub_1C2B73510();
  if (v17)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v18 = result;
  uint64_t result = sub_1C2B73520();
  if (v19)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v20 = result;
  uint64_t result = sub_1C2B73530();
  if (v21)
  {
LABEL_21:
    __break(1u);
    return result;
  }
  if (v18 < 1)
  {
    if (v20 < 1)
    {
      uint64_t v30 = result;
      if (qword_1EBF10F78 != -1) {
        swift_once();
      }
      id v31 = (id)qword_1EBF10F60;
      swift_bridgeObjectRetain();
      sub_1C2B735A0();
      swift_bridgeObjectRelease();

      sub_1C2B3A010(0, (unint64_t *)&qword_1EBF10838, (uint64_t (*)(uint64_t))sub_1C2AFCDFC, MEMORY[0x1E4FBBE00]);
      uint64_t v32 = swift_allocObject();
      uint64_t v33 = MEMORY[0x1E4FBB550];
      uint64_t v34 = MEMORY[0x1E4FBB5C8];
      *(_OWORD *)(v32 + 16) = xmmword_1C2B76500;
      *(void *)(v32 + 56) = v33;
      *(void *)(v32 + 64) = v34;
      if (v30 <= 1) {
        uint64_t v35 = 1;
      }
      else {
        uint64_t v35 = v30;
      }
      *(void *)(v32 + 32) = v35;
    }
    else
    {
      if (qword_1EBF10F78 != -1) {
        swift_once();
      }
      id v26 = (id)qword_1EBF10F60;
      swift_bridgeObjectRetain();
      sub_1C2B735A0();
      swift_bridgeObjectRelease();

      sub_1C2B3A010(0, (unint64_t *)&qword_1EBF10838, (uint64_t (*)(uint64_t))sub_1C2AFCDFC, MEMORY[0x1E4FBBE00]);
      uint64_t v27 = swift_allocObject();
      uint64_t v28 = MEMORY[0x1E4FBB550];
      *(_OWORD *)(v27 + 16) = xmmword_1C2B76500;
      uint64_t v29 = MEMORY[0x1E4FBB5C8];
      *(void *)(v27 + 56) = v28;
      *(void *)(v27 + 64) = v29;
      *(void *)(v27 + 32) = v20;
    }
  }
  else
  {
    if (qword_1EBF10F78 != -1) {
      swift_once();
    }
    id v22 = (id)qword_1EBF10F60;
    swift_bridgeObjectRetain();
    sub_1C2B735A0();
    swift_bridgeObjectRelease();

    sub_1C2B3A010(0, (unint64_t *)&qword_1EBF10838, (uint64_t (*)(uint64_t))sub_1C2AFCDFC, MEMORY[0x1E4FBBE00]);
    uint64_t v23 = swift_allocObject();
    uint64_t v24 = MEMORY[0x1E4FBB550];
    *(_OWORD *)(v23 + 16) = xmmword_1C2B76500;
    uint64_t v25 = MEMORY[0x1E4FBB5C8];
    *(void *)(v23 + 56) = v24;
    *(void *)(v23 + 64) = v25;
    *(void *)(v23 + 32) = v18;
  }
  uint64_t v36 = sub_1C2B73F70();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v15, v39);
  return v36;
}

uint64_t sub_1C2B39958(uint64_t a1)
{
  uint64_t v2 = sub_1C2B73740();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v28 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v27 = (char *)v21 - v6;
  sub_1C2B3A010(0, (unint64_t *)&qword_1EA32BBB0, MEMORY[0x1E4F27990], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)v21 - v8;
  uint64_t v10 = *(void *)(a1 + 16);
  sub_1C2B3A074((unint64_t *)&qword_1EA32BC78, MEMORY[0x1E4F27990]);
  uint64_t v29 = sub_1C2B74390();
  if (v10)
  {
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v14 = *(void *)(v11 + 56);
    unint64_t v15 = v11 + 40;
    uint64_t v24 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 32);
    uint64_t v25 = v12;
    id v22 = (void (**)(char *, char *, uint64_t))(v11 + 16);
    uint64_t v23 = v14;
    uint64_t v26 = v11;
    uint64_t v16 = (void (**)(uint64_t, uint64_t))(v11 - 8);
    v21[1] = v15 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v18 = (uint64_t)v27;
    char v17 = v28;
    while (1)
    {
      v25(v9, v13, v2);
      char v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v15;
      (*(void (**)(char *, void, uint64_t, uint64_t))v15)(v9, 0, 1, v2);
      if ((*v24)(v9, 1, v2) == 1) {
        break;
      }
      (*v22)(v17, v9, v2);
      sub_1C2B46B38(v18, v17);
      (*v16)(v18, v2);
      v13 += v23;
      if (!--v10) {
        goto LABEL_7;
      }
    }
  }
  else
  {
    char v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
LABEL_7:
    v19(v9, 1, 1, v2);
  }
  return v29;
}

uint64_t sub_1C2B39C28(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1C2B749C0();
    swift_bridgeObjectRelease();
  }
  sub_1C2B39FD0();
  sub_1C2B3A074(&qword_1EA32BF38, (void (*)(uint64_t))sub_1C2B39FD0);
  uint64_t result = sub_1C2B74390();
  uint64_t v10 = result;
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1C2B749C0();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v4) {
      return v10;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v4) {
      return v10;
    }
  }
  if (v4 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        uint64_t v6 = (void *)MEMORY[0x1C8766C90](i, a1);
        sub_1C2B47030(&v9, v6);
      }
    }
    else
    {
      uint64_t v7 = (void **)(a1 + 32);
      do
      {
        uint64_t v8 = *v7++;
        sub_1C2B47030(&v9, v8);

        --v4;
      }
      while (v4);
    }
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C2B39D9C(uint64_t a1)
{
  uint64_t v2 = sub_1C2B73860();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = *(void *)(a1 + 16);
  sub_1C2B3A074(&qword_1EA32BAD8, MEMORY[0x1E4F27C88]);
  uint64_t result = sub_1C2B74390();
  uint64_t v17 = result;
  if (v9)
  {
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v12 = v13;
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v15 = *(void *)(v11 + 56);
    do
    {
      v12(v6, v14, v2);
      sub_1C2B47340((uint64_t)v8, v6);
      (*(void (**)(char *, uint64_t))(v11 - 8))(v8, v2);
      v14 += v15;
      --v9;
    }
    while (v9);
    return v17;
  }
  return result;
}

uint64_t sub_1C2B39F38(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_1C2B74390();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      swift_bridgeObjectRetain();
      sub_1C2B46E5C(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

unint64_t sub_1C2B39FD0()
{
  unint64_t result = qword_1EBF112D0;
  if (!qword_1EBF112D0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBF112D0);
  }
  return result;
}

void sub_1C2B3A010(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C2B3A074(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C2B3A0BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  void *v8 = v4;
  v8[4] = a3;
  v8[5] = v3;
  v8[2] = a1;
  v8[3] = a2;
  v8[1] = sub_1C2B3A17C;
  return MEMORY[0x1F4188298](sub_1C2B3A2A8, 0, 0);
}

uint64_t sub_1C2B3A17C(char a1)
{
  uint64_t v7 = *v2;
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (v1) {
    uint64_t v5 = 0;
  }
  else {
    uint64_t v5 = a1 & 1;
  }
  return v4(v5);
}

uint64_t InteractionControlling.saveRemoteRecords(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  return MEMORY[0x1F4188298](sub_1C2B3A2A8, 0, 0);
}

uint64_t sub_1C2B3A2A8()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 48) = v3;
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 24);
  *(void *)(v3 + 32) = v1;
  *(void *)(v3 + 40) = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1C2B3A3B0;
  uint64_t v5 = MEMORY[0x1E4FBB390];
  return MEMORY[0x1F4188160](v0 + 72, 0, 0, 0xD000000000000015, 0x80000001C2B7C480, sub_1C2B3AB24, v3, v5);
}

uint64_t sub_1C2B3A3B0()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1C2B3A4E8;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1C2B3A4CC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C2B3A4CC()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(unsigned __int8 *)(v0 + 72));
}

uint64_t sub_1C2B3A4E8()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1(0);
}

uint64_t sub_1C2B3A550(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_1C2B3A60C;
  v6[4] = a2;
  v6[5] = v2;
  v6[3] = a1;
  return MEMORY[0x1F4188298](sub_1C2B3A730, 0, 0);
}

uint64_t sub_1C2B3A60C(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t InteractionControlling.getDismissedRemoteRecords()(uint64_t a1, uint64_t a2)
{
  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  return MEMORY[0x1F4188298](sub_1C2B3A730, 0, 0);
}

uint64_t sub_1C2B3A730()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 48) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 24);
  *(void *)(v2 + 32) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v3;
  sub_1C2B3AD6C();
  void *v3 = v0;
  v3[1] = sub_1C2B3A838;
  return MEMORY[0x1F4188160](v0 + 16, 0, 0, 0xD00000000000001BLL, 0x80000001C2B7C4A0, sub_1C2B3AD60, v2, v4);
}

uint64_t sub_1C2B3A838()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1C2B3A954;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1C2B2D9B0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C2B3A954()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C2B3A9B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1C2B3B760();
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x1F4188790](v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v14 + v13, (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  (*(void (**)(uint64_t, uint64_t (*)(char, void *), uint64_t, uint64_t, uint64_t))(a5 + 8))(a3, sub_1C2B3B878, v14, a4, a5);
  return swift_release();
}

uint64_t sub_1C2B3AB24(uint64_t a1)
{
  return sub_1C2B3A9B8(a1, v1[4], v1[5], v1[2], v1[3]);
}

uint64_t sub_1C2B3AB30(char a1, id a2)
{
  if (a1)
  {
    sub_1C2B3B760();
    return sub_1C2B742C0();
  }
  else
  {
    if (!a2)
    {
      type metadata accessor for HKError(0);
      sub_1C2B5E0A8(MEMORY[0x1E4FBC860]);
      sub_1C2B2D5B0();
      sub_1C2B73610();
    }
    id v4 = a2;
    sub_1C2B3B760();
    return sub_1C2B742B0();
  }
}

uint64_t sub_1C2B3ABFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C2B3B658();
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  unint64_t v11 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v12 + v11, (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  (*(void (**)(uint64_t (*)(uint64_t, void *), uint64_t, uint64_t, uint64_t))(a4 + 24))(sub_1C2B3B6E0, v12, a3, a4);
  return swift_release();
}

uint64_t sub_1C2B3AD60(uint64_t a1)
{
  return sub_1C2B3ABFC(a1, v1[4], v1[2], v1[3]);
}

void sub_1C2B3AD6C()
{
  if (!qword_1EA32C0E8)
  {
    sub_1C2AE3A18(255, &qword_1EA32BC08);
    unint64_t v0 = sub_1C2B74280();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA32C0E8);
    }
  }
}

uint64_t sub_1C2B3ADD4(uint64_t a1, id a2)
{
  if (a1)
  {
    sub_1C2B3B658();
    swift_bridgeObjectRetain();
    return sub_1C2B742C0();
  }
  else
  {
    if (!a2)
    {
      type metadata accessor for HKError(0);
      sub_1C2B5E0A8(MEMORY[0x1E4FBC860]);
      sub_1C2B2D5B0();
      sub_1C2B73610();
    }
    id v4 = a2;
    sub_1C2B3B658();
    return sub_1C2B742B0();
  }
}

void HKMedicationControl.saveRemoteRecords(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C2AE3A18(0, &qword_1EA32BA90);
  uint64_t v6 = (void *)sub_1C2B741C0();
  v8[4] = a2;
  v8[5] = a3;
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 1107296256;
  v8[2] = sub_1C2AF5204;
  v8[3] = &block_descriptor_10;
  uint64_t v7 = _Block_copy(v8);
  swift_retain();
  swift_release();
  objc_msgSend(v3, sel_markRemoteScheduleUnavailableRecordsAsDismissed_completion_, v6, v7);
  _Block_release(v7);
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

void HKMedicationControl.getDismissedRemoteRecords(completion:)(uint64_t a1, uint64_t a2)
{
  v4[4] = a1;
  v4[5] = a2;
  v4[0] = MEMORY[0x1E4F143A8];
  v4[1] = 1107296256;
  v4[2] = sub_1C2B3B06C;
  v4[3] = &block_descriptor_7_0;
  uint64_t v3 = _Block_copy(v4);
  swift_retain();
  swift_release();
  objc_msgSend(v2, sel_allDismissedRemoteScheduleUnavailableRecordsWithCompletion_, v3);
  _Block_release(v3);
}

uint64_t sub_1C2B3B06C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1C2AE3A18(0, &qword_1EA32BC08);
    uint64_t v4 = sub_1C2B741D0();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_1C2B3B110(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6 = *v3;
  sub_1C2AE3A18(0, &qword_1EA32BA90);
  uint64_t v7 = (void *)sub_1C2B741C0();
  v9[4] = a2;
  v9[5] = a3;
  v9[0] = MEMORY[0x1E4F143A8];
  v9[1] = 1107296256;
  void v9[2] = sub_1C2AF5204;
  v9[3] = &block_descriptor_23;
  uint64_t v8 = _Block_copy(v9);
  swift_retain();
  swift_release();
  objc_msgSend(v6, sel_markRemoteScheduleUnavailableRecordsAsDismissed_completion_, v7, v8);
  _Block_release(v8);
}

uint64_t sub_1C2B3B208(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  void *v8 = v4;
  v8[4] = a3;
  v8[5] = v3;
  v8[2] = a1;
  v8[3] = a2;
  v8[1] = sub_1C2B3B8F8;
  return MEMORY[0x1F4188298](sub_1C2B3A2A8, 0, 0);
}

void sub_1C2B3B2C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  v5[4] = a1;
  uint64_t v5[5] = a2;
  v5[0] = MEMORY[0x1E4F143A8];
  v5[1] = 1107296256;
  v5[2] = sub_1C2B3B06C;
  v5[3] = &block_descriptor_18_0;
  uint64_t v4 = _Block_copy(v5);
  swift_retain();
  swift_release();
  objc_msgSend(v3, sel_allDismissedRemoteScheduleUnavailableRecordsWithCompletion_, v4);
  _Block_release(v4);
}

uint64_t sub_1C2B3B380(uint64_t a1, uint64_t a2)
{
  id v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *id v6 = v3;
  v6[1] = sub_1C2B3B8FC;
  v6[4] = a2;
  v6[5] = v2;
  v6[3] = a1;
  return MEMORY[0x1F4188298](sub_1C2B3A730, 0, 0);
}

uint64_t dispatch thunk of InteractionControlling.saveRemoteRecords(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of InteractionControlling.saveRemoteRecords(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 16) + **(int **)(a3 + 16));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1C2B0128C;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of InteractionControlling.getDismissedRemoteRecords(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of InteractionControlling.getDismissedRemoteRecords()(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 32) + **(int **)(a2 + 32));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1C2B0128C;
  return v7(a1, a2);
}

void sub_1C2B3B658()
{
  if (!qword_1EA32C120)
  {
    sub_1C2B3AD6C();
    sub_1C2AF44C8();
    unint64_t v0 = sub_1C2B742D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA32C120);
    }
  }
}

uint64_t sub_1C2B3B6C8()
{
  return objectdestroyTm_2((uint64_t (*)(void))sub_1C2B3B658);
}

uint64_t sub_1C2B3B6E0(uint64_t a1, void *a2)
{
  sub_1C2B3B658();
  return sub_1C2B3ADD4(a1, a2);
}

void sub_1C2B3B760()
{
  if (!qword_1EA32C128)
  {
    sub_1C2AF44C8();
    unint64_t v0 = sub_1C2B742D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA32C128);
    }
  }
}

uint64_t sub_1C2B3B7C8()
{
  return objectdestroyTm_2((uint64_t (*)(void))sub_1C2B3B760);
}

uint64_t objectdestroyTm_2(uint64_t (*a1)(void))
{
  uint64_t v2 = a1(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v6 = v5 + *(void *)(v3 + 64);
  uint64_t v7 = v4 | 7;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  return MEMORY[0x1F4186498](v1, v6, v7);
}

uint64_t sub_1C2B3B878(char a1, void *a2)
{
  sub_1C2B3B760();
  return sub_1C2B3AB30(a1, a2);
}

uint64_t MedicationsSettingsManager.__allocating_init(healthStore:keyValueDomain:userDefaults:)(void *a1, void *a2, void (*a3)(void, void, void))
{
  swift_allocObject();
  uint64_t v6 = sub_1C2ADF2A4(a1, a2, a3);

  return v6;
}

uint64_t MedicationsSettingsManager.showMinorDrugInteractions.getter()
{
  return sub_1C2AE0D28((unint64_t *)&unk_1EBF0FD70, MEMORY[0x1E4F67098], &OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__showMinorDrugInteractions, MEMORY[0x1E4F67088]);
}

uint64_t MedicationsSettingsManager.isAlcoholDrugInteractionFactorEnabled.getter()
{
  return sub_1C2AE0D28(&qword_1EBF0FE00, MEMORY[0x1E4F65FF8], &OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__isAlcoholDrugInteractionFactorEnabled, MEMORY[0x1E4F65FE8]);
}

uint64_t MedicationsSettingsManager.isTobaccoDrugInteractionFactorEnabled.getter()
{
  return sub_1C2AE0D28(&qword_1EBF0FE00, MEMORY[0x1E4F65FF8], &OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__isTobaccoDrugInteractionFactorEnabled, MEMORY[0x1E4F65FE8]);
}

uint64_t MedicationsSettingsManager.isMarijuanaDrugInteractionFactorEnabled.getter()
{
  return sub_1C2AE0D28(&qword_1EBF0FE00, MEMORY[0x1E4F65FF8], &OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__isMarijuanaDrugInteractionFactorEnabled, MEMORY[0x1E4F65FE8]);
}

id MedicationsSettingsManager.keyValueDomain.getter()
{
  return *(id *)(v0 + 16);
}

uint64_t MedicationsSettingsManager.isAlcoholDrugInteractionFactorEnabled.setter(char a1)
{
  return sub_1C2B3BD74(a1, (uint64_t)&OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__isAlcoholDrugInteractionFactorEnabled, &qword_1EBF0FE00, MEMORY[0x1E4F65FF8], MEMORY[0x1E4F65FF0]);
}

uint64_t (*MedicationsSettingsManager.isAlcoholDrugInteractionFactorEnabled.modify(void *a1))()
{
  uint64_t v2 = malloc(0x40uLL);
  *a1 = v2;
  swift_beginAccess();
  sub_1C2AE0050(0, &qword_1EBF0FE00, MEMORY[0x1E4FBB390], MEMORY[0x1E4F65FF8]);
  v2[7] = sub_1C2B73970();
  return sub_1C2B3BB5C;
}

uint64_t sub_1C2B3BB60@<X0>(void *a1@<X0>, unint64_t *a2@<X3>, uint64_t (*a3)(void, uint64_t)@<X4>, void *a4@<X5>, void (*a5)(unsigned char *__return_ptr, uint64_t)@<X6>, unsigned char *a6@<X8>)
{
  sub_1C2AE0050(0, a2, MEMORY[0x1E4FBB390], a3);
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = &v17[-v13];
  uint64_t v15 = *a1 + *a4;
  swift_beginAccess();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v12 + 16))(v14, v15, v11);
  a5(&v17[7], v11);
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v12 + 8))(v14, v11);
  *a6 = v17[7];
  return result;
}

uint64_t sub_1C2B3BCA4(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t *a6, uint64_t (*a7)(void, uint64_t), void (*a8)(char *, uint64_t))
{
  char v13 = *a1;
  swift_beginAccess();
  sub_1C2AE0050(0, a6, MEMORY[0x1E4FBB390], a7);
  a8(&v13, v11);
  return swift_endAccess();
}

uint64_t MedicationsSettingsManager.isMarijuanaDrugInteractionFactorEnabled.setter(char a1)
{
  return sub_1C2B3BD74(a1, (uint64_t)&OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__isMarijuanaDrugInteractionFactorEnabled, &qword_1EBF0FE00, MEMORY[0x1E4F65FF8], MEMORY[0x1E4F65FF0]);
}

uint64_t sub_1C2B3BD74(char a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(void, uint64_t), void (*a5)(char *, uint64_t))
{
  char v10 = a1;
  swift_beginAccess();
  sub_1C2AE0050(0, a3, MEMORY[0x1E4FBB390], a4);
  a5(&v10, v8);
  return swift_endAccess();
}

uint64_t (*MedicationsSettingsManager.isMarijuanaDrugInteractionFactorEnabled.modify(void *a1))()
{
  uint64_t v2 = malloc(0x40uLL);
  *a1 = v2;
  swift_beginAccess();
  sub_1C2AE0050(0, &qword_1EBF0FE00, MEMORY[0x1E4FBB390], MEMORY[0x1E4F65FF8]);
  v2[7] = sub_1C2B73970();
  return sub_1C2B3BB5C;
}

uint64_t MedicationsSettingsManager.isTobaccoDrugInteractionFactorEnabled.setter(char a1)
{
  return sub_1C2B3BD74(a1, (uint64_t)&OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__isTobaccoDrugInteractionFactorEnabled, &qword_1EBF0FE00, MEMORY[0x1E4F65FF8], MEMORY[0x1E4F65FF0]);
}

uint64_t (*MedicationsSettingsManager.isTobaccoDrugInteractionFactorEnabled.modify(void *a1))()
{
  uint64_t v2 = malloc(0x40uLL);
  *a1 = v2;
  swift_beginAccess();
  sub_1C2AE0050(0, &qword_1EBF0FE00, MEMORY[0x1E4FBB390], MEMORY[0x1E4F65FF8]);
  v2[7] = sub_1C2B73970();
  return sub_1C2B3BB5C;
}

uint64_t MedicationsSettingsManager.areDoseRemindersEnabled.getter()
{
  return sub_1C2AE0D28((unint64_t *)&unk_1EBF0FD70, MEMORY[0x1E4F67098], &OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__areDoseRemindersEnabled, MEMORY[0x1E4F67088]);
}

uint64_t MedicationsSettingsManager.areDoseRemindersEnabled.setter(char a1)
{
  return sub_1C2B3BD74(a1, (uint64_t)&OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__areDoseRemindersEnabled, (unint64_t *)&unk_1EBF0FD70, MEMORY[0x1E4F67098], MEMORY[0x1E4F67090]);
}

uint64_t (*MedicationsSettingsManager.areDoseRemindersEnabled.modify(void *a1))()
{
  uint64_t v2 = malloc(0x40uLL);
  *a1 = v2;
  swift_beginAccess();
  sub_1C2AE0050(0, (unint64_t *)&unk_1EBF0FD70, MEMORY[0x1E4FBB390], MEMORY[0x1E4F67098]);
  v2[7] = sub_1C2B738C0();
  return sub_1C2B3BB5C;
}

uint64_t MedicationsSettingsManager.areFollowUpNotificationsEnabled.getter()
{
  return sub_1C2AE0D28((unint64_t *)&unk_1EBF0FD70, MEMORY[0x1E4F67098], &OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__areFollowUpNotificationsEnabled, MEMORY[0x1E4F67088]);
}

uint64_t MedicationsSettingsManager.areFollowUpNotificationsEnabled.setter(char a1)
{
  return sub_1C2B3BD74(a1, (uint64_t)&OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__areFollowUpNotificationsEnabled, (unint64_t *)&unk_1EBF0FD70, MEMORY[0x1E4F67098], MEMORY[0x1E4F67090]);
}

uint64_t (*MedicationsSettingsManager.areFollowUpNotificationsEnabled.modify(void *a1))()
{
  uint64_t v2 = malloc(0x40uLL);
  *a1 = v2;
  swift_beginAccess();
  sub_1C2AE0050(0, (unint64_t *)&unk_1EBF0FD70, MEMORY[0x1E4FBB390], MEMORY[0x1E4F67098]);
  v2[7] = sub_1C2B738C0();
  return sub_1C2B3BB5C;
}

uint64_t MedicationsSettingsManager.didShowLifeStyleFactorsSelectionPage.getter()
{
  return sub_1C2AE0D28((unint64_t *)&unk_1EBF0FD70, MEMORY[0x1E4F67098], &OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__didShowLifeStyleFactorsSelectionPage, MEMORY[0x1E4F67088]);
}

uint64_t MedicationsSettingsManager.didShowLifeStyleFactorsSelectionPage.setter(char a1)
{
  return sub_1C2B3BD74(a1, (uint64_t)&OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__didShowLifeStyleFactorsSelectionPage, (unint64_t *)&unk_1EBF0FD70, MEMORY[0x1E4F67098], MEMORY[0x1E4F67090]);
}

uint64_t (*MedicationsSettingsManager.didShowLifeStyleFactorsSelectionPage.modify(void *a1))()
{
  uint64_t v2 = malloc(0x40uLL);
  *a1 = v2;
  swift_beginAccess();
  sub_1C2AE0050(0, (unint64_t *)&unk_1EBF0FD70, MEMORY[0x1E4FBB390], MEMORY[0x1E4F67098]);
  v2[7] = sub_1C2B738C0();
  return sub_1C2B3BB5C;
}

uint64_t MedicationsSettingsManager.didDismissCHRAddAccountTileInCategoryRoom.setter(char a1)
{
  return sub_1C2B3BD74(a1, (uint64_t)&OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__didDismissCHRAddAccountTileInCategoryRoom, (unint64_t *)&unk_1EBF0FD70, MEMORY[0x1E4F67098], MEMORY[0x1E4F67090]);
}

uint64_t (*MedicationsSettingsManager.didDismissCHRAddAccountTileInCategoryRoom.modify(void *a1))()
{
  uint64_t v2 = malloc(0x40uLL);
  *a1 = v2;
  swift_beginAccess();
  sub_1C2AE0050(0, (unint64_t *)&unk_1EBF0FD70, MEMORY[0x1E4FBB390], MEMORY[0x1E4F67098]);
  v2[7] = sub_1C2B738C0();
  return sub_1C2B3BB5C;
}

uint64_t MedicationsSettingsManager.didDismissFollowUpTip.getter()
{
  return sub_1C2AE0D28((unint64_t *)&unk_1EBF0FD70, MEMORY[0x1E4F67098], &OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__didDismissFollowUpTip, MEMORY[0x1E4F67088]);
}

uint64_t MedicationsSettingsManager.didDismissFollowUpTip.setter(char a1)
{
  return sub_1C2B3BD74(a1, (uint64_t)&OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__didDismissFollowUpTip, (unint64_t *)&unk_1EBF0FD70, MEMORY[0x1E4F67098], MEMORY[0x1E4F67090]);
}

uint64_t (*MedicationsSettingsManager.didDismissFollowUpTip.modify(void *a1))()
{
  uint64_t v2 = malloc(0x40uLL);
  *a1 = v2;
  swift_beginAccess();
  sub_1C2AE0050(0, (unint64_t *)&unk_1EBF0FD70, MEMORY[0x1E4FBB390], MEMORY[0x1E4F67098]);
  v2[7] = sub_1C2B738C0();
  return sub_1C2B3BB5C;
}

uint64_t MedicationsSettingsManager.scheduleCompatibilityTileDismissalDate.getter()
{
  return sub_1C2B3CEFC(&OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__scheduleCompatibilityTileDismissalDate);
}

uint64_t MedicationsSettingsManager.scheduleCompatibilityTileDismissalDate.setter(uint64_t a1)
{
  return sub_1C2B3D2C8(a1);
}

uint64_t (*MedicationsSettingsManager.scheduleCompatibilityTileDismissalDate.modify(void *a1))()
{
  uint64_t v2 = malloc(0x40uLL);
  *a1 = v2;
  swift_beginAccess();
  sub_1C2AE0F18(0, &qword_1EBF0FD88, (uint64_t (*)(uint64_t))sub_1C2AE0F7C, MEMORY[0x1E4F67098]);
  v2[7] = sub_1C2B738C0();
  return sub_1C2B3BB5C;
}

uint64_t MedicationsSettingsManager.scheduleCompatibilityLearnMoreOverrideURL.getter()
{
  sub_1C2AE0E9C();
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v5 = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = v0
     + OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__scheduleCompatibilityLearnMoreOverrideURL;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  sub_1C2B738D0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v8[1];
}

double sub_1C2B3C6E8@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1C2AE0E9C();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *a1
     + OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__scheduleCompatibilityLearnMoreOverrideURL;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
  sub_1C2B738D0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  double result = v11[0];
  *a2 = *(_OWORD *)v11;
  return result;
}

uint64_t sub_1C2B3C80C()
{
  return swift_endAccess();
}

uint64_t MedicationsSettingsManager.scheduleCompatibilityLearnMoreOverrideURL.setter()
{
  return swift_endAccess();
}

uint64_t (*MedicationsSettingsManager.scheduleCompatibilityLearnMoreOverrideURL.modify(void *a1))()
{
  uint64_t v2 = malloc(0x40uLL);
  *a1 = v2;
  swift_beginAccess();
  sub_1C2AE0E9C();
  v2[7] = sub_1C2B738C0();
  return sub_1C2B3BB5C;
}

uint64_t MedicationsSettingsManager.isShardCheckOverrideEnabled.getter()
{
  return sub_1C2AE0D28((unint64_t *)&unk_1EBF0FD70, MEMORY[0x1E4F67098], &OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__isShardCheckOverrideEnabled, MEMORY[0x1E4F67088]);
}

uint64_t MedicationsSettingsManager.isShardCheckOverrideEnabled.setter(char a1)
{
  return sub_1C2B3BD74(a1, (uint64_t)&OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__isShardCheckOverrideEnabled, (unint64_t *)&unk_1EBF0FD70, MEMORY[0x1E4F67098], MEMORY[0x1E4F67090]);
}

uint64_t (*MedicationsSettingsManager.isShardCheckOverrideEnabled.modify(void *a1))()
{
  uint64_t v2 = malloc(0x40uLL);
  *a1 = v2;
  swift_beginAccess();
  sub_1C2AE0050(0, (unint64_t *)&unk_1EBF0FD70, MEMORY[0x1E4FBB390], MEMORY[0x1E4F67098]);
  v2[7] = sub_1C2B738C0();
  return sub_1C2B3BB5C;
}

uint64_t MedicationsSettingsManager.allowEndDatesInPast.getter()
{
  return sub_1C2AE0D28((unint64_t *)&unk_1EBF0FD70, MEMORY[0x1E4F67098], &OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__allowEndDatesInPast, MEMORY[0x1E4F67088]);
}

uint64_t MedicationsSettingsManager.allowEndDatesInPast.setter(char a1)
{
  return sub_1C2B3BD74(a1, (uint64_t)&OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__allowEndDatesInPast, (unint64_t *)&unk_1EBF0FD70, MEMORY[0x1E4F67098], MEMORY[0x1E4F67090]);
}

uint64_t (*MedicationsSettingsManager.allowEndDatesInPast.modify(void *a1))()
{
  uint64_t v2 = malloc(0x40uLL);
  *a1 = v2;
  swift_beginAccess();
  sub_1C2AE0050(0, (unint64_t *)&unk_1EBF0FD70, MEMORY[0x1E4FBB390], MEMORY[0x1E4F67098]);
  v2[7] = sub_1C2B738C0();
  return sub_1C2B3BB5C;
}

uint64_t MedicationsSettingsManager.alwaysShowLifeStyleFactorsSelectionPage.getter()
{
  return sub_1C2AE0D28((unint64_t *)&unk_1EBF0FD70, MEMORY[0x1E4F67098], &OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__alwaysShowLifeStyleFactorsSelectionPage, MEMORY[0x1E4F67088]);
}

uint64_t MedicationsSettingsManager.alwaysShowLifeStyleFactorsSelectionPage.setter(char a1)
{
  return sub_1C2B3BD74(a1, (uint64_t)&OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__alwaysShowLifeStyleFactorsSelectionPage, (unint64_t *)&unk_1EBF0FD70, MEMORY[0x1E4F67098], MEMORY[0x1E4F67090]);
}

uint64_t (*MedicationsSettingsManager.alwaysShowLifeStyleFactorsSelectionPage.modify(void *a1))()
{
  uint64_t v2 = malloc(0x40uLL);
  *a1 = v2;
  swift_beginAccess();
  sub_1C2AE0050(0, (unint64_t *)&unk_1EBF0FD70, MEMORY[0x1E4FBB390], MEMORY[0x1E4F67098]);
  v2[7] = sub_1C2B738C0();
  return sub_1C2B3BB5C;
}

uint64_t MedicationsSettingsManager.showMinorDrugInteractions.setter(char a1)
{
  return sub_1C2B3BD74(a1, (uint64_t)&OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__showMinorDrugInteractions, (unint64_t *)&unk_1EBF0FD70, MEMORY[0x1E4F67098], MEMORY[0x1E4F67090]);
}

uint64_t (*MedicationsSettingsManager.showMinorDrugInteractions.modify(void *a1))()
{
  uint64_t v2 = malloc(0x40uLL);
  *a1 = v2;
  swift_beginAccess();
  sub_1C2AE0050(0, (unint64_t *)&unk_1EBF0FD70, MEMORY[0x1E4FBB390], MEMORY[0x1E4F67098]);
  v2[7] = sub_1C2B738C0();
  return sub_1C2B3BB5C;
}

uint64_t MedicationsSettingsManager.timeZoneExperienceEnabled.getter()
{
  return sub_1C2AE0D28((unint64_t *)&unk_1EBF0FD70, MEMORY[0x1E4F67098], &OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__timeZoneExperienceEnabled, MEMORY[0x1E4F67088]);
}

uint64_t MedicationsSettingsManager.timeZoneExperienceEnabled.setter(char a1)
{
  return sub_1C2B3BD74(a1, (uint64_t)&OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__timeZoneExperienceEnabled, (unint64_t *)&unk_1EBF0FD70, MEMORY[0x1E4F67098], MEMORY[0x1E4F67090]);
}

uint64_t (*MedicationsSettingsManager.timeZoneExperienceEnabled.modify(void *a1))()
{
  uint64_t v2 = malloc(0x40uLL);
  *a1 = v2;
  swift_beginAccess();
  sub_1C2AE0050(0, (unint64_t *)&unk_1EBF0FD70, MEMORY[0x1E4FBB390], MEMORY[0x1E4F67098]);
  v2[7] = sub_1C2B738C0();
  return sub_1C2B3BB5C;
}

uint64_t MedicationsSettingsManager.medicationsCategoryRoomLastEnteredDate.getter()
{
  return sub_1C2B3CEFC(&OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__medicationsCategoryRoomLastEnteredDate);
}

uint64_t sub_1C2B3CEFC(void *a1)
{
  sub_1C2AE0F18(0, &qword_1EBF0FD88, (uint64_t (*)(uint64_t))sub_1C2AE0F7C, MEMORY[0x1E4F67098]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v10 - v6;
  uint64_t v8 = v1 + *a1;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  sub_1C2B738D0();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1C2B3D040(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  sub_1C2AE0F18(0, &qword_1EBF0FD88, (uint64_t (*)(uint64_t))sub_1C2AE0F7C, MEMORY[0x1E4F67098]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v13 - v9;
  uint64_t v11 = *a1 + *a4;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  sub_1C2B738D0();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1C2B3D18C(uint64_t a1)
{
  sub_1C2AE0F7C();
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v9 - v6;
  sub_1C2AF4520(a1, (uint64_t)&v9 - v6);
  sub_1C2AF4520((uint64_t)v7, (uint64_t)v5);
  swift_beginAccess();
  sub_1C2AE0F18(0, &qword_1EBF0FD88, (uint64_t (*)(uint64_t))sub_1C2AE0F7C, MEMORY[0x1E4F67098]);
  sub_1C2B738E0();
  swift_endAccess();
  return sub_1C2AFA240((uint64_t)v7);
}

uint64_t MedicationsSettingsManager.medicationsCategoryRoomLastEnteredDate.setter(uint64_t a1)
{
  return sub_1C2B3D2C8(a1);
}

uint64_t sub_1C2B3D2C8(uint64_t a1)
{
  sub_1C2AE0F7C();
  MEMORY[0x1F4188790](v2 - 8);
  sub_1C2AF4520(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  sub_1C2AE0F18(0, &qword_1EBF0FD88, (uint64_t (*)(uint64_t))sub_1C2AE0F7C, MEMORY[0x1E4F67098]);
  sub_1C2B738E0();
  swift_endAccess();
  return sub_1C2AFA240(a1);
}

uint64_t (*MedicationsSettingsManager.medicationsCategoryRoomLastEnteredDate.modify(void *a1))()
{
  uint64_t v2 = malloc(0x40uLL);
  *a1 = v2;
  swift_beginAccess();
  sub_1C2AE0F18(0, &qword_1EBF0FD88, (uint64_t (*)(uint64_t))sub_1C2AE0F7C, MEMORY[0x1E4F67098]);
  v2[7] = sub_1C2B738C0();
  return sub_1C2B3BB5C;
}

void sub_1C2B3D474(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 56))(*a1, 0);
  swift_endAccess();
  free(v1);
}

uint64_t MedicationsSettingsManager.deinit()
{
  uint64_t v1 = v0
     + OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__isAlcoholDrugInteractionFactorEnabled;
  uint64_t v2 = MEMORY[0x1E4FBB390];
  sub_1C2AE0050(0, &qword_1EBF0FE00, MEMORY[0x1E4FBB390], MEMORY[0x1E4F65FF8]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  v5(v1, v3);
  v5(v0+ OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__isMarijuanaDrugInteractionFactorEnabled, v4);
  v5(v0+ OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__isTobaccoDrugInteractionFactorEnabled, v4);
  uint64_t v6 = v0 + OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__areDoseRemindersEnabled;
  sub_1C2AE0050(0, (unint64_t *)&unk_1EBF0FD70, v2, MEMORY[0x1E4F67098]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v9(v6, v7);
  v9(v0 + OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__areFollowUpNotificationsEnabled, v8);
  v9(v0 + OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__didShowLifeStyleFactorsSelectionPage, v8);
  v9(v0+ OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__didDismissCHRAddAccountTileInCategoryRoom, v8);
  v9(v0 + OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__didDismissFollowUpTip, v8);
  uint64_t v10 = v0
      + OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__scheduleCompatibilityTileDismissalDate;
  sub_1C2AE0F18(0, &qword_1EBF0FD88, (uint64_t (*)(uint64_t))sub_1C2AE0F7C, MEMORY[0x1E4F67098]);
  uint64_t v12 = v11;
  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
  v13(v10, v11);
  uint64_t v14 = v0
      + OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__scheduleCompatibilityLearnMoreOverrideURL;
  sub_1C2AE0E9C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  v9(v0 + OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__isShardCheckOverrideEnabled, v8);
  v9(v0 + OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__allowEndDatesInPast, v8);
  v9(v0+ OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__alwaysShowLifeStyleFactorsSelectionPage, v8);
  v9(v0 + OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__showMinorDrugInteractions, v8);
  v9(v0 + OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__timeZoneExperienceEnabled, v8);
  v13(v0+ OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__medicationsCategoryRoomLastEnteredDate, v12);
  return v0;
}

uint64_t MedicationsSettingsManager.__deallocating_deinit()
{
  MedicationsSettingsManager.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C2B3D850@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1C2B3BB60(a1, &qword_1EBF0FE00, MEMORY[0x1E4F65FF8], &OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__isAlcoholDrugInteractionFactorEnabled, MEMORY[0x1E4F65FE8], a2);
}

uint64_t sub_1C2B3D8A0(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2B3BCA4(a1, a2, a3, a4, (uint64_t)&OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__isAlcoholDrugInteractionFactorEnabled, &qword_1EBF0FE00, MEMORY[0x1E4F65FF8], MEMORY[0x1E4F65FF0]);
}

uint64_t sub_1C2B3D8F0@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1C2B3BB60(a1, &qword_1EBF0FE00, MEMORY[0x1E4F65FF8], &OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__isMarijuanaDrugInteractionFactorEnabled, MEMORY[0x1E4F65FE8], a2);
}

uint64_t sub_1C2B3D940(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2B3BCA4(a1, a2, a3, a4, (uint64_t)&OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__isMarijuanaDrugInteractionFactorEnabled, &qword_1EBF0FE00, MEMORY[0x1E4F65FF8], MEMORY[0x1E4F65FF0]);
}

uint64_t sub_1C2B3D990@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1C2B3BB60(a1, &qword_1EBF0FE00, MEMORY[0x1E4F65FF8], &OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__isTobaccoDrugInteractionFactorEnabled, MEMORY[0x1E4F65FE8], a2);
}

uint64_t sub_1C2B3D9E0(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2B3BCA4(a1, a2, a3, a4, (uint64_t)&OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__isTobaccoDrugInteractionFactorEnabled, &qword_1EBF0FE00, MEMORY[0x1E4F65FF8], MEMORY[0x1E4F65FF0]);
}

uint64_t sub_1C2B3DA30@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1C2B3BB60(a1, (unint64_t *)&unk_1EBF0FD70, MEMORY[0x1E4F67098], &OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__areDoseRemindersEnabled, MEMORY[0x1E4F67088], a2);
}

uint64_t sub_1C2B3DA80(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2B3BCA4(a1, a2, a3, a4, (uint64_t)&OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__areDoseRemindersEnabled, (unint64_t *)&unk_1EBF0FD70, MEMORY[0x1E4F67098], MEMORY[0x1E4F67090]);
}

uint64_t sub_1C2B3DAD0@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1C2B3BB60(a1, (unint64_t *)&unk_1EBF0FD70, MEMORY[0x1E4F67098], &OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__areFollowUpNotificationsEnabled, MEMORY[0x1E4F67088], a2);
}

uint64_t sub_1C2B3DB20(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2B3BCA4(a1, a2, a3, a4, (uint64_t)&OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__areFollowUpNotificationsEnabled, (unint64_t *)&unk_1EBF0FD70, MEMORY[0x1E4F67098], MEMORY[0x1E4F67090]);
}

uint64_t sub_1C2B3DB70@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1C2B3BB60(a1, (unint64_t *)&unk_1EBF0FD70, MEMORY[0x1E4F67098], &OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__didShowLifeStyleFactorsSelectionPage, MEMORY[0x1E4F67088], a2);
}

uint64_t sub_1C2B3DBC0(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2B3BCA4(a1, a2, a3, a4, (uint64_t)&OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__didShowLifeStyleFactorsSelectionPage, (unint64_t *)&unk_1EBF0FD70, MEMORY[0x1E4F67098], MEMORY[0x1E4F67090]);
}

uint64_t sub_1C2B3DC10@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1C2B3BB60(a1, (unint64_t *)&unk_1EBF0FD70, MEMORY[0x1E4F67098], &OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__didDismissCHRAddAccountTileInCategoryRoom, MEMORY[0x1E4F67088], a2);
}

uint64_t sub_1C2B3DC60(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2B3BCA4(a1, a2, a3, a4, (uint64_t)&OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__didDismissCHRAddAccountTileInCategoryRoom, (unint64_t *)&unk_1EBF0FD70, MEMORY[0x1E4F67098], MEMORY[0x1E4F67090]);
}

uint64_t sub_1C2B3DCB0@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1C2B3BB60(a1, (unint64_t *)&unk_1EBF0FD70, MEMORY[0x1E4F67098], &OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__didDismissFollowUpTip, MEMORY[0x1E4F67088], a2);
}

uint64_t sub_1C2B3DD00(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2B3BCA4(a1, a2, a3, a4, (uint64_t)&OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__didDismissFollowUpTip, (unint64_t *)&unk_1EBF0FD70, MEMORY[0x1E4F67098], MEMORY[0x1E4F67090]);
}

uint64_t sub_1C2B3DD50(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2B3D040(a1, a2, a3, &OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__scheduleCompatibilityTileDismissalDate);
}

uint64_t sub_1C2B3DD70(uint64_t a1)
{
  return sub_1C2B3D18C(a1);
}

uint64_t sub_1C2B3DD98@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1C2B3BB60(a1, (unint64_t *)&unk_1EBF0FD70, MEMORY[0x1E4F67098], &OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__isShardCheckOverrideEnabled, MEMORY[0x1E4F67088], a2);
}

uint64_t sub_1C2B3DDE8(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2B3BCA4(a1, a2, a3, a4, (uint64_t)&OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__isShardCheckOverrideEnabled, (unint64_t *)&unk_1EBF0FD70, MEMORY[0x1E4F67098], MEMORY[0x1E4F67090]);
}

uint64_t sub_1C2B3DE38@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1C2B3BB60(a1, (unint64_t *)&unk_1EBF0FD70, MEMORY[0x1E4F67098], &OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__allowEndDatesInPast, MEMORY[0x1E4F67088], a2);
}

uint64_t sub_1C2B3DE88(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2B3BCA4(a1, a2, a3, a4, (uint64_t)&OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__allowEndDatesInPast, (unint64_t *)&unk_1EBF0FD70, MEMORY[0x1E4F67098], MEMORY[0x1E4F67090]);
}

uint64_t sub_1C2B3DED8@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1C2B3BB60(a1, (unint64_t *)&unk_1EBF0FD70, MEMORY[0x1E4F67098], &OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__alwaysShowLifeStyleFactorsSelectionPage, MEMORY[0x1E4F67088], a2);
}

uint64_t sub_1C2B3DF28(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2B3BCA4(a1, a2, a3, a4, (uint64_t)&OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__alwaysShowLifeStyleFactorsSelectionPage, (unint64_t *)&unk_1EBF0FD70, MEMORY[0x1E4F67098], MEMORY[0x1E4F67090]);
}

uint64_t sub_1C2B3DF78@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1C2B3BB60(a1, (unint64_t *)&unk_1EBF0FD70, MEMORY[0x1E4F67098], &OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__showMinorDrugInteractions, MEMORY[0x1E4F67088], a2);
}

uint64_t sub_1C2B3DFC8(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2B3BCA4(a1, a2, a3, a4, (uint64_t)&OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__showMinorDrugInteractions, (unint64_t *)&unk_1EBF0FD70, MEMORY[0x1E4F67098], MEMORY[0x1E4F67090]);
}

uint64_t sub_1C2B3E018@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1C2B3BB60(a1, (unint64_t *)&unk_1EBF0FD70, MEMORY[0x1E4F67098], &OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__timeZoneExperienceEnabled, MEMORY[0x1E4F67088], a2);
}

uint64_t sub_1C2B3E068(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2B3BCA4(a1, a2, a3, a4, (uint64_t)&OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__timeZoneExperienceEnabled, (unint64_t *)&unk_1EBF0FD70, MEMORY[0x1E4F67098], MEMORY[0x1E4F67090]);
}

uint64_t sub_1C2B3E0B8(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2B3D040(a1, a2, a3, &OBJC_IVAR____TtC27HealthMedicationsExperience26MedicationsSettingsManager__medicationsCategoryRoomLastEnteredDate);
}

uint64_t sub_1C2B3E0D8(uint64_t a1)
{
  return sub_1C2B3D18C(a1);
}

uint64_t sub_1C2B3E0F8()
{
  return type metadata accessor for MedicationsSettingsManager();
}

void sub_1C2B3E100()
{
  sub_1C2AE0050(319, &qword_1EBF0FE00, MEMORY[0x1E4FBB390], MEMORY[0x1E4F65FF8]);
  if (v0 <= 0x3F)
  {
    sub_1C2AE0050(319, (unint64_t *)&unk_1EBF0FD70, MEMORY[0x1E4FBB390], MEMORY[0x1E4F67098]);
    if (v1 <= 0x3F)
    {
      sub_1C2AE0F18(319, &qword_1EBF0FD88, (uint64_t (*)(uint64_t))sub_1C2AE0F7C, MEMORY[0x1E4F67098]);
      if (v2 <= 0x3F)
      {
        sub_1C2AE0E9C();
        if (v3 <= 0x3F) {
          swift_updateClassMetadata2();
        }
      }
    }
  }
}

uint64_t method lookup function for MedicationsSettingsManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationsSettingsManager);
}

uint64_t dispatch thunk of MedicationsSettingsManager.__allocating_init(healthStore:keyValueDomain:userDefaults:)()
{
  return (*(uint64_t (**)(void))(v0 + 224))();
}

uint64_t Publisher<>.filtered(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void v15[2] = a3;
  v15[1] = a2;
  uint64_t v4 = sub_1C2B73710();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4);
  sub_1C2B42EBC(255, &qword_1EA32C130, (uint64_t (*)(uint64_t))type metadata accessor for MedicationDoseEvent, MEMORY[0x1E4FBB320]);
  uint64_t v7 = sub_1C2B73B00();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v15 - v9;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v11 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v12 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v12 + v11, (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  sub_1C2B73D10();
  swift_release();
  swift_getWitnessTable();
  uint64_t v13 = sub_1C2B73D00();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v13;
}

uint64_t sub_1C2B3E580@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  uint64_t v38 = a2;
  uint64_t v37 = sub_1C2B73870();
  uint64_t v5 = *(void *)(v37 - 8);
  MEMORY[0x1F4188790](v37);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2B42EBC(0, (unint64_t *)&qword_1EBF11360, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v33 - v9;
  uint64_t v11 = sub_1C2B73710();
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v12);
  uint64_t v36 = (char *)&v33 - v17;
  uint64_t v18 = *a1;
  if (*a1)
  {
    uint64_t v39 = *(void *)(v18 + 16);
    if (v39)
    {
      uint64_t v42 = (void (**)(char *, char *, uint64_t))(v16 + 32);
      char v19 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
      uint64_t v40 = (uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
      uint64_t v35 = (void (**)(char *, uint64_t))(v5 + 8);
      uint64_t v33 = a3;
      uint64_t v34 = (void (**)(char *, uint64_t))(v16 + 8);
      swift_bridgeObjectRetain();
      uint64_t v20 = 0;
      uint64_t v41 = v18;
      uint64_t v21 = v39;
      while (1)
      {
        unint64_t v22 = *(void *)(v18 + 8 * v20 + 32);
        if (v22 >> 62)
        {
          swift_bridgeObjectRetain_n();
          uint64_t result = sub_1C2B749C0();
          if (!result)
          {
LABEL_4:
            swift_bridgeObjectRelease();
            (*v19)(v10, 1, 1, v11);
            goto LABEL_5;
          }
        }
        else
        {
          uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
          uint64_t result = swift_bridgeObjectRetain_n();
          if (!v23) {
            goto LABEL_4;
          }
        }
        if ((v22 & 0xC000000000000001) != 0)
        {
          uint64_t v24 = MEMORY[0x1C8766C90](0, v22);
        }
        else
        {
          if (!*(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            return result;
          }
          uint64_t v24 = *(void *)(v22 + 32);
          swift_retain();
        }
        swift_bridgeObjectRelease();
        id v25 = *(id *)(v24 + 16);
        swift_release();
        id v26 = objc_msgSend(v25, sel_startDate);

        sub_1C2B736E0();
        uint64_t v27 = *v42;
        (*v42)(v10, v14, v11);
        (*v19)(v10, 0, 1, v11);
        int v28 = (*v40)(v10, 1, v11);
        uint64_t v18 = v41;
        if (v28 != 1)
        {
          uint64_t v29 = v14;
          uint64_t v30 = v36;
          v27(v36, v10, v11);
          sub_1C2B73850();
          char v31 = sub_1C2B73840();
          (*v35)(v7, v37);
          uint64_t v32 = v30;
          uint64_t v14 = v29;
          uint64_t v21 = v39;
          (*v34)(v32, v11);
          if (v31) {
            goto LABEL_20;
          }
          goto LABEL_6;
        }
LABEL_5:
        sub_1C2B42DB8((uint64_t)v10, (unint64_t *)&qword_1EBF11360, MEMORY[0x1E4F27928]);
LABEL_6:
        ++v20;
        swift_bridgeObjectRelease();
        if (v21 == v20)
        {
          unint64_t v22 = MEMORY[0x1E4FBC860];
LABEL_20:
          uint64_t result = swift_bridgeObjectRelease();
          a3 = v33;
          goto LABEL_21;
        }
      }
    }
  }
  unint64_t v22 = MEMORY[0x1E4FBC860];
LABEL_21:
  *a3 = v22;
  return result;
}

uint64_t sub_1C2B3E9F0()
{
  uint64_t v1 = sub_1C2B73710();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1C2B3EA80@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_1C2B73710() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return sub_1C2B3E580(a1, v6, a2);
}

uint64_t Publisher<>.medicationsWithActiveSchedules(scheduleControl:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v21 = a3;
  uint64_t v7 = *(void *)(a2 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](a1);
  sub_1C2B3ED78();
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v4, a2);
  unint64_t v14 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v15 = (char *)swift_allocObject();
  uint64_t v16 = v21;
  *((void *)v15 + 2) = a2;
  *((void *)v15 + 3) = v16;
  *((void *)v15 + 4) = a1;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v15[v14], (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a2);
  sub_1C2B3EE0C();
  sub_1C2B3F0A4(&qword_1EA32C148, (void (*)(uint64_t))sub_1C2B3EE0C);
  id v17 = a1;
  sub_1C2B73C90();
  sub_1C2B3F0A4(&qword_1EA32C150, (void (*)(uint64_t))sub_1C2B3ED78);
  uint64_t v18 = sub_1C2B73D00();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return v18;
}

void sub_1C2B3ED78()
{
  if (!qword_1EA32C138)
  {
    sub_1C2B3EE0C();
    sub_1C2B3F0A4(&qword_1EA32C148, (void (*)(uint64_t))sub_1C2B3EE0C);
    unint64_t v0 = sub_1C2B73CA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA32C138);
    }
  }
}

void sub_1C2B3EE0C()
{
  if (!qword_1EA32C140)
  {
    sub_1C2B3EEA0(255, &qword_1EBF11288, (unint64_t *)&qword_1EBF112D0, 0x1E4F66B80, MEMORY[0x1E4FBB320]);
    unint64_t v0 = sub_1C2B73C60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA32C140);
    }
  }
}

void sub_1C2B3EEA0(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1C2AE3A18(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1C2B3EF08@<X0>(void *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v8 = *(void *)(a2 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x1F4188790](a1);
  (*(void (**)(char *))(v8 + 16))((char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v10 = (*(unsigned __int8 *)(v8 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = (char *)swift_allocObject();
  *((void *)v11 + 2) = a2;
  *((void *)v11 + 3) = a3;
  *((void *)v11 + 4) = a1;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v11[v10], (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a2);
  sub_1C2B3EE0C();
  swift_allocObject();
  id v12 = a1;
  uint64_t result = sub_1C2B73C70();
  *a4 = result;
  return result;
}

uint64_t sub_1C2B3F060@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C2B3EF08(*(void **)(v1 + 32), *(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_1C2B3F0A4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C2B3F0EC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v24 = a6;
  uint64_t v11 = *(void *)(a5 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x1F4188790](a1);
  sub_1C2B42EBC(0, (unint64_t *)&unk_1EBF11290, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v23 - v14;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a1;
  *(void *)(v16 + 24) = a2;
  uint64_t v17 = sub_1C2B74310();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v15, 1, 1, v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a4, a5);
  unint64_t v18 = (*(unsigned __int8 *)(v11 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  char v19 = (char *)swift_allocObject();
  *((void *)v19 + 2) = 0;
  *((void *)v19 + 3) = 0;
  uint64_t v20 = v24;
  *((void *)v19 + 4) = a5;
  *((void *)v19 + 5) = v20;
  *((void *)v19 + 6) = a3;
  *((void *)v19 + 7) = sub_1C2B2E350;
  *((void *)v19 + 8) = v16;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v19[v18], (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a5);
  swift_retain();
  id v21 = a3;
  sub_1C2B40080((uint64_t)v15, (uint64_t)&unk_1EA32C1E0, (uint64_t)v19);
  return swift_release();
}

uint64_t sub_1C2B3F334(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[21] = a8;
  v8[22] = v13;
  v8[19] = a6;
  v8[20] = a7;
  v8[17] = a4;
  v8[18] = a5;
  uint64_t v9 = sub_1C2B73BA0();
  v8[23] = v9;
  v8[24] = *(void *)(v9 - 8);
  v8[25] = swift_task_alloc();
  uint64_t v10 = sub_1C2B73B90();
  v8[26] = v10;
  v8[27] = *(void *)(v10 - 8);
  v8[28] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C2B3F474, 0, 0);
}

uint64_t sub_1C2B3F474()
{
  uint64_t v1 = (void *)v0[17];
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_1C2B3F570;
  uint64_t v2 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1C2B3FC38;
  v0[13] = &block_descriptor_25;
  v0[14] = v2;
  objc_msgSend(v1, sel_fetchAllSchedulesWithCompletion_, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1C2B3F570()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 232) = v1;
  if (v1) {
    uint64_t v2 = sub_1C2B3FBB8;
  }
  else {
    uint64_t v2 = sub_1C2B3F680;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C2B3F680(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t WitnessTable)
{
  unint64_t v6 = *(void *)(v5 + 120);
  if (v6)
  {
    uint64_t v18 = MEMORY[0x1E4FBC860];
    if (v6 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v7 = sub_1C2B749C0();
      a1 = swift_bridgeObjectRelease();
      if (v7) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v7)
      {
LABEL_4:
        if (v7 < 1)
        {
          __break(1u);
          return MEMORY[0x1F4187C88](a1, a2, a3, a4, WitnessTable);
        }
        for (uint64_t i = 0; i != v7; ++i)
        {
          if ((v6 & 0xC000000000000001) != 0) {
            id v9 = (id)MEMORY[0x1C8766C90](i, v6);
          }
          else {
            id v9 = *(id *)(v6 + 8 * i + 32);
          }
          uint64_t v10 = v9;
          if (objc_msgSend(v9, sel_isUnavailable))
          {
          }
          else
          {
            sub_1C2B748D0();
            sub_1C2B74910();
            sub_1C2B74920();
            sub_1C2B748E0();
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v11 = v18;
LABEL_19:
        *(void *)(v5 + 240) = v11;
        uint64_t v15 = *(void *)(v5 + 192);
        uint64_t v14 = *(void *)(v5 + 200);
        uint64_t v16 = *(void *)(v5 + 184);
        MEMORY[0x1C87661B0](*(void *)(v5 + 168), *(void *)(v5 + 176));
        sub_1C2B73B80();
        (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
        uint64_t v17 = (void *)swift_task_alloc();
        *(void *)(v5 + 248) = v17;
        uint64_t WitnessTable = swift_getWitnessTable();
        *uint64_t v17 = v5;
        v17[1] = sub_1C2B3F92C;
        a4 = *(void *)(v5 + 208);
        a1 = v5 + 128;
        a2 = 0;
        a3 = 0;
        return MEMORY[0x1F4187C88](a1, a2, a3, a4, WitnessTable);
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v11 = MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  (*(void (**)(void, void))(v5 + 144))(MEMORY[0x1E4FBC860], 0);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v5 + 8);
  return v12();
}

uint64_t sub_1C2B3F92C()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C2B3FA28, 0, 0);
}

uint64_t sub_1C2B3FA28()
{
  if (v0[16])
  {
    uint64_t v1 = (void (*)(uint64_t, void))v0[18];
    uint64_t v2 = sub_1C2B3FD50(v0[30], v0[16]);
    swift_bridgeObjectRelease();
    v1(v2, 0);
    swift_bridgeObjectRelease();
    uint64_t v3 = (void *)swift_task_alloc();
    v0[31] = v3;
    uint64_t WitnessTable = swift_getWitnessTable();
    void *v3 = v0;
    v3[1] = sub_1C2B3F92C;
    uint64_t v5 = v0[26];
    return MEMORY[0x1F4187C88](v0 + 16, 0, 0, v5, WitnessTable);
  }
  else
  {
    (*(void (**)(void, void))(v0[27] + 8))(v0[28], v0[26]);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
}

uint64_t sub_1C2B3FBB8()
{
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C2B3FC38(uint64_t a1, uint64_t a2, void *a3)
{
  sub_1C2B42E28();
  uint64_t v6 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_1C2AF44C8();
    swift_allocError();
    *uint64_t v7 = a3;
    id v8 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    if (a2)
    {
      sub_1C2AE3A18(0, (unint64_t *)&qword_1EBF112A0);
      uint64_t v10 = sub_1C2B741D0();
    }
    else
    {
      uint64_t v10 = 0;
    }
    uint64_t v11 = v10;
    sub_1C2B42998((uint64_t)&v11, *(void *)(*(void *)(v6 + 64) + 40), &qword_1EBF10788, &qword_1EBF10780, (unint64_t *)&qword_1EBF112A0, 0x1E4F66B28);
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_1C2B3FD50(unint64_t a1, unint64_t a2)
{
  if (!(a1 >> 62))
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v5) {
      goto LABEL_3;
    }
    return MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1C2B749C0();
  swift_bridgeObjectRelease();
  if (!v2) {
    return MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1C2B749C0();
  swift_bridgeObjectRelease();
  if (!v5)
  {
    uint64_t v2 = MEMORY[0x1E4FBC860];
    goto LABEL_15;
  }
LABEL_3:
  unint64_t v24 = MEMORY[0x1E4FBC860];
  sub_1C2B1DA18(0, v5 & ~(v5 >> 63), 0);
  if (v5 < 0)
  {
    __break(1u);
    goto LABEL_34;
  }
  unint64_t v23 = a2;
  uint64_t v6 = 0;
  uint64_t v2 = v24;
  do
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v7 = (id)MEMORY[0x1C8766C90](v6, a1);
    }
    else {
      id v7 = *(id *)(a1 + 8 * v6 + 32);
    }
    id v8 = v7;
    id v9 = objc_msgSend(v7, sel_medicationIdentifier);
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = sub_1C2B73FA0();
      uint64_t v13 = v12;
    }
    else
    {

      uint64_t v11 = 0;
      uint64_t v13 = 0;
    }
    unint64_t v15 = *(void *)(v24 + 16);
    unint64_t v14 = *(void *)(v24 + 24);
    if (v15 >= v14 >> 1) {
      sub_1C2B1DA18(v14 > 1, v15 + 1, 1);
    }
    ++v6;
    *(void *)(v24 + 16) = v15 + 1;
    unint64_t v16 = v24 + 16 * v15;
    *(void *)(v16 + 32) = v11;
    *(void *)(v16 + 40) = v13;
  }
  while (v5 != v6);
  a2 = v23;
LABEL_15:
  unint64_t v24 = MEMORY[0x1E4FBC860];
  if (!(a2 >> 62))
  {
    uint64_t v17 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v17) {
      goto LABEL_17;
    }
LABEL_35:
    swift_bridgeObjectRelease();
    uint64_t v22 = sub_1C2B646C0(v24, v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v22;
  }
LABEL_34:
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C2B749C0();
  uint64_t v17 = result;
  if (!result) {
    goto LABEL_35;
  }
LABEL_17:
  if (v17 >= 1)
  {
    if ((a2 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v17; ++i)
      {
        MEMORY[0x1C8766C90](i, a2);
        MEMORY[0x1C87665F0]();
        if (*(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C2B74210();
        }
        sub_1C2B74250();
        sub_1C2B741F0();
      }
    }
    else
    {
      for (uint64_t j = 0; j != v17; ++j)
      {
        id v21 = *(id *)(a2 + 8 * j + 32);
        MEMORY[0x1C87665F0]();
        if (*(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C2B74210();
        }
        sub_1C2B74250();
        sub_1C2B741F0();
      }
    }
    goto LABEL_35;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C2B40080(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1C2B74310();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_1C2B74300();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_1C2B42DB8(a1, (unint64_t *)&unk_1EBF11290, MEMORY[0x1E4FBCFE8]);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1C2B742A0();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t Publisher<>.unavailableMedicationsSchedulesPublisher.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a1 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](a1);
  sub_1C2B42EBC(0, (unint64_t *)&unk_1EBF11290, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  id v9 = (char *)v16 - v8;
  sub_1C2B404A8();
  swift_allocObject();
  uint64_t v10 = sub_1C2B73BE0();
  uint64_t v11 = sub_1C2B74310();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v9, 1, 1, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v2, a1);
  unint64_t v12 = (*(unsigned __int8 *)(v5 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v13 = (char *)swift_allocObject();
  *((void *)v13 + 2) = 0;
  *((void *)v13 + 3) = 0;
  *((void *)v13 + 4) = a1;
  *((void *)v13 + 5) = a2;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v13[v12], (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  *(void *)&v13[(v6 + v12 + 7) & 0xFFFFFFFFFFFFFFF8] = v10;
  swift_retain();
  sub_1C2B32858((uint64_t)v9, (uint64_t)&unk_1EA32C178, (uint64_t)v13);
  swift_release();
  v16[1] = v10;
  sub_1C2B3F0A4(&qword_1EA32C180, (void (*)(uint64_t))sub_1C2B404A8);
  uint64_t v14 = sub_1C2B73D00();
  swift_release();
  return v14;
}

void sub_1C2B404A8()
{
  if (!qword_1EA32C158)
  {
    sub_1C2B42EBC(255, &qword_1EA32C160, (uint64_t (*)(uint64_t))sub_1C2B40540, MEMORY[0x1E4FBB718]);
    unint64_t v0 = sub_1C2B73BF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA32C158);
    }
  }
}

void sub_1C2B40540()
{
  if (!qword_1EA32C168)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB320];
    sub_1C2B3EEA0(255, &qword_1EBF11288, (unint64_t *)&qword_1EBF112D0, 0x1E4F66B80, MEMORY[0x1E4FBB320]);
    sub_1C2B3EEA0(255, &qword_1EBF10780, (unint64_t *)&qword_1EBF112A0, 0x1E4F66B28, v0);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v2) {
      atomic_store(TupleTypeMetadata2, &qword_1EA32C168);
    }
  }
}

uint64_t sub_1C2B40608(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[13] = a6;
  v7[14] = a7;
  v7[11] = a4;
  v7[12] = a5;
  uint64_t v8 = sub_1C2B73BA0();
  v7[15] = v8;
  v7[16] = *(void *)(v8 - 8);
  v7[17] = swift_task_alloc();
  uint64_t v9 = sub_1C2B73B90();
  v7[18] = v9;
  v7[19] = *(void *)(v9 - 8);
  v7[20] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C2B40740, 0, 0);
}

uint64_t sub_1C2B40740()
{
  uint64_t v2 = v0[16];
  uint64_t v1 = v0[17];
  uint64_t v3 = v0[15];
  MEMORY[0x1C87661B0](v0[13], v0[14]);
  sub_1C2B73B80();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[21] = v4;
  uint64_t WitnessTable = swift_getWitnessTable();
  *uint64_t v4 = v0;
  v4[1] = sub_1C2B40868;
  uint64_t v6 = v0[18];
  return MEMORY[0x1F4187C88](v0 + 2, 0, 0, v6, WitnessTable);
}

uint64_t sub_1C2B40868()
{
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C2B40964, 0, 0);
}

uint64_t sub_1C2B40964()
{
  uint64_t v1 = v0 + 2;
  unint64_t v2 = v0[2];
  if (v2)
  {
    unint64_t v3 = v0[3];
    if (v2 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v16 = sub_1C2B749C0();
      swift_bridgeObjectRelease();
      if (!v16) {
        goto LABEL_29;
      }
    }
    else if (!*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_29;
    }
    if (v3)
    {
      uint64_t v4 = v0 + 10;
      if (v3 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v17 = sub_1C2B749C0();
        swift_bridgeObjectRelease();
        if (v17)
        {
          id v21 = v0 + 2;
          *uint64_t v4 = MEMORY[0x1E4FBC860];
          swift_bridgeObjectRetain();
          uint64_t v5 = sub_1C2B749C0();
          swift_bridgeObjectRelease();
          if (!v5)
          {
            swift_bridgeObjectRelease();
            unint64_t v9 = MEMORY[0x1E4FBC860];
LABEL_18:
            uint64_t v1 = v21;
            uint64_t v10 = sub_1C2B3FD50(v9, v2);
            swift_bridgeObjectRelease();
            v0[6] = v10;
            v0[7] = v9;
            sub_1C2B73BD0();
            swift_bridgeObjectRelease();
            swift_release();
LABEL_30:
            uint64_t v18 = (void *)swift_task_alloc();
            v0[21] = v18;
            uint64_t WitnessTable = swift_getWitnessTable();
            *uint64_t v18 = v0;
            v18[1] = sub_1C2B40868;
            uint64_t v20 = v0[18];
            return MEMORY[0x1F4187C88](v1, 0, 0, v20, WitnessTable);
          }
          if (v5 >= 1)
          {
LABEL_8:
            for (uint64_t i = 0; i != v5; ++i)
            {
              if ((v3 & 0xC000000000000001) != 0) {
                id v7 = (id)MEMORY[0x1C8766C90](i, v3);
              }
              else {
                id v7 = *(id *)(v3 + 8 * i + 32);
              }
              uint64_t v8 = v7;
              if (objc_msgSend(v7, sel_isUnavailable, v21))
              {
                sub_1C2B748D0();
                sub_1C2B74910();
                sub_1C2B74920();
                sub_1C2B748E0();
              }
              else
              {
              }
            }
            swift_bridgeObjectRelease();
            unint64_t v9 = *v4;
            goto LABEL_18;
          }
          __break(1u);
        }
      }
      else
      {
        uint64_t v5 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v5)
        {
          id v21 = v0 + 2;
          *uint64_t v4 = MEMORY[0x1E4FBC860];
          goto LABEL_8;
        }
      }
LABEL_29:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v0[8] = 0;
      v0[9] = 0;
      sub_1C2B73BD0();
      goto LABEL_30;
    }
    uint64_t v12 = v0[19];
    uint64_t v11 = v0[20];
    uint64_t v13 = v0[18];
    swift_bridgeObjectRelease();
    v0[4] = 0;
    v0[5] = 0;
    sub_1C2B73BD0();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  }
  else
  {
    (*(void (**)(void, void))(v0[19] + 8))(v0[20], v0[18]);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_1C2B40CE4()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  return MEMORY[0x1F4186498](v0, v6, v5);
}

uint64_t sub_1C2B40DC4(uint64_t a1)
{
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  unint64_t v6 = (*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v7 = v1[2];
  uint64_t v8 = v1[3];
  uint64_t v9 = (uint64_t)v1 + v6;
  uint64_t v10 = *(void *)((char *)v1 + ((*(void *)(*(void *)(v4 - 8) + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  void *v11 = v2;
  v11[1] = sub_1C2AF9A8C;
  return sub_1C2B40608(a1, v7, v8, v9, v10, v4, v5);
}

uint64_t Publisher<>.remoteScheduleUnavailableAlertDeterminerPublisher(medicationControl:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v22 = a3;
  unint64_t v23 = a1;
  uint64_t v5 = *(void *)(a2 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2B42EBC(0, (unint64_t *)&unk_1EBF11290, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v21 - v9;
  sub_1C2B41198();
  swift_allocObject();
  uint64_t v11 = sub_1C2B73BE0();
  uint64_t v12 = sub_1C2B74310();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v10, 1, 1, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v3, a2);
  unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v14 = (v6 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = (char *)swift_allocObject();
  *((void *)v15 + 2) = 0;
  *((void *)v15 + 3) = 0;
  uint64_t v16 = v22;
  *((void *)v15 + 4) = a2;
  *((void *)v15 + 5) = v16;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v15[v13], v7, a2);
  *(void *)&v15[v14] = v11;
  uint64_t v17 = v23;
  *(void *)&v15[(v14 + 15) & 0xFFFFFFFFFFFFFFF8] = v23;
  swift_retain();
  id v18 = v17;
  sub_1C2B32858((uint64_t)v10, (uint64_t)&unk_1EA32C1A0, (uint64_t)v15);
  swift_release();
  uint64_t v24 = v11;
  sub_1C2B3F0A4(&qword_1EA32C1A8, (void (*)(uint64_t))sub_1C2B41198);
  uint64_t v19 = sub_1C2B73D00();
  swift_release();
  return v19;
}

void sub_1C2B41198()
{
  if (!qword_1EA32C188)
  {
    sub_1C2B41200();
    unint64_t v0 = sub_1C2B73BF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA32C188);
    }
  }
}

void sub_1C2B41200()
{
  if (!qword_1EA32C190)
  {
    unint64_t v0 = sub_1C2B74630();
    if (!v1) {
      atomic_store(v0, &qword_1EA32C190);
    }
  }
}

uint64_t sub_1C2B41258(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[102] = a8;
  v8[101] = a7;
  v8[100] = a6;
  v8[99] = a5;
  v8[98] = a4;
  uint64_t v9 = sub_1C2B73BA0();
  v8[103] = v9;
  v8[104] = *(void *)(v9 - 8);
  v8[105] = swift_task_alloc();
  uint64_t v10 = sub_1C2B73B90();
  v8[106] = v10;
  v8[107] = *(void *)(v10 - 8);
  v8[108] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C2B4139C, 0, 0);
}

uint64_t sub_1C2B4139C()
{
  uint64_t v1 = v0[105];
  uint64_t v2 = v0[104];
  uint64_t v3 = v0[103];
  MEMORY[0x1C87661B0](v0[101], v0[102]);
  sub_1C2B73B80();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[109] = v4;
  uint64_t WitnessTable = swift_getWitnessTable();
  *uint64_t v4 = v0;
  v4[1] = sub_1C2B414CC;
  uint64_t v6 = v0[106];
  return MEMORY[0x1F4187C88](v0 + 93, 0, 0, v6, WitnessTable);
}

uint64_t sub_1C2B414CC()
{
  *(void *)(*(void *)v1 + 880) = v0;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C2B415CC, 0, 0);
}

uint64_t sub_1C2B415CC()
{
  unint64_t v1 = *(void *)(v0 + 744);
  *(void *)(v0 + 888) = v1;
  unint64_t v2 = *(void *)(v0 + 752);
  *(void *)(v0 + 896) = v2;
  if (v1)
  {
    if (v1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_1C2B749C0();
      swift_bridgeObjectRelease();
      if (v5) {
        goto LABEL_4;
      }
    }
    else if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_4:
      if (!v2)
      {
LABEL_7:
        uint64_t v3 = *(void **)(v0 + 800);
        *(void *)(v0 + 80) = v0;
        *(void *)(v0 + 120) = v0 + 776;
        *(void *)(v0 + 88) = sub_1C2B418D4;
        *(void *)(v0 + 656) = swift_continuation_init();
        *(void *)(v0 + 624) = MEMORY[0x1E4F143A8];
        *(void *)(v0 + 632) = 0x40000000;
        *(void *)(v0 + 640) = sub_1C2B424F0;
        *(void *)(v0 + 648) = &block_descriptor_1;
        objc_msgSend(v3, sel_allDismissedRemoteScheduleUnavailableRecordsWithCompletion_, v0 + 624);
        return MEMORY[0x1F41881E8](v0 + 80);
      }
      if (v2 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v6 = sub_1C2B749C0();
        swift_bridgeObjectRelease();
        if (v6) {
          goto LABEL_7;
        }
      }
      else if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_OWORD *)(v0 + 160) = 0u;
    *(_OWORD *)(v0 + 176) = 0u;
    *(_OWORD *)(v0 + 192) = 0u;
    *(_OWORD *)(v0 + 208) = 0u;
    *(_OWORD *)(v0 + 224) = 0u;
    *(_OWORD *)(v0 + 144) = 0u;
    sub_1C2B73BD0();
    sub_1C2B42608(v0 + 144);
    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 872) = v7;
    uint64_t WitnessTable = swift_getWitnessTable();
    *uint64_t v7 = v0;
    v7[1] = sub_1C2B414CC;
    uint64_t v9 = *(void *)(v0 + 848);
    return MEMORY[0x1F4187C88](v0 + 744, 0, 0, v9, WitnessTable);
  }
  (*(void (**)(void, void))(*(void *)(v0 + 856) + 8))(*(void *)(v0 + 864), *(void *)(v0 + 848));
  *(unsigned char *)(v0 + 928) = 1;
  sub_1C2B73BC0();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1C2B418D4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 112);
  *(void *)(*(void *)v0 + 904) = v1;
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v2 = sub_1C2B42080;
  }
  else
  {
    unint64_t v2 = sub_1C2B419F8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C2B419F8()
{
  uint64_t v1 = (void *)v0[100];
  v0[114] = v0[97];
  v0[2] = v0;
  v0[7] = v0 + 95;
  v0[3] = sub_1C2B41B04;
  v0[87] = swift_continuation_init();
  v0[83] = MEMORY[0x1E4F143A8];
  v0[84] = 0x40000000;
  v0[85] = sub_1C2B42664;
  v0[86] = &block_descriptor_13;
  objc_msgSend(v1, sel_accountDevicesInfoTriggeringUpdate_completion_, 1, v0 + 83);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1C2B41B04()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 920) = v1;
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v2 = sub_1C2B421A0;
  }
  else
  {
    unint64_t v2 = sub_1C2B41C34;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C2B41C34()
{
  unint64_t v1 = *(void *)(v0 + 896);
  unint64_t v2 = *(void **)(v0 + 760);
  unint64_t v3 = *(void *)(v0 + 912);
  if (v1 && v3)
  {
    if (v2)
    {
      uint64_t v4 = self;
      id v5 = v2;
      id v6 = objc_msgSend(v4, sel_sharedInstance);
      if (v6)
      {
        uint64_t v11 = v6;
        id v12 = objc_msgSend(v6, sel_getActivePairedDevice);

        if (v12)
        {
          id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F66BA8]), sel_initWithLocalPairedDevice_, v12);
        }
        else
        {
          id v13 = 0;
        }
        unint64_t v19 = *(void *)(v0 + 888);
        uint64_t v20 = *(void **)(v0 + 800);
        *(void *)(v0 + 728) = sub_1C2AE3A18(0, &qword_1EBF10028);
        *(void *)(v0 + 736) = &protocol witness table for HKMedicationControl;
        *(void *)(v0 + 704) = v20;
        *(void *)(v0 + 352) = v19;
        *(void *)(v0 + 360) = v1;
        *(void *)(v0 + 368) = v3;
        *(void *)(v0 + 376) = v5;
        *(void *)(v0 + 384) = v13;
        sub_1C2B059E8(v0 + 704, v0 + 392);
        id v21 = v13;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v22 = v5;
        id v35 = v21;
        id v23 = v20;
        swift_bridgeObjectRetain();
        id v24 = v22;
        uint64_t v25 = sub_1C2B086E0(v19, v1);
        id v26 = v24;
        sub_1C2B079E4(v25, v26);
        uint64_t v28 = v27;

        id v29 = v26;
        unint64_t v30 = sub_1C2B084F0(v28, v29);

        swift_bridgeObjectRelease();
        char v31 = objc_msgSend(v29, sel_localDeviceInfo);
        uint64_t v32 = sub_1C2B08998(v30, v3, v31, (uint64_t)v13);
        swift_bridgeObjectRelease();

        uint64_t v33 = sub_1C2B08C64(v25, v3, v29);
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_0(v0 + 704);
        *(void *)(v0 + 336) = v32;
        *(void *)(v0 + 344) = v33;
        sub_1C2B42734(v0 + 336, v0 + 240);
        sub_1C2B73BD0();

        sub_1C2B42608(v0 + 240);
        sub_1C2B42790(v0 + 336);
        uint64_t v34 = (void *)swift_task_alloc();
        *(void *)(v0 + 872) = v34;
        uint64_t WitnessTable = swift_getWitnessTable();
        *uint64_t v34 = v0;
        v34[1] = sub_1C2B414CC;
        uint64_t v9 = *(void *)(v0 + 848);
        id v6 = (id)(v0 + 744);
        uint64_t v7 = 0;
        uint64_t v8 = 0;
      }
      else
      {
        __break(1u);
      }
      return MEMORY[0x1F4187C88](v6, v7, v8, v9, WitnessTable);
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(v0 + 864);
  uint64_t v15 = *(void *)(v0 + 856);
  uint64_t v16 = *(void *)(v0 + 848);
  *(_OWORD *)(v0 + 432) = 0u;
  *(_OWORD *)(v0 + 448) = 0u;
  *(_OWORD *)(v0 + 464) = 0u;
  *(_OWORD *)(v0 + 480) = 0u;
  *(_OWORD *)(v0 + 496) = 0u;
  *(_OWORD *)(v0 + 512) = 0u;
  sub_1C2B73BD0();

  sub_1C2B42608(v0 + 432);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  *(unsigned char *)(v0 + 928) = 1;
  sub_1C2B73BC0();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
  return v17();
}

uint64_t sub_1C2B42080()
{
  swift_willThrow();
  unint64_t v1 = *(void **)(v0 + 904);
  *(_OWORD *)(v0 + 528) = 0u;
  *(_OWORD *)(v0 + 544) = 0u;
  *(_OWORD *)(v0 + 560) = 0u;
  *(_OWORD *)(v0 + 576) = 0u;
  *(_OWORD *)(v0 + 592) = 0u;
  *(_OWORD *)(v0 + 608) = 0u;
  sub_1C2B73BD0();

  sub_1C2B42608(v0 + 528);
  unint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 872) = v2;
  uint64_t WitnessTable = swift_getWitnessTable();
  *unint64_t v2 = v0;
  v2[1] = sub_1C2B414CC;
  uint64_t v4 = *(void *)(v0 + 848);
  return MEMORY[0x1F4187C88](v0 + 744, 0, 0, v4, WitnessTable);
}

uint64_t sub_1C2B421A0()
{
  swift_willThrow();
  unint64_t v1 = *(void **)(v0 + 920);
  *(_OWORD *)(v0 + 528) = 0u;
  *(_OWORD *)(v0 + 544) = 0u;
  *(_OWORD *)(v0 + 560) = 0u;
  *(_OWORD *)(v0 + 576) = 0u;
  *(_OWORD *)(v0 + 592) = 0u;
  *(_OWORD *)(v0 + 608) = 0u;
  sub_1C2B73BD0();

  sub_1C2B42608(v0 + 528);
  unint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 872) = v2;
  uint64_t WitnessTable = swift_getWitnessTable();
  *unint64_t v2 = v0;
  v2[1] = sub_1C2B414CC;
  uint64_t v4 = *(void *)(v0 + 848);
  return MEMORY[0x1F4187C88](v0 + 744, 0, 0, v4, WitnessTable);
}

uint64_t sub_1C2B422C0()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return MEMORY[0x1F4186498](v0, v6 + 8, v5);
}

uint64_t sub_1C2B423B0(uint64_t a1)
{
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  unint64_t v6 = (*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  unint64_t v7 = (*(void *)(*(void *)(v4 - 8) + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = v1[2];
  uint64_t v9 = v1[3];
  uint64_t v10 = (uint64_t)v1 + v6;
  uint64_t v11 = *(void *)((char *)v1 + v7);
  uint64_t v12 = *(void *)((char *)v1 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8));
  id v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *id v13 = v2;
  v13[1] = sub_1C2AFA544;
  return sub_1C2B41258(a1, v8, v9, v10, v11, v12, v4, v5);
}

uint64_t sub_1C2B424F0(uint64_t a1, uint64_t a2, void *a3)
{
  sub_1C2B427E4();
  uint64_t v6 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_1C2AF44C8();
    swift_allocError();
    *unint64_t v7 = a3;
    id v8 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    if (a2)
    {
      sub_1C2AE3A18(0, &qword_1EA32BC08);
      uint64_t v10 = sub_1C2B741D0();
    }
    else
    {
      uint64_t v10 = 0;
    }
    uint64_t v11 = v10;
    sub_1C2B42998((uint64_t)&v11, *(void *)(*(void *)(v6 + 64) + 40), &qword_1EA32C1D0, (unint64_t *)&qword_1EA32C0E8, &qword_1EA32BC08, 0x1E4F66AB0);
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_1C2B42608(uint64_t a1)
{
  sub_1C2B41200();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C2B42664(uint64_t a1, void *a2, void *a3)
{
  sub_1C2B427E4();
  uint64_t v6 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_1C2AF44C8();
    swift_allocError();
    *unint64_t v7 = a3;
    id v8 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    uint64_t v12 = a2;
    uint64_t v10 = *(void *)(*(void *)(v6 + 64) + 40);
    id v11 = a2;
    sub_1C2B42908((uint64_t)&v12, v10);
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_1C2B42734(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C2B42790(uint64_t a1)
{
  return a1;
}

unint64_t sub_1C2B427E4()
{
  unint64_t result = qword_1EA32C1B0;
  if (!qword_1EA32C1B0)
  {
    sub_1C2B4284C();
    unint64_t result = swift_getExtendedExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA32C1B0);
  }
  return result;
}

void sub_1C2B4284C()
{
  if (!qword_1EA32C1B8)
  {
    sub_1C2B3EEA0(255, &qword_1EBF11288, (unint64_t *)&qword_1EBF112D0, 0x1E4F66B80, MEMORY[0x1E4FBB320]);
    sub_1C2B42A0C(255, &qword_1EBF10788, &qword_1EBF10780, (unint64_t *)&qword_1EBF112A0, 0x1E4F66B28);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA32C1B8);
    }
  }
}

uint64_t sub_1C2B42908(uint64_t a1, uint64_t a2)
{
  sub_1C2B3EEA0(0, &qword_1EA32C1C0, &qword_1EA32C1C8, 0x1E4F66B90, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C2B42998(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, unint64_t *a5, uint64_t a6)
{
  sub_1C2B42A0C(0, a3, a4, a5, a6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a2, a1, v8);
  return a2;
}

void sub_1C2B42A0C(uint64_t a1, unint64_t *a2, unint64_t *a3, unint64_t *a4, uint64_t a5)
{
  if (!*a2)
  {
    sub_1C2B3EEA0(255, a3, a4, a5, MEMORY[0x1E4FBB320]);
    unint64_t v6 = sub_1C2B74630();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t objectdestroy_2Tm()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1C2B42B44(uint64_t a1, uint64_t a2)
{
  return sub_1C2B3F0EC(a1, a2, *(void **)(v2 + 32), v2+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v2 + 16) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v2 + 16) - 8) + 80)), *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1C2B42B88()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C2B42BC0()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 72) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1C2B42C94(uint64_t a1)
{
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v9 = v1[8];
  uint64_t v10 = (uint64_t)v1
      + ((*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80));
  id v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  void *v11 = v2;
  v11[1] = sub_1C2AF9A8C;
  return sub_1C2B3F334(a1, v5, v6, v7, v8, v9, v10, v4);
}

uint64_t sub_1C2B42DB8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C2B42EBC(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

unint64_t sub_1C2B42E28()
{
  unint64_t result = qword_1EA32C1E8;
  if (!qword_1EA32C1E8)
  {
    sub_1C2B3EEA0(255, &qword_1EBF11288, (unint64_t *)&qword_1EBF112D0, 0x1E4F66B80, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getExtendedExistentialTypeMetadata();
    atomic_store(result, &qword_1EA32C1E8);
  }
  return result;
}

void sub_1C2B42EBC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C2B42F20()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B0B8]), sel_init);
  type metadata accessor for MedicationDetailProvider();
  swift_allocObject();
  uint64_t v1 = sub_1C2B4B538(v0);

  qword_1EBF10AD8 = (uint64_t)v1;
}

uint64_t static MedicationDetailProvider.shared.getter()
{
  if (qword_1EBF10AE0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_retain();
}

uint64_t static MedicationDetailProvider.shared.setter(uint64_t a1)
{
  if (qword_1EBF10AE0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  qword_1EBF10AD8 = a1;
  return swift_release();
}

uint64_t (*static MedicationDetailProvider.shared.modify())()
{
  if (qword_1EBF10AE0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

void sub_1C2B43104(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1C2B73DF0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (void *)((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = (void *)v3[9];
  *uint64_t v9 = v10;
  (*(void (**)(void *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E4FBCBF0], v6);
  id v11 = v10;
  LOBYTE(v10) = sub_1C2B73E10();
  (*(void (**)(void *, uint64_t))(v7 + 8))(v9, v6);
  if ((v10 & 1) == 0)
  {
    __break(1u);
    return;
  }
  uint64_t v12 = (os_unfair_lock_s *)(v3[8] + 16);
  os_unfair_lock_lock(v12);
  swift_beginAccess();
  uint64_t v13 = v3[5];
  if (!*(void *)(v13 + 16)) {
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v14 = sub_1C2AE056C(a1, a2);
  if ((v15 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_9:
    os_unfair_lock_unlock(v12);
    return;
  }
  id v16 = *(id *)(*(void *)(v13 + 56) + 8 * v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(v12);
  if (v16)
  {
    swift_beginAccess();
    uint64_t v17 = v3[6];
    if (*(void *)(v17 + 16))
    {
      swift_bridgeObjectRetain();
      id v18 = v16;
      swift_bridgeObjectRetain();
      unint64_t v19 = sub_1C2AE056C(a1, a2);
      if (v20)
      {
        id v21 = *(id *)(*(void *)(v17 + 56) + 8 * v19);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        id v22 = (void *)swift_allocObject();
        uint64_t v22[2] = v18;
        v22[3] = a1;
        v22[4] = a2;
        aBlock[4] = sub_1C2B4B4C8;
        aBlock[5] = v22;
        aBlock[0] = MEMORY[0x1E4F143A8];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1C2B43410;
        aBlock[3] = &block_descriptor_82;
        id v23 = _Block_copy(aBlock);
        swift_bridgeObjectRetain();
        id v24 = v18;
        swift_release();
        objc_msgSend(v21, sel_notifyObservers_, v23);

        _Block_release(v23);
      }
      else
      {

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
    }
  }
}

uint64_t sub_1C2B43410(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_1C2B43470(uint64_t a1, uint64_t a2)
{
  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  uint64_t v4 = sub_1C2B73D90();
  v3[18] = v4;
  v3[19] = *(void *)(v4 - 8);
  v3[20] = swift_task_alloc();
  uint64_t v5 = sub_1C2B73DC0();
  v3[21] = v5;
  v3[22] = *(void *)(v5 - 8);
  v3[23] = swift_task_alloc();
  sub_1C2B4B260(0, &qword_1EBF10AA8, &qword_1EBF11368, 0x1E4F2B630, MEMORY[0x1E4F66878]);
  v3[24] = v6;
  v3[25] = *(void *)(v6 - 8);
  v3[26] = swift_task_alloc();
  sub_1C2B4B260(0, &qword_1EBF10AA0, &qword_1EBF11368, 0x1E4F2B630, MEMORY[0x1E4F66868]);
  v3[27] = v7;
  v3[28] = *(void *)(v7 - 8);
  v3[29] = swift_task_alloc();
  sub_1C2B4B260(0, &qword_1EBF10AB0, &qword_1EBF11368, 0x1E4F2B630, MEMORY[0x1E4F66880]);
  v3[30] = v8;
  v3[31] = *(void *)(v8 - 8);
  v3[32] = swift_task_alloc();
  uint64_t v9 = sub_1C2B73DF0();
  v3[33] = v9;
  v3[34] = *(void *)(v9 - 8);
  v3[35] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C2B4377C, 0, 0);
}

uint64_t sub_1C2B4377C()
{
  uint64_t v2 = v0[34];
  uint64_t v1 = (void *)v0[35];
  uint64_t v3 = v0[33];
  uint64_t v4 = *(void **)(v0[17] + 72);
  v0[36] = v4;
  *uint64_t v1 = v4;
  (*(void (**)(void *, void, uint64_t))(v2 + 104))(v1, *MEMORY[0x1E4FBCBD8], v3);
  id v5 = v4;
  LOBYTE(v4) = sub_1C2B73E10();
  uint64_t v6 = (*(uint64_t (**)(void *, uint64_t))(v2 + 8))(v1, v3);
  if ((v4 & 1) == 0)
  {
    __break(1u);
    return MEMORY[0x1F4187C78](v6, v7, v8);
  }
  uint64_t v9 = v0[17];
  uint64_t v10 = (os_unfair_lock_s *)(*(void *)(v9 + 64) + 16);
  os_unfair_lock_lock(v10);
  swift_beginAccess();
  uint64_t v11 = *(void *)(v9 + 40);
  if (!*(void *)(v11 + 16)) {
    goto LABEL_9;
  }
  uint64_t v13 = v0[15];
  uint64_t v12 = v0[16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v14 = sub_1C2AE056C(v13, v12);
  if ((v15 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_9:
    os_unfair_lock_unlock(v10);
LABEL_10:
    uint64_t v20 = v0[25];
    uint64_t v19 = v0[26];
    uint64_t v21 = v0[24];
    uint64_t v36 = v0[17];
    id v22 = self;
    sub_1C2AE3A18(0, (unint64_t *)&qword_1EBF112D0);
    id v23 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel__typeIdentifier, v36);
    id v24 = objc_msgSend(v22, sel_predicateForUserDomainConceptsWithTypeIdentifier_, v23);
    v0[37] = v24;

    uint64_t v25 = (void *)sub_1C2B73F60();
    id v26 = objc_msgSend(v22, sel_predicateForUserDomainConceptsWithSemanticIdentifier_, v25);
    v0[38] = v26;

    sub_1C2AE7E34();
    uint64_t v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_1C2B76A80;
    *(void *)(v27 + 32) = v24;
    *(void *)(v27 + 40) = v26;
    sub_1C2B741F0();
    sub_1C2AE3A18(0, &qword_1EBF11378);
    id v28 = v24;
    id v29 = v26;
    unint64_t v30 = (void *)sub_1C2B741C0();
    swift_bridgeObjectRelease();
    id v31 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v30);
    v0[39] = v31;

    sub_1C2AE3A18(0, &qword_1EBF11368);
    id v32 = v31;
    uint64_t v33 = MEMORY[0x1E4FBC860];
    sub_1C2B739E0();
    v0[11] = v33;
    sub_1C2B739D0();
    sub_1C2B739C0();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
    unint64_t v34 = sub_1C2B00108();
    id v35 = (void *)swift_task_alloc();
    v0[40] = v35;
    *id v35 = v0;
    v35[1] = sub_1C2B43BE0;
    uint64_t v7 = v0[27];
    uint64_t v6 = (uint64_t)(v0 + 12);
    unint64_t v8 = v34;
    return MEMORY[0x1F4187C78](v6, v7, v8);
  }
  id v16 = *(id *)(*(void *)(v11 + 56) + 8 * v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(v10);
  if (!v16) {
    goto LABEL_10;
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(id))v0[1];
  return v17(v16);
}

uint64_t sub_1C2B43BE0()
{
  *(void *)(*(void *)v1 + 328) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1C2B442A0;
  }
  else {
    uint64_t v2 = sub_1C2B43CF4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C2B43CF4()
{
  *(void *)(v0 + 336) = *(void *)(v0 + 96);
  return MEMORY[0x1F4188298](sub_1C2B43D18, 0, 0);
}

uint64_t sub_1C2B43D18()
{
  uint64_t v1 = (void *)v0[42];
  if (v1)
  {
    id v2 = v1;
    MEMORY[0x1C87665F0]();
    if (*(void *)((v0[11] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v0[11] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1C2B74210();
    }
    sub_1C2B74250();
    sub_1C2B741F0();

    unint64_t v3 = sub_1C2B00108();
    uint64_t v4 = (void *)swift_task_alloc();
    v0[40] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_1C2B43BE0;
    uint64_t v5 = v0[27];
    uint64_t v6 = (uint64_t)(v0 + 12);
    unint64_t v7 = v3;
    return MEMORY[0x1F4187C78](v6, v5, v7);
  }
  uint64_t v6 = (*(uint64_t (**)(void, void))(v0[28] + 8))(v0[29], v0[27]);
  unint64_t v8 = v0[11];
  if (!(v8 >> 62))
  {
    if (*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_9;
    }
LABEL_16:
    id v31 = (void *)v0[38];
    unint64_t v30 = (void *)v0[39];
    id v32 = (void *)v0[37];
    uint64_t v34 = v0[31];
    uint64_t v33 = v0[32];
    uint64_t v35 = v0[30];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v33, v35);

    goto LABEL_17;
  }
  swift_bridgeObjectRetain();
  uint64_t v29 = sub_1C2B749C0();
  uint64_t v6 = swift_bridgeObjectRelease();
  if (!v29) {
    goto LABEL_16;
  }
LABEL_9:
  if ((v8 & 0xC000000000000001) != 0)
  {
    id v9 = (id)MEMORY[0x1C8766C90](0, v8);
  }
  else
  {
    if (!*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return MEMORY[0x1F4187C78](v6, v5, v7);
    }
    id v9 = *(id *)(v8 + 32);
  }
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  id v11 = objc_msgSend(v10, sel_userConcept);
  self;
  uint64_t v12 = swift_dynamicCastObjCClass();
  unint64_t v14 = (void *)v0[38];
  uint64_t v13 = (void *)v0[39];
  char v15 = (void *)v0[37];
  if (!v12)
  {
    uint64_t v27 = v0[31];
    uint64_t v26 = v0[32];
    uint64_t v28 = v0[30];

    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
LABEL_17:
    uint64_t v16 = 0;
    goto LABEL_18;
  }
  uint64_t v16 = v12;
  uint64_t v44 = (void *)v0[39];
  uint64_t v48 = v0[32];
  uint64_t v46 = v0[31];
  uint64_t v47 = v0[30];
  uint64_t v17 = v0[23];
  uint64_t v45 = v0[21];
  uint64_t v38 = v0[20];
  uint64_t v42 = v0[19];
  uint64_t v43 = v0[22];
  uint64_t v40 = v10;
  uint64_t v18 = v0[18];
  uint64_t v41 = (void *)v0[38];
  uint64_t v20 = v0[15];
  uint64_t v19 = v0[16];
  uint64_t v39 = (void *)v0[37];
  uint64_t v21 = swift_allocObject();
  swift_weakInit();
  id v22 = (void *)swift_allocObject();
  uint64_t v22[2] = v21;
  v22[3] = v16;
  v22[4] = v20;
  v22[5] = v19;
  v0[6] = sub_1C2B4B47C;
  v0[7] = v22;
  v0[2] = MEMORY[0x1E4F143A8];
  v0[3] = 1107296256;
  v0[4] = sub_1C2B12CDC;
  v0[5] = &block_descriptor_76;
  id v23 = _Block_copy(v0 + 2);
  swift_bridgeObjectRetain();
  swift_retain();
  id v24 = v11;
  sub_1C2B73DB0();
  v0[14] = MEMORY[0x1E4FBC860];
  sub_1C2B4BB08((unint64_t *)&qword_1EBF10B50, MEMORY[0x1E4FBCB00]);
  uint64_t v25 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCB00];
  sub_1C2B4AFE0(0, &qword_1EBF10B58, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1C2B4B920((unint64_t *)&qword_1EBF10B60, &qword_1EBF10B58, v25);
  sub_1C2B74700();
  MEMORY[0x1C8766990](0, v17, v38, v23);

  _Block_release(v23);
  (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v38, v18);
  (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v17, v45);
  (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v48, v47);
  swift_release();
  swift_release();
LABEL_18:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v36 = (uint64_t (*)(uint64_t))v0[1];
  return v36(v16);
}

uint64_t sub_1C2B442A0()
{
  *(void *)(v0 + 104) = *(void *)(v0 + 328);
  sub_1C2AF44C8();
  swift_willThrowTypedImpl();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4188298](sub_1C2B44330, 0, 0);
}

uint64_t sub_1C2B44330()
{
  uint64_t v1 = *(void **)(v0 + 304);
  uint64_t v2 = *(void **)(v0 + 296);
  uint64_t v4 = *(void *)(v0 + 248);
  uint64_t v3 = *(void *)(v0 + 256);
  uint64_t v6 = *(void *)(v0 + 232);
  uint64_t v5 = *(void *)(v0 + 240);
  uint64_t v7 = *(void *)(v0 + 216);
  uint64_t v8 = *(void *)(v0 + 224);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_1C2B44444(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v8 = result;
    id v9 = (os_unfair_lock_s *)(*(void *)(result + 64) + 16);
    os_unfair_lock_lock(v9);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    id v10 = a2;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v12 = *(void *)(v8 + 40);
    *(void *)(v8 + 40) = 0x8000000000000000;
    sub_1C2B0111C((uint64_t)v10, a3, a4, isUniquelyReferenced_nonNull_native);
    *(void *)(v8 + 40) = v12;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    os_unfair_lock_unlock(v9);
    return swift_release();
  }
  return result;
}

uint64_t sub_1C2B44544(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v3;
  uint64_t v7 = sub_1C2B73D90();
  uint64_t v20 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  id v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1C2B73DC0();
  uint64_t v10 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = v3[9];
  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  unint64_t v14 = (void *)swift_allocObject();
  v14[2] = v13;
  v14[3] = a1;
  void v14[4] = a2;
  v14[5] = v6;
  aBlock[4] = sub_1C2B4B358;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C2B12CDC;
  aBlock[3] = &block_descriptor_53;
  char v15 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1C2B73DB0();
  uint64_t v21 = MEMORY[0x1E4FBC860];
  sub_1C2B4BB08((unint64_t *)&qword_1EBF10B50, MEMORY[0x1E4FBCB00]);
  uint64_t v16 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCB00];
  sub_1C2B4AFE0(0, &qword_1EBF10B58, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1C2B4B920((unint64_t *)&qword_1EBF10B60, &qword_1EBF10B58, v16);
  sub_1C2B74700();
  MEMORY[0x1C8766990](0, v12, v9, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v7);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v19);
  swift_release();
  return swift_release();
}

uint64_t sub_1C2B44890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v8 = result;
    swift_beginAccess();
    uint64_t v9 = *(void *)(v8 + 56);
    swift_bridgeObjectRetain();
    char v10 = sub_1C2B44CEC(a2, a3, v9);
    swift_bridgeObjectRelease();
    if ((v10 & 1) == 0)
    {
      swift_beginAccess();
      swift_bridgeObjectRetain();
      sub_1C2B46E5C(&v34, a2, a3);
      swift_endAccess();
      swift_bridgeObjectRelease();
      uint64_t v11 = self;
      sub_1C2AE3A18(0, (unint64_t *)&qword_1EBF112D0);
      id v12 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel__typeIdentifier);
      id v13 = objc_msgSend(v11, sel_predicateForUserDomainConceptsWithTypeIdentifier_, v12);

      unint64_t v14 = (void *)sub_1C2B73F60();
      id v15 = objc_msgSend(v11, sel_predicateForUserDomainConceptsWithSemanticIdentifier_, v14);

      sub_1C2AE7E34();
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_1C2B76A80;
      *(void *)(v16 + 32) = v13;
      *(void *)(v16 + 40) = v15;
      sub_1C2B741F0();
      sub_1C2AE3A18(0, &qword_1EBF11378);
      id v32 = v13;
      id v31 = v15;
      uint64_t v17 = (void *)sub_1C2B741C0();
      swift_bridgeObjectRelease();
      id v18 = objc_msgSend(self, sel_andPredicateWithSubpredicates_, v17);

      uint64_t v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = xmmword_1C2B764F0;
      sub_1C2B73FA0();
      uint64_t v20 = a4;
      id v21 = objc_allocWithZone(MEMORY[0x1E4F29008]);
      id v22 = v18;
      id v23 = (void *)sub_1C2B73F60();
      swift_bridgeObjectRelease();
      id v24 = objc_msgSend(v21, sel_initWithKey_ascending_, v23, 1);

      *(void *)(v19 + 32) = v24;
      sub_1C2B741F0();
      uint64_t v25 = swift_allocObject();
      swift_weakInit();
      uint64_t v26 = (void *)swift_allocObject();
      id v26[2] = v25;
      v26[3] = a2;
      v26[4] = a3;
      v26[5] = v20;
      id v27 = objc_allocWithZone(MEMORY[0x1E4F2B670]);
      sub_1C2AE3A18(0, (unint64_t *)&unk_1EBF11380);
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v28 = (void *)sub_1C2B741C0();
      swift_bridgeObjectRelease();
      aBlock[4] = sub_1C2B4B3A8;
      aBlock[5] = v26;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1C2B46A6C;
      aBlock[3] = &block_descriptor_60;
      uint64_t v29 = _Block_copy(aBlock);
      id v30 = objc_msgSend(v27, sel_initWithPredicate_anchor_limit_sortDescriptors_resultsHandler_, v22, 0, 1, v28, v29);

      _Block_release(v29);
      swift_release();
      swift_release();
      objc_msgSend(*(id *)(v8 + 16), sel_executeQuery_, v30);
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1C2B44CEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_1C2B74C20();
    sub_1C2B74070();
    uint64_t v6 = sub_1C2B74C60();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      uint64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_1C2B74B50() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          uint64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_1C2B74B50() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_1C2B44E24(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v33 = a7;
  uint64_t v34 = a5;
  uint64_t v11 = sub_1C2B73D90();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1C2B73DC0();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  id v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v31 = v12;
    uint64_t v32 = v15;
    id v30 = *(id *)(result + 72);
    swift_release();
    uint64_t v20 = swift_allocObject();
    uint64_t v21 = v16;
    swift_beginAccess();
    swift_weakLoadStrong();
    swift_weakInit();
    swift_release();
    id v22 = (void *)swift_allocObject();
    uint64_t v23 = v33;
    id v24 = v34;
    uint64_t v22[2] = v20;
    v22[3] = v23;
    v22[4] = a8;
    v22[5] = a2;
    id v22[6] = v24;
    v22[7] = a9;
    aBlock[4] = sub_1C2B4B424;
    aBlock[5] = v22;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C2B12CDC;
    aBlock[3] = &block_descriptor_67;
    uint64_t v25 = _Block_copy(aBlock);
    swift_retain();
    swift_bridgeObjectRetain();
    id v26 = a2;
    id v27 = v24;
    sub_1C2B73DB0();
    uint64_t v35 = MEMORY[0x1E4FBC860];
    sub_1C2B4BB08((unint64_t *)&qword_1EBF10B50, MEMORY[0x1E4FBCB00]);
    uint64_t v28 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCB00];
    sub_1C2B4AFE0(0, &qword_1EBF10B58, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
    sub_1C2B4B920((unint64_t *)&qword_1EBF10B60, &qword_1EBF10B58, v28);
    sub_1C2B74700();
    uint64_t v29 = v30;
    MEMORY[0x1C8766990](0, v18, v14, v25);
    _Block_release(v25);

    (*(void (**)(char *, uint64_t))(v31 + 8))(v14, v11);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v18, v32);
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_1C2B451D0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v10 = Strong;
    swift_beginAccess();
    sub_1C2B48980(a2, a3);
    swift_endAccess();
    swift_bridgeObjectRelease();
    if (a4 && (self, (uint64_t v11 = swift_dynamicCastObjCClass()) != 0))
    {
      uint64_t v12 = v11;
      uint64_t v13 = (os_unfair_lock_s *)(*(void *)(v10 + 64) + 16);
      id v14 = a4;
      os_unfair_lock_lock(v13);
      swift_beginAccess();
      swift_bridgeObjectRetain();
      id v15 = v14;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v33 = *(void *)(v10 + 40);
      *(void *)(v10 + 40) = 0x8000000000000000;
      sub_1C2B0111C(v12, a2, a3, isUniquelyReferenced_nonNull_native);
      *(void *)(v10 + 40) = v33;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      os_unfair_lock_unlock(v13);
      sub_1C2B43104(a2, a3);
      swift_release();
    }
    else
    {
      if (qword_1EBF11340 != -1) {
        swift_once();
      }
      uint64_t v17 = sub_1C2B73A90();
      __swift_project_value_buffer(v17, (uint64_t)qword_1EBF11348);
      swift_bridgeObjectRetain();
      id v18 = a5;
      swift_bridgeObjectRetain();
      id v19 = a5;
      uint64_t v20 = sub_1C2B73A80();
      os_log_type_t v21 = sub_1C2B744C0();
      if (os_log_type_enabled(v20, v21))
      {
        uint64_t v22 = swift_slowAlloc();
        uint64_t v32 = swift_slowAlloc();
        uint64_t v33 = v32;
        *(_DWORD *)uint64_t v22 = 136315650;
        uint64_t v23 = sub_1C2B74CD0();
        sub_1C2AEEE6C(v23, v24, &v33);
        sub_1C2B74650();
        swift_bridgeObjectRelease();
        *(_WORD *)(v22 + 12) = 2080;
        uint64_t v25 = (void *)sub_1C2B73F60();
        id v26 = (id)HKSensitiveLogItem();

        sub_1C2B746D0();
        swift_unknownObjectRelease();
        uint64_t v27 = sub_1C2B74020();
        sub_1C2AEEE6C(v27, v28, &v33);
        sub_1C2B74650();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v22 + 22) = 2080;
        id v29 = a5;
        sub_1C2B4AFE0(0, &qword_1EA32BDF8, (uint64_t (*)(uint64_t))sub_1C2AF44C8, MEMORY[0x1E4FBB718]);
        uint64_t v30 = sub_1C2B74010();
        sub_1C2AEEE6C(v30, v31, &v33);
        sub_1C2B74650();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1C2ADB000, v20, v21, "[%s] Could not fetch medication detail for identifier: %s error: %s", (uint8_t *)v22, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1C8767A10](v32, -1, -1);
        MEMORY[0x1C8767A10](v22, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }
      swift_release();
    }
  }
}

uint64_t sub_1C2B45614(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2B4AB70(a1, a2, a3, v3);
}

uint64_t sub_1C2B4561C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    unint64_t v8 = (void *)result;
    uint64_t v9 = result + 48;
    swift_beginAccess();
    if (!*(void *)(v8[6] + 16)
      || (swift_bridgeObjectRetain(),
          swift_bridgeObjectRetain(),
          sub_1C2AE056C(a2, a3),
          char v11 = v10,
          swift_bridgeObjectRelease(),
          swift_bridgeObjectRelease(),
          (v11 & 1) == 0))
    {
      sub_1C2AE3A18(0, &qword_1EBF10BC0);
      swift_bridgeObjectRetain();
      uint64_t v12 = (void *)sub_1C2B74620();
      id v13 = objc_allocWithZone(MEMORY[0x1E4F2B2D0]);
      id v14 = (void *)sub_1C2B73F60();
      id v15 = objc_msgSend(v13, sel_initWithName_loggingCategory_, v14, v12);

      swift_beginAccess();
      if (v15)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v28 = *(void *)v9;
        *(void *)uint64_t v9 = 0x8000000000000000;
        sub_1C2B01928((uint64_t)v15, a2, a3, isUniquelyReferenced_nonNull_native);
        *(void *)uint64_t v9 = v28;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v17 = (void *)sub_1C2B28990(a2, a3);
        swift_bridgeObjectRelease();
      }
      swift_endAccess();
    }
    uint64_t v18 = *(void *)v9;
    if (*(void *)(*(void *)v9 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v19 = sub_1C2AE056C(a2, a3);
      if ((v20 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_14:
        uint64_t v22 = (os_unfair_lock_s *)(v8[8] + 16);
        os_unfair_lock_lock(v22);
        swift_beginAccess();
        uint64_t v23 = v8[5];
        if (*(void *)(v23 + 16))
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          unint64_t v24 = sub_1C2AE056C(a2, a3);
          if (v25)
          {
            id v26 = *(id *)(*(void *)(v23 + 56) + 8 * v24);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            os_unfair_lock_unlock(v22);
            if (v26)
            {
              uint64_t v27 = (void *)sub_1C2B73F60();
              objc_msgSend(a4, sel_medicationDetailDidUpdate_for_, v26, v27);

              return swift_release();
            }
LABEL_20:
            sub_1C2B44544(a2, a3);
            return swift_release();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        os_unfair_lock_unlock(v22);
        goto LABEL_20;
      }
      id v21 = *(id *)(*(void *)(v18 + 56) + 8 * v19);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v21 = 0;
    }
    objc_msgSend(v21, sel_registerObserver_, a4, v28);

    goto LABEL_14;
  }
  return result;
}

uint64_t sub_1C2B45954(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_1C2B73D90();
  uint64_t v21 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  char v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1C2B73DC0();
  uint64_t v11 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  id v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *(void *)(v4 + 72);
  uint64_t v14 = swift_allocObject();
  swift_weakInit();
  id v15 = (void *)swift_allocObject();
  void v15[2] = v14;
  void v15[3] = a2;
  v15[4] = a3;
  v15[5] = a1;
  aBlock[4] = sub_1C2B4AEDC;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C2B12CDC;
  aBlock[3] = &block_descriptor_11;
  uint64_t v16 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  sub_1C2B73DB0();
  uint64_t v22 = MEMORY[0x1E4FBC860];
  sub_1C2B4BB08((unint64_t *)&qword_1EBF10B50, MEMORY[0x1E4FBCB00]);
  uint64_t v17 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCB00];
  sub_1C2B4AFE0(0, &qword_1EBF10B58, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1C2B4B920((unint64_t *)&qword_1EBF10B60, &qword_1EBF10B58, v17);
  sub_1C2B74700();
  MEMORY[0x1C8766990](0, v13, v10, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v20);
  swift_release();
  return swift_release();
}

uint64_t sub_1C2B45C84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v8 = result;
    swift_beginAccess();
    uint64_t v9 = *(void *)(v8 + 48);
    if (!*(void *)(v9 + 16))
    {
      id v12 = 0;
      goto LABEL_6;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v10 = sub_1C2AE056C(a2, a3);
    if (v11)
    {
      id v12 = *(id *)(*(void *)(v9 + 56) + 8 * v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_6:
      objc_msgSend(v12, sel_unregisterObserver_, a4);

      return swift_release();
    }
    swift_release();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C2B45D90()
{
  sub_1C2B4AFE0(0, &qword_1EBF10B90, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (char *)&v16 - v1;
  sub_1C2B4B044();
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2B4B188();
  uint64_t v17 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  char v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_1C2B73A40();
  sub_1C2AE3A18(0, &qword_1EBF10BA8);
  id v18 = (id)sub_1C2B74540();
  uint64_t v12 = sub_1C2B74520();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v2, 1, 1, v12);
  sub_1C2B02D58();
  sub_1C2B4BB08(&qword_1EA32BC30, (void (*)(uint64_t))sub_1C2B02D58);
  sub_1C2B4B144((unint64_t *)&qword_1EBF10B98, &qword_1EBF10BA8);
  sub_1C2B73D40();
  sub_1C2B4B2C8((uint64_t)v2);

  swift_release();
  sub_1C2B4B260(0, &qword_1EBF11288, (unint64_t *)&qword_1EBF112D0, 0x1E4F66B80, MEMORY[0x1E4FBB320]);
  sub_1C2B4BB08(&qword_1EA32C208, (void (*)(uint64_t))sub_1C2B4B044);
  sub_1C2B73D30();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1C2B4BB08(&qword_1EA32C210, (void (*)(uint64_t))sub_1C2B4B188);
  uint64_t v13 = v17;
  uint64_t v14 = sub_1C2B73D00();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v13);
  return v14;
}

uint64_t sub_1C2B46174@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_1C2B73A30();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (unint64_t *)((char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(unint64_t *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  if ((*(unsigned int (**)(unint64_t *, uint64_t))(v5 + 88))(v7, v4) != *MEMORY[0x1E4F67800])
  {
    *a2 = MEMORY[0x1E4FBC860];
    return (*(uint64_t (**)(unint64_t *, uint64_t))(v5 + 8))(v7, v4);
  }
  (*(void (**)(unint64_t *, uint64_t))(v5 + 96))(v7, v4);
  unint64_t v8 = *v7;
  uint64_t v16 = MEMORY[0x1E4FBC860];
  if (!(v8 >> 62))
  {
    uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_4;
    }
LABEL_18:
    swift_bridgeObjectRelease();
    uint64_t v14 = MEMORY[0x1E4FBC860];
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *a2 = v14;
    return result;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C2B749C0();
  uint64_t v9 = result;
  if (!result) {
    goto LABEL_18;
  }
LABEL_4:
  if (v9 >= 1)
  {
    for (uint64_t i = 0; i != v9; ++i)
    {
      if ((v8 & 0xC000000000000001) != 0) {
        id v12 = (id)MEMORY[0x1C8766C90](i, v8);
      }
      else {
        id v12 = *(id *)(v8 + 8 * i + 32);
      }
      uint64_t v13 = v12;
      self;
      if (swift_dynamicCastObjCClass())
      {
        MEMORY[0x1C87665F0]();
        if (*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1C2B74210();
        }
        sub_1C2B74250();
        sub_1C2B741F0();
      }
      else
      {
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v14 = v16;
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C2B463F8(uint64_t *a1, uint64_t a2)
{
  uint64_t v31 = a2;
  uint64_t v29 = sub_1C2B73D90();
  uint64_t v3 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1C2B73DC0();
  uint64_t v6 = *(void *)(v30 - 8);
  MEMORY[0x1F4188790](v30);
  unint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *a1;
  if (!((unint64_t)*a1 >> 62))
  {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v10) {
      goto LABEL_3;
    }
LABEL_11:
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C2B749C0();
  uint64_t v10 = result;
  if (!result) {
    goto LABEL_11;
  }
LABEL_3:
  if (v10 >= 1)
  {
    uint64_t v12 = 0;
    uint64_t v13 = *(void *)(v31 + 72);
    unint64_t v25 = v9 & 0xC000000000000001;
    uint64_t v26 = v13;
    uint64_t v23 = (void (**)(char *, uint64_t))(v3 + 8);
    unint64_t v24 = v34;
    uint64_t v22 = (void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v27 = v10;
    uint64_t v28 = v9;
    do
    {
      if (v25) {
        id v14 = (id)MEMORY[0x1C8766C90](v12, v9);
      }
      else {
        id v14 = *(id *)(v9 + 8 * v12 + 32);
      }
      uint64_t v15 = v14;
      ++v12;
      uint64_t v16 = swift_allocObject();
      swift_weakInit();
      uint64_t v17 = swift_allocObject();
      *(void *)(v17 + 16) = v15;
      *(void *)(v17 + 24) = v16;
      v34[2] = sub_1C2B4BA60;
      v34[3] = v17;
      aBlock[0] = MEMORY[0x1E4F143A8];
      aBlock[1] = 1107296256;
      v34[0] = sub_1C2B12CDC;
      v34[1] = &block_descriptor_96;
      id v18 = _Block_copy(aBlock);
      id v19 = v15;
      swift_retain();
      sub_1C2B73DB0();
      uint64_t v32 = MEMORY[0x1E4FBC860];
      sub_1C2B4BB08((unint64_t *)&qword_1EBF10B50, MEMORY[0x1E4FBCB00]);
      uint64_t v20 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCB00];
      sub_1C2B4AFE0(0, &qword_1EBF10B58, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
      sub_1C2B4B920((unint64_t *)&qword_1EBF10B60, &qword_1EBF10B58, v20);
      uint64_t v21 = v29;
      sub_1C2B74700();
      MEMORY[0x1C8766990](0, v8, v5, v18);
      _Block_release(v18);

      (*v23)(v5, v21);
      (*v22)(v8, v30);
      swift_release();
      swift_release();
      uint64_t v9 = v28;
    }
    while (v27 != v12);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1C2B46820(void *a1)
{
  id v2 = objc_msgSend(a1, sel_semanticIdentifier);
  id v3 = objc_msgSend(v2, sel_stringValue);

  uint64_t v4 = sub_1C2B73FA0();
  uint64_t v6 = v5;

  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = Strong;
    uint64_t v9 = (os_unfair_lock_s *)(*(void *)(Strong + 64) + 16);
    os_unfair_lock_lock(v9);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    id v10 = a1;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *(void *)(v8 + 40);
    *(void *)(v8 + 40) = 0x8000000000000000;
    sub_1C2B0111C((uint64_t)v10, v4, v6, isUniquelyReferenced_nonNull_native);
    *(void *)(v8 + 40) = v13;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    os_unfair_lock_unlock(v9);
    swift_release();
  }
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_1C2B43104(v4, v6);
    swift_release();
  }
  return swift_bridgeObjectRelease();
}

id *MedicationDetailProvider.deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return v0;
}

uint64_t MedicationDetailProvider.__deallocating_deinit()
{
  MedicationDetailProvider.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1C2B46A38()
{
  MedicationDetailProvider.deinit();
  return swift_deallocClassInstance();
}

void sub_1C2B46A6C(uint64_t a1, void *a2, void *a3, void *a4, uint64_t a5, void *a6)
{
  char v11 = *(void (**)(id, void *, void *, uint64_t, void *))(a1 + 32);
  swift_retain();
  id v15 = a2;
  id v12 = a3;
  id v13 = a4;
  id v14 = a6;
  v11(v15, a3, a4, a5, a6);
  swift_release();
}

uint64_t sub_1C2B46B38(uint64_t a1, char *a2)
{
  id v3 = v2;
  uint64_t v6 = sub_1C2B73740();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1C2B4BB08((unint64_t *)&qword_1EA32BC78, MEMORY[0x1E4F27990]);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = sub_1C2B73F10();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    id v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_1C2B4BB08(&qword_1EA32BBB8, MEMORY[0x1E4F27990]);
      char v21 = sub_1C2B73F50();
      uint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      id v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        id v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    id v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    sub_1C2B4A28C((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    uint64_t *v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_1C2B46E5C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_1C2B74C20();
  swift_bridgeObjectRetain();
  sub_1C2B74070();
  uint64_t v8 = sub_1C2B74C60();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1C2B74B50() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1C2B74B50() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  uint64_t *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1C2B4A554(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  uint64_t *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1C2B4700C(void *a1, void *a2)
{
  return sub_1C2B47054(a1, a2, &qword_1EA32BA48, 0x1E4F28ED0, (unint64_t *)&qword_1EA32BA40, (unint64_t *)&qword_1EA32BA50);
}

uint64_t sub_1C2B47030(void *a1, void *a2)
{
  return sub_1C2B47054(a1, a2, (unint64_t *)&qword_1EBF112D0, 0x1E4F66B80, &qword_1EA32C218, &qword_1EA32BF38);
}

uint64_t sub_1C2B47054(void *a1, void *a2, unint64_t *a3, uint64_t a4, unint64_t *a5, unint64_t *a6)
{
  uint64_t v11 = v6;
  uint64_t v14 = *v6;
  if ((*v6 & 0xC000000000000001) != 0)
  {
    if (v14 < 0) {
      uint64_t v15 = *v6;
    }
    else {
      uint64_t v15 = v14 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v16 = a2;
    uint64_t v17 = sub_1C2B74790();

    if (v17)
    {
      swift_bridgeObjectRelease();

      sub_1C2AE3A18(0, a3);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v42;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_1C2B74780();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v29 = sub_1C2B47664(v15, result + 1, a5, a3, a4, a6);
    uint64_t v43 = v29;
    unint64_t v30 = *(void *)(v29 + 16);
    if (*(void *)(v29 + 24) <= v30)
    {
      uint64_t v35 = a5;
      uint64_t v36 = v30 + 1;
      id v37 = v16;
      sub_1C2B47F60(v36, v35, a3, a4, a6);
      uint64_t v31 = v43;
    }
    else
    {
      uint64_t v31 = v29;
      id v32 = v16;
    }
    sub_1C2B485F4((uint64_t)v16, v31);
    uint64_t *v11 = v31;
    swift_bridgeObjectRelease();
    *a1 = v16;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1C2B745E0();
    uint64_t v20 = -1 << *(unsigned char *)(v14 + 32);
    unint64_t v21 = v19 & ~v20;
    uint64_t v40 = a4;
    if ((*(void *)(v14 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21))
    {
      sub_1C2AE3A18(0, a3);
      id v22 = *(id *)(*(void *)(v14 + 48) + 8 * v21);
      char v23 = sub_1C2B745F0();

      if (v23)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        uint64_t v27 = *(void **)(*(void *)(*v6 + 48) + 8 * v21);
        *a1 = v27;
        id v28 = v27;
        return 0;
      }
      uint64_t v24 = ~v20;
      while (1)
      {
        unint64_t v21 = (v21 + 1) & v24;
        if (((*(void *)(v14 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
          break;
        }
        id v25 = *(id *)(*(void *)(v14 + 48) + 8 * v21);
        char v26 = sub_1C2B745F0();

        if (v26) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v44 = *v6;
    *uint64_t v6 = 0x8000000000000000;
    id v34 = a2;
    sub_1C2B4A6F0((uint64_t)v34, v21, isUniquelyReferenced_nonNull_native, a5, a3, v40, a6);
    *uint64_t v6 = v44;
    swift_bridgeObjectRelease();
    *a1 = v34;
  }
  return 1;
}

uint64_t sub_1C2B47340(uint64_t a1, char *a2)
{
  id v3 = v2;
  uint64_t v6 = sub_1C2B73860();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1C2B4BB08(&qword_1EA32BAD8, MEMORY[0x1E4F27C88]);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = sub_1C2B73F10();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    id v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    id v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_1C2B4BB08(&qword_1EA32BAE0, MEMORY[0x1E4F27C88]);
      char v21 = sub_1C2B73F50();
      id v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        id v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    sub_1C2B4A8A8((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    uint64_t *v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_1C2B47664(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, uint64_t a5, unint64_t *a6)
{
  if (a2)
  {
    sub_1C2B4BA68(0, a3, a4, a5, a6);
    uint64_t v10 = sub_1C2B747F0();
    uint64_t v23 = v10;
    sub_1C2B74740();
    if (sub_1C2B747B0())
    {
      sub_1C2AE3A18(0, a4);
      do
      {
        swift_dynamicCast();
        uint64_t v10 = v23;
        unint64_t v17 = *(void *)(v23 + 16);
        if (*(void *)(v23 + 24) <= v17)
        {
          sub_1C2B47F60(v17 + 1, a3, a4, a5, a6);
          uint64_t v10 = v23;
        }
        uint64_t result = sub_1C2B745E0();
        uint64_t v12 = v10 + 56;
        uint64_t v13 = -1 << *(unsigned char *)(v10 + 32);
        unint64_t v14 = result & ~v13;
        unint64_t v15 = v14 >> 6;
        if (((-1 << v14) & ~*(void *)(v10 + 56 + 8 * (v14 >> 6))) != 0)
        {
          unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v10 + 56 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v18 = 0;
          unint64_t v19 = (unint64_t)(63 - v13) >> 6;
          do
          {
            if (++v15 == v19 && (v18 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v20 = v15 == v19;
            if (v15 == v19) {
              unint64_t v15 = 0;
            }
            v18 |= v20;
            uint64_t v21 = *(void *)(v12 + 8 * v15);
          }
          while (v21 == -1);
          unint64_t v16 = __clz(__rbit64(~v21)) + (v15 << 6);
        }
        *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
        *(void *)(*(void *)(v10 + 48) + 8 * v16) = v22;
        ++*(void *)(v10 + 16);
      }
      while (sub_1C2B747B0());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC870];
  }
  return v10;
}

uint64_t sub_1C2B4788C()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_1C2B73740();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_1C2B4BB50();
  uint64_t v5 = sub_1C2B747E0();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    id v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *id v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      char v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_1C2B4BB08((unint64_t *)&qword_1EA32BC78, MEMORY[0x1E4F27990]);
      uint64_t result = sub_1C2B73F10();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_1C2B47C84()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1C2AF4338();
  uint64_t v3 = sub_1C2B747E0();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    char v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *char v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      int64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_1C2B74C20();
      sub_1C2B74070();
      uint64_t result = sub_1C2B74C60();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      int64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *int64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1C2B47F60(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  uint64_t v6 = v5;
  uint64_t v7 = *v5;
  sub_1C2B4BA68(0, a2, a3, a4, a5);
  uint64_t v8 = sub_1C2B747E0();
  uint64_t v9 = v8;
  if (*(void *)(v7 + 16))
  {
    uint64_t v33 = v5;
    uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
    int64_t v11 = (void *)(v7 + 56);
    if (v10 < 64) {
      uint64_t v12 = ~(-1 << v10);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v13 = v12 & *(void *)(v7 + 56);
    int64_t v14 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v15 = v8 + 56;
    uint64_t result = swift_retain();
    int64_t v17 = 0;
    while (1)
    {
      if (v13)
      {
        unint64_t v19 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        unint64_t v20 = v19 | (v17 << 6);
      }
      else
      {
        int64_t v21 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v21 >= v14) {
          goto LABEL_33;
        }
        unint64_t v22 = v11[v21];
        ++v17;
        if (!v22)
        {
          int64_t v17 = v21 + 1;
          if (v21 + 1 >= v14) {
            goto LABEL_33;
          }
          unint64_t v22 = v11[v17];
          if (!v22)
          {
            int64_t v17 = v21 + 2;
            if (v21 + 2 >= v14) {
              goto LABEL_33;
            }
            unint64_t v22 = v11[v17];
            if (!v22)
            {
              int64_t v23 = v21 + 3;
              if (v23 >= v14)
              {
LABEL_33:
                swift_release();
                uint64_t v6 = v33;
                uint64_t v32 = 1 << *(unsigned char *)(v7 + 32);
                if (v32 > 63) {
                  bzero((void *)(v7 + 56), ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v11 = -1 << v32;
                }
                *(void *)(v7 + 16) = 0;
                break;
              }
              unint64_t v22 = v11[v23];
              if (!v22)
              {
                while (1)
                {
                  int64_t v17 = v23 + 1;
                  if (__OFADD__(v23, 1)) {
                    goto LABEL_39;
                  }
                  if (v17 >= v14) {
                    goto LABEL_33;
                  }
                  unint64_t v22 = v11[v17];
                  ++v23;
                  if (v22) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v17 = v23;
            }
          }
        }
LABEL_23:
        unint64_t v13 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v17 << 6);
      }
      uint64_t v24 = *(void *)(*(void *)(v7 + 48) + 8 * v20);
      uint64_t result = sub_1C2B745E0();
      uint64_t v25 = -1 << *(unsigned char *)(v9 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v15 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v26) & ~*(void *)(v15 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v15 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v18 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(void *)(*(void *)(v9 + 48) + 8 * v18) = v24;
      ++*(void *)(v9 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v6 = v9;
  return result;
}

uint64_t sub_1C2B481FC()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_1C2B73860();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_1C2AF4770();
  uint64_t v5 = sub_1C2B747E0();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    id v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    int64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *id v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      unint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_1C2B4BB08(&qword_1EA32BAD8, MEMORY[0x1E4F27C88]);
      uint64_t result = sub_1C2B73F10();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

unint64_t sub_1C2B485F4(uint64_t a1, uint64_t a2)
{
  sub_1C2B745E0();
  unint64_t result = sub_1C2B74720();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

uint64_t sub_1C2B48678@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1C2B73740();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_1C2B4BB08((unint64_t *)&qword_1EA32BC78, MEMORY[0x1E4F27990]);
  swift_bridgeObjectRetain();
  uint64_t v31 = a1;
  uint64_t v10 = sub_1C2B73F10();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  uint64_t v13 = v9;
  uint64_t v30 = v9 + 56;
  if ((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    unint64_t v26 = v2;
    uint64_t v27 = v6;
    uint64_t v28 = a2;
    uint64_t v29 = ~v11;
    unint64_t v16 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    uint64_t v15 = v6 + 16;
    int64_t v14 = v16;
    uint64_t v17 = *(void *)(v15 + 56);
    while (1)
    {
      uint64_t v18 = v13;
      v14(v8, *(void *)(v13 + 48) + v17 * v12, v5);
      sub_1C2B4BB08(&qword_1EA32BBB8, MEMORY[0x1E4F27990]);
      char v19 = sub_1C2B73F50();
      (*(void (**)(char *, uint64_t))(v15 - 8))(v8, v5);
      if (v19) {
        break;
      }
      unint64_t v12 = (v12 + 1) & v29;
      uint64_t v13 = v18;
      if (((*(void *)(v30 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v20 = 1;
        uint64_t v6 = v27;
        a2 = v28;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v20, 1, v5);
      }
    }
    swift_bridgeObjectRelease();
    int64_t v21 = v26;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v23 = *v21;
    uint64_t v32 = *v21;
    *int64_t v21 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1C2B48E78(MEMORY[0x1E4F27990], (void (*)(void))sub_1C2B4BB50);
      uint64_t v23 = v32;
    }
    uint64_t v6 = v27;
    a2 = v28;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v27 + 32))(v28, *(void *)(v23 + 48) + v17 * v12, v5);
    sub_1C2B49DA8(v12);
    *int64_t v21 = v32;
    swift_bridgeObjectRelease();
    uint64_t v20 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v20 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v20, 1, v5);
}

uint64_t sub_1C2B48980(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_1C2B74C20();
  swift_bridgeObjectRetain();
  sub_1C2B74070();
  uint64_t v6 = sub_1C2B74C60();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  uint64_t v10 = (void *)(v9 + 16 * v8);
  BOOL v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (sub_1C2B74B50() & 1) == 0)
  {
    uint64_t v15 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v15;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_18;
      }
      unint64_t v16 = (void *)(v9 + 16 * v8);
      BOOL v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (sub_1C2B74B50() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *v2;
  uint64_t v19 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1C2B48B10();
    uint64_t v13 = v19;
  }
  uint64_t v14 = *(void *)(*(void *)(v13 + 48) + 16 * v8);
  sub_1C2B4A0C4(v8);
  *uint64_t v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

void *sub_1C2B48B10()
{
  uint64_t v1 = v0;
  sub_1C2AF4338();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C2B747D0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    BOOL v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    uint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v19 = *v17;
    v19[1] = v18;
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1C2B48CC0(unint64_t *a1, unint64_t *a2, uint64_t a3, unint64_t *a4)
{
  uint64_t v5 = v4;
  sub_1C2B4BA68(0, a1, a2, a3, a4);
  uint64_t v6 = *v4;
  uint64_t v7 = sub_1C2B747D0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *uint64_t v5 = v8;
    return result;
  }
  id result = (id)(v7 + 56);
  uint64_t v10 = v6 + 56;
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v11) {
    id result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  }
  int64_t v13 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v14 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(v6 + 56);
  int64_t v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      unint64_t v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v17) {
      goto LABEL_28;
    }
    unint64_t v23 = *(void *)(v10 + 8 * v22);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v22 + 1;
      if (v22 + 1 >= v17) {
        goto LABEL_28;
      }
      unint64_t v23 = *(void *)(v10 + 8 * v13);
      if (!v23)
      {
        int64_t v13 = v22 + 2;
        if (v22 + 2 >= v17) {
          goto LABEL_28;
        }
        unint64_t v23 = *(void *)(v10 + 8 * v13);
        if (!v23) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v16 = (v23 - 1) & v23;
    unint64_t v19 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_12:
    uint64_t v20 = 8 * v19;
    unint64_t v21 = *(void **)(*(void *)(v6 + 48) + v20);
    *(void *)(*(void *)(v8 + 48) + v20) = v21;
    id result = v21;
  }
  int64_t v24 = v22 + 3;
  if (v24 >= v17) {
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v10 + 8 * v24);
  if (v23)
  {
    int64_t v13 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v13 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v13 >= v17) {
      goto LABEL_28;
    }
    unint64_t v23 = *(void *)(v10 + 8 * v13);
    ++v24;
    if (v23) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C2B48E78(uint64_t (*a1)(void), void (*a2)(void))
{
  uint64_t v4 = v2;
  uint64_t v5 = a1(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v25 - v7;
  a2(0);
  uint64_t v9 = *v2;
  uint64_t v10 = sub_1C2B747D0();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16))
  {
    id result = (void *)swift_release();
LABEL_30:
    *uint64_t v4 = v11;
    return result;
  }
  id result = (void *)(v10 + 56);
  unint64_t v13 = (unint64_t)((1 << *(unsigned char *)(v11 + 32)) + 63) >> 6;
  unint64_t v26 = v4;
  uint64_t v27 = (const void *)(v9 + 56);
  if (v11 != v9 || (unint64_t)result >= v9 + 56 + 8 * v13) {
    id result = memmove(result, v27, 8 * v13);
  }
  int64_t v15 = 0;
  *(void *)(v11 + 16) = *(void *)(v9 + 16);
  uint64_t v16 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & *(void *)(v9 + 56);
  int64_t v28 = (unint64_t)(v16 + 63) >> 6;
  while (1)
  {
    if (v18)
    {
      unint64_t v19 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v20 = v19 | (v15 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v22 >= v28) {
      goto LABEL_28;
    }
    unint64_t v23 = *((void *)v27 + v22);
    ++v15;
    if (!v23)
    {
      int64_t v15 = v22 + 1;
      if (v22 + 1 >= v28) {
        goto LABEL_28;
      }
      unint64_t v23 = *((void *)v27 + v15);
      if (!v23)
      {
        int64_t v15 = v22 + 2;
        if (v22 + 2 >= v28) {
          goto LABEL_28;
        }
        unint64_t v23 = *((void *)v27 + v15);
        if (!v23) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v18 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v15 << 6);
LABEL_12:
    unint64_t v21 = *(void *)(v6 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, *(void *)(v9 + 48) + v21, v5);
    id result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(void *)(v11 + 48) + v21, v8, v5);
  }
  int64_t v24 = v22 + 3;
  if (v24 >= v28)
  {
LABEL_28:
    id result = (void *)swift_release();
    uint64_t v4 = v26;
    goto LABEL_30;
  }
  unint64_t v23 = *((void *)v27 + v24);
  if (v23)
  {
    int64_t v15 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v15 >= v28) {
      goto LABEL_28;
    }
    unint64_t v23 = *((void *)v27 + v15);
    ++v24;
    if (v23) {
      goto LABEL_27;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1C2B4912C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C2B73740();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_1C2B4BB50();
  uint64_t v7 = sub_1C2B747E0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  uint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_1C2B4BB08((unint64_t *)&qword_1EA32BC78, MEMORY[0x1E4F27990]);
    uint64_t result = sub_1C2B73F10();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C2B494D8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1C2AF4338();
  uint64_t v3 = sub_1C2B747E0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    unint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_1C2B74C20();
    swift_bridgeObjectRetain();
    sub_1C2B74070();
    uint64_t result = sub_1C2B74C60();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *uint64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C2B49784(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  uint64_t v6 = v5;
  uint64_t v7 = *v5;
  sub_1C2B4BA68(0, a2, a3, a4, a5);
  uint64_t v8 = sub_1C2B747E0();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v6 = v9;
    return result;
  }
  uint64_t v32 = v5;
  uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v11 = v7 + 56;
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & *(void *)(v7 + 56);
  int64_t v14 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v15 = v8 + 56;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v13)
    {
      unint64_t v19 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v20 = v19 | (v17 << 6);
      goto LABEL_24;
    }
    int64_t v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v21 >= v14) {
      goto LABEL_33;
    }
    unint64_t v22 = *(void *)(v11 + 8 * v21);
    ++v17;
    if (!v22)
    {
      int64_t v17 = v21 + 1;
      if (v21 + 1 >= v14) {
        goto LABEL_33;
      }
      unint64_t v22 = *(void *)(v11 + 8 * v17);
      if (!v22)
      {
        int64_t v17 = v21 + 2;
        if (v21 + 2 >= v14) {
          goto LABEL_33;
        }
        unint64_t v22 = *(void *)(v11 + 8 * v17);
        if (!v22) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v13 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v17 << 6);
LABEL_24:
    id v24 = *(id *)(*(void *)(v7 + 48) + 8 * v20);
    uint64_t result = sub_1C2B745E0();
    uint64_t v25 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v26 = result & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v15 + 8 * (v26 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v26) & ~*(void *)(v15 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v30 = v27 == v29;
        if (v27 == v29) {
          unint64_t v27 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v15 + 8 * v27);
      }
      while (v31 == -1);
      unint64_t v18 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(void *)(*(void *)(v9 + 48) + 8 * v18) = v24;
    ++*(void *)(v9 + 16);
  }
  int64_t v23 = v21 + 3;
  if (v23 >= v14)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v6 = v32;
    goto LABEL_35;
  }
  unint64_t v22 = *(void *)(v11 + 8 * v23);
  if (v22)
  {
    int64_t v17 = v23;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v17 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v22 = *(void *)(v11 + 8 * v17);
    ++v23;
    if (v22) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C2B499FC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C2B73860();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_1C2AF4770();
  uint64_t v7 = sub_1C2B747E0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  int64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_1C2B4BB08(&qword_1EA32BAD8, MEMORY[0x1E4F27C88]);
    uint64_t result = sub_1C2B73F10();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C2B49DA8(int64_t a1)
{
  uint64_t v3 = sub_1C2B73740();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = *v1;
  uint64_t v8 = *v1 + 56;
  uint64_t v9 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(v8 + 8 * (v10 >> 6))) != 0)
  {
    BOOL v31 = v1;
    uint64_t v11 = ~v9;
    uint64_t v35 = result;
    swift_retain();
    uint64_t v12 = sub_1C2B74710();
    if ((*(void *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v33 = (v12 + 1) & v11;
      int64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
      uint64_t v13 = v4 + 16;
      uint64_t v32 = v14;
      uint64_t v15 = *(void *)(v13 + 56);
      uint64_t v34 = v13;
      int64_t v16 = (void (**)(char *, uint64_t))(v13 - 8);
      uint64_t v17 = v35;
      do
      {
        uint64_t v18 = v8;
        uint64_t v19 = v15;
        int64_t v20 = v15 * v10;
        v32(v6, *(void *)(v17 + 48) + v15 * v10, v3);
        sub_1C2B4BB08((unint64_t *)&qword_1EA32BC78, MEMORY[0x1E4F27990]);
        uint64_t v21 = sub_1C2B73F10();
        (*v16)(v6, v3);
        unint64_t v22 = v21 & v11;
        if (a1 >= (uint64_t)v33)
        {
          if (v22 < v33 || a1 < (uint64_t)v22)
          {
LABEL_4:
            uint64_t v8 = v18;
            uint64_t v15 = v19;
            uint64_t v17 = v35;
            goto LABEL_5;
          }
        }
        else if (v22 < v33 && a1 < (uint64_t)v22)
        {
          goto LABEL_4;
        }
        uint64_t v17 = v35;
        int64_t v25 = v19 * a1;
        uint64_t v8 = v18;
        if (v19 * a1 < v20
          || (uint64_t v15 = v19, *(void *)(v35 + 48) + v19 * a1 >= (unint64_t)(*(void *)(v35 + 48) + v20 + v19)))
        {
          swift_arrayInitWithTakeFrontToBack();
          goto LABEL_21;
        }
        a1 = v10;
        if (v25 != v20)
        {
          swift_arrayInitWithTakeBackToFront();
LABEL_21:
          uint64_t v17 = v35;
          uint64_t v15 = v19;
          a1 = v10;
        }
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    *(void *)(v8 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    uint64_t result = swift_release();
    uint64_t v1 = v31;
  }
  else
  {
    *(void *)(v8 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  uint64_t v26 = *v1;
  uint64_t v27 = *(void *)(*v1 + 16);
  BOOL v28 = __OFSUB__(v27, 1);
  uint64_t v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v26 + 16) = v29;
    ++*(_DWORD *)(v26 + 36);
  }
  return result;
}

unint64_t sub_1C2B4A0C4(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_1C2B74710();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        sub_1C2B74C20();
        swift_bridgeObjectRetain();
        sub_1C2B74070();
        uint64_t v10 = sub_1C2B74C60();
        swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(v3 + 48);
          uint64_t v13 = (_OWORD *)(v12 + 16 * v2);
          int64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v13 >= v14 + 1))
          {
            *uint64_t v13 = *v14;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v15 = *(void *)(v3 + 16);
  BOOL v16 = __OFSUB__(v15, 1);
  uint64_t v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_1C2B4A28C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_1C2B73740();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  BOOL v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1C2B4788C();
  }
  else
  {
    if (v11 > v10)
    {
      sub_1C2B48E78(MEMORY[0x1E4F27990], (void (*)(void))sub_1C2B4BB50);
      goto LABEL_12;
    }
    sub_1C2B4912C();
  }
  uint64_t v12 = *v3;
  sub_1C2B4BB08((unint64_t *)&qword_1EA32BC78, MEMORY[0x1E4F27990]);
  uint64_t v13 = sub_1C2B73F10();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    uint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_1C2B4BB08(&qword_1EA32BBB8, MEMORY[0x1E4F27990]);
      char v21 = sub_1C2B73F50();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_1C2B74BA0();
  __break(1u);
  return result;
}

uint64_t sub_1C2B4A554(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_1C2B47C84();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_1C2B48B10();
      goto LABEL_22;
    }
    sub_1C2B494D8();
  }
  uint64_t v11 = *v4;
  sub_1C2B74C20();
  sub_1C2B74070();
  uint64_t result = sub_1C2B74C60();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    uint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_1C2B74B50(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_1C2B74BA0();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_1C2B74B50();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  char v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  *char v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

void sub_1C2B4A6F0(uint64_t a1, unint64_t a2, char a3, unint64_t *a4, unint64_t *a5, uint64_t a6, unint64_t *a7)
{
  unint64_t v11 = *(void *)(*v7 + 16);
  unint64_t v12 = *(void *)(*v7 + 24);
  if (v12 > v11 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v13 = v11 + 1;
  if (a3)
  {
    sub_1C2B47F60(v13, a4, a5, a6, a7);
  }
  else
  {
    if (v12 > v11)
    {
      sub_1C2B48CC0(a4, a5, a6, a7);
      goto LABEL_14;
    }
    sub_1C2B49784(v13, a4, a5, a6, a7);
  }
  uint64_t v14 = *v7;
  uint64_t v15 = sub_1C2B745E0();
  uint64_t v16 = -1 << *(unsigned char *)(v14 + 32);
  a2 = v15 & ~v16;
  if ((*(void *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_1C2AE3A18(0, a5);
    id v17 = *(id *)(*(void *)(v14 + 48) + 8 * a2);
    char v18 = sub_1C2B745F0();

    if (v18)
    {
LABEL_13:
      sub_1C2B74BA0();
      __break(1u);
    }
    else
    {
      uint64_t v19 = ~v16;
      while (1)
      {
        a2 = (a2 + 1) & v19;
        if (((*(void *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v20 = *(id *)(*(void *)(v14 + 48) + 8 * a2);
        char v21 = sub_1C2B745F0();

        if (v21) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v22 = *v7;
  *(void *)(*v7 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v22 + 48) + 8 * a2) = a1;
  uint64_t v23 = *(void *)(v22 + 16);
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24) {
    __break(1u);
  }
  else {
    *(void *)(v22 + 16) = v25;
  }
}

uint64_t sub_1C2B4A8A8(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_1C2B73860();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  BOOL v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1C2B481FC();
  }
  else
  {
    if (v11 > v10)
    {
      sub_1C2B48E78(MEMORY[0x1E4F27C88], (void (*)(void))sub_1C2AF4770);
      goto LABEL_12;
    }
    sub_1C2B499FC();
  }
  uint64_t v12 = *v3;
  sub_1C2B4BB08(&qword_1EA32BAD8, MEMORY[0x1E4F27C88]);
  uint64_t v13 = sub_1C2B73F10();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    id v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_1C2B4BB08(&qword_1EA32BAE0, MEMORY[0x1E4F27C88]);
      char v21 = sub_1C2B73F50();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_1C2B74BA0();
  __break(1u);
  return result;
}

uint64_t sub_1C2B4AB70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1C2B73D90();
  uint64_t v21 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  unint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1C2B73DC0();
  uint64_t v11 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *(void *)(a4 + 72);
  uint64_t v14 = swift_allocObject();
  swift_weakInit();
  uint64_t v15 = (void *)swift_allocObject();
  void v15[2] = v14;
  void v15[3] = a2;
  v15[4] = a3;
  v15[5] = a1;
  aBlock[4] = sub_1C2B10120;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1C2B12CDC;
  aBlock[3] = &block_descriptor_89;
  uint64_t v16 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  sub_1C2B73DB0();
  uint64_t v22 = MEMORY[0x1E4FBC860];
  sub_1C2B4BB08((unint64_t *)&qword_1EBF10B50, MEMORY[0x1E4FBCB00]);
  id v17 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCB00];
  sub_1C2B4AFE0(0, &qword_1EBF10B58, MEMORY[0x1E4FBCB00], MEMORY[0x1E4FBB320]);
  sub_1C2B4B920((unint64_t *)&qword_1EBF10B60, &qword_1EBF10B58, v17);
  sub_1C2B74700();
  MEMORY[0x1C8766990](0, v13, v10, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v20);
  swift_release();
  return swift_release();
}

uint64_t sub_1C2B4AEA0()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C2B4AEDC()
{
  return sub_1C2B45C84(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t dispatch thunk of MedicationDetailObserving.addObserver(_:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of MedicationDetailObserving.removeObserver(_:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t type metadata accessor for MedicationDetailProvider()
{
  return self;
}

uint64_t method lookup function for MedicationDetailProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationDetailProvider);
}

uint64_t dispatch thunk of MedicationDetailProvider.addObserver(_:for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

uint64_t dispatch thunk of MedicationDetailProvider.removeObserver(_:for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t type metadata accessor for TestMedicationDetailProvider()
{
  return self;
}

void sub_1C2B4AFE0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C2B4B044()
{
  if (!qword_1EA32C1F8)
  {
    sub_1C2B02D58();
    sub_1C2AE3A18(255, &qword_1EBF10BA8);
    sub_1C2B4BB08(&qword_1EA32BC30, (void (*)(uint64_t))sub_1C2B02D58);
    sub_1C2B4B144((unint64_t *)&qword_1EBF10B98, &qword_1EBF10BA8);
    unint64_t v0 = sub_1C2B73B50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA32C1F8);
    }
  }
}

uint64_t sub_1C2B4B144(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C2AE3A18(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C2B4B188()
{
  if (!qword_1EA32C200)
  {
    sub_1C2B4B044();
    sub_1C2B4B260(255, &qword_1EBF11288, (unint64_t *)&qword_1EBF112D0, 0x1E4F66B80, MEMORY[0x1E4FBB320]);
    sub_1C2B4BB08(&qword_1EA32C208, (void (*)(uint64_t))sub_1C2B4B044);
    unint64_t v0 = sub_1C2B73B40();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA32C200);
    }
  }
}

void sub_1C2B4B260(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1C2AE3A18(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1C2B4B2C8(uint64_t a1)
{
  sub_1C2B4AFE0(0, &qword_1EBF10B90, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C2B4B358()
{
  return sub_1C2B44890(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t objectdestroy_49Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1C2B4B3A8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  return sub_1C2B44E24(a1, a2, a3, a4, a5, v5[2], v5[3], v5[4], v5[5]);
}

uint64_t sub_1C2B4B3D4()
{
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 64, 7);
}

void sub_1C2B4B424()
{
  sub_1C2B451D0(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40), *(void **)(v0 + 48));
}

uint64_t sub_1C2B4B434()
{
  swift_release();

  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1C2B4B47C()
{
  return sub_1C2B44444(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1C2B4B488()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_1C2B4B4C8(void *a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  id v4 = (id)sub_1C2B73F60();
  objc_msgSend(a1, sel_medicationDetailDidUpdate_for_, v3, v4);
}

void *sub_1C2B4B538(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v18 = a1;
  uint64_t v17 = sub_1C2B74530();
  uint64_t v3 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C2B74510();
  MEMORY[0x1F4188790](v6);
  uint64_t v7 = sub_1C2B73DC0();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v8 = MEMORY[0x1E4FBC868];
  v1[4] = 0;
  v1[5] = v8;
  uint64_t v9 = MEMORY[0x1E4FBC870];
  v1[6] = v8;
  v1[7] = v9;
  sub_1C2B4B8BC();
  uint64_t v10 = swift_allocObject();
  *(_DWORD *)(v10 + 16) = 0;
  v1[8] = v10;
  uint64_t v16 = sub_1C2AE3A18(0, &qword_1EBF10BA8);
  sub_1C2B73DB0();
  uint64_t v19 = MEMORY[0x1E4FBC860];
  sub_1C2B4BB08(&qword_1EBF10B88, MEMORY[0x1E4FBCC10]);
  uint64_t v11 = (uint64_t (*)(uint64_t))MEMORY[0x1E4FBCC10];
  sub_1C2B4AFE0(0, &qword_1EBF10B68, MEMORY[0x1E4FBCC10], MEMORY[0x1E4FBB320]);
  sub_1C2B4B920((unint64_t *)&qword_1EBF10B70, &qword_1EBF10B68, v11);
  sub_1C2B74700();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4FBCC58], v17);
  v1[9] = sub_1C2B74560();
  uint64_t v12 = v18;
  v1[2] = v18;
  sub_1C2B73A60();
  id v13 = v12;
  v1[3] = sub_1C2B73A50();
  uint64_t v19 = sub_1C2B45D90();
  sub_1C2B4B98C();
  sub_1C2B4BB08(&qword_1EBF10B28, (void (*)(uint64_t))sub_1C2B4B98C);
  swift_retain();
  uint64_t v14 = sub_1C2B73D60();
  swift_release();
  swift_release();
  uint64_t v2[4] = v14;
  swift_release();
  return v2;
}

void sub_1C2B4B8BC()
{
  if (!qword_1EBF10BC8)
  {
    type metadata accessor for os_unfair_lock_s(255);
    unint64_t v0 = sub_1C2B748A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBF10BC8);
    }
  }
}

uint64_t sub_1C2B4B920(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C2B4AFE0(255, a2, a3, MEMORY[0x1E4FBB320]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C2B4B984(uint64_t *a1)
{
  return sub_1C2B463F8(a1, v1);
}

void sub_1C2B4B98C()
{
  if (!qword_1EBF10B30)
  {
    sub_1C2B4B260(255, &qword_1EBF11288, (unint64_t *)&qword_1EBF112D0, 0x1E4F66B80, MEMORY[0x1E4FBB320]);
    unint64_t v0 = sub_1C2B73B60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBF10B30);
    }
  }
}

uint64_t sub_1C2B4BA20()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C2B4BA60()
{
  return sub_1C2B46820(*(void **)(v0 + 16));
}

void sub_1C2B4BA68(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  if (!*a2)
  {
    sub_1C2AE3A18(255, a3);
    sub_1C2B4B144(a5, a3);
    unint64_t v8 = sub_1C2B74810();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C2B4BB08(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C2B4BB50()
{
  if (!qword_1EA32C220)
  {
    sub_1C2B73740();
    sub_1C2B4BB08((unint64_t *)&qword_1EA32BC78, MEMORY[0x1E4F27990]);
    unint64_t v0 = sub_1C2B74810();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA32C220);
    }
  }
}

uint64_t MedicationDose.__allocating_init(_:medicationDetailProvider:medication:)(char **a1, uint64_t a2, void *a3)
{
  uint64_t v6 = swift_allocObject();
  MedicationDose.init(_:medicationDetailProvider:medication:)(a1, a2, a3);
  return v6;
}

uint64_t MedicationDose.medication.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C2B73CE0();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1C2B4BCF0@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C2B73CE0();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1C2B4BD70(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = v1;
  swift_retain();
  return sub_1C2B73CF0();
}

uint64_t MedicationDose.$medication.getter()
{
  return swift_endAccess();
}

uint64_t sub_1C2B4BE64()
{
  return swift_endAccess();
}

uint64_t sub_1C2B4BEE4(uint64_t a1)
{
  sub_1C2B4D360(0, &qword_1EA32C228, MEMORY[0x1E4F1AC60]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v2);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v12 - v8;
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v10((char *)&v12 - v8, a1, v3);
  v10(v7, (uint64_t)v9, v3);
  swift_beginAccess();
  sub_1C2B4D360(0, (unint64_t *)&unk_1EBF10B40, MEMORY[0x1E4F1AC70]);
  sub_1C2B73CD0();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, v3);
}

uint64_t MedicationDose.init(_:medicationDetailProvider:medication:)(char **a1, uint64_t a2, void *a3)
{
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  char v8 = *((unsigned char *)a1 + 16);
  *(void *)(v3 + OBJC_IVAR____TtC27HealthMedicationsExperience14MedicationDose_medicationDetailProvider) = 0;
  *(void *)(v3 + 16) = v6;
  *(void *)(v3 + 24) = v7;
  *(unsigned char *)(v3 + 32) = v8;
  *(void *)(v3 + OBJC_IVAR____TtC27HealthMedicationsExperience14MedicationDose_medicationDetailProvider) = a2;
  sub_1C2B4CE88(v6, v7, v8);
  swift_retain();
  swift_release();
  swift_beginAccess();
  uint64_t v15 = a3;
  sub_1C2AE3A18(0, (unint64_t *)&qword_1EBF112D0);
  id v9 = a3;
  sub_1C2B73CB0();
  swift_endAccess();
  if (a2)
  {
    if (v8)
    {
      uint64_t v11 = *(void *)&v6[OBJC_IVAR____TtC27HealthMedicationsExperience12ScheduleItem_medicationIdentifier];
      uint64_t v10 = *(void *)&v6[OBJC_IVAR____TtC27HealthMedicationsExperience12ScheduleItem_medicationIdentifier + 8];
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
    }
    else
    {
      sub_1C2B4CE88(v6, v7, 0);
      swift_retain();
      swift_retain();
      id v12 = objc_msgSend(v6, sel_medicationIdentifier, v15);
      uint64_t v11 = sub_1C2B73FA0();
      uint64_t v10 = v13;

      sub_1C2B4CED4(v6, v7, 0);
    }
    sub_1C2B4CED4(v6, v7, v8);
    sub_1C2B0FA14(v3, v11, v10, a2);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release_n();
  }
  else
  {

    sub_1C2B4CED4(v6, v7, v8);
  }
  return v3;
}

uint64_t MedicationDose.medicationDetailDidUpdate(_:for:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(char **)(v3 + 16);
  if (*(unsigned char *)(v3 + 32))
  {
    uint64_t v9 = *(void *)&v7[OBJC_IVAR____TtC27HealthMedicationsExperience12ScheduleItem_medicationIdentifier];
    uint64_t v8 = *(void *)&v7[OBJC_IVAR____TtC27HealthMedicationsExperience12ScheduleItem_medicationIdentifier + 8];
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v10 = *(void **)(v3 + 24);
    id v11 = objc_msgSend(v7, sel_medicationIdentifier);
    uint64_t v9 = sub_1C2B73FA0();
    uint64_t v8 = v12;

    sub_1C2B4CED4(v7, v10, 0);
    sub_1C2B4CED4(v7, v10, 0);
  }
  if (v9 == a2 && v8 == a3)
  {
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  char v14 = sub_1C2B74B50();
  uint64_t result = swift_bridgeObjectRelease();
  if (v14)
  {
LABEL_11:
    swift_getKeyPath();
    swift_getKeyPath();
    id v16 = a1;
    swift_retain();
    return sub_1C2B73CF0();
  }
  return result;
}

unint64_t MedicationDose.description.getter()
{
  sub_1C2B74820();
  swift_bridgeObjectRelease();
  id v3 = *(id *)(v0 + 16);
  sub_1C2B4CE88(v3, *(void **)(v0 + 24), *(unsigned char *)(v0 + 32));
  sub_1C2B74010();
  sub_1C2B740A0();
  swift_bridgeObjectRelease();
  sub_1C2B740A0();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C2B73CE0();
  swift_release();
  swift_release();
  id v1 = objc_msgSend(v3, sel_description);
  sub_1C2B73FA0();

  sub_1C2B740A0();
  swift_bridgeObjectRelease();
  return 0xD000000000000014;
}

void *MedicationDose.medicationDoseEvent.getter()
{
  if (*(unsigned char *)(v0 + 32))
  {
    id v1 = *(void **)(v0 + 24);
    if (!v1) {
      return v1;
    }
  }
  else
  {
    id v1 = *(void **)(v0 + 16);
  }
  id v2 = v1;
  return v1;
}

uint64_t MedicationDose.scheduleItem.getter()
{
  if (*(unsigned char *)(v0 + 32) == 1) {
    return swift_retain();
  }
  else {
    return 0;
  }
}

uint64_t MedicationDose.scheduleIdentifier.getter()
{
  id v1 = *(void **)(v0 + 16);
  if (*(unsigned char *)(v0 + 32))
  {
    uint64_t v2 = v1[2];
    swift_bridgeObjectRetain();
  }
  else
  {
    id v3 = *(void **)(v0 + 24);
    id v4 = objc_msgSend(v1, sel_scheduleItemIdentifier);
    if (v4)
    {
      uint64_t v5 = v4;
      uint64_t v2 = sub_1C2B73FA0();

      sub_1C2B4CED4(v1, v3, 0);
    }
    else
    {
      sub_1C2B4CED4(v1, v3, 0);
      return 0;
    }
  }
  return v2;
}

void MedicationDose.date.getter(uint64_t a1@<X8>)
{
  id v3 = *(char **)(v1 + 16);
  if (*(unsigned char *)(v1 + 32))
  {
    id v4 = &v3[OBJC_IVAR____TtC27HealthMedicationsExperience12ScheduleItem_date];
    uint64_t v5 = sub_1C2B73710();
    uint64_t v6 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v5 - 8) + 16);
    v6(a1, v4, v5);
  }
  else
  {
    uint64_t v7 = *(void **)(v1 + 24);
    id v8 = objc_msgSend(v3, sel_startDate);
    sub_1C2B736E0();

    sub_1C2B4CED4(v3, v7, 0);
  }
}

uint64_t MedicationDose.status.getter()
{
  if (*(unsigned char *)(v0 + 32))
  {
    uint64_t v1 = *(void **)(v0 + 24);
    if (!v1) {
      return 1;
    }
  }
  else
  {
    uint64_t v1 = *(void **)(v0 + 16);
  }
  return (uint64_t)objc_msgSend(v1, sel_status);
}

uint64_t MedicationDose.doseAmount.getter()
{
  uint64_t v1 = *(char **)(v0 + 16);
  uint64_t v2 = *(void **)(v0 + 24);
  if (*(unsigned char *)(v0 + 32))
  {
    if (v2)
    {
      sub_1C2B4CE88(*(void **)(v0 + 16), *(void **)(v0 + 24), 1);
      swift_retain();
      id v3 = v2;
      id v4 = objc_msgSend(v3, sel_doseQuantity);
      if (v4)
      {
        uint64_t v5 = v4;
        objc_msgSend(v4, sel_doubleValue);
        uint64_t v7 = v6;

        swift_release();
        id v8 = v1;
        uint64_t v9 = v2;
        char v10 = 1;
LABEL_7:
        sub_1C2B4CED4(v8, v9, v10);
        return v7;
      }
      swift_release();

      sub_1C2B4CED4(v1, v2, 1);
      return 0;
    }
    else
    {
      return *(void *)&v1[OBJC_IVAR____TtC27HealthMedicationsExperience12ScheduleItem_doseAmount];
    }
  }
  else
  {
    id v11 = objc_msgSend(v1, sel_doseQuantity);
    if (v11)
    {
      uint64_t v12 = v11;
      objc_msgSend(v11, sel_doubleValue);
      uint64_t v7 = v13;

      id v8 = v1;
      uint64_t v9 = v2;
      char v10 = 0;
      goto LABEL_7;
    }
    sub_1C2B4CED4(v1, v2, 0);
    return 0;
  }
}

uint64_t MedicationDose.medicationIdentifier.getter()
{
  uint64_t v1 = *(char **)(v0 + 16);
  if (*(unsigned char *)(v0 + 32))
  {
    uint64_t v2 = *(void *)&v1[OBJC_IVAR____TtC27HealthMedicationsExperience12ScheduleItem_medicationIdentifier];
    swift_bridgeObjectRetain();
  }
  else
  {
    id v3 = *(void **)(v0 + 24);
    id v4 = objc_msgSend(v1, sel_medicationIdentifier);
    uint64_t v2 = sub_1C2B73FA0();

    sub_1C2B4CED4(v1, v3, 0);
    sub_1C2B4CED4(v1, v3, 0);
  }
  return v2;
}

uint64_t MedicationDose.deinit()
{
  sub_1C2B4CED4(*(void **)(v0 + 16), *(void **)(v0 + 24), *(unsigned char *)(v0 + 32));
  uint64_t v1 = v0 + OBJC_IVAR____TtC27HealthMedicationsExperience14MedicationDose__medication;
  sub_1C2B4D360(0, (unint64_t *)&unk_1EBF10B40, MEMORY[0x1E4F1AC70]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return v0;
}

uint64_t MedicationDose.__deallocating_deinit()
{
  sub_1C2B4CED4(*(void **)(v0 + 16), *(void **)(v0 + 24), *(unsigned char *)(v0 + 32));
  uint64_t v1 = v0 + OBJC_IVAR____TtC27HealthMedicationsExperience14MedicationDose__medication;
  sub_1C2B4D360(0, (unint64_t *)&unk_1EBF10B40, MEMORY[0x1E4F1AC70]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return swift_deallocClassInstance();
}

unint64_t sub_1C2B4CB50()
{
  return MedicationDose.description.getter();
}

uint64_t sub_1C2B4CB74@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C2B73BB0();
  *a1 = result;
  return result;
}

uint64_t sub_1C2B4CBC4(uint64_t *a1, uint64_t *a2)
{
  return _s27HealthMedicationsExperience14MedicationDoseC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t _s27HealthMedicationsExperience18MedicationDoseTypeO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  id v3 = *(void **)(a1 + 8);
  char v4 = *(unsigned char *)(a1 + 16);
  uint64_t v5 = *(void **)a2;
  uint64_t v6 = *(void **)(a2 + 8);
  char v7 = *(unsigned char *)(a2 + 16);
  if ((v4 & 1) == 0)
  {
    if ((*(unsigned char *)(a2 + 16) & 1) == 0)
    {
      sub_1C2AE3A18(0, (unint64_t *)&qword_1EBF10810);
      sub_1C2B4CE88(v5, v6, 0);
      sub_1C2B4CE88(v2, v3, 0);
      char v17 = sub_1C2B745F0();
      sub_1C2B4CED4(v2, v3, 0);
      sub_1C2B4CED4(v5, v6, 0);
      return v17 & 1;
    }
    goto LABEL_9;
  }
  if ((*(unsigned char *)(a2 + 16) & 1) == 0)
  {
LABEL_9:
    sub_1C2B4CE88(*(void **)a2, *(void **)(a2 + 8), v7);
    sub_1C2B4CE88(v2, v3, v4);
    sub_1C2B4CED4(v2, v3, v4);
    char v14 = v5;
    uint64_t v15 = v6;
    char v16 = v7;
LABEL_12:
    sub_1C2B4CED4(v14, v15, v16);
    return 0;
  }
  sub_1C2B4CE88(*(void **)a2, *(void **)(a2 + 8), 1);
  sub_1C2B4CE88(v2, v3, 1);
  id v8 = v6;
  swift_retain();
  swift_retain();
  id v9 = v3;
  if ((_s27HealthMedicationsExperience12ScheduleItemC2eeoiySbAC_ACtFZ_0((uint64_t)v2, (uint64_t)v5) & 1) == 0)
  {
    swift_release();
    swift_release();

    sub_1C2B4CED4(v2, v3, 1);
    char v14 = v5;
    uint64_t v15 = v6;
    char v16 = 1;
    goto LABEL_12;
  }
  if (v3)
  {
    if (v6)
    {
      sub_1C2AE3A18(0, &qword_1EBF110C0);
      id v10 = v9;
      id v11 = v8;
      char v12 = sub_1C2B745F0();
      swift_release();
      swift_release();

      uint64_t v13 = 1;
      sub_1C2B4CED4(v2, v3, 1);
      sub_1C2B4CED4(v5, v6, 1);

      if (v12) {
        return v13;
      }
      return 0;
    }
    id v8 = v9;
    swift_release();
    swift_release();
    sub_1C2B4CED4(v2, v3, 1);
    sub_1C2B4CED4(v5, 0, 1);
  }
  else
  {
    swift_release();
    swift_release();
    uint64_t v13 = 1;
    sub_1C2B4CED4(v2, 0, 1);
    sub_1C2B4CED4(v5, v6, 1);
    if (!v6) {
      return v13;
    }
  }

  return 0;
}

id sub_1C2B4CE88(void *a1, void *a2, char a3)
{
  if (a3)
  {
    id v4 = a2;
    return (id)swift_retain();
  }
  else
  {
    return a1;
  }
}

void sub_1C2B4CED4(void *a1, void *a2, char a3)
{
  if (a3)
  {
    swift_release();
    a1 = a2;
    uint64_t v3 = vars8;
  }
}

uint64_t _s27HealthMedicationsExperience14MedicationDoseC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  char v2 = *(unsigned char *)(a1 + 32);
  long long v10 = *(_OWORD *)(a1 + 16);
  char v11 = v2;
  char v3 = *(unsigned char *)(a2 + 32);
  long long v8 = *(_OWORD *)(a2 + 16);
  char v9 = v3;
  if (_s27HealthMedicationsExperience18MedicationDoseTypeO2eeoiySbAC_ACtFZ_0((uint64_t)&v10, (uint64_t)&v8))
  {
    sub_1C2AE3A18(0, (unint64_t *)&qword_1EBF10810);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1C2B73CE0();
    swift_release();
    swift_release();
    id v4 = (void *)v10;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1C2B73CE0();
    swift_release();
    swift_release();
    uint64_t v5 = (void *)v10;
    char v6 = sub_1C2B745F0();
  }
  else
  {
    char v6 = 0;
  }
  return v6 & 1;
}

void destroy for MedicationDoseType(uint64_t a1)
{
}

uint64_t _s27HealthMedicationsExperience18MedicationDoseTypeOwCP_0(uint64_t a1, uint64_t a2)
{
  char v3 = *(void **)a2;
  id v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1C2B4CE88(*(void **)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for MedicationDoseType(uint64_t a1, uint64_t a2)
{
  char v3 = *(void **)a2;
  id v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1C2B4CE88(*(void **)a2, v4, v5);
  char v6 = *(void **)a1;
  char v7 = *(void **)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_1C2B4CED4(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for MedicationDoseType(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  id v4 = *(void **)a1;
  char v5 = *(void **)(a1 + 8);
  char v6 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_1C2B4CED4(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for MedicationDoseType(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MedicationDoseType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1C2B4D1FC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_1C2B4D204(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for MedicationDoseType()
{
  return &type metadata for MedicationDoseType;
}

uint64_t sub_1C2B4D220()
{
  return type metadata accessor for MedicationDose();
}

uint64_t type metadata accessor for MedicationDose()
{
  uint64_t result = qword_1EBF10AC8;
  if (!qword_1EBF10AC8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C2B4D274()
{
  sub_1C2B4D360(319, (unint64_t *)&unk_1EBF10B40, MEMORY[0x1E4F1AC70]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for MedicationDose(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationDose);
}

uint64_t dispatch thunk of MedicationDose.__allocating_init(_:medicationDetailProvider:medication:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

void sub_1C2B4D360(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_1C2AE3A18(255, (unint64_t *)&qword_1EBF112D0);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t static MedicationOntologyContentProviderError.== infix(_:_:)()
{
  return 1;
}

uint64_t MedicationOntologyContentProviderError.hash(into:)()
{
  return sub_1C2B74C30();
}

uint64_t MedicationOntologyContentProviderError.hashValue.getter()
{
  return sub_1C2B74C60();
}

uint64_t sub_1C2B4D444()
{
  return sub_1C2B74C60();
}

uint64_t sub_1C2B4D488()
{
  return sub_1C2B74C30();
}

uint64_t sub_1C2B4D4B0()
{
  return sub_1C2B74C60();
}

id MedicationOntologyContentProvider.healthStore.getter()
{
  return *(id *)(v0 + 16);
}

uint64_t MedicationOntologyContentProvider.__allocating_init(with:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t sub_1C2B4D52C(void *a1)
{
  uint64_t v2 = v1;
  sub_1C2B4D6D8();
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  *(void *)(v9 + 24) = v2;
  sub_1C2B4D76C();
  sub_1C2B4D8EC(&qword_1EA32C248, (void (*)(uint64_t))sub_1C2B4D76C);
  id v10 = a1;
  swift_retain();
  sub_1C2B73C90();
  sub_1C2B4D8EC(&qword_1EA32C250, (void (*)(uint64_t))sub_1C2B4D6D8);
  uint64_t v11 = sub_1C2B73D00();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v11;
}

void sub_1C2B4D6D8()
{
  if (!qword_1EA32C230)
  {
    sub_1C2B4D76C();
    sub_1C2B4D8EC(&qword_1EA32C248, (void (*)(uint64_t))sub_1C2B4D76C);
    unint64_t v0 = sub_1C2B73CA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA32C230);
    }
  }
}

void sub_1C2B4D76C()
{
  if (!qword_1EA32C238)
  {
    sub_1C2B4D7DC();
    sub_1C2AF44C8();
    unint64_t v0 = sub_1C2B73C60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA32C238);
    }
  }
}

void sub_1C2B4D7DC()
{
  if (!qword_1EA32C240)
  {
    sub_1C2AE3A18(255, (unint64_t *)&qword_1EA32BA78);
    unint64_t v0 = sub_1C2B74630();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA32C240);
    }
  }
}

uint64_t sub_1C2B4D844@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  sub_1C2B4D76C();
  swift_allocObject();
  id v7 = a1;
  swift_retain();
  uint64_t result = sub_1C2B73C70();
  *a3 = result;
  return result;
}

uint64_t sub_1C2B4D8E4@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C2B4D844(*(void **)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_1C2B4D8EC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C2B4D934(void (*a1)(uint64_t *), uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  swift_retain();
  id v9 = objc_msgSend(a3, sel_firstOntologyCoding);
  if (!v9 || (id v10 = v9, v11 = objc_msgSend(v9, sel_code), v10, !v11))
  {
LABEL_48:
    swift_release();
LABEL_49:
    uint64_t aBlock = 0;
    LOBYTE(v46) = 0;
    a1(&aBlock);
    return;
  }
  uint64_t v12 = sub_1C2B73FA0();
  unint64_t v14 = v13;

  uint64_t v15 = HIBYTE(v14) & 0xF;
  uint64_t v16 = v12 & 0xFFFFFFFFFFFFLL;
  if ((v14 & 0x2000000000000000) != 0) {
    uint64_t v17 = HIBYTE(v14) & 0xF;
  }
  else {
    uint64_t v17 = v12 & 0xFFFFFFFFFFFFLL;
  }
  if (!v17)
  {
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_49;
  }
  if ((v14 & 0x1000000000000000) != 0)
  {
    uint64_t v19 = (uint64_t)sub_1C2B4EADC(v12, v14, 10);
    LOBYTE(v12) = v44;
    goto LABEL_46;
  }
  if ((v14 & 0x2000000000000000) == 0)
  {
    if ((v12 & 0x1000000000000000) != 0) {
      uint64_t v18 = (unsigned __int8 *)((v14 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v18 = (unsigned __int8 *)sub_1C2B748B0();
    }
    uint64_t v19 = (uint64_t)sub_1C2B4EC28(v18, v16, 10);
    LOBYTE(v12) = v20 & 1;
LABEL_46:
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0)
    {
      uint64_t v30 = self;
      sub_1C2B4EEA4(0, (unint64_t *)&qword_1EBF11390);
      uint64_t v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = xmmword_1C2B764F0;
      id v32 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v19);
      id v33 = objc_msgSend(self, sel_identifierWithNumber_, v32);

      id v34 = objc_msgSend(v30, sel_selectionForNodeWithIdentifier_, v33);
      *(void *)(v31 + 32) = v34;
      uint64_t aBlock = v31;
      sub_1C2B741F0();
      sub_1C2AE3A18(0, &qword_1EA32C260);
      uint64_t v35 = (void *)sub_1C2B741C0();
      swift_bridgeObjectRelease();
      id v36 = objc_msgSend(v30, sel_andSelectionWithSubselections_, v35);

      uint64_t v37 = (void *)swift_allocObject();
      v37[2] = sub_1C2B2E350;
      v37[3] = v8;
      uint64_t v37[4] = a4;
      id v38 = objc_allocWithZone(MEMORY[0x1E4F2ADF0]);
      uint64_t v49 = sub_1C2B4EC04;
      uint64_t v50 = v37;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v46 = 1107296256;
      uint64_t v47 = sub_1C2B4E418;
      uint64_t v48 = &block_descriptor_12;
      uint64_t v39 = _Block_copy(&aBlock);
      swift_retain();
      id v40 = objc_msgSend(v38, sel_initWithConceptSelection_resultsHandler_, v36, v39);
      _Block_release(v39);
      swift_release();
      objc_msgSend(*(id *)(a4 + 16), sel_executeQuery_, v40);

      return;
    }
    goto LABEL_48;
  }
  uint64_t aBlock = v12;
  uint64_t v46 = v14 & 0xFFFFFFFFFFFFFFLL;
  if (v12 == 43)
  {
    if (!v15) {
      goto LABEL_60;
    }
    if (v15 == 1 || (BYTE1(v12) - 48) > 9u) {
      goto LABEL_33;
    }
    uint64_t v19 = (BYTE1(v12) - 48);
    if (v15 != 2)
    {
      if ((BYTE2(v12) - 48) > 9u) {
        goto LABEL_33;
      }
      uint64_t v19 = 10 * (BYTE1(v12) - 48) + (BYTE2(v12) - 48);
      uint64_t v21 = v15 - 3;
      if (v21)
      {
        uint64_t v22 = (unsigned __int8 *)&aBlock + 3;
        while (1)
        {
          unsigned int v23 = *v22 - 48;
          if (v23 > 9) {
            goto LABEL_33;
          }
          uint64_t v24 = 10 * v19;
          if ((unsigned __int128)(v19 * (__int128)10) >> 64 != (10 * v19) >> 63) {
            goto LABEL_33;
          }
          uint64_t v19 = v24 + v23;
          if (__OFADD__(v24, v23)) {
            goto LABEL_33;
          }
          LOBYTE(v12) = 0;
          ++v22;
          if (!--v21) {
            goto LABEL_46;
          }
        }
      }
    }
LABEL_45:
    LOBYTE(v12) = 0;
    goto LABEL_46;
  }
  if (v12 != 45)
  {
    if (!v15 || (v12 - 48) > 9u) {
      goto LABEL_33;
    }
    uint64_t v19 = (v12 - 48);
    if (v15 != 1)
    {
      if ((BYTE1(v12) - 48) > 9u) {
        goto LABEL_33;
      }
      uint64_t v19 = 10 * (v12 - 48) + (BYTE1(v12) - 48);
      uint64_t v25 = v15 - 2;
      if (v25)
      {
        BOOL v26 = (unsigned __int8 *)&aBlock + 2;
        while (1)
        {
          unsigned int v27 = *v26 - 48;
          if (v27 > 9) {
            goto LABEL_33;
          }
          uint64_t v28 = 10 * v19;
          if ((unsigned __int128)(v19 * (__int128)10) >> 64 != (10 * v19) >> 63) {
            goto LABEL_33;
          }
          uint64_t v19 = v28 + v27;
          if (__OFADD__(v28, v27)) {
            goto LABEL_33;
          }
          LOBYTE(v12) = 0;
          ++v26;
          if (!--v25) {
            goto LABEL_46;
          }
        }
      }
    }
    goto LABEL_45;
  }
  if (v15)
  {
    if (v15 != 1 && (BYTE1(v12) - 48) <= 9u)
    {
      if (v15 == 2)
      {
        LOBYTE(v12) = 0;
        uint64_t v19 = -(uint64_t)(BYTE1(v12) - 48);
        goto LABEL_46;
      }
      if ((BYTE2(v12) - 48) <= 9u)
      {
        uint64_t v19 = -10 * (BYTE1(v12) - 48) - (BYTE2(v12) - 48);
        uint64_t v29 = v15 - 3;
        if (!v29) {
          goto LABEL_45;
        }
        uint64_t v41 = (unsigned __int8 *)&aBlock + 3;
        while (1)
        {
          unsigned int v42 = *v41 - 48;
          if (v42 > 9) {
            break;
          }
          uint64_t v43 = 10 * v19;
          if ((unsigned __int128)(v19 * (__int128)10) >> 64 != (10 * v19) >> 63) {
            break;
          }
          uint64_t v19 = v43 - v42;
          if (__OFSUB__(v43, v42)) {
            break;
          }
          LOBYTE(v12) = 0;
          ++v41;
          if (!--v29) {
            goto LABEL_46;
          }
        }
      }
    }
LABEL_33:
    uint64_t v19 = 0;
    LOBYTE(v12) = 1;
    goto LABEL_46;
  }
  __break(1u);
LABEL_60:
  __break(1u);
}

void sub_1C2B4DECC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(void, void), uint64_t a6, uint64_t a7)
{
  uint64_t v13 = sub_1C2B73A90();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a4)
  {
    id v17 = a4;
    sub_1C2B73A70();
    id v18 = a4;
    id v19 = a4;
    char v20 = sub_1C2B73A80();
    os_log_type_t v21 = sub_1C2B744C0();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v31 = a5;
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      v30[2] = a6;
      uint64_t v24 = v23;
      uint64_t v32 = (uint64_t)a4;
      uint64_t v33 = v23;
      *(_DWORD *)uint64_t v22 = 136446210;
      v30[1] = v22 + 4;
      id v25 = a4;
      sub_1C2AF44C8();
      uint64_t v26 = sub_1C2B74010();
      uint64_t v32 = sub_1C2AEEE6C(v26, v27, &v33);
      sub_1C2B74650();
      a5 = v31;
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C2ADB000, v20, v21, "Failed to query for hk concept using user domain concept: %{public}s", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C8767A10](v24, -1, -1);
      MEMORY[0x1C8767A10](v22, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    id v29 = a4;
    a5(a4, 1);
  }
  else
  {
    a5(a2, 0);
    uint64_t v28 = *(void **)(a7 + 16);
    objc_msgSend(v28, sel_stopQuery_, a1);
  }
}

uint64_t MedicationOntologyContentProvider.deinit()
{
  return v0;
}

uint64_t MedicationOntologyContentProvider.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

unint64_t sub_1C2B4E1F8()
{
  unint64_t result = qword_1EA32C258;
  if (!qword_1EA32C258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA32C258);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for MedicationVisualizationConfigVersion(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for MedicationOntologyContentProviderError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C2B4E33CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C2B4E364()
{
  return 0;
}

ValueMetadata *type metadata accessor for MedicationOntologyContentProviderError()
{
  return &type metadata for MedicationOntologyContentProviderError;
}

uint64_t method lookup function for MedicationOntologyContentProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationOntologyContentProvider);
}

uint64_t dispatch thunk of MedicationOntologyContentProvider.__allocating_init(with:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of MedicationOntologyContentProvider.hkConceptPublisher(with:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t objectdestroyTm_3()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1C2B4E410(void (*a1)(uint64_t *), uint64_t a2)
{
  sub_1C2B4D934(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24));
}

void sub_1C2B4E418(uint64_t a1, void *a2, void *a3, uint64_t a4, void *a5)
{
  id v9 = *(void (**)(id, void *, uint64_t, void *))(a1 + 32);
  swift_retain();
  id v12 = a2;
  id v10 = a3;
  id v11 = a5;
  v9(v12, a3, a4, a5);
  swift_release();
}

void *sub_1C2B4E4C8(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1C2B4EEA4(0, &qword_1EA32BAC0);
  unsigned int v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1C2B4E53C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_1C2B74100();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = MEMORY[0x1C8766510](15, a1 >> 16);
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

uint64_t sub_1C2B4E5B8()
{
  unint64_t v0 = sub_1C2B74140();
  uint64_t v4 = sub_1C2B4E638(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1C2B4E638(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    unint64_t v9 = sub_1C2B4E790(a1, a2, a3, a4);
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = sub_1C2B4E4C8(v9, 0);
      unint64_t v12 = sub_1C2B4E890((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
LABEL_11:
        sub_1C2B748B0();
LABEL_4:
        JUMPOUT(0x1C87664A0);
      }
    }
    else
    {
      uint64_t v11 = (void *)MEMORY[0x1E4FBC860];
    }
    uint64_t v13 = MEMORY[0x1C87664A0](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x1C87664A0]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

unint64_t sub_1C2B4E790(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7 = result;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    unint64_t result = sub_1C2B4E53C(result, a3, a4);
    unint64_t v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    unint64_t result = sub_1C2B4E53C(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0) {
      return (a2 >> 16) - (v7 >> 16);
    }
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  unint64_t v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0) {
    unint64_t v10 = a3 & 0xFFFFFFFFFFFFLL;
  }
  if (v10 < v7 >> 16)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v10 < a2 >> 16)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  return sub_1C2B740E0();
}

unint64_t sub_1C2B4E890(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    void v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    unint64_t result = v12;
    if (v17 == v15) {
      unint64_t result = sub_1C2B4E53C(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      unint64_t result = sub_1C2B740F0();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        unint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          unint64_t result = sub_1C2B748B0();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    unint64_t result = sub_1C2B4E53C(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = sub_1C2B740C0();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1C2B4EAA4()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

unsigned __int8 *sub_1C2B4EADC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1C2B74130();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    unint64_t v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_1C2B4E5B8();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    unint64_t v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    unint64_t v7 = (unsigned __int8 *)sub_1C2B748B0();
  }
LABEL_7:
  uint64_t v11 = sub_1C2B4EC28(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1C2B4EBC4()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_1C2B4EC04(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  sub_1C2B4DECC(a1, a2, a3, a4, *(void (**)(void, void))(v4 + 16), *(void *)(v4 + 24), *(void *)(v4 + 32));
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

unsigned __int8 *sub_1C2B4EC28(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (uint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      unsigned __int8 v22 = a3 + 48;
      unsigned __int8 v23 = a3 + 55;
      unsigned __int8 v24 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v22 = 58;
      }
      else
      {
        unsigned __int8 v24 = 97;
        unsigned __int8 v23 = 65;
      }
      if (result)
      {
        uint64_t v25 = 0;
        do
        {
          unsigned int v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24) {
                return 0;
              }
              char v27 = -87;
            }
            else
            {
              char v27 = -55;
            }
          }
          else
          {
            char v27 = -48;
          }
          uint64_t v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63) {
            return 0;
          }
          uint64_t v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  uint64_t v14 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v15 = a3 + 48;
  unsigned __int8 v16 = a3 + 55;
  unsigned __int8 v17 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v15 = 58;
  }
  else
  {
    unsigned __int8 v17 = 97;
    unsigned __int8 v16 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  unint64_t v18 = result + 1;
  do
  {
    unsigned int v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17) {
          return 0;
        }
        char v20 = -87;
      }
      else
      {
        char v20 = -55;
      }
    }
    else
    {
      char v20 = -48;
    }
    uint64_t v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20))) {
      return 0;
    }
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

void sub_1C2B4EEA4(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_1C2B74B20();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t localized(_:locale:source:value:comment:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t result = sub_1C2B735A0();
  if (*(void *)(a9 + 16))
  {
    uint64_t v10 = sub_1C2B73FD0();
    swift_bridgeObjectRelease();
    return v10;
  }
  return result;
}

uint64_t LocalizationSource.stringsTable(forLanguageCode:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  id v7 = *v3;
  id v8 = objc_msgSend(*v3, sel_localizations);
  if (!v8)
  {
    sub_1C2B741D0();
    id v8 = (id)sub_1C2B741C0();
    swift_bridgeObjectRelease();
  }
  uint64_t v9 = self;
  sub_1C2B4F3D0();
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1C2B76500;
  *(void *)(v10 + 32) = a1;
  *(void *)(v10 + 40) = a2;
  swift_bridgeObjectRetain();
  unsigned int v11 = (void *)sub_1C2B741C0();
  swift_bridgeObjectRelease();
  id v12 = objc_msgSend(v9, sel_preferredLocalizationsFromArray_forPreferences_, v8, v11);

  uint64_t v13 = sub_1C2B741D0();
  if (*(void *)(v13 + 16))
  {
    uint64_t v14 = *(void *)(v13 + 40);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v14 = 0;
  }
  swift_bridgeObjectRelease();
  unsigned __int8 v15 = (void *)sub_1C2B73F60();
  unsigned __int8 v16 = (void *)sub_1C2B73F60();
  if (v14)
  {
    unsigned __int8 v17 = (void *)sub_1C2B73F60();
    swift_bridgeObjectRelease();
  }
  else
  {
    unsigned __int8 v17 = 0;
  }
  id v18 = objc_msgSend(v7, sel_URLForResource_withExtension_subdirectory_localization_, v15, v16, 0, v17);

  if (v18)
  {
    sub_1C2B73650();

    uint64_t v19 = sub_1C2B73660();
    char v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
    uint64_t v21 = v19;
    uint64_t v22 = a3;
    uint64_t v23 = 0;
  }
  else
  {
    uint64_t v24 = sub_1C2B73660();
    char v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56);
    uint64_t v21 = v24;
    uint64_t v22 = a3;
    uint64_t v23 = 1;
  }
  return v20(v22, v23, 1, v21);
}

id LocalizationSource.bundle.getter()
{
  return *v0;
}

uint64_t LocalizationSource.table.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

HealthMedicationsExperience::LocalizationSource __swiftcall LocalizationSource.init(bundle:table:)(NSBundle bundle, Swift::String table)
{
  *(NSBundle *)uint64_t v2 = bundle;
  *(Swift::String *)(v2 + 8) = table;
  result.table = table;
  result.bundle = bundle;
  return result;
}

id sub_1C2B4F23C()
{
  if (qword_1EBF10BD8 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_1EBF10BE8;
  qword_1EBF10F60 = qword_1EBF10BE8;
  *(void *)algn_1EBF10F68 = 0xD000000000000027;
  qword_1EBF10F70 = 0x80000001C2B7CB00;
  return v0;
}

uint64_t static LocalizationSource.healthMedicationsExperience.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EBF10F78 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_1EBF10F60;
  uint64_t v3 = *(void *)algn_1EBF10F68;
  uint64_t v4 = qword_1EBF10F70;
  *a1 = qword_1EBF10F60;
  a1[1] = v3;
  a1[2] = v4;
  id v5 = v2;
  return swift_bridgeObjectRetain();
}

uint64_t localized(_:locale:source:value:comment:arguments:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t result = sub_1C2B735A0();
  if (*(void *)(a9 + 16))
  {
    uint64_t v10 = sub_1C2B73FD0();
    swift_bridgeObjectRelease();
    return v10;
  }
  return result;
}

void sub_1C2B4F3D0()
{
  if (!qword_1EBF110A8)
  {
    unint64_t v0 = sub_1C2B74B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBF110A8);
    }
  }
}

uint64_t String.localized(source:locale:value:comment:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t result = sub_1C2B735A0();
  if (*(void *)(a7 + 16))
  {
    uint64_t v9 = sub_1C2B73FD0();
    swift_bridgeObjectRelease();
    return v9;
  }
  return result;
}

uint64_t LocalizationSource.localized(_:locale:value:comment:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t result = sub_1C2B735A0();
  if (*(void *)(a8 + 16))
  {
    uint64_t v10 = sub_1C2B73FD0();
    swift_bridgeObjectRelease();
    return v10;
  }
  return result;
}

uint64_t destroy for LocalizationSource(id *a1)
{
  return swift_bridgeObjectRelease();
}

void *_s27HealthMedicationsExperience18LocalizationSourceVwCP_0(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  a1[2] = *(void *)(a2 + 16);
  id v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LocalizationSource(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for LocalizationSource(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v5 = a2[2];
  *(void *)(a1 + 8) = a2[1];
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for LocalizationSource()
{
  return &type metadata for LocalizationSource;
}

uint64_t MedmojiColor.accessibilityLabel.getter()
{
  if (qword_1EBF10F78 != -1) {
    swift_once();
  }
  id v0 = (id)qword_1EBF10F60;
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_1C2B735A0();
  swift_bridgeObjectRelease();

  return v1;
}

id MedmojiColor.color.getter()
{
  return *v0;
}

uint64_t MedmojiColor.localizationKey.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

id sub_1C2B4F798()
{
  sub_1C2B4EEA4(0, &qword_1EBF10820);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C2B78760;
  *(void *)(v0 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithRed_green_blue_alpha_, 0.133333333, 0.443137255, 0.611764706, 1.0);
  *(void *)(v0 + 40) = 0xD000000000000022;
  *(void *)(v0 + 48) = 0x80000001C2B7CCD0;
  *(void *)(v0 + 56) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithRed_green_blue_alpha_, 0.368627451, 0.364705882, 0.376470588, 1.0);
  *(void *)(v0 + 64) = 0xD00000000000001DLL;
  *(void *)(v0 + 72) = 0x80000001C2B7CD00;
  *(void *)(v0 + 80) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithRed_green_blue_alpha_, 1.0, 0.8, 0.0, 1.0);
  *(void *)(v0 + 88) = 0xD00000000000001FLL;
  *(void *)(v0 + 96) = 0x80000001C2B7CD20;
  *(void *)(v0 + 104) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithRed_green_blue_alpha_, 1.0, 0.509803922, 0.384313725, 1.0);
  *(void *)(v0 + 112) = 0xD00000000000001ELL;
  *(void *)(v0 + 120) = 0x80000001C2B7CD40;
  *(void *)(v0 + 128) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithRed_green_blue_alpha_, 0.670588235, 0.749019608, 0.345098039, 1.0);
  *(void *)(v0 + 136) = 0xD000000000000023;
  *(void *)(v0 + 144) = 0x80000001C2B7CD60;
  *(void *)(v0 + 152) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithRed_green_blue_alpha_, 0.0, 0.847058824, 0.556862745, 1.0);
  *(void *)(v0 + 160) = 0xD000000000000023;
  *(void *)(v0 + 168) = 0x80000001C2B7CD90;
  *(void *)(v0 + 176) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithRed_green_blue_alpha_, 0.0, 0.670588235, 0.905882353, 1.0);
  *(void *)(v0 + 184) = 0xD000000000000023;
  *(void *)(v0 + 192) = 0x80000001C2B7CDC0;
  *(void *)(v0 + 200) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithRed_green_blue_alpha_, 0.639215686, 0.419607843, 0.905882353, 1.0);
  *(void *)(v0 + 208) = 0xD000000000000025;
  *(void *)(v0 + 216) = 0x80000001C2B7CDF0;
  *(void *)(v0 + 224) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithRed_green_blue_alpha_, 0.650980392, 0.533333333, 0.705882353, 1.0);
  *(void *)(v0 + 232) = 0xD000000000000024;
  *(void *)(v0 + 240) = 0x80000001C2B7CE20;
  *(void *)(v0 + 248) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithRed_green_blue_alpha_, 1.0, 0.474509804, 0.670588235, 1.0);
  *(void *)(v0 + 256) = 0xD00000000000001DLL;
  *(void *)(v0 + 264) = 0x80000001C2B7CE50;
  *(void *)(v0 + 272) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithRed_green_blue_alpha_, 0.839215686, 0.235294118, 0.2, 1.0);
  *(void *)(v0 + 280) = 0xD00000000000001CLL;
  *(void *)(v0 + 288) = 0x80000001C2B7CE70;
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithRed_green_blue_alpha_, 0.792156863, 0.580392157, 0.317647059, 1.0);
  *(void *)(v0 + 296) = result;
  *(void *)(v0 + 304) = 0xD00000000000001FLL;
  *(void *)(v0 + 312) = 0x80000001C2B7CE90;
  off_1EBF106E0 = (_UNKNOWN *)v0;
  return result;
}

uint64_t static MedmojiColor.backgroundColors.getter()
{
  return sub_1C2B50040(&qword_1EBF106F0);
}

uint64_t static MedmojiColor.backgroundColors.setter(uint64_t a1)
{
  return sub_1C2B500C0(a1, &qword_1EBF106F0, &off_1EBF106E0);
}

uint64_t (*static MedmojiColor.backgroundColors.modify())()
{
  if (qword_1EBF106F0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

id sub_1C2B4FC28()
{
  sub_1C2B4EEA4(0, &qword_1EBF10820);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C2B78760;
  if (qword_1EBF10808 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v1 = (void *)qword_1EBF107F8;
  *(void *)(v0 + 32) = qword_1EBF107F8;
  *(void *)(v0 + 40) = 0xD00000000000001CLL;
  *(void *)(v0 + 48) = 0x80000001C2B7CB30;
  id v2 = objc_allocWithZone(MEMORY[0x1E4FB1618]);
  id v3 = v1;
  *(void *)(v0 + 56) = objc_msgSend(v2, sel_initWithRed_green_blue_alpha_, 0.819607843, 0.819607843, 0.839215686, 1.0);
  *(void *)(v0 + 64) = 0xD00000000000001BLL;
  *(void *)(v0 + 72) = 0x80000001C2B7CB50;
  *(void *)(v0 + 80) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithRed_green_blue_alpha_, 0.976470588, 0.91372549, 0.717647059, 1.0);
  *(void *)(v0 + 88) = 0xD00000000000001CLL;
  *(void *)(v0 + 96) = 0x80000001C2B7CB70;
  *(void *)(v0 + 104) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithRed_green_blue_alpha_, 0.964705882, 0.768627451, 0.705882353, 1.0);
  *(void *)(v0 + 112) = 0xD00000000000001CLL;
  *(void *)(v0 + 120) = 0x80000001C2B7CB90;
  *(void *)(v0 + 128) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithRed_green_blue_alpha_, 0.88627451, 0.941176471, 0.494117647, 1.0);
  *(void *)(v0 + 136) = 0xD00000000000001BLL;
  *(void *)(v0 + 144) = 0x80000001C2B7CBB0;
  *(void *)(v0 + 152) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithRed_green_blue_alpha_, 0.643137255, 0.890196078, 0.721568627, 1.0);
  *(void *)(v0 + 160) = 0xD000000000000021;
  *(void *)(v0 + 168) = 0x80000001C2B7CBD0;
  *(void *)(v0 + 176) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithRed_green_blue_alpha_, 0.588235294, 0.862745098, 1.0, 1.0);
  *(void *)(v0 + 184) = 0xD00000000000001FLL;
  *(void *)(v0 + 192) = 0x80000001C2B7CC00;
  *(void *)(v0 + 200) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithRed_green_blue_alpha_, 0.529411765, 0.588235294, 1.0, 1.0);
  *(void *)(v0 + 208) = 0xD000000000000020;
  *(void *)(v0 + 216) = 0x80000001C2B7CC20;
  *(void *)(v0 + 224) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithRed_green_blue_alpha_, 0.784313725, 0.662745098, 0.988235294, 1.0);
  *(void *)(v0 + 232) = 0xD00000000000001DLL;
  *(void *)(v0 + 240) = 0x80000001C2B7CC50;
  *(void *)(v0 + 248) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithRed_green_blue_alpha_, 0.960784314, 0.701960784, 0.854901961, 1.0);
  *(void *)(v0 + 256) = 0xD00000000000001BLL;
  *(void *)(v0 + 264) = 0x80000001C2B7CC70;
  *(void *)(v0 + 272) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithRed_green_blue_alpha_, 1.0, 0.345098039, 0.309803922, 1.0);
  *(void *)(v0 + 280) = 0xD00000000000001ALL;
  *(void *)(v0 + 288) = 0x80000001C2B7CC90;
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithRed_green_blue_alpha_, 1.0, 0.584313725, 0.0, 1.0);
  *(void *)(v0 + 296) = result;
  *(void *)(v0 + 304) = 0xD00000000000001DLL;
  *(void *)(v0 + 312) = 0x80000001C2B7CCB0;
  off_1EBF106D0 = (_UNKNOWN *)v0;
  return result;
}

uint64_t static MedmojiColor.fragmentColors.getter()
{
  return sub_1C2B50040(&qword_1EBF106D8);
}

uint64_t sub_1C2B50040(void *a1)
{
  if (*a1 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static MedmojiColor.fragmentColors.setter(uint64_t a1)
{
  return sub_1C2B500C0(a1, &qword_1EBF106D8, &off_1EBF106D0);
}

uint64_t sub_1C2B500C0(uint64_t a1, void *a2, void *a3)
{
  if (*a2 != -1) {
    swift_once();
  }
  swift_beginAccess();
  *a3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static MedmojiColor.fragmentColors.modify())()
{
  if (qword_1EBF106D8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t MedmojiColor.hash(into:)()
{
  id v1 = *v0;
  sub_1C2B74600();

  swift_bridgeObjectRetain();
  sub_1C2B74070();
  return swift_bridgeObjectRelease();
}

uint64_t static MedmojiColor.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  sub_1C2AF55A8();
  if ((sub_1C2B745F0() & 1) == 0) {
    return 0;
  }
  if (v2 == v4 && v3 == v5) {
    return 1;
  }
  return sub_1C2B74B50();
}

uint64_t MedmojiColor.hashValue.getter()
{
  id v1 = *v0;
  sub_1C2B74C20();
  id v2 = v1;
  sub_1C2B74600();

  swift_bridgeObjectRetain();
  sub_1C2B74070();
  swift_bridgeObjectRelease();
  return sub_1C2B74C60();
}

uint64_t sub_1C2B50348()
{
  id v1 = *v0;
  sub_1C2B74C20();
  id v2 = v1;
  sub_1C2B74600();

  swift_bridgeObjectRetain();
  sub_1C2B74070();
  swift_bridgeObjectRelease();
  return sub_1C2B74C60();
}

uint64_t sub_1C2B503C4()
{
  id v1 = *v0;
  sub_1C2B74600();

  swift_bridgeObjectRetain();
  sub_1C2B74070();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2B50434()
{
  id v1 = *v0;
  sub_1C2B74C20();
  id v2 = v1;
  sub_1C2B74600();

  swift_bridgeObjectRetain();
  sub_1C2B74070();
  swift_bridgeObjectRelease();
  return sub_1C2B74C60();
}

uint64_t sub_1C2B504AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  sub_1C2AF55A8();
  if ((sub_1C2B745F0() & 1) == 0) {
    return 0;
  }
  if (v2 == v4 && v3 == v5) {
    return 1;
  }
  return sub_1C2B74B50();
}

id sub_1C2B50558()
{
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithRed_green_blue_alpha_, 0.0, 0.670588235, 0.905882353, 1.0);
  qword_1EA32C268 = (uint64_t)result;
  return result;
}

id static UIColor.defaultMedmojiBlue.getter()
{
  return sub_1C2B506DC(&qword_1EA32B630, (void **)&qword_1EA32C268);
}

void static UIColor.defaultMedmojiBlue.setter(void *a1)
{
}

uint64_t (*static UIColor.defaultMedmojiBlue.modify())()
{
  if (qword_1EA32B630 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

id sub_1C2B50674()
{
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithRed_green_blue_alpha_, 1.0, 1.0, 1.0, 1.0);
  qword_1EBF107F8 = (uint64_t)result;
  return result;
}

id static UIColor.medmojiFragmentWhite.getter()
{
  return sub_1C2B506DC(&qword_1EBF10808, (void **)&qword_1EBF107F8);
}

id sub_1C2B506DC(void *a1, void **a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v3 = *a2;
  return v3;
}

void static UIColor.medmojiFragmentWhite.setter(void *a1)
{
}

void sub_1C2B50768(void *a1, void *a2, void **a3)
{
  if (*a2 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v5 = *a3;
  *a3 = a1;
}

uint64_t (*static UIColor.medmojiFragmentWhite.modify())()
{
  if (qword_1EBF10808 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

double UIColor.luminance.getter()
{
  id v1 = objc_msgSend(v0, sel_CGColor);
  sub_1C2B508A8();
  double v3 = v2;

  return v3;
}

void sub_1C2B508A8()
{
  id v1 = CGColorSpaceCreateWithName((CFStringRef)*MEMORY[0x1E4F1DC88]);
  if (v1)
  {
    double v2 = v1;
    CGColorRef CopyByMatchingToColorSpace = CGColorCreateCopyByMatchingToColorSpace(v1, kCGRenderingIntentDefault, v0, 0);

    if (CopyByMatchingToColorSpace)
    {
      uint64_t v4 = sub_1C2B74480();
      if (v4)
      {
        if (*(void *)(v4 + 16) == 4)
        {
          swift_bridgeObjectRelease();
        }
        else
        {

          swift_bridgeObjectRelease();
        }
      }
      else
      {
      }
    }
  }
  else
  {
    __break(1u);
  }
}

id UIColor.onWhite.getter()
{
  id v1 = objc_msgSend(v0, sel_CGColor);
  double v2 = sub_1C2B509F4();

  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithCGColor_, v2);
  return v3;
}

CGColorSpace *sub_1C2B509F4()
{
  id result = CGColorSpaceCreateWithName((CFStringRef)*MEMORY[0x1E4F1DC98]);
  if (!result)
  {
    __break(1u);
    goto LABEL_13;
  }
  double v2 = result;
  CGColorRef CopyByMatchingToColorSpace = CGColorCreateCopyByMatchingToColorSpace(result, kCGRenderingIntentDefault, v0, 0);
  float64x2_t v4 = 0uLL;
  double v5 = 0.0;
  if (CopyByMatchingToColorSpace)
  {
    CGColorRef v6 = CopyByMatchingToColorSpace;
    uint64_t v7 = sub_1C2B74480();
    if (v7)
    {
      if (*(void *)(v7 + 16) == 4)
      {
        double v8 = *(double *)(v7 + 48);
        double v10 = *(double *)(v7 + 56);
        float64x2_t v11 = *(float64x2_t *)(v7 + 32);
        swift_bridgeObjectRelease();

        double v5 = v10;
        float64x2_t v4 = v11;
        goto LABEL_10;
      }

      swift_bridgeObjectRelease();
    }
    else
    {
    }
    double v8 = 0.0;
    float64x2_t v4 = 0uLL;
    double v5 = 0.0;
  }
  else
  {
    double v8 = 0.0;
  }
LABEL_10:
  float64x2_t v12 = vaddq_f64((float64x2_t)vdupq_lane_s64(COERCE__INT64(1.0 - v5), 0), vmulq_n_f64(v4, v5));
  double v13 = 1.0 - v5 + v5 * v8;
  uint64_t v14 = 0x3FF0000000000000;
  id result = CGColorCreate(v2, v12.f64);
  if (result)
  {
    uint64_t v9 = result;

    return v9;
  }
LABEL_13:
  __break(1u);
  return result;
}

id UIColor.lightVariant.getter()
{
  id v1 = objc_msgSend(self, sel_traitCollectionWithUserInterfaceStyle_, 1);
  id v2 = objc_msgSend(v0, sel_resolvedColorWithTraitCollection_, v1);

  return v2;
}

double UIColor.rgbaComponents.getter()
{
  v8[1] = *MEMORY[0x1E4F143B8];
  v8[0] = 0;
  double v6 = 0.0;
  uint64_t v7 = 0;
  uint64_t v5 = 0;
  objc_msgSend(v0, sel_getRed_green_blue_alpha_, v8, &v7, &v6, &v5);
  sub_1C2B4EEA4(0, &qword_1EA32C270);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1C2B78770;
  uint64_t v2 = v7;
  *(void *)(v1 + 32) = v8[0];
  *(void *)(v1 + 40) = v2;
  uint64_t v4 = v5;
  double result = v6;
  *(double *)(v1 + 48) = v6;
  *(void *)(v1 + 56) = v4;
  return result;
}

void UIColor.redComponent.getter()
{
  UIColor.rgbaComponents.getter();
  if (v0)
  {
    if (*(void *)(v0 + 16)) {
      swift_bridgeObjectRelease();
    }
    else {
      __break(1u);
    }
  }
}

void UIColor.greenComponent.getter()
{
  UIColor.rgbaComponents.getter();
  if (v0)
  {
    if (*(void *)(v0 + 16) < 2uLL) {
      __break(1u);
    }
    else {
      swift_bridgeObjectRelease();
    }
  }
}

void UIColor.blueComponent.getter()
{
  UIColor.rgbaComponents.getter();
  if (v0)
  {
    if (*(void *)(v0 + 16) < 3uLL) {
      __break(1u);
    }
    else {
      swift_bridgeObjectRelease();
    }
  }
}

void UIColor.alphaComponent.getter()
{
  UIColor.rgbaComponents.getter();
  if (v0)
  {
    if (*(void *)(v0 + 16) < 4uLL) {
      __break(1u);
    }
    else {
      swift_bridgeObjectRelease();
    }
  }
}

id static UIColor.medicationScheduleGroupedCellBackground.getter()
{
  id v0 = objc_msgSend(self, sel_secondarySystemBackgroundColor);
  return v0;
}

unint64_t sub_1C2B50DD8()
{
  unint64_t result = qword_1EA32C278;
  if (!qword_1EA32C278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA32C278);
  }
  return result;
}

ValueMetadata *type metadata accessor for MedmojiColor()
{
  return &type metadata for MedmojiColor;
}

uint64_t sub_1C2B50E3C(uint64_t a1, void *a2)
{
  sub_1C2B52EB0(0, &qword_1EA32B888, (void (*)(uint64_t))type metadata accessor for MedicationVisualizationConfig);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v12[-v8];
  sub_1C2B52F04(a1, (uint64_t)&v12[-v8], &qword_1EA32B888, (void (*)(uint64_t))type metadata accessor for MedicationVisualizationConfig);
  uint64_t v10 = *a2 + OBJC_IVAR____TtC27HealthMedicationsExperience19MedicationShapeView_config;
  swift_beginAccess();
  sub_1C2B52F04(v10, (uint64_t)v7, &qword_1EA32B888, (void (*)(uint64_t))type metadata accessor for MedicationVisualizationConfig);
  swift_beginAccess();
  sub_1C2AE4F2C((uint64_t)v9, v10);
  swift_endAccess();
  sub_1C2B50F9C((uint64_t)v7);
  sub_1C2B52FDC((uint64_t)v9, &qword_1EA32B888, (void (*)(uint64_t))type metadata accessor for MedicationVisualizationConfig);
  return sub_1C2B52FDC((uint64_t)v7, &qword_1EA32B888, (void (*)(uint64_t))type metadata accessor for MedicationVisualizationConfig);
}

uint64_t sub_1C2B50F9C(uint64_t a1)
{
  uint64_t v25 = a1;
  uint64_t v2 = type metadata accessor for MedicationVisualizationConfig(0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2B52EB0(0, &qword_1EA32B888, (void (*)(uint64_t))type metadata accessor for MedicationVisualizationConfig);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v24 - v7;
  sub_1C2B53038();
  uint64_t v10 = v9 - 8;
  MEMORY[0x1F4188790](v9);
  float64x2_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = v1;
  uint64_t v13 = v1 + OBJC_IVAR____TtC27HealthMedicationsExperience19MedicationShapeView_config;
  swift_beginAccess();
  uint64_t v14 = (uint64_t)&v12[*(int *)(v10 + 56)];
  sub_1C2B52F04(v25, (uint64_t)v12, &qword_1EA32B888, (void (*)(uint64_t))type metadata accessor for MedicationVisualizationConfig);
  sub_1C2B52F04(v13, v14, &qword_1EA32B888, (void (*)(uint64_t))type metadata accessor for MedicationVisualizationConfig);
  unsigned __int8 v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (v15((uint64_t)v12, 1, v2) == 1)
  {
    if (v15(v14, 1, v2) == 1) {
      return sub_1C2B52FDC((uint64_t)v12, &qword_1EA32B888, (void (*)(uint64_t))type metadata accessor for MedicationVisualizationConfig);
    }
    goto LABEL_6;
  }
  sub_1C2B52F04((uint64_t)v12, (uint64_t)v8, &qword_1EA32B888, (void (*)(uint64_t))type metadata accessor for MedicationVisualizationConfig);
  if (v15(v14, 1, v2) == 1)
  {
    sub_1C2B530B8((uint64_t)v8, type metadata accessor for MedicationVisualizationConfig);
LABEL_6:
    sub_1C2B530B8((uint64_t)v12, (uint64_t (*)(void))sub_1C2B53038);
    return sub_1C2B5214C();
  }
  sub_1C2B51BF8(v14, (uint64_t)v5);
  char v17 = *v5;
  char v27 = *v8;
  char v26 = v17;
  uint64_t v18 = MedicationShape.rawValue.getter();
  uint64_t v20 = v19;
  if (v18 == MedicationShape.rawValue.getter() && v20 == v21)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v22 = sub_1C2B74B50();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v22 & 1) == 0)
    {
LABEL_14:
      sub_1C2B530B8((uint64_t)v5, type metadata accessor for MedicationVisualizationConfig);
      sub_1C2B530B8((uint64_t)v8, type metadata accessor for MedicationVisualizationConfig);
      sub_1C2B52FDC((uint64_t)v12, &qword_1EA32B888, (void (*)(uint64_t))type metadata accessor for MedicationVisualizationConfig);
      return sub_1C2B5214C();
    }
  }
  if ((sub_1C2B65504(*((void *)v8 + 1), *((void *)v5 + 1)) & 1) == 0) {
    goto LABEL_14;
  }
  sub_1C2AE3A18(0, &qword_1EBF10D30);
  sub_1C2B53118();
  char v23 = sub_1C2B73E50();
  sub_1C2B530B8((uint64_t)v5, type metadata accessor for MedicationVisualizationConfig);
  sub_1C2B530B8((uint64_t)v8, type metadata accessor for MedicationVisualizationConfig);
  uint64_t result = sub_1C2B52FDC((uint64_t)v12, &qword_1EA32B888, (void (*)(uint64_t))type metadata accessor for MedicationVisualizationConfig);
  if ((v23 & 1) == 0) {
    return sub_1C2B5214C();
  }
  return result;
}

uint64_t sub_1C2B513D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC27HealthMedicationsExperience19MedicationShapeView_config;
  swift_beginAccess();
  return sub_1C2B52F04(v3, a1, &qword_1EA32B888, (void (*)(uint64_t))type metadata accessor for MedicationVisualizationConfig);
}

uint64_t sub_1C2B51448(uint64_t a1)
{
  sub_1C2B52EB0(0, &qword_1EA32B888, (void (*)(uint64_t))type metadata accessor for MedicationVisualizationConfig);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = &v8[-v4];
  uint64_t v6 = v1 + OBJC_IVAR____TtC27HealthMedicationsExperience19MedicationShapeView_config;
  swift_beginAccess();
  sub_1C2B52F04(v6, (uint64_t)v5, &qword_1EA32B888, (void (*)(uint64_t))type metadata accessor for MedicationVisualizationConfig);
  swift_beginAccess();
  sub_1C2AE4F2C(a1, v6);
  swift_endAccess();
  sub_1C2B50F9C((uint64_t)v5);
  sub_1C2B52FDC(a1, &qword_1EA32B888, (void (*)(uint64_t))type metadata accessor for MedicationVisualizationConfig);
  return sub_1C2B52FDC((uint64_t)v5, &qword_1EA32B888, (void (*)(uint64_t))type metadata accessor for MedicationVisualizationConfig);
}

void (*sub_1C2B51568(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x70uLL);
  *a1 = v3;
  v3[9] = v1;
  sub_1C2B52EB0(0, &qword_1EA32B888, (void (*)(uint64_t))type metadata accessor for MedicationVisualizationConfig);
  size_t v5 = *(void *)(*(void *)(v4 - 8) + 64);
  v3[10] = malloc(v5);
  v3[11] = malloc(v5);
  uint64_t v6 = malloc(v5);
  uint64_t v7 = OBJC_IVAR____TtC27HealthMedicationsExperience19MedicationShapeView_config;
  v3[12] = v6;
  v3[13] = v7;
  uint64_t v8 = v1 + v7;
  swift_beginAccess();
  sub_1C2B52F04(v8, (uint64_t)v6, &qword_1EA32B888, (void (*)(uint64_t))type metadata accessor for MedicationVisualizationConfig);
  return sub_1C2B51664;
}

void sub_1C2B51664(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v4 = *(void **)(*(void *)a1 + 96);
  uint64_t v3 = *(void *)(*(void *)a1 + 104);
  size_t v5 = *(void **)(*(void *)a1 + 80);
  uint64_t v6 = *(void **)(*(void *)a1 + 88);
  uint64_t v7 = *(void *)(*(void *)a1 + 72) + v3;
  if (a2)
  {
    sub_1C2B52F04(*(void *)(*(void *)a1 + 96), (uint64_t)v6, &qword_1EA32B888, (void (*)(uint64_t))type metadata accessor for MedicationVisualizationConfig);
    sub_1C2B52F04(v7, (uint64_t)v5, &qword_1EA32B888, (void (*)(uint64_t))type metadata accessor for MedicationVisualizationConfig);
    swift_beginAccess();
    sub_1C2AE4F2C((uint64_t)v6, v7);
    swift_endAccess();
    sub_1C2B50F9C((uint64_t)v5);
    sub_1C2B52FDC((uint64_t)v6, &qword_1EA32B888, (void (*)(uint64_t))type metadata accessor for MedicationVisualizationConfig);
    uint64_t v8 = (uint64_t)v5;
    uint64_t v9 = (uint64_t)v4;
  }
  else
  {
    sub_1C2B52F04(*(void *)(*(void *)a1 + 72) + v3, (uint64_t)v6, &qword_1EA32B888, (void (*)(uint64_t))type metadata accessor for MedicationVisualizationConfig);
    swift_beginAccess();
    sub_1C2AE4F2C((uint64_t)v4, v7);
    swift_endAccess();
    sub_1C2B50F9C((uint64_t)v6);
    uint64_t v8 = (uint64_t)v4;
    uint64_t v9 = (uint64_t)v6;
  }
  sub_1C2B52FDC(v8, &qword_1EA32B888, (void (*)(uint64_t))type metadata accessor for MedicationVisualizationConfig);
  sub_1C2B52FDC(v9, &qword_1EA32B888, (void (*)(uint64_t))type metadata accessor for MedicationVisualizationConfig);
  free(v4);
  free(v6);
  free(v5);
  free(v2);
}

id MedicationShapeView.__allocating_init(config:)(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_1C2B52EB0(0, &qword_1EA32B888, (void (*)(uint64_t))type metadata accessor for MedicationVisualizationConfig);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v14 - v5;
  uint64_t v7 = (char *)objc_allocWithZone(v2);
  *(void *)&v7[OBJC_IVAR____TtC27HealthMedicationsExperience19MedicationShapeView_shadowLayer] = 0;
  uint64_t v8 = &v7[OBJC_IVAR____TtC27HealthMedicationsExperience19MedicationShapeView_config];
  uint64_t v9 = type metadata accessor for MedicationVisualizationConfig(0);
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
  v10(v8, 1, 1, v9);
  v15.receiver = v7;
  v15.super_class = v2;
  id v11 = objc_msgSendSuper2(&v15, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_1C2B51BF8(a1, (uint64_t)v6);
  v10(v6, 0, 1, v9);
  uint64_t v12 = (uint64_t)v11 + OBJC_IVAR____TtC27HealthMedicationsExperience19MedicationShapeView_config;
  swift_beginAccess();
  sub_1C2B51C5C((uint64_t)v6, v12);
  swift_endAccess();
  return v11;
}

id MedicationShapeView.init(config:)(uint64_t a1)
{
  sub_1C2B52EB0(0, &qword_1EA32B888, (void (*)(uint64_t))type metadata accessor for MedicationVisualizationConfig);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v13 - v4;
  *(void *)&v1[OBJC_IVAR____TtC27HealthMedicationsExperience19MedicationShapeView_shadowLayer] = 0;
  uint64_t v6 = &v1[OBJC_IVAR____TtC27HealthMedicationsExperience19MedicationShapeView_config];
  uint64_t v7 = type metadata accessor for MedicationVisualizationConfig(0);
  uint64_t v8 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
  v8(v6, 1, 1, v7);
  uint64_t v9 = (objc_class *)type metadata accessor for MedicationShapeView();
  v14.receiver = v1;
  v14.super_class = v9;
  id v10 = objc_msgSendSuper2(&v14, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  sub_1C2B51BF8(a1, (uint64_t)v5);
  v8(v5, 0, 1, v7);
  uint64_t v11 = (uint64_t)v10 + OBJC_IVAR____TtC27HealthMedicationsExperience19MedicationShapeView_config;
  swift_beginAccess();
  sub_1C2B51C5C((uint64_t)v5, v11);
  swift_endAccess();
  return v10;
}

uint64_t sub_1C2B51BF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MedicationVisualizationConfig(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C2B51C5C(uint64_t a1, uint64_t a2)
{
  sub_1C2B52EB0(0, &qword_1EA32B888, (void (*)(uint64_t))type metadata accessor for MedicationVisualizationConfig);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for MedicationShapeView()
{
  uint64_t result = qword_1EA32C288;
  if (!qword_1EA32C288) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C2B51DF4()
{
  v24.receiver = v0;
  v24.super_class = (Class)type metadata accessor for MedicationShapeView();
  objc_msgSendSuper2(&v24, sel_layoutSubviews);
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC27HealthMedicationsExperience19MedicationShapeView_shadowLayer];
  if (v1)
  {
    id v2 = v1;
    objc_msgSend(v2, sel_frame);
    CGFloat v4 = v3;
    CGFloat v6 = v5;
    CGFloat v8 = v7;
    CGFloat v10 = v9;
    objc_msgSend(v0, sel_bounds);
    double Width = CGRectGetWidth(v25);
    objc_msgSend(v0, sel_bounds);
    double Height = CGRectGetHeight(v26);
    if (Height < Width) {
      double Width = Height;
    }
    objc_msgSend(v0, sel_bounds);
    CGFloat v13 = round((CGRectGetWidth(v27) - Width) * 0.5);
    objc_msgSend(v0, sel_bounds);
    v36.origin.y = round((CGRectGetHeight(v28) - Width) * 0.5);
    v29.origin.x = v4;
    v29.origin.y = v6;
    v29.size.width = v8;
    v29.size.height = v10;
    v36.origin.x = v13;
    v36.size.width = Width;
    v36.size.height = Width;
    if (CGRectEqualToRect(v29, v36)) {
      goto LABEL_18;
    }
    objc_msgSend(v0, sel_bounds);
    double v14 = CGRectGetWidth(v30);
    objc_msgSend(v0, sel_bounds);
    double v15 = CGRectGetHeight(v31);
    if (v15 < v14) {
      double v14 = v15;
    }
    objc_msgSend(v0, sel_bounds);
    double v16 = round((CGRectGetWidth(v32) - v14) * 0.5);
    objc_msgSend(v0, sel_bounds);
    objc_msgSend(v2, sel_setFrame_, v16, round((CGRectGetHeight(v33) - v14) * 0.5), v14, v14);
    objc_msgSend(v2, sel_bounds);
    objc_msgSend(v2, sel_setShadowRadius_, CGRectGetHeight(v34) * 0.066666667);
    objc_msgSend(v2, sel_bounds);
    objc_msgSend(v2, sel_setShadowOffset_, 0.0, CGRectGetHeight(v35) * 0.066666667);
    id v17 = objc_msgSend(v2, sel_sublayers);
    if (!v17) {
      goto LABEL_18;
    }
    uint64_t v18 = v17;
    sub_1C2AE3A18(0, &qword_1EBF107F0);
    unint64_t v19 = sub_1C2B741D0();

    if (v19 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_1C2B749C0();
      if (v20) {
        goto LABEL_10;
      }
    }
    else
    {
      uint64_t v20 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v20)
      {
LABEL_10:
        if (v20 < 1)
        {
          __break(1u);
          return;
        }
        uint64_t v21 = 0;
        do
        {
          if ((v19 & 0xC000000000000001) != 0) {
            id v22 = (id)MEMORY[0x1C8766C90](v21, v19);
          }
          else {
            id v22 = *(id *)(v19 + 8 * v21 + 32);
          }
          char v23 = v22;
          ++v21;
          objc_msgSend(v2, sel_bounds);
          objc_msgSend(v23, sel_setFrame_);
        }
        while (v20 != v21);
      }
    }
    swift_bridgeObjectRelease_n();
LABEL_18:
  }
}

uint64_t sub_1C2B5214C()
{
  uint64_t v1 = v0;
  sub_1C2B52EB0(0, (unint64_t *)&qword_1EA32B970, (void (*)(uint64_t))sub_1C2AE849C);
  uint64_t v95 = *(void *)(v2 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v102 = (uint64_t)&v89 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v107 = (uint64_t)&v89 - v5;
  sub_1C2B52EB0(0, (unint64_t *)&qword_1EA32C298, (void (*)(uint64_t))sub_1C2AE86D4);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  double v9 = (uint64_t *)((char *)&v89 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (uint64_t *)((char *)&v89 - v10);
  sub_1C2B52EB0(0, &qword_1EA32B888, (void (*)(uint64_t))type metadata accessor for MedicationVisualizationConfig);
  MEMORY[0x1F4188790](v12 - 8);
  double v14 = (char *)&v89 - v13;
  uint64_t v15 = type metadata accessor for MedicationVisualizationConfig(0);
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v89 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = OBJC_IVAR____TtC27HealthMedicationsExperience19MedicationShapeView_shadowLayer;
  objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC27HealthMedicationsExperience19MedicationShapeView_shadowLayer], sel_removeFromSuperlayer);
  uint64_t v20 = *(void **)&v1[v19];
  uint64_t v91 = v19;
  *(void *)&v1[v19] = 0;

  uint64_t v21 = (uint64_t)&v1[OBJC_IVAR____TtC27HealthMedicationsExperience19MedicationShapeView_config];
  swift_beginAccess();
  sub_1C2B52F04(v21, (uint64_t)v14, &qword_1EA32B888, (void (*)(uint64_t))type metadata accessor for MedicationVisualizationConfig);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1) {
    return sub_1C2B52FDC((uint64_t)v14, &qword_1EA32B888, (void (*)(uint64_t))type metadata accessor for MedicationVisualizationConfig);
  }
  sub_1C2B51BF8((uint64_t)v14, (uint64_t)v18);
  id v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F39BE8]), sel_init);
  LODWORD(v24) = 1045220557;
  objc_msgSend(v23, sel_setShadowOpacity_, v24);
  objc_msgSend(v23, sel_setShouldRasterize_, 1);
  CGRect v25 = self;
  id v26 = objc_msgSend(v25, sel_mainScreen);
  objc_msgSend(v26, sel_scale);
  double v28 = v27;

  objc_msgSend(v23, sel_setRasterizationScale_, v28);
  id v97 = v25;
  id v29 = objc_msgSend(v25, sel_mainScreen);
  objc_msgSend(v29, sel_scale);
  double v31 = v30;

  objc_msgSend(v23, sel_setContentsScale_, v31);
  id v32 = objc_msgSend(v1, sel_layer);
  id v101 = v23;
  objc_msgSend(v32, sel_addSublayer_, v23);

  uint64_t v33 = *((void *)v18 + 1);
  uint64_t v34 = *(void *)(v33 + 64);
  uint64_t v92 = v33 + 64;
  uint64_t v35 = 1 << *(unsigned char *)(v33 + 32);
  uint64_t v36 = -1;
  if (v35 < 64) {
    uint64_t v36 = ~(-1 << v35);
  }
  unint64_t v37 = v36 & v34;
  int64_t v93 = (unint64_t)(v35 + 63) >> 6;
  int64_t v90 = v93 - 1;
  uint64_t v94 = v33;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v103 = 0;
  uint64_t v38 = (uint64_t)v18;
  char v99 = v9;
  char v100 = v1;
  char v98 = v18;
  uint64_t v96 = v11;
  while (1)
  {
    if (v37)
    {
      uint64_t v106 = (v37 - 1) & v37;
      unint64_t v39 = __clz(__rbit64(v37)) | (v103 << 6);
LABEL_9:
      uint64_t v40 = *(void *)(v94 + 56);
      uint64_t v41 = (void *)(*(void *)(v94 + 48) + 32 * v39);
      uint64_t v42 = v41[1];
      uint64_t v43 = v41[2];
      uint64_t v44 = v41[3];
      *double v9 = *v41;
      v9[1] = v42;
      void v9[2] = v43;
      v9[3] = v44;
      uint64_t v45 = v40 + *(void *)(v95 + 72) * v39;
      sub_1C2AE86D4();
      uint64_t v47 = v46;
      sub_1C2B52F04(v45, (uint64_t)v9 + *(int *)(v46 + 48), (unint64_t *)&qword_1EA32B970, (void (*)(uint64_t))sub_1C2AE849C);
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v9, 0, 1, v47);
      swift_bridgeObjectRetain();
      sub_1C2AE8858(v43, v44);
      goto LABEL_28;
    }
    int64_t v48 = v103 + 1;
    if (__OFADD__(v103, 1))
    {
      __break(1u);
      goto LABEL_37;
    }
    if (v48 < v93)
    {
      unint64_t v49 = *(void *)(v92 + 8 * v48);
      if (v49) {
        goto LABEL_13;
      }
      int64_t v50 = v103 + 2;
      ++v103;
      if (v48 + 1 < v93)
      {
        unint64_t v49 = *(void *)(v92 + 8 * v50);
        if (v49) {
          goto LABEL_16;
        }
        int64_t v103 = v48 + 1;
        if (v48 + 2 < v93)
        {
          unint64_t v49 = *(void *)(v92 + 8 * (v48 + 2));
          if (v49)
          {
            v48 += 2;
            goto LABEL_13;
          }
          int64_t v50 = v48 + 3;
          int64_t v103 = v48 + 2;
          if (v48 + 3 < v93) {
            break;
          }
        }
      }
    }
LABEL_27:
    sub_1C2AE86D4();
    uint64_t v47 = v51;
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v9, 1, 1, v51);
    uint64_t v106 = 0;
LABEL_28:
    sub_1C2B52F70((uint64_t)v9, (uint64_t)v11, (unint64_t *)&qword_1EA32C298, (void (*)(uint64_t))sub_1C2AE86D4);
    sub_1C2AE86D4();
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(*(void *)(v47 - 8) + 48))(v11, 1, v47) == 1)
    {
      swift_release();
      uint64_t v86 = *(void **)&v1[v91];
      id v87 = v101;
      *(void *)&v1[v91] = v101;
      id v88 = v87;

      objc_msgSend(v1, sel_setNeedsLayout);
      return sub_1C2B530B8(v38, type metadata accessor for MedicationVisualizationConfig);
    }
    uint64_t v52 = v11[1];
    uint64_t v54 = v11[2];
    uint64_t v53 = v11[3];
    uint64_t v104 = *v11;
    uint64_t v105 = v53;
    uint64_t v55 = v107;
    sub_1C2B52F70((uint64_t)v11 + *(int *)(v47 + 48), v107, (unint64_t *)&qword_1EA32B970, (void (*)(uint64_t))sub_1C2AE849C);
    uint64_t v56 = (objc_class *)type metadata accessor for MedicationFragmentLayer();
    uint64_t v57 = (char *)objc_allocWithZone(v56);
    id v58 = &v57[OBJC_IVAR____TtC27HealthMedicationsExperience23MedicationFragmentLayer_fragment];
    *(_OWORD *)id v58 = 0u;
    *((_OWORD *)v58 + 1) = 0u;
    *(void *)&v57[OBJC_IVAR____TtC27HealthMedicationsExperience23MedicationFragmentLayer_color] = 0;
    v108.receiver = v57;
    v108.super_class = v56;
    id v59 = objc_msgSendSuper2(&v108, sel_init);
    id v60 = v97;
    id v61 = objc_msgSend(v97, sel_mainScreen);
    objc_msgSend(v61, sel_scale);
    double v63 = v62;

    objc_msgSend(v59, sel_setContentsScale_, v63);
    uint64_t v64 = (char *)v59;
    id v65 = objc_msgSend(v60, sel_mainScreen);
    objc_msgSend(v65, sel_scale);
    double v67 = v66;

    objc_msgSend(v64, sel_setRasterizationScale_, v67);
    objc_msgSend(v64, sel_setNeedsDisplayOnBoundsChange_, 1);

    char v68 = (uint64_t *)&v64[OBJC_IVAR____TtC27HealthMedicationsExperience23MedicationFragmentLayer_fragment];
    uint64_t v69 = *(void *)&v64[OBJC_IVAR____TtC27HealthMedicationsExperience23MedicationFragmentLayer_fragment];
    uint64_t v70 = *(void *)&v64[OBJC_IVAR____TtC27HealthMedicationsExperience23MedicationFragmentLayer_fragment + 8];
    uint64_t v71 = *(void *)&v64[OBJC_IVAR____TtC27HealthMedicationsExperience23MedicationFragmentLayer_fragment + 16];
    uint64_t v72 = *(void *)&v64[OBJC_IVAR____TtC27HealthMedicationsExperience23MedicationFragmentLayer_fragment + 24];
    *char v68 = v104;
    v68[1] = v52;
    uint64_t v73 = v105;
    v68[2] = v54;
    v68[3] = v73;
    sub_1C2B10E04(v69, v70, v71, v72);
    uint64_t v74 = v102;
    sub_1C2B52F04(v55, v102, (unint64_t *)&qword_1EA32B970, (void (*)(uint64_t))sub_1C2AE849C);
    sub_1C2AE849C();
    uint64_t v76 = v75;
    uint64_t v77 = *(void *)(v75 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v77 + 48))(v74, 1, v75) == 1)
    {
      sub_1C2B52FDC(v74, (unint64_t *)&qword_1EA32B970, (void (*)(uint64_t))sub_1C2AE849C);
      id v78 = 0;
    }
    else
    {
      id v78 = (void *)sub_1C2B73E40();
      (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v74, v76);
    }
    uint64_t v79 = (void **)&v64[OBJC_IVAR____TtC27HealthMedicationsExperience23MedicationFragmentLayer_color];
    swift_beginAccess();
    uint64_t v80 = *v79;
    *uint64_t v79 = v78;
    id v81 = v78;

    uint64_t v82 = v68[1];
    uint64_t v38 = (uint64_t)v98;
    uint64_t v11 = v96;
    if (v82)
    {
      uint64_t v83 = v68[2];
      uint64_t v84 = v68[3];
      uint64_t v85 = *v68;
      sub_1C2AE8858(v83, v84);
      sub_1C2B10DB8(v85, v82, v83, v84);
      sub_1C2B10E04(v85, v82, v83, v84);
      if (v84 != 1)
      {
        objc_msgSend(v64, sel_setNeedsDisplay);
        sub_1C2B027B4(v83, v84);
      }
    }

    objc_msgSend(v101, sel_addSublayer_, v64);
    uint64_t result = sub_1C2B52FDC(v107, (unint64_t *)&qword_1EA32B970, (void (*)(uint64_t))sub_1C2AE849C);
    double v9 = v99;
    uint64_t v1 = v100;
    unint64_t v37 = v106;
  }
  unint64_t v49 = *(void *)(v92 + 8 * v50);
  if (v49)
  {
LABEL_16:
    int64_t v48 = v50;
LABEL_13:
    uint64_t v106 = (v49 - 1) & v49;
    unint64_t v39 = __clz(__rbit64(v49)) + (v48 << 6);
    int64_t v103 = v48;
    goto LABEL_9;
  }
  while (1)
  {
    int64_t v48 = v50 + 1;
    if (__OFADD__(v50, 1)) {
      break;
    }
    if (v48 >= v93)
    {
      int64_t v103 = v90;
      goto LABEL_27;
    }
    unint64_t v49 = *(void *)(v92 + 8 * v48);
    ++v50;
    if (v49) {
      goto LABEL_13;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

id MedicationShapeView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationShapeView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C2B52C54@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC27HealthMedicationsExperience19MedicationShapeView_config;
  swift_beginAccess();
  return sub_1C2B52F04(v3, a2, &qword_1EA32B888, (void (*)(uint64_t))type metadata accessor for MedicationVisualizationConfig);
}

uint64_t sub_1C2B52D28()
{
  return type metadata accessor for MedicationShapeView();
}

void sub_1C2B52D30()
{
  sub_1C2B52EB0(319, &qword_1EA32B888, (void (*)(uint64_t))type metadata accessor for MedicationVisualizationConfig);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for MedicationShapeView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationShapeView);
}

uint64_t dispatch thunk of MedicationShapeView.config.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of MedicationShapeView.config.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of MedicationShapeView.config.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of MedicationShapeView.__allocating_init(config:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

void sub_1C2B52EB0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C2B74630();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C2B52F04(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1C2B52EB0(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C2B52F70(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1C2B52EB0(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_1C2B52FDC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C2B52EB0(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1C2B53038()
{
  if (!qword_1EA32C2A0)
  {
    sub_1C2B52EB0(255, &qword_1EA32B888, (void (*)(uint64_t))type metadata accessor for MedicationVisualizationConfig);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA32C2A0);
    }
  }
}

uint64_t sub_1C2B530B8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1C2B53118()
{
  unint64_t result = qword_1EA32C2A8;
  if (!qword_1EA32C2A8)
  {
    sub_1C2AE3A18(255, &qword_1EBF10D30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA32C2A8);
  }
  return result;
}

uint64_t TimeZoneChange.secondsOffset.getter()
{
  return *(void *)v0;
}

uint64_t TimeZoneChange.lastChangeDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for TimeZoneChange(0) + 20);
  uint64_t v4 = sub_1C2B73710();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for TimeZoneChange(uint64_t a1)
{
  return sub_1C2AE7EB0(a1, (uint64_t *)&unk_1EA32C340);
}

uint64_t TimeZoneChange.shouldDisplayTip.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for TimeZoneChange(0) + 24));
}

uint64_t TimeZoneChange.init(secondsOffset:lastChangeDate:shouldDisplayTip:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, void *a4@<X8>)
{
  *a4 = a1;
  uint64_t v7 = type metadata accessor for TimeZoneChange(0);
  uint64_t v8 = (char *)a4 + *(int *)(v7 + 20);
  uint64_t v9 = sub_1C2B73710();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8, a2, v9);
  *((unsigned char *)a4 + *(int *)(v7 + 24)) = a3;
  return result;
}

uint64_t TimeZoneChange.getEndOfDayForLastTimeZoneChange.getter()
{
  uint64_t v0 = sub_1C2B73870();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2B73850();
  type metadata accessor for TimeZoneChange(0);
  sub_1C2B73800();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t TimeZoneChange.getSecondsAhead(of:)()
{
  uint64_t v0 = sub_1C2B73710();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2B543C4(0, &qword_1EA32C2B0, MEMORY[0x1E4F27D68], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v15 - v5;
  uint64_t v7 = sub_1C2B738A0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2B73890();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1C2B5B968((uint64_t)v6, (uint64_t)&qword_1EA32C2B0, MEMORY[0x1E4F27D68], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C2B543C4);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    sub_1C2B73700();
    uint64_t v12 = sub_1C2B73880();
    uint64_t v13 = *(void (**)(char *, uint64_t))(v1 + 8);
    v13(v3, v0);
    sub_1C2B73700();
    uint64_t v14 = sub_1C2B73880();
    v13(v3, v0);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    uint64_t result = v12 - v14;
    if (__OFSUB__(v12, v14)) {
      __break(1u);
    }
  }
  return result;
}

uint64_t TimeZoneChange.debugDescription.getter()
{
  return 0;
}

uint64_t static TimeZoneChange.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && (uint64_t v4 = type metadata accessor for TimeZoneChange(0), (sub_1C2B736D0() & 1) != 0)) {
    char v5 = *((unsigned char *)a1 + *(int *)(v4 + 24)) ^ *((unsigned char *)a2 + *(int *)(v4 + 24)) ^ 1;
  }
  else {
    char v5 = 0;
  }
  return v5 & 1;
}

uint64_t TimeZoneChange.hash(into:)()
{
  return sub_1C2B74C40();
}

uint64_t sub_1C2B5397C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t TimeZoneChange.hashValue.getter()
{
  return sub_1C2B74C60();
}

uint64_t sub_1C2B53A88()
{
  uint64_t v1 = type metadata accessor for TimeZoneChange(0);
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2B543C4(0, &qword_1EA32C078, type metadata accessor for TimeZoneChange, MEMORY[0x1E4FBB718]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v5);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v17 - v11;
  uint64_t v13 = type metadata accessor for HealthStoreTimeZoneProvider.State(0);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2B5AC58(v0, (uint64_t)v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v15, 1, v6) == 1) {
    return sub_1C2B74C30();
  }
  sub_1C2B5ACBC((uint64_t)v15, (uint64_t)v12);
  sub_1C2B74C30();
  sub_1C2B5AEC4((uint64_t)v12, (uint64_t)v10, &qword_1EA32C078, type metadata accessor for TimeZoneChange);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v10, 1, v1) == 1)
  {
    sub_1C2B74C40();
  }
  else
  {
    sub_1C2B590B0((uint64_t)v10, (uint64_t)v4);
    sub_1C2B74C40();
    sub_1C2B74C30();
    sub_1C2B73710();
    sub_1C2B5397C(&qword_1EA32C2C0, MEMORY[0x1E4F27928]);
    sub_1C2B73F20();
    sub_1C2B74C40();
    sub_1C2B5AE48((uint64_t)v4, type metadata accessor for TimeZoneChange);
  }
  return sub_1C2B5B968((uint64_t)v12, (uint64_t)&qword_1EA32C078, (uint64_t)type metadata accessor for TimeZoneChange, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C2B543C4);
}

uint64_t sub_1C2B53DF4(void *a1, void *a2, uint64_t a3)
{
  if (*a1 == *a2 && (sub_1C2B736D0() & 1) != 0) {
    char v6 = *((unsigned char *)a1 + *(int *)(a3 + 24)) ^ *((unsigned char *)a2 + *(int *)(a3 + 24)) ^ 1;
  }
  else {
    char v6 = 0;
  }
  return v6 & 1;
}

uint64_t sub_1C2B53E70()
{
  return sub_1C2B74C60();
}

uint64_t sub_1C2B53F2C()
{
  return sub_1C2B74C40();
}

uint64_t sub_1C2B53FD8()
{
  return sub_1C2B74C60();
}

uint64_t sub_1C2B54094()
{
  return sub_1C2B74C60();
}

uint64_t sub_1C2B540D8()
{
  return sub_1C2B74C60();
}

uint64_t sub_1C2B54118()
{
  uint64_t result = sub_1C2B73FA0();
  qword_1EA32F0D0 = result;
  qword_1EA32F0D8 = v1;
  return result;
}

uint64_t sub_1C2B54148()
{
  uint64_t result = sub_1C2B73FA0();
  qword_1EA32F0E0 = result;
  qword_1EA32F0E8 = v1;
  return result;
}

uint64_t sub_1C2B54178()
{
  uint64_t result = sub_1C2B73FA0();
  qword_1EA32F0F0 = result;
  qword_1EA32F0F8 = v1;
  return result;
}

uint64_t HealthStoreTimeZoneProvider.changePublisher.getter()
{
  sub_1C2B54328();
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v5 = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8[1] = *(void *)(v0 + 40);
  sub_1C2B5B148(0, &qword_1EA32C2D0, &qword_1EA32C078, type metadata accessor for TimeZoneChange, MEMORY[0x1E4F1ABB0]);
  sub_1C2B54428();
  sub_1C2B544B8();
  sub_1C2B73D50();
  sub_1C2B5397C(&qword_1EA32C2F0, (void (*)(uint64_t))sub_1C2B54328);
  uint64_t v6 = sub_1C2B73D00();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v6;
}

void sub_1C2B54328()
{
  if (!qword_1EA32C2C8)
  {
    sub_1C2B5B148(255, &qword_1EA32C2D0, &qword_1EA32C078, type metadata accessor for TimeZoneChange, MEMORY[0x1E4F1ABB0]);
    sub_1C2B54428();
    unint64_t v0 = sub_1C2B73B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA32C2C8);
    }
  }
}

void sub_1C2B543C4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1C2B54428()
{
  unint64_t result = qword_1EA32C2D8;
  if (!qword_1EA32C2D8)
  {
    sub_1C2B5B148(255, &qword_1EA32C2D0, &qword_1EA32C078, type metadata accessor for TimeZoneChange, MEMORY[0x1E4F1ABB0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA32C2D8);
  }
  return result;
}

unint64_t sub_1C2B544B8()
{
  unint64_t result = qword_1EA32C2E0;
  if (!qword_1EA32C2E0)
  {
    sub_1C2B543C4(255, &qword_1EA32C078, type metadata accessor for TimeZoneChange, MEMORY[0x1E4FBB718]);
    sub_1C2B5397C(&qword_1EA32C2E8, (void (*)(uint64_t))type metadata accessor for TimeZoneChange);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA32C2E0);
  }
  return result;
}

void *HealthStoreTimeZoneProvider.__allocating_init(healthStore:)(void *a1)
{
  swift_allocObject();
  uint64_t v2 = sub_1C2B58AA0(a1);

  return v2;
}

void *HealthStoreTimeZoneProvider.init(healthStore:)(void *a1)
{
  uint64_t v2 = sub_1C2B58AA0(a1);

  return v2;
}

uint64_t sub_1C2B54600()
{
  uint64_t v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C2B543C4(0, &qword_1EBF10B90, MEMORY[0x1E4FBCC28], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  id v58 = (char *)&v46 - v3;
  sub_1C2B5B034();
  uint64_t v53 = *(void *)(v4 - 8);
  uint64_t v54 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v52 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2B5B3C0();
  uint64_t v56 = *(void *)(v6 - 8);
  uint64_t v57 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v55 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2B5B49C();
  uint64_t v60 = *(void *)(v8 - 8);
  uint64_t v61 = v8;
  MEMORY[0x1F4188790](v8);
  id v59 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2B5B5D0();
  uint64_t v50 = *(void *)(v10 - 8);
  uint64_t v51 = v10;
  MEMORY[0x1F4188790](v10);
  unint64_t v49 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2B5B6BC();
  uint64_t v47 = *(void *)(v12 - 8);
  uint64_t v48 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2B543C4(0, (unint64_t *)&qword_1EBF11360, MEMORY[0x1E4F27928], v1);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v46 - v16;
  sub_1C2B5B834();
  uint64_t v19 = v18;
  uint64_t v20 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  id v22 = (char *)&v46 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EA32B650 != -1) {
    swift_once();
  }
  uint64_t v62 = v0;
  uint64_t v23 = sub_1C2B73710();
  sub_1C2B5397C((unint64_t *)&unk_1EA32BD28, MEMORY[0x1E4F27928]);
  id v64 = (id)sub_1C2B744F0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v17, 1, 1, v23);
  sub_1C2B5B8C8();
  sub_1C2B5397C(&qword_1EA32C428, (void (*)(uint64_t))sub_1C2B5B8C8);
  sub_1C2B73D20();
  sub_1C2B5B968((uint64_t)v17, (uint64_t)&qword_1EBF11360, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C2B543C4);
  swift_release();
  sub_1C2B5397C(&qword_1EA32C430, (void (*)(uint64_t))sub_1C2B5B834);
  double v24 = (void *)sub_1C2B73D00();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  if (qword_1EA32B648 != -1) {
    swift_once();
  }
  uint64_t v25 = MEMORY[0x1E4FBB550];
  uint64_t v66 = sub_1C2B744F0();
  id v64 = 0;
  char v65 = 1;
  sub_1C2B5B738(0, &qword_1EA32C408, &qword_1EA32C398, v25);
  sub_1C2B5B7C4();
  sub_1C2B73D20();
  swift_release();
  sub_1C2B5397C(&qword_1EA32C438, (void (*)(uint64_t))sub_1C2B5B6BC);
  uint64_t v26 = v48;
  uint64_t v27 = sub_1C2B73D00();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v14, v26);
  if (qword_1EA32B640 != -1) {
    swift_once();
  }
  uint64_t v28 = MEMORY[0x1E4FBB390];
  id v64 = (id)sub_1C2B744F0();
  LOBYTE(v66) = 2;
  sub_1C2B5B738(0, &qword_1EA32C3F0, &qword_1EA32C3A8, v28);
  sub_1C2B5B64C();
  id v29 = v49;
  sub_1C2B73D20();
  swift_release();
  sub_1C2B5397C(&qword_1EA32C440, (void (*)(uint64_t))sub_1C2B5B5D0);
  uint64_t v30 = v51;
  uint64_t v31 = sub_1C2B73D00();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v29, v30);
  uint64_t v63 = v31;
  id v64 = v24;
  uint64_t v66 = v27;
  sub_1C2B5B148(0, &qword_1EA32C388, (unint64_t *)&qword_1EBF11360, MEMORY[0x1E4F27928], MEMORY[0x1E4F1AAE0]);
  sub_1C2B5B1D4(0, &qword_1EA32C390, &qword_1EA32C398, MEMORY[0x1E4FBB550]);
  sub_1C2B5B1D4(0, &qword_1EA32C3A0, &qword_1EA32C3A8, v28);
  sub_1C2B5B250();
  sub_1C2B5B2E0();
  uint64_t v46 = v24;
  sub_1C2B5B350();
  swift_retain();
  swift_retain();
  swift_retain();
  id v32 = v52;
  sub_1C2B73AF0();
  uint64_t v33 = MEMORY[0x1E4FBB718];
  sub_1C2B543C4(0, &qword_1EA32C078, type metadata accessor for TimeZoneChange, MEMORY[0x1E4FBB718]);
  sub_1C2B5397C(&qword_1EA32C3D0, (void (*)(uint64_t))sub_1C2B5B034);
  uint64_t v51 = v27;
  uint64_t v34 = v54;
  uint64_t v35 = v55;
  sub_1C2B73D30();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v32, v34);
  uint64_t v36 = v62;
  id v64 = *(id *)(v62 + 48);
  id v37 = v64;
  uint64_t v38 = sub_1C2B74520();
  uint64_t v39 = (uint64_t)v58;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v58, 1, 1, v38);
  sub_1C2AE3A18(0, &qword_1EBF10BA8);
  sub_1C2B5397C(&qword_1EA32C3E0, (void (*)(uint64_t))sub_1C2B5B3C0);
  sub_1C2B5B568();
  id v40 = v37;
  uint64_t v41 = v59;
  uint64_t v42 = v57;
  sub_1C2B73D40();
  sub_1C2B5B968(v39, (uint64_t)&qword_1EBF10B90, MEMORY[0x1E4FBCC28], v33, (uint64_t (*)(void))sub_1C2B543C4);

  (*(void (**)(char *, uint64_t))(v56 + 8))(v35, v42);
  swift_allocObject();
  swift_weakInit();
  sub_1C2B5397C(&qword_1EA32C448, (void (*)(uint64_t))sub_1C2B5B49C);
  uint64_t v43 = v61;
  uint64_t v44 = sub_1C2B73D60();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v41, v43);
  *(void *)(v36 + 32) = v44;
  return swift_release();
}

uint64_t HealthStoreTimeZoneProvider.getTimeZoneChange()(uint64_t a1)
{
  uint64_t v2[2] = a1;
  v2[3] = v1;
  uint64_t v2[4] = *v1;
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C2B543C4(0, (unint64_t *)&unk_1EBF11290, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  v2[5] = swift_task_alloc();
  sub_1C2B543C4(0, &qword_1EA32C078, type metadata accessor for TimeZoneChange, v3);
  uint64_t v2[6] = v4;
  v2[7] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C2B55310, 0, 0);
}

uint64_t sub_1C2B55310()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = *(void *)(v0[3] + 24);
  uint64_t v3 = v2 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v2 + 16);
  uint64_t v4 = (os_unfair_lock_s *)(v2 + ((*(unsigned int *)(*(void *)v2 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1C2B56CBC(v3, v1);
  os_unfair_lock_unlock(v4);
  uint64_t v5 = v0[7];
  swift_release();
  uint64_t v6 = type metadata accessor for TimeZoneChange(0);
  uint64_t v7 = *(void *)(v6 - 8);
  int v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
  uint64_t v9 = v0[7];
  if (v8 == 1)
  {
    uint64_t v11 = v0[4];
    uint64_t v10 = v0[5];
    uint64_t v12 = v0[3];
    sub_1C2B5B968(v9, (uint64_t)&qword_1EA32C078, (uint64_t)type metadata accessor for TimeZoneChange, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C2B543C4);
    uint64_t v13 = sub_1C2B74310();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v10, 1, 1, v13);
    uint64_t v14 = (void *)swift_allocObject();
    v14[2] = 0;
    void v14[3] = 0;
    void v14[4] = v12;
    v14[5] = v11;
    swift_retain();
    uint64_t v15 = sub_1C2B329FC(v10, (uint64_t)&unk_1EA32C308, (uint64_t)v14);
    v0[8] = v15;
    uint64_t v16 = (void *)swift_task_alloc();
    v0[9] = v16;
    *uint64_t v16 = v0;
    v16[1] = sub_1C2B5562C;
    uint64_t v17 = v0[6];
    uint64_t v18 = v0[2];
    return MEMORY[0x1F4187DC0](v18, v15, v17);
  }
  else
  {
    uint64_t v19 = v0[2];
    sub_1C2B590B0(v9, v19);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v20 = (uint64_t (*)(void))v0[1];
    return v20();
  }
}

uint64_t sub_1C2B5562C()
{
  swift_task_dealloc();
  swift_release();
  return MEMORY[0x1F4188298](sub_1C2B55744, 0, 0);
}

uint64_t sub_1C2B55744()
{
  sub_1C2B56730(*(void *)(v0 + 16));
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C2B557B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[34] = a4;
  v5[35] = a5;
  v5[33] = a1;
  uint64_t v6 = sub_1C2B73A90();
  v5[36] = v6;
  v5[37] = *(void *)(v6 - 8);
  v5[38] = swift_task_alloc();
  v5[39] = swift_task_alloc();
  uint64_t v7 = sub_1C2B73710();
  v5[40] = v7;
  v5[41] = *(void *)(v7 - 8);
  v5[42] = swift_task_alloc();
  sub_1C2B543C4(0, (unint64_t *)&qword_1EBF11360, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  v5[43] = swift_task_alloc();
  v5[44] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C2B55954, 0, 0);
}

uint64_t sub_1C2B55954()
{
  uint64_t v1 = *(void **)(v0[34] + 16);
  v0[2] = v0;
  v0[7] = v0 + 28;
  v0[3] = sub_1C2B55A54;
  uint64_t v2 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1C2B56658;
  v0[13] = &block_descriptor_17;
  v0[14] = v2;
  objc_msgSend(v1, sel_allValuesWithCompletion_, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1C2B55A54()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 360) = v1;
  if (v1) {
    uint64_t v2 = sub_1C2B56354;
  }
  else {
    uint64_t v2 = sub_1C2B55B64;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C2B55B64()
{
  uint64_t v52 = v0;
  uint64_t v1 = *(void *)(v0 + 224);
  if (qword_1EA32B648 != -1) {
    swift_once();
  }
  uint64_t v2 = (_OWORD *)(v0 + 184);
  uint64_t v3 = MEMORY[0x1E4FBC840];
  if (!*(void *)(v1 + 16))
  {
    *uint64_t v2 = 0u;
    *(_OWORD *)(v0 + 200) = 0u;
LABEL_13:
    sub_1C2B5B968(v0 + 184, (uint64_t)&qword_1EA32BAB8, v3 + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C2AE04AC);
    uint64_t v9 = 0;
    char v10 = 1;
    goto LABEL_14;
  }
  uint64_t v4 = qword_1EA32F0E8;
  uint64_t v5 = qword_1EA32F0E0;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1C2AE056C(v5, v4);
  if (v7)
  {
    sub_1C2AF4658(*(void *)(v1 + 56) + 32 * v6, v0 + 184);
  }
  else
  {
    *uint64_t v2 = 0u;
    *(_OWORD *)(v0 + 200) = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*(void *)(v0 + 208)) {
    goto LABEL_13;
  }
  int v8 = swift_dynamicCast();
  if (v8) {
    uint64_t v9 = *(void *)(v0 + 256);
  }
  else {
    uint64_t v9 = 0;
  }
  char v10 = v8 ^ 1;
LABEL_14:
  if (qword_1EA32B650 != -1) {
    swift_once();
  }
  uint64_t v11 = (_OWORD *)(v0 + 120);
  if (!*(void *)(v1 + 16))
  {
    _OWORD *v11 = 0u;
    *(_OWORD *)(v0 + 136) = 0u;
LABEL_24:
    sub_1C2B5B968(v0 + 120, (uint64_t)&qword_1EA32BAB8, v3 + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C2AE04AC);
    goto LABEL_25;
  }
  uint64_t v12 = qword_1EA32F0F8;
  uint64_t v13 = qword_1EA32F0F0;
  swift_bridgeObjectRetain();
  unint64_t v14 = sub_1C2AE056C(v13, v12);
  if (v15)
  {
    sub_1C2AF4658(*(void *)(v1 + 56) + 32 * v14, v0 + 120);
  }
  else
  {
    _OWORD *v11 = 0u;
    *(_OWORD *)(v0 + 136) = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*(void *)(v0 + 144)) {
    goto LABEL_24;
  }
  if (swift_dynamicCast())
  {
    sub_1C2B73690();
    uint64_t v16 = 0;
    goto LABEL_26;
  }
LABEL_25:
  uint64_t v16 = 1;
LABEL_26:
  (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 328) + 56))(*(void *)(v0 + 352), v16, 1, *(void *)(v0 + 320));
  if (qword_1EA32B640 != -1) {
    swift_once();
  }
  uint64_t v17 = (_OWORD *)(v0 + 152);
  if (*(void *)(v1 + 16))
  {
    uint64_t v18 = qword_1EA32F0D8;
    uint64_t v19 = qword_1EA32F0D0;
    swift_bridgeObjectRetain();
    unint64_t v20 = sub_1C2AE056C(v19, v18);
    if (v21)
    {
      sub_1C2AF4658(*(void *)(v1 + 56) + 32 * v20, v0 + 152);
    }
    else
    {
      *uint64_t v17 = 0u;
      *(_OWORD *)(v0 + 168) = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    *uint64_t v17 = 0u;
    *(_OWORD *)(v0 + 168) = 0u;
  }
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 176))
  {
    if (swift_dynamicCast()) {
      int v22 = *(unsigned __int8 *)(v0 + 368);
    }
    else {
      int v22 = 2;
    }
    if (v10) {
      goto LABEL_45;
    }
  }
  else
  {
    sub_1C2B5B968(v0 + 152, (uint64_t)&qword_1EA32BAB8, v3 + 8, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C2AE04AC);
    int v22 = 2;
    if (v10)
    {
LABEL_45:
      sub_1C2B73A70();
      uint64_t v28 = sub_1C2B73A80();
      os_log_type_t v29 = sub_1C2B744B0();
      BOOL v30 = os_log_type_enabled(v28, v29);
      uint64_t v31 = *(void *)(v0 + 352);
      uint64_t v32 = *(void *)(v0 + 312);
      uint64_t v34 = *(void *)(v0 + 288);
      uint64_t v33 = *(void *)(v0 + 296);
      if (v30)
      {
        uint64_t v50 = *(void *)(v0 + 352);
        uint64_t v35 = (uint8_t *)swift_slowAlloc();
        uint64_t v49 = v32;
        uint64_t v36 = swift_slowAlloc();
        uint64_t v51 = v36;
        *(_DWORD *)uint64_t v35 = 136315138;
        uint64_t v37 = sub_1C2B74CD0();
        *(void *)(v0 + 240) = sub_1C2AEEE6C(v37, v38, &v51);
        sub_1C2B74650();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C2ADB000, v28, v29, "[%s)]: One of the Key-Value domain values required for initializing TimeZoneChange was nil", v35, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C8767A10](v36, -1, -1);
        MEMORY[0x1C8767A10](v35, -1, -1);

        (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v49, v34);
        uint64_t v39 = MEMORY[0x1E4F27928];
        uint64_t v40 = MEMORY[0x1E4FBB718];
        uint64_t v41 = v50;
      }
      else
      {

        (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v34);
        uint64_t v39 = MEMORY[0x1E4F27928];
        uint64_t v40 = MEMORY[0x1E4FBB718];
        uint64_t v41 = v31;
      }
      sub_1C2B5B968(v41, (uint64_t)&qword_1EBF11360, v39, v40, (uint64_t (*)(void))sub_1C2B543C4);
      uint64_t v42 = *(void *)(v0 + 264);
      uint64_t v43 = type metadata accessor for TimeZoneChange(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v42, 1, 1, v43);
      goto LABEL_49;
    }
  }
  uint64_t v23 = *(void *)(v0 + 344);
  uint64_t v25 = *(void *)(v0 + 320);
  uint64_t v24 = *(void *)(v0 + 328);
  sub_1C2B5AEC4(*(void *)(v0 + 352), v23, (unint64_t *)&qword_1EBF11360, MEMORY[0x1E4F27928]);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v23, 1, v25) == 1)
  {
    sub_1C2B5B968(*(void *)(v0 + 344), (uint64_t)&qword_1EBF11360, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C2B543C4);
    goto LABEL_45;
  }
  uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v0 + 328) + 32);
  v26(*(char **)(v0 + 336), *(void *)(v0 + 344), *(void *)(v0 + 320));
  uint64_t v27 = *(void *)(v0 + 320);
  if (v22 == 2)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 328) + 8))(*(void *)(v0 + 336), *(void *)(v0 + 320));
    goto LABEL_45;
  }
  uint64_t v46 = *(void *)(v0 + 336);
  uint64_t v47 = *(char **)(v0 + 264);
  sub_1C2B5B968(*(void *)(v0 + 352), (uint64_t)&qword_1EBF11360, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C2B543C4);
  uint64_t v48 = type metadata accessor for TimeZoneChange(0);
  v26(&v47[*(int *)(v48 + 20)], v46, v27);
  *(void *)uint64_t v47 = v9;
  v47[*(int *)(v48 + 24)] = v22;
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v47, 0, 1, v48);
LABEL_49:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v44 = *(uint64_t (**)(void))(v0 + 8);
  return v44();
}

uint64_t sub_1C2B56354()
{
  uint64_t v26 = v0;
  uint64_t v1 = (void *)v0[45];
  swift_willThrow();
  sub_1C2B73A70();
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_1C2B73A80();
  os_log_type_t v5 = sub_1C2B744C0();
  if (os_log_type_enabled(v4, v5))
  {
    unint64_t v6 = (void *)v0[45];
    uint64_t v7 = v0[37];
    uint64_t v24 = v0[38];
    uint64_t v23 = v0[36];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = (void *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v25 = v10;
    *(_DWORD *)uint64_t v8 = 136315394;
    uint64_t v11 = sub_1C2B74CD0();
    v0[29] = sub_1C2AEEE6C(v11, v12, &v25);
    sub_1C2B74650();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2112;
    id v13 = v6;
    uint64_t v14 = _swift_stdlib_bridgeErrorToNSError();
    v0[27] = v14;
    sub_1C2B74650();
    *uint64_t v9 = v14;

    _os_log_impl(&dword_1C2ADB000, v4, v5, "[%s)]: Failed to query Key-Value domain with error: %@", (uint8_t *)v8, 0x16u);
    sub_1C2AF5550();
    swift_arrayDestroy();
    MEMORY[0x1C8767A10](v9, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1C8767A10](v10, -1, -1);
    MEMORY[0x1C8767A10](v8, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v24, v23);
  }
  else
  {
    char v15 = (void *)v0[45];
    uint64_t v17 = v0[37];
    uint64_t v16 = v0[38];
    uint64_t v18 = v0[36];

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  }
  uint64_t v19 = v0[33];
  uint64_t v20 = type metadata accessor for TimeZoneChange(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 1, 1, v20);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v21 = (uint64_t (*)(void))v0[1];
  return v21();
}

uint64_t sub_1C2B56658(uint64_t a1, uint64_t a2, void *a3)
{
  if (a3)
  {
    sub_1C2AF44C8();
    swift_allocError();
    *os_log_type_t v5 = a3;
    id v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    uint64_t v3 = *(void *)(a1 + 32);
    **(void **)(*(void *)(v3 + 64) + 40) = sub_1C2B73EF0();
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_1C2B56730(uint64_t a1)
{
  id v2 = v1;
  uint64_t v32 = *v1;
  sub_1C2B543C4(0, &qword_1EA32C078, type metadata accessor for TimeZoneChange, MEMORY[0x1E4FBB718]);
  uint64_t v33 = v4;
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v29 - v8;
  uint64_t v10 = sub_1C2B73A90();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  id v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2B73A70();
  sub_1C2B5AEC4(a1, (uint64_t)v9, &qword_1EA32C078, type metadata accessor for TimeZoneChange);
  uint64_t v14 = sub_1C2B73A80();
  os_log_type_t v15 = sub_1C2B744E0();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v31 = v2;
    uint64_t v17 = v16;
    uint64_t v18 = swift_slowAlloc();
    v35[0] = v18;
    *(_DWORD *)uint64_t v17 = 136315394;
    uint64_t v30 = v10;
    uint64_t v19 = sub_1C2B74CD0();
    uint64_t v29 = v11;
    uint64_t v34 = sub_1C2AEEE6C(v19, v20, v35);
    uint64_t v32 = a1;
    sub_1C2B74650();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2080;
    sub_1C2B5AEC4((uint64_t)v9, (uint64_t)v7, &qword_1EA32C078, type metadata accessor for TimeZoneChange);
    uint64_t v21 = sub_1C2B74010();
    uint64_t v34 = sub_1C2AEEE6C(v21, v22, v35);
    a1 = v32;
    sub_1C2B74650();
    swift_bridgeObjectRelease();
    sub_1C2B5B968((uint64_t)v9, (uint64_t)&qword_1EA32C078, (uint64_t)type metadata accessor for TimeZoneChange, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C2B543C4);
    _os_log_impl(&dword_1C2ADB000, v14, v15, "[%s)]: Updating and publishing internal state with value: %s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C8767A10](v18, -1, -1);
    uint64_t v23 = v17;
    id v2 = v31;
    MEMORY[0x1C8767A10](v23, -1, -1);

    uint64_t v24 = (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v13, v30);
  }
  else
  {
    sub_1C2B5B968((uint64_t)v9, (uint64_t)&qword_1EA32C078, (uint64_t)type metadata accessor for TimeZoneChange, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C2B543C4);

    uint64_t v24 = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  uint64_t v25 = v2[3];
  MEMORY[0x1F4188790](v24);
  *(&v29 - 2) = a1;
  uint64_t v26 = v25 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v25 + 16);
  uint64_t v27 = (os_unfair_lock_s *)(v25 + ((*(unsigned int *)(*(void *)v25 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v27);
  sub_1C2B5AEA8(v26);
  os_unfair_lock_unlock(v27);
  swift_release();
  swift_retain();
  sub_1C2B73C00();
  return swift_release();
}

uint64_t sub_1C2B56BDC(uint64_t a1, uint64_t a2)
{
  sub_1C2B5AE48(a1, type metadata accessor for HealthStoreTimeZoneProvider.State);
  sub_1C2B5AEC4(a2, a1, &qword_1EA32C078, type metadata accessor for TimeZoneChange);
  sub_1C2B543C4(0, &qword_1EA32C078, type metadata accessor for TimeZoneChange, MEMORY[0x1E4FBB718]);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(a1, 0, 1, v4);
}

uint64_t sub_1C2B56CBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for HealthStoreTimeZoneProvider.State(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2B5AC58(a1, (uint64_t)v6);
  sub_1C2B543C4(0, &qword_1EA32C078, type metadata accessor for TimeZoneChange, MEMORY[0x1E4FBB718]);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7) != 1) {
    return sub_1C2B5ACBC((uint64_t)v6, a2);
  }
  uint64_t v8 = type metadata accessor for TimeZoneChange(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(a2, 1, 1, v8);
}

uint64_t sub_1C2B56E08@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v50 = a2;
  sub_1C2B5BA08();
  uint64_t v4 = v3;
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v47 = (uint64_t)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v41 - v8;
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v41 - v10;
  uint64_t v12 = sub_1C2B73710();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v48 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(int *)(v4 + 48);
  uint64_t v16 = &v11[v15];
  uint64_t v17 = *(int *)(v4 + 64);
  uint64_t v18 = (uint64_t *)(a1 + v15);
  sub_1C2B5AEC4(a1, (uint64_t)v11, (unint64_t *)&qword_1EBF11360, MEMORY[0x1E4F27928]);
  uint64_t v19 = *v18;
  uint64_t v45 = v18;
  uint64_t v46 = v17;
  char v20 = *((unsigned char *)v18 + 8);
  *(void *)uint64_t v16 = v19;
  uint64_t v49 = a1;
  char v21 = *(unsigned char *)(a1 + v17);
  v16[8] = v20;
  uint64_t v22 = v12;
  uint64_t v23 = v13;
  v11[v17] = v21;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v22) != 1)
  {
    uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
    uint64_t v25 = v48;
    uint64_t v43 = v24;
    uint64_t v44 = v22;
    v24(v48, v11, v22);
    uint64_t v26 = &v9[*(int *)(v4 + 48)];
    uint64_t v27 = *(int *)(v4 + 64);
    sub_1C2B5AEC4(v49, (uint64_t)v9, (unint64_t *)&qword_1EBF11360, MEMORY[0x1E4F27928]);
    *(void *)uint64_t v26 = v19;
    v26[8] = v20;
    v9[v27] = v21;
    uint64_t v28 = v25;
    if ((v20 & 1) == 0)
    {
      uint64_t v42 = v19;
      uint64_t v29 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F27928];
      sub_1C2B5B968((uint64_t)v9, (uint64_t)&qword_1EBF11360, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C2B543C4);
      uint64_t v30 = v47;
      uint64_t v31 = v47 + *(int *)(v4 + 48);
      uint64_t v32 = *(int *)(v4 + 64);
      uint64_t v33 = v49;
      sub_1C2B5AEC4(v49, v47, (unint64_t *)&qword_1EBF11360, v29);
      char v34 = *((unsigned char *)v45 + 8);
      *(void *)uint64_t v31 = *v45;
      *(unsigned char *)(v31 + 8) = v34;
      int v35 = *(unsigned __int8 *)(v33 + v46);
      *(unsigned char *)(v30 + v32) = v35;
      if (v35 != 2)
      {
        char v38 = v35 & 1;
        sub_1C2B5B968(v30, (uint64_t)&qword_1EBF11360, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C2B543C4);
        uint64_t v39 = type metadata accessor for TimeZoneChange(0);
        uint64_t v40 = v50;
        v43((char *)v50 + *(int *)(v39 + 20), v28, v44);
        *uint64_t v40 = v42;
        *((unsigned char *)v40 + *(int *)(v39 + 24)) = v38;
        return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v40, 0, 1, v39);
      }
      uint64_t v9 = (char *)v30;
    }
    (*(void (**)(char *, uint64_t))(v23 + 8))(v28, v44);
    uint64_t v11 = v9;
  }
  sub_1C2B5B968((uint64_t)v11, (uint64_t)&qword_1EBF11360, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C2B543C4);
  uint64_t v36 = type metadata accessor for TimeZoneChange(0);
  return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v50, 1, 1, v36);
}

uint64_t sub_1C2B57268(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1C2B56730(a1);
    return swift_release();
  }
  return result;
}

uint64_t HealthStoreTimeZoneProvider.deinit()
{
  if (*(void *)(v0 + 32))
  {
    swift_retain();
    sub_1C2B73B70();
    swift_release();
  }

  swift_release();
  swift_release();
  swift_release();

  return v0;
}

uint64_t HealthStoreTimeZoneProvider.__deallocating_deinit()
{
  if (*(void *)(v0 + 32))
  {
    swift_retain();
    sub_1C2B73B70();
    swift_release();
  }

  swift_release();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t HealthStoreTimeZoneProvider.set(change:)(uint64_t a1)
{
  v2[39] = a1;
  v2[40] = v1;
  v2[41] = *v1;
  uint64_t v3 = sub_1C2B73A90();
  v2[42] = v3;
  v2[43] = *(void *)(v3 - 8);
  v2[44] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C2B57498, 0, 0);
}

uint64_t sub_1C2B57498()
{
  sub_1C2B543C4(0, &qword_1EA32C318, (uint64_t (*)(uint64_t))sub_1C2B2B25C, MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C2B764D0;
  if (qword_1EA32B648 != -1) {
    swift_once();
  }
  id v2 = (uint64_t *)v0[39];
  uint64_t v3 = qword_1EA32F0E8;
  *(void *)(inited + 32) = qword_1EA32F0E0;
  *(void *)(inited + 40) = v3;
  uint64_t v4 = *v2;
  id v5 = objc_allocWithZone(NSNumber);
  swift_bridgeObjectRetain();
  id v6 = objc_msgSend(v5, sel_initWithInteger_, v4);
  uint64_t v7 = sub_1C2AE3A18(0, &qword_1EA32BA48);
  *(void *)(inited + 72) = v7;
  *(void *)(inited + 48) = v6;
  if (qword_1EA32B640 != -1) {
    swift_once();
  }
  uint64_t v8 = v0[39];
  uint64_t v9 = qword_1EA32F0D8;
  *(void *)(inited + 80) = qword_1EA32F0D0;
  *(void *)(inited + 88) = v9;
  uint64_t v10 = *(unsigned __int8 *)(v8 + *(int *)(type metadata accessor for TimeZoneChange(0) + 24));
  id v11 = objc_allocWithZone(NSNumber);
  swift_bridgeObjectRetain();
  id v12 = objc_msgSend(v11, sel_initWithBool_, v10);
  *(void *)(inited + 120) = v7;
  *(void *)(inited + 96) = v12;
  if (qword_1EA32B650 != -1) {
    swift_once();
  }
  uint64_t v13 = v0[40];
  uint64_t v14 = qword_1EA32F0F8;
  *(void *)(inited + 128) = qword_1EA32F0F0;
  *(void *)(inited + 136) = v14;
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1C2B736C0();
  *(void *)(inited + 168) = sub_1C2AE3A18(0, &qword_1EA32C320);
  *(void *)(inited + 144) = v15;
  sub_1C2B25CE8(inited);
  uint64_t v16 = *(void **)(v13 + 16);
  uint64_t v17 = sub_1C2B73EE0();
  v0[45] = v17;
  swift_bridgeObjectRelease();
  v0[2] = v0;
  v0[3] = sub_1C2B577C8;
  uint64_t v18 = swift_continuation_init();
  v0[32] = MEMORY[0x1E4F143A8];
  v0[33] = 0x40000000;
  v0[34] = sub_1C2AEE930;
  v0[35] = &block_descriptor_2;
  v0[36] = v18;
  objc_msgSend(v16, sel_setValuesWithDictionary_completion_, v17, v0 + 32);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1C2B577C8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 368) = v1;
  if (v1) {
    id v2 = sub_1C2B57944;
  }
  else {
    id v2 = sub_1C2B578D8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C2B578D8()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C2B57944()
{
  uint64_t v25 = v0;
  id v2 = (void *)v0[45];
  uint64_t v1 = (void *)v0[46];
  swift_willThrow();

  sub_1C2B73A70();
  id v3 = v1;
  id v4 = v1;
  id v5 = sub_1C2B73A80();
  os_log_type_t v6 = sub_1C2B744C0();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (void *)v0[46];
    uint64_t v21 = v0[43];
    uint64_t v22 = v0[42];
    uint64_t v23 = v0[44];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = (void *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v24 = v10;
    *(_DWORD *)uint64_t v8 = 136315394;
    uint64_t v11 = sub_1C2B74CD0();
    v0[37] = sub_1C2AEEE6C(v11, v12, &v24);
    sub_1C2B74650();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2112;
    id v13 = v7;
    uint64_t v14 = _swift_stdlib_bridgeErrorToNSError();
    v0[38] = v14;
    sub_1C2B74650();
    *uint64_t v9 = v14;

    _os_log_impl(&dword_1C2ADB000, v5, v6, "[%s)]: Failed to save value in key-value domain with error: '%@'", (uint8_t *)v8, 0x16u);
    sub_1C2AF5550();
    swift_arrayDestroy();
    MEMORY[0x1C8767A10](v9, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x1C8767A10](v10, -1, -1);
    MEMORY[0x1C8767A10](v8, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v23, v22);
  }
  else
  {
    uint64_t v15 = (void *)v0[46];
    uint64_t v17 = v0[43];
    uint64_t v16 = v0[44];
    uint64_t v18 = v0[42];

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  }
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
  return v19();
}

uint64_t HealthStoreTimeZoneProvider.fetchFreshState()(uint64_t a1)
{
  uint64_t v2[2] = a1;
  v2[3] = v1;
  uint64_t v2[4] = *v1;
  sub_1C2B543C4(0, (unint64_t *)&unk_1EBF11290, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  v2[5] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C2B57CD4, 0, 0);
}

uint64_t sub_1C2B57CD4()
{
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  uint64_t v3 = v0[3];
  uint64_t v4 = sub_1C2B74310();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v1, 1, 1, v4);
  id v5 = (void *)swift_allocObject();
  v5[2] = 0;
  v5[3] = 0;
  v5[4] = v3;
  uint64_t v5[5] = v2;
  swift_retain();
  uint64_t v6 = sub_1C2B329FC(v1, (uint64_t)&unk_1EA32C330, (uint64_t)v5);
  v0[6] = v6;
  uint64_t v7 = (void *)swift_task_alloc();
  v0[7] = v7;
  sub_1C2B543C4(0, &qword_1EA32C078, type metadata accessor for TimeZoneChange, MEMORY[0x1E4FBB718]);
  uint64_t v9 = v8;
  *uint64_t v7 = v0;
  v7[1] = sub_1C2B57E4C;
  uint64_t v10 = v0[2];
  return MEMORY[0x1F4187DC0](v10, v6, v9);
}

uint64_t sub_1C2B57E4C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t HealthStoreTimeZoneProvider.removeValue(for:)(uint64_t a1, uint64_t a2)
{
  v3[22] = a2;
  v3[23] = v2;
  v3[21] = a1;
  return MEMORY[0x1F4188298](sub_1C2B57F9C, 0, 0);
}

uint64_t sub_1C2B57F9C()
{
  uint64_t v1 = v0[22];
  uint64_t v2 = v0[21];
  uint64_t v3 = *(void **)(v0[23] + 16);
  sub_1C2AE04AC(0, (unint64_t *)&qword_1EBF110A8, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C2B76500;
  *(void *)(inited + 32) = v2;
  *(void *)(inited + 40) = v1;
  swift_bridgeObjectRetain();
  sub_1C2AF4198(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  uint64_t v5 = sub_1C2B74370();
  v0[24] = v5;
  swift_bridgeObjectRelease();
  v0[2] = v0;
  v0[3] = sub_1C2B58158;
  uint64_t v6 = swift_continuation_init();
  v0[16] = MEMORY[0x1E4F143A8];
  v0[17] = 0x40000000;
  v0[18] = sub_1C2AEE930;
  v0[19] = &block_descriptor_9;
  v0[20] = v6;
  objc_msgSend(v3, sel_removeValuesForKeys_completion_, v5, v0 + 16);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1C2B58158()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 200) = v1;
  if (v1) {
    uint64_t v2 = sub_1C2B582CC;
  }
  else {
    uint64_t v2 = sub_1C2B58268;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C2B58268()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C2B582CC()
{
  uint64_t v1 = *(void **)(v0 + 192);
  swift_willThrow();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1C2B5833C(uint64_t a1, uint64_t a2)
{
  uint64_t v47 = (void *)a2;
  uint64_t v3 = type metadata accessor for TimeZoneChange(0);
  uint64_t v45 = *(void *)(v3 - 8);
  uint64_t v46 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v44 = (uint64_t *)((char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C2B5AD50();
  uint64_t v6 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2B543C4(0, &qword_1EA32C078, type metadata accessor for TimeZoneChange, MEMORY[0x1E4FBB718]);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  uint64_t v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v42 - v15;
  uint64_t v17 = type metadata accessor for HealthStoreTimeZoneProvider.State(0);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2B5ADE4();
  uint64_t v21 = MEMORY[0x1F4188790](v20 - 8);
  uint64_t v23 = (char *)&v42 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = (uint64_t)&v23[*(int *)(v21 + 56)];
  sub_1C2B5AC58(a1, (uint64_t)v23);
  sub_1C2B5AC58((uint64_t)v47, v24);
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (v25((uint64_t)v23, 1, v10) == 1)
  {
    uint64_t v26 = 1;
    int v27 = v25(v24, 1, v10);
    uint64_t v28 = type metadata accessor for HealthStoreTimeZoneProvider.State;
    if (v27 == 1) {
      goto LABEL_20;
    }
    goto LABEL_6;
  }
  uint64_t v47 = v14;
  uint64_t v29 = v46;
  sub_1C2B5AC58((uint64_t)v23, (uint64_t)v19);
  if (v25(v24, 1, v10) != 1)
  {
    uint64_t v43 = v23;
    uint64_t v30 = (uint64_t)v16;
    sub_1C2B5ACBC(v24, (uint64_t)v16);
    uint64_t v31 = (uint64_t)v8;
    uint64_t v32 = (uint64_t)&v8[*(int *)(v6 + 48)];
    sub_1C2B5ACBC((uint64_t)v19, (uint64_t)v8);
    sub_1C2B5AEC4((uint64_t)v16, v32, &qword_1EA32C078, type metadata accessor for TimeZoneChange);
    uint64_t v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48);
    if (v33((uint64_t)v8, 1, v29) == 1)
    {
      sub_1C2B5B968((uint64_t)v16, (uint64_t)&qword_1EA32C078, (uint64_t)type metadata accessor for TimeZoneChange, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C2B543C4);
      if (v33(v32, 1, v29) == 1)
      {
        sub_1C2B5B968((uint64_t)v8, (uint64_t)&qword_1EA32C078, (uint64_t)type metadata accessor for TimeZoneChange, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C2B543C4);
        uint64_t v26 = 1;
        uint64_t v28 = type metadata accessor for HealthStoreTimeZoneProvider.State;
        uint64_t v23 = v43;
        goto LABEL_20;
      }
    }
    else
    {
      char v34 = v47;
      sub_1C2B5AEC4((uint64_t)v8, (uint64_t)v47, &qword_1EA32C078, type metadata accessor for TimeZoneChange);
      if (v33(v32, 1, v29) != 1)
      {
        int v35 = v44;
        sub_1C2B590B0(v32, (uint64_t)v44);
        if (*v34 == *v35 && (sub_1C2B736D0() & 1) != 0)
        {
          uint64_t v36 = *(int *)(v29 + 24);
          int v37 = *((unsigned __int8 *)v34 + v36);
          int v38 = *((unsigned __int8 *)v35 + v36);
          sub_1C2B5AE48((uint64_t)v35, type metadata accessor for TimeZoneChange);
          uint64_t v39 = MEMORY[0x1E4FBB718];
          sub_1C2B5B968(v30, (uint64_t)&qword_1EA32C078, (uint64_t)type metadata accessor for TimeZoneChange, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C2B543C4);
          sub_1C2B5AE48((uint64_t)v34, type metadata accessor for TimeZoneChange);
          sub_1C2B5B968(v31, (uint64_t)&qword_1EA32C078, (uint64_t)type metadata accessor for TimeZoneChange, v39, (uint64_t (*)(void))sub_1C2B543C4);
          uint64_t v28 = type metadata accessor for HealthStoreTimeZoneProvider.State;
          uint64_t v23 = v43;
          if (v37 == v38)
          {
            uint64_t v26 = 1;
            goto LABEL_20;
          }
LABEL_19:
          uint64_t v26 = 0;
          uint64_t v28 = type metadata accessor for HealthStoreTimeZoneProvider.State;
          goto LABEL_20;
        }
        sub_1C2B5AE48((uint64_t)v35, type metadata accessor for TimeZoneChange);
        uint64_t v40 = MEMORY[0x1E4FBB718];
        sub_1C2B5B968(v30, (uint64_t)&qword_1EA32C078, (uint64_t)type metadata accessor for TimeZoneChange, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C2B543C4);
        sub_1C2B5AE48((uint64_t)v34, type metadata accessor for TimeZoneChange);
        sub_1C2B5B968((uint64_t)v8, (uint64_t)&qword_1EA32C078, (uint64_t)type metadata accessor for TimeZoneChange, v40, (uint64_t (*)(void))sub_1C2B543C4);
LABEL_18:
        uint64_t v23 = v43;
        goto LABEL_19;
      }
      sub_1C2B5B968(v30, (uint64_t)&qword_1EA32C078, (uint64_t)type metadata accessor for TimeZoneChange, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C2B543C4);
      sub_1C2B5AE48((uint64_t)v34, type metadata accessor for TimeZoneChange);
    }
    sub_1C2B5AE48((uint64_t)v8, (uint64_t (*)(void))sub_1C2B5AD50);
    goto LABEL_18;
  }
  sub_1C2B5B968((uint64_t)v19, (uint64_t)&qword_1EA32C078, (uint64_t)type metadata accessor for TimeZoneChange, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C2B543C4);
LABEL_6:
  uint64_t v26 = 0;
  uint64_t v28 = (uint64_t (*)(void))sub_1C2B5ADE4;
LABEL_20:
  sub_1C2B5AE48((uint64_t)v23, v28);
  return v26;
}

void *sub_1C2B58AA0(void *a1)
{
  uint64_t v2 = v1;
  id v25 = a1;
  uint64_t v3 = sub_1C2B74530();
  uint64_t v23 = *(void *)(v3 - 8);
  uint64_t v24 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C2B74510();
  MEMORY[0x1F4188790](v6);
  uint64_t v7 = sub_1C2B73DC0();
  MEMORY[0x1F4188790](v7 - 8);
  sub_1C2B543C4(0, &qword_1EA32C078, type metadata accessor for TimeZoneChange, MEMORY[0x1E4FBB718]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v23 - v11;
  uint64_t v13 = type metadata accessor for HealthStoreTimeZoneProvider.State(0);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v15, 1, 1, v9);
  sub_1C2B5AF44();
  uint64_t v16 = swift_allocObject();
  *(_DWORD *)(v16 + ((*(unsigned int *)(*(void *)v16 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  sub_1C2B5AC58((uint64_t)v15, v16 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v16 + 16));
  sub_1C2B5AE48((uint64_t)v15, type metadata accessor for HealthStoreTimeZoneProvider.State);
  v2[3] = v16;
  uint64_t v2[4] = 0;
  uint64_t v17 = type metadata accessor for TimeZoneChange(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v12, 1, 1, v17);
  sub_1C2B5B148(0, &qword_1EA32C2D0, &qword_1EA32C078, type metadata accessor for TimeZoneChange, MEMORY[0x1E4F1ABB0]);
  swift_allocObject();
  v2[5] = sub_1C2B73C20();
  sub_1C2AE3A18(0, &qword_1EBF10BA8);
  sub_1C2B73DB0();
  uint64_t v26 = MEMORY[0x1E4FBC860];
  sub_1C2B5397C(&qword_1EBF10B88, MEMORY[0x1E4FBCC10]);
  sub_1C2B543C4(0, &qword_1EBF10B68, MEMORY[0x1E4FBCC10], MEMORY[0x1E4FBB320]);
  sub_1C2B5AFAC();
  sub_1C2B74700();
  (*(void (**)(char *, void, uint64_t))(v23 + 104))(v5, *MEMORY[0x1E4FBCC58], v24);
  uint64_t v2[6] = sub_1C2B74560();
  sub_1C2B73FA0();
  id v18 = objc_allocWithZone(MEMORY[0x1E4F2B138]);
  id v19 = v25;
  uint64_t v20 = (void *)sub_1C2B73F60();
  swift_bridgeObjectRelease();
  id v21 = objc_msgSend(v18, sel_initWithCategory_domainName_healthStore_, 1, v20, v19);

  uint64_t v2[2] = v21;
  sub_1C2B54600();
  return v2;
}

uint64_t sub_1C2B58FF0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_1C2AFA544;
  return sub_1C2B557B8(a1, v4, v5, v7, v6);
}

uint64_t sub_1C2B590B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TimeZoneChange(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t objectdestroyTm_4()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1C2B59158(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_1C2AF9A8C;
  return sub_1C2B557B8(a1, v4, v5, v7, v6);
}

uint64_t sub_1C2B59218()
{
  return sub_1C2B5397C(&qword_1EA32C2E8, (void (*)(uint64_t))type metadata accessor for TimeZoneChange);
}

void *initializeBufferWithCopyOfBuffer for TimeZoneChange(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1C2B73710();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    *((unsigned char *)v4 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  }
  return v4;
}

uint64_t destroy for TimeZoneChange(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_1C2B73710();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  return v4(v2, v3);
}

void *initializeWithCopy for TimeZoneChange(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C2B73710();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *assignWithCopy for TimeZoneChange(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C2B73710();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *initializeWithTake for TimeZoneChange(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C2B73710();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *assignWithTake for TimeZoneChange(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C2B73710();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for TimeZoneChange(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C2B59624);
}

uint64_t sub_1C2B59624(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C2B73710();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unsigned int v12 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
    if (v12 >= 2) {
      return ((v12 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for TimeZoneChange(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C2B5970C);
}

uint64_t sub_1C2B5970C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1C2B73710();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unsigned int v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 24)) = a2 + 1;
  }
  return result;
}

uint64_t sub_1C2B597CC()
{
  uint64_t result = sub_1C2B73710();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for HealthStoreTimeZoneProvider()
{
  return self;
}

uint64_t method lookup function for HealthStoreTimeZoneProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for HealthStoreTimeZoneProvider);
}

uint64_t dispatch thunk of HealthStoreTimeZoneProvider.__allocating_init(healthStore:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t *sub_1C2B598C0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    sub_1C2B543C4(0, &qword_1EA32C078, type metadata accessor for TimeZoneChange, MEMORY[0x1E4FBB718]);
    uint64_t v8 = v7;
    uint64_t v9 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v11 = type metadata accessor for TimeZoneChange(0);
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
      {
        memcpy(a1, a2, *(void *)(v9 + 64));
      }
      else
      {
        *a1 = *a2;
        uint64_t v13 = *(int *)(v11 + 20);
        uint64_t v14 = (char *)a1 + v13;
        uint64_t v15 = (char *)a2 + v13;
        uint64_t v16 = sub_1C2B73710();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
        *((unsigned char *)a1 + *(int *)(v11 + 24)) = *((unsigned char *)a2 + *(int *)(v11 + 24));
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
      }
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
  }
  return a1;
}

uint64_t sub_1C2B59B10(uint64_t a1)
{
  sub_1C2B543C4(0, &qword_1EA32C078, type metadata accessor for TimeZoneChange, MEMORY[0x1E4FBB718]);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 1, v2);
  if (!result)
  {
    uint64_t v4 = type metadata accessor for TimeZoneChange(0);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, 1, v4);
    if (!result)
    {
      uint64_t v5 = a1 + *(int *)(v4 + 20);
      uint64_t v6 = sub_1C2B73710();
      uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
      return v7(v5, v6);
    }
  }
  return result;
}

void *sub_1C2B59C3C(void *a1, void *a2, uint64_t a3)
{
  sub_1C2B543C4(0, &qword_1EA32C078, type metadata accessor for TimeZoneChange, MEMORY[0x1E4FBB718]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v9 = type metadata accessor for TimeZoneChange(0);
    uint64_t v10 = *(void *)(v9 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48))(a2, 1, v9))
    {
      memcpy(a1, a2, *(void *)(v8 + 64));
    }
    else
    {
      *a1 = *a2;
      uint64_t v11 = *(int *)(v9 + 20);
      uint64_t v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      uint64_t v14 = sub_1C2B73710();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
      *((unsigned char *)a1 + *(int *)(v9 + 24)) = *((unsigned char *)a2 + *(int *)(v9 + 24));
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  }
  return a1;
}

void *sub_1C2B59E50(void *a1, void *a2, uint64_t a3)
{
  sub_1C2B543C4(0, &qword_1EA32C078, type metadata accessor for TimeZoneChange, MEMORY[0x1E4FBB718]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  int v10 = v9(a1, 1, v6);
  int v11 = v9(a2, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      uint64_t v15 = type metadata accessor for TimeZoneChange(0);
      uint64_t v16 = *(void *)(v15 - 8);
      uint64_t v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
      int v18 = v17(a1, 1, v15);
      int v19 = v17(a2, 1, v15);
      if (v18)
      {
        if (!v19)
        {
          *a1 = *a2;
          uint64_t v20 = *(int *)(v15 + 20);
          id v21 = (char *)a1 + v20;
          uint64_t v22 = (char *)a2 + v20;
          uint64_t v23 = sub_1C2B73710();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
          *((unsigned char *)a1 + *(int *)(v15 + 24)) = *((unsigned char *)a2 + *(int *)(v15 + 24));
          (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
          return a1;
        }
      }
      else
      {
        if (!v19)
        {
          *a1 = *a2;
          uint64_t v29 = *(int *)(v15 + 20);
          uint64_t v30 = (char *)a1 + v29;
          uint64_t v31 = (char *)a2 + v29;
          uint64_t v32 = sub_1C2B73710();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 24))(v30, v31, v32);
          *((unsigned char *)a1 + *(int *)(v15 + 24)) = *((unsigned char *)a2 + *(int *)(v15 + 24));
          return a1;
        }
        sub_1C2B5AE48((uint64_t)a1, type metadata accessor for TimeZoneChange);
      }
      size_t v14 = *(void *)(v8 + 64);
      goto LABEL_8;
    }
    sub_1C2B5B968((uint64_t)a1, (uint64_t)&qword_1EA32C078, (uint64_t)type metadata accessor for TimeZoneChange, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C2B543C4);
LABEL_7:
    size_t v14 = *(void *)(*(void *)(a3 - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v14);
    return a1;
  }
  if (v11) {
    goto LABEL_7;
  }
  uint64_t v12 = type metadata accessor for TimeZoneChange(0);
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v13 + 48))(a2, 1, v12))
  {
    memcpy(a1, a2, *(void *)(v8 + 64));
  }
  else
  {
    *a1 = *a2;
    uint64_t v24 = *(int *)(v12 + 20);
    id v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    uint64_t v27 = sub_1C2B73710();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    *((unsigned char *)a1 + *(int *)(v12 + 24)) = *((unsigned char *)a2 + *(int *)(v12 + 24));
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(a1, 0, 1, v12);
  }
  (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  return a1;
}

void *sub_1C2B5A26C(void *a1, void *a2, uint64_t a3)
{
  sub_1C2B543C4(0, &qword_1EA32C078, type metadata accessor for TimeZoneChange, MEMORY[0x1E4FBB718]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v9 = type metadata accessor for TimeZoneChange(0);
    uint64_t v10 = *(void *)(v9 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48))(a2, 1, v9))
    {
      memcpy(a1, a2, *(void *)(v8 + 64));
    }
    else
    {
      *a1 = *a2;
      uint64_t v11 = *(int *)(v9 + 20);
      uint64_t v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      uint64_t v14 = sub_1C2B73710();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
      *((unsigned char *)a1 + *(int *)(v9 + 24)) = *((unsigned char *)a2 + *(int *)(v9 + 24));
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  }
  return a1;
}

void *sub_1C2B5A480(void *a1, void *a2, uint64_t a3)
{
  sub_1C2B543C4(0, &qword_1EA32C078, type metadata accessor for TimeZoneChange, MEMORY[0x1E4FBB718]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  int v10 = v9(a1, 1, v6);
  int v11 = v9(a2, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      uint64_t v15 = type metadata accessor for TimeZoneChange(0);
      uint64_t v16 = *(void *)(v15 - 8);
      uint64_t v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
      int v18 = v17(a1, 1, v15);
      int v19 = v17(a2, 1, v15);
      if (v18)
      {
        if (!v19)
        {
          *a1 = *a2;
          uint64_t v20 = *(int *)(v15 + 20);
          id v21 = (char *)a1 + v20;
          uint64_t v22 = (char *)a2 + v20;
          uint64_t v23 = sub_1C2B73710();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
          *((unsigned char *)a1 + *(int *)(v15 + 24)) = *((unsigned char *)a2 + *(int *)(v15 + 24));
          (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
          return a1;
        }
      }
      else
      {
        if (!v19)
        {
          *a1 = *a2;
          uint64_t v29 = *(int *)(v15 + 20);
          uint64_t v30 = (char *)a1 + v29;
          uint64_t v31 = (char *)a2 + v29;
          uint64_t v32 = sub_1C2B73710();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 40))(v30, v31, v32);
          *((unsigned char *)a1 + *(int *)(v15 + 24)) = *((unsigned char *)a2 + *(int *)(v15 + 24));
          return a1;
        }
        sub_1C2B5AE48((uint64_t)a1, type metadata accessor for TimeZoneChange);
      }
      size_t v14 = *(void *)(v8 + 64);
      goto LABEL_8;
    }
    sub_1C2B5B968((uint64_t)a1, (uint64_t)&qword_1EA32C078, (uint64_t)type metadata accessor for TimeZoneChange, MEMORY[0x1E4FBB718], (uint64_t (*)(void))sub_1C2B543C4);
LABEL_7:
    size_t v14 = *(void *)(*(void *)(a3 - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v14);
    return a1;
  }
  if (v11) {
    goto LABEL_7;
  }
  uint64_t v12 = type metadata accessor for TimeZoneChange(0);
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v13 + 48))(a2, 1, v12))
  {
    memcpy(a1, a2, *(void *)(v8 + 64));
  }
  else
  {
    *a1 = *a2;
    uint64_t v24 = *(int *)(v12 + 20);
    id v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    uint64_t v27 = sub_1C2B73710();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
    *((unsigned char *)a1 + *(int *)(v12 + 24)) = *((unsigned char *)a2 + *(int *)(v12 + 24));
    (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(a1, 0, 1, v12);
  }
  (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  return a1;
}

uint64_t sub_1C2B5A89C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C2B5A8B0);
}

uint64_t sub_1C2B5A8B0(uint64_t a1, uint64_t a2)
{
  sub_1C2B543C4(0, &qword_1EA32C078, type metadata accessor for TimeZoneChange, MEMORY[0x1E4FBB718]);
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1C2B5A94C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C2B5A960);
}

uint64_t sub_1C2B5A960(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  sub_1C2B543C4(0, &qword_1EA32C078, type metadata accessor for TimeZoneChange, MEMORY[0x1E4FBB718]);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(a1, v5, a3, v6);
}

uint64_t sub_1C2B5AA10(uint64_t a1)
{
  sub_1C2B543C4(0, &qword_1EA32C078, type metadata accessor for TimeZoneChange, MEMORY[0x1E4FBB718]);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);
  return v3(a1, 1, v2);
}

uint64_t sub_1C2B5AAA8(uint64_t a1, uint64_t a2)
{
  sub_1C2B543C4(0, &qword_1EA32C078, type metadata accessor for TimeZoneChange, MEMORY[0x1E4FBB718]);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, 1, v4);
}

uint64_t type metadata accessor for HealthStoreTimeZoneProvider.State(uint64_t a1)
{
  return sub_1C2AE7EB0(a1, (uint64_t *)&unk_1EA32C350);
}

void sub_1C2B5AB68()
{
  sub_1C2B543C4(319, &qword_1EA32C078, type metadata accessor for TimeZoneChange, MEMORY[0x1E4FBB718]);
  if (v0 <= 0x3F) {
    swift_initEnumMetadataSinglePayload();
  }
}

uint64_t sub_1C2B5AC10()
{
  return sub_1C2B5397C(&qword_1EA32C360, (void (*)(uint64_t))type metadata accessor for HealthStoreTimeZoneProvider.State);
}

uint64_t sub_1C2B5AC58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HealthStoreTimeZoneProvider.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C2B5ACBC(uint64_t a1, uint64_t a2)
{
  sub_1C2B543C4(0, &qword_1EA32C078, type metadata accessor for TimeZoneChange, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1C2B5AD50()
{
  if (!qword_1EA32C368)
  {
    sub_1C2B543C4(255, &qword_1EA32C078, type metadata accessor for TimeZoneChange, MEMORY[0x1E4FBB718]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA32C368);
    }
  }
}

void sub_1C2B5ADE4()
{
  if (!qword_1EA32C370)
  {
    type metadata accessor for HealthStoreTimeZoneProvider.State(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA32C370);
    }
  }
}

uint64_t sub_1C2B5AE48(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C2B5AEA8(uint64_t a1)
{
  return sub_1C2B56BDC(a1, *(void *)(v1 + 16));
}

uint64_t sub_1C2B5AEC4(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_1C2B543C4(0, a3, a4, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

void sub_1C2B5AF44()
{
  if (!qword_1EA32C378)
  {
    type metadata accessor for HealthStoreTimeZoneProvider.State(255);
    type metadata accessor for os_unfair_lock_s(255);
    unint64_t v0 = sub_1C2B748A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA32C378);
    }
  }
}

unint64_t sub_1C2B5AFAC()
{
  unint64_t result = qword_1EBF10B70;
  if (!qword_1EBF10B70)
  {
    sub_1C2B543C4(255, &qword_1EBF10B68, MEMORY[0x1E4FBCC10], MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBF10B70);
  }
  return result;
}

void sub_1C2B5B034()
{
  if (!qword_1EA32C380)
  {
    sub_1C2B5B148(255, &qword_1EA32C388, (unint64_t *)&qword_1EBF11360, MEMORY[0x1E4F27928], MEMORY[0x1E4F1AAE0]);
    sub_1C2B5B1D4(255, &qword_1EA32C390, &qword_1EA32C398, MEMORY[0x1E4FBB550]);
    sub_1C2B5B1D4(255, &qword_1EA32C3A0, &qword_1EA32C3A8, MEMORY[0x1E4FBB390]);
    sub_1C2B5B250();
    sub_1C2B5B2E0();
    sub_1C2B5B350();
    unint64_t v0 = sub_1C2B73AE0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA32C380);
    }
  }
}

void sub_1C2B5B148(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t, void, void))
{
  if (!*a2)
  {
    sub_1C2B543C4(255, a3, a4, MEMORY[0x1E4FBB718]);
    unint64_t v9 = a5(a1, v8, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBC278]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_1C2B5B1D4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  if (!*a2)
  {
    sub_1C2AE04AC(255, a3, a4, MEMORY[0x1E4FBB718]);
    unint64_t v5 = sub_1C2B73B60();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_1C2B5B250()
{
  unint64_t result = qword_1EA32C3B0;
  if (!qword_1EA32C3B0)
  {
    sub_1C2B5B148(255, &qword_1EA32C388, (unint64_t *)&qword_1EBF11360, MEMORY[0x1E4F27928], MEMORY[0x1E4F1AAE0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA32C3B0);
  }
  return result;
}

unint64_t sub_1C2B5B2E0()
{
  unint64_t result = qword_1EA32C3B8;
  if (!qword_1EA32C3B8)
  {
    sub_1C2B5B1D4(255, &qword_1EA32C390, &qword_1EA32C398, MEMORY[0x1E4FBB550]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA32C3B8);
  }
  return result;
}

unint64_t sub_1C2B5B350()
{
  unint64_t result = qword_1EA32C3C0;
  if (!qword_1EA32C3C0)
  {
    sub_1C2B5B1D4(255, &qword_1EA32C3A0, &qword_1EA32C3A8, MEMORY[0x1E4FBB390]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA32C3C0);
  }
  return result;
}

void sub_1C2B5B3C0()
{
  if (!qword_1EA32C3C8)
  {
    sub_1C2B5B034();
    sub_1C2B543C4(255, &qword_1EA32C078, type metadata accessor for TimeZoneChange, MEMORY[0x1E4FBB718]);
    sub_1C2B5397C(&qword_1EA32C3D0, (void (*)(uint64_t))sub_1C2B5B034);
    unint64_t v0 = sub_1C2B73B40();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA32C3C8);
    }
  }
}

void sub_1C2B5B49C()
{
  if (!qword_1EA32C3D8)
  {
    sub_1C2B5B3C0();
    sub_1C2AE3A18(255, &qword_1EBF10BA8);
    sub_1C2B5397C(&qword_1EA32C3E0, (void (*)(uint64_t))sub_1C2B5B3C0);
    sub_1C2B5B568();
    unint64_t v0 = sub_1C2B73B50();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA32C3D8);
    }
  }
}

unint64_t sub_1C2B5B568()
{
  unint64_t result = qword_1EBF10B98;
  if (!qword_1EBF10B98)
  {
    sub_1C2AE3A18(255, &qword_1EBF10BA8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBF10B98);
  }
  return result;
}

void sub_1C2B5B5D0()
{
  if (!qword_1EA32C3E8)
  {
    sub_1C2B5B738(255, &qword_1EA32C3F0, &qword_1EA32C3A8, MEMORY[0x1E4FBB390]);
    sub_1C2B5B64C();
    unint64_t v0 = sub_1C2B73B10();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA32C3E8);
    }
  }
}

unint64_t sub_1C2B5B64C()
{
  unint64_t result = qword_1EA32C3F8;
  if (!qword_1EA32C3F8)
  {
    sub_1C2B5B738(255, &qword_1EA32C3F0, &qword_1EA32C3A8, MEMORY[0x1E4FBB390]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA32C3F8);
  }
  return result;
}

void sub_1C2B5B6BC()
{
  if (!qword_1EA32C400)
  {
    sub_1C2B5B738(255, &qword_1EA32C408, &qword_1EA32C398, MEMORY[0x1E4FBB550]);
    sub_1C2B5B7C4();
    unint64_t v0 = sub_1C2B73B10();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA32C400);
    }
  }
}

void sub_1C2B5B738(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4)
{
  if (!*a2)
  {
    sub_1C2AE04AC(255, a3, a4, MEMORY[0x1E4FBB718]);
    sub_1C2AF44C8();
    unint64_t v5 = sub_1C2B73B60();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_1C2B5B7C4()
{
  unint64_t result = qword_1EA32C410;
  if (!qword_1EA32C410)
  {
    sub_1C2B5B738(255, &qword_1EA32C408, &qword_1EA32C398, MEMORY[0x1E4FBB550]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA32C410);
  }
  return result;
}

void sub_1C2B5B834()
{
  if (!qword_1EA32C418)
  {
    sub_1C2B5B8C8();
    sub_1C2B5397C(&qword_1EA32C428, (void (*)(uint64_t))sub_1C2B5B8C8);
    unint64_t v0 = sub_1C2B73B10();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA32C418);
    }
  }
}

void sub_1C2B5B8C8()
{
  if (!qword_1EA32C420)
  {
    sub_1C2B543C4(255, (unint64_t *)&qword_1EBF11360, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    sub_1C2AF44C8();
    unint64_t v0 = sub_1C2B73B60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA32C420);
    }
  }
}

uint64_t sub_1C2B5B968(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v6 = a5(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

uint64_t sub_1C2B5B9C8()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C2B5BA00(uint64_t a1)
{
  return sub_1C2B57268(a1);
}

void sub_1C2B5BA08()
{
  if (!qword_1EA32C450)
  {
    sub_1C2B543C4(255, (unint64_t *)&qword_1EBF11360, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
    uint64_t v0 = (uint64_t (*)(void, uint64_t))MEMORY[0x1E4FBB718];
    sub_1C2AE04AC(255, &qword_1EA32C398, MEMORY[0x1E4FBB550], MEMORY[0x1E4FBB718]);
    sub_1C2AE04AC(255, &qword_1EA32C3A8, MEMORY[0x1E4FBB390], v0);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v2) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1EA32C450);
    }
  }
}

uint64_t sub_1C2B5BB00@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = 0;
    unint64_t v5 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v7 = *v5++;
      uint64_t v6 = v7;
      if ((v7 & ~v4) == 0) {
        uint64_t v6 = 0;
      }
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t MedicationScheduleControlObserver.ObserverOptions.rawValue.getter()
{
  return *(void *)v0;
}

HealthMedicationsExperience::MedicationScheduleControlObserver::ObserverOptions __swiftcall MedicationScheduleControlObserver.ObserverOptions.init(rawValue:)(HealthMedicationsExperience::MedicationScheduleControlObserver::ObserverOptions rawValue)
{
  v1->unint64_t rawValue = rawValue.rawValue;
  return rawValue;
}

void static MedicationScheduleControlObserver.ObserverOptions.rescheduleItems.getter(void *a1@<X8>)
{
  *a1 = 1;
}

void static MedicationScheduleControlObserver.ObserverOptions.addOrModifySchedules.getter(void *a1@<X8>)
{
  *a1 = 2;
}

void sub_1C2B5BB80()
{
  uint64_t v0 = unk_1F1DF9BF8;
  if ((unk_1F1DF9BF8 & ~qword_1F1DF9BF0) == 0) {
    uint64_t v0 = 0;
  }
  qword_1EA32C460 = v0 | qword_1F1DF9BF0;
}

uint64_t static MedicationScheduleControlObserver.ObserverOptions.all.getter@<X0>(void *a1@<X8>)
{
  if (qword_1EA32B658 != -1) {
    uint64_t result = swift_once();
  }
  *a1 = qword_1EA32C460;
  return result;
}

uint64_t sub_1C2B5BC00@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1C2B5BB00(a1, a2);
}

void MedicationScheduleControlObserver.observerOptions.getter(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + OBJC_IVAR____TtC27HealthMedicationsExperience33MedicationScheduleControlObserver_observerOptions);
}

uint64_t MedicationScheduleControlObserver.scheduleChangedSubject.getter()
{
  return swift_retain();
}

id MedicationScheduleControlObserver.__allocating_init(options:)(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (char *)objc_allocWithZone(v2);
  uint64_t v5 = *a1;
  uint64_t v6 = OBJC_IVAR____TtC27HealthMedicationsExperience33MedicationScheduleControlObserver_scheduleChangedSubject;
  sub_1C2B5BD70();
  swift_allocObject();
  uint64_t v7 = v4;
  *(void *)&v4[v6] = sub_1C2B73C20();
  *(void *)&v7[OBJC_IVAR____TtC27HealthMedicationsExperience33MedicationScheduleControlObserver_observerOptions] = v5;

  v9.receiver = v7;
  v9.super_class = v2;
  return objc_msgSendSuper2(&v9, sel_init);
}

id MedicationScheduleControlObserver.init(options:)(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = OBJC_IVAR____TtC27HealthMedicationsExperience33MedicationScheduleControlObserver_scheduleChangedSubject;
  sub_1C2B5BD70();
  swift_allocObject();
  uint64_t v4 = v1;
  *(void *)&v1[v3] = sub_1C2B73C20();
  *(void *)&v4[OBJC_IVAR____TtC27HealthMedicationsExperience33MedicationScheduleControlObserver_observerOptions] = v2;

  v6.receiver = v4;
  v6.super_class = (Class)type metadata accessor for MedicationScheduleControlObserver();
  return objc_msgSendSuper2(&v6, sel_init);
}

void sub_1C2B5BD70()
{
  if (!qword_1EA32C478)
  {
    unint64_t v0 = sub_1C2B73C10();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA32C478);
    }
  }
}

uint64_t type metadata accessor for MedicationScheduleControlObserver()
{
  return self;
}

uint64_t sub_1C2B5BE00()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC27HealthMedicationsExperience33MedicationScheduleControlObserver_observerOptions))
  {
    sub_1C2B5BD70();
    sub_1C2B5BE54();
    return sub_1C2B73C80();
  }
  return result;
}

unint64_t sub_1C2B5BE54()
{
  unint64_t result = qword_1EA32C480;
  if (!qword_1EA32C480)
  {
    sub_1C2B5BD70();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA32C480);
  }
  return result;
}

uint64_t sub_1C2B5BF48()
{
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC27HealthMedicationsExperience33MedicationScheduleControlObserver_observerOptions) & 2) != 0)
  {
    sub_1C2B5BD70();
    sub_1C2B5BE54();
    return sub_1C2B73C80();
  }
  return result;
}

id MedicationScheduleControlObserver.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void MedicationScheduleControlObserver.init()()
{
}

id MedicationScheduleControlObserver.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationScheduleControlObserver();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_1C2B5C120()
{
  unint64_t result = qword_1EA32C488;
  if (!qword_1EA32C488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA32C488);
  }
  return result;
}

unint64_t sub_1C2B5C178()
{
  unint64_t result = qword_1EA32C490;
  if (!qword_1EA32C490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA32C490);
  }
  return result;
}

unint64_t sub_1C2B5C1D0()
{
  unint64_t result = qword_1EA32C498;
  if (!qword_1EA32C498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA32C498);
  }
  return result;
}

unint64_t sub_1C2B5C228()
{
  unint64_t result = qword_1EA32C4A0;
  if (!qword_1EA32C4A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA32C4A0);
  }
  return result;
}

uint64_t method lookup function for MedicationScheduleControlObserver(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationScheduleControlObserver);
}

uint64_t dispatch thunk of MedicationScheduleControlObserver.__allocating_init(options:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of MedicationScheduleControlObserver.scheduleControlDidRescheduleItems()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of MedicationScheduleControlObserver.scheduleControl(_:didAddOrModify:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

ValueMetadata *type metadata accessor for MedicationScheduleControlObserver.ObserverOptions()
{
  return &type metadata for MedicationScheduleControlObserver.ObserverOptions;
}

id sub_1C2B5C330(uint64_t a1, uint64_t a2)
{
  sub_1C2AE0F7C();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(*(unsigned char *)v2)
  {
    case 1:
      if (!*(void *)(v2 + 32)) {
        goto LABEL_16;
      }
      if (*(unsigned char *)(v2 + 48)) {
        goto LABEL_17;
      }
      uint64_t v13 = *(void *)(v2 + 40);
      id v14 = objc_allocWithZone(MEMORY[0x1E4F66AE0]);
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v15 = (void *)sub_1C2B73F60();
      swift_bridgeObjectRelease();
      uint64_t v32 = a1;
      uint64_t v33 = a2;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v29 = 1107296256;
      uint64_t v30 = sub_1C2B5DFD8;
      uint64_t v31 = &block_descriptor_14;
      int v11 = _Block_copy(&aBlock);
      id v16 = objc_msgSend(v14, sel_initWithMachineReadableCode_codeAttributeType_resultsHandler_, v15, v13, v11);

      goto LABEL_10;
    case 2:
      if (!*(void *)(v2 + 56)) {
        goto LABEL_18;
      }
      uint64_t v17 = *(void *)(v2 + 8);
      id v18 = objc_allocWithZone(MEMORY[0x1E4F66AE0]);
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v10 = (void *)sub_1C2B741C0();
      swift_bridgeObjectRelease();
      uint64_t v32 = a1;
      uint64_t v33 = a2;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v29 = 1107296256;
      uint64_t v30 = sub_1C2B5DFD8;
      uint64_t v31 = &block_descriptor_11;
      int v11 = _Block_copy(&aBlock);
      id v12 = objc_msgSend(v18, sel_initWithTextSearchTokens_limit_resultsHandler_, v10, v17, v11);
      goto LABEL_9;
    case 3:
      if (!*(void *)(v2 + 64)) {
        goto LABEL_19;
      }
      uint64_t Descriptor = type metadata accessor for HKMedicationClusterQueryDescriptor();
      sub_1C2B5E25C(v2 + *(int *)(Descriptor + 44), (uint64_t)v7, (uint64_t (*)(void))sub_1C2AE0F7C);
      uint64_t v20 = sub_1C2B73710();
      uint64_t v21 = *(void *)(v20 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v7, 1, v20) == 1) {
        goto LABEL_20;
      }
      uint64_t v22 = *(void *)(v2 + 8);
      id v23 = objc_allocWithZone(MEMORY[0x1E4F66AE0]);
      sub_1C2AE3A18(0, &qword_1EA32BBE8);
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v24 = (void *)sub_1C2B741C0();
      swift_bridgeObjectRelease();
      id v25 = (void *)sub_1C2B736C0();
      uint64_t v32 = a1;
      uint64_t v33 = a2;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v29 = 1107296256;
      uint64_t v30 = sub_1C2B5DFD8;
      uint64_t v31 = &block_descriptor_13;
      uint64_t v26 = _Block_copy(&aBlock);
      id v16 = objc_msgSend(v23, sel_initForCHRImportWithExistingMedications_sinceDate_limit_resultsHandler_, v24, v25, v22, v26);
      _Block_release(v26);

      (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v20);
      goto LABEL_14;
    default:
      if (!*(void *)(v2 + 16))
      {
        __break(1u);
LABEL_16:
        __break(1u);
LABEL_17:
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
        JUMPOUT(0x1C2B5C7F0);
      }
      uint64_t v8 = *(void *)(v2 + 8);
      id v9 = objc_allocWithZone(MEMORY[0x1E4F66AE0]);
      sub_1C2AE3A18(0, &qword_1EA32BA48);
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v10 = (void *)sub_1C2B741C0();
      swift_bridgeObjectRelease();
      uint64_t v32 = a1;
      uint64_t v33 = a2;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v29 = 1107296256;
      uint64_t v30 = sub_1C2B5DFD8;
      uint64_t v31 = &block_descriptor_17_0;
      int v11 = _Block_copy(&aBlock);
      id v12 = objc_msgSend(v9, sel_initWithScanResult_limit_resultsHandler_, v10, v8, v11);
LABEL_9:
      id v16 = v12;

LABEL_10:
      _Block_release(v11);
LABEL_14:
      swift_release();
      return v16;
  }
}

uint64_t HKMedicationClusterQueryDescriptor.init(textSearchTokens:limit:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(_OWORD *)(a3 + 16) = 0u;
  *(_OWORD *)(a3 + 32) = 0u;
  *(unsigned char *)(a3 + 48) = 1;
  *(void *)(a3 + 64) = 0;
  uint64_t v6 = a3 + *(int *)(type metadata accessor for HKMedicationClusterQueryDescriptor() + 44);
  uint64_t v7 = sub_1C2B73710();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  uint64_t result = sub_1C2B73E80();
  *(unsigned char *)a3 = 2;
  *(void *)(a3 + 56) = a1;
  *(void *)(a3 + 8) = a2;
  return result;
}

uint64_t type metadata accessor for HKMedicationClusterQueryDescriptor()
{
  uint64_t result = qword_1EA32C4B8;
  if (!qword_1EA32C4B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t HKMedicationClusterQueryDescriptor.limit.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t HKMedicationClusterQueryDescriptor.scanResult.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t HKMedicationClusterQueryDescriptor.machineReadableCode.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t HKMedicationClusterQueryDescriptor.codeAttributeType.getter()
{
  return *(void *)(v0 + 40);
}

uint64_t HKMedicationClusterQueryDescriptor.textSearchTokens.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t HKMedicationClusterQueryDescriptor.existingMedications.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t HKMedicationClusterQueryDescriptor.sinceDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t Descriptor = type metadata accessor for HKMedicationClusterQueryDescriptor();
  return sub_1C2B5E25C(v1 + *(int *)(Descriptor + 44), a1, (uint64_t (*)(void))sub_1C2AE0F7C);
}

uint64_t HKMedicationClusterQueryDescriptor.queryAttributes.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for HKMedicationClusterQueryDescriptor() + 48);
  uint64_t v4 = sub_1C2B73E90();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t HKMedicationClusterQueryDescriptor.queryAttributes.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for HKMedicationClusterQueryDescriptor() + 48);
  uint64_t v4 = sub_1C2B73E90();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);
  return v5(v3, a1, v4);
}

uint64_t (*HKMedicationClusterQueryDescriptor.queryAttributes.modify())()
{
  return nullsub_1;
}

uint64_t HKMedicationClusterQueryDescriptor.init(scanResult:limit:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)(a3 + 24) = 0;
  *(void *)(a3 + 32) = 0;
  *(void *)(a3 + 40) = 0;
  *(unsigned char *)(a3 + 48) = 1;
  uint64_t Descriptor = type metadata accessor for HKMedicationClusterQueryDescriptor();
  *(void *)(a3 + 56) = 0;
  *(void *)(a3 + 64) = 0;
  uint64_t v7 = a3 + *(int *)(Descriptor + 44);
  uint64_t v8 = sub_1C2B73710();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  uint64_t result = sub_1C2B73E80();
  *(unsigned char *)a3 = 0;
  *(void *)(a3 + 8) = a2;
  *(void *)(a3 + 16) = a1;
  return result;
}

uint64_t HKMedicationClusterQueryDescriptor.init(machineReadableCode:codeAttributeType:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(void *)(a4 + 16) = 0;
  uint64_t Descriptor = type metadata accessor for HKMedicationClusterQueryDescriptor();
  *(void *)(a4 + 56) = 0;
  *(void *)(a4 + 64) = 0;
  uint64_t v9 = a4 + *(int *)(Descriptor + 44);
  uint64_t v10 = sub_1C2B73710();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  uint64_t result = sub_1C2B73E80();
  *(unsigned char *)a4 = 1;
  *(void *)(a4 + 24) = a1;
  *(void *)(a4 + 32) = a2;
  *(void *)(a4 + 40) = a3;
  *(unsigned char *)(a4 + 48) = 0;
  *(void *)(a4 + 8) = 1;
  return result;
}

uint64_t HKMedicationClusterQueryDescriptor.init(existingMedications:sinceDate:limit:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(_OWORD *)(a4 + 16) = 0u;
  *(_OWORD *)(a4 + 32) = 0u;
  *(unsigned char *)(a4 + 48) = 1;
  *(void *)(a4 + 56) = 0;
  uint64_t v8 = a4 + *(int *)(type metadata accessor for HKMedicationClusterQueryDescriptor() + 44);
  uint64_t v9 = sub_1C2B73710();
  uint64_t v10 = *(void *)(v9 - 8);
  int v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
  v11(v8, 1, 1, v9);
  sub_1C2B73E80();
  *(unsigned char *)a4 = 3;
  *(void *)(a4 + 64) = a1;
  sub_1C2AFA240(v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v8, a2, v9);
  uint64_t result = ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v11)(v8, 0, 1, v9);
  *(void *)(a4 + 8) = a3;
  return result;
}

uint64_t HKMedicationClusterQueryDescriptor.result(for:)(uint64_t a1)
{
  *(void *)(v2 + 88) = a1;
  *(void *)(v2 + 96) = v1;
  return MEMORY[0x1F4188298](sub_1C2B5CDDC, 0, 0);
}

uint64_t sub_1C2B5CDDC()
{
  uint64_t v1 = (void *)v0[11];
  v0[2] = v0;
  v0[7] = v0 + 10;
  v0[3] = sub_1C2B2B654;
  uint64_t v2 = swift_continuation_init();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  id v4 = v1;
  id v5 = sub_1C2B5C330((uint64_t)sub_1C2AFA53C, v3);
  type metadata accessor for HKMedicationClusterQueryDescriptor();
  sub_1C2B745D0();
  objc_msgSend(v4, sel_executeQuery_, v5);

  swift_release();
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1C2B5CF00()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C2B5CF38(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 16) = a1;
  id v5 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v5;
  *id v5 = v3;
  v5[1] = sub_1C2B2BF68;
  v5[11] = a2;
  v5[12] = v2;
  return MEMORY[0x1F4188298](sub_1C2B5CDDC, 0, 0);
}

void *initializeBufferWithCopyOfBuffer for HKMedicationClusterQueryDescriptor(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  id v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *id v4 = *a2;
    id v4 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v6 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v6;
    uint64_t v7 = a2[4];
    *(void *)(a1 + 24) = a2[3];
    *(void *)(a1 + 32) = v7;
    *(void *)(a1 + 40) = a2[5];
    *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
    uint64_t v8 = a2[8];
    uint64_t v9 = *(int *)(a3 + 44);
    __dst = (void *)(a1 + v9);
    uint64_t v10 = (char *)a2 + v9;
    *(void *)(a1 + 56) = a2[7];
    *(void *)(a1 + 64) = v8;
    uint64_t v11 = sub_1C2B73710();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v20(v10, 1, v11))
    {
      sub_1C2AE0F7C();
      memcpy(__dst, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v15 = *(int *)(a3 + 48);
    id v16 = (char *)v4 + v15;
    uint64_t v17 = (uint64_t)a2 + v15;
    uint64_t v18 = sub_1C2B73E90();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  }
  return v4;
}

uint64_t destroy for HKMedicationClusterQueryDescriptor(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 44);
  uint64_t v5 = sub_1C2B73710();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 48);
  uint64_t v8 = sub_1C2B73E90();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  return v9(v7, v8);
}

uint64_t initializeWithCopy for HKMedicationClusterQueryDescriptor(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v7 = *(void *)(a2 + 64);
  uint64_t v8 = *(int *)(a3 + 44);
  __dst = (void *)(a1 + v8);
  uint64_t v9 = (const void *)(a2 + v8);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  uint64_t v10 = sub_1C2B73710();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v18 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v18(v9, 1, v10))
  {
    sub_1C2AE0F7C();
    memcpy(__dst, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(__dst, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  uint64_t v13 = *(int *)(a3 + 48);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_1C2B73E90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  return a1;
}

uint64_t assignWithCopy for HKMedicationClusterQueryDescriptor(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 44);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = sub_1C2B73710();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_1C2AE0F7C();
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  uint64_t v16 = *(int *)(a3 + 48);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_1C2B73E90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 24))(v17, v18, v19);
  return a1;
}

uint64_t initializeWithTake for HKMedicationClusterQueryDescriptor(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v7 = *(int *)(a3 + 44);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v10 = sub_1C2B73710();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    sub_1C2AE0F7C();
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = *(int *)(a3 + 48);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_1C2B73E90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  return a1;
}

uint64_t assignWithTake for HKMedicationClusterQueryDescriptor(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 44);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = sub_1C2B73710();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, void *, uint64_t))(v12 + 40))(v9, v10, v11);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    sub_1C2AE0F7C();
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
LABEL_7:
  uint64_t v17 = *(int *)(a3 + 48);
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = sub_1C2B73E90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 40))(v18, v19, v20);
  return a1;
}

uint64_t getEnumTagSinglePayload for HKMedicationClusterQueryDescriptor(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C2B5DB00);
}

uint64_t sub_1C2B5DB00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    sub_1C2AE0F7C();
    uint64_t v10 = *(void *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == a2)
    {
      uint64_t v11 = v9;
      uint64_t v12 = a1 + *(int *)(a3 + 44);
      uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
      return v13(v12, a2, v11);
    }
    else
    {
      uint64_t v14 = sub_1C2B73E90();
      int v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
      uint64_t v16 = v14;
      uint64_t v17 = a1 + *(int *)(a3 + 48);
      return v15(v17, a2, v16);
    }
  }
}

uint64_t storeEnumTagSinglePayload for HKMedicationClusterQueryDescriptor(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C2B5DC4C);
}

uint64_t sub_1C2B5DC4C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 16) = a2;
  }
  else
  {
    sub_1C2AE0F7C();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 44);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_1C2B73E90();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 48);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_1C2B5DD78()
{
  sub_1C2AE0F7C();
  if (v0 <= 0x3F)
  {
    sub_1C2B73E90();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unsigned char *storeEnumTagSinglePayload for HKMedicationClusterQueryDescriptor.HKMedicationClusterQueryType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C2B5DF48);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HKMedicationClusterQueryDescriptor.HKMedicationClusterQueryType()
{
  return &type metadata for HKMedicationClusterQueryDescriptor.HKMedicationClusterQueryType;
}

unint64_t sub_1C2B5DF84()
{
  unint64_t result = qword_1EA32C4C8;
  if (!qword_1EA32C4C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA32C4C8);
  }
  return result;
}

uint64_t sub_1C2B5DFD8(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v5 = a3;
  uint64_t v7 = *(void (**)(id, uint64_t, void *))(a1 + 32);
  if (a3)
  {
    sub_1C2AE3A18(0, (unint64_t *)&qword_1EA32B9C0);
    uint64_t v5 = sub_1C2B741D0();
  }
  swift_retain();
  id v8 = a2;
  id v9 = a4;
  v7(v8, v5, a4);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

unint64_t sub_1C2B5E0A8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    int v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C2B2B1F0();
  uint64_t v2 = sub_1C2B749F0();
  int v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1C2B5E25C(v6, (uint64_t)&v15, (uint64_t (*)(void))sub_1C2B2B25C);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_1C2B5E1E4(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    uint64_t *v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_1C2AF45B4(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C2B5E1E4(uint64_t a1, uint64_t a2)
{
  sub_1C2B74C20();
  sub_1C2B74070();
  uint64_t v4 = sub_1C2B74C60();
  return sub_1C2B5E2C4(a1, a2, v4);
}

uint64_t sub_1C2B5E25C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_1C2B5E2C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    char v10 = (void *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (sub_1C2B74B50() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      unint64_t i = (i + 1) & v12;
      if ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
      {
        BOOL v13 = (void *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (sub_1C2B74B50() & 1) == 0)
        {
          for (unint64_t i = (i + 1) & v12; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v12)
          {
            uint64_t v15 = (void *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2) {
              break;
            }
            if (sub_1C2B74B50()) {
              break;
            }
          }
        }
      }
    }
  }
  return i;
}

uint64_t sub_1C2B5E424(unint64_t a1)
{
  uint64_t v1 = a1;
  uint64_t v12 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_18;
  }
  sub_1C2B74900();
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; ; ++i)
      {
        MEMORY[0x1C8766C90](i, v1);
        uint64_t v4 = i + 1;
        if (__OFADD__(i, 1)) {
          break;
        }
        self;
        if (!swift_dynamicCastObjCClass())
        {
          swift_unknownObjectRelease();
          goto LABEL_15;
        }
        sub_1C2B748D0();
        sub_1C2B74910();
        sub_1C2B74920();
        sub_1C2B748E0();
        if (v4 == v2) {
          return v12;
        }
      }
      __break(1u);
    }
    else
    {
      uint64_t v5 = 0;
      uint64_t v6 = v1 + 32;
      while (1)
      {
        uint64_t v7 = v5 + 1;
        if (__OFADD__(v5, 1)) {
          break;
        }
        uint64_t v8 = *(void **)(v6 + 8 * v5);
        self;
        uint64_t v9 = swift_dynamicCastObjCClass();
        if (!v9)
        {
LABEL_15:
          swift_release();
          return 0;
        }
        uint64_t v1 = v9;
        id v10 = v8;
        sub_1C2B748D0();
        sub_1C2B74910();
        sub_1C2B74920();
        sub_1C2B748E0();
        ++v5;
        if (v7 == v2) {
          return v12;
        }
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    sub_1C2B749C0();
    swift_bridgeObjectRelease();
    sub_1C2B74900();
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C2B749C0();
    swift_bridgeObjectRelease();
  }
  return v12;
}

uint64_t sub_1C2B5E60C(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v10 = MEMORY[0x1E4FBC860];
  sub_1C2B1DA18(0, v2, 0);
  if (!v2) {
    return v10;
  }
  for (uint64_t i = a1 + 32; ; i += 32)
  {
    sub_1C2AF4658(i, (uint64_t)v9);
    sub_1C2AFB70C(0, (unint64_t *)&qword_1EBF0FEC8, MEMORY[0x1E4FBB718]);
    if (!swift_dynamicCast()) {
      break;
    }
    uint64_t v4 = v10;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1C2B1DA18(0, *(void *)(v4 + 16) + 1, 1);
      uint64_t v4 = v10;
    }
    unint64_t v6 = *(void *)(v4 + 16);
    unint64_t v5 = *(void *)(v4 + 24);
    if (v6 >= v5 >> 1)
    {
      sub_1C2B1DA18(v5 > 1, v6 + 1, 1);
      uint64_t v4 = v10;
    }
    *(void *)(v4 + 16) = v6 + 1;
    *(_OWORD *)(v4 + 16 * v6 + 32) = v8;
    if (!--v2) {
      return v4;
    }
  }
  swift_release();
  sub_1C2B027B4(0, 1);
  return 0;
}

uint64_t sub_1C2B5E784(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v10 = MEMORY[0x1E4FBC860];
  sub_1C2B1DA38(0, v2, 0);
  if (!v2) {
    return v10;
  }
  for (uint64_t i = a1 + 32; ; i += 32)
  {
    sub_1C2AF4658(i, (uint64_t)v9);
    sub_1C2B61930();
    if (!swift_dynamicCast()) {
      break;
    }
    uint64_t v4 = v10;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1C2B1DA38(0, *(void *)(v4 + 16) + 1, 1);
      uint64_t v4 = v10;
    }
    unint64_t v6 = *(void *)(v4 + 16);
    unint64_t v5 = *(void *)(v4 + 24);
    if (v6 >= v5 >> 1)
    {
      sub_1C2B1DA38(v5 > 1, v6 + 1, 1);
      uint64_t v4 = v10;
    }
    *(void *)(v4 + 16) = v6 + 1;
    *(void *)(v4 + 8 * v6 + 32) = v8;
    if (!--v2) {
      return v4;
    }
  }
  swift_release();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1C2B5E8CC(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v12 = MEMORY[0x1E4FBC860];
  sub_1C2B1D9F8(0, v2, 0);
  uint64_t v3 = v12;
  if (v2)
  {
    for (uint64_t i = a1 + 32; ; i += 32)
    {
      sub_1C2AF4658(i, (uint64_t)v11);
      if (!swift_dynamicCast()) {
        break;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C2B1D9F8(0, *(void *)(v3 + 16) + 1, 1);
        uint64_t v3 = v12;
      }
      unint64_t v6 = *(void *)(v3 + 16);
      unint64_t v5 = *(void *)(v3 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_1C2B1D9F8(v5 > 1, v6 + 1, 1);
        uint64_t v3 = v12;
      }
      *(void *)(v3 + 16) = v6 + 1;
      uint64_t v7 = v3 + 16 * v6;
      *(void *)(v7 + 32) = v9;
      *(void *)(v7 + 40) = v10;
      if (!--v2) {
        return v3;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    return 0;
  }
  return v3;
}

uint64_t sub_1C2B5EA14(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v3 = MEMORY[0x1E4FBC860];
    if (!v2) {
      return v3;
    }
    uint64_t v18 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1C2B1D9F8(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0) {
      break;
    }
    uint64_t v5 = 0;
    uint64_t v3 = v18;
    unint64_t v17 = v1 & 0xC000000000000001;
    unint64_t v6 = v1;
    while (v2 != v5)
    {
      if (v17) {
        id v7 = (id)MEMORY[0x1C8766C90](v5, v1);
      }
      else {
        id v7 = *(id *)(v1 + 8 * v5 + 32);
      }
      id v8 = v7;
      id v9 = objc_msgSend(v8, sel_semanticIdentifier);
      id v10 = objc_msgSend(v9, sel_stringValue);
      uint64_t v11 = sub_1C2B73FA0();
      uint64_t v13 = v12;

      unint64_t v15 = *(void *)(v18 + 16);
      unint64_t v14 = *(void *)(v18 + 24);
      if (v15 >= v14 >> 1) {
        sub_1C2B1D9F8(v14 > 1, v15 + 1, 1);
      }
      ++v5;
      *(void *)(v18 + 16) = v15 + 1;
      uint64_t v16 = v18 + 16 * v15;
      *(void *)(v16 + 32) = v11;
      *(void *)(v16 + 40) = v13;
      unint64_t v1 = v6;
      if (v2 == v5) {
        return v3;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C2B749C0();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1C2B5EBC0()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t sub_1C2B5EBF4(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 32) = a1;
  return result;
}

uint64_t (*sub_1C2B5EC34())()
{
  return j__swift_endAccess;
}

uint64_t sub_1C2B5EC88()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 33);
}

uint64_t LocalScheduleUnavailableAlertDeterminer.__allocating_init(medications:userDefaults:)(unint64_t a1, void *a2)
{
  uint64_t v4 = swift_allocObject();
  *(unsigned char *)(v4 + 33) = 2;
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = a2;
  unsigned int v6 = sub_1C2B60DE8(a1, v5);
  unsigned int v7 = v6 >> 8;
  *(unsigned char *)(v4 + 32) = v6 & 1;
  swift_beginAccess();
  *(unsigned char *)(v4 + 33) = v7;
  swift_bridgeObjectRelease();

  return v4;
}

uint64_t LocalScheduleUnavailableAlertDeterminer.init(medications:userDefaults:)(unint64_t a1, void *a2)
{
  *(unsigned char *)(v2 + 33) = 2;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = a2;
  unsigned int v6 = sub_1C2B60DE8(a1, v5);
  unsigned int v7 = v6 >> 8;
  *(unsigned char *)(v2 + 32) = v6 & 1;
  swift_beginAccess();
  *(unsigned char *)(v2 + 33) = v7;
  swift_bridgeObjectRelease();

  return v2;
}

void sub_1C2B5EE04()
{
  uint64_t v1 = v0;
  unint64_t v2 = *(void *)(v0 + 16);
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_1C2B749C0();
    swift_bridgeObjectRelease();
    if (v26) {
      goto LABEL_3;
    }
  }
  else if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    unint64_t v3 = swift_bridgeObjectRetain();
    sub_1C2B5EA14(v3);
    swift_bridgeObjectRelease();
    if (qword_1EBF11340 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_1C2B73A90();
    __swift_project_value_buffer(v4, (uint64_t)qword_1EBF11348);
    swift_bridgeObjectRetain_n();
    uint64_t v5 = sub_1C2B73A80();
    os_log_type_t v6 = sub_1C2B744E0();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      v38[0] = v36;
      *(_DWORD *)uint64_t v7 = 136315394;
      uint64_t v8 = sub_1C2B74CD0();
      sub_1C2AEEE6C(v8, v9, v38);
      sub_1C2B74650();
      swift_bridgeObjectRelease();
      *(_WORD *)(v7 + 12) = 2080;
      uint64_t v10 = swift_bridgeObjectRetain();
      uint64_t v11 = MEMORY[0x1C8766620](v10, MEMORY[0x1E4FBB1A0]);
      unint64_t v13 = v12;
      swift_bridgeObjectRelease();
      uint64_t v37 = sub_1C2AEEE6C(v11, v13, v38);
      sub_1C2B74650();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2ADB000, v5, v6, "[%s] Saving unavailable schedule medication identifiers: %s to UserDefaults", (uint8_t *)v7, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C8767A10](v36, -1, -1);
      MEMORY[0x1C8767A10](v7, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    unint64_t v14 = *(void **)(v1 + 24);
    unint64_t v15 = (void *)sub_1C2B741C0();
    swift_bridgeObjectRelease();
    if (qword_1EA32B620 != -1) {
      swift_once();
    }
    uint64_t v16 = (void *)sub_1C2B73F60();
    objc_msgSend(v14, sel_setObject_forKey_, v15, v16);

    unint64_t v17 = (unsigned char *)(v1 + 33);
    swift_beginAccess();
    *(unsigned char *)(v1 + 33) = 1;
    uint64_t v18 = sub_1C2B73A80();
    os_log_type_t v19 = sub_1C2B744E0();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      uint64_t v37 = v21;
      *(_DWORD *)uint64_t v20 = 136315138;
      uint64_t v22 = sub_1C2B74CD0();
      sub_1C2AEEE6C(v22, v23, &v37);
      sub_1C2B74650();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2ADB000, v18, v19, "[%s] Saving 'hasShownFirstAppearance': true to UserDefaults", v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C8767A10](v21, -1, -1);
      MEMORY[0x1C8767A10](v20, -1, -1);
    }

    if (*v17 == 2) {
      uint64_t v24 = 0;
    }
    else {
      uint64_t v24 = sub_1C2B74290();
    }
    if (qword_1EA32B618 != -1) {
      swift_once();
    }
    id v25 = (void *)sub_1C2B73F60();
    objc_msgSend(v14, sel_setValue_forKey_, v24, v25);
    swift_unknownObjectRelease();
    goto LABEL_28;
  }
  if (qword_1EBF11340 != -1) {
    swift_once();
  }
  uint64_t v27 = sub_1C2B73A90();
  __swift_project_value_buffer(v27, (uint64_t)qword_1EBF11348);
  uint64_t v28 = sub_1C2B73A80();
  os_log_type_t v29 = sub_1C2B744E0();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    v38[0] = v31;
    *(_DWORD *)uint64_t v30 = 136315138;
    uint64_t v32 = sub_1C2B74CD0();
    uint64_t v37 = sub_1C2AEEE6C(v32, v33, v38);
    sub_1C2B74650();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2ADB000, v28, v29, "[%s] Attempting to save identifiers with no medications, removing values from UserDefaults", v30, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C8767A10](v31, -1, -1);
    MEMORY[0x1C8767A10](v30, -1, -1);
  }

  swift_beginAccess();
  *(unsigned char *)(v1 + 33) = 2;
  char v34 = *(void **)(v1 + 24);
  if (qword_1EA32B618 != -1) {
    swift_once();
  }
  int v35 = (void *)sub_1C2B73F60();
  objc_msgSend(v34, sel_removeObjectForKey_, v35);

  if (qword_1EA32B620 != -1) {
    swift_once();
  }
  id v25 = (void *)sub_1C2B73F60();
  objc_msgSend(v34, sel_removeObjectForKey_, v25);
LABEL_28:
}

void *sub_1C2B5F4DC()
{
  uint64_t v1 = v0;
  if (qword_1EBF11340 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1C2B73A90();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBF11348);
  unint64_t v3 = sub_1C2B73A80();
  os_log_type_t v4 = sub_1C2B744E0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v58 = v6;
    *(_DWORD *)uint64_t v5 = 136315138;
    uint64_t v7 = sub_1C2B74CD0();
    sub_1C2AEEE6C(v7, v8, &v58);
    sub_1C2B74650();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2ADB000, v3, v4, "[%s] Checking for stale unavailable schedule medication identifiers", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C8767A10](v6, -1, -1);
    MEMORY[0x1C8767A10](v5, -1, -1);
  }

  unint64_t v9 = *(void **)(v1 + 24);
  if (qword_1EA32B620 != -1) {
    swift_once();
  }
  uint64_t v10 = (void *)sub_1C2B73F60();
  id v11 = objc_msgSend(v9, sel_arrayForKey_, v10);

  if (v11)
  {
    uint64_t v12 = sub_1C2B741D0();

    uint64_t v13 = sub_1C2B5E8CC(v12);
    swift_bridgeObjectRelease();
    if (v13)
    {
      if (*(void *)(v13 + 16))
      {
        uint64_t v14 = sub_1C2B39F38(v13);
        swift_bridgeObjectRelease();
        unint64_t v15 = swift_bridgeObjectRetain();
        uint64_t v16 = sub_1C2B5EA14(v15);
        swift_bridgeObjectRelease();
        uint64_t v17 = sub_1C2B39F38(v16);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        uint64_t v18 = sub_1C2B60720(v17, v14);
        swift_retain();
        uint64_t v19 = sub_1C2B61524(v14, v18);
        swift_release();
        uint64_t v20 = sub_1C2B1D8B0(v19);
        swift_release();
        swift_retain();
        uint64_t v21 = sub_1C2B61524(v17, v18);
        swift_release();
        sub_1C2B1D8B0(v21);
        swift_release();
        uint64_t v57 = sub_1C2B1D8B0(v18);
        swift_release();
        swift_retain();
        uint64_t v22 = sub_1C2B73A80();
        os_log_type_t v23 = sub_1C2B744E0();
        uint64_t v56 = v9;
        if (os_log_type_enabled(v22, v23))
        {
          uint64_t v24 = swift_slowAlloc();
          uint64_t v25 = swift_slowAlloc();
          uint64_t v58 = v25;
          *(_DWORD *)uint64_t v24 = 136315394;
          uint64_t v26 = sub_1C2B74CD0();
          sub_1C2AEEE6C(v26, v27, &v58);
          sub_1C2B74650();
          swift_bridgeObjectRelease();
          *(_WORD *)(v24 + 12) = 2080;
          sub_1C2AFB70C(0, (unint64_t *)&qword_1EBF10FB0, MEMORY[0x1E4FBB320]);
          sub_1C2AE04F8();
          uint64_t v28 = sub_1C2B73F40();
          sub_1C2AEEE6C(v28, v29, &v58);
          sub_1C2B74650();
          swift_release_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1C2ADB000, v22, v23, "[%s] New schedule medication identifiers (not previously seen): %s", (uint8_t *)v24, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1C8767A10](v25, -1, -1);
          MEMORY[0x1C8767A10](v24, -1, -1);
        }
        else
        {

          swift_release_n();
        }
        swift_retain_n();
        uint64_t v36 = sub_1C2B73A80();
        os_log_type_t v37 = sub_1C2B744E0();
        if (os_log_type_enabled(v36, v37))
        {
          uint64_t v38 = swift_slowAlloc();
          uint64_t v39 = swift_slowAlloc();
          uint64_t v58 = v39;
          *(_DWORD *)uint64_t v38 = 136315394;
          uint64_t v40 = sub_1C2B74CD0();
          sub_1C2AEEE6C(v40, v41, &v58);
          sub_1C2B74650();
          swift_bridgeObjectRelease();
          *(_WORD *)(v38 + 12) = 2080;
          sub_1C2AFB70C(0, (unint64_t *)&qword_1EBF10FB0, MEMORY[0x1E4FBB320]);
          sub_1C2AE04F8();
          uint64_t v42 = sub_1C2B73F40();
          sub_1C2AEEE6C(v42, v43, &v58);
          sub_1C2B74650();
          swift_release_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1C2ADB000, v36, v37, "[%s] Unavailable schedule medication identifiers to be removed: %s", (uint8_t *)v38, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1C8767A10](v39, -1, -1);
          MEMORY[0x1C8767A10](v38, -1, -1);
        }
        else
        {

          swift_release_n();
        }
        swift_retain_n();
        uint64_t v44 = sub_1C2B73A80();
        os_log_type_t v45 = sub_1C2B744E0();
        if (os_log_type_enabled(v44, v45))
        {
          uint64_t v46 = swift_slowAlloc();
          uint64_t v47 = swift_slowAlloc();
          uint64_t v58 = v47;
          *(_DWORD *)uint64_t v46 = 136315394;
          uint64_t v48 = sub_1C2B74CD0();
          sub_1C2AEEE6C(v48, v49, &v58);
          sub_1C2B74650();
          swift_bridgeObjectRelease();
          *(_WORD *)(v46 + 12) = 2080;
          swift_retain();
          uint64_t v50 = MEMORY[0x1C8766620](v57, MEMORY[0x1E4FBB1A0]);
          unint64_t v52 = v51;
          swift_release();
          sub_1C2AEEE6C(v50, v52, &v58);
          sub_1C2B74650();
          swift_release_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1C2ADB000, v44, v45, "[%s] Updating schedule unavailable acknowledged medication identifiers: %s", (uint8_t *)v46, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1C8767A10](v47, -1, -1);
          MEMORY[0x1C8767A10](v46, -1, -1);
        }
        else
        {

          swift_release_n();
        }
        uint64_t v53 = (void *)sub_1C2B741C0();
        swift_release();
        uint64_t v54 = (void *)sub_1C2B73F60();
        objc_msgSend(v56, sel_setValue_forKey_, v53, v54);

        return v20;
      }
      swift_bridgeObjectRelease();
    }
  }
  uint64_t v30 = sub_1C2B73A80();
  os_log_type_t v31 = sub_1C2B744E0();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v32 = (uint8_t *)swift_slowAlloc();
    uint64_t v33 = swift_slowAlloc();
    uint64_t v58 = v33;
    *(_DWORD *)uint64_t v32 = 136315138;
    uint64_t v34 = sub_1C2B74CD0();
    sub_1C2AEEE6C(v34, v35, &v58);
    sub_1C2B74650();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2ADB000, v30, v31, "[%s] No stale unavailable schedule medication identifiers to remove", v32, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C8767A10](v33, -1, -1);
    MEMORY[0x1C8767A10](v32, -1, -1);
  }

  return 0;
}

void static LocalScheduleUnavailableAlertDeterminer.removeAllIdentifiers(userDefaults:)(void *a1)
{
  if (qword_1EBF11340 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1C2B73A90();
  __swift_project_value_buffer(v2, (uint64_t)qword_1EBF11348);
  unint64_t v3 = sub_1C2B73A80();
  os_log_type_t v4 = sub_1C2B744E0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v11 = v6;
    *(_DWORD *)uint64_t v5 = 136315138;
    uint64_t v7 = sub_1C2B74CD0();
    sub_1C2AEEE6C(v7, v8, &v11);
    sub_1C2B74650();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C2ADB000, v3, v4, "[%s] Removing all identifiers from UserDefaults", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C8767A10](v6, -1, -1);
    MEMORY[0x1C8767A10](v5, -1, -1);
  }

  if (qword_1EA32B620 != -1) {
    swift_once();
  }
  unint64_t v9 = (void *)sub_1C2B73F60();
  objc_msgSend(a1, sel_removeObjectForKey_, v9);

  if (qword_1EA32B618 != -1) {
    swift_once();
  }
  uint64_t v10 = (void *)sub_1C2B73F60();
  objc_msgSend(a1, sel_removeObjectForKey_, v10);
}

uint64_t LocalScheduleUnavailableAlertDeterminer.deinit()
{
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t LocalScheduleUnavailableAlertDeterminer.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1C2B600F8@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for LocalScheduleUnavailableAlertDeterminer();
  uint64_t result = sub_1C2B73BB0();
  *a1 = result;
  return result;
}

uint64_t sub_1C2B60134(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v34 = a1;
  uint64_t v7 = sub_1C2B73740();
  uint64_t v37 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release();
    return MEMORY[0x1E4FBC870];
  }
  if (*(void *)(a4 + 16) == a3) {
    return a4;
  }
  sub_1C2B4BB50();
  uint64_t result = sub_1C2B74800();
  uint64_t v10 = result;
  uint64_t v33 = a2;
  if (a2 < 1) {
    unint64_t v12 = 0;
  }
  else {
    unint64_t v12 = *v34;
  }
  uint64_t v13 = 0;
  uint64_t v14 = result + 56;
  unint64_t v35 = (uint64_t (**)(unint64_t, char *, uint64_t))(v37 + 32);
  uint64_t v36 = v37 + 16;
  while (1)
  {
    if (v12)
    {
      unint64_t v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v16 = v15 | (v13 << 6);
    }
    else
    {
      uint64_t v17 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_40;
      }
      if (v17 >= v33)
      {
LABEL_37:
        swift_release();
        return v10;
      }
      unint64_t v18 = v34[v17];
      ++v13;
      if (!v18)
      {
        uint64_t v13 = v17 + 1;
        if (v17 + 1 >= v33) {
          goto LABEL_37;
        }
        unint64_t v18 = v34[v13];
        if (!v18)
        {
          uint64_t v13 = v17 + 2;
          if (v17 + 2 >= v33) {
            goto LABEL_37;
          }
          unint64_t v18 = v34[v13];
          if (!v18)
          {
            uint64_t v19 = v17 + 3;
            if (v19 >= v33) {
              goto LABEL_37;
            }
            unint64_t v18 = v34[v19];
            if (!v18)
            {
              while (1)
              {
                uint64_t v13 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_37;
                }
                unint64_t v18 = v34[v13];
                ++v19;
                if (v18) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v13 = v19;
          }
        }
      }
LABEL_24:
      unint64_t v12 = (v18 - 1) & v18;
      unint64_t v16 = __clz(__rbit64(v18)) + (v13 << 6);
    }
    uint64_t v20 = a4;
    uint64_t v21 = *(void *)(a4 + 48);
    uint64_t v22 = *(void *)(v37 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v37 + 16))(v9, v21 + v22 * v16, v7);
    sub_1C2B61988();
    uint64_t result = sub_1C2B73F10();
    uint64_t v23 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v26 = __clz(__rbit64((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v29 = v25 == v28;
        if (v25 == v28) {
          unint64_t v25 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v14 + 8 * v25);
      }
      while (v30 == -1);
      unint64_t v26 = __clz(__rbit64(~v30)) + (v25 << 6);
    }
    *(void *)(v14 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    uint64_t result = (*v35)(*(void *)(v10 + 48) + v26 * v22, v9, v7);
    ++*(void *)(v10 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    a4 = v20;
    if (!a3) {
      goto LABEL_37;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1C2B6048C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v8 = MEMORY[0x1E4FBC870];
LABEL_36:
    swift_release();
    return v8;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_1C2AF4338();
  uint64_t result = sub_1C2B74800();
  uint64_t v8 = result;
  uint64_t v30 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    uint64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_39;
    }
    if (v14 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      uint64_t v10 = v14 + 1;
      if (v14 + 1 >= v30) {
        goto LABEL_36;
      }
      unint64_t v15 = a1[v10];
      if (!v15)
      {
        uint64_t v10 = v14 + 2;
        if (v14 + 2 >= v30) {
          goto LABEL_36;
        }
        unint64_t v15 = a1[v10];
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    uint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v13);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    sub_1C2B74C20();
    swift_bridgeObjectRetain();
    sub_1C2B74070();
    uint64_t result = sub_1C2B74C60();
    uint64_t v20 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(void *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    unint64_t v28 = (void *)(*(void *)(v8 + 48) + 16 * v23);
    *unint64_t v28 = v18;
    v28[1] = v19;
    ++*(void *)(v8 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v16 = v14 + 3;
  if (v16 >= v30) {
    goto LABEL_36;
  }
  unint64_t v15 = a1[v16];
  if (v15)
  {
    uint64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v10];
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1C2B60720(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3 = isStackAllocationSafe;
  v10[1] = *MEMORY[0x1E4F143B8];
  char v4 = *(unsigned char *)(a2 + 32);
  unint64_t v5 = (unint64_t)((1 << v4) + 63) >> 6;
  size_t v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    uint64_t v7 = sub_1C2B608A8((uint64_t)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v5, a2, v3);
    swift_release();
  }
  else
  {
    uint64_t v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    uint64_t v7 = sub_1C2B608A8((uint64_t)v8, v5, a2, v3);
    swift_release();
    MEMORY[0x1C8767A10](v8, -1, -1);
  }
  return v7;
}

uint64_t sub_1C2B608A8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  uint64_t v57 = (unint64_t *)result;
  if (*(void *)(a4 + 16) < *(void *)(a3 + 16))
  {
    int64_t v6 = 0;
    uint64_t v58 = a4 + 56;
    uint64_t v7 = 1 << *(unsigned char *)(a4 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(a4 + 56);
    int64_t v59 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v61 = 0;
    uint64_t v10 = a3 + 56;
    while (1)
    {
      while (1)
      {
        if (v9)
        {
          unint64_t v11 = __clz(__rbit64(v9));
          v9 &= v9 - 1;
          int64_t v62 = v6;
          unint64_t v12 = v11 | (v6 << 6);
        }
        else
        {
          int64_t v13 = v6 + 1;
          if (__OFADD__(v6, 1))
          {
            __break(1u);
            goto LABEL_81;
          }
          if (v13 >= v59) {
            goto LABEL_79;
          }
          unint64_t v14 = *(void *)(v58 + 8 * v13);
          int64_t v15 = v6 + 1;
          if (!v14)
          {
            int64_t v15 = v6 + 2;
            if (v6 + 2 >= v59) {
              goto LABEL_79;
            }
            unint64_t v14 = *(void *)(v58 + 8 * v15);
            if (!v14)
            {
              int64_t v15 = v6 + 3;
              if (v6 + 3 >= v59) {
                goto LABEL_79;
              }
              unint64_t v14 = *(void *)(v58 + 8 * v15);
              if (!v14)
              {
                uint64_t v16 = v6 + 4;
                if (v6 + 4 >= v59) {
                  goto LABEL_79;
                }
                unint64_t v14 = *(void *)(v58 + 8 * v16);
                if (!v14)
                {
                  while (1)
                  {
                    int64_t v15 = v16 + 1;
                    if (__OFADD__(v16, 1)) {
                      goto LABEL_83;
                    }
                    if (v15 >= v59) {
                      goto LABEL_79;
                    }
                    unint64_t v14 = *(void *)(v58 + 8 * v15);
                    ++v16;
                    if (v14) {
                      goto LABEL_22;
                    }
                  }
                }
                int64_t v15 = v6 + 4;
              }
            }
          }
LABEL_22:
          unint64_t v9 = (v14 - 1) & v14;
          int64_t v62 = v15;
          unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
        }
        uint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v12);
        uint64_t v19 = *v17;
        uint64_t v18 = v17[1];
        sub_1C2B74C20();
        swift_bridgeObjectRetain();
        sub_1C2B74070();
        uint64_t v20 = sub_1C2B74C60();
        uint64_t v21 = -1 << *(unsigned char *)(v5 + 32);
        unint64_t v22 = v20 & ~v21;
        unint64_t v23 = v22 >> 6;
        uint64_t v24 = 1 << v22;
        if (((1 << v22) & *(void *)(v10 + 8 * (v22 >> 6))) != 0) {
          break;
        }
LABEL_6:
        uint64_t result = swift_bridgeObjectRelease();
        int64_t v6 = v62;
        uint64_t v5 = a3;
        uint64_t v4 = a4;
      }
      uint64_t v25 = *(void *)(a3 + 48);
      BOOL v26 = (void *)(v25 + 16 * v22);
      BOOL v27 = *v26 == v19 && v26[1] == v18;
      if (!v27 && (sub_1C2B74B50() & 1) == 0)
      {
        uint64_t v28 = ~v21;
        for (unint64_t i = v22 + 1; ; unint64_t i = v30 + 1)
        {
          unint64_t v30 = i & v28;
          if (((*(void *)(v10 + (((i & v28) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v28)) & 1) == 0) {
            break;
          }
          os_log_type_t v31 = (void *)(v25 + 16 * v30);
          BOOL v32 = *v31 == v19 && v31[1] == v18;
          if (v32 || (sub_1C2B74B50() & 1) != 0)
          {
            uint64_t result = swift_bridgeObjectRelease();
            unint64_t v23 = v30 >> 6;
            uint64_t v24 = 1 << v30;
            goto LABEL_38;
          }
        }
        goto LABEL_6;
      }
      uint64_t result = swift_bridgeObjectRelease();
LABEL_38:
      int64_t v6 = v62;
      uint64_t v5 = a3;
      v57[v23] |= v24;
      BOOL v33 = __OFADD__(v61++, 1);
      uint64_t v4 = a4;
      if (v33) {
        goto LABEL_82;
      }
    }
  }
  int64_t v34 = 0;
  uint64_t v60 = a3 + 56;
  uint64_t v61 = 0;
  uint64_t v35 = 1 << *(unsigned char *)(a3 + 32);
  if (v35 < 64) {
    uint64_t v36 = ~(-1 << v35);
  }
  else {
    uint64_t v36 = -1;
  }
  unint64_t v37 = v36 & *(void *)(a3 + 56);
  int64_t v63 = (unint64_t)(v35 + 63) >> 6;
  uint64_t v38 = a4 + 56;
  while (1)
  {
    if (v37)
    {
      unint64_t v39 = __clz(__rbit64(v37));
      v37 &= v37 - 1;
      unint64_t v40 = v39 | (v34 << 6);
      goto LABEL_63;
    }
    int64_t v41 = v34 + 1;
    if (__OFADD__(v34, 1))
    {
LABEL_81:
      __break(1u);
LABEL_82:
      __break(1u);
LABEL_83:
      __break(1u);
      goto LABEL_84;
    }
    if (v41 >= v63) {
      goto LABEL_79;
    }
    unint64_t v42 = *(void *)(v60 + 8 * v41);
    ++v34;
    if (!v42)
    {
      int64_t v34 = v41 + 1;
      if (v41 + 1 >= v63) {
        goto LABEL_79;
      }
      unint64_t v42 = *(void *)(v60 + 8 * v34);
      if (!v42)
      {
        int64_t v34 = v41 + 2;
        if (v41 + 2 >= v63) {
          goto LABEL_79;
        }
        unint64_t v42 = *(void *)(v60 + 8 * v34);
        if (!v42) {
          break;
        }
      }
    }
LABEL_62:
    unint64_t v37 = (v42 - 1) & v42;
    unint64_t v40 = __clz(__rbit64(v42)) + (v34 << 6);
LABEL_63:
    uint64_t v44 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v40);
    uint64_t v46 = *v44;
    uint64_t v45 = v44[1];
    sub_1C2B74C20();
    swift_bridgeObjectRetain();
    sub_1C2B74070();
    uint64_t v47 = sub_1C2B74C60();
    uint64_t v48 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v49 = v47 & ~v48;
    if (((*(void *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v49) & 1) == 0) {
      goto LABEL_46;
    }
    uint64_t v50 = *(void *)(a4 + 48);
    unint64_t v51 = (void *)(v50 + 16 * v49);
    BOOL v52 = *v51 == v46 && v51[1] == v45;
    if (v52 || (sub_1C2B74B50() & 1) != 0)
    {
LABEL_76:
      uint64_t result = swift_bridgeObjectRelease();
      *(unint64_t *)((char *)v57 + ((v40 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v40;
      BOOL v33 = __OFADD__(v61++, 1);
      uint64_t v5 = a3;
      uint64_t v4 = a4;
      if (v33)
      {
        __break(1u);
LABEL_79:
        swift_retain();
        return sub_1C2B6048C(v57, a2, v61, v5);
      }
    }
    else
    {
      uint64_t v53 = ~v48;
      while (1)
      {
        unint64_t v49 = (v49 + 1) & v53;
        if (((*(void *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v49) & 1) == 0) {
          break;
        }
        uint64_t v54 = (void *)(v50 + 16 * v49);
        BOOL v55 = *v54 == v46 && v54[1] == v45;
        if (v55 || (sub_1C2B74B50() & 1) != 0) {
          goto LABEL_76;
        }
      }
LABEL_46:
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v5 = a3;
      uint64_t v4 = a4;
    }
  }
  int64_t v43 = v41 + 3;
  if (v43 >= v63) {
    goto LABEL_79;
  }
  unint64_t v42 = *(void *)(v60 + 8 * v43);
  if (v42)
  {
    int64_t v34 = v43;
    goto LABEL_62;
  }
  while (1)
  {
    int64_t v34 = v43 + 1;
    if (__OFADD__(v43, 1)) {
      break;
    }
    if (v34 >= v63) {
      goto LABEL_79;
    }
    unint64_t v42 = *(void *)(v60 + 8 * v34);
    ++v43;
    if (v42) {
      goto LABEL_62;
    }
  }
LABEL_84:
  __break(1u);
  return result;
}

uint64_t sub_1C2B60DE8(unint64_t a1, unint64_t *a2)
{
  if (qword_1EA32B618 != -1) {
LABEL_49:
  }
    swift_once();
  uint64_t v4 = (void *)sub_1C2B73F60();
  LODWORD(v5) = objc_msgSend(a2, sel_BOOLForKey_, v4);

  unint64_t v6 = a1;
  if (!(a1 >> 62))
  {
    a1 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    unint64_t v31 = a1;
    if (a1) {
      goto LABEL_4;
    }
LABEL_51:
    BOOL v27 = (void *)sub_1C2B73F60();
    unsigned int v28 = objc_msgSend(a2, sel_hk_keyExists_, v27);

    int v26 = 0;
    if (v28) {
      int v24 = v5;
    }
    else {
      int v24 = 2;
    }
    return v26 | (v24 << 8);
  }
  swift_bridgeObjectRetain();
  unint64_t v6 = a1;
  a1 = sub_1C2B749C0();
  swift_bridgeObjectRelease();
  unint64_t v31 = a1;
  if (!a1) {
    goto LABEL_51;
  }
LABEL_4:
  if (qword_1EA32B620 != -1) {
    goto LABEL_56;
  }
  while (1)
  {
    uint64_t v7 = (void *)sub_1C2B73F60();
    a2 = (unint64_t *)objc_msgSend(a2, sel_arrayForKey_, v7);

    unint64_t v8 = v31;
    if (!a2) {
      break;
    }
    uint64_t v9 = sub_1C2B741D0();

    uint64_t v10 = (void *)sub_1C2B5E8CC(v9);
    swift_bridgeObjectRelease();
    if (!v10) {
      break;
    }
    int v30 = v5;
    uint64_t v11 = v10[2];
    unint64_t v34 = v6 & 0xC000000000000001;
    unint64_t v35 = MEMORY[0x1E4FBC860];
    unint64_t v32 = v6 + 32;
    uint64_t v33 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    unint64_t v12 = 0;
    while (1)
    {
      if (v34)
      {
        int64_t v13 = (unint64_t *)MEMORY[0x1C8766C90](v12, v6);
      }
      else
      {
        if (v12 >= *(void *)(v33 + 16)) {
          goto LABEL_48;
        }
        int64_t v13 = (unint64_t *)*(id *)(v32 + 8 * v12);
      }
      a2 = v13;
      if (__OFADD__(v12++, 1))
      {
        __break(1u);
LABEL_48:
        __break(1u);
        goto LABEL_49;
      }
      id v15 = objc_msgSend(v13, sel_semanticIdentifier);
      id v16 = objc_msgSend(v15, sel_stringValue);

      uint64_t v17 = sub_1C2B73FA0();
      uint64_t v5 = v18;

      if (!v11) {
        goto LABEL_22;
      }
      BOOL v19 = v10[4] == v17 && v10[5] == v5;
      if (!v19 && (sub_1C2B74B50() & 1) == 0)
      {
        if (v11 == 1) {
          goto LABEL_22;
        }
        if ((v10[6] != v17 || v10[7] != v5) && (sub_1C2B74B50() & 1) == 0) {
          break;
        }
      }

      swift_bridgeObjectRelease();
LABEL_9:
      if (v12 == v8)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v35 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v25 = sub_1C2B749C0();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v25 = *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        swift_bridgeObjectRelease();
        if (v25) {
          int v24 = 0;
        }
        else {
          int v24 = v30;
        }
        goto LABEL_46;
      }
    }
    if (v11 == 2)
    {
LABEL_22:
      swift_bridgeObjectRelease();
      uint64_t v20 = a2;
      MEMORY[0x1C87665F0]();
      if (*(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1C2B74210();
      }
      sub_1C2B74250();
      a2 = &v35;
      sub_1C2B741F0();

      goto LABEL_9;
    }
    uint64_t v21 = v10 + 9;
    a1 = 2;
    while (1)
    {
      unint64_t v22 = v6;
      unint64_t v6 = a1 + 1;
      if (__OFADD__(a1, 1)) {
        break;
      }
      BOOL v23 = *(v21 - 1) == v17 && *v21 == v5;
      if (v23 || (sub_1C2B74B50() & 1) != 0)
      {

        swift_bridgeObjectRelease();
        unint64_t v6 = v22;
        unint64_t v8 = v31;
        goto LABEL_9;
      }
      v21 += 2;
      ++a1;
      BOOL v19 = v6 == v11;
      unint64_t v6 = v22;
      unint64_t v8 = v31;
      if (v19) {
        goto LABEL_22;
      }
    }
    __break(1u);
LABEL_56:
    swift_once();
  }
  int v24 = 0;
LABEL_46:
  int v26 = v24 ^ 1;
  return v26 | (v24 << 8);
}

uint64_t sub_1C2B61258(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  unint64_t v32 = (unint64_t *)result;
  uint64_t v33 = 0;
  int64_t v5 = 0;
  uint64_t v8 = *(void *)(a3 + 56);
  uint64_t v6 = a3 + 56;
  uint64_t v7 = v8;
  uint64_t v9 = 1 << *(unsigned char *)(v6 - 24);
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & v7;
  uint64_t v35 = v6;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = a4 + 56;
  while (1)
  {
    while (v11)
    {
      unint64_t v12 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v13 = v12 | (v5 << 6);
      if (*(void *)(v4 + 16)) {
        goto LABEL_23;
      }
    }
    int64_t v14 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    if (v14 >= v36) {
      goto LABEL_39;
    }
    unint64_t v15 = *(void *)(v35 + 8 * v14);
    ++v5;
    if (!v15)
    {
      int64_t v5 = v14 + 1;
      if (v14 + 1 >= v36) {
        goto LABEL_39;
      }
      unint64_t v15 = *(void *)(v35 + 8 * v5);
      if (!v15)
      {
        int64_t v5 = v14 + 2;
        if (v14 + 2 >= v36) {
          goto LABEL_39;
        }
        unint64_t v15 = *(void *)(v35 + 8 * v5);
        if (!v15) {
          break;
        }
      }
    }
LABEL_22:
    unint64_t v11 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v5 << 6);
    if (*(void *)(v4 + 16))
    {
LABEL_23:
      uint64_t v17 = (uint64_t *)(*(void *)(a3 + 48) + 16 * v13);
      uint64_t v19 = *v17;
      uint64_t v18 = v17[1];
      sub_1C2B74C20();
      swift_bridgeObjectRetain();
      sub_1C2B74070();
      uint64_t v20 = sub_1C2B74C60();
      uint64_t v21 = v4;
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = v20 & ~v22;
      if (((*(void *)(v37 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0) {
        goto LABEL_5;
      }
      uint64_t v24 = *(void *)(v21 + 48);
      uint64_t v25 = (void *)(v24 + 16 * v23);
      BOOL v26 = *v25 == v19 && v25[1] == v18;
      if (v26 || (sub_1C2B74B50() & 1) != 0)
      {
LABEL_36:
        uint64_t result = swift_bridgeObjectRelease();
        *(unint64_t *)((char *)v32 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
        BOOL v30 = __OFADD__(v33++, 1);
        uint64_t v4 = v21;
        if (v30)
        {
          __break(1u);
LABEL_39:
          swift_retain();
          return sub_1C2B6048C(v32, a2, v33, a3);
        }
      }
      else
      {
        uint64_t v27 = ~v22;
        while (1)
        {
          unint64_t v23 = (v23 + 1) & v27;
          if (((*(void *)(v37 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0) {
            break;
          }
          unsigned int v28 = (void *)(v24 + 16 * v23);
          BOOL v29 = *v28 == v19 && v28[1] == v18;
          if (v29 || (sub_1C2B74B50() & 1) != 0) {
            goto LABEL_36;
          }
        }
LABEL_5:
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v4 = v21;
      }
    }
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v36) {
    goto LABEL_39;
  }
  unint64_t v15 = *(void *)(v35 + 8 * v16);
  if (v15)
  {
    int64_t v5 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v5 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v5 >= v36) {
      goto LABEL_39;
    }
    unint64_t v15 = *(void *)(v35 + 8 * v5);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1C2B61524(uint64_t a1, uint64_t a2)
{
  v13[1] = *MEMORY[0x1E4F143B8];
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  unint64_t v7 = (unint64_t)((1 << v5) + 63) >> 6;
  size_t v8 = 8 * v7;
  uint64_t isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C2B61258((uint64_t)v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v7, a1, a2);
    swift_release();
    swift_bridgeObjectRelease();
    if (v2) {
      swift_willThrow();
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    unint64_t v11 = (void *)swift_slowAlloc();
    bzero(v11, v8);
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C2B61258((uint64_t)v11, v7, a1, a2);
    swift_release();
    swift_bridgeObjectRelease();
    MEMORY[0x1C8767A10](v11, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v10;
}

uint64_t sub_1C2B616F0@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 32);
  return result;
}

uint64_t sub_1C2B61738(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 32) = v2;
  return result;
}

uint64_t sub_1C2B6177C@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 33);
  return result;
}

uint64_t sub_1C2B617C4(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 33) = v2;
  return result;
}

uint64_t type metadata accessor for LocalScheduleUnavailableAlertDeterminer()
{
  return self;
}

uint64_t method lookup function for LocalScheduleUnavailableAlertDeterminer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for LocalScheduleUnavailableAlertDeterminer);
}

uint64_t dispatch thunk of LocalScheduleUnavailableAlertDeterminer.shouldShowNewScheduleUnavailableView.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of LocalScheduleUnavailableAlertDeterminer.shouldShowNewScheduleUnavailableView.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of LocalScheduleUnavailableAlertDeterminer.shouldShowNewScheduleUnavailableView.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of LocalScheduleUnavailableAlertDeterminer.hasShownFirstAppearance.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of LocalScheduleUnavailableAlertDeterminer.__allocating_init(medications:userDefaults:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of LocalScheduleUnavailableAlertDeterminer.saveIdentifiers()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of LocalScheduleUnavailableAlertDeterminer.removeStaleIdentifiers()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

void sub_1C2B61930()
{
  if (!qword_1EA32BA80)
  {
    sub_1C2B2F578();
    unint64_t v0 = sub_1C2B74280();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA32BA80);
    }
  }
}

unint64_t sub_1C2B61988()
{
  unint64_t result = qword_1EA32BC78;
  if (!qword_1EA32BC78)
  {
    sub_1C2B73740();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA32BC78);
  }
  return result;
}

unint64_t sub_1C2B619E0()
{
  return 0xD000000000000020;
}

uint64_t MedicationListOnboardingMetric.__allocating_init(step:action:hasSuggestionsFromHealthRecords:context:itemRank:timeSinceUserLastScannedAMed:didLastScanFallBackToOCR:itemLevelRankOfMatchInOCRList:algorithmType:dataSource:hasScheduledEndDate:)(uint64_t a1, uint64_t a2, char a3, char a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, char a9, char a10, uint64_t a11, char a12, uint64_t a13, char a14, uint64_t a15, char a16)
{
  char v16 = a3 & 1;
  char v17 = a7 & 1;
  uint64_t v18 = swift_allocObject();
  MedicationListOnboardingMetric.init(step:action:hasSuggestionsFromHealthRecords:context:itemRank:timeSinceUserLastScannedAMed:didLastScanFallBackToOCR:itemLevelRankOfMatchInOCRList:algorithmType:dataSource:hasScheduledEndDate:)(a1, a2, v16, a4, a5, a6, v17, a8, a9 & 1, a10, a11, a12 & 1, a13, a14 & 1, a15, a16);
  return v18;
}

uint64_t MedicationListOnboardingMetric.init(step:action:hasSuggestionsFromHealthRecords:context:itemRank:timeSinceUserLastScannedAMed:didLastScanFallBackToOCR:itemLevelRankOfMatchInOCRList:algorithmType:dataSource:hasScheduledEndDate:)(uint64_t a1, uint64_t a2, char a3, char a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, char a9, char a10, uint64_t a11, char a12, uint64_t a13, char a14, uint64_t a15, char a16)
{
  uint64_t v17 = v16;
  *(void *)(v17 + 104) = 0;
  *(void *)(v17 + 48) = 0;
  *(void *)(v17 + 56) = 0;
  *(unsigned char *)(v17 + 112) = 1;
  *(void *)(v17 + 120) = 0;
  *(unsigned char *)(v17 + 128) = 1;
  *(void *)(v17 + 144) = 0;
  *(void *)(v17 + 152) = 0;
  *(unsigned char *)(v17 + 160) = 2;
  *(void *)(v17 + 168) = 0;
  *(unsigned char *)(v17 + 176) = 1;
  *(void *)(v17 + 184) = 0;
  *(unsigned char *)(v17 + 192) = 1;
  *(void *)(v17 + 200) = 0;
  *(_WORD *)(v17 + 208) = 513;
  *(void *)(v17 + 224) = 0;
  *(void *)(v17 + 232) = 0;
  *(void *)(v17 + 216) = 0;
  *(unsigned char *)(v17 + 240) = 1;
  swift_beginAccess();
  id v24 = (id)HKStringFromMedicationListOnboardingProvenanceType();
  uint64_t v25 = sub_1C2B73FA0();
  uint64_t v27 = v26;

  *(void *)(v17 + 16) = v25;
  *(void *)(v17 + 24) = v27;
  id v28 = (id)HKStringFromMedicationListOnboardingStepType();
  uint64_t v29 = sub_1C2B73FA0();
  uint64_t v31 = v30;

  *(void *)(v17 + 32) = v29;
  *(void *)(v17 + 40) = v31;
  char v60 = a3;
  if ((a3 & 1) == 0)
  {
    id v32 = (id)HKStringFromMedicationListOnboardingActionType();
    uint64_t v33 = sub_1C2B73FA0();
    uint64_t v35 = v34;

    *(void *)(v17 + 48) = v33;
    *(void *)(v17 + 56) = v35;
    swift_bridgeObjectRelease();
  }
  *(void *)(v17 + 168) = a6;
  *(unsigned char *)(v17 + 176) = a7 & 1;
  swift_beginAccess();
  *(unsigned char *)(v17 + 64) = *(unsigned char *)(a5 + 24);
  swift_beginAccess();
  uint64_t v36 = 0;
  uint64_t v37 = 0;
  if ((*(unsigned char *)(a5 + 48) & 1) == 0)
  {
    id v38 = (id)HKStringFromMedicationListOnboardingDetailsEntryType();
    uint64_t v36 = sub_1C2B73FA0();
    uint64_t v37 = v39;
  }
  uint64_t v40 = a15;
  *(void *)(v17 + 144) = v36;
  *(void *)(v17 + 152) = v37;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v17 + 160) = a4;
  swift_beginAccess();
  uint64_t v41 = *(void *)(a5 + 32);
  uint64_t v61 = a2;
  if (*(void *)(v41 + 16) && (unint64_t v42 = sub_1C2B00480(a1), (v43 & 1) != 0)) {
    char v44 = *(unsigned char *)(*(void *)(v41 + 56) + v42);
  }
  else {
    char v44 = 1;
  }
  char v45 = a16;
  uint64_t v46 = a13;
  uint64_t v47 = a11;
  *(unsigned char *)(v17 + 66) = v44;
  swift_beginAccess();
  char v48 = *(unsigned char *)(a5 + 64);
  *(void *)(v17 + 232) = *(void *)(a5 + 56);
  *(unsigned char *)(v17 + 240) = v48;
  if ((a14 & 1) == 0)
  {
    id v49 = (id)HKStringFromHKMedicationListOnboardingAlgorithmType();
    uint64_t v50 = sub_1C2B73FA0();
    uint64_t v52 = v51;

    *(void *)(v17 + 216) = v50;
    *(void *)(v17 + 224) = v52;
    char v45 = a16;
    uint64_t v47 = a11;
    uint64_t v40 = a15;
    uint64_t v46 = a13;
    swift_bridgeObjectRelease();
  }
  id v53 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F66AD8]), sel_initWithDataSource_, v40);
  *(void *)(v17 + 248) = v53;
  id v54 = v53;
  unsigned __int8 v55 = objc_msgSend(v54, sel_isOntologySupportedRegion);

  swift_unknownObjectRelease();
  *(unsigned char *)(v17 + 65) = v55;
  *(void *)(v17 + 184) = a8;
  *(unsigned char *)(v17 + 192) = a9 & 1;
  *(unsigned char *)(v17 + 209) = a10;
  *(void *)(v17 + 200) = v47;
  *(unsigned char *)(v17 + 208) = a12 & 1;
  *(unsigned char *)(v17 + 96) = v60 & 1;
  *(void *)(v17 + 120) = v46;
  *(unsigned char *)(v17 + 128) = a14 & 1;
  *(void *)(v17 + 80) = a1;
  *(void *)(v17 + 88) = v61;
  char v56 = *(unsigned char *)(a5 + 48);
  *(void *)(v17 + 104) = *(void *)(a5 + 40);
  *(unsigned char *)(v17 + 112) = v56;
  *(void *)(v17 + 72) = *(void *)(a5 + 16);
  *(void *)(v17 + 136) = a5;
  *(unsigned char *)(v17 + 241) = v45 & 1;
  return v17;
}

id sub_1C2B61E64()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C2B73710();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  char v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(*(id *)(v1 + 248), sel_biologicalSex);
  if (v6)
  {
    unint64_t v7 = v6;
    sub_1C2B73FA0();
  }
  size_t v8 = *(void **)(v1 + 248);
  uint64_t v9 = self;
  id v10 = v8;
  id v11 = objc_msgSend(v9, sel_now);
  sub_1C2B736E0();

  unint64_t v12 = (void *)sub_1C2B736C0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  id v13 = objc_msgSend(v10, sel_bucketedUserAgeForCurrentDate_, v12);

  id v14 = objc_msgSend(*(id *)(v1 + 248), sel_activePairedWatchProductType);
  if (v14)
  {
    unint64_t v15 = v14;
    sub_1C2B73FA0();
  }
  sub_1C2B62718();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C2B78FA0;
  *(void *)(inited + 32) = 0x6E616E65766F7270;
  *(void *)(inited + 40) = 0xEA00000000006563;
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_1C2B73F60();
  swift_bridgeObjectRelease();
  *(void *)(inited + 48) = v17;
  *(void *)(inited + 56) = 1885697139;
  *(void *)(inited + 64) = 0xE400000000000000;
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_1C2B73F60();
  swift_bridgeObjectRelease();
  *(void *)(inited + 72) = v18;
  *(void *)(inited + 80) = 0xD000000000000010;
  *(void *)(inited + 88) = 0x80000001C2B7BCD0;
  *(void *)(inited + 96) = sub_1C2B74290();
  *(void *)(inited + 104) = 0xD000000000000019;
  *(void *)(inited + 112) = 0x80000001C2B7BE20;
  *(void *)(inited + 120) = sub_1C2B74290();
  strcpy((char *)(inited + 128), "biologicalSex");
  *(_WORD *)(inited + 142) = -4864;
  uint64_t v19 = sub_1C2B73F60();
  swift_bridgeObjectRelease();
  *(void *)(inited + 144) = v19;
  *(void *)(inited + 152) = 6645601;
  *(void *)(inited + 160) = 0xE300000000000000;
  *(void *)(inited + 168) = v13;
  *(void *)(inited + 176) = 0xD000000000000016;
  *(void *)(inited + 184) = 0x80000001C2B7D2B0;
  id v20 = v13;
  uint64_t v21 = sub_1C2B73F60();
  swift_bridgeObjectRelease();
  *(void *)(inited + 192) = v21;
  *(void *)(inited + 200) = 0xD000000000000016;
  *(void *)(inited + 208) = 0x80000001C2B7BDA0;
  *(void *)(inited + 216) = sub_1C2B74290();
  *(void *)(inited + 224) = 0xD000000000000013;
  *(void *)(inited + 232) = 0x80000001C2B7BDD0;
  *(void *)(inited + 240) = sub_1C2B74290();
  unint64_t v22 = sub_1C2B25BD0(inited);
  if (*(void *)(v1 + 152))
  {
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_1C2B73F60();
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v43 = v22;
    sub_1C2B015F4(v23, 0xD000000000000015, 0x80000001C2B7BCF0, isUniquelyReferenced_nonNull_native);
    unint64_t v22 = v43;
    swift_bridgeObjectRelease();
  }
  if (*(unsigned char *)(v1 + 160) != 2)
  {
    uint64_t v25 = sub_1C2B74290();
    char v26 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v43 = v22;
    sub_1C2B015F4(v25, 0xD00000000000001FLL, 0x80000001C2B7BD10, v26);
    unint64_t v22 = v43;
    swift_bridgeObjectRelease();
  }
  if (*(void *)(v1 + 56))
  {
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_1C2B73F60();
    swift_bridgeObjectRelease();
    char v28 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v43 = v22;
    sub_1C2B015F4(v27, 0x6E6F69746361, 0xE600000000000000, v28);
    unint64_t v22 = v43;
    swift_bridgeObjectRelease();
  }
  if ((*(unsigned char *)(v1 + 176) & 1) == 0)
  {
    uint64_t v29 = sub_1C2B743F0();
    char v30 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v43 = v22;
    sub_1C2B015F4(v29, 0xD000000000000013, 0x80000001C2B7BE40, v30);
    unint64_t v22 = v43;
    swift_bridgeObjectRelease();
  }
  if ((*(unsigned char *)(v1 + 192) & 1) == 0)
  {
    uint64_t v31 = sub_1C2B743F0();
    char v32 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v43 = v22;
    sub_1C2B015F4(v31, 0xD00000000000001CLL, 0x80000001C2B7BD50, v32);
    unint64_t v22 = v43;
    swift_bridgeObjectRelease();
  }
  if (*(unsigned char *)(v1 + 209) == 2)
  {
    if (*(unsigned char *)(v1 + 208)) {
      goto LABEL_17;
    }
  }
  else
  {
    uint64_t v35 = sub_1C2B74290();
    char v36 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v43 = v22;
    sub_1C2B015F4(v35, 0xD000000000000018, 0x80000001C2B7BD70, v36);
    unint64_t v22 = v43;
    swift_bridgeObjectRelease();
    if (*(unsigned char *)(v1 + 208))
    {
LABEL_17:
      if (!*(void *)(v1 + 224)) {
        goto LABEL_19;
      }
      goto LABEL_18;
    }
  }
  uint64_t v37 = sub_1C2B743F0();
  char v38 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v43 = v22;
  sub_1C2B015F4(v37, 0xD00000000000001DLL, 0x80000001C2B7BE60, v38);
  unint64_t v22 = v43;
  swift_bridgeObjectRelease();
  if (*(void *)(v1 + 224))
  {
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_1C2B73F60();
    swift_bridgeObjectRelease();
    char v34 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v43 = v22;
    sub_1C2B015F4(v33, 0x687469726F676C61, 0xED0000657079546DLL, v34);
    unint64_t v22 = v43;
    swift_bridgeObjectRelease();
  }
LABEL_19:
  if (*(unsigned char *)(v1 + 240) == 1)
  {

    return (id)v22;
  }
  id result = (id)HKStringFromMedicationScheduleType();
  if (result)
  {
    uint64_t v40 = (uint64_t)result;
    char v41 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v43 = v22;
    sub_1C2B015F4(v40, 0x656C756465686373, 0xEC00000065707954, v41);
    unint64_t v22 = v43;

    swift_bridgeObjectRelease();
    return (id)v22;
  }
  __break(1u);
  return result;
}

unint64_t sub_1C2B6257C()
{
  sub_1C2B74820();
  uint64_t v0 = swift_bridgeObjectRelease();
  sub_1C2B6257C(v0);
  sub_1C2B740A0();
  swift_bridgeObjectRelease();
  sub_1C2B740A0();
  sub_1C2B61E64();
  sub_1C2AF55A8();
  sub_1C2B73F00();
  sub_1C2B740A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0xD000000000000021;
}

uint64_t MedicationListOnboardingMetric.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t MedicationListOnboardingMetric.__deallocating_deinit()
{
  MedicationListOnboardingMetric.deinit();
  return swift_deallocClassInstance();
}

unint64_t sub_1C2B626F4()
{
  return sub_1C2B6257C();
}

void sub_1C2B62718()
{
  if (!qword_1EA32C4D0)
  {
    sub_1C2B62770();
    unint64_t v0 = sub_1C2B74B20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA32C4D0);
    }
  }
}

void sub_1C2B62770()
{
  if (!qword_1EA32C4D8)
  {
    sub_1C2AF55A8();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA32C4D8);
    }
  }
}

uint64_t type metadata accessor for MedicationListOnboardingMetric()
{
  return self;
}

uint64_t method lookup function for MedicationListOnboardingMetric(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationListOnboardingMetric);
}

uint64_t dispatch thunk of static MedicationListOnboardingMetric.eventName.getter()
{
  return (*(uint64_t (**)(void))(v0 + 712))();
}

uint64_t dispatch thunk of MedicationListOnboardingMetric.__allocating_init(step:action:hasSuggestionsFromHealthRecords:context:itemRank:timeSinceUserLastScannedAMed:didLastScanFallBackToOCR:itemLevelRankOfMatchInOCRList:algorithmType:dataSource:hasScheduledEndDate:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, void))(v7 + 720))(a1, a2, a3 & 1, a4, a5, a6, a7 & 1);
}

uint64_t dispatch thunk of MedicationListOnboardingMetric.eventPayload()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 728))();
}

uint64_t dispatch thunk of MedicationListOnboardingMetric.description.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 736))();
}

uint64_t sub_1C2B628F8(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v29 = a5;
  uint64_t v30 = a8;
  uint64_t v10 = v9;
  char v38 = a1;
  uint64_t v39 = a2;
  uint64_t v28 = *(void *)(a5 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v40 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  char v36 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  uint64_t v13 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  unint64_t v15 = (char *)&v26 - v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v33 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v31 = *(void *)(v17 - 8);
  uint64_t v32 = v17;
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v26 - v18;
  uint64_t v34 = v8;
  uint64_t v20 = sub_1C2B74410();
  if (!v20) {
    return sub_1C2B74220();
  }
  uint64_t v21 = v20;
  uint64_t v27 = v15;
  uint64_t v43 = sub_1C2B74940();
  uint64_t v35 = sub_1C2B74950();
  sub_1C2B748F0();
  char v41 = v19;
  uint64_t result = sub_1C2B74400();
  if (v21 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v23 = (void (**)(char *))(v36 + 2);
    ++v36;
    uint64_t v37 = v23;
    id v24 = v27;
    while (1)
    {
      uint64_t v25 = (void (*)(char *, void))sub_1C2B74460();
      (*v37)(v24);
      v25(v42, 0);
      v38(v24, v40);
      if (v10) {
        break;
      }
      uint64_t v10 = 0;
      (*v36)(v24, AssociatedTypeWitness);
      sub_1C2B74930();
      sub_1C2B74440();
      if (!--v21)
      {
        (*(void (**)(char *, uint64_t))(v31 + 8))(v41, v32);
        return v43;
      }
    }
    (*v36)(v24, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v41, v32);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v28 + 32))(v30, v40, v29);
  }
  return result;
}

uint64_t Array<A>.filterIncompatible(with:)()
{
  return sub_1C2B62D24();
}

{
  return sub_1C2B62D24();
}

uint64_t sub_1C2B62D24()
{
  sub_1C2B74280();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_1C2B748C0();
  sub_1C2AE3A18(0, (unint64_t *)&qword_1EA32BC70);
  uint64_t v0 = sub_1C2B74960();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t Array.uniqueSortedValues<A>(using:)(void *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v30 = a1;
  uint64_t v4 = *(void *)(v3 + *MEMORY[0x1E4FBC5F0] + 8);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](a1);
  uint64_t v8 = (char *)&v26 - v7;
  uint64_t v10 = *v9;
  uint64_t v11 = *(void *)(*v9 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x1F4188790](v6);
  uint64_t v14 = (char *)&v26 - v13;
  id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA70]), sel_init);
  uint64_t v16 = swift_bridgeObjectRetain();
  if (MEMORY[0x1C87666B0](v16, v10))
  {
    id v31 = v15;
    uint64_t v32 = v4;
    uint64_t v17 = 0;
    uint64_t v29 = (void (**)(char *, uint64_t *, uint64_t))(v11 + 16);
    uint64_t v27 = v12;
    uint64_t v28 = (void (**)(char *, uint64_t))(v11 + 8);
    uint64_t v18 = (void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v19 = v4;
    while (1)
    {
      char v20 = sub_1C2B74240();
      sub_1C2B74200();
      if (v20)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v11 + 16))(v14, a2+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(void *)(v11 + 72) * v17, v10);
        uint64_t v21 = v17 + 1;
        if (__OFADD__(v17, 1)) {
          goto LABEL_10;
        }
      }
      else
      {
        uint64_t result = sub_1C2B74840();
        if (v27 != 8)
        {
          __break(1u);
          return result;
        }
        uint64_t v33 = result;
        (*v29)(v14, &v33, v10);
        swift_unknownObjectRelease();
        uint64_t v21 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
LABEL_10:
          __break(1u);
LABEL_11:
          swift_bridgeObjectRelease();
          id v15 = v31;
          goto LABEL_13;
        }
      }
      swift_getAtKeyPath();
      (*v28)(v14, v10);
      uint64_t v22 = sub_1C2B74B40();
      (*v18)(v8, v19);
      objc_msgSend(v31, sel_addObject_, v22);
      swift_unknownObjectRelease();
      ++v17;
      if (v21 == MEMORY[0x1C87666B0](a2, v10)) {
        goto LABEL_11;
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_13:
  id v24 = objc_msgSend(v15, sel_array);
  sub_1C2B741D0();

  uint64_t v25 = sub_1C2B74A30();
  swift_bridgeObjectRelease();
  if (!v25) {
    uint64_t v25 = sub_1C2B74220();
  }

  return v25;
}

uint64_t Array.unique<A>(using:)()
{
  sub_1C2B73ED0();
  sub_1C2B74280();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  uint64_t v0 = sub_1C2B748C0();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t Array<A>.filtered(with:)(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!(a1 >> 62))
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v6) {
      goto LABEL_3;
    }
    return MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_1C2B749C0();
  swift_bridgeObjectRelease();
  if (!v23) {
    return MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1C2B749C0();
  uint64_t v17 = swift_bridgeObjectRelease();
  if (!v6)
  {
    uint64_t v9 = MEMORY[0x1E4FBC860];
LABEL_14:
    MEMORY[0x1F4188790](v17);
    sub_1C2B74280();
    sub_1C2AE3A18(0, (unint64_t *)&qword_1EBF112D0);
    swift_getWitnessTable();
    unint64_t v21 = sub_1C2B74170();
    uint64_t v22 = sub_1C2B646C0(v21, v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v22;
  }
LABEL_3:
  uint64_t v26 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1C2B1DA18(0, v6 & ~(v6 >> 63), 0);
  if ((v6 & 0x8000000000000000) == 0)
  {
    uint64_t v24 = a2;
    uint64_t v25 = a3;
    uint64_t v8 = 0;
    uint64_t v9 = v26;
    do
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v10 = (id)MEMORY[0x1C8766C90](v8, a1);
      }
      else {
        id v10 = *(id *)(a1 + 8 * v8 + 32);
      }
      uint64_t v11 = v10;
      id v12 = objc_msgSend(v10, sel_medicationIdentifier, v24, v25);
      if (v12)
      {
        uint64_t v13 = v12;
        uint64_t v14 = sub_1C2B73FA0();
        uint64_t v16 = v15;
      }
      else
      {

        uint64_t v14 = 0;
        uint64_t v16 = 0;
      }
      unint64_t v19 = *(void *)(v26 + 16);
      unint64_t v18 = *(void *)(v26 + 24);
      if (v19 >= v18 >> 1) {
        uint64_t v17 = sub_1C2B1DA18(v18 > 1, v19 + 1, 1);
      }
      ++v8;
      *(void *)(v26 + 16) = v19 + 1;
      unint64_t v20 = v26 + 16 * v19;
      *(void *)(v20 + 32) = v14;
      *(void *)(v20 + 40) = v16;
    }
    while (v6 != v8);
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t HKMedicationsDeviceInfo.displayString.getter()
{
  id v1 = objc_msgSend(v0, sel_name);
  uint64_t v2 = sub_1C2B73FA0();

  return v2;
}

uint64_t sub_1C2B63528()
{
  id v1 = objc_msgSend(*v0, sel_name);
  uint64_t v2 = sub_1C2B73FA0();

  return v2;
}

uint64_t HKMedicationUserDomainConcept.displayString.getter()
{
  id v1 = v0;
  id v2 = objc_msgSend(v1, sel_userSpecifiedName);
  if (!v2) {
    goto LABEL_6;
  }
  uint64_t v3 = v2;
  uint64_t v4 = sub_1C2B73FA0();
  unint64_t v6 = v5;

  uint64_t v7 = HIBYTE(v6) & 0xF;
  if ((v6 & 0x2000000000000000) == 0) {
    uint64_t v7 = v4 & 0xFFFFFFFFFFFFLL;
  }
  if (!v7)
  {
    swift_bridgeObjectRelease();
LABEL_6:
    uint64_t v4 = sub_1C2B644A4();
  }

  return v4;
}

uint64_t sub_1C2B6360C()
{
  return HKMedicationUserDomainConcept.displayString.getter();
}

uint64_t Array.numericallySorted(by:)(uint64_t a1)
{
  uint64_t v2 = sub_1C2B741C0();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = sub_1C2B648AC;
  *(void *)(v3 + 24) = a1;
  v8[4] = sub_1C2B648C4;
  v8[5] = v3;
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 1107296256;
  void v8[2] = sub_1C2B63AA8;
  v8[3] = &block_descriptor_14;
  uint64_t v4 = _Block_copy(v8);
  swift_retain();
  swift_retain();
  swift_release();
  id v5 = objc_msgSend((id)v2, sel_sortedArrayUsingComparator_, v4);

  _Block_release(v4);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v2)
  {
    __break(1u);
  }
  else
  {
    sub_1C2B741D0();

    uint64_t v7 = sub_1C2B74960();
    swift_release();
    swift_bridgeObjectRelease();
    return v7;
  }
  return result;
}

uint64_t sub_1C2B63800(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = *a3;
  sub_1C2AFCD98(0, &qword_1EBF106C8, MEMORY[0x1E4F27A78], MEMORY[0x1E4FBB718]);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v22 - v8;
  uint64_t v10 = *(void *)(v5 + *MEMORY[0x1E4FBC5F0]);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v13 = (char *)&v22 - v12;
  sub_1C2AF4658(a1, (uint64_t)v24);
  swift_dynamicCast();
  swift_getAtKeyPath();
  uint64_t v15 = v22;
  uint64_t v14 = v23;
  uint64_t v16 = *(void (**)(char *, uint64_t))(v11 + 8);
  v16(v13, v10);
  sub_1C2AF4658(a2, (uint64_t)v24);
  swift_dynamicCast();
  swift_getAtKeyPath();
  uint64_t v17 = v22;
  uint64_t v18 = v23;
  v16(v13, v10);
  v24[0] = v15;
  v24[1] = v14;
  uint64_t v22 = v17;
  uint64_t v23 = v18;
  uint64_t v19 = sub_1C2B73790();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v9, 1, 1, v19);
  sub_1C2AE1354();
  uint64_t v20 = sub_1C2B746A0();
  sub_1C2AFCE54((uint64_t)v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_1C2B63AA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(uint64_t (**)(void *, void *))(a1 + 32);
  v9[3] = swift_getObjectType();
  v9[0] = a2;
  v8[3] = swift_getObjectType();
  v8[0] = a3;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  uint64_t v6 = v5(v9, v8);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v8);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v9);
  return v6;
}

uint64_t sub_1C2B63B38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = *(void *)(a6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](a1);
  uint64_t v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  uint64_t v13 = (char *)v21 - v12;
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  uint64_t v16 = (char *)v21 - v15;
  v17(v14);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v16, a6);
  sub_1C2B743E0();
  char v18 = sub_1C2B743C0();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v7 + 8);
  v19(v13, a6);
  v19(v16, a6);
  return v18 & 1;
}

uint64_t Array<A>.bulletedNames()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = a1;
  void v8[2] = a2;
  v8[3] = a3;
  uint64_t v3 = sub_1C2B74280();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v9 = sub_1C2B628F8((void (*)(char *, char *))sub_1C2B64904, (uint64_t)v8, v3, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBC248], WitnessTable, MEMORY[0x1E4FBC278], v5);
  sub_1C2B64924();
  sub_1C2AE04F8();
  uint64_t v6 = sub_1C2B73F40();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1C2B63DA8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v20 = a1;
  unint64_t v21 = a3;
  sub_1C2AFCD98(0, &qword_1EBF106C8, MEMORY[0x1E4F27A78], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v20 - v5;
  uint64_t v7 = sub_1C2B73790();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  if (qword_1EBF10F78 != -1) {
    swift_once();
  }
  uint64_t v8 = (void *)qword_1EBF10F60;
  sub_1C2AFCD98(0, (unint64_t *)&qword_1EBF10838, (uint64_t (*)(uint64_t))sub_1C2AFCDFC, MEMORY[0x1E4FBBE00]);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C2B76500;
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 8);
  id v11 = v8;
  swift_bridgeObjectRetain();
  uint64_t v12 = v10(v20, a2);
  uint64_t v14 = v13;
  *(void *)(v9 + 56) = MEMORY[0x1E4FBB1A0];
  *(void *)(v9 + 64) = sub_1C2AE85BC();
  *(void *)(v9 + 32) = v12;
  *(void *)(v9 + 40) = v14;
  sub_1C2B735A0();
  uint64_t v15 = sub_1C2B73FD0();
  uint64_t v17 = v16;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1C2AFCE54((uint64_t)v6);
  uint64_t v19 = v21;
  *unint64_t v21 = v15;
  v19[1] = v17;
  return result;
}

uint64_t Array<A>.formattedNames()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C2B74630();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)v17 - v9;
  uint64_t v11 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[1] = a1;
  sub_1C2B74280();
  swift_getWitnessTable();
  sub_1C2B74450();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, a2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v10, a2);
    if (MEMORY[0x1C87666A0](a1, a2) < 2) {
      uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 8))(a2, a3);
    }
    else {
      uint64_t v15 = Array<A>.bulletedNames()(a1, a2, a3);
    }
    uint64_t v14 = v15;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, a2);
  }
  return v14;
}

id sub_1C2B64264@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  self;
  id result = (id)swift_dynamicCastObjCClass();
  id v5 = result;
  if (result) {
    id result = v3;
  }
  *a2 = v5;
  return result;
}

uint64_t sub_1C2B642C0(id *a1)
{
  return sub_1C2B64308(a1, (SEL *)&selRef_isCompatibleWithSchedule_) & 1;
}

uint64_t sub_1C2B642E4(id *a1)
{
  return sub_1C2B64308(a1, (SEL *)&selRef_isCompatibleWithScheduleCompatibilityVersion_) & 1;
}

uint64_t sub_1C2B64308(id *a1, SEL *a2)
{
  return objc_msgSend(*a1, *a2, *(void *)(v2 + 24)) ^ 1;
}

uint64_t Array<A>.deviceIdentifiers()()
{
  return sub_1C2B74170();
}

uint64_t sub_1C2B643D8@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_hardwareIdentifier);
  if (v3)
  {
    uint64_t v4 = v3;
    sub_1C2B73730();

    uint64_t v5 = sub_1C2B73740();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(a2, 0, 1, v5);
  }
  else
  {
    uint64_t v7 = sub_1C2B73740();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(a2, 1, 1, v7);
  }
}

uint64_t sub_1C2B644A4()
{
  id v1 = objc_msgSend(v0, sel_freeTextMedicationName);
  if (v1)
  {
    id v2 = v1;
    uint64_t v3 = sub_1C2B73FA0();
  }
  else
  {
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v3 = sub_1C2AE0100(KeyPath, 0x53555F6E65, 0xE500000000000000);
    uint64_t v6 = v5;
    swift_release();
    if (v6) {
      return v3;
    }
    uint64_t v7 = swift_getKeyPath();
    id v8 = v0;
    uint64_t v3 = sub_1C2AE0100(v7, 0x53555F6E65, 0xE500000000000000);
    uint64_t v10 = v9;
    swift_release();
    if (v10)
    {

      return v3;
    }
    uint64_t v11 = swift_getKeyPath();
    id v12 = v8;
    uint64_t v3 = sub_1C2AE0100(v11, 0x53555F6E65, 0xE500000000000000);
    uint64_t v14 = v13;

    swift_release();
    if (v14) {
      return v3;
    }
    if (qword_1EBF10F78 != -1) {
      swift_once();
    }
    id v2 = (id)qword_1EBF10F60;
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1C2B735A0();
    swift_bridgeObjectRelease();
  }

  return v3;
}

uint64_t sub_1C2B6467C(uint64_t a1)
{
  return sub_1C2B63B38(a1, v1[5], v1[6], v1[7], v1[2], v1[3]) & 1;
}

id sub_1C2B646A4@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  return sub_1C2B64264(a1, a2);
}

uint64_t sub_1C2B646C0(unint64_t a1, uint64_t a2)
{
  unint64_t v2 = a1;
  uint64_t v21 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_24;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      unint64_t v18 = v2;
      unint64_t v4 = 0;
      uint64_t v5 = v2 & 0xFFFFFFFFFFFFFF8;
      uint64_t v6 = (void *)(v2 + 32);
      unint64_t v19 = v2 & 0xC000000000000001;
      while (v19)
      {
        id v7 = (id)MEMORY[0x1C8766C90](v4, v18);
LABEL_9:
        id v8 = v7;
        if (__OFADD__(v4++, 1)) {
          goto LABEL_23;
        }
        id v10 = objc_msgSend(v7, sel_semanticIdentifier);
        id v11 = objc_msgSend(v10, sel_stringValue);

        uint64_t v12 = sub_1C2B73FA0();
        unint64_t v2 = (unint64_t)v13;

        uint64_t v14 = *(void *)(a2 + 16);
        if (v14)
        {
          uint64_t v15 = (void *)(a2 + 40);
          while (1)
          {
            if (*v15)
            {
              BOOL v16 = *(v15 - 1) == v12 && *v15 == v2;
              if (v16 || (sub_1C2B74B50() & 1) != 0) {
                break;
              }
            }
            v15 += 2;
            if (!--v14) {
              goto LABEL_4;
            }
          }
          swift_bridgeObjectRelease();
          sub_1C2B748D0();
          sub_1C2B74910();
          sub_1C2B74920();
          unint64_t v2 = (unint64_t)&v21;
          sub_1C2B748E0();
        }
        else
        {
LABEL_4:

          swift_bridgeObjectRelease();
        }
        if (v4 == v3) {
          return v21;
        }
      }
      if (v4 < *(void *)(v5 + 16)) {
        break;
      }
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      uint64_t v3 = sub_1C2B749C0();
      if (!v3) {
        return MEMORY[0x1E4FBC860];
      }
    }
    id v7 = (id)v6[v4];
    goto LABEL_9;
  }
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1C2B648AC(uint64_t a1, uint64_t a2)
{
  return sub_1C2B63800(a1, a2, v2);
}

uint64_t sub_1C2B648B4()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C2B648C4()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t sub_1C2B64904@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C2B63DA8(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

void sub_1C2B64924()
{
  if (!qword_1EBF10FB0)
  {
    unint64_t v0 = sub_1C2B74280();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBF10FB0);
    }
  }
}

uint64_t sub_1C2B6497C@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C2B643D8(a1, a2);
}

uint64_t dispatch thunk of BulletedItem.displayString.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t MedicationVisualizationConfig.backgroundColorValue.getter()
{
  return sub_1C2B73E40();
}

uint64_t type metadata accessor for MedicationVisualizationConfig(uint64_t a1)
{
  return sub_1C2AE7EB0(a1, qword_1EBF10D10);
}

uint64_t MedicationVisualizationConfigVersion.init(rawValue:)@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = result != 1;
  return result;
}

uint64_t MedicationVisualizationConfigVersion.rawValue.getter()
{
  return 1;
}

uint64_t sub_1C2B64A54()
{
  return sub_1C2B74C60();
}

uint64_t sub_1C2B64A98()
{
  return sub_1C2B74C30();
}

uint64_t sub_1C2B64AC0()
{
  return sub_1C2B74C60();
}

void *sub_1C2B64B00@<X0>(void *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result != 1;
  return result;
}

void sub_1C2B64B14(void *a1@<X8>)
{
  *a1 = 1;
}

void MedicationVisualizationConfig.shapeName.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t MedicationVisualizationConfig.fragmentsColors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MedicationVisualizationConfig.backgroundColor.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for MedicationVisualizationConfig(0) + 24);
  sub_1C2B67E04(0, (unint64_t *)&qword_1EBF10D28, &qword_1EBF10D30, 0x1E4FB1618, MEMORY[0x1E4F29518]);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t MedicationVisualizationConfig.init(shapeName:fragmentsColors:backgroundColor:currentVersion:)@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(unsigned char *)a4 = *a1;
  *(void *)(a4 + 8) = a2;
  uint64_t v5 = a4 + *(int *)(type metadata accessor for MedicationVisualizationConfig(0) + 24);
  sub_1C2B67E04(0, (unint64_t *)&qword_1EBF10D28, &qword_1EBF10D30, 0x1E4FB1618, MEMORY[0x1E4F29518]);
  id v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  return v7(v5, a3, v6);
}

uint64_t MedicationVisualizationConfig.init(shapeName:fragmentsColors:backgroundColor:currentVersion:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char v6 = *a1;
  if (*(void *)(a2 + 16))
  {
    sub_1C2B67EC0(0, (unint64_t *)&qword_1EA32BBD0, MEMORY[0x1E4FBBD58]);
    uint64_t v7 = sub_1C2B749F0();
  }
  else
  {
    uint64_t v7 = MEMORY[0x1E4FBC868];
  }
  uint64_t v14 = v7;
  uint64_t v8 = swift_bridgeObjectRetain();
  sub_1C2B66FA8(v8, 1, &v14);
  swift_bridgeObjectRelease();
  uint64_t v9 = v14;
  *(unsigned char *)a4 = v6;
  *(void *)(a4 + 8) = v9;
  uint64_t v10 = a4 + *(int *)(type metadata accessor for MedicationVisualizationConfig(0) + 24);
  sub_1C2B67E04(0, (unint64_t *)&qword_1EBF10D28, &qword_1EBF10D30, 0x1E4FB1618, MEMORY[0x1E4F29518]);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32);
  return v12(v10, a3, v11);
}

void MedicationVisualizationConfig.init(shapeName:fragmentsColors:backgroundColor:currentVersion:)(char *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  sub_1C2B67E04(0, (unint64_t *)&qword_1EBF10D28, &qword_1EBF10D30, 0x1E4FB1618, MEMORY[0x1E4F29518]);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v19 - v11;
  char v13 = *a1;
  sub_1C2AE3A18(0, &qword_1EBF10D30);
  id v14 = a3;
  sub_1C2B73E70();
  if (*(void *)(a2 + 16))
  {
    sub_1C2B67EC0(0, (unint64_t *)&qword_1EA32BBD0, MEMORY[0x1E4FBBD58]);
    uint64_t v15 = sub_1C2B749F0();
  }
  else
  {
    uint64_t v15 = MEMORY[0x1E4FBC868];
  }
  uint64_t v20 = v15;
  uint64_t v16 = swift_bridgeObjectRetain();
  sub_1C2B66FA8(v16, 1, &v20);
  swift_bridgeObjectRelease();
  uint64_t v17 = v20;
  *(unsigned char *)a4 = v13;
  *(void *)(a4 + 8) = v17;
  uint64_t v18 = type metadata accessor for MedicationVisualizationConfig(0);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(a4 + *(int *)(v18 + 24), v12, v9);
}

uint64_t MedicationVisualizationConfig.init(jsonString:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v16 = a1;
  uint64_t v1 = type metadata accessor for MedicationVisualizationConfig(0);
  uint64_t v15 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C2B74000();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2B73420();
  swift_allocObject();
  sub_1C2B73410();
  sub_1C2B73FF0();
  uint64_t v8 = sub_1C2B73FB0();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (v10 >> 60 == 15) {
    uint64_t v11 = 0;
  }
  else {
    uint64_t v11 = v8;
  }
  if (v10 >> 60 == 15) {
    unint64_t v10 = 0xC000000000000000;
  }
  sub_1C2B680E0(&qword_1EBF11158);
  uint64_t v12 = v17;
  sub_1C2B73400();
  sub_1C2B35C24(v11, v10);
  uint64_t result = swift_release();
  if (!v12)
  {
    uint64_t v14 = v16;
    sub_1C2B69130((uint64_t)v3, v16, type metadata accessor for MedicationVisualizationConfig);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56))(v14, 0, 1, v1);
  }
  return result;
}

uint64_t MedicationVisualizationConfig.jsonDataString.getter()
{
  uint64_t v0 = sub_1C2B74000();
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v1 = sub_1C2B73440();
  MEMORY[0x1F4188790](v1 - 8);
  sub_1C2B73480();
  swift_allocObject();
  sub_1C2B73470();
  sub_1C2B73430();
  sub_1C2B73450();
  type metadata accessor for MedicationVisualizationConfig(0);
  sub_1C2B680E0(&qword_1EA32C4E0);
  uint64_t v2 = sub_1C2B73460();
  unint64_t v4 = v3;
  sub_1C2B73FF0();
  uint64_t v5 = sub_1C2B73FC0();
  swift_release();
  sub_1C2B35C24(v2, v4);
  return v5;
}

uint64_t MedicationVisualizationConfig.hash(into:)(long long *a1)
{
  MedicationShape.rawValue.getter();
  sub_1C2B74070();
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v1 + 8);
  swift_bridgeObjectRetain();
  sub_1C2B67580(a1, v3);
  swift_bridgeObjectRelease();
  type metadata accessor for MedicationVisualizationConfig(0);
  sub_1C2B67E04(0, (unint64_t *)&qword_1EBF10D28, &qword_1EBF10D30, 0x1E4FB1618, MEMORY[0x1E4F29518]);
  sub_1C2B691F8(&qword_1EA32C4E8, &qword_1EA32C4F0);
  sub_1C2B73F20();
  return sub_1C2B74C30();
}

uint64_t sub_1C2B65504(uint64_t a1, uint64_t a2)
{
  sub_1C2B67E04(0, (unint64_t *)&qword_1EBF10D28, &qword_1EBF10D30, 0x1E4FB1618, MEMORY[0x1E4F29518]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v70 = (char *)&v64 - v7;
  sub_1C2B69074();
  uint64_t v76 = v8;
  MEMORY[0x1F4188790](v8);
  unint64_t v10 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2B027C8();
  uint64_t v80 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)&v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  uint64_t v81 = (uint64_t)&v64 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v64 - v17;
  sub_1C2B690D8();
  uint64_t v20 = MEMORY[0x1F4188790](v19 - 8);
  id v78 = (char *)&v64 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v20);
  uint64_t v24 = (int64_t *)((char *)&v64 - v23);
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v77 = 0;
  uint64_t v71 = a1;
  uint64_t v27 = *(void *)(a1 + 64);
  uint64_t v26 = a1 + 64;
  uint64_t v25 = v27;
  uint64_t v28 = 1 << *(unsigned char *)(v26 - 32);
  uint64_t v29 = -1;
  if (v28 < 64) {
    uint64_t v29 = ~(-1 << v28);
  }
  unint64_t v30 = v29 & v25;
  uint64_t v72 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  uint64_t v73 = v10;
  uint64_t v65 = v26;
  uint64_t v66 = (void (**)(char *, uint64_t, uint64_t))(v6 + 32);
  char v68 = (void (**)(uint64_t, uint64_t))(v6 + 8);
  uint64_t v69 = v14;
  int64_t v67 = (unint64_t)(v28 + 63) >> 6;
  int64_t v64 = v67 - 1;
  uint64_t v74 = v18;
  uint64_t v75 = a2;
  while (v30)
  {
    uint64_t v79 = (v30 - 1) & v30;
    id v31 = v78;
    unint64_t v32 = __clz(__rbit64(v30)) | (v77 << 6);
LABEL_8:
    uint64_t v33 = *(void *)(v71 + 56);
    uint64_t v34 = (void *)(*(void *)(v71 + 48) + 32 * v32);
    uint64_t v35 = v34[1];
    uint64_t v37 = v34[2];
    uint64_t v36 = v34[3];
    *id v31 = *v34;
    v31[1] = v35;
    v31[2] = v37;
    v31[3] = v36;
    uint64_t v38 = v33 + *(void *)(v80 + 72) * v32;
    sub_1C2AE86D4();
    uint64_t v40 = v39;
    sub_1C2B69308(v38, (uint64_t)v31 + *(int *)(v39 + 48), (uint64_t (*)(void))sub_1C2B027C8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v31, 0, 1, v40);
    swift_bridgeObjectRetain();
    sub_1C2AE8858(v37, v36);
LABEL_30:
    sub_1C2B69130((uint64_t)v31, (uint64_t)v24, (uint64_t (*)(void))sub_1C2B690D8);
    sub_1C2AE86D4();
    int v45 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v40 - 8) + 48))(v24, 1, v40);
    BOOL v46 = v45 == 1;
    if (v45 == 1) {
      return v46;
    }
    uint64_t v47 = v5;
    uint64_t v48 = *v24;
    uint64_t v49 = v24[1];
    uint64_t v50 = v24[2];
    uint64_t v51 = v24[3];
    uint64_t v52 = (uint64_t)v74;
    sub_1C2B69130((uint64_t)v24 + *(int *)(v40 + 48), (uint64_t)v74, (uint64_t (*)(void))sub_1C2B027C8);
    uint64_t v53 = v75;
    unint64_t v54 = sub_1C2AFFFDC(v48, v49, v50, v51);
    LOBYTE(v48) = v55;
    swift_bridgeObjectRelease();
    sub_1C2B027B4(v50, v51);
    if ((v48 & 1) == 0) {
      goto LABEL_41;
    }
    uint64_t v56 = v81;
    sub_1C2B69308(*(void *)(v53 + 56) + *(void *)(v80 + 72) * v54, v81, (uint64_t (*)(void))sub_1C2B027C8);
    uint64_t v57 = (uint64_t)v73;
    uint64_t v58 = (uint64_t)&v73[*(int *)(v76 + 48)];
    sub_1C2B69308(v56, (uint64_t)v73, (uint64_t (*)(void))sub_1C2B027C8);
    sub_1C2B69308(v52, v58, (uint64_t (*)(void))sub_1C2B027C8);
    int64_t v59 = *v72;
    uint64_t v5 = v47;
    if ((*v72)(v57, 1, v47) == 1)
    {
      if (v59(v58, 1, v47) != 1) {
        goto LABEL_40;
      }
      sub_1C2B69198(v57, (uint64_t (*)(void))sub_1C2B027C8);
      sub_1C2B69198(v81, (uint64_t (*)(void))sub_1C2B027C8);
      uint64_t result = sub_1C2B69198(v52, (uint64_t (*)(void))sub_1C2B027C8);
      unint64_t v30 = v79;
    }
    else
    {
      uint64_t v60 = (uint64_t)v69;
      sub_1C2B69308(v57, (uint64_t)v69, (uint64_t (*)(void))sub_1C2B027C8);
      if (v59(v58, 1, v5) == 1)
      {
        (*v68)(v60, v5);
LABEL_40:
        sub_1C2B69198(v57, (uint64_t (*)(void))sub_1C2B69074);
        sub_1C2B69198(v81, (uint64_t (*)(void))sub_1C2B027C8);
LABEL_41:
        sub_1C2B69198(v52, (uint64_t (*)(void))sub_1C2B027C8);
        return 0;
      }
      uint64_t v61 = v70;
      (*v66)(v70, v58, v5);
      sub_1C2B691F8(&qword_1EA32C570, (unint64_t *)&qword_1EA32C2A8);
      char v62 = sub_1C2B73F50();
      int64_t v63 = *v68;
      (*v68)((uint64_t)v61, v5);
      v63(v60, v5);
      sub_1C2B69198(v57, (uint64_t (*)(void))sub_1C2B027C8);
      sub_1C2B69198(v81, (uint64_t (*)(void))sub_1C2B027C8);
      uint64_t result = sub_1C2B69198(v52, (uint64_t (*)(void))sub_1C2B027C8);
      unint64_t v30 = v79;
      if ((v62 & 1) == 0) {
        return v46;
      }
    }
  }
  id v31 = v78;
  int64_t v41 = v77 + 1;
  if (__OFADD__(v77, 1))
  {
    __break(1u);
    goto LABEL_45;
  }
  if (v41 >= v67)
  {
LABEL_29:
    sub_1C2AE86D4();
    uint64_t v40 = v44;
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v31, 1, 1, v44);
    uint64_t v79 = 0;
    goto LABEL_30;
  }
  unint64_t v42 = *(void *)(v65 + 8 * v41);
  if (v42)
  {
LABEL_12:
    uint64_t v79 = (v42 - 1) & v42;
    unint64_t v32 = __clz(__rbit64(v42)) + (v41 << 6);
    int64_t v77 = v41;
    goto LABEL_8;
  }
  int64_t v43 = v77 + 2;
  ++v77;
  if (v41 + 1 >= v67) {
    goto LABEL_29;
  }
  unint64_t v42 = *(void *)(v65 + 8 * v43);
  if (v42) {
    goto LABEL_15;
  }
  int64_t v77 = v41 + 1;
  if (v41 + 2 >= v67) {
    goto LABEL_29;
  }
  unint64_t v42 = *(void *)(v65 + 8 * (v41 + 2));
  if (v42)
  {
    v41 += 2;
    goto LABEL_12;
  }
  int64_t v77 = v41 + 2;
  if (v41 + 3 >= v67) {
    goto LABEL_29;
  }
  unint64_t v42 = *(void *)(v65 + 8 * (v41 + 3));
  if (v42)
  {
    v41 += 3;
    goto LABEL_12;
  }
  int64_t v43 = v41 + 4;
  int64_t v77 = v41 + 3;
  if (v41 + 4 >= v67) {
    goto LABEL_29;
  }
  unint64_t v42 = *(void *)(v65 + 8 * v43);
  if (v42)
  {
LABEL_15:
    int64_t v41 = v43;
    goto LABEL_12;
  }
  while (1)
  {
    int64_t v41 = v43 + 1;
    if (__OFADD__(v43, 1)) {
      break;
    }
    if (v41 >= v67)
    {
      int64_t v77 = v64;
      goto LABEL_29;
    }
    unint64_t v42 = *(void *)(v65 + 8 * v41);
    ++v43;
    if (v42) {
      goto LABEL_12;
    }
  }
LABEL_45:
  __break(1u);
  return result;
}

uint64_t MedicationVisualizationConfig.hashValue.getter()
{
  sub_1C2B74C20();
  MedicationShape.rawValue.getter();
  sub_1C2B74070();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  sub_1C2B67580(v3, v1);
  swift_bridgeObjectRelease();
  type metadata accessor for MedicationVisualizationConfig(0);
  sub_1C2B67E04(0, (unint64_t *)&qword_1EBF10D28, &qword_1EBF10D30, 0x1E4FB1618, MEMORY[0x1E4F29518]);
  sub_1C2B691F8(&qword_1EA32C4E8, &qword_1EA32C4F0);
  sub_1C2B73F20();
  sub_1C2B74C30();
  return sub_1C2B74C60();
}

uint64_t sub_1C2B65E94(long long *a1)
{
  MedicationShape.rawValue.getter();
  sub_1C2B74070();
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v1 + 8);
  swift_bridgeObjectRetain();
  sub_1C2B67580(a1, v3);
  swift_bridgeObjectRelease();
  sub_1C2B67E04(0, (unint64_t *)&qword_1EBF10D28, &qword_1EBF10D30, 0x1E4FB1618, MEMORY[0x1E4F29518]);
  sub_1C2B691F8(&qword_1EA32C4E8, &qword_1EA32C4F0);
  sub_1C2B73F20();
  return sub_1C2B74C30();
}

uint64_t sub_1C2B65FB4()
{
  sub_1C2B74C20();
  MedicationShape.rawValue.getter();
  sub_1C2B74070();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  sub_1C2B67580(v3, v1);
  swift_bridgeObjectRelease();
  sub_1C2B67E04(0, (unint64_t *)&qword_1EBF10D28, &qword_1EBF10D30, 0x1E4FB1618, MEMORY[0x1E4F29518]);
  sub_1C2B691F8(&qword_1EA32C4E8, &qword_1EA32C4F0);
  sub_1C2B73F20();
  sub_1C2B74C30();
  return sub_1C2B74C60();
}

uint64_t sub_1C2B660E4()
{
  uint64_t result = 0x6D614E6570616873;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x746E656D67617266;
      break;
    case 2:
      uint64_t result = 0x756F72676B636162;
      break;
    case 3:
      uint64_t result = 0x56746E6572727563;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C2B6619C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C2B68BD0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C2B661C4()
{
  return 0;
}

void sub_1C2B661D0(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1C2B661DC(uint64_t a1)
{
  unint64_t v2 = sub_1C2B67E6C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C2B66218(uint64_t a1)
{
  unint64_t v2 = sub_1C2B67E6C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C2B66254(void *a1)
{
  uint64_t v3 = v1;
  sub_1C2B68E04(0, &qword_1EA32C4F8, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_0(a1, a1[3]);
  sub_1C2B67E6C();
  sub_1C2B74C90();
  char v15 = 3;
  sub_1C2B74AD0();
  if (!v2)
  {
    char v14 = *v3;
    MedicationShape.rawValue.getter();
    char v13 = 0;
    sub_1C2B74AC0();
    swift_bridgeObjectRelease();
    uint64_t v12 = *((void *)v3 + 1);
    v11[15] = 1;
    sub_1C2B67EC0(0, &qword_1EA32C508, MEMORY[0x1E4FBAEA0]);
    sub_1C2B67F34();
    sub_1C2B74AE0();
    type metadata accessor for MedicationVisualizationConfig.MedicationVisualizationConfigV1(0);
    v11[14] = 2;
    sub_1C2B67E04(0, (unint64_t *)&qword_1EBF10D28, &qword_1EBF10D30, 0x1E4FB1618, MEMORY[0x1E4F29518]);
    sub_1C2B68E68(&qword_1EA32C500);
    sub_1C2B74AE0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C2B66504@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  sub_1C2B67E04(0, (unint64_t *)&qword_1EBF10D28, &qword_1EBF10D30, 0x1E4FB1618, MEMORY[0x1E4F29518]);
  uint64_t v23 = v3;
  uint64_t v21 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v19 - v4;
  sub_1C2B68E04(0, &qword_1EBF112E8, MEMORY[0x1E4FBBDC0]);
  uint64_t v24 = v6;
  uint64_t v22 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v19 - v7;
  uint64_t v9 = type metadata accessor for MedicationVisualizationConfig.MedicationVisualizationConfigV1(0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_0(a1, a1[3]);
  sub_1C2B67E6C();
  uint64_t v12 = (uint64_t)v25;
  sub_1C2B74C80();
  if (v12) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  uint64_t v25 = a1;
  char v13 = v5;
  uint64_t v15 = v23;
  uint64_t v14 = v24;
  char v29 = 0;
  v16._uint64_t countAndFlagsBits = sub_1C2B74A70();
  MedicationShape.init(rawValue:)(v16);
  char v17 = v30;
  if (v30 == 48) {
    char v17 = 0;
  }
  char *v11 = v17;
  char v28 = 2;
  sub_1C2B68E68(&qword_1EA32C550);
  sub_1C2B74A80();
  (*(void (**)(char *, char *, uint64_t))(v21 + 32))(&v11[*(int *)(v9 + 24)], v13, v15);
  sub_1C2B67EC0(0, &qword_1EA32C508, MEMORY[0x1E4FBAEA0]);
  char v27 = 1;
  sub_1C2B68ED8();
  sub_1C2B74A80();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v14);
  *((void *)v11 + 1) = v26;
  sub_1C2B69308((uint64_t)v11, v20, type metadata accessor for MedicationVisualizationConfig.MedicationVisualizationConfigV1);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v25);
  return sub_1C2B69198((uint64_t)v11, type metadata accessor for MedicationVisualizationConfig.MedicationVisualizationConfigV1);
}

uint64_t sub_1C2B66914@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C2B66504(a1, a2);
}

uint64_t sub_1C2B6692C(void *a1)
{
  return sub_1C2B66254(a1);
}

uint64_t MedicationVisualizationConfig.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for MedicationVisualizationConfig.MedicationVisualizationConfigV1(0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v25[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2B059E8(a1, (uint64_t)v25);
  sub_1C2B66504(v25, (uint64_t)v7);
  if (v2)
  {
    if (qword_1EBF11340 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_1C2B73A90();
    __swift_project_value_buffer(v8, (uint64_t)qword_1EBF11348);
    id v9 = v2;
    id v10 = v2;
    uint64_t v11 = sub_1C2B73A80();
    os_log_type_t v12 = sub_1C2B744C0();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = swift_slowAlloc();
      uint64_t v14 = (void *)swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      v25[0] = v24;
      *(_DWORD *)uint64_t v13 = 136315394;
      uint64_t v26 = sub_1C2AEEE6C(0xD00000000000001DLL, 0x80000001C2B79220, v25);
      sub_1C2B74650();
      *(_WORD *)(v13 + 12) = 2112;
      id v15 = v2;
      uint64_t v16 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v26 = v16;
      sub_1C2B74650();
      *uint64_t v14 = v16;

      _os_log_impl(&dword_1C2ADB000, v11, v12, "[%s] Unable to decode MedicationVisualizationConfig with error: '%@'\nThis might be a newer config that we don't know how to decode.'", (uint8_t *)v13, 0x16u);
      sub_1C2B67E04(0, (unint64_t *)&qword_1EA32BAF0, (unint64_t *)&qword_1EBF10810, 0x1E4FBA8A8, MEMORY[0x1E4FBB718]);
      swift_arrayDestroy();
      MEMORY[0x1C8767A10](v14, -1, -1);
      uint64_t v17 = v24;
      swift_arrayDestroy();
      MEMORY[0x1C8767A10](v17, -1, -1);
      MEMORY[0x1C8767A10](v13, -1, -1);
    }
    else
    {
    }
    swift_willThrow();
    return __swift_destroy_boxed_opaque_existential_0(a1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0(a1);
    char v18 = *v7;
    uint64_t v19 = *((void *)v7 + 1);
    uint64_t v20 = &v7[*(int *)(v5 + 24)];
    uint64_t v21 = a2 + *(int *)(type metadata accessor for MedicationVisualizationConfig(0) + 24);
    sub_1C2B67E04(0, (unint64_t *)&qword_1EBF10D28, &qword_1EBF10D30, 0x1E4FB1618, MEMORY[0x1E4F29518]);
    uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v21, v20, v22);
    *(unsigned char *)a2 = v18;
    *(void *)(a2 + 8) = v19;
  }
  return result;
}

uint64_t MedicationVisualizationConfig.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1C2B68E04(0, &qword_1EA32C4F8, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  id v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_0(a1, a1[3]);
  sub_1C2B67E6C();
  sub_1C2B74C90();
  char v16 = 3;
  sub_1C2B74AD0();
  if (!v2)
  {
    char v15 = *v3;
    MedicationShape.rawValue.getter();
    char v14 = 0;
    sub_1C2B74AC0();
    swift_bridgeObjectRelease();
    type metadata accessor for MedicationVisualizationConfig(0);
    char v13 = 2;
    sub_1C2B67E04(0, (unint64_t *)&qword_1EBF10D28, &qword_1EBF10D30, 0x1E4FB1618, MEMORY[0x1E4F29518]);
    sub_1C2B68E68(&qword_1EA32C500);
    sub_1C2B74AE0();
    uint64_t v12 = *((void *)v3 + 1);
    v11[15] = 1;
    sub_1C2B67EC0(0, &qword_1EA32C508, MEMORY[0x1E4FBAEA0]);
    sub_1C2B67F34();
    sub_1C2B74AE0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C2B66F78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return MedicationVisualizationConfig.init(from:)(a1, a2);
}

uint64_t sub_1C2B66F90(void *a1)
{
  return MedicationVisualizationConfig.encode(to:)(a1);
}

void sub_1C2B66FA8(uint64_t a1, int a2, void *a3)
{
  sub_1C2B027C8();
  uint64_t v69 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7 - 8);
  id v9 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2B692A0();
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  char v14 = (uint64_t *)((char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = *(void *)(a1 + 16);
  if (!v15)
  {
    swift_bridgeObjectRelease();
    return;
  }
  int v65 = a2;
  uint64_t v16 = (uint64_t)v14 + *(int *)(v11 + 48);
  unint64_t v63 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v64 = v3;
  uint64_t v17 = a1 + v63;
  uint64_t v68 = *(void *)(v12 + 72);
  uint64_t v66 = a1;
  swift_bridgeObjectRetain();
  sub_1C2B69308(v17, (uint64_t)v14, (uint64_t (*)(void))sub_1C2B692A0);
  uint64_t v19 = v14[1];
  uint64_t v21 = v14[2];
  uint64_t v20 = v14[3];
  uint64_t v74 = *v14;
  uint64_t v18 = v74;
  uint64_t v75 = v19;
  uint64_t v76 = v21;
  uint64_t v77 = v20;
  uint64_t v67 = v16;
  uint64_t v70 = v9;
  sub_1C2B69130(v16, (uint64_t)v9, (uint64_t (*)(void))sub_1C2B027C8);
  uint64_t v71 = a3;
  uint64_t v22 = *a3;
  uint64_t v23 = v18;
  unint64_t v25 = sub_1C2AFFFDC(v18, v19, v21, v20);
  uint64_t v26 = *(void *)(v22 + 16);
  BOOL v27 = (v24 & 1) == 0;
  uint64_t v28 = v26 + v27;
  if (__OFADD__(v26, v27)) {
    goto LABEL_23;
  }
  char v29 = v24;
  if (*(void *)(v22 + 24) >= v28)
  {
    if (v65)
    {
      if (v24) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_1C2B022F0();
      if (v29) {
        goto LABEL_10;
      }
    }
LABEL_13:
    uint64_t v36 = (void *)*v71;
    *(void *)(*v71 + 8 * (v25 >> 6) + 64) |= 1 << v25;
    uint64_t v37 = (uint64_t *)(v36[6] + 32 * v25);
    *uint64_t v37 = v23;
    v37[1] = v19;
    v37[2] = v21;
    v37[3] = v20;
    uint64_t v38 = v36[7] + *(void *)(v69 + 72) * v25;
    uint64_t v39 = (uint64_t)v70;
    sub_1C2B69130((uint64_t)v70, v38, (uint64_t (*)(void))sub_1C2B027C8);
    uint64_t v40 = v36[2];
    BOOL v41 = __OFADD__(v40, 1);
    uint64_t v42 = v40 + 1;
    if (v41)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    _OWORD v36[2] = v42;
    uint64_t v43 = v15 - 1;
    if (v15 == 1)
    {
LABEL_22:
      swift_bridgeObjectRelease_n();
      return;
    }
    uint64_t v44 = v66 + v68 + v63;
    while (1)
    {
      sub_1C2B69308(v44, (uint64_t)v14, (uint64_t (*)(void))sub_1C2B692A0);
      uint64_t v46 = v14[1];
      uint64_t v47 = v39;
      uint64_t v48 = v14[2];
      uint64_t v49 = v14[3];
      uint64_t v74 = *v14;
      uint64_t v45 = v74;
      uint64_t v75 = v46;
      uint64_t v76 = v48;
      uint64_t v77 = v49;
      sub_1C2B69130(v67, v47, (uint64_t (*)(void))sub_1C2B027C8);
      uint64_t v50 = (void *)*v71;
      unint64_t v51 = sub_1C2AFFFDC(v45, v46, v48, v49);
      uint64_t v53 = v50[2];
      BOOL v54 = (v52 & 1) == 0;
      BOOL v41 = __OFADD__(v53, v54);
      uint64_t v55 = v53 + v54;
      if (v41) {
        break;
      }
      char v56 = v52;
      if (v50[3] < v55)
      {
        sub_1C2B23CA4(v55, 1);
        unint64_t v51 = sub_1C2AFFFDC(v45, v46, v48, v49);
        if ((v56 & 1) != (v57 & 1)) {
          goto LABEL_25;
        }
      }
      if (v56) {
        goto LABEL_10;
      }
      uint64_t v58 = (void *)*v71;
      *(void *)(*v71 + 8 * (v51 >> 6) + 64) |= 1 << v51;
      int64_t v59 = (uint64_t *)(v58[6] + 32 * v51);
      *int64_t v59 = v45;
      v59[1] = v46;
      v59[2] = v48;
      v59[3] = v49;
      uint64_t v39 = (uint64_t)v70;
      sub_1C2B69130((uint64_t)v70, v58[7] + *(void *)(v69 + 72) * v51, (uint64_t (*)(void))sub_1C2B027C8);
      uint64_t v60 = v58[2];
      BOOL v41 = __OFADD__(v60, 1);
      uint64_t v61 = v60 + 1;
      if (v41) {
        goto LABEL_24;
      }
      v58[2] = v61;
      v44 += v68;
      if (!--v43) {
        goto LABEL_22;
      }
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_1C2B23CA4(v28, v65 & 1);
  unint64_t v30 = sub_1C2AFFFDC(v23, v19, v21, v20);
  if ((v29 & 1) == (v31 & 1))
  {
    unint64_t v25 = v30;
    if ((v29 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    unint64_t v32 = (void *)swift_allocError();
    swift_willThrow();
    id v78 = v32;
    id v33 = v32;
    sub_1C2AF44C8();
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      sub_1C2B69198((uint64_t)v70, (uint64_t (*)(void))sub_1C2B027C8);
      uint64_t v34 = v76;
      uint64_t v35 = v77;
      swift_bridgeObjectRelease();
      sub_1C2B027B4(v34, v35);
      swift_bridgeObjectRelease();

      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_1C2B74BB0();
  __break(1u);
LABEL_26:
  uint64_t v72 = 0;
  unint64_t v73 = 0xE000000000000000;
  sub_1C2B74820();
  sub_1C2B740A0();
  sub_1C2B74970();
  sub_1C2B740A0();
  sub_1C2B74990();
  __break(1u);
}

uint64_t sub_1C2B67580(long long *a1, uint64_t a2)
{
  sub_1C2B67E04(0, (unint64_t *)&qword_1EBF10D28, &qword_1EBF10D30, 0x1E4FB1618, MEMORY[0x1E4F29518]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v52 = (char *)&v48 - v7;
  sub_1C2B027C8();
  uint64_t v54 = *(void *)(v8 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v58 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v61 = (uint64_t)&v48 - v11;
  sub_1C2B690D8();
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (int64_t *)((char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v48 - v16;
  uint64_t v18 = *(void *)(a2 + 64);
  uint64_t v49 = a2 + 64;
  uint64_t v19 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v20 = -1;
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  unint64_t v21 = v20 & v18;
  char v57 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  uint64_t v50 = (void (**)(char *, uint64_t))(v6 + 8);
  unint64_t v51 = (void (**)(char *, uint64_t, uint64_t))(v6 + 32);
  int64_t v53 = (unint64_t)(v19 + 63) >> 6;
  int64_t v48 = v53 - 1;
  uint64_t v56 = a2;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v23 = 0;
  int64_t v59 = 0;
  uint64_t v55 = v5;
  while (1)
  {
    uint64_t v60 = v23;
    if (v21)
    {
      unint64_t v25 = __clz(__rbit64(v21));
      v21 &= v21 - 1;
      unint64_t v26 = v25 | (v59 << 6);
      goto LABEL_8;
    }
    int64_t v35 = v59 + 1;
    if (__OFADD__(v59, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v35 < v53)
    {
      unint64_t v36 = *(void *)(v49 + 8 * v35);
      if (v36) {
        goto LABEL_12;
      }
      int64_t v37 = v59 + 2;
      ++v59;
      if (v35 + 1 < v53)
      {
        unint64_t v36 = *(void *)(v49 + 8 * v37);
        if (v36)
        {
          ++v35;
          goto LABEL_12;
        }
        int64_t v38 = v35 + 2;
        int64_t v59 = v35 + 1;
        if (v35 + 2 < v53) {
          break;
        }
      }
    }
LABEL_24:
    sub_1C2AE86D4();
    uint64_t v34 = v39;
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v15, 1, 1, v39);
    unint64_t v21 = 0;
LABEL_25:
    sub_1C2B69130((uint64_t)v15, (uint64_t)v17, (uint64_t (*)(void))sub_1C2B690D8);
    sub_1C2AE86D4();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 48))(v17, 1, v34) == 1)
    {
      swift_release();
      return sub_1C2B74C30();
    }
    uint64_t v40 = *((void *)v17 + 2);
    uint64_t v41 = *((void *)v17 + 3);
    sub_1C2B69130((uint64_t)&v17[*(int *)(v34 + 48)], v61, (uint64_t (*)(void))sub_1C2B027C8);
    uint64_t v42 = *((void *)a1 + 8);
    long long v43 = a1[1];
    long long v62 = *a1;
    long long v63 = v43;
    long long v44 = a1[3];
    long long v64 = a1[2];
    long long v65 = v44;
    uint64_t v66 = v42;
    swift_bridgeObjectRetain();
    sub_1C2B74070();
    swift_bridgeObjectRelease();
    if (v41 == 1)
    {
      sub_1C2B74C30();
      uint64_t v45 = (uint64_t)v58;
    }
    else
    {
      sub_1C2B74C30();
      uint64_t v45 = (uint64_t)v58;
      sub_1C2B74C40();
      if (v41)
      {
        swift_bridgeObjectRetain();
        sub_1C2B74070();
        uint64_t v46 = v40;
        uint64_t v47 = v41;
      }
      else
      {
        uint64_t v46 = v40;
        uint64_t v47 = 0;
      }
      sub_1C2B027B4(v46, v47);
    }
    swift_bridgeObjectRelease();
    sub_1C2B027B4(v40, v41);
    sub_1C2B69308(v61, v45, (uint64_t (*)(void))sub_1C2B027C8);
    if ((*v57)(v45, 1, v5) == 1)
    {
      sub_1C2B74C40();
    }
    else
    {
      char v24 = v52;
      (*v51)(v52, v45, v5);
      sub_1C2B74C40();
      sub_1C2B691F8(&qword_1EA32C4E8, &qword_1EA32C4F0);
      sub_1C2B73F20();
      (*v50)(v24, v5);
    }
    sub_1C2B69198(v61, (uint64_t (*)(void))sub_1C2B027C8);
    uint64_t result = sub_1C2B74C60();
    uint64_t v23 = result ^ v60;
  }
  unint64_t v36 = *(void *)(v49 + 8 * v38);
  if (v36)
  {
    v35 += 2;
LABEL_12:
    unint64_t v21 = (v36 - 1) & v36;
    unint64_t v26 = __clz(__rbit64(v36)) + (v35 << 6);
    int64_t v59 = v35;
LABEL_8:
    BOOL v27 = (uint64_t *)(*(void *)(v56 + 48) + 32 * v26);
    uint64_t v29 = *v27;
    uint64_t v28 = v27[1];
    uint64_t v30 = v27[2];
    uint64_t v31 = v27[3];
    uint64_t v32 = *(void *)(v56 + 56) + *(void *)(v54 + 72) * v26;
    sub_1C2AE86D4();
    uint64_t v34 = v33;
    sub_1C2B69308(v32, (uint64_t)v15 + *(int *)(v33 + 48), (uint64_t (*)(void))sub_1C2B027C8);
    *uint64_t v15 = v29;
    v15[1] = v28;
    void v15[2] = v30;
    void v15[3] = v31;
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v15, 0, 1, v34);
    swift_bridgeObjectRetain();
    sub_1C2AE8858(v30, v31);
    uint64_t v5 = v55;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v35 = v38 + 1;
    if (__OFADD__(v38, 1)) {
      break;
    }
    if (v35 >= v53)
    {
      int64_t v59 = v48;
      goto LABEL_24;
    }
    unint64_t v36 = *(void *)(v49 + 8 * v35);
    ++v38;
    if (v36) {
      goto LABEL_12;
    }
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1C2B67C40(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C2AE3A18(255, &qword_1EBF10D30);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s27HealthMedicationsExperience29MedicationVisualizationConfigV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = MedicationShape.rawValue.getter();
  uint64_t v6 = v5;
  if (v4 == MedicationShape.rawValue.getter() && v6 == v7)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v9 = sub_1C2B74B50();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v9 & 1) == 0) {
      return 0;
    }
  }
  if ((sub_1C2B65504(*(void *)(a1 + 8), *(void *)(a2 + 8)) & 1) == 0) {
    return 0;
  }
  type metadata accessor for MedicationVisualizationConfig(0);
  sub_1C2AE3A18(0, &qword_1EBF10D30);
  sub_1C2B67C40((unint64_t *)&qword_1EA32C2A8);
  return sub_1C2B73E50();
}

uint64_t type metadata accessor for MedicationVisualizationConfig.MedicationVisualizationConfigV1(uint64_t a1)
{
  return sub_1C2AE7EB0(a1, (uint64_t *)&unk_1EA32C538);
}

void sub_1C2B67E04(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1C2AE3A18(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

unint64_t sub_1C2B67E6C()
{
  unint64_t result = qword_1EBF11140;
  if (!qword_1EBF11140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBF11140);
  }
  return result;
}

void sub_1C2B67EC0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, uint64_t, unint64_t))
{
  if (!*a2)
  {
    sub_1C2B027C8();
    uint64_t v7 = v6;
    unint64_t v8 = sub_1C2B028B8();
    unint64_t v9 = a3(a1, &type metadata for MedicationVisualizationFragment, v7, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

unint64_t sub_1C2B67F34()
{
  unint64_t result = qword_1EA32C510;
  if (!qword_1EA32C510)
  {
    sub_1C2B67EC0(255, &qword_1EA32C508, MEMORY[0x1E4FBAEA0]);
    sub_1C2B68000();
    sub_1C2B68FF8(&qword_1EA32C520, &qword_1EA32C500);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA32C510);
  }
  return result;
}

unint64_t sub_1C2B68000()
{
  unint64_t result = qword_1EA32C518;
  if (!qword_1EA32C518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA32C518);
  }
  return result;
}

unint64_t sub_1C2B68058()
{
  unint64_t result = qword_1EA32C528;
  if (!qword_1EA32C528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA32C528);
  }
  return result;
}

uint64_t sub_1C2B680AC()
{
  return sub_1C2B680E0(&qword_1EA32C530);
}

uint64_t sub_1C2B680E0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for MedicationVisualizationConfig(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for MedicationVisualizationConfigVersion(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C2B681C0);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicationVisualizationConfigVersion()
{
  return &type metadata for MedicationVisualizationConfigVersion;
}

uint64_t getEnumTagSinglePayload for MedicationVisualizationConfig(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, j____swift_get_extra_inhabitant_indexTm);
}

uint64_t storeEnumTagSinglePayload for MedicationVisualizationConfig(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, j____swift_store_extra_inhabitant_indexTm);
}

unsigned char *storeEnumTagSinglePayload for MedicationVisualizationConfig.MedicationVisualizationConfigV1.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C2B68310);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicationVisualizationConfig.MedicationVisualizationConfigV1.CodingKeys()
{
  return &type metadata for MedicationVisualizationConfig.MedicationVisualizationConfigV1.CodingKeys;
}

uint64_t *_s27HealthMedicationsExperience29MedicationVisualizationConfigVwCP_0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    uint64_t *v3 = *a2;
    int v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    a1[1] = a2[1];
    uint64_t v5 = *(int *)(a3 + 24);
    unsigned int v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    sub_1C2B67E04(0, (unint64_t *)&qword_1EBF10D28, &qword_1EBF10D30, 0x1E4FB1618, MEMORY[0x1E4F29518]);
    uint64_t v9 = v8;
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v6, v7, v9);
  }
  return v3;
}

uint64_t _s27HealthMedicationsExperience29MedicationVisualizationConfigVwxx_0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  sub_1C2B67E04(0, (unint64_t *)&qword_1EBF10D28, &qword_1EBF10D30, 0x1E4FB1618, MEMORY[0x1E4F29518]);
  unsigned int v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t _s27HealthMedicationsExperience29MedicationVisualizationConfigVwcp_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  sub_1C2B67E04(0, (unint64_t *)&qword_1EBF10D28, &qword_1EBF10D30, 0x1E4FB1618, MEMORY[0x1E4F29518]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v5, v6, v8);
  return a1;
}

uint64_t _s27HealthMedicationsExperience29MedicationVisualizationConfigVwca_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  sub_1C2B67E04(0, (unint64_t *)&qword_1EBF10D28, &qword_1EBF10D30, 0x1E4FB1618, MEMORY[0x1E4F29518]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t _s27HealthMedicationsExperience29MedicationVisualizationConfigVwtk_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  sub_1C2B67E04(0, (unint64_t *)&qword_1EBF10D28, &qword_1EBF10D30, 0x1E4FB1618, MEMORY[0x1E4F29518]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t _s27HealthMedicationsExperience29MedicationVisualizationConfigVwta_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  sub_1C2B67E04(0, (unint64_t *)&qword_1EBF10D28, &qword_1EBF10D30, 0x1E4FB1618, MEMORY[0x1E4F29518]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_1C2B6880C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C2B68820);
}

uint64_t __swift_get_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1C2B67E04(0, (unint64_t *)&qword_1EBF10D28, &qword_1EBF10D30, 0x1E4FB1618, MEMORY[0x1E4F29518]);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C2B68900(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C2B68914);
}

uint64_t __swift_store_extra_inhabitant_indexTm(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1C2B67E04(0, (unint64_t *)&qword_1EBF10D28, &qword_1EBF10D30, 0x1E4FB1618, MEMORY[0x1E4F29518]);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1C2B689EC()
{
  sub_1C2B67E04(319, (unint64_t *)&qword_1EBF10D28, &qword_1EBF10D30, 0x1E4FB1618, MEMORY[0x1E4F29518]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_1C2B68ACC()
{
  unint64_t result = qword_1EA32C548;
  if (!qword_1EA32C548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA32C548);
  }
  return result;
}

unint64_t sub_1C2B68B24()
{
  unint64_t result = qword_1EBF11150;
  if (!qword_1EBF11150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBF11150);
  }
  return result;
}

unint64_t sub_1C2B68B7C()
{
  unint64_t result = qword_1EBF11148;
  if (!qword_1EBF11148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBF11148);
  }
  return result;
}

uint64_t sub_1C2B68BD0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D614E6570616873 && a2 == 0xE900000000000065;
  if (v2 || (sub_1C2B74B50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E656D67617266 && a2 == 0xEF73726F6C6F4373 || (sub_1C2B74B50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x756F72676B636162 && a2 == 0xEF726F6C6F43646ELL || (sub_1C2B74B50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x56746E6572727563 && a2 == 0xEE006E6F69737265)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1C2B74B50();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

void sub_1C2B68E04(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C2B67E6C();
    unint64_t v7 = a3(a1, &type metadata for MedicationVisualizationConfig.MedicationVisualizationConfigV1.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C2B68E68(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C2B67E04(255, (unint64_t *)&qword_1EBF10D28, &qword_1EBF10D30, 0x1E4FB1618, MEMORY[0x1E4F29518]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C2B68ED8()
{
  unint64_t result = qword_1EA32C558;
  if (!qword_1EA32C558)
  {
    sub_1C2B67EC0(255, &qword_1EA32C508, MEMORY[0x1E4FBAEA0]);
    sub_1C2B68FA4();
    sub_1C2B68FF8(&qword_1EA32C560, &qword_1EA32C550);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA32C558);
  }
  return result;
}

unint64_t sub_1C2B68FA4()
{
  unint64_t result = qword_1EBF111D8[0];
  if (!qword_1EBF111D8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EBF111D8);
  }
  return result;
}

uint64_t sub_1C2B68FF8(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C2B027C8();
    sub_1C2B68E68(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C2B69074()
{
  if (!qword_1EA32C568)
  {
    sub_1C2B027C8();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA32C568);
    }
  }
}

void sub_1C2B690D8()
{
  if (!qword_1EA32C298)
  {
    sub_1C2AE86D4();
    unint64_t v0 = sub_1C2B74630();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA32C298);
    }
  }
}

uint64_t sub_1C2B69130(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C2B69198(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C2B691F8(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C2B67E04(255, (unint64_t *)&qword_1EBF10D28, &qword_1EBF10D30, 0x1E4FB1618, MEMORY[0x1E4F29518]);
    sub_1C2B67C40(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C2B692A0()
{
  if (!qword_1EA32C578)
  {
    sub_1C2B027C8();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA32C578);
    }
  }
}

uint64_t sub_1C2B69308(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t MedicationsExperienceStore.__allocating_init(healthStore:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  MedicationsExperienceStore.init(healthStore:)(a1);
  return v2;
}

void *MedicationsExperienceStore.init(healthStore:)(uint64_t a1)
{
  sub_1C2ADF050(0, &qword_1EBF0FFF0, MEMORY[0x1E4F67810]);
  swift_allocObject();
  v1[3] = sub_1C2B73950();
  sub_1C2B69E84(0, &qword_1EBF10000, &qword_1EBF10030);
  swift_allocObject();
  v1[4] = sub_1C2B73950();
  sub_1C2B69E84(0, &qword_1EBF0FFF8, &qword_1EBF10020);
  swift_allocObject();
  v1[5] = sub_1C2B73950();
  sub_1C2ADF050(0, (unint64_t *)&qword_1EBF0FFE8, MEMORY[0x1E4F677E8]);
  swift_allocObject();
  v1[6] = sub_1C2B73950();
  sub_1C2B69E84(0, &qword_1EBF10008, &qword_1EBF10028);
  swift_allocObject();
  v1[7] = sub_1C2B73950();
  sub_1C2B69E84(0, &qword_1EBF10010, &qword_1EBF10038);
  swift_allocObject();
  v1[8] = sub_1C2B73950();
  sub_1C2ADF050(0, qword_1EBF10068, (void (*)(uint64_t))type metadata accessor for HealthStoreTimeZoneProvider);
  swift_allocObject();
  v1[9] = sub_1C2B73950();
  sub_1C2ADF050(0, (unint64_t *)&unk_1EBF10138, (void (*)(uint64_t))type metadata accessor for MedicationsScheduleIncompatibilityCache);
  swift_allocObject();
  v1[10] = sub_1C2B73950();
  v1[2] = a1;
  return v1;
}

uint64_t sub_1C2B69674()
{
  return sub_1C2ADEFB0(&qword_1EBF0FFF0, MEMORY[0x1E4F67810]);
}

void *sub_1C2B696A4()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B0B8]), sel_init);
  type metadata accessor for MedicationsExperienceStore();
  uint64_t v1 = (void *)swift_allocObject();
  uint64_t result = MedicationsExperienceStore.init(healthStore:)((uint64_t)v0);
  off_1EBF10E78 = v1;
  return result;
}

uint64_t sub_1C2B69700@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  sub_1C2B73A60();
  id v4 = *(id *)(v3 + 16);
  uint64_t result = sub_1C2B73A50();
  *a2 = result;
  return result;
}

uint64_t MedicationsExperienceStore.userDomainConceptStore.getter()
{
  sub_1C2B69E84(0, &qword_1EBF10000, &qword_1EBF10030);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1C2B73920();
  swift_release();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1C2B697F8@<X0>(void *a1@<X8>)
{
  sub_1C2B69E84(0, &qword_1EBF10000, &qword_1EBF10030);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1C2B73920();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1C2B698B8(void **a1)
{
  uint64_t v1 = *a1;
  sub_1C2B69E84(0, &qword_1EBF10000, &qword_1EBF10030);
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = v1;
  swift_retain();
  return sub_1C2B73930();
}

uint64_t MedicationsExperienceStore.userDomainConceptStore.setter()
{
  return sub_1C2B73930();
}

uint64_t (*MedicationsExperienceStore.userDomainConceptStore.modify(void *a1))()
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  sub_1C2B69E84(0, &qword_1EBF10000, &qword_1EBF10030);
  v3[5] = swift_getKeyPath();
  v3[6] = swift_getKeyPath();
  long long v3[4] = v1;
  swift_retain();
  uint64_t v3[7] = sub_1C2B73910();
  return sub_1C2B69AD4;
}

id sub_1C2B69AD8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1C2B6A888(a1, (Class *)0x1E4F2B688, a2);
}

uint64_t MedicationsExperienceStore.ontologyStore.getter()
{
  sub_1C2B69E84(0, &qword_1EBF0FFF8, &qword_1EBF10020);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1C2B73920();
  swift_release();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1C2B69B94@<X0>(void *a1@<X8>)
{
  sub_1C2B69E84(0, &qword_1EBF0FFF8, &qword_1EBF10020);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1C2B73920();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1C2B69C54(void **a1)
{
  uint64_t v1 = *a1;
  sub_1C2B69E84(0, &qword_1EBF0FFF8, &qword_1EBF10020);
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = v1;
  swift_retain();
  return sub_1C2B73930();
}

uint64_t MedicationsExperienceStore.ontologyStore.setter()
{
  return sub_1C2B73930();
}

uint64_t (*MedicationsExperienceStore.ontologyStore.modify(void *a1))()
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  sub_1C2B69E84(0, &qword_1EBF0FFF8, &qword_1EBF10020);
  v3[5] = swift_getKeyPath();
  v3[6] = swift_getKeyPath();
  long long v3[4] = v1;
  swift_retain();
  uint64_t v3[7] = sub_1C2B73910();
  return sub_1C2B69AD4;
}

id sub_1C2B69E70@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1C2B6A888(a1, (Class *)0x1E4F2B300, a2);
}

void sub_1C2B69E84(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    type metadata accessor for MedicationsExperienceStore();
    sub_1C2AE3A18(255, a3);
    unint64_t v5 = sub_1C2B73940();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t MedicationsExperienceStore.listManager.setter(uint64_t a1)
{
  return sub_1C2B6AC08(a1, (unint64_t *)&qword_1EBF0FFE8, MEMORY[0x1E4F677E8]);
}

uint64_t (*MedicationsExperienceStore.listManager.modify(void *a1))()
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  sub_1C2ADF050(0, (unint64_t *)&qword_1EBF0FFE8, MEMORY[0x1E4F677E8]);
  v3[5] = swift_getKeyPath();
  v3[6] = swift_getKeyPath();
  long long v3[4] = v1;
  swift_retain();
  uint64_t v3[7] = sub_1C2B73910();
  return sub_1C2B69AD4;
}

uint64_t sub_1C2B6A00C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *(void **)(*(void *)a1 + 16);
  sub_1C2ADF050(0, &qword_1EBF0FFF0, MEMORY[0x1E4F67810]);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1C2B73920();
  swift_release();
  swift_release();
  swift_release();
  id v4 = v3;
  id v5 = (id)HKStringFromListUserDomainType();
  sub_1C2B73FA0();

  sub_1C2B372FC();
  sub_1C2B73A20();
  swift_allocObject();
  uint64_t result = sub_1C2B73A00();
  *a2 = result;
  return result;
}

uint64_t MedicationsExperienceStore.medicationControl.getter()
{
  sub_1C2B69E84(0, &qword_1EBF10008, &qword_1EBF10028);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1C2B73920();
  swift_release();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1C2B6A208@<X0>(void *a1@<X8>)
{
  sub_1C2B69E84(0, &qword_1EBF10008, &qword_1EBF10028);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1C2B73920();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1C2B6A2C8(void **a1)
{
  uint64_t v1 = *a1;
  sub_1C2B69E84(0, &qword_1EBF10008, &qword_1EBF10028);
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = v1;
  swift_retain();
  return sub_1C2B73930();
}

uint64_t MedicationsExperienceStore.medicationControl.setter()
{
  return sub_1C2B73930();
}

uint64_t (*MedicationsExperienceStore.medicationControl.modify(void *a1))()
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  sub_1C2B69E84(0, &qword_1EBF10008, &qword_1EBF10028);
  v3[5] = swift_getKeyPath();
  v3[6] = swift_getKeyPath();
  long long v3[4] = v1;
  swift_retain();
  uint64_t v3[7] = sub_1C2B73910();
  return sub_1C2B69AD4;
}

id sub_1C2B6A4E4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1C2B6A888(a1, (Class *)0x1E4F66AE8, a2);
}

uint64_t MedicationsExperienceStore.scheduleControl.getter()
{
  sub_1C2B69E84(0, &qword_1EBF10010, &qword_1EBF10038);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1C2B73920();
  swift_release();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1C2B6A5A0@<X0>(void *a1@<X8>)
{
  sub_1C2B69E84(0, &qword_1EBF10010, &qword_1EBF10038);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1C2B73920();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1C2B6A660(void **a1)
{
  uint64_t v1 = *a1;
  sub_1C2B69E84(0, &qword_1EBF10010, &qword_1EBF10038);
  swift_getKeyPath();
  swift_getKeyPath();
  id v2 = v1;
  swift_retain();
  return sub_1C2B73930();
}

uint64_t MedicationsExperienceStore.scheduleControl.setter()
{
  return sub_1C2B73930();
}

uint64_t (*MedicationsExperienceStore.scheduleControl.modify(void *a1))()
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  sub_1C2B69E84(0, &qword_1EBF10010, &qword_1EBF10038);
  v3[5] = swift_getKeyPath();
  v3[6] = swift_getKeyPath();
  long long v3[4] = v1;
  swift_retain();
  uint64_t v3[7] = sub_1C2B73910();
  return sub_1C2B69AD4;
}

id sub_1C2B6A87C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1C2B6A888(a1, (Class *)0x1E4F66B38, a2);
}

id sub_1C2B6A888@<X0>(uint64_t a1@<X0>, Class *a2@<X1>, void *a3@<X8>)
{
  id result = objc_msgSend(objc_allocWithZone(*a2), sel_initWithHealthStore_, *(void *)(*(void *)a1 + 16));
  *a3 = result;
  return result;
}

uint64_t MedicationsExperienceStore.timeZoneProvider.getter()
{
  return sub_1C2ADEFB0(qword_1EBF10068, (void (*)(uint64_t))type metadata accessor for HealthStoreTimeZoneProvider);
}

uint64_t sub_1C2B6A8FC@<X0>(void *a1@<X8>)
{
  return sub_1C2B6AF20(qword_1EBF10068, (void (*)(uint64_t))type metadata accessor for HealthStoreTimeZoneProvider, a1);
}

uint64_t sub_1C2B6A92C()
{
  return sub_1C2B73930();
}

uint64_t MedicationsExperienceStore.timeZoneProvider.setter(uint64_t a1)
{
  return sub_1C2B6AC08(a1, qword_1EBF10068, (void (*)(uint64_t))type metadata accessor for HealthStoreTimeZoneProvider);
}

uint64_t (*MedicationsExperienceStore.timeZoneProvider.modify(void *a1))()
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  sub_1C2ADF050(0, qword_1EBF10068, (void (*)(uint64_t))type metadata accessor for HealthStoreTimeZoneProvider);
  v3[5] = swift_getKeyPath();
  v3[6] = swift_getKeyPath();
  long long v3[4] = v1;
  swift_retain();
  uint64_t v3[7] = sub_1C2B73910();
  return sub_1C2B69AD4;
}

void sub_1C2B6AAE8(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void **)(*(void *)a1 + 16);
  type metadata accessor for HealthStoreTimeZoneProvider();
  swift_allocObject();
  id v4 = v3;
  id v5 = sub_1C2B58AA0(v4);

  *a2 = v5;
}

uint64_t MedicationsExperienceStore.scheduleIncompatibilityCache.getter()
{
  return sub_1C2ADEFB0((unint64_t *)&unk_1EBF10138, (void (*)(uint64_t))type metadata accessor for MedicationsScheduleIncompatibilityCache);
}

uint64_t sub_1C2B6AB78@<X0>(void *a1@<X8>)
{
  return sub_1C2B6AF20((unint64_t *)&unk_1EBF10138, (void (*)(uint64_t))type metadata accessor for MedicationsScheduleIncompatibilityCache, a1);
}

uint64_t sub_1C2B6ABA8(void **a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2B6AFD4(a1, a2, a3, a4, (unint64_t *)&unk_1EBF10138, (void (*)(uint64_t))type metadata accessor for MedicationsScheduleIncompatibilityCache);
}

uint64_t MedicationsExperienceStore.scheduleIncompatibilityCache.setter(uint64_t a1)
{
  return sub_1C2B6AC08(a1, (unint64_t *)&unk_1EBF10138, (void (*)(uint64_t))type metadata accessor for MedicationsScheduleIncompatibilityCache);
}

uint64_t sub_1C2B6AC08(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  return sub_1C2B73930();
}

uint64_t (*MedicationsExperienceStore.scheduleIncompatibilityCache.modify(void *a1))()
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  sub_1C2ADF050(0, (unint64_t *)&unk_1EBF10138, (void (*)(uint64_t))type metadata accessor for MedicationsScheduleIncompatibilityCache);
  v3[5] = swift_getKeyPath();
  v3[6] = swift_getKeyPath();
  long long v3[4] = v1;
  swift_retain();
  uint64_t v3[7] = sub_1C2B73910();
  return sub_1C2B69AD4;
}

void sub_1C2B6AD6C(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 56))(*a1, 0);
  swift_release();
  swift_release();
  swift_release();
  free(v1);
}

char *sub_1C2B6ADDC@<X0>(uint64_t a1@<X0>, char **a2@<X8>)
{
  uint64_t v3 = *(void **)(*(void *)a1 + 16);
  id v4 = objc_allocWithZone((Class)type metadata accessor for MedicationsScheduleIncompatibilityCache());
  id result = MedicationsScheduleIncompatibilityCache.init(healthStore:)(v3);
  *a2 = result;
  return result;
}

uint64_t MedicationsExperienceStore.deinit()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t MedicationsExperienceStore.__deallocating_deinit()
{
  MedicationsExperienceStore.deinit();
  return swift_deallocClassInstance();
}

uint64_t method lookup function for MedicationsExperienceStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationsExperienceStore);
}

uint64_t dispatch thunk of MedicationsExperienceStore.__allocating_init(healthStore:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t sub_1C2B6AF20@<X0>(unint64_t *a1@<X3>, void (*a2)(uint64_t)@<X4>, void *a3@<X8>)
{
  sub_1C2ADF050(0, a1, a2);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1C2B73920();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  *a3 = v5;
  return result;
}

uint64_t sub_1C2B6AFD4(void **a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5, void (*a6)(uint64_t))
{
  uint64_t v6 = *a1;
  sub_1C2ADF050(0, a5, a6);
  swift_getKeyPath();
  swift_getKeyPath();
  id v7 = v6;
  swift_retain();
  return sub_1C2B73930();
}

uint64_t sub_1C2B6B06C@<X0>(void *a1@<X8>)
{
  return sub_1C2B6AF20(&qword_1EBF0FFF0, MEMORY[0x1E4F67810], a1);
}

uint64_t sub_1C2B6B0B0(void **a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C2B6AFD4(a1, a2, a3, a4, &qword_1EBF0FFF0, MEMORY[0x1E4F67810]);
}

void sub_1C2B6B198(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  uint64_t v9 = sub_1C2B738B0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (objc_class *)type metadata accessor for MedicationGradientBackground();
  v25.receiver = v4;
  v25.super_class = v13;
  objc_msgSendSuper2(&v25, sel_drawRect_, a1, a2, a3, a4);
  uint64_t v14 = UIGraphicsGetCurrentContext();
  if (v14)
  {
    uint64_t v15 = v14;
    sub_1C2AE7E34();
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1C2B76A80;
    id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithWhite_alpha_, 0.6, 1.0);
    id v18 = objc_msgSend(v17, sel_CGColor);

    *(void *)(v16 + 32) = v18;
    id v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1618]), sel_initWithWhite_alpha_, 0.4, 1.0);
    id v20 = objc_msgSend(v19, sel_CGColor);

    *(void *)(v16 + 40) = v20;
    v24[1] = v16;
    sub_1C2B741F0();
    DeviceRGB = CGColorSpaceCreateDeviceRGB();
    type metadata accessor for CGColor(0);
    CFArrayRef v22 = (const __CFArray *)sub_1C2B741C0();
    swift_bridgeObjectRelease();
    uint64_t v23 = CGGradientCreateWithColors(DeviceRGB, v22, dbl_1F1DF9C20);

    if (v23)
    {
      CGContextSetBlendMode(v15, kCGBlendModeOverlay);
      (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E4F1DA40], v9);
      sub_1C2B74490();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      v28.origin.x = a1;
      v28.origin.y = a2;
      v28.size.width = a3;
      v28.size.height = a4;
      v27.y = CGRectGetHeight(v28);
      v26.x = 0.0;
      v26.y = 0.0;
      v27.x = 0.0;
      CGContextDrawLinearGradient(v15, v23, v26, v27, 3u);
      CGContextRestoreGState(v15);
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t type metadata accessor for MedicationGradientBackground()
{
  return self;
}

id MedicationGradientBackground.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicationGradientBackground();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C2B6B584(uint64_t a1)
{
  id v2 = (id)HKLogMedication();
  if (qword_1EBF10BE0 != -1) {
    swift_once();
  }
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2ABE8]), sel_initWithLoggingCategory_healthDataSource_, v2, *((void *)off_1EBF10E78 + 2));

  uint64_t v4 = sub_1C2B6BC18(a1);
  uint64_t v5 = *(void *)(a1 + 136);
  uint64_t v6 = *(void *)(a1 + 80);
  swift_beginAccess();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v11 = *(void *)(v5 + 32);
  *(void *)(v5 + 32) = 0x8000000000000000;
  sub_1C2B01958(0, v6, isUniquelyReferenced_nonNull_native);
  *(void *)(v5 + 32) = v11;
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_release();
  aBlock[4] = sub_1C2B6BD54;
  aBlock[5] = a1;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1C2AF5204;
  aBlock[3] = &block_descriptor_15;
  uint64_t v8 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v3, sel_submitEvent_completion_, v4, v8);
  _Block_release(v8);

  return swift_release_n();
}

void sub_1C2B6B764(char a1, void *a2, uint64_t a3)
{
  v24[1] = *MEMORY[0x1E4F143B8];
  if (a1)
  {
    if (qword_1EBF11340 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_1C2B73A90();
    __swift_project_value_buffer(v4, (uint64_t)qword_1EBF11348);
    swift_retain();
    uint64_t v5 = sub_1C2B73A80();
    os_log_type_t v6 = sub_1C2B744E0();
    if (os_log_type_enabled(v5, v6))
    {
      id v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v8 = swift_slowAlloc();
      v24[0] = v8;
      *(_DWORD *)id v7 = 136315138;
      uint64_t v9 = *(void *)(a3 + 32);
      unint64_t v10 = *(void *)(a3 + 40);
      swift_bridgeObjectRetain();
      sub_1C2AEEE6C(v9, v10, v24);
      sub_1C2B74650();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C2ADB000, v5, v6, "[MedicationListOnboardingAnalytics] Successfully submitted analytics for step: %s", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C8767A10](v8, -1, -1);
      MEMORY[0x1C8767A10](v7, -1, -1);
    }
    else
    {

      swift_release();
    }
  }
  else
  {
    if (qword_1EBF11340 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_1C2B73A90();
    __swift_project_value_buffer(v12, (uint64_t)qword_1EBF11348);
    swift_retain();
    id v13 = a2;
    swift_retain();
    id v14 = a2;
    oslog = sub_1C2B73A80();
    os_log_type_t v15 = sub_1C2B744C0();
    if (os_log_type_enabled(oslog, v15))
    {
      uint64_t v16 = swift_slowAlloc();
      id v17 = (void *)swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      v24[0] = v18;
      *(_DWORD *)uint64_t v16 = 136315394;
      uint64_t v19 = *(void *)(a3 + 32);
      unint64_t v20 = *(void *)(a3 + 40);
      swift_bridgeObjectRetain();
      sub_1C2AEEE6C(v19, v20, v24);
      sub_1C2B74650();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2112;
      if (a2)
      {
        id v21 = a2;
        uint64_t v22 = _swift_stdlib_bridgeErrorToNSError();
        sub_1C2B74650();
      }
      else
      {
        sub_1C2B74650();
        uint64_t v22 = 0;
      }
      *id v17 = v22;

      _os_log_impl(&dword_1C2ADB000, oslog, v15, "[MedicationListOnboardingAnalytics] Failed to submit analytics for step: %s with error: %@.", (uint8_t *)v16, 0x16u);
      sub_1C2AF5550();
      swift_arrayDestroy();
      MEMORY[0x1C8767A10](v17, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1C8767A10](v18, -1, -1);
      MEMORY[0x1C8767A10](v16, -1, -1);
    }
    else
    {
      swift_release_n();
    }
  }
}

uint64_t MedicationListOnboardingAnalytics.deinit()
{
  return v0;
}

uint64_t MedicationListOnboardingAnalytics.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1C2B6BC18(uint64_t a1)
{
  uint64_t v21 = *(void *)(a1 + 80);
  uint64_t v22 = *(void *)(a1 + 72);
  uint64_t v20 = *(void *)(a1 + 88);
  char v19 = *(unsigned char *)(a1 + 96);
  char v18 = *(unsigned char *)(a1 + 64);
  uint64_t v17 = *(void *)(a1 + 104);
  char v16 = *(unsigned char *)(a1 + 112);
  uint64_t v15 = *(void *)(a1 + 168);
  char v14 = *(unsigned char *)(a1 + 176);
  uint64_t v13 = *(void *)(a1 + 200);
  char v1 = *(unsigned char *)(a1 + 208);
  uint64_t v2 = *(void *)(a1 + 184);
  char v3 = *(unsigned char *)(a1 + 192);
  char v4 = *(unsigned char *)(a1 + 209);
  uint64_t v5 = *(void *)(a1 + 120);
  char v6 = *(unsigned char *)(a1 + 128);
  char v7 = *(unsigned char *)(a1 + 66);
  uint64_t v8 = *(void *)(a1 + 232);
  char v9 = *(unsigned char *)(a1 + 240);
  char v10 = *(unsigned char *)(a1 + 241);
  char v12 = *(unsigned char *)(a1 + 160);
  type metadata accessor for MedicationListOnboardingEvent();
  swift_allocObject();
  return sub_1C2B35E50(v22, v21, v20, v19, v18, v17, v16, v12, v15, v14, v13, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10);
}

void sub_1C2B6BD54(char a1, void *a2)
{
  sub_1C2B6B764(a1, a2, v2);
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

uint64_t type metadata accessor for MedicationListOnboardingAnalytics()
{
  return self;
}

uint64_t method lookup function for MedicationListOnboardingAnalytics(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationListOnboardingAnalytics);
}

uint64_t dispatch thunk of static MedicationListOnboardingAnalytics.submitListOnboardingMetric(metric:)()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t sub_1C2B6BDC4()
{
  uint64_t result = sub_1C2B73FA0();
  qword_1EBF0FF78 = result;
  unk_1EBF0FF80 = v1;
  return result;
}

uint64_t static HKKeyValueDomain.medicationsDomainName.getter()
{
  return sub_1C2AE0BB8(&qword_1EBF0FF88, &qword_1EBF0FF78);
}

id sub_1C2B6BE1C(void *a1)
{
  uint64_t v2 = *MEMORY[0x1E4F669C0];
  if (qword_1EBF0FF88 != -1) {
    swift_once();
  }
  id v3 = objc_allocWithZone(MEMORY[0x1E4F2B138]);
  swift_bridgeObjectRetain();
  id v4 = a1;
  uint64_t v5 = (void *)sub_1C2B73F60();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v3, sel_initWithCategory_domainName_healthStore_, v2, v5, v4);

  return v6;
}

id (*static HKKeyValueDomain.medications.getter())(void *a1)
{
  return sub_1C2B6BE1C;
}

uint64_t sub_1C2B6BF14()
{
  uint64_t result = sub_1C2B73FA0();
  qword_1EBF0FF90 = result;
  *(void *)algn_1EBF0FF98 = v1;
  return result;
}

uint64_t static HKKeyValueDomain.alcoholDrugInteractionFactorEnableKey.getter()
{
  return sub_1C2AE0BB8(&qword_1EBF0FFA0, &qword_1EBF0FF90);
}

uint64_t sub_1C2B6BF6C()
{
  uint64_t result = sub_1C2B73FA0();
  qword_1EBF0FFC8 = result;
  unk_1EBF0FFD0 = v1;
  return result;
}

uint64_t static HKKeyValueDomain.marijuanaDrugInteractionFactorEnableKey.getter()
{
  return sub_1C2AE0BB8(&qword_1EBF0FFD8, &qword_1EBF0FFC8);
}

uint64_t sub_1C2B6BFC4()
{
  uint64_t result = sub_1C2B73FA0();
  qword_1EBF0FFA8 = result;
  *(void *)algn_1EBF0FFB0 = v1;
  return result;
}

uint64_t static HKKeyValueDomain.tobaccoDrugInteractionFactorEnableKey.getter()
{
  return sub_1C2AE0BB8(&qword_1EBF0FFC0, &qword_1EBF0FFA8);
}

uint64_t sub_1C2B6C01C()
{
  uint64_t result = sub_1C2B73FA0();
  qword_1EA32C580 = result;
  *(void *)algn_1EA32C588 = v1;
  return result;
}

uint64_t static HKKeyValueDomain.incompatibilityCacheKey.getter()
{
  return sub_1C2AE0BB8(&qword_1EA32B668, &qword_1EA32C580);
}

id MedicationScheduleItemDose.scheduleItemDose.getter()
{
  return *v0;
}

uint64_t MedicationScheduleItemDose.scheduleItemIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

id MedicationScheduleItemDose.medication.getter()
{
  return *(id *)(v0 + 24);
}

uint64_t MedicationScheduleItemDose.init(_:scheduleItemIdentifier:medication:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

id MedicationScheduleItem.scheduleItem.getter()
{
  return *(id *)(v0 + 16);
}

uint64_t MedicationScheduleItem.scheduleItemDoses.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MedicationScheduleItem.__allocating_init(_:scheduleItemDoses:)(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = a2;
  return result;
}

uint64_t MedicationScheduleItem.init(_:scheduleItemDoses:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return v2;
}

uint64_t MedicationScheduleItem.description.getter()
{
  sub_1C2B74820();
  swift_bridgeObjectRelease();
  strcpy((char *)v5, "scheduleItem: ");
  HIBYTE(v5[1]) = -18;
  id v1 = *(id *)(v0 + 16);
  id v2 = objc_msgSend(v1, sel_description);
  sub_1C2B73FA0();

  sub_1C2B740A0();
  swift_bridgeObjectRelease();
  sub_1C2B740A0();
  uint64_t v3 = swift_bridgeObjectRetain();
  MEMORY[0x1C8766620](v3, &type metadata for MedicationScheduleItemDose);
  swift_bridgeObjectRelease();
  sub_1C2B740A0();
  swift_bridgeObjectRelease();
  return v5[0];
}

uint64_t MedicationScheduleItem.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MedicationScheduleItem.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C2B6C2B8()
{
  return MedicationScheduleItem.description.getter();
}

uint64_t static MedicationScheduleItem.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_1C2AF55A8();
  if ((sub_1C2B745F0() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(a2 + 24);
  return sub_1C2B1AB60(v4, v5);
}

uint64_t sub_1C2B6C350(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  sub_1C2AF55A8();
  if ((sub_1C2B745F0() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = *(void *)(v2 + 24);
  uint64_t v5 = *(void *)(v3 + 24);
  return sub_1C2B1AB60(v4, v5);
}

uint64_t _s27HealthMedicationsExperience26MedicationScheduleItemDoseV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v4 = (void *)a1[3];
  uint64_t v5 = a2[1];
  uint64_t v6 = a2[2];
  char v7 = (void *)a2[3];
  sub_1C2AF55A8();
  if ((sub_1C2B745F0() & 1) == 0) {
    return 0;
  }
  BOOL v8 = v2 == v5 && v3 == v6;
  if (!v8 && (sub_1C2B74B50() & 1) == 0) {
    return 0;
  }
  id v9 = v4;
  id v10 = v7;
  char v11 = sub_1C2B745F0();

  return v11 & 1;
}

void destroy for MedicationScheduleItemDose(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 24);
}

void *initializeWithCopy for MedicationScheduleItemDose(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  uint64_t v5 = *(void **)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v5;
  id v6 = v3;
  swift_bridgeObjectRetain();
  id v7 = v5;
  return a1;
}

uint64_t assignWithCopy for MedicationScheduleItemDose(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v7 = *(void **)(a2 + 24);
  BOOL v8 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v7;
  id v9 = v7;

  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t assignWithTake for MedicationScheduleItemDose(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  return a1;
}

uint64_t getEnumTagSinglePayload for MedicationScheduleItemDose(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MedicationScheduleItemDose(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicationScheduleItemDose()
{
  return &type metadata for MedicationScheduleItemDose;
}

uint64_t type metadata accessor for MedicationScheduleItem()
{
  return self;
}

uint64_t method lookup function for MedicationScheduleItem(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationScheduleItem);
}

uint64_t dispatch thunk of MedicationScheduleItem.__allocating_init(_:scheduleItemDoses:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t MedicationVisualizationFragment.FragmentModification.hash(into:)()
{
  uint64_t v1 = v0[1];
  if (v1 == 1) {
    return sub_1C2B74C30();
  }
  uint64_t v3 = *v0;
  sub_1C2B74C30();
  if (!v1) {
    return sub_1C2B74C40();
  }
  sub_1C2B74C40();
  swift_bridgeObjectRetain();
  sub_1C2B74070();
  return sub_1C2B027B4(v3, v1);
}

BOOL sub_1C2B6C784(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1C2B6C7A4()
{
  if (*v0) {
    return 1701736302;
  }
  else {
    return 0x726F6C6F63;
  }
}

uint64_t sub_1C2B6C7D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C2B6F024(a1, a2);
  *a3 = result;
  return result;
}

void sub_1C2B6C7FC(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1C2B6C808(uint64_t a1)
{
  unint64_t v2 = sub_1C2B6DFE8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C2B6C844(uint64_t a1)
{
  unint64_t v2 = sub_1C2B6DFE8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C2B6C880()
{
  return 0x4E79616C70736964;
}

uint64_t sub_1C2B6C8A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x4E79616C70736964 && a2 == 0xEB00000000656D61)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1C2B74B50();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

void sub_1C2B6C950(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1C2B6C95C(uint64_t a1)
{
  unint64_t v2 = sub_1C2B6DF94();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C2B6C998(uint64_t a1)
{
  unint64_t v2 = sub_1C2B6DF94();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C2B6C9D4()
{
  return 0;
}

uint64_t sub_1C2B6C9E0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_1C2B6CA10(uint64_t a1)
{
  unint64_t v2 = sub_1C2B6DF40();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C2B6CA4C(uint64_t a1)
{
  unint64_t v2 = sub_1C2B6DF40();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t MedicationVisualizationFragment.FragmentModification.encode(to:)(void *a1)
{
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBBDE0];
  sub_1C2B6E20C(0, &qword_1EA32C590, (uint64_t (*)(void))sub_1C2B6DF40, (uint64_t)&type metadata for MedicationVisualizationFragment.FragmentModification.NoneCodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v23 = *(void *)(v4 - 8);
  uint64_t v24 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v20 = (char *)&v19 - v5;
  sub_1C2B6E20C(0, &qword_1EA32C598, (uint64_t (*)(void))sub_1C2B6DF94, (uint64_t)&type metadata for MedicationVisualizationFragment.FragmentModification.ColorCodingKeys, v3);
  uint64_t v21 = *(void *)(v6 - 8);
  uint64_t v22 = v6;
  MEMORY[0x1F4188790](v6);
  BOOL v8 = (char *)&v19 - v7;
  sub_1C2B6E20C(0, &qword_1EA32C5A0, (uint64_t (*)(void))sub_1C2B6DFE8, (uint64_t)&type metadata for MedicationVisualizationFragment.FragmentModification.CodingKeys, v3);
  uint64_t v25 = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  char v12 = (char *)&v19 - v11;
  uint64_t v13 = v1[1];
  uint64_t v19 = *v1;
  __swift_project_boxed_opaque_existential_0(a1, a1[3]);
  sub_1C2B6DFE8();
  sub_1C2B74C90();
  if (v13 == 1)
  {
    char v27 = 1;
    sub_1C2B6DF40();
    char v14 = v20;
    uint64_t v15 = v25;
    sub_1C2B74AA0();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v14, v24);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v15);
  }
  else
  {
    char v26 = 0;
    sub_1C2B6DF94();
    uint64_t v17 = v25;
    sub_1C2B74AA0();
    uint64_t v18 = v22;
    sub_1C2B74AB0();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v18);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v17);
  }
}

uint64_t MedicationVisualizationFragment.FragmentModification.hashValue.getter()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  sub_1C2B74C20();
  if (v1 == 1)
  {
    sub_1C2B74C30();
  }
  else
  {
    sub_1C2B74C30();
    sub_1C2B74C40();
    if (v1)
    {
      swift_bridgeObjectRetain();
      sub_1C2B74070();
      sub_1C2B027B4(v2, v1);
    }
  }
  return sub_1C2B74C60();
}

uint64_t MedicationVisualizationFragment.FragmentModification.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v33 = a2;
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBBDC0];
  sub_1C2B6E20C(0, &qword_1EBF112F8, (uint64_t (*)(void))sub_1C2B6DF40, (uint64_t)&type metadata for MedicationVisualizationFragment.FragmentModification.NoneCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v31 = v4;
  uint64_t v36 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  int64_t v35 = (char *)&v30 - v5;
  sub_1C2B6E20C(0, &qword_1EBF11300, (uint64_t (*)(void))sub_1C2B6DF94, (uint64_t)&type metadata for MedicationVisualizationFragment.FragmentModification.ColorCodingKeys, v3);
  uint64_t v7 = v6;
  uint64_t v32 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v30 - v8;
  sub_1C2B6E20C(0, &qword_1EBF112F0, (uint64_t (*)(void))sub_1C2B6DFE8, (uint64_t)&type metadata for MedicationVisualizationFragment.FragmentModification.CodingKeys, v3);
  uint64_t v11 = v10;
  uint64_t v34 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v30 - v12;
  __swift_project_boxed_opaque_existential_0(a1, a1[3]);
  sub_1C2B6DFE8();
  char v14 = v37;
  sub_1C2B74C80();
  if (v14) {
    goto LABEL_7;
  }
  uint64_t v30 = v7;
  uint64_t v15 = v35;
  uint64_t v16 = v36;
  int64_t v37 = a1;
  uint64_t v17 = sub_1C2B74A90();
  if (*(void *)(v17 + 16) != 1)
  {
    uint64_t v20 = sub_1C2B74890();
    swift_allocError();
    uint64_t v22 = v21;
    sub_1C2B6E03C();
    *uint64_t v22 = &type metadata for MedicationVisualizationFragment.FragmentModification;
    sub_1C2B74A50();
    sub_1C2B74870();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v22, *MEMORY[0x1E4FBBA70], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v13, v11);
    a1 = v37;
LABEL_7:
    uint64_t v23 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_0(v23);
  }
  if (*(unsigned char *)(v17 + 32))
  {
    char v39 = 1;
    sub_1C2B6DF40();
    sub_1C2B74A40();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v15, v31);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v13, v11);
    uint64_t v18 = 0;
    uint64_t v19 = 1;
  }
  else
  {
    char v38 = 0;
    sub_1C2B6DF94();
    sub_1C2B74A40();
    uint64_t v25 = v30;
    uint64_t v18 = sub_1C2B74A60();
    char v26 = v9;
    uint64_t v27 = v34;
    uint64_t v19 = v28;
    (*(void (**)(char *, uint64_t))(v32 + 8))(v26, v25);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v13, v11);
  }
  uint64_t v29 = v33;
  *uint64_t v33 = v18;
  v29[1] = v19;
  uint64_t v23 = (uint64_t)v37;
  return __swift_destroy_boxed_opaque_existential_0(v23);
}

uint64_t sub_1C2B6D3C4()
{
  uint64_t v1 = v0[1];
  if (v1 == 1) {
    return sub_1C2B74C30();
  }
  uint64_t v3 = *v0;
  sub_1C2B74C30();
  if (!v1) {
    return sub_1C2B74C40();
  }
  sub_1C2B74C40();
  swift_bridgeObjectRetain();
  sub_1C2B74070();
  return sub_1C2B027B4(v3, v1);
}

uint64_t sub_1C2B6D468()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  sub_1C2B74C20();
  if (v1 == 1)
  {
    sub_1C2B74C30();
  }
  else
  {
    sub_1C2B74C30();
    sub_1C2B74C40();
    if (v1)
    {
      swift_bridgeObjectRetain();
      sub_1C2B74070();
      sub_1C2B027B4(v2, v1);
    }
  }
  return sub_1C2B74C60();
}

uint64_t sub_1C2B6D508@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return MedicationVisualizationFragment.FragmentModification.init(from:)(a1, a2);
}

uint64_t sub_1C2B6D520(void *a1)
{
  return MedicationVisualizationFragment.FragmentModification.encode(to:)(a1);
}

uint64_t MedicationVisualizationFragment.assetName.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MedicationVisualizationFragment.modification.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  *a1 = v2;
  a1[1] = v3;
  return sub_1C2AE8858(v2, v3);
}

BOOL MedicationVisualizationFragment.isColorable.getter()
{
  return *(void *)(v0 + 24) != 1;
}

uint64_t MedicationVisualizationFragment.displayName.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  if (v1 == 1) {
    uint64_t v2 = 0;
  }
  else {
    uint64_t v2 = *(void *)(v0 + 16);
  }
  sub_1C2AE8858(*(void *)(v0 + 16), v1);
  return v2;
}

uint64_t MedicationVisualizationFragment.hash(into:)()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  sub_1C2B74070();
  swift_bridgeObjectRelease();
  if (v2 == 1) {
    return sub_1C2B74C30();
  }
  sub_1C2B74C30();
  sub_1C2B74C40();
  if (v2)
  {
    swift_bridgeObjectRetain();
    sub_1C2B74070();
    uint64_t v4 = v1;
    uint64_t v5 = v2;
  }
  else
  {
    uint64_t v4 = v1;
    uint64_t v5 = 0;
  }
  return sub_1C2B027B4(v4, v5);
}

uint64_t sub_1C2B6D6A4()
{
  if (*v0) {
    return 0x6163696669646F6DLL;
  }
  else {
    return 0x6D614E7465737361;
  }
}

uint64_t sub_1C2B6D6EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C2B6F100(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C2B6D714(uint64_t a1)
{
  unint64_t v2 = sub_1C2B6E164();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C2B6D750(uint64_t a1)
{
  unint64_t v2 = sub_1C2B6E164();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t MedicationVisualizationFragment.encode(to:)(void *a1)
{
  sub_1C2B6E20C(0, &qword_1EA32C5B8, (uint64_t (*)(void))sub_1C2B6E164, (uint64_t)&type metadata for MedicationVisualizationFragment.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v11 - v6;
  uint64_t v8 = *(void *)(v1 + 16);
  uint64_t v12 = *(void *)(v1 + 24);
  uint64_t v13 = v8;
  __swift_project_boxed_opaque_existential_0(a1, a1[3]);
  sub_1C2B6E164();
  sub_1C2B74C90();
  LOBYTE(v15) = 0;
  uint64_t v9 = v14;
  sub_1C2B74AC0();
  if (!v9)
  {
    uint64_t v15 = v13;
    uint64_t v16 = v12;
    char v17 = 1;
    sub_1C2B6E1B8();
    sub_1C2B74AE0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t MedicationVisualizationFragment.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  sub_1C2B74C20();
  swift_bridgeObjectRetain();
  sub_1C2B74070();
  swift_bridgeObjectRelease();
  if (v2 == 1)
  {
    sub_1C2B74C30();
  }
  else
  {
    sub_1C2B74C30();
    sub_1C2B74C40();
    if (v2)
    {
      swift_bridgeObjectRetain();
      sub_1C2B74070();
      uint64_t v3 = v1;
      uint64_t v4 = v2;
    }
    else
    {
      uint64_t v3 = v1;
      uint64_t v4 = 0;
    }
    sub_1C2B027B4(v3, v4);
  }
  return sub_1C2B74C60();
}

uint64_t MedicationVisualizationFragment.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v18 = a2;
  sub_1C2B6E20C(0, &qword_1EBF11308, (uint64_t (*)(void))sub_1C2B6E164, (uint64_t)&type metadata for MedicationVisualizationFragment.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_0(a1, a1[3]);
  sub_1C2B6E164();
  sub_1C2B74C80();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  uint64_t v9 = v6;
  uint64_t v10 = v18;
  LOBYTE(v19) = 0;
  uint64_t v11 = sub_1C2B74A70();
  uint64_t v13 = v12;
  char v21 = 1;
  sub_1C2B6E274();
  swift_bridgeObjectRetain();
  sub_1C2B74A80();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  uint64_t v14 = v19;
  uint64_t v15 = v20;
  swift_bridgeObjectRetain();
  sub_1C2AE8858(v14, v15);
  swift_bridgeObjectRelease();
  *uint64_t v10 = v11;
  v10[1] = v13;
  void v10[2] = v14;
  v10[3] = v15;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  return sub_1C2B027B4(v14, v15);
}

uint64_t sub_1C2B6DCA4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  sub_1C2B74C20();
  swift_bridgeObjectRetain();
  sub_1C2B74070();
  swift_bridgeObjectRelease();
  if (v2 == 1)
  {
    sub_1C2B74C30();
  }
  else
  {
    sub_1C2B74C30();
    sub_1C2B74C40();
    if (v2)
    {
      swift_bridgeObjectRetain();
      sub_1C2B74070();
      uint64_t v3 = v1;
      uint64_t v4 = v2;
    }
    else
    {
      uint64_t v3 = v1;
      uint64_t v4 = 0;
    }
    sub_1C2B027B4(v3, v4);
  }
  return sub_1C2B74C60();
}

uint64_t sub_1C2B6DD78@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return MedicationVisualizationFragment.init(from:)(a1, a2);
}

uint64_t sub_1C2B6DD90(void *a1)
{
  return MedicationVisualizationFragment.encode(to:)(a1);
}

uint64_t _s27HealthMedicationsExperience31MedicationVisualizationFragmentV0F12ModificationO2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  if (v3 != 1)
  {
    if (v5 != 1)
    {
      if (v3)
      {
        if (!v5)
        {
          uint64_t v6 = *a2;
          uint64_t v7 = 0;
          goto LABEL_6;
        }
        if (v2 == v4 && v3 == v5)
        {
          sub_1C2AE8858(*a1, v3);
          sub_1C2AE8858(v2, v3);
          sub_1C2B027B4(v2, v3);
          sub_1C2B027B4(v2, v3);
          return 1;
        }
        char v9 = sub_1C2B74B50();
        sub_1C2AE8858(v4, v5);
        sub_1C2AE8858(v2, v3);
        sub_1C2B027B4(v2, v3);
        sub_1C2B027B4(v4, v5);
        if ((v9 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        sub_1C2AE8858(v4, v5);
        sub_1C2AE8858(v2, 0);
        sub_1C2B027B4(v2, 0);
        sub_1C2B027B4(v4, v5);
        if (v5) {
          goto LABEL_7;
        }
      }
      return 1;
    }
LABEL_5:
    uint64_t v6 = *a2;
    uint64_t v7 = a2[1];
LABEL_6:
    sub_1C2AE8858(v6, v7);
    sub_1C2AE8858(v2, v3);
LABEL_7:
    sub_1C2B027B4(v2, v3);
    sub_1C2B027B4(v4, v5);
    return 0;
  }
  if (v5 != 1) {
    goto LABEL_5;
  }
  sub_1C2B027B4(*a1, 1);
  sub_1C2B027B4(v4, 1);
  return v5;
}

unint64_t sub_1C2B6DF40()
{
  unint64_t result = qword_1EBF11178;
  if (!qword_1EBF11178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBF11178);
  }
  return result;
}

unint64_t sub_1C2B6DF94()
{
  unint64_t result = qword_1EBF11190;
  if (!qword_1EBF11190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBF11190);
  }
  return result;
}

unint64_t sub_1C2B6DFE8()
{
  unint64_t result = qword_1EBF11160;
  if (!qword_1EBF11160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBF11160);
  }
  return result;
}

void sub_1C2B6E03C()
{
  if (!qword_1EA32C5A8)
  {
    sub_1C2B6E0AC();
    sub_1C2B74880();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA32C5A8);
    }
  }
}

unint64_t sub_1C2B6E0AC()
{
  unint64_t result = qword_1EA32C5B0;
  if (!qword_1EA32C5B0)
  {
    unint64_t result = swift_getExistentialMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA32C5B0);
  }
  return result;
}

uint64_t _s27HealthMedicationsExperience31MedicationVisualizationFragmentV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  long long v3 = *(_OWORD *)(a2 + 16);
  BOOL v4 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v4
    || (long long v9 = *(_OWORD *)(a2 + 16),
        long long v10 = *(_OWORD *)(a1 + 16),
        char v5 = sub_1C2B74B50(),
        long long v3 = v9,
        long long v2 = v10,
        char v6 = v5,
        char v7 = 0,
        (v6 & 1) != 0))
  {
    long long v12 = v2;
    long long v11 = v3;
    char v7 = _s27HealthMedicationsExperience31MedicationVisualizationFragmentV0F12ModificationO2eeoiySbAE_AEtFZ_0((uint64_t *)&v12, (uint64_t *)&v11);
  }
  return v7 & 1;
}

unint64_t sub_1C2B6E164()
{
  unint64_t result = qword_1EBF111B0;
  if (!qword_1EBF111B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBF111B0);
  }
  return result;
}

unint64_t sub_1C2B6E1B8()
{
  unint64_t result = qword_1EA32C5C0;
  if (!qword_1EA32C5C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA32C5C0);
  }
  return result;
}

void sub_1C2B6E20C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

unint64_t sub_1C2B6E274()
{
  unint64_t result = qword_1EBF111A8;
  if (!qword_1EBF111A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBF111A8);
  }
  return result;
}

unint64_t sub_1C2B6E2CC()
{
  unint64_t result = qword_1EA32C5C8;
  if (!qword_1EA32C5C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA32C5C8);
  }
  return result;
}

unint64_t sub_1C2B6E324()
{
  unint64_t result = qword_1EBF111D0;
  if (!qword_1EBF111D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBF111D0);
  }
  return result;
}

uint64_t destroy for MedicationVisualizationFragment(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 24);
  if (result != 1)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for MedicationVisualizationFragment(uint64_t a1, void *a2)
{
  uint64_t v3 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v3;
  BOOL v4 = a2 + 2;
  uint64_t v5 = a2[3];
  swift_bridgeObjectRetain();
  if (v5 == 1)
  {
    *(_OWORD *)(a1 + 16) = *v4;
  }
  else
  {
    *(void *)(a1 + 16) = *(void *)v4;
    *(void *)(a1 + 24) = v5;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *assignWithCopy for MedicationVisualizationFragment(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[3];
  if (a1[3] != 1)
  {
    if (v4 != 1)
    {
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1C2B6E4F8((uint64_t)(a1 + 2));
    goto LABEL_6;
  }
  if (v4 == 1)
  {
LABEL_6:
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    return a1;
  }
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C2B6E4F8(uint64_t a1)
{
  sub_1C2B6E554();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C2B6E554()
{
  if (!qword_1EA32C5D0)
  {
    sub_1C2B6E5A4();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA32C5D0);
    }
  }
}

void sub_1C2B6E5A4()
{
  if (!qword_1EBF0FEC8)
  {
    unint64_t v0 = sub_1C2B74630();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBF0FEC8);
    }
  }
}

void *assignWithTake for MedicationVisualizationFragment(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2 + 2;
  if (a1[3] != 1)
  {
    uint64_t v6 = a2[3];
    if (v6 != 1)
    {
      a1[2] = *v5;
      a1[3] = v6;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1C2B6E4F8((uint64_t)(a1 + 2));
  }
  *((_OWORD *)a1 + 1) = *(_OWORD *)v5;
  return a1;
}

uint64_t getEnumTagSinglePayload for MedicationVisualizationFragment(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MedicationVisualizationFragment(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicationVisualizationFragment()
{
  return &type metadata for MedicationVisualizationFragment;
}

unint64_t destroy for MedicationVisualizationFragment.FragmentModification(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  int v2 = -1;
  if (result < 0xFFFFFFFF) {
    int v2 = result;
  }
  if (v2 - 1 < 0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *_s27HealthMedicationsExperience31MedicationVisualizationFragmentV20FragmentModificationOwCP_0(void *a1, void *a2)
{
  unint64_t v3 = a2[1];
  LODWORD(v4) = -1;
  if (v3 < 0xFFFFFFFF) {
    uint64_t v4 = a2[1];
  }
  if ((int)v4 - 1 < 0)
  {
    *a1 = *a2;
    a1[1] = v3;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  return a1;
}

void *assignWithCopy for MedicationVisualizationFragment.FragmentModification(void *a1, void *a2)
{
  LODWORD(v4) = -1;
  if (a1[1] >= 0xFFFFFFFFuLL) {
    LODWORD(v5) = -1;
  }
  else {
    uint64_t v5 = a1[1];
  }
  int v6 = v5 - 1;
  if (a2[1] < 0xFFFFFFFFuLL) {
    uint64_t v4 = a2[1];
  }
  int v7 = v4 - 1;
  if (v6 < 0)
  {
    if (v7 < 0)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  if ((v7 & 0x80000000) == 0)
  {
LABEL_11:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithTake for MedicationVisualizationFragment.FragmentModification(void *a1, void *a2)
{
  unint64_t v4 = a1[1];
  int v5 = -1;
  if (v4 < 0xFFFFFFFF) {
    int v5 = v4;
  }
  if (v5 - 1 < 0)
  {
    unint64_t v6 = a2[1];
    LODWORD(v7) = -1;
    if (v6 < 0xFFFFFFFF) {
      uint64_t v7 = a2[1];
    }
    if ((int)v7 - 1 < 0)
    {
      *a1 = *a2;
      a1[1] = v6;
      swift_bridgeObjectRelease();
      return a1;
    }
    swift_bridgeObjectRelease();
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  return a1;
}

uint64_t getEnumTagSinglePayload for MedicationVisualizationFragment.FragmentModification(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  if ((v4 + 1) >= 2) {
    return v4;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for MedicationVisualizationFragment.FragmentModification(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_1C2B6E960(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  int v2 = v1 - 1;
  if (v2 < 0) {
    int v2 = -1;
  }
  return (v2 + 1);
}

void *sub_1C2B6E984(void *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    *unint64_t result = a2 - 0x7FFFFFFF;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicationVisualizationFragment.FragmentModification()
{
  return &type metadata for MedicationVisualizationFragment.FragmentModification;
}

ValueMetadata *type metadata accessor for MedicationVisualizationFragment.CodingKeys()
{
  return &type metadata for MedicationVisualizationFragment.CodingKeys;
}

uint64_t _s27HealthMedicationsExperience31MedicationVisualizationFragmentV10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s27HealthMedicationsExperience31MedicationVisualizationFragmentV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C2B6EB34);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_1C2B6EB5C(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for MedicationVisualizationFragment.FragmentModification.CodingKeys()
{
  return &type metadata for MedicationVisualizationFragment.FragmentModification.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for MedicationVisualizationFragment.FragmentModification.ColorCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C2B6EC14);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for MedicationVisualizationFragment.FragmentModification.ColorCodingKeys()
{
  return &type metadata for MedicationVisualizationFragment.FragmentModification.ColorCodingKeys;
}

ValueMetadata *type metadata accessor for MedicationVisualizationFragment.FragmentModification.NoneCodingKeys()
{
  return &type metadata for MedicationVisualizationFragment.FragmentModification.NoneCodingKeys;
}

unint64_t sub_1C2B6EC60()
{
  unint64_t result = qword_1EA32C5D8;
  if (!qword_1EA32C5D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA32C5D8);
  }
  return result;
}

unint64_t sub_1C2B6ECB8()
{
  unint64_t result = qword_1EA32C5E0;
  if (!qword_1EA32C5E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA32C5E0);
  }
  return result;
}

unint64_t sub_1C2B6ED10()
{
  unint64_t result = qword_1EA32C5E8;
  if (!qword_1EA32C5E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA32C5E8);
  }
  return result;
}

unint64_t sub_1C2B6ED68()
{
  unint64_t result = qword_1EBF111C0;
  if (!qword_1EBF111C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBF111C0);
  }
  return result;
}

unint64_t sub_1C2B6EDC0()
{
  unint64_t result = qword_1EBF111B8;
  if (!qword_1EBF111B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBF111B8);
  }
  return result;
}

unint64_t sub_1C2B6EE18()
{
  unint64_t result = qword_1EBF11170;
  if (!qword_1EBF11170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBF11170);
  }
  return result;
}

unint64_t sub_1C2B6EE70()
{
  unint64_t result = qword_1EBF11168;
  if (!qword_1EBF11168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBF11168);
  }
  return result;
}

unint64_t sub_1C2B6EEC8()
{
  unint64_t result = qword_1EBF111A0;
  if (!qword_1EBF111A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBF111A0);
  }
  return result;
}

unint64_t sub_1C2B6EF20()
{
  unint64_t result = qword_1EBF11198;
  if (!qword_1EBF11198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBF11198);
  }
  return result;
}

unint64_t sub_1C2B6EF78()
{
  unint64_t result = qword_1EBF11188;
  if (!qword_1EBF11188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBF11188);
  }
  return result;
}

unint64_t sub_1C2B6EFD0()
{
  unint64_t result = qword_1EBF11180;
  if (!qword_1EBF11180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBF11180);
  }
  return result;
}

uint64_t sub_1C2B6F024(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x726F6C6F63 && a2 == 0xE500000000000000;
  if (v2 || (sub_1C2B74B50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701736302 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C2B74B50();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1C2B6F100(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D614E7465737361 && a2 == 0xE900000000000065;
  if (v2 || (sub_1C2B74B50() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6163696669646F6DLL && a2 == 0xEC0000006E6F6974)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C2B74B50();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t MedicationShape.accessibilityLabel.getter()
{
  switch(*v0)
  {
    case 1:
      if (qword_1EBF10F78 != -1) {
        goto LABEL_98;
      }
      break;
    case 2:
      if (qword_1EBF10F78 != -1) {
        goto LABEL_98;
      }
      break;
    case 3:
      if (qword_1EBF10F78 != -1) {
        goto LABEL_98;
      }
      break;
    case 4:
      if (qword_1EBF10F78 != -1) {
        goto LABEL_98;
      }
      break;
    case 5:
      if (qword_1EBF10F78 != -1) {
        goto LABEL_98;
      }
      break;
    case 6:
      if (qword_1EBF10F78 != -1) {
        goto LABEL_98;
      }
      break;
    case 7:
      if (qword_1EBF10F78 != -1) {
        goto LABEL_98;
      }
      break;
    case 8:
      if (qword_1EBF10F78 != -1) {
        goto LABEL_98;
      }
      break;
    case 9:
      if (qword_1EBF10F78 != -1) {
        goto LABEL_98;
      }
      break;
    case 0xA:
      if (qword_1EBF10F78 != -1) {
        goto LABEL_98;
      }
      break;
    case 0xB:
      if (qword_1EBF10F78 != -1) {
        goto LABEL_98;
      }
      break;
    case 0xC:
      if (qword_1EBF10F78 != -1) {
        goto LABEL_98;
      }
      break;
    case 0xD:
      if (qword_1EBF10F78 != -1) {
        goto LABEL_98;
      }
      break;
    case 0xE:
      if (qword_1EBF10F78 != -1) {
        goto LABEL_98;
      }
      break;
    case 0xF:
      if (qword_1EBF10F78 != -1) {
        goto LABEL_98;
      }
      break;
    case 0x10:
      if (qword_1EBF10F78 != -1) {
        goto LABEL_98;
      }
      break;
    case 0x11:
      if (qword_1EBF10F78 != -1) {
        goto LABEL_98;
      }
      break;
    case 0x12:
      if (qword_1EBF10F78 != -1) {
        goto LABEL_98;
      }
      break;
    case 0x13:
      if (qword_1EBF10F78 != -1) {
        goto LABEL_98;
      }
      break;
    case 0x14:
      if (qword_1EBF10F78 != -1) {
        goto LABEL_98;
      }
      break;
    case 0x15:
      if (qword_1EBF10F78 != -1) {
        goto LABEL_98;
      }
      break;
    case 0x16:
      if (qword_1EBF10F78 != -1) {
        goto LABEL_98;
      }
      break;
    case 0x17:
      if (qword_1EBF10F78 != -1) {
        goto LABEL_98;
      }
      break;
    case 0x18:
      if (qword_1EBF10F78 != -1) {
        goto LABEL_98;
      }
      break;
    case 0x19:
      if (qword_1EBF10F78 != -1) {
        goto LABEL_98;
      }
      break;
    case 0x1A:
      if (qword_1EBF10F78 != -1) {
        goto LABEL_98;
      }
      break;
    case 0x1B:
      if (qword_1EBF10F78 != -1) {
        goto LABEL_98;
      }
      break;
    case 0x1C:
      if (qword_1EBF10F78 != -1) {
        goto LABEL_98;
      }
      break;
    case 0x1D:
      if (qword_1EBF10F78 != -1) {
        goto LABEL_98;
      }
      break;
    case 0x1E:
      if (qword_1EBF10F78 != -1) {
        goto LABEL_98;
      }
      break;
    case 0x1F:
      if (qword_1EBF10F78 != -1) {
        goto LABEL_98;
      }
      break;
    case 0x20:
      if (qword_1EBF10F78 != -1) {
        goto LABEL_98;
      }
      break;
    case 0x21:
      if (qword_1EBF10F78 != -1) {
        goto LABEL_98;
      }
      break;
    case 0x22:
      if (qword_1EBF10F78 != -1) {
        goto LABEL_98;
      }
      break;
    case 0x23:
      if (qword_1EBF10F78 != -1) {
        goto LABEL_98;
      }
      break;
    case 0x24:
      if (qword_1EBF10F78 != -1) {
        goto LABEL_98;
      }
      break;
    case 0x25:
      if (qword_1EBF10F78 != -1) {
        goto LABEL_98;
      }
      break;
    case 0x26:
      if (qword_1EBF10F78 != -1) {
        goto LABEL_98;
      }
      break;
    case 0x27:
      if (qword_1EBF10F78 != -1) {
        goto LABEL_98;
      }
      break;
    case 0x28:
      if (qword_1EBF10F78 != -1) {
        goto LABEL_98;
      }
      break;
    case 0x29:
      if (qword_1EBF10F78 != -1) {
        goto LABEL_98;
      }
      break;
    case 0x2A:
      if (qword_1EBF10F78 != -1) {
        goto LABEL_98;
      }
      break;
    case 0x2B:
      if (qword_1EBF10F78 != -1) {
        goto LABEL_98;
      }
      break;
    case 0x2C:
      if (qword_1EBF10F78 != -1) {
        goto LABEL_98;
      }
      break;
    case 0x2D:
      if (qword_1EBF10F78 != -1) {
        goto LABEL_98;
      }
      break;
    case 0x2E:
      if (qword_1EBF10F78 != -1) {
        goto LABEL_98;
      }
      break;
    case 0x2F:
      if (qword_1EBF10F78 != -1) {
        goto LABEL_98;
      }
      break;
    default:
      if (qword_1EBF10F78 != -1) {
LABEL_98:
      }
        swift_once();
      break;
  }
  id v1 = (id)qword_1EBF10F60;
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1C2B735A0();
  swift_bridgeObjectRelease();

  return v2;
}

uint64_t sub_1C2B7084C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_1C2AF44C8();
    swift_allocError();
    *uint64_t v5 = a3;
    id v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    uint64_t v8 = 0;
    if (a2)
    {
      sub_1C2B2DBF8();
      uint64_t v8 = sub_1C2B741D0();
    }
    uint64_t v9 = v8;
    sub_1C2B71484((uint64_t)&v9, *(void *)(*(void *)(v3 + 64) + 40));
    return swift_continuation_throwingResume();
  }
}

uint64_t MedicationScheduleProvider.changePublisher.getter()
{
  return swift_retain();
}

uint64_t MedicationScheduleProvider.__allocating_init(scheduleControl:scheduleControlObserver:)(void *a1, void *a2)
{
  uint64_t v4 = swift_allocObject();
  MedicationScheduleProvider.init(scheduleControl:scheduleControlObserver:)(a1, a2);
  return v4;
}

void *MedicationScheduleProvider.init(scheduleControl:scheduleControlObserver:)(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v2[4] = 0;
  sub_1C2B70AF4();
  swift_allocObject();
  v2[5] = sub_1C2B73C20();
  uint64_t v2[2] = a1;
  v2[3] = a2;
  uint64_t v6 = swift_allocObject();
  swift_weakInit();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = v6;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_1C2B70D68;
  *(void *)(v8 + 24) = v7;
  sub_1C2B5BD70();
  sub_1C2B711FC();
  id v9 = a1;
  id v10 = a2;
  swift_retain();
  uint64_t v11 = sub_1C2B73D60();

  swift_release();
  swift_release();
  long long v3[4] = v11;
  swift_release();
  return v3;
}

void sub_1C2B70AF4()
{
  if (!qword_1EA32C5F0)
  {
    sub_1C2B7132C(255, &qword_1EBF10788, (uint64_t (*)(uint64_t))sub_1C2B70B8C, MEMORY[0x1E4FBB718]);
    unint64_t v0 = sub_1C2B73C10();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA32C5F0);
    }
  }
}

void sub_1C2B70B8C(uint64_t a1)
{
}

uint64_t sub_1C2B70BC0()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C2B70BF8(void *a1, uint64_t a2)
{
  sub_1C2B7132C(0, (unint64_t *)&unk_1EBF11290, MEMORY[0x1E4FBCFE8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v11 - v5;
  uint64_t v7 = sub_1C2B74310();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  uint64_t v8 = (void *)swift_allocObject();
  void v8[2] = 0;
  v8[3] = 0;
  void v8[4] = a1;
  void v8[5] = a2;
  id v9 = a1;
  swift_retain();
  sub_1C2B32858((uint64_t)v6, (uint64_t)&unk_1EA32C608, (uint64_t)v8);
  return swift_release();
}

uint64_t sub_1C2B70D28()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C2B70D68()
{
  return sub_1C2B70BF8(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1C2B70D70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 168) = a4;
  *(void *)(v5 + 176) = a5;
  return MEMORY[0x1F4188298](sub_1C2B70D90, 0, 0);
}

uint64_t sub_1C2B70D90()
{
  uint64_t v1 = (void *)v0[21];
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_1C2B70E8C;
  uint64_t v2 = swift_continuation_init();
  v0[10] = MEMORY[0x1E4F143A8];
  v0[11] = 0x40000000;
  v0[12] = sub_1C2B7084C;
  v0[13] = &block_descriptor_3;
  v0[14] = v2;
  objc_msgSend(v1, sel_fetchAllSchedulesWithCompletion_, v0 + 10);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1C2B70E8C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 184) = v1;
  if (v1) {
    uint64_t v2 = sub_1C2B710C8;
  }
  else {
    uint64_t v2 = sub_1C2B70F9C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1C2B70F9C()
{
  uint64_t v1 = v0[15];
  if (v1)
  {
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      swift_retain();
      swift_release();
      v0[15] = v1;
      sub_1C2B73C00();
      swift_release();
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      swift_retain();
      swift_release();
      v0[10] = 0;
      sub_1C2B73C00();
      swift_release();
    }
  }
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_1C2B710C8()
{
  swift_willThrow();
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    uint64_t v1 = (void *)v0[23];
    swift_retain();
    swift_release();
    v0[10] = 0;
    sub_1C2B73C00();
    swift_release();
    uint64_t v2 = v1;
  }
  else
  {
    uint64_t v2 = (void *)v0[23];
  }

  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1C2B7119C()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C2B711D4()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

unint64_t sub_1C2B711FC()
{
  unint64_t result = qword_1EA32C5F8;
  if (!qword_1EA32C5F8)
  {
    sub_1C2B5BD70();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1EA32C5F8);
  }
  return result;
}

uint64_t MedicationScheduleProvider.deinit()
{
  swift_release();
  swift_release();
  return v0;
}

uint64_t MedicationScheduleProvider.__deallocating_deinit()
{
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MedicationScheduleProvider()
{
  return self;
}

uint64_t method lookup function for MedicationScheduleProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationScheduleProvider);
}

uint64_t dispatch thunk of MedicationScheduleProvider.__allocating_init(scheduleControl:scheduleControlObserver:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

void sub_1C2B7132C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C2B71390()
{
  swift_unknownObjectRelease();

  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1C2B713D8()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 32);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_1C2AF9A8C;
  *(_OWORD *)(v2 + 168) = v3;
  return MEMORY[0x1F4188298](sub_1C2B70D90, 0, 0);
}

uint64_t sub_1C2B71484(uint64_t a1, uint64_t a2)
{
  sub_1C2B7132C(0, &qword_1EBF10788, (uint64_t (*)(uint64_t))sub_1C2B70B8C, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

UIColor __swiftcall UIColor.init(hex:)(Swift::Int hex)
{
  double v1 = (double)BYTE2(hex) / 255.0;
  double v2 = (double)BYTE1(hex) / 255.0;
  double v3 = (double)hex / 255.0;
  id v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  return (UIColor)objc_msgSend(v4, sel_initWithRed_green_blue_alpha_, v1, v2, v3, 1.0);
}

CGColorRef __swiftcall UIColor.cgColor(with:)(UITraitCollection with)
{
  id v2 = objc_msgSend(v1, sel_resolvedColorWithTraitCollection_, with.super.isa);
  double v3 = (CGColor *)objc_msgSend(v2, sel_CGColor);

  return v3;
}

uint64_t MedicationUserFacingTitleProviding.expandedTitle.getter(uint64_t a1, uint64_t (**a2)(uint64_t, uint64_t))
{
  sub_1C2B71910(0, &qword_1EBF106C8, MEMORY[0x1E4F27A78], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v25 - v5;
  uint64_t v7 = a2[9](a1, (uint64_t)a2);
  if (v8)
  {
    uint64_t v9 = v7;
    unint64_t v10 = v8;
    uint64_t v11 = HIBYTE(v8) & 0xF;
    if ((v8 & 0x2000000000000000) == 0) {
      uint64_t v11 = v7 & 0xFFFFFFFFFFFFLL;
    }
    if (v11)
    {
      uint64_t v12 = a2[5](a1, (uint64_t)a2);
      if (v13)
      {
        uint64_t v14 = v12;
        uint64_t v15 = v13;
        uint64_t v16 = sub_1C2B73790();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v6, 1, 1, v16);
        if (qword_1EBF10F78 != -1) {
          swift_once();
        }
        uint64_t v17 = (void *)qword_1EBF10F60;
        sub_1C2B71910(0, (unint64_t *)&qword_1EBF10838, (uint64_t (*)(uint64_t))sub_1C2AFCDFC, MEMORY[0x1E4FBBE00]);
        uint64_t v18 = swift_allocObject();
        *(_OWORD *)(v18 + 16) = xmmword_1C2B764E0;
        uint64_t v19 = MEMORY[0x1E4FBB1A0];
        *(void *)(v18 + 56) = MEMORY[0x1E4FBB1A0];
        unint64_t v20 = sub_1C2AE85BC();
        *(void *)(v18 + 32) = v9;
        *(void *)(v18 + 40) = v10;
        *(void *)(v18 + 96) = v19;
        *(void *)(v18 + 104) = v20;
        *(void *)(v18 + 64) = v20;
        *(void *)(v18 + 72) = v14;
        *(void *)(v18 + 80) = v15;
        id v21 = v17;
        swift_bridgeObjectRetain();
        sub_1C2B735A0();
        uint64_t v22 = sub_1C2B73FD0();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C2B72450((uint64_t)v6, &qword_1EBF106C8, MEMORY[0x1E4F27A78]);
        return v22;
      }
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v24 = a2[2];
  return v24(a1, (uint64_t)a2);
}

void sub_1C2B71910(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t HKMedicationUserDomainConcept.__userSpecifiedName.getter()
{
  return sub_1C2B71A40((SEL *)&selRef_userSpecifiedName);
}

uint64_t HKMedicationUserDomainConcept.__preferredName.getter()
{
  return sub_1C2B719D0();
}

uint64_t HKMedicationUserDomainConcept.__brandName.getter()
{
  return sub_1C2B719D0();
}

uint64_t HKMedicationUserDomainConcept.__genericName.getter()
{
  return sub_1C2B719D0();
}

uint64_t HKMedicationUserDomainConcept.__manufacturedDoseForm.getter()
{
  return sub_1C2B719D0();
}

uint64_t HKMedicationUserDomainConcept.__basicDoseForm.getter()
{
  return sub_1C2B719D0();
}

uint64_t sub_1C2B719D0()
{
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v1 = sub_1C2AE0100(KeyPath, 0x53555F6E65, 0xE500000000000000);
  swift_release();
  return v1;
}

uint64_t HKMedicationUserDomainConcept.__baseUnitStrength.getter()
{
  return sub_1C2B71A40((SEL *)&selRef_unlocalizedQuantifiedUnitStrengthPreferredDisplayString);
}

uint64_t HKMedicationUserDomainConcept.__freeTextMedicationName.getter()
{
  return sub_1C2B71A40((SEL *)&selRef_freeTextMedicationName);
}

uint64_t sub_1C2B71A40(SEL *a1)
{
  id v2 = [v1 *a1];
  if (!v2) {
    return 0;
  }
  double v3 = v2;
  uint64_t v4 = sub_1C2B73FA0();

  return v4;
}

id HKMedicationUserDomainConcept.__freeTextMedicationForm.getter()
{
  id v1 = objc_msgSend(v0, sel_freeTextMedicationFormCode);
  id v2 = v1;
  if (!v1) {
    return 0;
  }
  id v3 = objc_msgSend(v1, sel_longLongValue);

  return v3;
}

id HKMedicationUserDomainConcept.__freeTextMedicationStrengthQuantity.getter()
{
  id v1 = objc_msgSend(v0, sel_freeTextMedicationStrengthQuantity);
  return v1;
}

uint64_t sub_1C2B71B44()
{
  return sub_1C2ADE0C4();
}

uint64_t sub_1C2B71B50()
{
  return sub_1C2ADE0C4();
}

uint64_t sub_1C2B71B5C()
{
  return sub_1C2ADE0C4();
}

uint64_t sub_1C2B71B68(uint64_t a1, uint64_t a2)
{
  return sub_1C2ADDE84(a1, a2, (SEL *)&selRef_unlocalizedQuantifiedUnitStrengthPreferredDisplayString);
}

id sub_1C2B71B74()
{
  id v1 = objc_msgSend(*v0, sel_freeTextMedicationFormCode);
  id v2 = v1;
  if (!v1) {
    return 0;
  }
  id v3 = objc_msgSend(v1, sel_longLongValue);

  return v3;
}

id sub_1C2B71BDC()
{
  id v1 = objc_msgSend(*v0, sel_freeTextMedicationStrengthQuantity);
  return v1;
}

uint64_t HKMedicationUserDomainConcept.medmojiConfig.getter@<X0>(uint64_t a1@<X8>)
{
  id v2 = v1;
  sub_1C2B71910(0, &qword_1EA32B888, type metadata accessor for MedicationVisualizationConfig, MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v13 - v5;
  id v7 = objc_msgSend(v2, sel_userVisualizationConfigJSONString);
  if (v7)
  {
    unint64_t v8 = v7;
    sub_1C2B73FA0();

    MedicationVisualizationConfig.init(jsonString:)((uint64_t)v6);
    uint64_t v9 = type metadata accessor for MedicationVisualizationConfig(0);
    uint64_t v10 = *(void *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9) != 1)
    {
      sub_1C2B51BF8((uint64_t)v6, a1);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
    }
    sub_1C2B72450((uint64_t)v6, &qword_1EA32B888, type metadata accessor for MedicationVisualizationConfig);
  }
  uint64_t v11 = type metadata accessor for MedicationVisualizationConfig(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(a1, 1, 1, v11);
}

uint64_t HKMedicationUserDomainConcept.resolvedMedicationName.getter()
{
  uint64_t KeyPath = swift_getKeyPath();
  id v2 = v0;
  uint64_t v3 = sub_1C2AE0100(KeyPath, 0x53555F6E65, 0xE500000000000000);
  uint64_t v5 = v4;
  swift_release();
  if (v5) {
    goto LABEL_4;
  }
  uint64_t v6 = swift_getKeyPath();
  id v7 = v2;
  uint64_t v3 = sub_1C2AE0100(v6, 0x53555F6E65, 0xE500000000000000);
  uint64_t v9 = v8;
  swift_release();
  if (!v9)
  {
    uint64_t v11 = swift_getKeyPath();
    id v12 = v7;
    uint64_t v3 = sub_1C2AE0100(v11, 0x53555F6E65, 0xE500000000000000);
    uint64_t v14 = v13;

    swift_release();
    if (v14) {
      return v3;
    }
    id v15 = objc_msgSend(v12, sel_freeTextMedicationName);
    if (v15)
    {
      id v16 = v15;
      uint64_t v3 = sub_1C2B73FA0();
    }
    else
    {
      id v17 = objc_msgSend(v12, sel_userSpecifiedName);
      if (v17)
      {
        id v2 = v17;
        uint64_t v3 = sub_1C2B73FA0();
        goto LABEL_4;
      }
      if (qword_1EBF10F78 != -1) {
        swift_once();
      }
      id v16 = (id)qword_1EBF10F60;
      swift_bridgeObjectRetain();
      uint64_t v3 = sub_1C2B735A0();
      swift_bridgeObjectRelease();
    }

    return v3;
  }

LABEL_4:
  return v3;
}

uint64_t sub_1C2B72088(char a1)
{
  id v2 = v1;
  id v4 = objc_msgSend(v1, sel_userSpecifiedName);
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = sub_1C2B73FA0();
    unint64_t v8 = v7;

    swift_bridgeObjectRelease();
    uint64_t v9 = HIBYTE(v8) & 0xF;
    if ((v8 & 0x2000000000000000) == 0) {
      uint64_t v9 = v6 & 0xFFFFFFFFFFFFLL;
    }
    if (v9)
    {
      uint64_t KeyPath = swift_getKeyPath();
      id v11 = v2;
      uint64_t v12 = sub_1C2AE0100(KeyPath, 0x53555F6E65, 0xE500000000000000);
      uint64_t v14 = v13;
      swift_release();
      if (v14)
      {
LABEL_8:

        goto LABEL_9;
      }
      uint64_t v15 = swift_getKeyPath();
      id v16 = v11;
      uint64_t v12 = sub_1C2AE0100(v15, 0x53555F6E65, 0xE500000000000000);
      uint64_t v14 = v17;
      swift_release();
      if (v14)
      {

        goto LABEL_8;
      }
      uint64_t v30 = swift_getKeyPath();
      id v31 = v16;
      uint64_t v12 = sub_1C2AE0100(v30, 0x53555F6E65, 0xE500000000000000);
      uint64_t v14 = v32;

      swift_release();
      if (v14)
      {
LABEL_9:
        uint64_t v18 = sub_1C2AE08C0(0, 1, 1, MEMORY[0x1E4FBC860]);
        unint64_t v20 = v18[2];
        unint64_t v19 = v18[3];
        if (v20 >= v19 >> 1) {
          uint64_t v18 = sub_1C2AE08C0((void *)(v19 > 1), v20 + 1, 1, v18);
        }
        void v18[2] = v20 + 1;
        id v21 = &v18[2 * v20];
        void v21[4] = v12;
        v21[5] = v14;
        if ((a1 & 1) == 0) {
          goto LABEL_12;
        }
        goto LABEL_20;
      }
    }
  }
  uint64_t v18 = (void *)MEMORY[0x1E4FBC860];
  if ((a1 & 1) == 0)
  {
LABEL_12:
    uint64_t v22 = HKMedicationUserDomainConcept.localizedResolvedForm.getter();
    if (!v23) {
      goto LABEL_29;
    }
    uint64_t v24 = v22;
    uint64_t v25 = v23;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v18 = sub_1C2AE08C0(0, v18[2] + 1, 1, v18);
    }
    unint64_t v27 = v18[2];
    unint64_t v26 = v18[3];
    if (v27 >= v26 >> 1) {
      uint64_t v18 = sub_1C2AE08C0((void *)(v26 > 1), v27 + 1, 1, v18);
    }
    void v18[2] = v27 + 1;
    uint64_t v28 = &v18[2 * v27];
    v28[4] = v24;
    uint64_t v29 = v28 + 4;
    goto LABEL_28;
  }
LABEL_20:
  uint64_t v33 = swift_getKeyPath();
  uint64_t v34 = sub_1C2AE0100(v33, 0x53555F6E65, 0xE500000000000000);
  uint64_t v25 = v35;
  swift_release();
  if (!v25)
  {
    uint64_t v36 = HKMedicationUserDomainConcept.localizedResolvedForm.getter();
    if (!v37) {
      goto LABEL_29;
    }
    uint64_t v34 = v36;
    uint64_t v25 = v37;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v18 = sub_1C2AE08C0(0, v18[2] + 1, 1, v18);
  }
  unint64_t v39 = v18[2];
  unint64_t v38 = v18[3];
  if (v39 >= v38 >> 1) {
    uint64_t v18 = sub_1C2AE08C0((void *)(v38 > 1), v39 + 1, 1, v18);
  }
  void v18[2] = v39 + 1;
  uint64_t v40 = &v18[2 * v39];
  v40[4] = v34;
  uint64_t v29 = v40 + 4;
LABEL_28:
  v29[1] = v25;
LABEL_29:
  if (v18[2])
  {
    sub_1C2ADE56C(0, (unint64_t *)&qword_1EBF10FB0, MEMORY[0x1E4FBB320]);
    sub_1C2AE04F8();
    uint64_t v41 = sub_1C2B73F40();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v41;
}

uint64_t HKMedicationUserDomainConcept.caption.getter()
{
  return sub_1C2B72088(0);
}

uint64_t HKMedicationUserDomainConcept.medicationDetailCardCaption.getter()
{
  return sub_1C2B72088(1);
}

uint64_t sub_1C2B72450(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C2B71910(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t dispatch thunk of MedicationUserFacingTitleProviding.expandedTitle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of MedicationUserFacingTitleProviding.userFacingTitle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of MedicationUserFacingTitleProviding.nonUserSpecifiedName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of MedicationUserFacingTitleProviding.userFacingSubtitle.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of MedicationUserFacingTitleProviding.brandOrGenericOrPreferred.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of MedicationUserFacingTitleProviding.manufacturedOrBasicDoseForm.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of MedicationUserFacingTitleProviding.doseForm.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of MedicationUserFacingTitleProviding.unitStrength.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of MedicationUserFacingTitleProviding.__userSpecifiedName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of MedicationUserFacingTitleProviding.__preferredName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of MedicationUserFacingTitleProviding.__brandName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of MedicationUserFacingTitleProviding.__genericName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of MedicationUserFacingTitleProviding.__manufacturedDoseForm.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of MedicationUserFacingTitleProviding.__basicDoseForm.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of MedicationUserFacingTitleProviding.__baseUnitStrength.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t dispatch thunk of MedicationUserFacingTitleProviding.__freeTextMedicationName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))();
}

uint64_t dispatch thunk of MedicationUserFacingTitleProviding.__freeTextMedicationForm.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 136))();
}

uint64_t dispatch thunk of MedicationUserFacingTitleProviding.__freeTextMedicationStrengthQuantity.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 144))();
}

uint64_t sub_1C2B72648()
{
  swift_beginAccess();
  id v0 = (id)HKStringFromMedicationListOnboardingProvenanceType();
  uint64_t v1 = sub_1C2B73FA0();

  return v1;
}

uint64_t sub_1C2B726B4()
{
  swift_beginAccess();
  return *(void *)(v0 + 16);
}

uint64_t sub_1C2B726E8(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*sub_1C2B72728())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1C2B7277C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 32) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2B727DC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C2B72814(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 32) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1C2B7285C())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1C2B728B0()
{
  swift_beginAccess();
  return *(void *)(v0 + 40);
}

uint64_t sub_1C2B728E8(uint64_t a1, char a2)
{
  uint64_t result = swift_beginAccess();
  *(void *)(v2 + 40) = a1;
  *(unsigned char *)(v2 + 48) = a2 & 1;
  return result;
}

uint64_t (*sub_1C2B7293C())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1C2B72990()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 49);
}

uint64_t sub_1C2B729C4(char a1)
{
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 49) = a1;
  return result;
}

uint64_t (*sub_1C2B72A04())()
{
  return j__swift_endAccess;
}

uint64_t sub_1C2B72A58()
{
  swift_beginAccess();
  return *(void *)(v0 + 56);
}

uint64_t sub_1C2B72A90(uint64_t a1, char a2)
{
  uint64_t result = swift_beginAccess();
  *(void *)(v2 + 56) = a1;
  *(unsigned char *)(v2 + 64) = a2 & 1;
  return result;
}

uint64_t (*sub_1C2B72AE4())()
{
  return j_j__swift_endAccess;
}

uint64_t MedicationListOnboardingContext.__allocating_init(provenance:firstTimeMedFlow:medsDetailsEntryPoint:)(uint64_t a1, char a2, uint64_t a3, char a4)
{
  char v7 = a4 & 1;
  uint64_t v8 = swift_allocObject();
  MedicationListOnboardingContext.init(provenance:firstTimeMedFlow:medsDetailsEntryPoint:)(a1, a2, a3, v7);
  return v8;
}

uint64_t MedicationListOnboardingContext.init(provenance:firstTimeMedFlow:medsDetailsEntryPoint:)(uint64_t a1, char a2, uint64_t a3, char a4)
{
  *(void *)(v4 + 40) = 0;
  *(_WORD *)(v4 + 48) = 513;
  *(void *)(v4 + 56) = 0;
  *(unsigned char *)(v4 + 64) = 1;
  *(void *)(v4 + 16) = a1;
  *(unsigned char *)(v4 + 24) = a2;
  swift_beginAccess();
  *(void *)(v4 + 40) = a3;
  *(unsigned char *)(v4 + 48) = a4 & 1;
  *(void *)(v4 + 32) = sub_1C2B29768((uint64_t)&unk_1F1DF9C30);
  return v4;
}

uint64_t sub_1C2B72C2C()
{
  swift_beginAccess();
  uint64_t v1 = 0;
  if ((*(unsigned char *)(v0 + 48) & 1) == 0)
  {
    id v2 = (id)HKStringFromMedicationListOnboardingDetailsEntryType();
    uint64_t v1 = sub_1C2B73FA0();
  }
  return v1;
}

uint64_t MedicationListOnboardingContext.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t MedicationListOnboardingContext.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C2B72D04@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(void *)(v3 + 16);
  return result;
}

uint64_t sub_1C2B72D4C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(void *)(v3 + 16) = v2;
  return result;
}

uint64_t sub_1C2B72D90@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 24);
  return result;
}

uint64_t sub_1C2B72DD8(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 24) = v2;
  return result;
}

uint64_t sub_1C2B72E1C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 32);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C2B72E6C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  char v5 = *(unsigned char *)(v3 + 48);
  *(void *)a2 = *(void *)(v3 + 40);
  *(unsigned char *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_1C2B72EBC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  char v3 = *((unsigned char *)a1 + 8);
  uint64_t v4 = *a2;
  uint64_t result = swift_beginAccess();
  *(void *)(v4 + 40) = v2;
  *(unsigned char *)(v4 + 48) = v3;
  return result;
}

uint64_t sub_1C2B72F10@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 49);
  return result;
}

uint64_t sub_1C2B72F58(char *a1, uint64_t *a2)
{
  char v2 = *a1;
  uint64_t v3 = *a2;
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v3 + 49) = v2;
  return result;
}

uint64_t sub_1C2B72F9C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  char v5 = *(unsigned char *)(v3 + 64);
  *(void *)a2 = *(void *)(v3 + 56);
  *(unsigned char *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_1C2B72FEC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  char v3 = *((unsigned char *)a1 + 8);
  uint64_t v4 = *a2;
  uint64_t result = swift_beginAccess();
  *(void *)(v4 + 56) = v2;
  *(unsigned char *)(v4 + 64) = v3;
  return result;
}

uint64_t type metadata accessor for MedicationListOnboardingContext()
{
  return self;
}

uint64_t method lookup function for MedicationListOnboardingContext(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicationListOnboardingContext);
}

uint64_t dispatch thunk of MedicationListOnboardingContext.provenance.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of MedicationListOnboardingContext._provenance.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of MedicationListOnboardingContext._provenance.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of MedicationListOnboardingContext._provenance.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of MedicationListOnboardingContext.firstTimeMedFlow.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of MedicationListOnboardingContext.firstTimeMedFlow.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of MedicationListOnboardingContext.firstTimeMedFlow.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of MedicationListOnboardingContext.firstTimeStepCompleted.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of MedicationListOnboardingContext.firstTimeStepCompleted.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of MedicationListOnboardingContext.firstTimeStepCompleted.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of MedicationListOnboardingContext.medsDetailsEntryPoint.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of MedicationListOnboardingContext.medsDetailsEntryPoint.setter(uint64_t a1, char a2)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)v2 + 216))(a1, a2 & 1);
}

uint64_t dispatch thunk of MedicationListOnboardingContext.medsDetailsEntryPoint.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of MedicationListOnboardingContext.suggestionsFromHealthRecords.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of MedicationListOnboardingContext.suggestionsFromHealthRecords.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of MedicationListOnboardingContext.suggestionsFromHealthRecords.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of MedicationListOnboardingContext.scheduleType.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of MedicationListOnboardingContext.scheduleType.setter(uint64_t a1, char a2)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)v2 + 264))(a1, a2 & 1);
}

uint64_t dispatch thunk of MedicationListOnboardingContext.scheduleType.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t dispatch thunk of MedicationListOnboardingContext.__allocating_init(provenance:firstTimeMedFlow:medsDetailsEntryPoint:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v4 + 280))(a1, a2, a3, a4 & 1);
}

uint64_t dispatch thunk of MedicationListOnboardingContext.medsDetailsEntryPointString()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return self;
}

uint64_t sub_1C2B733F0()
{
  return MEMORY[0x1F40E2FB8]();
}

uint64_t sub_1C2B73400()
{
  return MEMORY[0x1F40E3038]();
}

uint64_t sub_1C2B73410()
{
  return MEMORY[0x1F40E3060]();
}

uint64_t sub_1C2B73420()
{
  return MEMORY[0x1F40E3070]();
}

uint64_t sub_1C2B73430()
{
  return MEMORY[0x1F40E3080]();
}

uint64_t sub_1C2B73440()
{
  return MEMORY[0x1F40E30A8]();
}

uint64_t sub_1C2B73450()
{
  return MEMORY[0x1F40E30C0]();
}

uint64_t sub_1C2B73460()
{
  return MEMORY[0x1F40E3128]();
}

uint64_t sub_1C2B73470()
{
  return MEMORY[0x1F40E3150]();
}

uint64_t sub_1C2B73480()
{
  return MEMORY[0x1F40E3160]();
}

uint64_t sub_1C2B73490()
{
  return MEMORY[0x1F40E3288]();
}

uint64_t sub_1C2B734A0()
{
  return MEMORY[0x1F40E32B0]();
}

uint64_t sub_1C2B734B0()
{
  return MEMORY[0x1F40E32D8]();
}

uint64_t sub_1C2B734C0()
{
  return MEMORY[0x1F40E3368]();
}

uint64_t sub_1C2B734D0()
{
  return MEMORY[0x1F40E3380]();
}

uint64_t sub_1C2B734E0()
{
  return MEMORY[0x1F40E3420]();
}

uint64_t sub_1C2B734F0()
{
  return MEMORY[0x1F40E34D0]();
}

uint64_t sub_1C2B73500()
{
  return MEMORY[0x1F40E34F8]();
}

uint64_t sub_1C2B73510()
{
  return MEMORY[0x1F40E38F8]();
}

uint64_t sub_1C2B73520()
{
  return MEMORY[0x1F40E3948]();
}

uint64_t sub_1C2B73530()
{
  return MEMORY[0x1F40E39B0]();
}

uint64_t sub_1C2B73540()
{
  return MEMORY[0x1F40E3A58]();
}

uint64_t sub_1C2B73550()
{
  return MEMORY[0x1F40E3A90]();
}

uint64_t sub_1C2B73560()
{
  return MEMORY[0x1F40E3A98]();
}

uint64_t sub_1C2B73570()
{
  return MEMORY[0x1F40E3AC0]();
}

uint64_t sub_1C2B73580()
{
  return MEMORY[0x1F40E3AE0]();
}

uint64_t sub_1C2B73590()
{
  return MEMORY[0x1F40E3AE8]();
}

uint64_t sub_1C2B735A0()
{
  return MEMORY[0x1F40E3F58]();
}

uint64_t sub_1C2B73610()
{
  return MEMORY[0x1F40E44F8]();
}

uint64_t sub_1C2B73620()
{
  return MEMORY[0x1F40E4540]();
}

uint64_t sub_1C2B73630()
{
  return MEMORY[0x1F40E4550]();
}

uint64_t sub_1C2B73640()
{
  return MEMORY[0x1F40E49A0]();
}

uint64_t sub_1C2B73650()
{
  return MEMORY[0x1F40E4A70]();
}

uint64_t sub_1C2B73660()
{
  return MEMORY[0x1F40E4B80]();
}

uint64_t sub_1C2B73670()
{
  return MEMORY[0x1F40E4D48]();
}

uint64_t sub_1C2B73680()
{
  return MEMORY[0x1F40E4DA8]();
}

uint64_t sub_1C2B73690()
{
  return MEMORY[0x1F40E4ED0]();
}

uint64_t sub_1C2B736A0()
{
  return MEMORY[0x1F40E50E0]();
}

uint64_t sub_1C2B736B0()
{
  return MEMORY[0x1F40E5158]();
}

uint64_t sub_1C2B736C0()
{
  return MEMORY[0x1F40E5188]();
}

uint64_t sub_1C2B736D0()
{
  return MEMORY[0x1F40E52C0]();
}

uint64_t sub_1C2B736E0()
{
  return MEMORY[0x1F40E52E0]();
}

uint64_t sub_1C2B736F0()
{
  return MEMORY[0x1F40E52F0]();
}

uint64_t sub_1C2B73700()
{
  return MEMORY[0x1F40E5378]();
}

uint64_t sub_1C2B73710()
{
  return MEMORY[0x1F40E5388]();
}

uint64_t sub_1C2B73720()
{
  return MEMORY[0x1F40E53C8]();
}

uint64_t sub_1C2B73730()
{
  return MEMORY[0x1F40E53F8]();
}

uint64_t sub_1C2B73740()
{
  return MEMORY[0x1F40E5448]();
}

uint64_t sub_1C2B73750()
{
  return MEMORY[0x1F40E5500]();
}

uint64_t sub_1C2B73760()
{
  return MEMORY[0x1F40E5638]();
}

uint64_t sub_1C2B73770()
{
  return MEMORY[0x1F40E5648]();
}

uint64_t sub_1C2B73780()
{
  return MEMORY[0x1F40E5728]();
}

uint64_t sub_1C2B73790()
{
  return MEMORY[0x1F40E5890]();
}

uint64_t sub_1C2B737A0()
{
  return MEMORY[0x1F40E58D0]();
}

uint64_t sub_1C2B737B0()
{
  return MEMORY[0x1F40E5910]();
}

uint64_t sub_1C2B737C0()
{
  return MEMORY[0x1F40E5938]();
}

uint64_t sub_1C2B737D0()
{
  return MEMORY[0x1F40E5960]();
}

uint64_t sub_1C2B737E0()
{
  return MEMORY[0x1F40E5978]();
}

uint64_t sub_1C2B737F0()
{
  return MEMORY[0x1F40E59A0]();
}

uint64_t sub_1C2B73800()
{
  return MEMORY[0x1F411EFA8]();
}

uint64_t sub_1C2B73810()
{
  return MEMORY[0x1F40E59D0]();
}

uint64_t sub_1C2B73820()
{
  return MEMORY[0x1F40E5A30]();
}

uint64_t sub_1C2B73830()
{
  return MEMORY[0x1F40E5A40]();
}

uint64_t sub_1C2B73840()
{
  return MEMORY[0x1F40E5A80]();
}

uint64_t sub_1C2B73850()
{
  return MEMORY[0x1F40E5AB8]();
}

uint64_t sub_1C2B73860()
{
  return MEMORY[0x1F40E5AF0]();
}

uint64_t sub_1C2B73870()
{
  return MEMORY[0x1F40E5B18]();
}

uint64_t sub_1C2B73880()
{
  return MEMORY[0x1F40E5D08]();
}

uint64_t sub_1C2B73890()
{
  return MEMORY[0x1F40E5D20]();
}

uint64_t sub_1C2B738A0()
{
  return MEMORY[0x1F40E5D70]();
}

uint64_t sub_1C2B738B0()
{
  return MEMORY[0x1F40D9648]();
}

uint64_t sub_1C2B738C0()
{
  return MEMORY[0x1F411FF90]();
}

uint64_t sub_1C2B738D0()
{
  return MEMORY[0x1F411FF98]();
}

uint64_t sub_1C2B738E0()
{
  return MEMORY[0x1F411FFA0]();
}

uint64_t sub_1C2B738F0()
{
  return MEMORY[0x1F411FFA8]();
}

uint64_t sub_1C2B73900()
{
  return MEMORY[0x1F411FFB8]();
}

uint64_t sub_1C2B73910()
{
  return MEMORY[0x1F411D780]();
}

uint64_t sub_1C2B73920()
{
  return MEMORY[0x1F411D788]();
}

uint64_t sub_1C2B73930()
{
  return MEMORY[0x1F411D790]();
}

uint64_t sub_1C2B73940()
{
  return MEMORY[0x1F411D798]();
}

uint64_t sub_1C2B73950()
{
  return MEMORY[0x1F411D7A0]();
}

uint64_t sub_1C2B73960()
{
  return MEMORY[0x1F411DA60]();
}

uint64_t sub_1C2B73970()
{
  return MEMORY[0x1F411DA68]();
}

uint64_t sub_1C2B73980()
{
  return MEMORY[0x1F411DA70]();
}

uint64_t sub_1C2B73990()
{
  return MEMORY[0x1F411DA78]();
}

uint64_t sub_1C2B739A0()
{
  return MEMORY[0x1F411DA80]();
}

uint64_t sub_1C2B739C0()
{
  return MEMORY[0x1F411F140]();
}

uint64_t sub_1C2B739D0()
{
  return MEMORY[0x1F411F148]();
}

uint64_t sub_1C2B739E0()
{
  return MEMORY[0x1F411F150]();
}

uint64_t sub_1C2B739F0()
{
  return MEMORY[0x1F4121138]();
}

uint64_t sub_1C2B73A00()
{
  return MEMORY[0x1F4121148]();
}

uint64_t sub_1C2B73A10()
{
  return MEMORY[0x1F4121158]();
}

uint64_t sub_1C2B73A20()
{
  return MEMORY[0x1F4121188]();
}

uint64_t sub_1C2B73A30()
{
  return MEMORY[0x1F41211C0]();
}

uint64_t sub_1C2B73A40()
{
  return MEMORY[0x1F41211C8]();
}

uint64_t sub_1C2B73A50()
{
  return MEMORY[0x1F41211D0]();
}

uint64_t sub_1C2B73A60()
{
  return MEMORY[0x1F41211D8]();
}

uint64_t sub_1C2B73A70()
{
  return MEMORY[0x1F4120C00]();
}

uint64_t sub_1C2B73A80()
{
  return MEMORY[0x1F4188670]();
}

uint64_t sub_1C2B73A90()
{
  return MEMORY[0x1F41886A0]();
}

uint64_t sub_1C2B73AA0()
{
  return MEMORY[0x1F41886B0]();
}

uint64_t sub_1C2B73AB0()
{
  return MEMORY[0x1F41663F0]();
}

uint64_t sub_1C2B73AC0()
{
  return MEMORY[0x1F40D6610]();
}

uint64_t sub_1C2B73AD0()
{
  return MEMORY[0x1F40D6618]();
}

uint64_t sub_1C2B73AE0()
{
  return MEMORY[0x1F40D6620]();
}

uint64_t sub_1C2B73AF0()
{
  return MEMORY[0x1F40D6628]();
}

uint64_t sub_1C2B73B00()
{
  return MEMORY[0x1F40D6658]();
}

uint64_t sub_1C2B73B10()
{
  return MEMORY[0x1F40D66A8]();
}

uint64_t sub_1C2B73B20()
{
  return MEMORY[0x1F40D66F8]();
}

uint64_t sub_1C2B73B30()
{
  return MEMORY[0x1F40D6718]();
}

uint64_t sub_1C2B73B40()
{
  return MEMORY[0x1F40D6728]();
}

uint64_t sub_1C2B73B50()
{
  return MEMORY[0x1F40D68A0]();
}

uint64_t sub_1C2B73B60()
{
  return MEMORY[0x1F40D6918]();
}

uint64_t sub_1C2B73B70()
{
  return MEMORY[0x1F40D6950]();
}

uint64_t sub_1C2B73B80()
{
  return MEMORY[0x1F40D6990]();
}

uint64_t sub_1C2B73B90()
{
  return MEMORY[0x1F40D69A0]();
}

uint64_t sub_1C2B73BA0()
{
  return MEMORY[0x1F40D69A8]();
}

uint64_t sub_1C2B73BB0()
{
  return MEMORY[0x1F40D69E0]();
}

uint64_t sub_1C2B73BC0()
{
  return MEMORY[0x1F40D6A00]();
}

uint64_t sub_1C2B73BD0()
{
  return MEMORY[0x1F40D6A08]();
}

uint64_t sub_1C2B73BE0()
{
  return MEMORY[0x1F40D6A20]();
}

uint64_t sub_1C2B73BF0()
{
  return MEMORY[0x1F40D6A28]();
}

uint64_t sub_1C2B73C00()
{
  return MEMORY[0x1F40D6A40]();
}

uint64_t sub_1C2B73C10()
{
  return MEMORY[0x1F40D6A68]();
}

uint64_t sub_1C2B73C20()
{
  return MEMORY[0x1F40D6A78]();
}

uint64_t sub_1C2B73C30()
{
  return MEMORY[0x1F40D6AF0]();
}

uint64_t sub_1C2B73C40()
{
  return MEMORY[0x1F40D6B10]();
}

uint64_t sub_1C2B73C50()
{
  return MEMORY[0x1F40D6B18]();
}

uint64_t sub_1C2B73C60()
{
  return MEMORY[0x1F40D6B30]();
}

uint64_t sub_1C2B73C70()
{
  return MEMORY[0x1F40D6B48]();
}

uint64_t sub_1C2B73C80()
{
  return MEMORY[0x1F40D6B68]();
}

uint64_t sub_1C2B73C90()
{
  return MEMORY[0x1F40D6B70]();
}

uint64_t sub_1C2B73CA0()
{
  return MEMORY[0x1F40D6B78]();
}

uint64_t sub_1C2B73CB0()
{
  return MEMORY[0x1F40D6B80]();
}

uint64_t sub_1C2B73CC0()
{
  return MEMORY[0x1F40D6B88]();
}

uint64_t sub_1C2B73CD0()
{
  return MEMORY[0x1F40D6B90]();
}

uint64_t sub_1C2B73CE0()
{
  return MEMORY[0x1F40D6BA0]();
}

uint64_t sub_1C2B73CF0()
{
  return MEMORY[0x1F40D6BA8]();
}

uint64_t sub_1C2B73D00()
{
  return MEMORY[0x1F40D6BD8]();
}

uint64_t sub_1C2B73D10()
{
  return MEMORY[0x1F40D6BE0]();
}

uint64_t sub_1C2B73D20()
{
  return MEMORY[0x1F40D6BF8]();
}

uint64_t sub_1C2B73D30()
{
  return MEMORY[0x1F40D6C50]();
}

uint64_t sub_1C2B73D40()
{
  return MEMORY[0x1F40D6D80]();
}

uint64_t sub_1C2B73D50()
{
  return MEMORY[0x1F40D6DF0]();
}

uint64_t sub_1C2B73D60()
{
  return MEMORY[0x1F40D6E18]();
}

uint64_t sub_1C2B73D70()
{
  return MEMORY[0x1F40D6E30]();
}

uint64_t sub_1C2B73D80()
{
  return MEMORY[0x1F4186C78]();
}

uint64_t sub_1C2B73D90()
{
  return MEMORY[0x1F4186CB0]();
}

uint64_t sub_1C2B73DA0()
{
  return MEMORY[0x1F4186CE0]();
}

uint64_t sub_1C2B73DB0()
{
  return MEMORY[0x1F4186CF8]();
}

uint64_t sub_1C2B73DC0()
{
  return MEMORY[0x1F4186D60]();
}

uint64_t sub_1C2B73DD0()
{
  return MEMORY[0x1F4186E28]();
}

uint64_t sub_1C2B73DE0()
{
  return MEMORY[0x1F4186E60]();
}

uint64_t sub_1C2B73DF0()
{
  return MEMORY[0x1F4186EF8]();
}

uint64_t sub_1C2B73E00()
{
  return MEMORY[0x1F4186F18]();
}

uint64_t sub_1C2B73E10()
{
  return MEMORY[0x1F4186F40]();
}

uint64_t sub_1C2B73E20()
{
  return MEMORY[0x1F4121440]();
}

uint64_t sub_1C2B73E30()
{
  return MEMORY[0x1F4121448]();
}

uint64_t sub_1C2B73E40()
{
  return MEMORY[0x1F40E7808]();
}

uint64_t sub_1C2B73E50()
{
  return MEMORY[0x1F40E7818]();
}

uint64_t sub_1C2B73E60()
{
  return MEMORY[0x1F40E7820]();
}

uint64_t sub_1C2B73E70()
{
  return MEMORY[0x1F40E7828]();
}

uint64_t sub_1C2B73E80()
{
  return MEMORY[0x1F40E7830]();
}

uint64_t sub_1C2B73E90()
{
  return MEMORY[0x1F40E7838]();
}

uint64_t sub_1C2B73EA0()
{
  return MEMORY[0x1F40E7840]();
}

uint64_t sub_1C2B73EB0()
{
  return MEMORY[0x1F40E7848]();
}

uint64_t sub_1C2B73ED0()
{
  return MEMORY[0x1F4183288]();
}

uint64_t sub_1C2B73EE0()
{
  return MEMORY[0x1F40E6000]();
}

uint64_t sub_1C2B73EF0()
{
  return MEMORY[0x1F40E6030]();
}

uint64_t sub_1C2B73F00()
{
  return MEMORY[0x1F4183318]();
}

uint64_t sub_1C2B73F10()
{
  return MEMORY[0x1F41835C0]();
}

uint64_t sub_1C2B73F20()
{
  return MEMORY[0x1F41835C8]();
}

uint64_t sub_1C2B73F30()
{
  return MEMORY[0x1F4183720]();
}

uint64_t sub_1C2B73F40()
{
  return MEMORY[0x1F4183730]();
}

uint64_t sub_1C2B73F50()
{
  return MEMORY[0x1F4183838]();
}

uint64_t sub_1C2B73F60()
{
  return MEMORY[0x1F40E6190]();
}

uint64_t sub_1C2B73F70()
{
  return MEMORY[0x1F40E61A0]();
}

uint64_t sub_1C2B73F80()
{
  return MEMORY[0x1F40E61B8]();
}

uint64_t sub_1C2B73F90()
{
  return MEMORY[0x1F40E61C8]();
}

uint64_t sub_1C2B73FA0()
{
  return MEMORY[0x1F40E61D8]();
}

uint64_t sub_1C2B73FB0()
{
  return MEMORY[0x1F40E61E8]();
}

uint64_t sub_1C2B73FC0()
{
  return MEMORY[0x1F40E61F8]();
}

uint64_t sub_1C2B73FD0()
{
  return MEMORY[0x1F40E6208]();
}

uint64_t sub_1C2B73FE0()
{
  return MEMORY[0x1F40E6238]();
}

uint64_t sub_1C2B73FF0()
{
  return MEMORY[0x1F40E6268]();
}

uint64_t sub_1C2B74000()
{
  return MEMORY[0x1F40E62A0]();
}

uint64_t sub_1C2B74010()
{
  return MEMORY[0x1F4183880]();
}

uint64_t sub_1C2B74020()
{
  return MEMORY[0x1F41838A0]();
}

uint64_t sub_1C2B74030()
{
  return MEMORY[0x1F4120D30]();
}

uint64_t sub_1C2B74040()
{
  return MEMORY[0x1F4120D38]();
}

uint64_t sub_1C2B74050()
{
  return MEMORY[0x1F41838D8]();
}

uint64_t sub_1C2B74060()
{
  return MEMORY[0x1F4183958]();
}

uint64_t sub_1C2B74070()
{
  return MEMORY[0x1F41839B0]();
}

uint64_t sub_1C2B74080()
{
  return MEMORY[0x1F41839F0]();
}

uint64_t sub_1C2B74090()
{
  return MEMORY[0x1F41839F8]();
}

uint64_t sub_1C2B740A0()
{
  return MEMORY[0x1F4183A38]();
}

uint64_t sub_1C2B740B0()
{
  return MEMORY[0x1F4183A80]();
}

uint64_t sub_1C2B740C0()
{
  return MEMORY[0x1F4183A88]();
}

uint64_t sub_1C2B740D0()
{
  return MEMORY[0x1F4183AA0]();
}

uint64_t sub_1C2B740E0()
{
  return MEMORY[0x1F4183AA8]();
}

uint64_t sub_1C2B740F0()
{
  return MEMORY[0x1F4183AB0]();
}

uint64_t sub_1C2B74100()
{
  return MEMORY[0x1F4183B10]();
}

uint64_t sub_1C2B74110()
{
  return MEMORY[0x1F4183B30]();
}

uint64_t sub_1C2B74120()
{
  return MEMORY[0x1F4183B58]();
}

uint64_t sub_1C2B74130()
{
  return MEMORY[0x1F4183B90]();
}

uint64_t sub_1C2B74140()
{
  return MEMORY[0x1F4183BA0]();
}

uint64_t sub_1C2B74150()
{
  return MEMORY[0x1F40E6310]();
}

uint64_t sub_1C2B74160()
{
  return MEMORY[0x1F4183BA8]();
}

uint64_t sub_1C2B74170()
{
  return MEMORY[0x1F4183BE8]();
}

uint64_t sub_1C2B74180()
{
  return MEMORY[0x1F4183C18]();
}

uint64_t sub_1C2B74190()
{
  return MEMORY[0x1F4183D98]();
}

uint64_t sub_1C2B741A0()
{
  return MEMORY[0x1F4183E10]();
}

uint64_t sub_1C2B741B0()
{
  return MEMORY[0x1F4183E80]();
}

uint64_t sub_1C2B741C0()
{
  return MEMORY[0x1F40E6338]();
}

uint64_t sub_1C2B741D0()
{
  return MEMORY[0x1F40E6370]();
}

uint64_t sub_1C2B741E0()
{
  return MEMORY[0x1F4183E90]();
}

uint64_t sub_1C2B741F0()
{
  return MEMORY[0x1F4183E98]();
}

uint64_t sub_1C2B74200()
{
  return MEMORY[0x1F4183EA8]();
}

uint64_t sub_1C2B74210()
{
  return MEMORY[0x1F4183EC8]();
}

uint64_t sub_1C2B74220()
{
  return MEMORY[0x1F4183EF0]();
}

uint64_t sub_1C2B74230()
{
  return MEMORY[0x1F4183F08]();
}

uint64_t sub_1C2B74240()
{
  return MEMORY[0x1F4183F18]();
}

uint64_t sub_1C2B74250()
{
  return MEMORY[0x1F4183F38]();
}

uint64_t sub_1C2B74260()
{
  return MEMORY[0x1F4183F40]();
}

uint64_t sub_1C2B74270()
{
  return MEMORY[0x1F4183F78]();
}

uint64_t sub_1C2B74280()
{
  return MEMORY[0x1F4183FA8]();
}

uint64_t sub_1C2B74290()
{
  return MEMORY[0x1F40E6388]();
}

uint64_t sub_1C2B742A0()
{
  return MEMORY[0x1F4187BF0]();
}

uint64_t sub_1C2B742B0()
{
  return MEMORY[0x1F4187C00]();
}

uint64_t sub_1C2B742C0()
{
  return MEMORY[0x1F4187C08]();
}

uint64_t sub_1C2B742D0()
{
  return MEMORY[0x1F4187C10]();
}

uint64_t sub_1C2B74300()
{
  return MEMORY[0x1F4187CF8]();
}

uint64_t sub_1C2B74310()
{
  return MEMORY[0x1F4187D00]();
}

uint64_t sub_1C2B74320()
{
  return MEMORY[0x1F4187D38]();
}

uint64_t sub_1C2B74330()
{
  return MEMORY[0x1F4187D78]();
}

uint64_t sub_1C2B74350()
{
  return MEMORY[0x1F4187DC8]();
}

uint64_t sub_1C2B74360()
{
  return MEMORY[0x1F40E63B8]();
}

uint64_t sub_1C2B74370()
{
  return MEMORY[0x1F40E6430]();
}

uint64_t sub_1C2B74380()
{
  return MEMORY[0x1F40E6458]();
}

uint64_t sub_1C2B74390()
{
  return MEMORY[0x1F4184138]();
}

uint64_t sub_1C2B743A0()
{
  return MEMORY[0x1F4184178]();
}

uint64_t sub_1C2B743B0()
{
  return MEMORY[0x1F4184180]();
}

uint64_t sub_1C2B743C0()
{
  return MEMORY[0x1F41841A8]();
}

uint64_t sub_1C2B743D0()
{
  return MEMORY[0x1F41841D0]();
}

uint64_t sub_1C2B743E0()
{
  return MEMORY[0x1F4184230]();
}

uint64_t sub_1C2B743F0()
{
  return MEMORY[0x1F40E6478]();
}

uint64_t sub_1C2B74400()
{
  return MEMORY[0x1F41842D0]();
}

uint64_t sub_1C2B74410()
{
  return MEMORY[0x1F41842F8]();
}

uint64_t sub_1C2B74420()
{
  return MEMORY[0x1F4184328]();
}

uint64_t sub_1C2B74430()
{
  return MEMORY[0x1F4184330]();
}

uint64_t sub_1C2B74440()
{
  return MEMORY[0x1F4184338]();
}

uint64_t sub_1C2B74450()
{
  return MEMORY[0x1F4184398]();
}

uint64_t sub_1C2B74460()
{
  return MEMORY[0x1F4184440]();
}

uint64_t sub_1C2B74470()
{
  return MEMORY[0x1F41845B0]();
}

uint64_t sub_1C2B74480()
{
  return MEMORY[0x1F40D9658]();
}

uint64_t sub_1C2B74490()
{
  return MEMORY[0x1F40D9680]();
}

uint64_t sub_1C2B744A0()
{
  return MEMORY[0x1F41211E0]();
}

uint64_t sub_1C2B744B0()
{
  return MEMORY[0x1F41886C0]();
}

uint64_t sub_1C2B744C0()
{
  return MEMORY[0x1F41886E0]();
}

uint64_t sub_1C2B744D0()
{
  return MEMORY[0x1F41886E8]();
}

uint64_t sub_1C2B744E0()
{
  return MEMORY[0x1F4188700]();
}

uint64_t sub_1C2B744F0()
{
  return MEMORY[0x1F411F248]();
}

uint64_t sub_1C2B74500()
{
  return MEMORY[0x1F40E66A8]();
}

uint64_t sub_1C2B74510()
{
  return MEMORY[0x1F4186FD8]();
}

uint64_t sub_1C2B74520()
{
  return MEMORY[0x1F4187040]();
}

uint64_t sub_1C2B74530()
{
  return MEMORY[0x1F41870A0]();
}

uint64_t sub_1C2B74540()
{
  return MEMORY[0x1F41870B8]();
}

uint64_t sub_1C2B74550()
{
  return MEMORY[0x1F41870E0]();
}

uint64_t sub_1C2B74560()
{
  return MEMORY[0x1F4187100]();
}

uint64_t sub_1C2B74570()
{
  return MEMORY[0x1F4187110]();
}

uint64_t sub_1C2B74580()
{
  return MEMORY[0x1F4187268]();
}

uint64_t sub_1C2B74590()
{
  return MEMORY[0x1F4187288]();
}

uint64_t sub_1C2B745A0()
{
  return MEMORY[0x1F41666A0]();
}

uint64_t sub_1C2B745B0()
{
  return MEMORY[0x1F411EF18]();
}

uint64_t sub_1C2B745C0()
{
  return MEMORY[0x1F41667E8]();
}

uint64_t sub_1C2B745D0()
{
  return MEMORY[0x1F40E7A00]();
}

uint64_t sub_1C2B745E0()
{
  return MEMORY[0x1F41874A8]();
}

uint64_t sub_1C2B745F0()
{
  return MEMORY[0x1F41874C0]();
}

uint64_t sub_1C2B74600()
{
  return MEMORY[0x1F41874D0]();
}

uint64_t sub_1C2B74610()
{
  return MEMORY[0x1F41874E0]();
}

uint64_t sub_1C2B74620()
{
  return MEMORY[0x1F4188728]();
}

uint64_t sub_1C2B74630()
{
  return MEMORY[0x1F4184640]();
}

uint64_t sub_1C2B74640()
{
  return MEMORY[0x1F41847A0]();
}

uint64_t sub_1C2B74650()
{
  return MEMORY[0x1F41847C0]();
}

uint64_t sub_1C2B74660()
{
  return MEMORY[0x1F4184820]();
}

uint64_t sub_1C2B74670()
{
  return MEMORY[0x1F40E6BA8]();
}

uint64_t sub_1C2B74680()
{
  return MEMORY[0x1F40E6C78]();
}

uint64_t sub_1C2B74690()
{
  return MEMORY[0x1F40E6CA0]();
}

uint64_t sub_1C2B746A0()
{
  return MEMORY[0x1F40E6D58]();
}

uint64_t sub_1C2B746B0()
{
  return MEMORY[0x1F40E6D88]();
}

uint64_t sub_1C2B746C0()
{
  return MEMORY[0x1F41876A8]();
}

uint64_t sub_1C2B746D0()
{
  return MEMORY[0x1F4184978]();
}

uint64_t sub_1C2B746E0()
{
  return MEMORY[0x1F4184A80]();
}

uint64_t sub_1C2B74700()
{
  return MEMORY[0x1F4184B18]();
}

uint64_t sub_1C2B74710()
{
  return MEMORY[0x1F4184B20]();
}

uint64_t sub_1C2B74720()
{
  return MEMORY[0x1F4184B30]();
}

uint64_t sub_1C2B74730()
{
  return MEMORY[0x1F4184B58]();
}

uint64_t sub_1C2B74740()
{
  return MEMORY[0x1F4184B60]();
}

uint64_t sub_1C2B74750()
{
  return MEMORY[0x1F4184B68]();
}

uint64_t sub_1C2B74760()
{
  return MEMORY[0x1F4184B80]();
}

uint64_t sub_1C2B74770()
{
  return MEMORY[0x1F4184B88]();
}

uint64_t sub_1C2B74780()
{
  return MEMORY[0x1F4184B90]();
}

uint64_t sub_1C2B74790()
{
  return MEMORY[0x1F4184BA8]();
}

uint64_t sub_1C2B747A0()
{
  return MEMORY[0x1F4184BB0]();
}

uint64_t sub_1C2B747B0()
{
  return MEMORY[0x1F4184BC0]();
}

uint64_t sub_1C2B747C0()
{
  return MEMORY[0x1F4184BD8]();
}

uint64_t sub_1C2B747D0()
{
  return MEMORY[0x1F4184C90]();
}

uint64_t sub_1C2B747E0()
{
  return MEMORY[0x1F4184C98]();
}

uint64_t sub_1C2B747F0()
{
  return MEMORY[0x1F4184CA0]();
}

uint64_t sub_1C2B74800()
{
  return MEMORY[0x1F4184CA8]();
}

uint64_t sub_1C2B74810()
{
  return MEMORY[0x1F4184CB0]();
}

uint64_t sub_1C2B74820()
{
  return MEMORY[0x1F4184CE8]();
}

uint64_t sub_1C2B74830()
{
  return MEMORY[0x1F4184CF0]();
}

uint64_t sub_1C2B74840()
{
  return MEMORY[0x1F4184D78]();
}

uint64_t sub_1C2B74850()
{
  return MEMORY[0x1F4184D80]();
}

uint64_t sub_1C2B74860()
{
  return MEMORY[0x1F4184D88]();
}

uint64_t sub_1C2B74870()
{
  return MEMORY[0x1F4184DD0]();
}

uint64_t sub_1C2B74880()
{
  return MEMORY[0x1F4184DE8]();
}

uint64_t sub_1C2B74890()
{
  return MEMORY[0x1F4184DF0]();
}

uint64_t sub_1C2B748A0()
{
  return MEMORY[0x1F4184E38]();
}

uint64_t sub_1C2B748B0()
{
  return MEMORY[0x1F4184E68]();
}

uint64_t sub_1C2B748C0()
{
  return MEMORY[0x1F4184EA8]();
}

uint64_t sub_1C2B748D0()
{
  return MEMORY[0x1F4184EC8]();
}

uint64_t sub_1C2B748E0()
{
  return MEMORY[0x1F4184ED8]();
}

uint64_t sub_1C2B748F0()
{
  return MEMORY[0x1F4184EE8]();
}

uint64_t sub_1C2B74900()
{
  return MEMORY[0x1F4184EF0]();
}

uint64_t sub_1C2B74910()
{
  return MEMORY[0x1F4184F28]();
}

uint64_t sub_1C2B74920()
{
  return MEMORY[0x1F4184F30]();
}

uint64_t sub_1C2B74930()
{
  return MEMORY[0x1F4184F48]();
}

uint64_t sub_1C2B74940()
{
  return MEMORY[0x1F4184F68]();
}

uint64_t sub_1C2B74950()
{
  return MEMORY[0x1F4184F70]();
}

uint64_t sub_1C2B74960()
{
  return MEMORY[0x1F4185048]();
}

uint64_t sub_1C2B74970()
{
  return MEMORY[0x1F4185050]();
}

uint64_t sub_1C2B74980()
{
  return MEMORY[0x1F4185298]();
}

uint64_t sub_1C2B74990()
{
  return MEMORY[0x1F41852A0]();
}

uint64_t sub_1C2B749A0()
{
  return MEMORY[0x1F41852B0]();
}

uint64_t sub_1C2B749B0()
{
  return MEMORY[0x1F4185340]();
}

uint64_t sub_1C2B749C0()
{
  return MEMORY[0x1F4185350]();
}

uint64_t sub_1C2B749D0()
{
  return MEMORY[0x1F4185368]();
}

uint64_t sub_1C2B749E0()
{
  return MEMORY[0x1F4185370]();
}

uint64_t sub_1C2B749F0()
{
  return MEMORY[0x1F4185380]();
}

uint64_t sub_1C2B74A00()
{
  return MEMORY[0x1F4185388]();
}

uint64_t sub_1C2B74A10()
{
  return MEMORY[0x1F4185398]();
}

uint64_t sub_1C2B74A30()
{
  return MEMORY[0x1F41854B8]();
}

uint64_t sub_1C2B74A40()
{
  return MEMORY[0x1F41854D8]();
}

uint64_t sub_1C2B74A50()
{
  return MEMORY[0x1F41854E0]();
}

uint64_t sub_1C2B74A60()
{
  return MEMORY[0x1F41854F8]();
}

uint64_t sub_1C2B74A70()
{
  return MEMORY[0x1F4185568]();
}

uint64_t sub_1C2B74A80()
{
  return MEMORY[0x1F4185598]();
}

uint64_t sub_1C2B74A90()
{
  return MEMORY[0x1F41855E0]();
}

uint64_t sub_1C2B74AA0()
{
  return MEMORY[0x1F4185608]();
}

uint64_t sub_1C2B74AB0()
{
  return MEMORY[0x1F4185628]();
}

uint64_t sub_1C2B74AC0()
{
  return MEMORY[0x1F4185690]();
}

uint64_t sub_1C2B74AD0()
{
  return MEMORY[0x1F41856B0]();
}

uint64_t sub_1C2B74AE0()
{
  return MEMORY[0x1F41856C0]();
}

uint64_t sub_1C2B74AF0()
{
  return MEMORY[0x1F4185730]();
}

uint64_t sub_1C2B74B00()
{
  return MEMORY[0x1F4185740]();
}

uint64_t sub_1C2B74B10()
{
  return MEMORY[0x1F4185758]();
}

uint64_t sub_1C2B74B20()
{
  return MEMORY[0x1F4185768]();
}

uint64_t sub_1C2B74B40()
{
  return MEMORY[0x1F4185A30]();
}

uint64_t sub_1C2B74B50()
{
  return MEMORY[0x1F4185A40]();
}

uint64_t sub_1C2B74B60()
{
  return MEMORY[0x1F4185B90]();
}

uint64_t sub_1C2B74B70()
{
  return MEMORY[0x1F4185D10]();
}

uint64_t sub_1C2B74B90()
{
  return MEMORY[0x1F4185D68]();
}

uint64_t sub_1C2B74BA0()
{
  return MEMORY[0x1F4185DD8]();
}

uint64_t sub_1C2B74BB0()
{
  return MEMORY[0x1F4185DE0]();
}

uint64_t sub_1C2B74BE0()
{
  return MEMORY[0x1F4185E00]();
}

uint64_t sub_1C2B74BF0()
{
  return MEMORY[0x1F4185E08]();
}

uint64_t sub_1C2B74C00()
{
  return MEMORY[0x1F4185E10]();
}

uint64_t sub_1C2B74C10()
{
  return MEMORY[0x1F4185E18]();
}

uint64_t sub_1C2B74C20()
{
  return MEMORY[0x1F4185EB0]();
}

uint64_t sub_1C2B74C30()
{
  return MEMORY[0x1F4185EC8]();
}

uint64_t sub_1C2B74C40()
{
  return MEMORY[0x1F4185ED0]();
}

uint64_t sub_1C2B74C50()
{
  return MEMORY[0x1F4185EE8]();
}

uint64_t sub_1C2B74C60()
{
  return MEMORY[0x1F4185EF8]();
}

uint64_t sub_1C2B74C70()
{
  return MEMORY[0x1F40D6E78]();
}

uint64_t sub_1C2B74C80()
{
  return MEMORY[0x1F4185FC8]();
}

uint64_t sub_1C2B74C90()
{
  return MEMORY[0x1F4185FF0]();
}

uint64_t sub_1C2B74CC0()
{
  return MEMORY[0x1F4121518]();
}

uint64_t sub_1C2B74CD0()
{
  return MEMORY[0x1F4186318]();
}

CGColorRef CGColorCreate(CGColorSpaceRef space, const CGFloat *components)
{
  return (CGColorRef)MEMORY[0x1F40D9970](space, components);
}

CGColorRef CGColorCreateCopyByMatchingToColorSpace(CGColorSpaceRef a1, CGColorRenderingIntent intent, CGColorRef color, CFDictionaryRef options)
{
  return (CGColorRef)MEMORY[0x1F40D9980](a1, *(void *)&intent, color, options);
}

CGColorSpaceRef CGColorSpaceCreateDeviceRGB(void)
{
  return (CGColorSpaceRef)MEMORY[0x1F40D9AF8]();
}

CGColorSpaceRef CGColorSpaceCreateWithName(CFStringRef name)
{
  return (CGColorSpaceRef)MEMORY[0x1F40D9B60](name);
}

void CGContextDrawLinearGradient(CGContextRef c, CGGradientRef gradient, CGPoint startPoint, CGPoint endPoint, CGGradientDrawingOptions options)
{
}

void CGContextRestoreGState(CGContextRef c)
{
}

void CGContextSetBlendMode(CGContextRef c, CGBlendMode mode)
{
}

CGGradientRef CGGradientCreateWithColors(CGColorSpaceRef space, CFArrayRef colors, const CGFloat *locations)
{
  return (CGGradientRef)MEMORY[0x1F40DA778](space, colors, locations);
}

BOOL CGRectEqualToRect(CGRect rect1, CGRect rect2)
{
  return MEMORY[0x1F40DB248]((__n128)rect1.origin, *(__n128 *)&rect1.origin.y, (__n128)rect1.size, *(__n128 *)&rect1.size.height, (__n128)rect2.origin, *(__n128 *)&rect2.origin.y, (__n128)rect2.size, *(__n128 *)&rect2.size.height);
}

CGFloat CGRectGetHeight(CGRect rect)
{
  MEMORY[0x1F40DB250]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetWidth(CGRect rect)
{
  MEMORY[0x1F40DB2A8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

uint64_t HKLogMedication()
{
  return MEMORY[0x1F40E7DD8]();
}

uint64_t HKMedicationAnalyticsWeeksBetweenDates()
{
  return MEMORY[0x1F411F378]();
}

uint64_t HKSensitiveLogItem()
{
  return MEMORY[0x1F40E7F00]();
}

uint64_t HKStringFromHKMedicationListOnboardingAlgorithmType()
{
  return MEMORY[0x1F411F390]();
}

uint64_t HKStringFromListUserDomainType()
{
  return MEMORY[0x1F40E7FE8]();
}

uint64_t HKStringFromMedicationListOnboardingActionType()
{
  return MEMORY[0x1F411F398]();
}

uint64_t HKStringFromMedicationListOnboardingDetailsEntryType()
{
  return MEMORY[0x1F411F3A0]();
}

uint64_t HKStringFromMedicationListOnboardingProvenanceType()
{
  return MEMORY[0x1F411F3A8]();
}

uint64_t HKStringFromMedicationListOnboardingStepType()
{
  return MEMORY[0x1F411F3B0]();
}

uint64_t HKStringFromMedicationRoomAnalyticsAction()
{
  return MEMORY[0x1F411F3B8]();
}

uint64_t HKStringFromMedicationRoomProvenance()
{
  return MEMORY[0x1F411F3C0]();
}

uint64_t HKStringFromMedicationRoomType()
{
  return MEMORY[0x1F411F3C8]();
}

uint64_t HKStringFromMedicationScheduleType()
{
  return MEMORY[0x1F411F3D0]();
}

CGContextRef UIGraphicsGetCurrentContext(void)
{
  return (CGContextRef)MEMORY[0x1F4166C48]();
}

void UIGraphicsPopContext(void)
{
}

void UIGraphicsPushContext(CGContextRef context)
{
}

void UIRectFillUsingBlendMode(CGRect rect, CGBlendMode blendMode)
{
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x1F40C9A70](aBlock);
}

void _Block_release(const void *aBlock)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x1F4186370]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x1F4186388]();
}

void bzero(void *a1, size_t a2)
{
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return (dispatch_semaphore_t)MEMORY[0x1F40CBC30](value);
}

void free(void *a1)
{
}

float log2f(float a1)
{
  MEMORY[0x1F40CC8B0](a1);
  return result;
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x1F40CCB10](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x1F40CCB80](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1F40CCCF0](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x1F40CCD10](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x1F4181640](a1);
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x1F4181660](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1F4181678](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x1F4181798](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1F41817A8](a1, a2);
}

uint64_t self
{
  return MEMORY[0x1F41817D0]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x1F41818B0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1F41818C8](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x1F40CD3B8](oslog, type);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

uint64_t swift_allocError()
{
  return MEMORY[0x1F41863E0]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x1F41863E8]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x1F4186410]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x1F4186418]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x1F4186420]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x1F4186428]();
}

uint64_t swift_asyncLet_begin()
{
  return MEMORY[0x1F41881C8]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x1F4186430]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x1F4186440]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x1F4186448]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x1F4186450]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x1F4186458]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x1F41881F0]();
}

uint64_t swift_continuation_throwingResume()
{
  return MEMORY[0x1F4188200]();
}

uint64_t swift_continuation_throwingResumeWithError()
{
  return MEMORY[0x1F4188208]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x1F4186488]();
}

uint64_t swift_defaultActor_destroy()
{
  return MEMORY[0x1F4188218]();
}

uint64_t swift_defaultActor_initialize()
{
  return MEMORY[0x1F4188220]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x1F41864B8]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x1F41864E0]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x1F4186518]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x1F4186528]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x1F4186530]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x1F4186540]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x1F4186550]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x1F4186570]();
}

uint64_t swift_getExistentialMetatypeMetadata()
{
  return MEMORY[0x1F4186588]();
}

uint64_t swift_getExistentialTypeMetadata()
{
  return MEMORY[0x1F4186590]();
}

uint64_t swift_getExtendedExistentialTypeMetadata()
{
  return MEMORY[0x1F4186598]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x1F41865E0]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x1F41865E8]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x1F41865F8]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x1F4186608]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x1F4186610]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x1F4186628]();
}

uint64_t swift_getTupleTypeLayout()
{
  return MEMORY[0x1F4186630]();
}

uint64_t swift_getTupleTypeMetadata()
{
  return MEMORY[0x1F4186648]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x1F4186650]();
}

uint64_t swift_getTupleTypeMetadata3()
{
  return MEMORY[0x1F4186658]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x1F4186680]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x1F4186690]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x1F41866A0]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x1F41866A8]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x1F41866B8]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x1F41866C8]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x1F41866F8]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x1F4186700]();
}

uint64_t swift_once()
{
  return MEMORY[0x1F4186728]();
}

uint64_t swift_release()
{
  return MEMORY[0x1F4186758]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x1F4186760]();
}

uint64_t swift_retain()
{
  return MEMORY[0x1F4186770]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x1F4186778]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x1F4186790]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x1F4186798]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x1F41867A0]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x1F41867A8]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x1F41867B8]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x1F4188250]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x1F4188258]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x1F4188260]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x1F41867D8]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x1F41867E0]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x1F41867F0]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x1F4186858]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x1F4186860]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x1F4186868]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x1F4186898]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x1F41868B8]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x1F41868C0]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x1F41868C8]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x1F41868E0]();
}