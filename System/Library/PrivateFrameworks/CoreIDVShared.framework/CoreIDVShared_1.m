uint64_t sub_1D78EA3E4()
{
  return sub_1D78EA3FC((uint64_t (*)(void, void, void, void, void, void, void))sub_1D78E6898);
}

uint64_t sub_1D78EA3FC(uint64_t (*a1)(void, void, void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8]);
}

uint64_t MobileAssetManager.__allocating_init()()
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  return result;
}

uint64_t MobileAssetManager.init()()
{
  uint64_t result = v0;
  *(void *)(v0 + 16) = 0;
  return result;
}

id sub_1D78EA484()
{
  v1 = *(void **)(v0 + 16);
  if (v1)
  {
    id v2 = *(id *)(v0 + 16);
  }
  else
  {
    id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F77FE8]), sel_init);
    objc_msgSend(v3, sel_setRequiresPowerPluggedIn_, 0);
    objc_msgSend(v3, sel_setAllowsCellularAccess_, 1);
    objc_msgSend(v3, sel_setAllowsExpensiveAccess_, 1);
    objc_msgSend(v3, sel_setDiscretionary_, 0);
    v4 = *(void **)(v0 + 16);
    *(void *)(v0 + 16) = v3;
    id v2 = v3;

    v1 = 0;
  }
  id v5 = v1;
  return v2;
}

void sub_1D78EA540(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1D7A9B5F8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8, v10, v11, v12, v13, v14, v15, v16);
  v18 = (char *)&aBlock[-1] - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v19 = *a1;
  if (qword_1EBDF9DC8 != -1) {
    swift_once();
  }
  uint64_t v20 = __swift_project_value_buffer(v8, (uint64_t)qword_1EBDFBE70);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v18, v20, v8);
  v21 = sub_1D7A9B5D8();
  os_log_type_t v22 = sub_1D7A9C748();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc();
    HIDWORD(v32) = v19;
    uint64_t v24 = a3;
    v25 = v23;
    *(_WORD *)v23 = 0;
    _os_log_impl(&dword_1D7853000, v21, v22, "Start MobileAsset Catalog download", v23, 2u);
    v26 = v25;
    a3 = v24;
    LOBYTE(v19) = BYTE4(v32);
    MEMORY[0x1D947D740](v26, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v9 + 8))(v18, v8);
  v27 = self;
  v28 = (void *)sub_1D7A9BF98();
  swift_bridgeObjectRelease();
  id v29 = sub_1D78EA484();
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = a3;
  *(void *)(v30 + 24) = a4;
  *(unsigned char *)(v30 + 32) = v19;
  *(void *)(v30 + 40) = a2;
  aBlock[4] = sub_1D78EDCE4;
  aBlock[5] = v30;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D78EB010;
  aBlock[3] = &block_descriptor_19;
  v31 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  objc_msgSend(v27, sel_startCatalogDownload_options_then_, v28, v29, v31);
  _Block_release(v31);
}

void sub_1D78EA868(uint64_t a1, void (*a2)(void *, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a1)
  {
    if (a1 != 44)
    {
      uint64_t aBlock = 450;
      unint64_t v41 = 0xE000000000000000;
      sub_1D7A9CC48();
      sub_1D7A9C128();
      uint64_t v46 = a1;
      type metadata accessor for MADownloadResult(0);
      uint64_t v29 = v28;
      sub_1D7A9CE78();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF8678);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1D7AA08E0;
      *(unsigned char *)(inited + 32) = 20;
      *(void *)(inited + 64) = v29;
      *(void *)(inited + 40) = a1;
      unint64_t v31 = sub_1D785EC20(inited);
      sub_1D7860544();
      uint64_t v32 = (void *)swift_allocError();
      DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0, 0xE000000000000000, (__int16 *)&aBlock, 0, v31, 0xD000000000000060, 0x80000001D7AC1D10, v33, 0xD000000000000022, 0x80000001D7AC1D80, 38);
      a2(v32, 1);

      return;
    }
    LOWORD(aBlock) = 446;
    unint64_t v8 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    uint64_t v9 = (void *)swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000015, 0x80000001D7AC1DF0, (__int16 *)&aBlock, 0, v8, 0xD000000000000060, 0x80000001D7AC1D10, v10, 0xD000000000000022, 0x80000001D7AC1D80, 34);
    goto LABEL_29;
  }
  id v12 = objc_allocWithZone(MEMORY[0x1E4F77FB8]);
  uint64_t v13 = (void *)sub_1D7A9BF98();
  swift_bridgeObjectRelease();
  id v14 = objc_msgSend(v12, sel_initWithType_, v13);

  if (!v14)
  {
    LOWORD(aBlock) = 451;
    unint64_t v37 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    uint64_t v9 = (void *)swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000016, 0x80000001D7AC1DB0, (__int16 *)&aBlock, 0, v37, 0xD000000000000060, 0x80000001D7AC1D10, v38, 0xD000000000000022, 0x80000001D7AC1D80, 45);
LABEL_29:
    a2(v9, 1);

    return;
  }
  uint64_t v39 = a3;
  id v15 = (id)*MEMORY[0x1E4F77F18];
  uint64_t v16 = (void *)sub_1D7A9BF98();
  objc_msgSend(v14, sel_addKeyValuePair_with_, v15, v16);

  uint64_t v17 = a5 + 64;
  uint64_t v18 = 1 << *(unsigned char *)(a5 + 32);
  uint64_t v19 = -1;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  uint64_t v20 = v19 & *(void *)(a5 + 64);
  int64_t v21 = (unint64_t)(v18 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v22 = 0;
  while (1)
  {
    if (v20)
    {
      v20 &= v20 - 1;
      goto LABEL_9;
    }
    int64_t v25 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v25 >= v21) {
      goto LABEL_26;
    }
    uint64_t v26 = *(void *)(v17 + 8 * v25);
    ++v22;
    if (!v26)
    {
      int64_t v22 = v25 + 1;
      if (v25 + 1 >= v21) {
        goto LABEL_26;
      }
      uint64_t v26 = *(void *)(v17 + 8 * v22);
      if (!v26)
      {
        int64_t v22 = v25 + 2;
        if (v25 + 2 >= v21) {
          goto LABEL_26;
        }
        uint64_t v26 = *(void *)(v17 + 8 * v22);
        if (!v26) {
          break;
        }
      }
    }
LABEL_24:
    uint64_t v20 = (v26 - 1) & v26;
LABEL_9:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v23 = (void *)sub_1D7A9BF98();
    swift_bridgeObjectRelease();
    uint64_t v24 = (void *)sub_1D7A9BF98();
    swift_bridgeObjectRelease();
    objc_msgSend(v14, sel_addKeyValuePair_with_, v23, v24);
  }
  int64_t v27 = v25 + 3;
  if (v27 >= v21)
  {
LABEL_26:
    swift_release();
    v34 = (void *)swift_allocObject();
    v34[2] = a2;
    v34[3] = v39;
    v34[4] = v14;
    v44 = sub_1D78EDCF8;
    v45 = v34;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    unint64_t v41 = 1107296256;
    v42 = sub_1D78EB008;
    v43 = &block_descriptor_25;
    v35 = _Block_copy(&aBlock);
    swift_retain();
    id v36 = v14;
    swift_release();
    objc_msgSend(v36, sel_queryMetaDataWithError_, v35);
    _Block_release(v35);

    return;
  }
  uint64_t v26 = *(void *)(v17 + 8 * v27);
  if (v26)
  {
    int64_t v22 = v27;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v22 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v22 >= v21) {
      goto LABEL_26;
    }
    uint64_t v26 = *(void *)(v17 + 8 * v22);
    ++v27;
    if (v26) {
      goto LABEL_24;
    }
  }
LABEL_33:
  __break(1u);
}

void sub_1D78EAE5C(int a1, id a2, void (*a3)(id, uint64_t), int a4, id a5)
{
  if (a2)
  {
    id v7 = a2;
    a3(a2, 1);
    id v8 = a2;
LABEL_3:

    return;
  }
  id v9 = objc_msgSend(a5, sel_results);
  if (!v9)
  {
    __int16 v15 = 452;
    unint64_t v12 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    uint64_t v13 = swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000015, 0x80000001D7AC1E10, &v15, 0, v12, 0xD000000000000060, 0x80000001D7AC1D10, v14, 0xD000000000000022, 0x80000001D7AC1D80, 65);
    a3((id)v13, 1);
    id v8 = (id)v13;
    goto LABEL_3;
  }
  uint64_t v10 = v9;
  sub_1D78C4038(0, &qword_1EA8438E8);
  uint64_t v11 = sub_1D7A9C318();

  a3((id)v11, 0);
  swift_bridgeObjectRelease();
}

void sub_1D78EB008(uint64_t a1, uint64_t a2, void *a3)
{
}

uint64_t sub_1D78EB010(uint64_t a1, uint64_t a2)
{
  id v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

uint64_t sub_1D78EB064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16 = *(void *)(a1 + 8);
  unsigned __int8 v19 = *(unsigned char *)a1;
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = a6;
  v17[3] = a7;
  v17[4] = a8;
  v17[5] = a4;
  v17[6] = a5;
  v17[7] = a2;
  v17[8] = a3;
  v17[9] = v8;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1D78EA540(&v19, v16, (uint64_t)sub_1D78EC1B0, (uint64_t)v17);
  return swift_release();
}

uint64_t sub_1D78EB148(void *a1, char a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v193 = a7;
  uint64_t v199 = a6;
  uint64_t v198 = a5;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8477F0);
  MEMORY[0x1F4188790](v15 - 8, v16, v17, v18, v19, v20, v21, v22);
  v190 = (char *)&v180 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v191 = sub_1D7A9AF68();
  uint64_t v192 = *(void *)(v191 - 8);
  uint64_t v31 = MEMORY[0x1F4188790](v191, v24, v25, v26, v27, v28, v29, v30);
  v188 = (char *)&v180 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v31, v33, v34, v35, v36, v37, v38, v39);
  v189 = (char *)&v180 - v40;
  sub_1D78C4038(255, &qword_1EA8438E8);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v42 = sub_1D7A9C9A8();
  uint64_t v195 = *(void *)(v42 - 8);
  uint64_t v50 = MEMORY[0x1F4188790](v42, v43, v44, v45, v46, v47, v48, v49);
  v52 = (void **)((char *)&v180 - v51);
  uint64_t v197 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v60 = MEMORY[0x1F4188790](v50, v53, v54, v55, v56, v57, v58, v59);
  v194 = (uint64_t *)((char *)&v180 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v60, v62, v63, v64, v65, v66, v67, v68);
  v200 = (void **)((char *)&v180 - v69);
  uint64_t v202 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8438F0);
  MEMORY[0x1F4188790](v202, v70, v71, v72, v73, v74, v75, v76);
  v78 = (uint64_t *)((char *)&v180 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v79 = sub_1D7A9B5F8();
  uint64_t v203 = *(void *)(v79 - 8);
  uint64_t v204 = v79;
  uint64_t v87 = MEMORY[0x1F4188790](v79, v80, v81, v82, v83, v84, v85, v86);
  uint64_t v95 = MEMORY[0x1F4188790](v87, v88, v89, v90, v91, v92, v93, v94);
  MEMORY[0x1F4188790](v95, v96, v97, v98, v99, v100, v101, v102);
  v106 = (char *)&v180 - v105;
  uint64_t v205 = a4;
  if ((a2 & 1) == 0)
  {
    uint64_t v181 = v104;
    uint64_t v182 = v103;
    v196 = v78;
    v187 = a3;
    uint64_t v201 = TupleTypeMetadata2;
    uint64_t v207 = (uint64_t)a1;
    v107 = (void *)swift_allocObject();
    v107[2] = a8;
    v107[3] = a9;
    v107[4] = a10;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8438F8);
    sub_1D7871DDC(&qword_1EA843900, &qword_1EA8438F8);
    sub_1D7A9D038();
    swift_release();
    uint64_t v108 = swift_bridgeObjectRelease();
    long long v186 = aBlock;
    long long v185 = v209;
    long long v184 = v210;
    uint64_t v183 = v211;
    MEMORY[0x1F4188790](v108, v109, v110, v111, v112, v113, v114, v115);
    *(&v180 - 6) = a8;
    *(&v180 - 5) = a9;
    uint64_t v116 = v201;
    uint64_t v177 = a10;
    uint64_t v178 = v198;
    uint64_t v179 = v199;
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA843908);
    sub_1D7871DDC(&qword_1EA843910, &qword_1EA843908);
    sub_1D7A9CE68();
    swift_getWitnessTable();
    sub_1D7A9CFA8();
    swift_getWitnessTable();
    sub_1D7A9CE68();
    swift_getWitnessTable();
    sub_1D7A9C248();
    uint64_t v117 = v197;
    if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v197 + 48))(v52, 1, v116) == 1)
    {
      (*(void (**)(void **, uint64_t))(v195 + 8))(v52, v42);
      LOWORD(aBlock) = 447;
      unint64_t v118 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
      sub_1D7860544();
      uint64_t v119 = swift_allocError();
      DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000028, 0x80000001D7AC1E40, (__int16 *)&aBlock, 0, v118, 0xD000000000000060, 0x80000001D7AC1D10, v120, 0xD00000000000003BLL, 0x80000001D7AC1E70, 93);
      uint64_t v121 = (uint64_t)v196;
      uint64_t *v196 = v119;
      swift_storeEnumTagMultiPayload();
      v187(v121);
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      return sub_1D7871C4C(v121, &qword_1EA8438F0);
    }
    uint64_t v137 = *(int *)(v116 + 48);
    v138 = (char *)v200 + v137;
    v139 = *v52;
    *v200 = *v52;
    uint64_t v140 = *(void *)(a8 - 8);
    (*(void (**)(char *, char *, uint64_t))(v140 + 32))(v138, (char *)v52 + v137, a8);
    v141 = (char *)v194 + *(int *)(v116 + 48);
    void *v194 = v139;
    (*(void (**)(char *, char *, uint64_t))(v140 + 16))(v141, v138, a8);
    v142 = *(void (**)(char *, uint64_t))(v140 + 8);
    id v143 = v139;
    v142(v141, a8);
    unsigned int v144 = objc_msgSend(v143, sel_wasLocal);
    uint64_t v146 = v203;
    uint64_t v145 = v204;
    if (v144)
    {
      id v147 = objc_msgSend(v143, sel_getLocalUrl);
      if (v147)
      {
        v148 = v147;
        v149 = v188;
        sub_1D7A9AF38();

        uint64_t v150 = v192;
        v151 = *(void (**)(char *, char *, uint64_t))(v192 + 32);
        uint64_t v152 = (uint64_t)v190;
        v153 = v149;
        uint64_t v154 = v191;
        v151(v190, v153, v191);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v150 + 56))(v152, 0, 1, v154);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v150 + 48))(v152, 1, v154) != 1)
        {
          v151(v189, (char *)v152, v154);
          if (qword_1EBDF9DC8 != -1) {
            swift_once();
          }
          uint64_t v155 = __swift_project_value_buffer(v145, (uint64_t)qword_1EBDFBE70);
          swift_beginAccess();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v146 + 16))(v181, v155, v145);
          v156 = sub_1D7A9B5D8();
          os_log_type_t v157 = sub_1D7A9C738();
          BOOL v158 = os_log_type_enabled(v156, v157);
          v159 = v187;
          if (v158)
          {
            v160 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v160 = 0;
            _os_log_impl(&dword_1D7853000, v156, v157, "Already have local asset, returning without download", v160, 2u);
            v161 = v160;
            uint64_t v154 = v191;
            MEMORY[0x1D947D740](v161, -1, -1);
          }

          (*(void (**)(uint64_t, uint64_t))(v146 + 8))(v181, v145);
          uint64_t v162 = v192;
          uint64_t v163 = (uint64_t)v196;
          v164 = v189;
          (*(void (**)(uint64_t *, char *, uint64_t))(v192 + 16))(v196, v189, v154);
          swift_storeEnumTagMultiPayload();
          v159(v163);

          swift_release();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          sub_1D7871C4C(v163, &qword_1EA8438F0);
          (*(void (**)(char *, uint64_t))(v162 + 8))(v164, v154);
          return (*(uint64_t (**)(void **, uint64_t))(v117 + 8))(v200, v201);
        }
      }
      else
      {
        uint64_t v152 = (uint64_t)v190;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v192 + 56))(v190, 1, 1, v191);
      }
      sub_1D7871C4C(v152, &qword_1EA8477F0);
    }
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v166 = __swift_project_value_buffer(v145, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v146 + 16))(v182, v166, v145);
    v167 = sub_1D7A9B5D8();
    os_log_type_t v168 = sub_1D7A9C738();
    BOOL v169 = os_log_type_enabled(v167, v168);
    v170 = v187;
    if (v169)
    {
      v171 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v171 = 0;
      _os_log_impl(&dword_1D7853000, v167, v168, "Downloading asset", v171, 2u);
      MEMORY[0x1D947D740](v171, -1, -1);
    }

    (*(void (**)(uint64_t, uint64_t))(v146 + 8))(v182, v145);
    id v172 = sub_1D78EA484();
    v173 = (void *)swift_allocObject();
    uint64_t v174 = v205;
    v173[2] = v170;
    v173[3] = v174;
    v173[4] = v143;
    *(void *)&long long v210 = sub_1D78EDDF8;
    *((void *)&v210 + 1) = v173;
    *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v209 = sub_1D78ED110;
    *((void *)&v209 + 1) = &block_descriptor_34;
    v175 = _Block_copy(&aBlock);
    id v176 = v143;
    swift_retain();
    swift_release();
    objc_msgSend(v176, sel_startDownload_completionWithError_, v172, v175);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    _Block_release(v175);

    return (*(uint64_t (**)(void **, uint64_t))(v117 + 8))(v200, v201);
  }
  v123 = (void (*)(uint64_t *))a3;
  id v124 = a1;
  if (qword_1EBDF9DC8 != -1) {
    swift_once();
  }
  uint64_t v125 = v204;
  uint64_t v126 = __swift_project_value_buffer(v204, (uint64_t)qword_1EBDFBE70);
  swift_beginAccess();
  uint64_t v127 = v203;
  (*(void (**)(char *, uint64_t, uint64_t))(v203 + 16))(v106, v126, v125);
  id v128 = a1;
  id v129 = a1;
  v130 = sub_1D7A9B5D8();
  os_log_type_t v131 = sub_1D7A9C758();
  v132 = v123;
  if (os_log_type_enabled(v130, v131))
  {
    v133 = (uint8_t *)swift_slowAlloc();
    uint64_t v134 = swift_slowAlloc();
    uint64_t v207 = v134;
    v196 = v78;
    *(_DWORD *)v133 = 136315138;
    swift_getErrorValue();
    uint64_t v135 = sub_1D7A9D548();
    uint64_t v206 = sub_1D7923300(v135, v136, &v207);
    v78 = v196;
    sub_1D7A9C9E8();
    swift_bridgeObjectRelease();
    sub_1D78EDC98(a1, 1);
    sub_1D78EDC98(a1, 1);
    _os_log_impl(&dword_1D7853000, v130, v131, "error : %s", v133, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D947D740](v134, -1, -1);
    MEMORY[0x1D947D740](v133, -1, -1);

    (*(void (**)(char *, uint64_t))(v203 + 8))(v106, v204);
  }
  else
  {
    sub_1D78EDC98(a1, 1);
    sub_1D78EDC98(a1, 1);

    (*(void (**)(char *, uint64_t))(v127 + 8))(v106, v125);
  }
  uint64_t *v78 = (uint64_t)a1;
  swift_storeEnumTagMultiPayload();
  id v165 = a1;
  v132(v78);
  sub_1D78EDC98(a1, 1);
  return sub_1D7871C4C((uint64_t)v78, &qword_1EA8438F0);
}

uint64_t sub_1D78EC168()
{
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 80, 7);
}

uint64_t sub_1D78EC1B0(void *a1, char a2)
{
  return sub_1D78EB148(a1, a2 & 1, *(void (**)(uint64_t))(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 64), *(void *)(v2 + 72), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

id sub_1D78EC1E8@<X0>(id *a1@<X0>, uint64_t a2@<X1>, id *a3@<X8>)
{
  uint64_t v6 = sub_1D7A9C9A8();
  uint64_t v14 = MEMORY[0x1F4188790](v6, v7, v8, v9, v10, v11, v12, v13);
  uint64_t v16 = (char *)v33 - v15;
  uint64_t v17 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](v14, v18, v19, v20, v21, v22, v23, v24);
  uint64_t v26 = (char *)v33 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33[0] = *a1;
  id result = objc_msgSend(v33[0], sel_attributes);
  if (result)
  {
    uint64_t v28 = result;
    sub_1D7A9BEB8();

    sub_1D78EC54C();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v16, 0, 1, a2);
    uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
    v29(v26, v16, a2);
    sub_1D78C4038(255, &qword_1EA8438E8);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    uint64_t v31 = (char *)a3 + *(int *)(TupleTypeMetadata2 + 48);
    *a3 = v33[0];
    v29(v31, v26, a2);
    (*(void (**)(id *, void, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 56))(a3, 0, 1, TupleTypeMetadata2);
    id v32 = v33[0];
    return v32;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1D78EC54C()
{
  v14[1] = *(id *)MEMORY[0x1E4F143B8];
  id v1 = objc_allocWithZone(MEMORY[0x1E4F1C9E8]);
  swift_bridgeObjectRetain();
  uint64_t v2 = (void *)sub_1D7A9BE98();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(v1, sel_initWithDictionary_, v2);

  v14[0] = 0;
  id v4 = objc_msgSend(self, sel_dataWithPropertyList_format_options_error_, v3, 200, 0, v14);
  id v5 = v14[0];
  if (v4)
  {
    uint64_t v6 = sub_1D7A9B028();
    unint64_t v8 = v7;

    sub_1D7A9ADD8();
    swift_allocObject();
    sub_1D7A9ADC8();
    sub_1D7A9ADB8();
    if (!v0)
    {
      swift_release();
      sub_1D78607E8(v6, v8);
      goto LABEL_7;
    }
    swift_release();
    sub_1D78607E8(v6, v8);
    uint64_t v9 = v0;
  }
  else
  {
    uint64_t v10 = v5;
    uint64_t v9 = (void *)sub_1D7A9AE58();

    swift_willThrow();
  }
  LOWORD(v14[0]) = 0;
  id v11 = v9;
  unint64_t v12 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
  sub_1D7860544();
  swift_allocError();
  DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(v9, 0xD000000000000010, 0x80000001D7AC1EF0, (__int16 *)v14, 0, v12, 0xD000000000000060, 0x80000001D7AC1D10, v13, 0xD000000000000016, 0x80000001D7AC1F10, 158);
  swift_willThrow();

LABEL_7:
}

uint64_t sub_1D78EC7E0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *), uint64_t a4, void *a5)
{
  uint64_t v62 = a5;
  uint64_t v65 = a3;
  uint64_t v66 = a4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8438F0);
  MEMORY[0x1F4188790](v6, v7, v8, v9, v10, v11, v12, v13);
  uint64_t v15 = (uint64_t *)((char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = sub_1D7A9B6C8();
  uint64_t v64 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16, v17, v18, v19, v20, v21, v22, v23);
  uint64_t v25 = (char *)&v62 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_1D7A9B708();
  uint64_t v26 = *(void *)(v63 - 8);
  MEMORY[0x1F4188790](v63, v27, v28, v29, v30, v31, v32, v33);
  uint64_t v35 = (char *)&v62 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_1D7A9B6D8();
  uint64_t v37 = *(void *)(v36 - 8);
  MEMORY[0x1F4188790](v36, v38, v39, v40, v41, v42, v43, v44);
  uint64_t v46 = (char *)&v62 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 != 10 && a1)
  {
    unint64_t aBlock = 0;
    unint64_t v68 = 0xE000000000000000;
    sub_1D7A9CC48();
    swift_bridgeObjectRelease();
    unint64_t aBlock = 0xD00000000000001DLL;
    unint64_t v68 = 0x80000001D7AC1EB0;
    uint64_t v73 = a1;
    sub_1D7A9D258();
    sub_1D7A9C128();
    swift_bridgeObjectRelease();
    uint64_t v55 = aBlock;
    uint64_t v56 = v68;
    LOWORD(aBlock) = 448;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF8678);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1D7AA08E0;
    *(unsigned char *)(inited + 32) = 20;
    type metadata accessor for MADownloadResult(0);
    *(void *)(inited + 64) = v58;
    *(void *)(inited + 40) = a1;
    unint64_t v59 = sub_1D785EC20(inited);
    sub_1D7860544();
    uint64_t v60 = swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, v55, v56, (__int16 *)&aBlock, 0, v59, 0xD000000000000060, 0x80000001D7AC1D10, v61, 0xD00000000000003BLL, 0x80000001D7AC1E70, 108);
    *uint64_t v15 = v60;
    swift_storeEnumTagMultiPayload();
    v65(v15);
    return sub_1D7871C4C((uint64_t)v15, &qword_1EA8438F0);
  }
  else
  {
    sub_1D78C4038(0, (unint64_t *)&qword_1EBDF9DB0);
    (*(void (**)(char *, void, uint64_t))(v37 + 104))(v46, *MEMORY[0x1E4FBCB48], v36);
    uint64_t v47 = (void *)sub_1D7A9C818();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v46, v36);
    uint64_t v48 = (void *)swift_allocObject();
    uint64_t v49 = v62;
    uint64_t v50 = v65;
    uint64_t v51 = v66;
    v48[2] = v62;
    v48[3] = v50;
    v48[4] = v51;
    uint64_t v71 = sub_1D78EDE44;
    uint64_t v72 = v48;
    unint64_t aBlock = MEMORY[0x1E4F143A8];
    unint64_t v68 = 1107296256;
    uint64_t v69 = sub_1D79899E4;
    uint64_t v70 = &block_descriptor_40;
    v52 = _Block_copy(&aBlock);
    id v53 = v49;
    swift_retain();
    sub_1D7A9B6E8();
    uint64_t v73 = MEMORY[0x1E4FBC860];
    sub_1D78EDC40();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9D98);
    sub_1D7871DDC((unint64_t *)&qword_1EBDF9DA0, &qword_1EBDF9D98);
    sub_1D7A9CBA8();
    MEMORY[0x1D947B570](0, v35, v25, v52);
    _Block_release(v52);

    (*(void (**)(char *, uint64_t))(v64 + 8))(v25, v16);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v35, v63);
    return swift_release();
  }
}

uint64_t sub_1D78ECD38(void *a1, void (*a2)(uint64_t *))
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8438F0);
  MEMORY[0x1F4188790](v4, v5, v6, v7, v8, v9, v10, v11);
  uint64_t v13 = (uint64_t *)&v53[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8477F0);
  MEMORY[0x1F4188790](v14 - 8, v15, v16, v17, v18, v19, v20, v21);
  uint64_t v23 = &v53[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v24 = sub_1D7A9AF68();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v33 = MEMORY[0x1F4188790](v24, v26, v27, v28, v29, v30, v31, v32);
  uint64_t v35 = &v53[-((v34 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v33, v36, v37, v38, v39, v40, v41, v42);
  uint64_t v44 = &v53[-v43];
  if (objc_msgSend(a1, sel_refreshState) && objc_msgSend(a1, sel_wasLocal))
  {
    id v45 = objc_msgSend(a1, sel_getLocalUrl);
    if (v45)
    {
      uint64_t v46 = v45;
      sub_1D7A9AF38();

      uint64_t v47 = v35;
      uint64_t v48 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v25 + 32);
      v48(v23, v47, v24);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v25 + 56))(v23, 0, 1, v24);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24) != 1)
      {
        v48(v44, v23, v24);
        (*(void (**)(uint64_t *, unsigned char *, uint64_t))(v25 + 16))(v13, v44, v24);
        swift_storeEnumTagMultiPayload();
        a2(v13);
        sub_1D7871C4C((uint64_t)v13, &qword_1EA8438F0);
        return (*(uint64_t (**)(unsigned char *, uint64_t))(v25 + 8))(v44, v24);
      }
    }
    else
    {
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v25 + 56))(v23, 1, 1, v24);
    }
    sub_1D7871C4C((uint64_t)v23, &qword_1EA8477F0);
  }
  __int16 v54 = 449;
  unint64_t v50 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
  sub_1D7860544();
  uint64_t v51 = swift_allocError();
  DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000018, 0x80000001D7AC1ED0, &v54, 0, v50, 0xD000000000000060, 0x80000001D7AC1D10, v52, 0xD00000000000003BLL, 0x80000001D7AC1E70, 117);
  *uint64_t v13 = v51;
  swift_storeEnumTagMultiPayload();
  a2(v13);
  return sub_1D7871C4C((uint64_t)v13, &qword_1EA8438F0);
}

void sub_1D78ED110(uint64_t a1, uint64_t a2, void *a3)
{
}

void sub_1D78ED118(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_1D78ED198(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  unsigned __int8 v8 = *a1;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a2;
  *(void *)(v5 + 24) = a3;
  swift_retain();
  unint64_t v6 = sub_1D785F61C(MEMORY[0x1E4FBC860]);
  sub_1D78EA540(&v8, v6, (uint64_t)sub_1D78ED658, v5);
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_1D78ED248(void *a1, char a2, void (*a3)(void *), uint64_t a4)
{
  uint64_t v8 = sub_1D7A9B6C8();
  uint64_t v47 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8, v9, v10, v11, v12, v13, v14, v15);
  uint64_t v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1D7A9B708();
  uint64_t v45 = *(void *)(v18 - 8);
  uint64_t v46 = v18;
  MEMORY[0x1F4188790](v18, v19, v20, v21, v22, v23, v24, v25);
  uint64_t v27 = (char *)&v43 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_1D7A9B6D8();
  uint64_t v29 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28, v30, v31, v32, v33, v34, v35, v36);
  uint64_t v38 = (char *)&v43 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    id v42 = a1;
    a3(a1);
    sub_1D78EDC98(a1, 1);
  }
  else
  {
    sub_1D78C4038(0, (unint64_t *)&qword_1EBDF9DB0);
    (*(void (**)(char *, void, uint64_t))(v29 + 104))(v38, *MEMORY[0x1E4FBCB48], v28);
    swift_bridgeObjectRetain();
    uint64_t v44 = sub_1D7A9C818();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v38, v28);
    uint64_t v39 = (void *)swift_allocObject();
    v39[2] = a1;
    v39[3] = a3;
    v39[4] = a4;
    aBlock[4] = sub_1D78EDC1C;
    aBlock[5] = v39;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1D79899E4;
    aBlock[3] = &block_descriptor_3;
    uint64_t v40 = _Block_copy(aBlock);
    swift_retain();
    sub_1D7A9B6E8();
    uint64_t v48 = MEMORY[0x1E4FBC860];
    sub_1D78EDC40();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9D98);
    sub_1D7871DDC((unint64_t *)&qword_1EBDF9DA0, &qword_1EBDF9D98);
    sub_1D7A9CBA8();
    uint64_t v41 = (void *)v44;
    MEMORY[0x1D947B570](0, v27, v17, v40);
    _Block_release(v40);

    (*(void (**)(char *, uint64_t))(v47 + 8))(v17, v8);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v27, v46);
    swift_release();
  }
}

uint64_t sub_1D78ED620()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

void sub_1D78ED658(void *a1, char a2)
{
  sub_1D78ED248(a1, a2 & 1, *(void (**)(void *))(v2 + 16), *(void *)(v2 + 24));
}

void sub_1D78ED664(unint64_t a1, void (*a2)(void), SEL *a3)
{
  uint64_t v6 = sub_1D7A9B5F8();
  uint64_t v7 = *(char **)(v6 - 8);
  MEMORY[0x1F4188790](v6, v8, v9, v10, v11, v12, v13, v14);
  uint64_t v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
  {
LABEL_19:
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_1D7A9CFB8();
    if (v17) {
      goto LABEL_3;
    }
LABEL_20:
    swift_bridgeObjectRelease();
    a2(0);
    return;
  }
  uint64_t v17 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v17) {
    goto LABEL_20;
  }
LABEL_3:
  uint64_t v32 = a3;
  uint64_t v33 = a2;
  a2 = (void (*)(void))(a1 & 0xC000000000000001);
  uint64_t v41 = (void (**)(char *, uint64_t))(v7 + 8);
  id v42 = (void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v19 = 4;
  a3 = (SEL *)&unk_1E6A87000;
  *(void *)&long long v18 = 136315138;
  long long v40 = v18;
  uint64_t v34 = MEMORY[0x1E4FBC840] + 8;
  unint64_t v35 = a1 & 0xC000000000000001;
  uint64_t v38 = v6;
  unint64_t v39 = a1;
  uint64_t v36 = v17;
  uint64_t v37 = v16;
  while (1)
  {
    if (a2) {
      uint64_t v20 = (char *)MEMORY[0x1D947BA10](v19 - 4, a1);
    }
    else {
      uint64_t v20 = (char *)*(id *)(a1 + 8 * v19);
    }
    uint64_t v7 = v20;
    uint64_t v21 = v19 - 3;
    if (__OFADD__(v19 - 4, 1))
    {
      __break(1u);
      goto LABEL_19;
    }
    if (objc_msgSend(v20, a3[340], v32)) {
      break;
    }
LABEL_6:

    ++v19;
    if (v21 == v17)
    {
      swift_bridgeObjectRelease();
      v33(0);
      return;
    }
  }
  if (qword_1EBDF9DC8 != -1) {
    swift_once();
  }
  uint64_t v22 = __swift_project_value_buffer(v6, (uint64_t)qword_1EBDFBE70);
  swift_beginAccess();
  (*v42)(v16, v22, v6);
  uint64_t v23 = v7;
  uint64_t v24 = sub_1D7A9B5D8();
  int v43 = sub_1D7A9C748();
  if (!os_log_type_enabled(v24, (os_log_type_t)v43))
  {

    (*v41)(v16, v6);
LABEL_5:
    objc_msgSend(v23, sel_purgeSync);
    a3 = (SEL *)&unk_1E6A87000;
    goto LABEL_6;
  }
  uint64_t v25 = swift_slowAlloc();
  uint64_t v26 = swift_slowAlloc();
  uint64_t v44 = v26;
  *(_DWORD *)uint64_t v25 = v40;
  id v27 = objc_msgSend(v23, sel_assetId);
  if (v27)
  {
    uint64_t v28 = v27;
    uint64_t v29 = sub_1D7A9BFC8();
    unint64_t v31 = v30;

    *(void *)(v25 + 4) = sub_1D7923300(v29, v31, &v44);
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D7853000, v24, (os_log_type_t)v43, "Purging result with id %s", (uint8_t *)v25, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D947D740](v26, -1, -1);
    MEMORY[0x1D947D740](v25, -1, -1);

    uint64_t v16 = v37;
    uint64_t v6 = v38;
    (*v41)(v37, v38);
    a1 = v39;
    a2 = (void (*)(void))v35;
    uint64_t v17 = v36;
    goto LABEL_5;
  }

  __break(1u);
}

uint64_t MobileAssetManager.deinit()
{
  return v0;
}

uint64_t MobileAssetManager.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1D78EDA6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_1D78EB064(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_1D78EDA90(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  unsigned __int8 v8 = *a1;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a2;
  *(void *)(v5 + 24) = a3;
  swift_retain();
  unint64_t v6 = sub_1D785F61C(MEMORY[0x1E4FBC860]);
  sub_1D78EA540(&v8, v6, (uint64_t)sub_1D78EDE74, v5);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for MobileAssetManager()
{
  return self;
}

uint64_t method lookup function for MobileAssetManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MobileAssetManager);
}

uint64_t dispatch thunk of MobileAssetManager.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of MobileAssetManager.retrieveMostRecentAsset<A>(info:isFirstMoreRecent:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of MobileAssetManager.evictAssets(type:completion:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t sub_1D78EDBDC()
{
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

void sub_1D78EDC1C()
{
  sub_1D78ED664(*(void *)(v0 + 16), *(void (**)(void))(v0 + 24), *(SEL **)(v0 + 32));
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

unint64_t sub_1D78EDC40()
{
  unint64_t result = qword_1EBDF9D90;
  if (!qword_1EBDF9D90)
  {
    sub_1D7A9B6C8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDF9D90);
  }
  return result;
}

void sub_1D78EDC98(id a1, char a2)
{
  if (a2) {

  }
  else {
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1D78EDCA4()
{
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

void sub_1D78EDCE4(uint64_t a1)
{
  sub_1D78EA868(a1, *(void (**)(void *, uint64_t))(v1 + 16), *(void *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), *(void *)(v1 + 40));
}

void sub_1D78EDCF8(int a1, void *a2)
{
  sub_1D78EAE5C(a1, a2, *(void (**)(id, uint64_t))(v2 + 16), *(void *)(v2 + 24), *(id *)(v2 + 32));
}

uint64_t sub_1D78EDD04()
{
  return MEMORY[0x1F4186498](v0, 40, 7);
}

id sub_1D78EDD14@<X0>(id *a1@<X0>, id *a2@<X8>)
{
  return sub_1D78EC1E8(a1, *(void *)(v2 + 16), a2);
}

BOOL sub_1D78EDD20(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 40);
  sub_1D78C4038(255, &qword_1EA8438E8);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return (v5(a1 + *(int *)(TupleTypeMetadata2 + 48), a2 + *(int *)(TupleTypeMetadata2 + 48)) & 1) == 0;
}

uint64_t objectdestroy_21Tm_0()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1D78EDDF8(uint64_t a1, uint64_t a2)
{
  return sub_1D78EC7E0(a1, a2, *(void (**)(uint64_t *))(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32));
}

uint64_t sub_1D78EDE04()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1D78EDE44()
{
  return sub_1D78ECD38(*(void **)(v0 + 16), *(void (**)(uint64_t *))(v0 + 24));
}

id DeviceIdentityKey.key.getter()
{
  return *v0;
}

uint64_t DeviceIdentityKey.certificates.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DeviceIdentityKey.init(key:certificates:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t DeviceIdentityOptions.validityMinutes.getter()
{
  return *(void *)v0;
}

uint64_t DeviceIdentityOptions.isDecryptionKey.getter()
{
  return *(unsigned __int8 *)(v0 + 9);
}

uint64_t DeviceIdentityOptions.aclData.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_1D786E9D8(v1, *(void *)(v0 + 24));
  return v1;
}

uint64_t DeviceIdentityOptions.init(validityMinutes:isDecryptionKey:aclData:)@<X0>(uint64_t result@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  *(void *)a6 = result;
  *(unsigned char *)(a6 + 8) = a2 & 1;
  *(unsigned char *)(a6 + 9) = a3;
  *(void *)(a6 + 16) = a4;
  *(void *)(a6 + 24) = a5;
  return result;
}

uint64_t DeviceIdentityKeystore.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t DeviceIdentityKeystore.init()()
{
  return v0;
}

uint64_t DeviceIdentityKeystore.fetchOrCreateCertificate(label:options:)(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4)
{
  *(void *)(v4 + 96) = a2;
  *(void *)(v4 + 104) = a3;
  *(void *)(v4 + 88) = a1;
  long long v5 = a4[1];
  *(_OWORD *)(v4 + 112) = *a4;
  *(_OWORD *)(v4 + 128) = v5;
  return MEMORY[0x1F4188298](sub_1D78EDF34, 0, 0);
}

uint64_t sub_1D78EDF34()
{
  uint64_t v1 = (void *)(v0 + 16);
  unint64_t v2 = (unint64_t)*(unsigned __int8 *)(v0 + 121) << 8;
  unint64_t v3 = sub_1D786103C(MEMORY[0x1E4FBC860]);
  if (v2 == 512) {
    goto LABEL_10;
  }
  uint64_t v4 = *(void *)(v0 + 128);
  unint64_t v5 = *(void *)(v0 + 136);
  uint64_t v6 = *(void *)(v0 + 120);
  if ((v6 & 1) == 0)
  {
    *(void *)(v0 + 80) = *(void *)(v0 + 112);
    sub_1D786E9D8(v4, v5);
    uint64_t v7 = sub_1D7A9D258();
    uint64_t v9 = v8;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1D78A1594(v7, v9, 1, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    if ((v6 & 0x100) == 0) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  sub_1D786E9D8(v4, v5);
  if ((v6 & 0x100) != 0)
  {
LABEL_6:
    char v11 = swift_isUniquelyReferenced_nonNull_native();
    sub_1D78A1594(1702195828, 0xE400000000000000, 4, v11);
    swift_bridgeObjectRelease();
  }
LABEL_7:
  uint64_t v13 = *(void *)(v0 + 128);
  unint64_t v12 = *(void *)(v0 + 136);
  uint64_t v15 = *(void *)(v0 + 112);
  uint64_t v14 = *(void *)(v0 + 120);
  if (v12 >> 60 != 15)
  {
    sub_1D786E9D8(*(void *)(v0 + 128), *(void *)(v0 + 136));
    uint64_t v16 = sub_1D7A9B008();
    uint64_t v18 = v17;
    char v19 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v1 = (void *)(v0 + 16);
    sub_1D78A1594(v16, v18, 7, v19);
    swift_bridgeObjectRelease();
    sub_1D78EEA9C(v15, v14, v13, v12);
  }
  sub_1D78EEA9C(v15, v14, v13, v12);
LABEL_10:
  char v20 = swift_isUniquelyReferenced_nonNull_native();
  sub_1D78A1594(1702195828, 0xE400000000000000, 5, v20);
  swift_bridgeObjectRelease();
  char v21 = swift_isUniquelyReferenced_nonNull_native();
  sub_1D78A1594(1702195828, 0xE400000000000000, 6, v21);
  *(void *)(v0 + 144) = v3;
  swift_bridgeObjectRelease();
  id v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F30B50]), sel_init);
  *(void *)(v0 + 152) = v22;
  swift_beginAccess();
  uint64_t v23 = (void (*)(uint64_t))off_1EA843928;
  if (off_1EA843928)
  {
    uint64_t v24 = swift_retain();
    v23(v24);
    sub_1D78EEA8C((uint64_t)v23);
    uint64_t v25 = *(ValueMetadata **)(v0 + 40);
    uint64_t v26 = *(_UNKNOWN ***)(v0 + 48);
  }
  else
  {
    uint64_t v25 = &type metadata for DeviceIdentityCommon;
    uint64_t v26 = &protocol witness table for DeviceIdentityCommon;
    *(void *)(v0 + 40) = &type metadata for DeviceIdentityCommon;
    *(void *)(v0 + 48) = &protocol witness table for DeviceIdentityCommon;
    uint64_t v27 = swift_allocObject();
    *(void *)(v0 + 16) = v27;
    *(void *)(v27 + 40) = &type metadata for DeviceInformationProvider;
    *(void *)(v27 + 48) = &protocol witness table for DeviceInformationProvider;
  }
  __swift_project_boxed_opaque_existential_1(v1, (uint64_t)v25);
  uint64_t v32 = (uint64_t (*)(uint64_t, uint64_t, id, unint64_t, void, ValueMetadata *, _UNKNOWN **))((char *)v26[1] + *(int *)v26[1]);
  uint64_t v28 = (void *)swift_task_alloc();
  *(void *)(v0 + 160) = v28;
  void *v28 = v0;
  v28[1] = sub_1D78EE2F0;
  uint64_t v29 = *(void *)(v0 + 104);
  uint64_t v30 = *(void *)(v0 + 96);
  return v32(v30, v29, v22, v3, 0, v25, v26);
}

uint64_t sub_1D78EE2F0(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 168) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v7 = sub_1D78EE4B8;
  }
  else
  {
    *(void *)(v6 + 176) = a2;
    *(void *)(v6 + 184) = a1;
    uint64_t v7 = sub_1D78EE424;
  }
  return MEMORY[0x1F4188298](v7, 0, 0);
}

uint64_t sub_1D78EE424()
{
  uint64_t v1 = *(void **)(v0 + 152);
  uint64_t v2 = *(int8x16_t **)(v0 + 88);
  int8x16_t v5 = *(int8x16_t *)(v0 + 176);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_bridgeObjectRelease();

  *uint64_t v2 = vextq_s8(v5, v5, 8uLL);
  unint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1D78EE4B8()
{
  uint64_t v9 = v0;
  uint64_t v1 = (void *)v0[21];
  uint64_t v2 = (void *)v0[19];
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  swift_bridgeObjectRelease();

  v8[0] = 0;
  id v3 = v1;
  unint64_t v4 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
  sub_1D7860544();
  swift_allocError();
  DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(v1, 0, 0xE000000000000000, v8, 0, v4, 0xD00000000000005FLL, 0x80000001D7AC1F30, v5, 0xD000000000000028, 0x80000001D7AC1F90, 92);
  swift_willThrow();

  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t DeviceIdentityKeystore.deleteKeysAndCertificates(label:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 80) = a1;
  *(void *)(v2 + 88) = a2;
  return MEMORY[0x1F4188298](sub_1D78EE604, 0, 0);
}

uint64_t sub_1D78EE604()
{
  swift_beginAccess();
  uint64_t v1 = (void (*)(uint64_t))off_1EA843928;
  if (off_1EA843928)
  {
    uint64_t v2 = swift_retain();
    v1(v2);
    sub_1D78EEA8C((uint64_t)v1);
    id v3 = (ValueMetadata *)v0[5];
    unint64_t v4 = (_UNKNOWN **)v0[6];
  }
  else
  {
    id v3 = &type metadata for DeviceIdentityCommon;
    unint64_t v4 = &protocol witness table for DeviceIdentityCommon;
    v0[5] = &type metadata for DeviceIdentityCommon;
    v0[6] = &protocol witness table for DeviceIdentityCommon;
    uint64_t v5 = swift_allocObject();
    v0[2] = v5;
    *(void *)(v5 + 40) = &type metadata for DeviceInformationProvider;
    *(void *)(v5 + 48) = &protocol witness table for DeviceInformationProvider;
  }
  __swift_project_boxed_opaque_existential_1(v0 + 2, (uint64_t)v3);
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, ValueMetadata *, _UNKNOWN **))((char *)v4[2] + *(int *)v4[2]);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[12] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1D78EE7A8;
  uint64_t v8 = v0[10];
  uint64_t v7 = v0[11];
  return v10(v8, v7, v3, v4);
}

uint64_t sub_1D78EE7A8()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D78EE920;
  }
  else {
    uint64_t v2 = sub_1D78EE8BC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D78EE8BC()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D78EE920()
{
  uint64_t v8 = v0;
  uint64_t v1 = *(void **)(v0 + 104);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  v7[0] = 0;
  id v2 = v1;
  unint64_t v3 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
  sub_1D7860544();
  swift_allocError();
  DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(v1, 0, 0xE000000000000000, v7, 0, v3, 0xD00000000000005FLL, 0x80000001D7AC1F30, v4, 0xD000000000000021, 0x80000001D7AC1FC0, 101);
  swift_willThrow();

  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t DeviceIdentityKeystore.deinit()
{
  return v0;
}

uint64_t DeviceIdentityKeystore.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1D78EEA54()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1D78EEA8C(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_1D78EEA9C(uint64_t a1, __int16 a2, uint64_t a3, unint64_t a4)
{
  if ((a2 & 0xFF00) != 0x200) {
    return sub_1D7871BDC(a3, a4);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for DeviceIdentityKey(void *a1, uint64_t a2)
{
  unint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for DeviceIdentityKey(id *a1)
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for DeviceIdentityKey(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

id *assignWithTake for DeviceIdentityKey(id *a1, _OWORD *a2)
{
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DeviceIdentityKey(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DeviceIdentityKey(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceIdentityKey()
{
  return &type metadata for DeviceIdentityKey;
}

uint64_t destroy for DeviceIdentityOptions(uint64_t result)
{
  unint64_t v1 = *(void *)(result + 24);
  if (v1 >> 60 != 15) {
    return sub_1D78607E8(*(void *)(result + 16), v1);
  }
  return result;
}

uint64_t initializeWithCopy for DeviceIdentityOptions(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  unint64_t v3 = (uint64_t *)(a2 + 16);
  unint64_t v4 = *(void *)(a2 + 24);
  if (v4 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v3;
  }
  else
  {
    uint64_t v5 = *v3;
    sub_1D7860790(*v3, *(void *)(a2 + 24));
    *(void *)(a1 + 16) = v5;
    *(void *)(a1 + 24) = v4;
  }
  return a1;
}

uint64_t assignWithCopy for DeviceIdentityOptions(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 9) = *((unsigned char *)a2 + 9);
  unint64_t v4 = (_OWORD *)(a1 + 16);
  uint64_t v5 = a2 + 2;
  unint64_t v6 = a2[3];
  if (*(void *)(a1 + 24) >> 60 != 15)
  {
    if (v6 >> 60 != 15)
    {
      uint64_t v8 = *v5;
      sub_1D7860790(*v5, a2[3]);
      uint64_t v9 = *(void *)(a1 + 16);
      unint64_t v10 = *(void *)(a1 + 24);
      *(void *)(a1 + 16) = v8;
      *(void *)(a1 + 24) = v6;
      sub_1D78607E8(v9, v10);
      return a1;
    }
    sub_1D7870C24(a1 + 16);
    goto LABEL_6;
  }
  if (v6 >> 60 == 15)
  {
LABEL_6:
    _OWORD *v4 = *(_OWORD *)v5;
    return a1;
  }
  uint64_t v7 = *v5;
  sub_1D7860790(*v5, a2[3]);
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithTake for DeviceIdentityOptions(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  unint64_t v4 = (_OWORD *)(a1 + 16);
  uint64_t v5 = (void *)(a2 + 16);
  unint64_t v6 = *(void *)(a1 + 24);
  if (v6 >> 60 != 15)
  {
    unint64_t v7 = *(void *)(a2 + 24);
    if (v7 >> 60 != 15)
    {
      uint64_t v8 = *(void *)(a1 + 16);
      *(void *)(a1 + 16) = *v5;
      *(void *)(a1 + 24) = v7;
      sub_1D78607E8(v8, v6);
      return a1;
    }
    sub_1D7870C24(a1 + 16);
  }
  _OWORD *v4 = *(_OWORD *)v5;
  return a1;
}

uint64_t getEnumTagSinglePayload for DeviceIdentityOptions(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 9);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for DeviceIdentityOptions(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 9) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceIdentityOptions()
{
  return &type metadata for DeviceIdentityOptions;
}

uint64_t type metadata accessor for DeviceIdentityKeystore()
{
  return self;
}

uint64_t method lookup function for DeviceIdentityKeystore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DeviceIdentityKeystore);
}

uint64_t dispatch thunk of DeviceIdentityKeystore.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t sub_1D78EEF3C(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 56) = a4;
  *(void *)(v5 + 64) = a5;
  *(double *)(v5 + 48) = a1;
  *(void *)(v5 + 40) = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9978);
  *(void *)(v5 + 72) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D78EEFD8, 0, 0);
}

uint64_t sub_1D78EEFD8()
{
  uint64_t v2 = v0[8];
  uint64_t v1 = v0[9];
  uint64_t v3 = v0[7];
  uint64_t v4 = v0[6];
  uint64_t v5 = sub_1D7A9C4A8();
  unint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
  v6(v1, 1, 1, v5);
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v4;
  sub_1D78EFD78(v1, (uint64_t)&unk_1EA8439B0, (uint64_t)v7);
  sub_1D7871C4C(v1, &qword_1EBDF9978);
  v6(v1, 1, 1, v5);
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = v3;
  __int16 v8[5] = v2;
  swift_retain();
  sub_1D78EFD78(v1, (uint64_t)&unk_1EA8439C0, (uint64_t)v8);
  sub_1D7871C4C(v1, &qword_1EBDF9978);
  uint64_t v9 = (void *)swift_task_alloc();
  v0[10] = v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8439C8);
  *uint64_t v9 = v0;
  v9[1] = sub_1D78EF1C0;
  return MEMORY[0x1F4187E20](v0 + 2, v10);
}

uint64_t sub_1D78EF1C0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_1D78EF3F8;
  }
  else
  {
    *(void *)(v2 + 96) = *(void *)(v2 + 16);
    *(unsigned char *)(v2 + 25) = *(unsigned char *)(v2 + 24);
    uint64_t v3 = sub_1D78EF2E4;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1D78EF2E4()
{
  int v1 = *(unsigned __int8 *)(v0 + 25);
  if (v1 == 255)
  {
    sub_1D7873F94();
    uint64_t v2 = swift_allocError();
    char v3 = 1;
  }
  else
  {
    uint64_t v2 = *(void *)(v0 + 96);
    char v3 = v1 & 1;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDF9740);
  sub_1D7A9C488();
  if (v3)
  {
    *(void *)(v0 + 32) = v2;
    swift_willThrowTypedImpl();
  }
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1D78EF3F8()
{
  return MEMORY[0x1F41867D8](*(void *)(v0 + 88), "_Concurrency/TaskGroup.swift", 28, 1, 1173);
}

uint64_t sub_1D78EF414(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  *(void *)(v4 + 64) = a2;
  *(void *)(v4 + 72) = a3;
  *(double *)(v4 + 56) = a4;
  *(void *)(v4 + 48) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9978);
  *(void *)(v4 + 80) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D78EF4B0, 0, 0);
}

uint64_t sub_1D78EF4B0()
{
  uint64_t v2 = v0[9];
  uint64_t v1 = v0[10];
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[7];
  uint64_t v5 = sub_1D7A9C4A8();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
  v6(v1, 1, 1, v5);
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v4;
  sub_1D78EFF50(v1, (uint64_t)&unk_1EA843A18, (uint64_t)v7);
  sub_1D7871C4C(v1, &qword_1EBDF9978);
  v6(v1, 1, 1, v5);
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = v3;
  __int16 v8[5] = v2;
  swift_retain();
  sub_1D78EFF50(v1, (uint64_t)&unk_1EA843A28, (uint64_t)v8);
  sub_1D7871C4C(v1, &qword_1EBDF9978);
  uint64_t v9 = (void *)swift_task_alloc();
  v0[11] = v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA843A30);
  *uint64_t v9 = v0;
  v9[1] = sub_1D78EF698;
  return MEMORY[0x1F4187E20](v0 + 2, v10);
}

uint64_t sub_1D78EF698()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_1D78EF918;
  }
  else
  {
    *(_OWORD *)(v2 + 104) = *(_OWORD *)(v2 + 16);
    *(unsigned char *)(v2 + 33) = *(unsigned char *)(v2 + 32);
    uint64_t v3 = sub_1D78EF7BC;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1D78EF7BC()
{
  int v1 = *(unsigned __int8 *)(v0 + 33);
  if (v1 == 255)
  {
    sub_1D7873F94();
    uint64_t v2 = swift_allocError();
    uint64_t v3 = 0;
    char v4 = 1;
  }
  else
  {
    uint64_t v2 = *(void *)(v0 + 104);
    uint64_t v3 = *(void *)(v0 + 112);
    char v4 = v1 & 1;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8439F0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDF9740);
  sub_1D7A9C488();
  if (v4)
  {
    *(void *)(v0 + 40) = v2;
    swift_willThrowTypedImpl();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
  else
  {
    swift_task_dealloc();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
    return v7(v2, v3);
  }
}

uint64_t sub_1D78EF918()
{
  return MEMORY[0x1F41867D8](*(void *)(v0 + 96), "_Concurrency/TaskGroup.swift", 28, 1, 1173);
}

uint64_t sub_1D78EF934(double a1)
{
  *(double *)(v1 + 16) = a1;
  uint64_t v2 = sub_1D7A9CE48();
  *(void *)(v1 + 24) = v2;
  *(void *)(v1 + 32) = *(void *)(v2 - 8);
  *(void *)(v1 + 40) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D78EF9F4, 0, 0);
}

uint64_t sub_1D78EF9F4()
{
  uint64_t v1 = sub_1D7A9D6F8();
  uint64_t v3 = v2;
  sub_1D7A9CE38();
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_1EA8459D0 + dword_1EA8459D0);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v4;
  void *v4 = v0;
  v4[1] = sub_1D78EFAD0;
  return v6(v1, v3, 0, 0, 1);
}

uint64_t sub_1D78EFAD0()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 40);
  uint64_t v3 = *(void *)(*(void *)v1 + 32);
  uint64_t v4 = *(void *)(*(void *)v1 + 24);
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if (v0) {
    uint64_t v5 = sub_1D78EFCD8;
  }
  else {
    uint64_t v5 = sub_1D78EFC40;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1D78EFC40()
{
  sub_1D7873F94();
  swift_allocError();
  swift_willThrow();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D78EFCD8()
{
  sub_1D7873F94();
  swift_allocError();
  swift_willThrow();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D78EFD78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9978);
  MEMORY[0x1F4188790](v7 - 8, v8, v9, v10, v11, v12, v13, v14);
  uint64_t v16 = (char *)v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D7873FE8(a1, (uint64_t)v16);
  uint64_t v17 = sub_1D7A9C4A8();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_1D7871C4C((uint64_t)v16, &qword_1EBDF9978);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v19 = sub_1D7A9C438();
      uint64_t v21 = v20;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_1D7A9C498();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v16, v17);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v19 = 0;
  uint64_t v21 = 0;
LABEL_6:
  uint64_t v22 = *v4;
  uint64_t v23 = (void *)(v21 | v19);
  if (v21 | v19)
  {
    v26[0] = 0;
    v26[1] = 0;
    uint64_t v23 = v26;
    v26[2] = v19;
    v26[3] = v21;
  }
  v25[1] = 1;
  v25[2] = v23;
  v25[3] = v22;
  swift_task_create();
  return swift_release();
}

uint64_t sub_1D78EFF50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9978);
  MEMORY[0x1F4188790](v7 - 8, v8, v9, v10, v11, v12, v13, v14);
  uint64_t v16 = (char *)v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D7873FE8(a1, (uint64_t)v16);
  uint64_t v17 = sub_1D7A9C4A8();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_1D7871C4C((uint64_t)v16, &qword_1EBDF9978);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v19 = sub_1D7A9C438();
      uint64_t v21 = v20;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_1D7A9C498();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v16, v17);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v19 = 0;
  uint64_t v21 = 0;
LABEL_6:
  uint64_t v22 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8439F0);
  uint64_t v23 = (void *)(v21 | v19);
  if (v21 | v19)
  {
    v26[0] = 0;
    v26[1] = 0;
    uint64_t v23 = v26;
    v26[2] = v19;
    v26[3] = v21;
  }
  v25[1] = 1;
  v25[2] = v23;
  v25[3] = v22;
  swift_task_create();
  return swift_release();
}

uint64_t sub_1D78F012C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v8 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v6;
  *uint64_t v6 = v4;
  v6[1] = sub_1D7874050;
  return v8(a1);
}

uint64_t DEFAULT_BAA_CERTIFICATE_VALIDITY_IN_MINUTES.getter()
{
  return 15;
}

uint64_t EXTENDED_BAA_CERTIFICATE_VALIDITY_IN_MINUTES.getter()
{
  return 525600;
}

uint64_t DEFAULT_BACKGROUND_BAA_CERTIFICATE_VALIDITY_IN_MINUTES.getter()
{
  return 525600;
}

BOOL static KeyUsage.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t KeyUsage.hash(into:)()
{
  return sub_1D7A9D5E8();
}

uint64_t KeyUsage.hashValue.getter()
{
  return sub_1D7A9D628();
}

SecAccessControlRef __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> createBAAKeyACLWithDefaultLAContext(enableUAM:keyUsage:requireUserAuth:forSecureElement:)(Swift::Bool enableUAM, CoreIDVShared::KeyUsage keyUsage, Swift::Bool requireUserAuth, Swift::Bool forSecureElement)
{
  BOOL v6 = enableUAM;
  unsigned __int8 v7 = *(unsigned char *)keyUsage;
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F30B50]), sel_init);
  unsigned __int8 v11 = v7;
  uint64_t v9 = sub_1D78F0348(v8, v6, &v11, requireUserAuth, forSecureElement);

  return v9;
}

SecAccessControlRef sub_1D78F0348(void *a1, int a2, unsigned __int8 *a3, char a4, char a5)
{
  error[1] = *(CFErrorRef *)MEMORY[0x1E4F143B8];
  int v9 = *a3;
  error[0] = 0;
  if (a4) {
    SecAccessControlCreateFlags v10 = 1073741825;
  }
  else {
    SecAccessControlCreateFlags v10 = 0x40000000;
  }
  SecAccessControlRef v11 = SecAccessControlCreateWithFlags((CFAllocatorRef)*MEMORY[0x1E4F1CF80], (CFTypeRef)*MEMORY[0x1E4F3B578], v10, error);
  SecAccessControlRef v12 = v11;
  if (v11)
  {
    int v49 = v9;
    int v50 = a2;
    char v47 = a4;
    SecAccessControlRef v51 = v11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9400);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1D7AA4E90;
    id v48 = a1;
    *(void *)(inited + 32) = 0x6E666F6B70;
    *(void *)(inited + 40) = 0xE500000000000000;
    uint64_t v14 = MEMORY[0x1E4FBB550];
    *(void *)(inited + 48) = 1;
    *(void *)(inited + 72) = v14;
    *(void *)(inited + 80) = 1668640112;
    *(void *)(inited + 88) = 0xE400000000000000;
    *(void *)(inited + 96) = 7;
    *(void *)(inited + 120) = v14;
    *(void *)(inited + 128) = 1869177443;
    *(void *)(inited + 136) = 0xE400000000000000;
    uint64_t v15 = swift_initStackObject();
    *(_OWORD *)(v15 + 16) = xmmword_1D7AA0A40;
    *(void *)(v15 + 32) = 0x636F696270;
    *(void *)(v15 + 40) = 0xE500000000000000;
    uint64_t v16 = MEMORY[0x1E4F277C0];
    *(_OWORD *)(v15 + 48) = xmmword_1D7AA0AB0;
    *(void *)(v15 + 72) = v16;
    *(void *)(v15 + 80) = 0x746F696270;
    *(void *)(v15 + 120) = v14;
    *(void *)(v15 + 88) = 0xE500000000000000;
    *(void *)(v15 + 96) = 1;
    unint64_t v17 = sub_1D785F2A0(v15);
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA843A68);
    *(void *)(inited + 144) = v17;
    *(void *)(inited + 168) = v18;
    *(void *)(inited + 176) = 1852795747;
    *(void *)(inited + 184) = 0xE400000000000000;
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_1D7AA4E80;
    *(void *)(v19 + 32) = 0x6E666F6B70;
    *(void *)(v19 + 40) = 0xE500000000000000;
    *(void *)(v19 + 48) = 1;
    *(void *)(v19 + 72) = v14;
    *(void *)(v19 + 80) = 1668640112;
    *(void *)(v19 + 88) = 0xE400000000000000;
    *(void *)(v19 + 96) = 7;
    *(void *)(v19 + 120) = v14;
    *(void *)(v19 + 128) = 1869177443;
    *(void *)(v19 + 136) = 0xE400000000000000;
    uint64_t v20 = swift_initStackObject();
    *(_OWORD *)(v20 + 16) = xmmword_1D7AA0A40;
    *(void *)(v20 + 32) = 0x636F696270;
    *(void *)(v20 + 40) = 0xE500000000000000;
    *(_OWORD *)(v20 + 48) = xmmword_1D7AA0AB0;
    *(void *)(v20 + 72) = MEMORY[0x1E4F277C0];
    *(void *)(v20 + 80) = 0x746F696270;
    *(void *)(v20 + 120) = v14;
    *(void *)(v20 + 88) = 0xE500000000000000;
    *(void *)(v20 + 96) = 2;
    uint64_t v21 = v18;
    unint64_t v22 = sub_1D785F2A0(v20);
    *(void *)(v19 + 168) = v18;
    *(void *)(v19 + 144) = v22;
    unint64_t v23 = sub_1D785F2A0(v19);
    *(void *)(inited + 216) = v18;
    *(void *)(inited + 192) = v23;
    unint64_t v24 = sub_1D785F2A0(inited);
    unsigned __int8 v25 = objc_msgSend(v48, sel_canEvaluatePolicy_error_, 1, 0);
    uint64_t v26 = MEMORY[0x1E4FBB390];
    if ((v25 & 1) == 0)
    {
      sub_1D789F14C(1869177443, 0xE400000000000000, &v53);
      sub_1D7871C4C((uint64_t)&v53, (uint64_t *)&unk_1EBDF9680);
      sub_1D789F14C(1852795747, 0xE400000000000000, &v53);
      sub_1D7871C4C((uint64_t)&v53, (uint64_t *)&unk_1EBDF9680);
      uint64_t v54 = v26;
      LOBYTE(v53) = 1;
      sub_1D7860E50(&v53, v52);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      sub_1D78A095C(v52, 7370083, 0xE300000000000000, isUniquelyReferenced_nonNull_native);
      swift_bridgeObjectRelease();
    }
    uint64_t v28 = &unk_1EBDFB000;
    SecAccessControlRef v12 = v51;
    if (a2) {
      goto LABEL_8;
    }
    id v30 = objc_msgSend(self, sel_standardUserDefaults);
    if (qword_1EBDF9690 != -1) {
      swift_once();
    }
    if (byte_1EBDFBE68 == 1)
    {
      unint64_t v31 = (void *)sub_1D7A9BF98();
      unsigned __int8 v32 = objc_msgSend(v30, sel_BOOLForKey_, v31);

      uint64_t v28 = (unsigned char *)&unk_1EBDFB000;
      if (v32)
      {
LABEL_8:
        uint64_t v54 = v26;
        LOBYTE(v53) = 1;
        sub_1D7860E50(&v53, v52);
        char v29 = swift_isUniquelyReferenced_nonNull_native();
        sub_1D78A095C(v52, 1953525616, 0xE400000000000000, v29);
        swift_bridgeObjectRelease();
      }
    }
    else
    {
    }
    uint64_t v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_1D7AA08E0;
    *(void *)(v33 + 32) = 7037807;
    *(void *)(v33 + 40) = 0xE300000000000000;
    *(void *)(v33 + 72) = v26;
    *(unsigned char *)(v33 + 48) = 0;
    sub_1D785F2A0(v33);
    if ((a5 & 1) == 0)
    {
      uint64_t v54 = v26;
      LOBYTE(v53) = 1;
      sub_1D7860E50(&v53, v52);
      char v34 = swift_isUniquelyReferenced_nonNull_native();
      sub_1D78A095C(v52, 1818584175, 0xE400000000000000, v34);
      swift_bridgeObjectRelease();
    }
    uint64_t v46 = v21;
    if (v49)
    {
      uint64_t v54 = v26;
      LOBYTE(v53) = 1;
      sub_1D7860E50(&v53, v52);
      char v35 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v36 = 7037807;
      uint64_t v37 = 0xE300000000000000;
    }
    else
    {
      uint64_t v54 = v21;
      *(void *)&long long v53 = v24;
      sub_1D7860E50(&v53, v52);
      swift_bridgeObjectRetain();
      char v35 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v36 = 1852273519;
      uint64_t v37 = 0xE400000000000000;
    }
    sub_1D78A095C(v52, v36, v37, v35);
    swift_bridgeObjectRelease();
    id v38 = objc_msgSend(self, sel_standardUserDefaults);
    if (qword_1EBDF9690 != -1) {
      swift_once();
    }
    if (v28[3688] == 1)
    {
      unint64_t v39 = (void *)sub_1D7A9BF98();
      unsigned int v40 = objc_msgSend(v38, sel_BOOLForKey_, v39);

      if (((v40 | v50 | v49) & 1) == 0)
      {
LABEL_25:
        if (v47)
        {
          *(void *)&long long v53 = v24;
          uint64_t v41 = v46;
        }
        else
        {
          swift_bridgeObjectRelease();
          LOBYTE(v53) = 1;
          uint64_t v41 = MEMORY[0x1E4FBB390];
        }
        uint64_t v54 = v41;
        sub_1D7860E50(&v53, v52);
        char v42 = swift_isUniquelyReferenced_nonNull_native();
        sub_1D78A095C(v52, 1852273519, 0xE400000000000000, v42);
      }
    }
    else
    {

      if (((v50 | v49) & 1) == 0) {
        goto LABEL_25;
      }
    }
    swift_bridgeObjectRelease();
    int v43 = v51;
    uint64_t v44 = (void *)sub_1D7A9BE98();
    swift_bridgeObjectRelease();
    SecAccessControlSetConstraints();

    return v12;
  }
  LOWORD(v53) = 244;
  errorFromCFError(_:_:_:)(error[0], 0xD00000000000003ELL, 0x80000001D7AC2460, (__int16 *)&v53);
  swift_willThrow();
  return v12;
}

uint64_t static DeviceIdentityCommon.new()@<X0>(uint64_t *a1@<X8>)
{
  swift_beginAccess();
  uint64_t v2 = (void (*)(uint64_t))off_1EA843928;
  if (off_1EA843928)
  {
    uint64_t v3 = swift_retain();
    v2(v3);
    return sub_1D78EEA8C((uint64_t)v2);
  }
  else
  {
    a1[3] = (uint64_t)&type metadata for DeviceIdentityCommon;
    a1[4] = (uint64_t)&protocol witness table for DeviceIdentityCommon;
    uint64_t result = swift_allocObject();
    *a1 = result;
    *(void *)(result + 40) = &type metadata for DeviceInformationProvider;
    *(void *)(result + 48) = &protocol witness table for DeviceInformationProvider;
  }
  return result;
}

uint64_t sub_1D78F0B78()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1D78F0BB0()
{
  uint64_t v0 = (void *)sub_1D7A9AE48();
  id v1 = objc_msgSend(v0, sel_code);

  if ((unint64_t)v1 + 11 > 9) {
    __int16 v2 = 230;
  }
  else {
    __int16 v2 = word_1D7AA92F2[(void)v1 + 11];
  }
  swift_getErrorValue();
  uint64_t v3 = sub_1D7A9D548();
  uint64_t v5 = v4;
  __int16 v13 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF8678);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D7AA08E0;
  *(unsigned char *)(inited + 32) = 20;
  unsigned __int8 v7 = (void *)sub_1D7A9AE48();
  id v8 = objc_msgSend(v7, sel_code);

  *(void *)(inited + 64) = MEMORY[0x1E4FBB550];
  *(void *)(inited + 40) = v8;
  unint64_t v9 = sub_1D785EC20(inited);
  sub_1D7860544();
  uint64_t v10 = swift_allocError();
  DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, v3, v5, &v13, 0, v9, 0xD00000000000005DLL, 0x80000001D7AC21C0, v11, 0xD000000000000018, 0x80000001D7AC2220, 165);
  return v10;
}

void *static DeviceIdentityCommon.instanceFactory.getter()
{
  swift_beginAccess();
  uint64_t v0 = off_1EA843928;
  sub_1D78F0D88((uint64_t)off_1EA843928);
  return v0;
}

uint64_t sub_1D78F0D88(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t static DeviceIdentityCommon.instanceFactory.setter(void *a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v4 = off_1EA843928;
  off_1EA843928 = a1;
  qword_1EA843930 = a2;
  return sub_1D78EEA8C((uint64_t)v4);
}

uint64_t (*static DeviceIdentityCommon.instanceFactory.modify())()
{
  return j__swift_endAccess;
}

uint64_t DeviceIdentityCommon.fetchOrCreateCertificateWithDeviceIdentity(label:laContext:options:enableUAM:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(void *)(v6 + 72) = a4;
  *(void *)(v6 + 80) = v5;
  *(unsigned char *)(v6 + 136) = a5;
  *(void *)(v6 + 56) = a2;
  *(void *)(v6 + 64) = a3;
  *(void *)(v6 + 48) = a1;
  uint64_t v7 = sub_1D7A9B5F8();
  *(void *)(v6 + 88) = v7;
  *(void *)(v6 + 96) = *(void *)(v7 - 8);
  *(void *)(v6 + 104) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D78F0F18, 0, 0);
}

uint64_t sub_1D78F0F18()
{
  uint64_t v22 = v0;
  id v1 = sub_1D78F13F0(*(void *)(v0 + 48), *(void *)(v0 + 56), *(void **)(v0 + 64), *(void *)(v0 + 72), *(unsigned char *)(v0 + 136));
  *(void *)(v0 + 112) = v1;
  uint64_t v2 = (uint64_t)v1;
  if (qword_1EBDF9DC8 != -1) {
    swift_once();
  }
  uint64_t v4 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 104);
  uint64_t v5 = *(void *)(v0 + 88);
  uint64_t v6 = __swift_project_value_buffer(v5, (uint64_t)qword_1EBDFBE70);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v6, v5);
  swift_bridgeObjectRetain_n();
  uint64_t v7 = sub_1D7A9B5D8();
  os_log_type_t v8 = sub_1D7A9C748();
  BOOL v9 = os_log_type_enabled(v7, v8);
  uint64_t v10 = *(void *)(v0 + 96);
  uint64_t v11 = *(void *)(v0 + 104);
  uint64_t v12 = *(void *)(v0 + 88);
  unint64_t v13 = *(void *)(v0 + 56);
  if (v9)
  {
    uint64_t v18 = *(void *)(v0 + 48);
    log = v7;
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v20 = v11;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v15 = v21;
    *(_DWORD *)uint64_t v14 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 40) = sub_1D7923300(v18, v13, &v21);
    sub_1D7A9C9E8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D7853000, log, v8, "creating BAA certificate with DeviceIdentity for label %s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D947D740](v15, -1, -1);
    MEMORY[0x1D947D740](v14, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v20, v12);
  }
  else
  {
    swift_bridgeObjectRelease_n();

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v11, v12);
  }
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v16;
  *uint64_t v16 = v0;
  v16[1] = sub_1D78F1220;
  return DeviceIdentityCommon.callDeviceIdentity(baaOptions:)(v2);
}

uint64_t sub_1D78F1220(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(v6 + 128) = v2;
  swift_task_dealloc();
  if (v2)
  {
    return MEMORY[0x1F4188298](sub_1D78F1384, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    return v7(a1, a2);
  }
}

uint64_t sub_1D78F1384()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  id v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void *sub_1D78F13F0(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, char a5)
{
  uint64_t v10 = sub_1D7A9B5F8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v294 = v10;
  uint64_t v295 = v11;
  uint64_t v19 = MEMORY[0x1F4188790](v10, v12, v13, v14, v15, v16, v17, v18);
  uint64_t v27 = MEMORY[0x1F4188790](v19, v20, v21, v22, v23, v24, v25, v26);
  v291 = (uint8_t *)&v279 - v28;
  uint64_t v36 = MEMORY[0x1F4188790](v27, v29, v30, v31, v32, v33, v34, v35);
  id v38 = (uint8_t *)&v279 - v37;
  MEMORY[0x1F4188790](v36, v39, v40, v41, v42, v43, v44, v45);
  char v47 = (char *)&v279 - v46;
  v286 = v38;
  v287 = v48;
  if (a4 && *(void *)(a4 + 16) && (unint64_t v49 = sub_1D7A18C10(1u), (v50 & 1) != 0))
  {
    SecAccessControlRef v51 = (uint64_t *)(*(void *)(a4 + 56) + 16 * v49);
    uint64_t v53 = *v51;
    unint64_t v52 = v51[1];
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v53 = 0;
    unint64_t v52 = 0xE000000000000000;
  }
  uint64_t v54 = sub_1D7A43FE4(v53, v52);
  unint64_t v56 = 15;
  if ((v55 & 1) == 0) {
    unint64_t v56 = v54;
  }
  uint64_t v289 = a1;
  unint64_t v290 = v56;
  unint64_t v292 = a2;
  if (!a4 || !*(void *)(a4 + 16) || (sub_1D7A18C10(0), (v57 & 1) == 0))
  {
    uint64_t v66 = v294;
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v67 = __swift_project_value_buffer(v66, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v295 + 16))(v47, v67, v66);
    unint64_t v68 = sub_1D7A9B5D8();
    os_log_type_t v69 = sub_1D7A9C748();
    if (os_log_type_enabled(v68, v69))
    {
      uint64_t v70 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v70 = 0;
      _os_log_impl(&dword_1D7853000, v68, v69, "nonce is not present for SEP based identity key generation", v70, 2u);
      uint64_t v71 = v70;
      uint64_t v66 = v294;
      MEMORY[0x1D947D740](v71, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v295 + 8))(v47, v66);
    uint64_t v58 = 0;
    if (a4)
    {
      unint64_t v65 = 0xF000000000000000;
      if (*(void *)(a4 + 16))
      {
LABEL_22:
        unint64_t v72 = sub_1D7A18C10(4u);
        if (v73)
        {
          uint64_t v74 = (uint64_t *)(*(void *)(a4 + 56) + 16 * v72);
          uint64_t v76 = *v74;
          uint64_t v75 = v74[1];
          swift_bridgeObjectRetain();
          if (v76 == 1702195828 && v75 == 0xE400000000000000)
          {
            swift_bridgeObjectRelease();
            goto LABEL_29;
          }
        }
      }
    }
    else
    {
      unint64_t v65 = 0xF000000000000000;
    }
LABEL_28:
    char v77 = sub_1D7A9D358();
    swift_bridgeObjectRelease();
    if ((v77 & 1) == 0)
    {
      LOBYTE(v299) = 0;
      uint64_t v84 = v293;
      SecAccessControlRef v85 = sub_1D78F0348(a3, a5 & 1, (unsigned __int8 *)&v299, 0, 0);
      LOBYTE(v83) = v84;
      if (!v84)
      {
        uint64_t v80 = v85;
        uint64_t v284 = 0;
        uint64_t v293 = (uint64_t)v58;
LABEL_34:
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA843A50);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1D7AA91A0;
        uint64_t v279 = *MEMORY[0x1E4F5F2D8];
        *(void *)(inited + 32) = sub_1D7A9BFC8();
        *(void *)(inited + 40) = v87;
        uint64_t v88 = SecAccessControlCopyData();
        if (v88)
        {
          uint64_t v89 = (void *)v88;
          uint64_t v90 = sub_1D7A9B028();
          uint64_t v92 = v91;

          *(void *)(inited + 72) = MEMORY[0x1E4F277C0];
          *(void *)(inited + 48) = v90;
          *(void *)(inited + 56) = v92;
          uint64_t v93 = sub_1D7A9BFC8();
          uint64_t v94 = MEMORY[0x1E4FBB550];
          *(void *)(inited + 80) = v93;
          *(void *)(inited + 88) = v95;
          *(void *)(inited + 120) = v94;
          *(void *)(inited + 96) = v290;
          *(void *)(inited + 128) = sub_1D7A9BFC8();
          *(void *)(inited + 136) = v96;
          *(void *)(inited + 168) = v94;
          *(void *)(inited + 144) = 0;
          *(void *)(inited + 176) = sub_1D7A9BFC8();
          *(void *)(inited + 184) = v97;
          *(void *)(inited + 216) = MEMORY[0x1E4FBB390];
          *(unsigned char *)(inited + 192) = v83 & 1;
          uint64_t v283 = *MEMORY[0x1E4F5F360];
          *(void *)(inited + 224) = sub_1D7A9BFC8();
          *(void *)(inited + 232) = v98;
          uint64_t v281 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF7930);
          uint64_t v99 = swift_allocObject();
          *(_OWORD *)(v99 + 16) = xmmword_1D7AA4EB0;
          *(void *)(v99 + 32) = sub_1D7A9BFC8();
          *(void *)(v99 + 40) = v100;
          *(void *)(v99 + 48) = sub_1D7A9BFC8();
          *(void *)(v99 + 56) = v101;
          *(void *)(v99 + 64) = sub_1D7A9BFC8();
          *(void *)(v99 + 72) = v102;
          *(void *)(v99 + 80) = sub_1D7A9BFC8();
          *(void *)(v99 + 88) = v103;
          *(void *)(v99 + 96) = sub_1D7A9BFC8();
          *(void *)(v99 + 104) = v104;
          *(void *)(v99 + 112) = sub_1D7A9BFC8();
          *(void *)(v99 + 120) = v105;
          uint64_t v282 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDF7900);
          *(void *)(inited + 264) = v282;
          *(void *)(inited + 240) = v99;
          unint64_t v285 = sub_1D785F740(inited);
          unint64_t v290 = v65;
          v288 = v80;
          if (a4
            && *(void *)(a4 + 16)
            && (unint64_t v106 = sub_1D7A18C10(5u), (v107 & 1) != 0)
            && ((uint64_t v108 = (void *)(*(void *)(a4 + 56) + 16 * v106), *v108 == 1702195828)
             && v108[1] == 0xE400000000000000
             || (sub_1D7A9D358() & 1) != 0))
          {
            unint64_t v109 = v292;
            uint64_t v111 = v294;
            uint64_t v110 = v295;
            if (qword_1EBDF9DC8 != -1) {
              swift_once();
            }
            uint64_t v112 = __swift_project_value_buffer(v111, (uint64_t)qword_1EBDFBE70);
            swift_beginAccess();
            uint64_t v113 = v286;
            v280 = *(void (**)(uint8_t *, uint64_t, uint64_t))(v110 + 16);
            v280(v286, v112, v111);
            swift_bridgeObjectRetain_n();
            uint64_t v114 = sub_1D7A9B5D8();
            os_log_type_t v115 = sub_1D7A9C748();
            if (os_log_type_enabled(v114, v115))
            {
              uint64_t v116 = (uint8_t *)swift_slowAlloc();
              uint64_t v117 = swift_slowAlloc();
              *(void *)&long long v299 = v117;
              *(_DWORD *)uint64_t v116 = 136315138;
              swift_bridgeObjectRetain();
              *(void *)&long long v297 = sub_1D7923300(v289, v109, (uint64_t *)&v299);
              sub_1D7A9C9E8();
              swift_bridgeObjectRelease_n();
              _os_log_impl(&dword_1D7853000, v114, v115, "Allowing BAA key reuse for label %s", v116, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x1D947D740](v117, -1, -1);
              MEMORY[0x1D947D740](v116, -1, -1);

              unint64_t v118 = *(void (**)(uint8_t *, uint64_t))(v295 + 8);
              v118(v286, v294);
            }
            else
            {

              swift_bridgeObjectRelease_n();
              unint64_t v118 = *(void (**)(uint8_t *, uint64_t))(v110 + 8);
              v118(v113, v111);
            }
            uint64_t v150 = sub_1D7A9BFC8();
            uint64_t v152 = v151;
            *((void *)&v300 + 1) = MEMORY[0x1E4FBB550];
            *(void *)&long long v299 = 1;
            sub_1D7860E50(&v299, &v297);
            unint64_t v153 = v285;
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v296[0] = v153;
            uint64_t v155 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v297, v298);
            MEMORY[0x1F4188790](v155, v155, v156, v157, v158, v159, v160, v161);
            uint64_t v163 = (uint64_t *)((char *)&v279 - ((v162 + 15) & 0xFFFFFFFFFFFFFFF0));
            (*(void (**)(uint64_t *))(v164 + 16))(v163);
            sub_1D78F6A20(*v163, v150, v152, isUniquelyReferenced_nonNull_native, v296);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v297);
            uint64_t v58 = (void *)v296[0];
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          else
          {
            unint64_t v119 = v292;
            uint64_t v120 = v294;
            uint64_t v121 = v295;
            if (qword_1EBDF9DC8 != -1) {
              swift_once();
            }
            uint64_t v122 = __swift_project_value_buffer(v120, (uint64_t)qword_1EBDFBE70);
            swift_beginAccess();
            v123 = v291;
            v280 = *(void (**)(uint8_t *, uint64_t, uint64_t))(v121 + 16);
            v280(v291, v122, v120);
            swift_bridgeObjectRetain_n();
            id v124 = sub_1D7A9B5D8();
            os_log_type_t v125 = sub_1D7A9C748();
            if (os_log_type_enabled(v124, v125))
            {
              uint64_t v126 = (uint8_t *)swift_slowAlloc();
              uint64_t v127 = swift_slowAlloc();
              *(void *)&long long v299 = v127;
              *(_DWORD *)uint64_t v126 = 136315138;
              swift_bridgeObjectRetain();
              *(void *)&long long v297 = sub_1D7923300(v289, v119, (uint64_t *)&v299);
              sub_1D7A9C9E8();
              swift_bridgeObjectRelease_n();
              _os_log_impl(&dword_1D7853000, v124, v125, "Not allowing BAA key reuse for label %s", v126, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x1D947D740](v127, -1, -1);
              MEMORY[0x1D947D740](v126, -1, -1);

              unint64_t v118 = *(void (**)(uint8_t *, uint64_t))(v295 + 8);
              v118(v291, v294);
            }
            else
            {

              swift_bridgeObjectRelease_n();
              unint64_t v118 = *(void (**)(uint8_t *, uint64_t))(v121 + 8);
              v118(v123, v120);
            }
            uint64_t v128 = sub_1D7A9BFC8();
            uint64_t v130 = v129;
            *((void *)&v300 + 1) = MEMORY[0x1E4FBB550];
            *(void *)&long long v299 = 1;
            sub_1D7860E50(&v299, &v297);
            unint64_t v131 = v285;
            char v132 = swift_isUniquelyReferenced_nonNull_native();
            v296[0] = v131;
            uint64_t v133 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v297, v298);
            MEMORY[0x1F4188790](v133, v133, v134, v135, v136, v137, v138, v139);
            v141 = (uint64_t *)((char *)&v279 - ((v140 + 15) & 0xFFFFFFFFFFFFFFF0));
            (*(void (**)(uint64_t *))(v142 + 16))(v141);
            sub_1D78F6A20(*v141, v128, v130, v132, v296);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v297);
            uint64_t v58 = (void *)v296[0];
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (!a4) {
              goto LABEL_71;
            }
          }
          unint64_t v165 = v290;
          if (!*(void *)(a4 + 16)
            || (unint64_t v166 = sub_1D7A18C10(6u), (v167 & 1) == 0)
            || ((os_log_type_t v168 = (void *)(*(void *)(a4 + 56) + 16 * v166), *v168 != 1702195828)
             || v168[1] != 0xE400000000000000)
            && (sub_1D7A9D358() & 1) == 0)
          {
LABEL_72:
            uint64_t v193 = v288;
            if (v165 >> 60 == 15)
            {
LABEL_88:
              if (a4 && *(void *)(a4 + 16) && (sub_1D7A18C10(7u), (v251 & 1) != 0))
              {
                swift_bridgeObjectRetain();
                uint64_t v252 = sub_1D7A9AFB8();
                unint64_t v254 = v253;
                swift_bridgeObjectRelease();
                if (v254 >> 60 == 15)
                {
                  LOWORD(v299) = 119;
                  unint64_t v255 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
                  sub_1D7860544();
                  v256 = (void *)swift_allocError();
                  DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000023, 0x80000001D7AC2360, (__int16 *)&v299, 0, v255, 0xD00000000000005DLL, 0x80000001D7AC21C0, v257, 0xD000000000000034, 0x80000001D7AC2390, 345);
                  swift_willThrow();
                  LOWORD(v299) = 0;
                  id v258 = v256;
                  id v259 = v256;
                  unint64_t v260 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
                  swift_allocError();
                  DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(v256, 0xD000000000000024, 0x80000001D7AC23D0, (__int16 *)&v299, 0, v260, 0xD00000000000005DLL, 0x80000001D7AC21C0, v261, 0xD000000000000034, 0x80000001D7AC2390, 349);
                  swift_willThrow();
                  sub_1D7871BDC(v293, v290);

                  swift_bridgeObjectRelease();
                  return v58;
                }
                uint64_t v265 = sub_1D7A9BFC8();
                uint64_t v267 = v266;
                *((void *)&v300 + 1) = MEMORY[0x1E4F277C0];
                *(void *)&long long v299 = v252;
                *((void *)&v299 + 1) = v254;
                sub_1D7860E50(&v299, &v297);
                sub_1D7860790(v252, v254);
                char v268 = swift_isUniquelyReferenced_nonNull_native();
                v301 = v58;
                uint64_t v269 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v297, v298);
                MEMORY[0x1F4188790](v269, v269, v270, v271, v272, v273, v274, v275);
                v277 = (uint64_t *)((char *)&v279 - ((v276 + 15) & 0xFFFFFFFFFFFFFFF0));
                (*(void (**)(uint64_t *))(v278 + 16))(v277);
                sub_1D78F6DEC(*v277, v277[1], v265, v267, v268, &v301);
                __swift_destroy_boxed_opaque_existential_1((uint64_t)&v297);
                uint64_t v58 = v301;
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                sub_1D7871BDC(v293, v290);

                uint64_t v262 = v252;
                unint64_t v263 = v254;
              }
              else
              {

                uint64_t v262 = v293;
                unint64_t v263 = v165;
              }
              sub_1D7871BDC(v262, v263);
              return v58;
            }
            uint64_t v194 = sub_1D7A9BFC8();
            uint64_t v196 = v195;
            *((void *)&v300 + 1) = MEMORY[0x1E4F277C0];
            uint64_t v197 = v293;
            *(void *)&long long v299 = v293;
            *((void *)&v299 + 1) = v165;
            sub_1D7860E50(&v299, &v297);
            sub_1D7860790(v197, v165);
            sub_1D7860790(v197, v165);
            char v198 = swift_isUniquelyReferenced_nonNull_native();
            v301 = v58;
            uint64_t v199 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v297, v298);
            MEMORY[0x1F4188790](v199, v199, v200, v201, v202, v203, v204, v205);
            uint64_t v207 = (uint64_t *)((char *)&v279 - ((v206 + 15) & 0xFFFFFFFFFFFFFFF0));
            (*(void (**)(uint64_t *))(v208 + 16))(v207);
            sub_1D78F6DEC(*v207, v207[1], v194, v196, v198, &v301);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v297);
            long long v209 = v301;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v210 = sub_1D7A9BFC8();
            if (v209[2])
            {
              uint64_t v212 = sub_1D7A18684(v210, v211);
              uint64_t v213 = v282;
              if (v214)
              {
                sub_1D78907D8(v209[7] + 32 * v212, (uint64_t)&v299);
              }
              else
              {
                long long v299 = 0u;
                long long v300 = 0u;
              }
            }
            else
            {
              long long v299 = 0u;
              long long v300 = 0u;
              uint64_t v213 = v282;
            }
            swift_bridgeObjectRelease();
            if (*((void *)&v300 + 1))
            {
              __swift_instantiateConcreteTypeFromMangledName(&qword_1EA843A60);
              if (swift_dynamicCast())
              {
                v215 = (void *)v297;
                uint64_t v216 = sub_1D7A9BFC8();
                uint64_t v218 = v217;
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  v215 = sub_1D789E300(0, v215[2] + 1, 1, v215);
                }
                unint64_t v220 = v215[2];
                unint64_t v219 = v215[3];
                if (v220 >= v219 >> 1) {
                  v215 = sub_1D789E300((void *)(v219 > 1), v220 + 1, 1, v215);
                }
                v215[2] = v220 + 1;
                v221 = &v215[2 * v220];
                v221[4] = v216;
                v221[5] = v218;
                uint64_t v222 = sub_1D7A9BFC8();
                uint64_t v224 = v223;
                *((void *)&v300 + 1) = v282;
                *(void *)&long long v299 = v215;
                sub_1D7860E50(&v299, &v297);
                char v225 = swift_isUniquelyReferenced_nonNull_native();
                v301 = v209;
                uint64_t v226 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v297, v298);
                MEMORY[0x1F4188790](v226, v226, v227, v228, v229, v230, v231, v232);
                v234 = (uint64_t *)((char *)&v279 - ((v233 + 15) & 0xFFFFFFFFFFFFFFF0));
                (*(void (**)(uint64_t *))(v235 + 16))(v234);
                sub_1D78F6FD4(*v234, v222, v224, v225, &v301);
                __swift_destroy_boxed_opaque_existential_1((uint64_t)&v297);
                uint64_t v58 = v301;
                goto LABEL_87;
              }
            }
            else
            {
              sub_1D7871C4C((uint64_t)&v299, &qword_1EA843A58);
            }
            uint64_t v236 = sub_1D7A9BFC8();
            uint64_t v238 = v237;
            uint64_t v239 = swift_allocObject();
            *(_OWORD *)(v239 + 16) = xmmword_1D7AA08E0;
            *(void *)(v239 + 32) = sub_1D7A9BFC8();
            *(void *)(v239 + 40) = v240;
            *((void *)&v300 + 1) = v213;
            *(void *)&long long v299 = v239;
            sub_1D7860E50(&v299, &v297);
            LOBYTE(v239) = swift_isUniquelyReferenced_nonNull_native();
            v301 = v209;
            uint64_t v241 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v297, v298);
            MEMORY[0x1F4188790](v241, v241, v242, v243, v244, v245, v246, v247);
            v249 = (uint64_t *)((char *)&v279 - ((v248 + 15) & 0xFFFFFFFFFFFFFFF0));
            (*(void (**)(uint64_t *))(v250 + 16))(v249);
            sub_1D78F6FD4(*v249, v236, v238, v239, &v301);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v297);
            uint64_t v58 = v301;
LABEL_87:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            unint64_t v165 = v290;
            sub_1D7871BDC(v293, v290);
            goto LABEL_88;
          }
          if (qword_1EBDF9DC8 != -1) {
            swift_once();
          }
          uint64_t v169 = v294;
          uint64_t v170 = __swift_project_value_buffer(v294, (uint64_t)qword_1EBDFBE70);
          swift_beginAccess();
          v171 = v287;
          v280(v287, v170, v169);
          unint64_t v172 = v292;
          swift_bridgeObjectRetain_n();
          v173 = sub_1D7A9B5D8();
          os_log_type_t v174 = sub_1D7A9C748();
          if (os_log_type_enabled(v173, v174))
          {
            v175 = (uint8_t *)swift_slowAlloc();
            v291 = (uint8_t *)swift_slowAlloc();
            *(void *)&long long v299 = v291;
            *(_DWORD *)v175 = 136315138;
            v286 = v175 + 4;
            swift_bridgeObjectRetain();
            uint64_t v176 = v289;
            *(void *)&long long v297 = sub_1D7923300(v289, v292, (uint64_t *)&v299);
            sub_1D7A9C9E8();
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_1D7853000, v173, v174, "Letting device identity manage keychain for label %s", v175, 0xCu);
            uint64_t v177 = (char *)v291;
            swift_arrayDestroy();
            uint64_t v178 = v177;
            unint64_t v172 = v292;
            MEMORY[0x1D947D740](v178, -1, -1);
            MEMORY[0x1D947D740](v175, -1, -1);

            v118(v287, v294);
          }
          else
          {

            swift_bridgeObjectRelease_n();
            v118(v171, v169);
            uint64_t v176 = v289;
          }
          uint64_t v179 = sub_1D7A9BFC8();
          uint64_t v181 = v180;
          *((void *)&v300 + 1) = MEMORY[0x1E4FBB1A0];
          *(void *)&long long v299 = v176;
          *((void *)&v299 + 1) = v172;
          sub_1D7860E50(&v299, &v297);
          swift_bridgeObjectRetain();
          char v182 = swift_isUniquelyReferenced_nonNull_native();
          v301 = v58;
          uint64_t v183 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v297, v298);
          MEMORY[0x1F4188790](v183, v183, v184, v185, v186, v187, v188, v189);
          uint64_t v191 = (uint64_t *)((char *)&v279 - ((v190 + 15) & 0xFFFFFFFFFFFFFFF0));
          (*(void (**)(uint64_t *))(v192 + 16))(v191);
          sub_1D78F6C04(*v191, v191[1], v179, v181, v182, &v301);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v297);
          uint64_t v58 = v301;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_71:
          unint64_t v165 = v290;
          goto LABEL_72;
        }
LABEL_99:
        __break(1u);
        JUMPOUT(0x1D78F2DDCLL);
      }
LABEL_32:
      sub_1D7871BDC((uint64_t)v58, v65);
      return v58;
    }
LABEL_29:
    LOBYTE(v299) = 1;
    uint64_t v78 = v293;
    SecAccessControlRef v79 = sub_1D78F0348(a3, a5 & 1, (unsigned __int8 *)&v299, 0, 0);
    if (!v78)
    {
      uint64_t v80 = v79;
      uint64_t v284 = 0;
      uint64_t v293 = (uint64_t)v58;
      uint64_t v81 = v288[3];
      uint64_t v82 = v288[4];
      __swift_project_boxed_opaque_existential_1(v288, v81);
      uint64_t v83 = (*(unsigned __int8 (**)(uint64_t, uint64_t))(v82 + 72))(v81, v82) ^ 1u;
      goto LABEL_34;
    }
    goto LABEL_32;
  }
  swift_bridgeObjectRetain();
  uint64_t v58 = (void *)sub_1D7A9BF98();
  swift_bridgeObjectRelease();
  unint64_t v59 = HexToBytes(v58);

  if (v59)
  {
    uint64_t v60 = sub_1D7A9B028();
    unint64_t v62 = v61;

    uint64_t v63 = sub_1D78D0D44(v60, v62);
    uint64_t v58 = (void *)v63;
    unint64_t v65 = v64;
    switch(v64 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(v63), v63))
        {
          __break(1u);
LABEL_98:
          __break(1u);
          goto LABEL_99;
        }
        uint64_t v145 = HIDWORD(v63) - (int)v63;
LABEL_56:
        sub_1D7860790(v63, v64);
        if (v145 > 32)
        {
LABEL_57:
          LOWORD(v299) = 105;
          unint64_t v148 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
          sub_1D7860544();
          swift_allocError();
          DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD00000000000002FLL, 0x80000001D7AC2430, (__int16 *)&v299, 0, v148, 0xD00000000000005DLL, 0x80000001D7AC21C0, v149, 0xD000000000000034, 0x80000001D7AC2390, 283);
          swift_willThrow();
          sub_1D78607E8((uint64_t)v58, v65);
          sub_1D78607E8((uint64_t)v58, v65);
          return v58;
        }
LABEL_14:
        sub_1D78607E8((uint64_t)v58, v65);
        if (!*(void *)(a4 + 16)) {
          goto LABEL_28;
        }
        goto LABEL_22;
      case 2uLL:
        uint64_t v147 = *(void *)(v63 + 16);
        uint64_t v146 = *(void *)(v63 + 24);
        uint64_t v145 = v146 - v147;
        if (!__OFSUB__(v146, v147)) {
          goto LABEL_56;
        }
        goto LABEL_98;
      case 3uLL:
        goto LABEL_14;
      default:
        if (BYTE6(v64) <= 0x20uLL) {
          goto LABEL_14;
        }
        goto LABEL_57;
    }
  }
  LOWORD(v299) = 123;
  unint64_t v143 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
  sub_1D7860544();
  swift_allocError();
  DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000021, 0x80000001D7AC2400, (__int16 *)&v299, 0, v143, 0xD00000000000005DLL, 0x80000001D7AC21C0, v144, 0xD000000000000034, 0x80000001D7AC2390, 280);
  swift_willThrow();
  return v58;
}

uint64_t DeviceIdentityCommon.callDeviceIdentity(baaOptions:)(uint64_t a1)
{
  v1[8] = a1;
  uint64_t v2 = sub_1D7A9C7C8();
  v1[9] = v2;
  v1[10] = *(void *)(v2 - 8);
  v1[11] = swift_task_alloc();
  sub_1D7A9B708();
  v1[12] = swift_task_alloc();
  sub_1D7A9C7B8();
  v1[13] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D78F2F04, 0, 0);
}

uint64_t sub_1D78F2F04()
{
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 72);
  type metadata accessor for DeviceIdentityCommon.ScrtAttestationActor();
  uint64_t v4 = swift_allocObject();
  *(void *)(v0 + 112) = v4;
  swift_defaultActor_initialize();
  *(unsigned char *)(v4 + 112) = 0;
  sub_1D7865074();
  sub_1D7A9C7A8();
  sub_1D7A9B6E8();
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v1, *MEMORY[0x1E4FBCC58], v3);
  uint64_t v5 = sub_1D7A9C808();
  *(void *)(v0 + 120) = v5;
  *(unsigned char *)(v0 + 56) = 1;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA8459D8 + dword_1EA8459D8);
  *(_OWORD *)(v0 + 16) = xmmword_1D7AA91B0;
  *(unsigned char *)(v0 + 32) = 0;
  *(void *)(v0 + 40) = v5;
  *(void *)(v0 + 48) = 0;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1D78F30A4;
  uint64_t v7 = *(void *)(v0 + 64);
  return v9(v0 + 16, v7, v4);
}

uint64_t sub_1D78F30A4(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 136) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v7 = sub_1D78F326C;
  }
  else
  {
    *(void *)(v6 + 144) = a2;
    *(void *)(v6 + 152) = a1;
    uint64_t v7 = sub_1D78F31D8;
  }
  return MEMORY[0x1F4188298](v7, 0, 0);
}

uint64_t sub_1D78F31D8()
{
  uint64_t v1 = (void *)v0[15];
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  uint64_t v4 = v0[18];
  uint64_t v3 = v0[19];
  return v2(v3, v4);
}

uint64_t sub_1D78F326C()
{
  uint64_t v1 = *(void **)(v0 + 120);
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1D78F32FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[21] = a2;
  v3[22] = a3;
  v3[20] = a1;
  uint64_t v4 = sub_1D7A9B5F8();
  v3[23] = v4;
  v3[24] = *(void *)(v4 - 8);
  v3[25] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D78F33C0, 0, 0);
}

uint64_t sub_1D78F33C0()
{
  if (qword_1EBDF9DC8 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[24];
  uint64_t v1 = v0[25];
  uint64_t v3 = v0[23];
  uint64_t v4 = __swift_project_value_buffer(v3, (uint64_t)qword_1EBDFBE70);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  uint64_t v5 = sub_1D7A9B5D8();
  os_log_type_t v6 = sub_1D7A9C748();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl(&dword_1D7853000, v5, v6, "creating BAA certificate with DeviceIdentity", v7, 2u);
    MEMORY[0x1D947D740](v7, -1, -1);
  }
  uint64_t v9 = v0[24];
  uint64_t v8 = v0[25];
  uint64_t v11 = v0[22];
  uint64_t v10 = v0[23];

  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  swift_bridgeObjectRetain();
  return MEMORY[0x1F4188298](sub_1D78F354C, v11, 0);
}

uint64_t sub_1D78F354C()
{
  *(unsigned char *)(v0 + 258) = *(unsigned char *)(*(void *)(v0 + 176) + 112);
  return MEMORY[0x1F4188298](sub_1D78F3574, 0, 0);
}

uint64_t sub_1D78F3574()
{
  uint64_t v17 = v0;
  if (*(unsigned char *)(v0 + 258))
  {
    uint64_t v1 = *(void *)(v0 + 168);
    uint64_t v2 = sub_1D7A9BFC8();
    uint64_t v4 = v3;
    *(void *)(v0 + 48) = 1;
    *(void *)(v0 + 72) = MEMORY[0x1E4FBB550];
    sub_1D7860E50((_OWORD *)(v0 + 48), (_OWORD *)(v0 + 16));
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v16 = v1;
    uint64_t v6 = *(void *)(v0 + 40);
    uint64_t v7 = __swift_mutable_project_boxed_opaque_existential_1(v0 + 16, v6);
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = (uint64_t *)swift_task_alloc();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v8 + 16))(v9, v7, v6);
    sub_1D78F6A20(*v9, v2, v4, isUniquelyReferenced_nonNull_native, &v16);
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
    swift_task_dealloc();
    uint64_t v10 = v16;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = *(void *)(v0 + 168);
  }
  uint64_t v11 = swift_allocObject();
  *(void *)(v0 + 208) = v11;
  *(void *)(v11 + 16) = v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8439F0);
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v0 + 216) = v13;
  v13[2] = 0x4072C00000000000;
  v13[3] = &unk_1EA8439E8;
  v13[4] = v11;
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v0 + 224) = v14;
  *uint64_t v14 = v0;
  v14[1] = sub_1D78F37E4;
  uint64_t v19 = v12;
  return MEMORY[0x1F4188080](v0 + 128);
}

uint64_t sub_1D78F37E4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 232) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_1D78F3980;
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    *(_OWORD *)(v2 + 240) = *(_OWORD *)(v2 + 128);
    uint64_t v3 = sub_1D78F3910;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1D78F3910()
{
  uint64_t v1 = *(void *)(v0 + 160);
  *(_OWORD *)uint64_t v1 = *(_OWORD *)(v0 + 240);
  *(_WORD *)(v1 + 16) = 0;
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1D78F3980()
{
  uint64_t v20 = v0;
  uint64_t v1 = *(void **)(v0 + 232);
  swift_task_dealloc();
  swift_release();
  *(void *)(v0 + 152) = v1;
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDF9740);
  if (swift_dynamicCast())
  {
    uint64_t v3 = *(void *)(v0 + 160);

    __int16 v19 = 295;
    unint64_t v4 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    uint64_t v5 = swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000019, 0x80000001D7AC2240, &v19, 0, v4, 0xD00000000000005DLL, 0x80000001D7AC21C0, v6, 0xD00000000000001FLL, 0x80000001D7AC2260, 255);
    *(void *)uint64_t v3 = v5;
    *(void *)(v3 + 8) = 0;
    *(_WORD *)(v3 + 16) = 513;

LABEL_11:
    swift_task_dealloc();
    uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
    return v17();
  }

  swift_getErrorValue();
  Error.dipErrorCode.getter(*(void *)(v0 + 112), v7, v8, v9, v10, v11, v12, (__int16 *)(v0 + 256));
  int v13 = *(unsigned __int16 *)(v0 + 256);
  if (v13 != 229)
  {
    uint64_t v14 = *(void *)(v0 + 160);
    *(void *)uint64_t v14 = *(void *)(v0 + 232);
    *(void *)(v14 + 8) = 0;
    if (v13 == 230) {
      __int16 v15 = 513;
    }
    else {
      __int16 v15 = 256;
    }
    *(_WORD *)(v14 + 16) = v15;
    goto LABEL_11;
  }
  uint64_t v16 = *(void *)(v0 + 176);
  return MEMORY[0x1F4188298](sub_1D78F3BC0, v16, 0);
}

uint64_t sub_1D78F3BC0()
{
  *(unsigned char *)(*(void *)(v0 + 176) + 112) = 1;
  return MEMORY[0x1F4188298](sub_1D78F3BE8, 0, 0);
}

uint64_t sub_1D78F3BE8()
{
  uint64_t v1 = v0[20];
  *(void *)uint64_t v1 = v0[29];
  *(void *)(v1 + 8) = 0;
  *(_WORD *)(v1 + 16) = 513;
  swift_task_dealloc();
  id v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_1D78F3C5C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  void *v4 = v2;
  v4[1] = sub_1D78F3D0C;
  v4[5] = a2;
  return MEMORY[0x1F4188298](sub_1D78F3EB0, 0, 0);
}

uint64_t sub_1D78F3D0C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  uint64_t v7 = *v3;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v8 = *(uint64_t (**)(void))(v7 + 8);
    return v8();
  }
  else
  {
    *(void *)(v6 + 32) = a2;
    *(void *)(v6 + 40) = a1;
    return MEMORY[0x1F4188298](sub_1D78F3E68, 0, 0);
  }
}

uint64_t sub_1D78F3E68()
{
  *(int8x16_t *)*(void *)(v0 + 16) = vextq_s8(*(int8x16_t *)(v0 + 32), *(int8x16_t *)(v0 + 32), 8uLL);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D78F3E90(uint64_t a1)
{
  *(void *)(v1 + 40) = a1;
  return MEMORY[0x1F4188298](sub_1D78F3EB0, 0, 0);
}

uint64_t sub_1D78F3EB0()
{
  v0[4] = sub_1D79A0DBC(v0[5]);
  uint64_t v1 = swift_task_alloc();
  v0[6] = v1;
  *(void *)(v1 + 16) = v0 + 4;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[7] = v2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8439F0);
  *uint64_t v2 = v0;
  v2[1] = sub_1D78F3FC0;
  return MEMORY[0x1F4188160](v0 + 2, 0, 0, 0xD000000000000022, 0x80000001D7AC2280, sub_1D78F7AB0, v1, v3);
}

uint64_t sub_1D78F3FC0()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1D78F414C;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1D78F40DC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D78F40DC()
{
  uint64_t v2 = v0[2];
  uint64_t v1 = v0[3];
  swift_bridgeObjectRelease();
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v3(v2, v1);
}

uint64_t sub_1D78F414C()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t DeviceIdentityCommon.deleteCertificateWithDeviceIdentity(label:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x1F4188298](sub_1D78F41D8, 0, 0);
}

uint64_t sub_1D78F41D8()
{
  uint64_t v2 = v0[2];
  uint64_t v1 = v0[3];
  uint64_t v3 = swift_allocObject();
  v0[4] = v3;
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  swift_bridgeObjectRetain();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[5] = v4;
  v4[2] = 0x4072C00000000000;
  v4[3] = &unk_1EA843958;
  v4[4] = v3;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[6] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1D78F4308;
  return MEMORY[0x1F4188080](v5);
}

uint64_t sub_1D78F4308()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1D78F4444;
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    uint64_t v2 = sub_1D78F442C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D78F442C()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D78F4444()
{
  swift_task_dealloc();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D78F44B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a2;
  *(void *)(v3 + 24) = a3;
  return MEMORY[0x1F4188298](sub_1D78F44D0, 0, 0);
}

uint64_t sub_1D78F44D0()
{
  uint64_t v2 = v0[2];
  uint64_t v1 = v0[3];
  uint64_t v3 = swift_task_alloc();
  v0[4] = v3;
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[5] = v4;
  void *v4 = v0;
  uint64_t v5 = MEMORY[0x1E4FBC848];
  v4[1] = sub_1D78F45C4;
  return MEMORY[0x1F4188160](v4, 0, 0, 0xD00000000000001CLL, 0x80000001D7AC2120, sub_1D78F67C0, v3, v5 + 8);
}

uint64_t sub_1D78F45C4()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1D78F46E0;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1D78F7BE8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D78F46E0()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D78F4744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_1D78F4808;
  return DeviceIdentityCommon.fetchOrCreateCertificateWithDeviceIdentity(label:laContext:options:enableUAM:)(a1, a2, a3, a4, a5);
}

uint64_t sub_1D78F4808(uint64_t a1, uint64_t a2)
{
  uint64_t v10 = *v3;
  uint64_t v6 = swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
  if (!v2)
  {
    uint64_t v6 = a1;
    uint64_t v7 = a2;
  }
  return v8(v6, v7);
}

uint64_t sub_1D78F4918(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[2] = a1;
  v5[3] = a2;
  v5[1] = sub_1D786EC1C;
  return MEMORY[0x1F4188298](sub_1D78F41D8, 0, 0);
}

uint64_t sub_1D78F49C8(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1D78F7BD8;
  return DeviceIdentityCommon.callDeviceIdentity(baaOptions:)(a1);
}

void sub_1D78F4A5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8439D0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x1F4188790](v6, v9, v10, v11, v12, v13, v14, v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9400);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D7AA0A40;
  *(void *)(inited + 32) = sub_1D7A9BFC8();
  *(void *)(inited + 40) = v17;
  *(void *)(inited + 72) = MEMORY[0x1E4FBB390];
  *(unsigned char *)(inited + 48) = 1;
  *(void *)(inited + 80) = sub_1D7A9BFC8();
  *(void *)(inited + 88) = v18;
  *(void *)(inited + 120) = MEMORY[0x1E4FBB1A0];
  *(void *)(inited + 96) = a2;
  *(void *)(inited + 104) = a3;
  swift_bridgeObjectRetain();
  unint64_t v19 = sub_1D785F2A0(inited);
  sub_1D79A1168(v19);
  swift_bridgeObjectRelease();
  uint64_t v20 = (void *)sub_1D7A9BE98();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  unint64_t v21 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v22 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v22 + v21, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  uint64_t v23 = (void *)(v22 + ((v8 + v21 + 7) & 0xFFFFFFFFFFFFFFF8));
  void *v23 = a2;
  v23[1] = a3;
  aBlock[4] = sub_1D78F6874;
  aBlock[5] = v22;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D78F5078;
  aBlock[3] = &block_descriptor_4;
  uint64_t v24 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_release();
  DeviceIdentityIssueClientCertificateWithCompletion();
  _Block_release(v24);
}

void sub_1D78F4CF4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v10 = sub_1D7A9B5F8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10, v12, v13, v14, v15, v16, v17, v18);
  uint64_t v20 = (char *)&v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    id v21 = a3;
    uint64_t v22 = (void *)sub_1D78F0BB0();
    LOWORD(v37[0]) = 0;
    unint64_t v23 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    uint64_t v24 = swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(v22, 0xD00000000000001ELL, 0x80000001D7AC21A0, (__int16 *)v37, 0, v23, 0xD00000000000005DLL, 0x80000001D7AC21C0, v25, 0xD00000000000001CLL, 0x80000001D7AC2120, 376);
    v37[0] = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8439D0);
    sub_1D7A9C448();
  }
  else
  {
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v26 = __swift_project_value_buffer(v10, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v20, v26, v10);
    swift_bridgeObjectRetain_n();
    uint64_t v27 = sub_1D7A9B5D8();
    os_log_type_t v28 = sub_1D7A9C748();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v34 = a4;
      uint64_t v29 = swift_slowAlloc();
      uint64_t v33 = a5;
      uint64_t v30 = (uint8_t *)v29;
      uint64_t v31 = swift_slowAlloc();
      uint64_t v36 = v31;
      *(_DWORD *)uint64_t v30 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v35 = sub_1D7923300(v33, a6, &v36);
      sub_1D7A9C9E8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D7853000, v27, v28, "Device Identity deleted certificate %s", v30, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v31, -1, -1);
      MEMORY[0x1D947D740](v30, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v20, v10);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8439D0);
    sub_1D7A9C458();
  }
}

uint64_t sub_1D78F5078(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v6 = *(void (**)(void *, uint64_t, void *))(a1 + 32);
  if (a3) {
    uint64_t v7 = sub_1D7A9C318();
  }
  else {
    uint64_t v7 = 0;
  }
  swift_retain();
  id v8 = a2;
  id v9 = a4;
  v6(a2, v7, a4);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_1D78F512C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA843A48);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x1F4188790](v4, v7, v8, v9, v10, v11, v12, v13);
  uint64_t v14 = sub_1D7A9BFC8();
  uint64_t v16 = *a2;
  if (!*(void *)(*a2 + 16) || (uint64_t v17 = sub_1D7A18684(v14, v15), (v18 & 1) == 0))
  {
    long long aBlock = 0u;
    long long v35 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  sub_1D78907D8(*(void *)(v16 + 56) + 32 * v17, (uint64_t)&aBlock);
  swift_bridgeObjectRelease();
  if (!*((void *)&v35 + 1))
  {
LABEL_7:
    sub_1D7871C4C((uint64_t)&aBlock, (uint64_t *)&unk_1EBDF9680);
    goto LABEL_8;
  }
  if (swift_dynamicCast())
  {
    uint64_t v28 = sub_1D7A9BFC8();
    uint64_t v29 = v19;
    unint64_t v30 = v33;
    uint64_t v31 = v32;
    id v25 = sub_1D7A746CC();
    type metadata accessor for SecAccessControl(0);
    *((void *)&v35 + 1) = v26;
    *(void *)&long long aBlock = v25;
    sub_1D7A16648((uint64_t)&aBlock, v28, v29);
    sub_1D78607E8(v32, v33);
  }
LABEL_8:
  uint64_t v20 = swift_bridgeObjectRetain();
  sub_1D79A1168(v20);
  swift_bridgeObjectRelease();
  id v21 = (void *)sub_1D7A9BE98();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v22 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v23 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v23 + v22, (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  uint64_t v36 = sub_1D78F7B4C;
  uint64_t v37 = v23;
  *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v35 = sub_1D78F5078;
  *((void *)&v35 + 1) = &block_descriptor_80;
  uint64_t v24 = _Block_copy(&aBlock);
  swift_release();
  DeviceIdentityIssueClientCertificateWithCompletion();
  _Block_release(v24);
}

void sub_1D78F54EC(void *a1, uint64_t a2, void *a3)
{
  uint64_t v6 = sub_1D7A9B5F8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6, v8, v9, v10, v11, v12, v13, v14);
  uint64_t v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    id v17 = a3;
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v18 = __swift_project_value_buffer(v6, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v16, v18, v6);
    id v19 = a3;
    id v20 = a3;
    id v21 = sub_1D7A9B5D8();
    os_log_type_t v22 = sub_1D7A9C758();
    int v23 = v22;
    if (os_log_type_enabled(v21, v22))
    {
      int v52 = v23;
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      uint64_t v51 = swift_slowAlloc();
      uint64_t v54 = v51;
      *(_DWORD *)uint64_t v24 = 136446210;
      unint64_t v49 = v24 + 4;
      char v50 = v24;
      id v25 = (void *)sub_1D7A9AE48();
      id v26 = objc_msgSend(v25, sel_debugDescription);

      uint64_t v27 = sub_1D7A9BFC8();
      unint64_t v29 = v28;

      uint64_t v53 = sub_1D7923300(v27, v29, &v54);
      sub_1D7A9C9E8();
      swift_bridgeObjectRelease();

      unint64_t v30 = v50;
      _os_log_impl(&dword_1D7853000, v21, (os_log_type_t)v52, "Device Identity Error: %{public}s", v50, 0xCu);
      uint64_t v31 = v51;
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v31, -1, -1);
      MEMORY[0x1D947D740](v30, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v16, v6);
    id v38 = (void *)sub_1D78F0BB0();
    LOWORD(v54) = 0;
    unint64_t v39 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    uint64_t v40 = swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(v38, 0xD00000000000001ELL, 0x80000001D7AC2340, (__int16 *)&v54, 0, v39, 0xD00000000000005DLL, 0x80000001D7AC21C0, v41, 0xD000000000000022, 0x80000001D7AC2280, 402);
    uint64_t v54 = v40;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA843A48);
    sub_1D7A9C448();
  }
  else if (a1)
  {
    if (a2 && *(void *)(a2 + 16) == 2)
    {
      sub_1D78907D8(a2 + 32, (uint64_t)v55);
      type metadata accessor for SecCertificate(0);
      id v32 = a1;
      swift_dynamicCast();
      uint64_t v33 = v54;
      sub_1D78907D8(a2 + 64, (uint64_t)v55);
      swift_dynamicCast();
      uint64_t v34 = v54;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF99C0);
      uint64_t v35 = swift_allocObject();
      *(_OWORD *)(v35 + 16) = xmmword_1D7AA91C0;
      *(void *)(v35 + 32) = v33;
      *(void *)(v35 + 40) = v34;
      v55[0] = v35;
      sub_1D7A9C338();
      uint64_t v36 = v55[0];
      v55[0] = v32;
      v55[1] = v36;
      id v37 = v32;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA843A48);
      sub_1D7A9C458();
      releaseCFObject(v37);
    }
    else
    {
      LOWORD(v55[0]) = 228;
      id v42 = a1;
      unint64_t v43 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
      sub_1D7860544();
      uint64_t v44 = swift_allocError();
      DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD00000000000002FLL, 0x80000001D7AC2310, (__int16 *)v55, 0, v43, 0xD00000000000005DLL, 0x80000001D7AC21C0, v45, 0xD000000000000022, 0x80000001D7AC2280, 418);
      v55[0] = v44;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA843A48);
      sub_1D7A9C448();
      releaseCFObject(v42);
    }
  }
  else
  {
    LOWORD(v55[0]) = 227;
    unint64_t v46 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    uint64_t v47 = swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD00000000000002ALL, 0x80000001D7AC22E0, (__int16 *)v55, 0, v46, 0xD00000000000005DLL, 0x80000001D7AC21C0, v48, 0xD000000000000022, 0x80000001D7AC2280, 407);
    v55[0] = v47;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA843A48);
    sub_1D7A9C448();
  }
}

uint64_t sub_1D78F5B44()
{
  swift_defaultActor_destroy();
  return MEMORY[0x1F4188210](v0);
}

uint64_t sub_1D78F5B74()
{
  return v0;
}

uint64_t type metadata accessor for DeviceIdentityCommon.ScrtAttestationActor()
{
  return self;
}

uint64_t sub_1D78F5BA4()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D78F5BDC()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  void *v4 = v1;
  v4[2] = v2;
  v4[3] = v3;
  v4[1] = sub_1D786EC1C;
  return MEMORY[0x1F4188298](sub_1D78F44D0, 0, 0);
}

uint64_t sub_1D78F5C88(uint64_t a1, uint64_t a2)
{
  double v6 = v2[2];
  uint64_t v8 = *((void *)v2 + 3);
  uint64_t v7 = *((void *)v2 + 4);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v9;
  *uint64_t v9 = v3;
  v9[1] = sub_1D7874050;
  return sub_1D78EEF3C(v6, a1, a2, v8, v7);
}

unint64_t sub_1D78F5D50()
{
  unint64_t result = qword_1EA843970;
  if (!qword_1EA843970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA843970);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for KeyUsage(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D78F5E70);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for KeyUsage()
{
  return &type metadata for KeyUsage;
}

uint64_t dispatch thunk of DeviceIdentityCommonProtocol.fetchOrCreateCertificateWithDeviceIdentity(label:laContext:options:enableUAM:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  id v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a7 + 8)
                                                                                              + **(int **)(a7 + 8));
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v15;
  *uint64_t v15 = v7;
  v15[1] = sub_1D786EE50;
  return v17(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t dispatch thunk of DeviceIdentityCommonProtocol.deleteCertificateWithDeviceIdentity(label:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 16) + **(int **)(a4 + 16));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_1D7874050;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of DeviceIdentityCommonProtocol.callDeviceIdentity(baaOptions:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 24) + **(int **)(a3 + 24));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1D78F7BF0;
  return v9(a1, a2, a3);
}

uint64_t destroy for DeviceIdentityCommon(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t initializeWithCopy for DeviceIdentityCommon(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *assignWithCopy for DeviceIdentityCommon(uint64_t *a1, uint64_t *a2)
{
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    long long v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        unint64_t result = (uint64_t *)swift_release();
        *long long v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *unint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *long long v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for DeviceIdentityCommon(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for DeviceIdentityCommon(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DeviceIdentityCommon(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceIdentityCommon()
{
  return &type metadata for DeviceIdentityCommon;
}

uint64_t sub_1D78F65A4()
{
  swift_unknownObjectRelease();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1D78F65DC()
{
  double v2 = *(double *)(v0 + 32);
  long long v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *long long v3 = v1;
  v3[1] = sub_1D7874050;
  return sub_1D78EF934(v2);
}

uint64_t sub_1D78F669C(uint64_t a1)
{
  long long v4 = *(int **)(v1 + 32);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1D7874050;
  uint64_t v8 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  uint64_t v6 = (void *)swift_task_alloc();
  v5[2] = v6;
  *uint64_t v6 = v5;
  v6[1] = sub_1D7874050;
  return v8(a1);
}

void sub_1D78F67C0(uint64_t a1)
{
  sub_1D78F4A5C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1D78F67C8()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8439D0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, v6, v5);
}

void sub_1D78F6874(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v7 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA8439D0) - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v3 + v8;
  uint64_t v10 = (uint64_t *)(v3 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  unint64_t v12 = v10[1];
  sub_1D78F4CF4(a1, a2, a3, v9, v11, v12);
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t sub_1D78F6948()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D78F6980(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1D7874050;
  return sub_1D78F3C5C(a1, v4);
}

_OWORD *sub_1D78F6A20(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  *(void *)&long long v33 = a1;
  uint64_t v9 = MEMORY[0x1E4FBB550];
  uint64_t v34 = MEMORY[0x1E4FBB550];
  uint64_t v10 = (void *)*a5;
  unint64_t v12 = sub_1D7A18684(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    uint64_t v18 = (void *)*a5;
    if (v16)
    {
LABEL_8:
      id v19 = (_OWORD *)(v18[7] + 32 * v12);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
      return sub_1D7860E50(&v33, v19);
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1D7973624();
    goto LABEL_7;
  }
  sub_1D7970594(v15, a4 & 1);
  uint64_t v21 = sub_1D7A18684(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_14:
    __n128 result = (_OWORD *)sub_1D7A9D4F8();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  uint64_t v18 = (void *)*a5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  uint64_t v23 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v33, v9);
  MEMORY[0x1F4188790](v23, v23, v24, v25, v26, v27, v28, v29);
  uint64_t v31 = (uint64_t *)((char *)&v33 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v32 + 16))(v31);
  sub_1D78F72E8(v12, a2, a3, *v31, v18);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v33);
  return (_OWORD *)swift_bridgeObjectRetain();
}

_OWORD *sub_1D78F6C04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, void *a6)
{
  uint64_t v10 = MEMORY[0x1E4FBB1A0];
  uint64_t v35 = MEMORY[0x1E4FBB1A0];
  *(void *)&long long v34 = a1;
  *((void *)&v34 + 1) = a2;
  char v11 = (void *)*a6;
  unint64_t v13 = sub_1D7A18684(a3, a4);
  uint64_t v14 = v11[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v17 = v12;
  uint64_t v18 = v11[3];
  if (v18 >= v16 && (a5 & 1) != 0)
  {
LABEL_7:
    id v19 = (void *)*a6;
    if (v17)
    {
LABEL_8:
      id v20 = (_OWORD *)(v19[7] + 32 * v13);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
      return sub_1D7860E50(&v34, v20);
    }
    goto LABEL_11;
  }
  if (v18 >= v16 && (a5 & 1) == 0)
  {
    sub_1D7973624();
    goto LABEL_7;
  }
  sub_1D7970594(v16, a5 & 1);
  uint64_t v22 = sub_1D7A18684(a3, a4);
  if ((v17 & 1) != (v23 & 1))
  {
LABEL_14:
    __n128 result = (_OWORD *)sub_1D7A9D4F8();
    __break(1u);
    return result;
  }
  unint64_t v13 = v22;
  id v19 = (void *)*a6;
  if (v17) {
    goto LABEL_8;
  }
LABEL_11:
  uint64_t v24 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v34, v10);
  MEMORY[0x1F4188790](v24, v24, v25, v26, v27, v28, v29, v30);
  uint64_t v32 = (uint64_t *)((char *)&v34 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v33 + 16))(v32);
  sub_1D78F726C(v13, a3, a4, *v32, v32[1], v19, v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v34);
  return (_OWORD *)swift_bridgeObjectRetain();
}

_OWORD *sub_1D78F6DEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, void *a6)
{
  uint64_t v10 = MEMORY[0x1E4F277C0];
  uint64_t v35 = MEMORY[0x1E4F277C0];
  *(void *)&long long v34 = a1;
  *((void *)&v34 + 1) = a2;
  char v11 = (void *)*a6;
  unint64_t v13 = sub_1D7A18684(a3, a4);
  uint64_t v14 = v11[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v17 = v12;
  uint64_t v18 = v11[3];
  if (v18 >= v16 && (a5 & 1) != 0)
  {
LABEL_7:
    id v19 = (void *)*a6;
    if (v17)
    {
LABEL_8:
      id v20 = (_OWORD *)(v19[7] + 32 * v13);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
      return sub_1D7860E50(&v34, v20);
    }
    goto LABEL_11;
  }
  if (v18 >= v16 && (a5 & 1) == 0)
  {
    sub_1D7973624();
    goto LABEL_7;
  }
  sub_1D7970594(v16, a5 & 1);
  uint64_t v22 = sub_1D7A18684(a3, a4);
  if ((v17 & 1) != (v23 & 1))
  {
LABEL_14:
    __n128 result = (_OWORD *)sub_1D7A9D4F8();
    __break(1u);
    return result;
  }
  unint64_t v13 = v22;
  id v19 = (void *)*a6;
  if (v17) {
    goto LABEL_8;
  }
LABEL_11:
  uint64_t v24 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v34, v10);
  MEMORY[0x1F4188790](v24, v24, v25, v26, v27, v28, v29, v30);
  uint64_t v32 = (uint64_t *)((char *)&v34 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v33 + 16))(v32);
  sub_1D78F726C(v13, a3, a4, *v32, v32[1], v19, v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v34);
  return (_OWORD *)swift_bridgeObjectRetain();
}

_OWORD *sub_1D78F6FD4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDF7900);
  uint64_t v35 = v10;
  *(void *)&long long v34 = a1;
  char v11 = (void *)*a5;
  unint64_t v13 = sub_1D7A18684(a2, a3);
  uint64_t v14 = v11[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v17 = v12;
  uint64_t v18 = v11[3];
  if (v18 >= v16 && (a4 & 1) != 0)
  {
LABEL_7:
    id v19 = (void *)*a5;
    if (v17)
    {
LABEL_8:
      id v20 = (_OWORD *)(v19[7] + 32 * v13);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
      return sub_1D7860E50(&v34, v20);
    }
    goto LABEL_11;
  }
  if (v18 >= v16 && (a4 & 1) == 0)
  {
    sub_1D7973624();
    goto LABEL_7;
  }
  sub_1D7970594(v16, a4 & 1);
  uint64_t v22 = sub_1D7A18684(a2, a3);
  if ((v17 & 1) != (v23 & 1))
  {
LABEL_14:
    __n128 result = (_OWORD *)sub_1D7A9D4F8();
    __break(1u);
    return result;
  }
  unint64_t v13 = v22;
  id v19 = (void *)*a5;
  if (v17) {
    goto LABEL_8;
  }
LABEL_11:
  uint64_t v24 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v34, v10);
  MEMORY[0x1F4188790](v24, v24, v25, v26, v27, v28, v29, v30);
  uint64_t v32 = (uint64_t *)((char *)&v34 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v33 + 16))(v32);
  sub_1D78F71C4(v13, a2, a3, *v32, v19);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v34);
  return (_OWORD *)swift_bridgeObjectRetain();
}

_OWORD *sub_1D78F71C4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDF7900);
  *(void *)&long long v15 = a4;
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v10 = (void *)(a5[6] + 16 * a1);
  *uint64_t v10 = a2;
  v10[1] = a3;
  __n128 result = sub_1D7860E50(&v15, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v12 = a5[2];
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    a5[2] = v14;
  }
  return result;
}

_OWORD *sub_1D78F726C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7)
{
  uint64_t v14 = a7;
  *(void *)&long long v13 = a4;
  *((void *)&v13 + 1) = a5;
  a6[(a1 >> 6) + 8] |= 1 << a1;
  unint64_t v8 = (void *)(a6[6] + 16 * a1);
  *unint64_t v8 = a2;
  v8[1] = a3;
  __n128 result = sub_1D7860E50(&v13, (_OWORD *)(a6[7] + 32 * a1));
  uint64_t v10 = a6[2];
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    a6[2] = v12;
  }
  return result;
}

_OWORD *sub_1D78F72E8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  *(void *)&long long v11 = a4;
  uint64_t v12 = MEMORY[0x1E4FBB550];
  a5[(a1 >> 6) + 8] |= 1 << a1;
  unint64_t v6 = (void *)(a5[6] + 16 * a1);
  *unint64_t v6 = a2;
  v6[1] = a3;
  __n128 result = sub_1D7860E50(&v11, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

uint64_t sub_1D78F736C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  *(void *)(v5 + 16) = a1;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 24) = v10;
  *uint64_t v10 = v5;
  v10[1] = sub_1D78F7424;
  return sub_1D78EF414(a2, a3, a4, a5);
}

uint64_t sub_1D78F7424(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  uint64_t v7 = *v3;
  swift_task_dealloc();
  if (!v2)
  {
    uint64_t v8 = *(void **)(v6 + 16);
    *uint64_t v8 = a1;
    v8[1] = a2;
  }
  BOOL v9 = *(uint64_t (**)(void))(v7 + 8);
  return v9();
}

uint64_t sub_1D78F7540(uint64_t a1, uint64_t a2)
{
  double v6 = v2[2];
  uint64_t v8 = *((void *)v2 + 3);
  uint64_t v7 = *((void *)v2 + 4);
  BOOL v9 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v9;
  *BOOL v9 = v3;
  v9[1] = sub_1D7874050;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, double))((char *)&dword_1EA8439F8 + dword_1EA8439F8);
  return v10(a1, a2, v8, v7, v6);
}

uint64_t sub_1D78F7610(uint64_t a1, double a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  void *v4 = v2;
  v4[1] = sub_1D78F7BEC;
  return sub_1D78EF934(a2);
}

uint64_t sub_1D78F76A8(uint64_t a1)
{
  double v4 = *(double *)(v1 + 32);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1D7874050;
  uint64_t v6 = dword_1EA843A10;
  return ((uint64_t (*)(uint64_t, double))((char *)&dword_1EA843A10 + v6))(a1, v4);
}

uint64_t sub_1D78F7770(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  *(void *)(v4 + 32) = a1;
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 40) = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_1D78F7850;
  return v7(v4 + 16);
}

uint64_t sub_1D78F7850()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D78F7988;
  }
  else {
    uint64_t v2 = sub_1D78F7964;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D78F7964()
{
  *(_OWORD *)*(void *)(v0 + 32) = *(_OWORD *)(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D78F7988()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t objectdestroy_35Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1D78F79E4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1D7874050;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1EA843A20 + dword_1EA843A20);
  return v8(a1, v4, v5, v6);
}

void sub_1D78F7AB0(uint64_t a1)
{
  sub_1D78F512C(a1, *(uint64_t **)(v1 + 16));
}

uint64_t sub_1D78F7AB8()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA843A48);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

void sub_1D78F7B4C(void *a1, uint64_t a2, void *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA843A48);
  sub_1D78F54EC(a1, a2, a3);
}

uint64_t sub_1D78F7BF4()
{
  return sub_1D7A9D628();
}

uint64_t sub_1D78F7C54()
{
  return sub_1D7A9D5E8();
}

uint64_t sub_1D78F7C94()
{
  return sub_1D7A9D628();
}

BOOL sub_1D78F7CF0(uint64_t a1, uint64_t a2)
{
  return *(void *)a1 == *(void *)a2 && *(unsigned __int8 *)(a1 + 8) == *(unsigned __int8 *)(a2 + 8);
}

uint64_t sub_1D78F7D1C()
{
  return 0;
}

uint64_t sub_1D78F7E1C()
{
  return sub_1D78F7D1C();
}

unint64_t sub_1D78F7E2C()
{
  unint64_t result = qword_1EA843A70;
  if (!qword_1EA843A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA843A70);
  }
  return result;
}

uint64_t sub_1D78F7E80(unint64_t a1, char a2, char a3)
{
  char v5 = a2 << 6;
  if (a1 > 0x1E)
  {
    if (a3) {
      char v11 = 63;
    }
    else {
      char v11 = 31;
    }
    uint64_t v12 = *v3;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v12 = sub_1D789E0D8(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    char v13 = v5 | v11;
    unint64_t v15 = *((void *)v12 + 2);
    unint64_t v14 = *((void *)v12 + 3);
    if (v15 >= v14 >> 1) {
      uint64_t v12 = sub_1D789E0D8((char *)(v14 > 1), v15 + 1, 1, v12);
    }
    *((void *)v12 + 2) = v15 + 1;
    v12[v15 + 32] = v13;
    *uint64_t v3 = v12;
    return sub_1D7A468D4(a1);
  }
  else
  {
    if (a3) {
      char v6 = v5 | a1 | 0x20;
    }
    else {
      char v6 = v5 | a1;
    }
    uint64_t v7 = (uint64_t)*v3;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1D789E0D8(0, *(void *)(v7 + 16) + 1, 1, (char *)v7);
      uint64_t v7 = result;
    }
    unint64_t v10 = *(void *)(v7 + 16);
    unint64_t v9 = *(void *)(v7 + 24);
    if (v10 >= v9 >> 1)
    {
      uint64_t result = (uint64_t)sub_1D789E0D8((char *)(v9 > 1), v10 + 1, 1, (char *)v7);
      uint64_t v7 = result;
    }
    *(void *)(v7 + 16) = v10 + 1;
    *(unsigned char *)(v7 + v10 + 32) = v6;
    *uint64_t v3 = (char *)v7;
  }
  return result;
}

uint64_t sub_1D78F7FE8(unsigned __int8 a1)
{
  return a1 >> 6;
}

uint64_t sub_1D78F7FF0(char a1)
{
  uint64_t result = a1 & 0x1F;
  if (result == 31) {
    __break(1u);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ASN1Identifier.TagClass(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D78F80D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASN1Identifier.TagClass()
{
  return &type metadata for ASN1Identifier.TagClass;
}

uint64_t getEnumTagSinglePayload for ASN1Identifier(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  BOOL v4 = v3 >= 4;
  int v5 = v3 - 4;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ASN1Identifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = a2 + 3;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASN1Identifier()
{
  return &type metadata for ASN1Identifier;
}

unint64_t sub_1D78F81AC()
{
  unint64_t result = qword_1EA843A78;
  if (!qword_1EA843A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA843A78);
  }
  return result;
}

uint64_t static IdentityProofingAssetData.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t IdentityProofingAssetData.twoX.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC13CoreIDVShared25IdentityProofingAssetData_twoX);
  sub_1D786E9D8(v1, *(void *)(v0 + OBJC_IVAR____TtC13CoreIDVShared25IdentityProofingAssetData_twoX + 8));
  return v1;
}

uint64_t IdentityProofingAssetData.threeX.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC13CoreIDVShared25IdentityProofingAssetData_threeX);
  sub_1D786E9D8(v1, *(void *)(v0 + OBJC_IVAR____TtC13CoreIDVShared25IdentityProofingAssetData_threeX + 8));
  return v1;
}

uint64_t IdentityProofingAssetData.assetID.getter()
{
  return sub_1D78E28A4(&OBJC_IVAR____TtC13CoreIDVShared25IdentityProofingAssetData_assetID);
}

id IdentityProofingAssetData.__allocating_init(twoX:threeX:assetId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v13 = (char *)objc_allocWithZone(v6);
  unint64_t v14 = &v13[OBJC_IVAR____TtC13CoreIDVShared25IdentityProofingAssetData_twoX];
  *(void *)unint64_t v14 = a1;
  *((void *)v14 + 1) = a2;
  unint64_t v15 = &v13[OBJC_IVAR____TtC13CoreIDVShared25IdentityProofingAssetData_threeX];
  *(void *)unint64_t v15 = a3;
  *((void *)v15 + 1) = a4;
  uint64_t v16 = &v13[OBJC_IVAR____TtC13CoreIDVShared25IdentityProofingAssetData_assetID];
  *(void *)uint64_t v16 = a5;
  *((void *)v16 + 1) = a6;
  v18.receiver = v13;
  v18.super_class = v6;
  return objc_msgSendSuper2(&v18, sel_init);
}

id IdentityProofingAssetData.init(twoX:threeX:assetId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  ObjectType = (objc_class *)swift_getObjectType();
  unint64_t v14 = &v6[OBJC_IVAR____TtC13CoreIDVShared25IdentityProofingAssetData_twoX];
  *(void *)unint64_t v14 = a1;
  *((void *)v14 + 1) = a2;
  unint64_t v15 = &v6[OBJC_IVAR____TtC13CoreIDVShared25IdentityProofingAssetData_threeX];
  *(void *)unint64_t v15 = a3;
  *((void *)v15 + 1) = a4;
  uint64_t v16 = &v6[OBJC_IVAR____TtC13CoreIDVShared25IdentityProofingAssetData_assetID];
  *(void *)uint64_t v16 = a5;
  *((void *)v16 + 1) = a6;
  v18.receiver = v6;
  v18.super_class = ObjectType;
  return objc_msgSendSuper2(&v18, sel_init);
}

Swift::Void __swiftcall IdentityProofingAssetData.encode(with:)(NSCoder with)
{
  if (*(void *)(v1 + OBJC_IVAR____TtC13CoreIDVShared25IdentityProofingAssetData_twoX + 8) >> 60 == 15) {
    uint64_t v3 = 0;
  }
  else {
    uint64_t v3 = sub_1D7A9AFF8();
  }
  BOOL v4 = (void *)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeObject:v3 forKey:v4];
  swift_unknownObjectRelease();

  if (*(void *)(v1 + OBJC_IVAR____TtC13CoreIDVShared25IdentityProofingAssetData_threeX + 8) >> 60 == 15) {
    uint64_t v5 = 0;
  }
  else {
    uint64_t v5 = sub_1D7A9AFF8();
  }
  unsigned int v6 = (void *)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeObject:v5 forKey:v6];
  swift_unknownObjectRelease();

  if (*(void *)(v1 + OBJC_IVAR____TtC13CoreIDVShared25IdentityProofingAssetData_assetID + 8)) {
    uint64_t v7 = sub_1D7A9BF98();
  }
  else {
    uint64_t v7 = 0;
  }
  id v8 = (id)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeObject:v7 forKey:v8];
  swift_unknownObjectRelease();
}

id IdentityProofingAssetData.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  id v4 = sub_1D78F95BC();

  return v4;
}

id IdentityProofingAssetData.init(coder:)(void *a1)
{
  id v2 = sub_1D78F95BC();

  return v2;
}

void IdentityProofingAssetData.init()()
{
}

uint64_t static IdentityProofingUIConfig.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t IdentityProofingUIConfig.view.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC13CoreIDVShared24IdentityProofingUIConfig_view);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t IdentityProofingUIConfig.title.getter()
{
  return sub_1D78E28A4(&OBJC_IVAR____TtC13CoreIDVShared24IdentityProofingUIConfig_title);
}

uint64_t IdentityProofingUIConfig.subTitle.getter()
{
  return sub_1D78E28A4(&OBJC_IVAR____TtC13CoreIDVShared24IdentityProofingUIConfig_subTitle);
}

uint64_t IdentityProofingUIConfig.url.getter()
{
  return sub_1D78E28A4(&OBJC_IVAR____TtC13CoreIDVShared24IdentityProofingUIConfig_url);
}

uint64_t IdentityProofingUIConfig.primaryButtonTitle.getter()
{
  return sub_1D78E28A4(&OBJC_IVAR____TtC13CoreIDVShared24IdentityProofingUIConfig_primaryButtonTitle);
}

uint64_t IdentityProofingUIConfig.secondaryButtonTitle.getter()
{
  return sub_1D78E28A4(&OBJC_IVAR____TtC13CoreIDVShared24IdentityProofingUIConfig_secondaryButtonTitle);
}

uint64_t IdentityProofingUIConfig.tertiaryButtonTitle.getter()
{
  return sub_1D78E28A4(&OBJC_IVAR____TtC13CoreIDVShared24IdentityProofingUIConfig_tertiaryButtonTitle);
}

uint64_t IdentityProofingUIConfig.messages.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t IdentityProofingUIConfig.fields.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t IdentityProofingUIConfig.caption.getter()
{
  return sub_1D78E28A4(&OBJC_IVAR____TtC13CoreIDVShared24IdentityProofingUIConfig_caption);
}

uint64_t IdentityProofingUIConfig.minLength.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC13CoreIDVShared24IdentityProofingUIConfig_minLength);
}

uint64_t IdentityProofingUIConfig.maxLength.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC13CoreIDVShared24IdentityProofingUIConfig_maxLength);
}

uint64_t IdentityProofingUIConfig.placeholder.getter()
{
  return sub_1D78E28A4(&OBJC_IVAR____TtC13CoreIDVShared24IdentityProofingUIConfig_placeholder);
}

uint64_t IdentityProofingUIConfig.displayName.getter()
{
  return sub_1D78E28A4(&OBJC_IVAR____TtC13CoreIDVShared24IdentityProofingUIConfig_displayName);
}

uint64_t IdentityProofingUIConfig.imageAssetsData.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t IdentityProofingUIConfig.options.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t IdentityProofingUIConfig.isUIEnabled.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC13CoreIDVShared24IdentityProofingUIConfig_isUIEnabled);
}

id IdentityProofingUIConfig.__allocating_init(view:title:subTitle:url:primaryButtonTitle:secondaryButtonTitle:tertiaryButtonTitle:messages:fields:caption:minLength:maxLength:placeholder:displayName:imageAssetsData:options:isUIEnabled:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, long long a10, long long a11, long long a12, long long a13, uint64_t a14, char a15, uint64_t a16, char a17, long long a18, long long a19, uint64_t a20,uint64_t a21,char a22)
{
  id v25 = objc_allocWithZone(v22);
  return IdentityProofingUIConfig.init(view:title:subTitle:url:primaryButtonTitle:secondaryButtonTitle:tertiaryButtonTitle:messages:fields:caption:minLength:maxLength:placeholder:displayName:imageAssetsData:options:isUIEnabled:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, *((uint64_t *)&a9 + 1), a10, *((uint64_t *)&a10 + 1), a11, *((uint64_t *)&a11 + 1), a12, *((uint64_t *)&a12 + 1), a13, *((uint64_t *)&a13 + 1), a14,
           a15 & 1,
           a16,
           a17 & 1,
           a18,
           *((uint64_t *)&a18 + 1),
           a19,
           *((uint64_t *)&a19 + 1),
           a20,
           a21,
           a22);
}

id IdentityProofingUIConfig.init(view:title:subTitle:url:primaryButtonTitle:secondaryButtonTitle:tertiaryButtonTitle:messages:fields:caption:minLength:maxLength:placeholder:displayName:imageAssetsData:options:isUIEnabled:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v35 = &v29[OBJC_IVAR____TtC13CoreIDVShared24IdentityProofingUIConfig_view];
  void *v35 = a1;
  v35[1] = a2;
  uint64_t v36 = &v29[OBJC_IVAR____TtC13CoreIDVShared24IdentityProofingUIConfig_title];
  *uint64_t v36 = a3;
  v36[1] = a4;
  id v37 = &v29[OBJC_IVAR____TtC13CoreIDVShared24IdentityProofingUIConfig_subTitle];
  *id v37 = a5;
  v37[1] = a6;
  id v38 = &v29[OBJC_IVAR____TtC13CoreIDVShared24IdentityProofingUIConfig_url];
  *id v38 = a7;
  v38[1] = a8;
  unint64_t v39 = &v29[OBJC_IVAR____TtC13CoreIDVShared24IdentityProofingUIConfig_primaryButtonTitle];
  *unint64_t v39 = a9;
  v39[1] = a10;
  uint64_t v40 = &v29[OBJC_IVAR____TtC13CoreIDVShared24IdentityProofingUIConfig_secondaryButtonTitle];
  *uint64_t v40 = a11;
  v40[1] = a12;
  uint64_t v41 = &v29[OBJC_IVAR____TtC13CoreIDVShared24IdentityProofingUIConfig_tertiaryButtonTitle];
  *uint64_t v41 = a13;
  v41[1] = a14;
  *(void *)&v29[OBJC_IVAR____TtC13CoreIDVShared24IdentityProofingUIConfig_messages] = a15;
  *(void *)&v29[OBJC_IVAR____TtC13CoreIDVShared24IdentityProofingUIConfig_fields] = a16;
  id v42 = &v29[OBJC_IVAR____TtC13CoreIDVShared24IdentityProofingUIConfig_caption];
  *id v42 = a17;
  v42[1] = a18;
  unint64_t v43 = &v29[OBJC_IVAR____TtC13CoreIDVShared24IdentityProofingUIConfig_minLength];
  *(void *)unint64_t v43 = a19;
  v43[8] = a20 & 1;
  uint64_t v44 = &v29[OBJC_IVAR____TtC13CoreIDVShared24IdentityProofingUIConfig_maxLength];
  *(void *)uint64_t v44 = a21;
  v44[8] = a22 & 1;
  uint64_t v45 = &v29[OBJC_IVAR____TtC13CoreIDVShared24IdentityProofingUIConfig_placeholder];
  void *v45 = a23;
  v45[1] = a24;
  unint64_t v46 = &v29[OBJC_IVAR____TtC13CoreIDVShared24IdentityProofingUIConfig_displayName];
  *unint64_t v46 = a25;
  v46[1] = a26;
  *(void *)&v29[OBJC_IVAR____TtC13CoreIDVShared24IdentityProofingUIConfig_imageAssetsData] = a27;
  *(void *)&v29[OBJC_IVAR____TtC13CoreIDVShared24IdentityProofingUIConfig_options] = a28;
  v29[OBJC_IVAR____TtC13CoreIDVShared24IdentityProofingUIConfig_isUIEnabled] = a29;
  v52.receiver = v29;
  v52.super_class = ObjectType;
  return objc_msgSendSuper2(&v52, sel_init);
}

Swift::Void __swiftcall IdentityProofingUIConfig.encode(with:)(NSCoder with)
{
  id v3 = (void *)sub_1D7A9BF98();
  id v4 = (void *)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeObject:v3 forKey:v4];

  if (*(void *)(v1 + OBJC_IVAR____TtC13CoreIDVShared24IdentityProofingUIConfig_title + 8)) {
    uint64_t v5 = sub_1D7A9BF98();
  }
  else {
    uint64_t v5 = 0;
  }
  unsigned int v6 = (void *)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeObject:v5 forKey:v6];
  swift_unknownObjectRelease();

  if (*(void *)(v1 + OBJC_IVAR____TtC13CoreIDVShared24IdentityProofingUIConfig_subTitle + 8)) {
    uint64_t v7 = sub_1D7A9BF98();
  }
  else {
    uint64_t v7 = 0;
  }
  id v8 = (void *)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeObject:v7 forKey:v8];
  swift_unknownObjectRelease();

  if (*(void *)(v1 + OBJC_IVAR____TtC13CoreIDVShared24IdentityProofingUIConfig_url + 8)) {
    uint64_t v9 = sub_1D7A9BF98();
  }
  else {
    uint64_t v9 = 0;
  }
  unint64_t v10 = (void *)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeObject:v9 forKey:v10];
  swift_unknownObjectRelease();

  if (*(void *)(v1 + OBJC_IVAR____TtC13CoreIDVShared24IdentityProofingUIConfig_primaryButtonTitle + 8)) {
    uint64_t v11 = sub_1D7A9BF98();
  }
  else {
    uint64_t v11 = 0;
  }
  uint64_t v12 = (void *)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeObject:v11 forKey:v12];
  swift_unknownObjectRelease();

  if (*(void *)(v1 + OBJC_IVAR____TtC13CoreIDVShared24IdentityProofingUIConfig_secondaryButtonTitle + 8)) {
    uint64_t v13 = sub_1D7A9BF98();
  }
  else {
    uint64_t v13 = 0;
  }
  unint64_t v14 = (void *)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeObject:v13 forKey:v14];
  swift_unknownObjectRelease();

  if (*(void *)(v1 + OBJC_IVAR____TtC13CoreIDVShared24IdentityProofingUIConfig_tertiaryButtonTitle + 8)) {
    uint64_t v15 = sub_1D7A9BF98();
  }
  else {
    uint64_t v15 = 0;
  }
  uint64_t v16 = (void *)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeObject:v15 forKey:v16];
  swift_unknownObjectRelease();

  if (*(void *)(v1 + OBJC_IVAR____TtC13CoreIDVShared24IdentityProofingUIConfig_messages)) {
    uint64_t v17 = sub_1D7A9C2F8();
  }
  else {
    uint64_t v17 = 0;
  }
  objc_super v18 = (void *)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeObject:v17 forKey:v18];
  swift_unknownObjectRelease();

  if (*(void *)(v1 + OBJC_IVAR____TtC13CoreIDVShared24IdentityProofingUIConfig_fields)) {
    uint64_t v19 = sub_1D7A9C2F8();
  }
  else {
    uint64_t v19 = 0;
  }
  id v20 = (void *)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeObject:v19 forKey:v20];
  swift_unknownObjectRelease();

  if (*(void *)(v1 + OBJC_IVAR____TtC13CoreIDVShared24IdentityProofingUIConfig_caption + 8)) {
    uint64_t v21 = sub_1D7A9BF98();
  }
  else {
    uint64_t v21 = 0;
  }
  uint64_t v22 = (void *)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeObject:v21 forKey:v22];
  swift_unknownObjectRelease();

  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC13CoreIDVShared24IdentityProofingUIConfig_minLength + 8)) {
    uint64_t v23 = 0;
  }
  else {
    uint64_t v23 = sub_1D7A9C648();
  }
  uint64_t v24 = (void *)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeObject:v23 forKey:v24];
  swift_unknownObjectRelease();

  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC13CoreIDVShared24IdentityProofingUIConfig_maxLength + 8)) {
    uint64_t v25 = 0;
  }
  else {
    uint64_t v25 = sub_1D7A9C648();
  }
  uint64_t v26 = (void *)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeObject:v25 forKey:v26];
  swift_unknownObjectRelease();

  if (*(void *)(v1 + OBJC_IVAR____TtC13CoreIDVShared24IdentityProofingUIConfig_placeholder + 8)) {
    uint64_t v27 = sub_1D7A9BF98();
  }
  else {
    uint64_t v27 = 0;
  }
  uint64_t v28 = (void *)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeObject:v27 forKey:v28];
  swift_unknownObjectRelease();

  if (*(void *)(v1 + OBJC_IVAR____TtC13CoreIDVShared24IdentityProofingUIConfig_displayName + 8)) {
    uint64_t v29 = sub_1D7A9BF98();
  }
  else {
    uint64_t v29 = 0;
  }
  uint64_t v30 = (void *)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeObject:v29 forKey:v30];
  swift_unknownObjectRelease();

  uint64_t v31 = *(void *)(v1 + OBJC_IVAR____TtC13CoreIDVShared24IdentityProofingUIConfig_imageAssetsData);
  if (v31)
  {
    type metadata accessor for IdentityProofingAssetData();
    uint64_t v31 = sub_1D7A9C2F8();
  }
  uint64_t v32 = (void *)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeObject:v31 forKey:v32];
  swift_unknownObjectRelease();

  uint64_t v33 = *(void *)(v1 + OBJC_IVAR____TtC13CoreIDVShared24IdentityProofingUIConfig_options);
  if (v33)
  {
    type metadata accessor for IdentityProofingUnorderedUIElementOption();
    uint64_t v33 = sub_1D7A9C2F8();
  }
  long long v34 = (void *)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeObject:v33 forKey:v34];
  swift_unknownObjectRelease();

  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC13CoreIDVShared24IdentityProofingUIConfig_isUIEnabled) == 2) {
    uint64_t v35 = 0;
  }
  else {
    uint64_t v35 = sub_1D7A9C418();
  }
  id v36 = (id)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeObject:v35 forKey:v36];
  swift_unknownObjectRelease();
}

id IdentityProofingUIConfig.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  id v4 = sub_1D78F9770(a1);

  return v4;
}

id IdentityProofingUIConfig.init(coder:)(void *a1)
{
  id v2 = sub_1D78F9770(a1);

  return v2;
}

id IdentityProofingUIConfig.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void IdentityProofingUIConfig.init()()
{
}

id sub_1D78F95BC()
{
  ObjectType = (objc_class *)swift_getObjectType();
  sub_1D78C4038(0, (unint64_t *)&qword_1EA847920);
  id v2 = v0;
  uint64_t v3 = sub_1D7A9C908();
  if (v3)
  {
    id v4 = (void *)v3;
    uint64_t v5 = sub_1D7A9B028();
    unint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v7 = 0xF000000000000000;
  }
  id v8 = (uint64_t *)&v2[OBJC_IVAR____TtC13CoreIDVShared25IdentityProofingAssetData_twoX];
  *id v8 = v5;
  v8[1] = v7;
  uint64_t v9 = sub_1D7A9C908();
  if (v9)
  {
    unint64_t v10 = (void *)v9;
    uint64_t v11 = sub_1D7A9B028();
    unint64_t v13 = v12;
  }
  else
  {
    uint64_t v11 = 0;
    unint64_t v13 = 0xF000000000000000;
  }
  unint64_t v14 = (uint64_t *)&v2[OBJC_IVAR____TtC13CoreIDVShared25IdentityProofingAssetData_threeX];
  *unint64_t v14 = v11;
  v14[1] = v13;
  sub_1D78C4038(0, (unint64_t *)&qword_1EBDF8260);
  uint64_t v15 = sub_1D7A9C908();
  if (v15)
  {
    uint64_t v16 = (void *)v15;
    uint64_t v17 = sub_1D7A9BFC8();
    uint64_t v19 = v18;
  }
  else
  {
    uint64_t v17 = 0;
    uint64_t v19 = 0;
  }
  id v20 = (uint64_t *)&v2[OBJC_IVAR____TtC13CoreIDVShared25IdentityProofingAssetData_assetID];
  *id v20 = v17;
  v20[1] = v19;

  v22.receiver = v2;
  v22.super_class = ObjectType;
  return objc_msgSendSuper2(&v22, sel_init);
}

uint64_t type metadata accessor for IdentityProofingAssetData()
{
  return self;
}

id sub_1D78F9770(void *a1)
{
  id v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = sub_1D78C4038(0, (unint64_t *)&qword_1EBDF8260);
  unint64_t v6 = v2;
  id result = (id)sub_1D7A9C908();
  if (result)
  {
    id v8 = result;
    uint64_t v9 = sub_1D7A9BFC8();
    uint64_t v11 = v10;

    unint64_t v12 = (uint64_t *)&v6[OBJC_IVAR____TtC13CoreIDVShared24IdentityProofingUIConfig_view];
    *unint64_t v12 = v9;
    v12[1] = v11;
    uint64_t v13 = sub_1D7A9C908();
    if (v13)
    {
      unint64_t v14 = (void *)v13;
      uint64_t v15 = sub_1D7A9BFC8();
      uint64_t v17 = v16;
    }
    else
    {
      uint64_t v15 = 0;
      uint64_t v17 = 0;
    }
    uint64_t v18 = (uint64_t *)&v6[OBJC_IVAR____TtC13CoreIDVShared24IdentityProofingUIConfig_title];
    uint64_t *v18 = v15;
    v18[1] = v17;
    uint64_t v19 = sub_1D7A9C908();
    if (v19)
    {
      id v20 = (void *)v19;
      uint64_t v21 = sub_1D7A9BFC8();
      uint64_t v23 = v22;
    }
    else
    {
      uint64_t v21 = 0;
      uint64_t v23 = 0;
    }
    uint64_t v24 = (uint64_t *)&v6[OBJC_IVAR____TtC13CoreIDVShared24IdentityProofingUIConfig_subTitle];
    *uint64_t v24 = v21;
    v24[1] = v23;
    uint64_t v25 = sub_1D7A9C908();
    if (v25)
    {
      uint64_t v26 = (void *)v25;
      uint64_t v27 = sub_1D7A9BFC8();
      uint64_t v29 = v28;
    }
    else
    {
      uint64_t v27 = 0;
      uint64_t v29 = 0;
    }
    uint64_t v30 = (uint64_t *)&v6[OBJC_IVAR____TtC13CoreIDVShared24IdentityProofingUIConfig_url];
    *uint64_t v30 = v27;
    v30[1] = v29;
    uint64_t v31 = sub_1D7A9C908();
    if (v31)
    {
      uint64_t v32 = (void *)v31;
      uint64_t v33 = sub_1D7A9BFC8();
      uint64_t v35 = v34;
    }
    else
    {
      uint64_t v33 = 0;
      uint64_t v35 = 0;
    }
    id v36 = (uint64_t *)&v6[OBJC_IVAR____TtC13CoreIDVShared24IdentityProofingUIConfig_primaryButtonTitle];
    *id v36 = v33;
    v36[1] = v35;
    uint64_t v37 = sub_1D7A9C908();
    if (v37)
    {
      id v38 = (void *)v37;
      uint64_t v39 = sub_1D7A9BFC8();
      uint64_t v41 = v40;
    }
    else
    {
      uint64_t v39 = 0;
      uint64_t v41 = 0;
    }
    id v42 = (uint64_t *)&v6[OBJC_IVAR____TtC13CoreIDVShared24IdentityProofingUIConfig_secondaryButtonTitle];
    *id v42 = v39;
    v42[1] = v41;
    uint64_t v43 = sub_1D7A9C908();
    if (v43)
    {
      uint64_t v44 = (void *)v43;
      uint64_t v45 = sub_1D7A9BFC8();
      uint64_t v47 = v46;
    }
    else
    {
      uint64_t v45 = 0;
      uint64_t v47 = 0;
    }
    uint64_t v48 = (uint64_t *)&v6[OBJC_IVAR____TtC13CoreIDVShared24IdentityProofingUIConfig_tertiaryButtonTitle];
    *uint64_t v48 = v45;
    v48[1] = v47;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA843600);
    uint64_t v49 = swift_allocObject();
    *(_OWORD *)(v49 + 16) = xmmword_1D7AA0A40;
    uint64_t v50 = sub_1D78C4038(0, (unint64_t *)&qword_1EBDF90E0);
    *(void *)(v49 + 32) = v50;
    *(void *)(v49 + 40) = v5;
    sub_1D7A9C918();
    swift_bridgeObjectRelease();
    if (v91)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDF7900);
      int v51 = swift_dynamicCast();
      uint64_t v52 = v88;
      if (!v51) {
        uint64_t v52 = 0;
      }
    }
    else
    {
      sub_1D7867598((uint64_t)v90);
      uint64_t v52 = 0;
    }
    *(void *)&v6[OBJC_IVAR____TtC13CoreIDVShared24IdentityProofingUIConfig_messages] = v52;
    uint64_t v53 = swift_allocObject();
    *(_OWORD *)(v53 + 16) = xmmword_1D7AA0A40;
    *(void *)(v53 + 32) = v50;
    *(void *)(v53 + 40) = v5;
    sub_1D7A9C918();
    swift_bridgeObjectRelease();
    if (v91)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDF7900);
      int v54 = swift_dynamicCast();
      uint64_t v55 = v88;
      if (!v54) {
        uint64_t v55 = 0;
      }
    }
    else
    {
      sub_1D7867598((uint64_t)v90);
      uint64_t v55 = 0;
    }
    *(void *)&v6[OBJC_IVAR____TtC13CoreIDVShared24IdentityProofingUIConfig_fields] = v55;
    uint64_t v56 = sub_1D7A9C908();
    if (v56)
    {
      char v57 = (void *)v56;
      uint64_t v58 = sub_1D7A9BFC8();
      uint64_t v60 = v59;
    }
    else
    {
      uint64_t v58 = 0;
      uint64_t v60 = 0;
    }
    unint64_t v61 = (uint64_t *)&v6[OBJC_IVAR____TtC13CoreIDVShared24IdentityProofingUIConfig_caption];
    *unint64_t v61 = v58;
    v61[1] = v60;
    unint64_t v62 = (void *)sub_1D7A9BF98();
    id v63 = objc_msgSend(a1, sel_decodeIntegerForKey_, v62);

    unint64_t v64 = &v6[OBJC_IVAR____TtC13CoreIDVShared24IdentityProofingUIConfig_minLength];
    *(void *)unint64_t v64 = v63;
    v64[8] = 0;
    unint64_t v65 = (void *)sub_1D7A9BF98();
    id v66 = objc_msgSend(a1, sel_decodeIntegerForKey_, v65);

    uint64_t v67 = &v6[OBJC_IVAR____TtC13CoreIDVShared24IdentityProofingUIConfig_maxLength];
    *(void *)uint64_t v67 = v66;
    v67[8] = 0;
    uint64_t v68 = sub_1D7A9C908();
    if (v68)
    {
      os_log_type_t v69 = (void *)v68;
      uint64_t v70 = sub_1D7A9BFC8();
      uint64_t v72 = v71;
    }
    else
    {
      uint64_t v70 = 0;
      uint64_t v72 = 0;
    }
    char v73 = (uint64_t *)&v6[OBJC_IVAR____TtC13CoreIDVShared24IdentityProofingUIConfig_placeholder];
    *char v73 = v70;
    v73[1] = v72;
    uint64_t v74 = sub_1D7A9C908();
    if (v74)
    {
      uint64_t v75 = (void *)v74;
      uint64_t v76 = sub_1D7A9BFC8();
      uint64_t v78 = v77;
    }
    else
    {
      uint64_t v76 = 0;
      uint64_t v78 = 0;
    }
    SecAccessControlRef v79 = (uint64_t *)&v6[OBJC_IVAR____TtC13CoreIDVShared24IdentityProofingUIConfig_displayName];
    *SecAccessControlRef v79 = v76;
    v79[1] = v78;
    uint64_t v80 = swift_allocObject();
    *(_OWORD *)(v80 + 16) = xmmword_1D7AA0A40;
    *(void *)(v80 + 32) = v50;
    *(void *)(v80 + 40) = type metadata accessor for IdentityProofingAssetData();
    sub_1D7A9C918();
    swift_bridgeObjectRelease();
    if (v91)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA843B28);
      int v81 = swift_dynamicCast();
      uint64_t v82 = v88;
      if (!v81) {
        uint64_t v82 = 0;
      }
    }
    else
    {
      sub_1D7867598((uint64_t)v90);
      uint64_t v82 = 0;
    }
    *(void *)&v6[OBJC_IVAR____TtC13CoreIDVShared24IdentityProofingUIConfig_imageAssetsData] = v82;
    uint64_t v83 = swift_allocObject();
    *(_OWORD *)(v83 + 16) = xmmword_1D7AA0A40;
    *(void *)(v83 + 32) = v50;
    *(void *)(v83 + 40) = type metadata accessor for IdentityProofingUnorderedUIElementOption();
    sub_1D7A9C918();
    swift_bridgeObjectRelease();
    if (v91)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDF8C30);
      int v84 = swift_dynamicCast();
      uint64_t v85 = v88;
      if (!v84) {
        uint64_t v85 = 0;
      }
    }
    else
    {
      sub_1D7867598((uint64_t)v90);
      uint64_t v85 = 0;
    }
    *(void *)&v6[OBJC_IVAR____TtC13CoreIDVShared24IdentityProofingUIConfig_options] = v85;
    uint64_t v86 = (void *)sub_1D7A9BF98();
    unsigned __int8 v87 = objc_msgSend(a1, sel_decodeBoolForKey_, v86);

    v6[OBJC_IVAR____TtC13CoreIDVShared24IdentityProofingUIConfig_isUIEnabled] = v87;
    v89.receiver = v6;
    v89.super_class = ObjectType;
    return objc_msgSendSuper2(&v89, sel_init);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t method lookup function for IdentityProofingAssetData(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for IdentityProofingAssetData);
}

uint64_t dispatch thunk of IdentityProofingAssetData.__allocating_init(twoX:threeX:assetId:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of IdentityProofingAssetData.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t type metadata accessor for IdentityProofingUIConfig()
{
  return self;
}

uint64_t method lookup function for IdentityProofingUIConfig(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for IdentityProofingUIConfig);
}

uint64_t dispatch thunk of IdentityProofingUIConfig.__allocating_init(view:title:subTitle:url:primaryButtonTitle:secondaryButtonTitle:tertiaryButtonTitle:messages:fields:caption:minLength:maxLength:placeholder:displayName:imageAssetsData:options:isUIEnabled:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 216);
  return v15(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
}

uint64_t dispatch thunk of IdentityProofingUIConfig.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 224))();
}

uint64_t static PDF417ParsingConfig.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t PDF417ParsingConfig.aamvaHeader.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC13CoreIDVShared19PDF417ParsingConfig_aamvaHeader);
  swift_bridgeObjectRetain();
  return v1;
}

id PDF417ParsingConfig.__allocating_init(aamvaHeader:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (char *)objc_allocWithZone(v2);
  unint64_t v6 = &v5[OBJC_IVAR____TtC13CoreIDVShared19PDF417ParsingConfig_aamvaHeader];
  *(void *)unint64_t v6 = a1;
  *((void *)v6 + 1) = a2;
  v8.receiver = v5;
  v8.super_class = v2;
  return objc_msgSendSuper2(&v8, sel_init);
}

id PDF417ParsingConfig.init(aamvaHeader:)(uint64_t a1, uint64_t a2)
{
  ObjectType = (objc_class *)swift_getObjectType();
  unint64_t v6 = &v2[OBJC_IVAR____TtC13CoreIDVShared19PDF417ParsingConfig_aamvaHeader];
  *(void *)unint64_t v6 = a1;
  *((void *)v6 + 1) = a2;
  v8.receiver = v2;
  v8.super_class = ObjectType;
  return objc_msgSendSuper2(&v8, sel_init);
}

uint64_t sub_1D78FA140()
{
  return sub_1D7A9D628();
}

uint64_t sub_1D78FA19C()
{
  return sub_1D7A9C0B8();
}

uint64_t sub_1D78FA1BC()
{
  return sub_1D7A9D628();
}

uint64_t sub_1D78FA214@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1D7A9D058();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1D78FA268(void *a1@<X8>)
{
  *a1 = 0x61654861766D6161;
  a1[1] = 0xEB00000000726564;
}

uint64_t sub_1D78FA28C()
{
  return 0x61654861766D6161;
}

uint64_t sub_1D78FA2AC@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1D7A9D058();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1D78FA304(uint64_t a1)
{
  unint64_t v2 = sub_1D78FA960();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D78FA340(uint64_t a1)
{
  unint64_t v2 = sub_1D78FA960();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t PDF417ParsingConfig.__allocating_init(coder:)(void *a1)
{
  unint64_t v2 = v1;
  id v4 = objc_allocWithZone(v2);
  sub_1D78C4038(0, (unint64_t *)&qword_1EBDF8260);
  uint64_t v5 = (char *)v4;
  uint64_t result = sub_1D7A9C908();
  if (result)
  {
    unint64_t v7 = (void *)result;
    uint64_t v8 = sub_1D7A9BFC8();
    uint64_t v10 = v9;

    uint64_t v11 = (uint64_t *)&v5[OBJC_IVAR____TtC13CoreIDVShared19PDF417ParsingConfig_aamvaHeader];
    *uint64_t v11 = v8;
    v11[1] = v10;

    v13.receiver = v5;
    v13.super_class = v2;
    id v12 = objc_msgSendSuper2(&v13, sel_init);

    return (uint64_t)v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t PDF417ParsingConfig.init(coder:)(void *a1)
{
  unint64_t v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  sub_1D78C4038(0, (unint64_t *)&qword_1EBDF8260);
  uint64_t v5 = v2;
  uint64_t result = sub_1D7A9C908();
  if (result)
  {
    unint64_t v7 = (void *)result;
    uint64_t v8 = sub_1D7A9BFC8();
    uint64_t v10 = v9;

    uint64_t v11 = (uint64_t *)&v5[OBJC_IVAR____TtC13CoreIDVShared19PDF417ParsingConfig_aamvaHeader];
    *uint64_t v11 = v8;
    v11[1] = v10;

    v13.receiver = v5;
    v13.super_class = ObjectType;
    id v12 = objc_msgSendSuper2(&v13, sel_init);

    return (uint64_t)v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

Swift::Void __swiftcall PDF417ParsingConfig.encode(with:)(NSCoder with)
{
  unint64_t v2 = (void *)sub_1D7A9BF98();
  id v3 = (id)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeObject:v2 forKey:v3];
}

id PDF417ParsingConfig.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void PDF417ParsingConfig.init()()
{
}

uint64_t PDF417ParsingConfig.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA843B48);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4, v5, v6, v7, v8, v9, v10);
  id v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D78FA960();
  sub_1D7A9D6E8();
  sub_1D7A9D1D8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v12, v2);
}

unint64_t sub_1D78FA960()
{
  unint64_t result = qword_1EBDF95B0;
  if (!qword_1EBDF95B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDF95B0);
  }
  return result;
}

void *PDF417ParsingConfig.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return PDF417ParsingConfig.init(from:)(a1);
}

void *PDF417ParsingConfig.init(from:)(void *a1)
{
  id v3 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF95C8);
  uint64_t v23 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v6, v7, v8, v9, v10, v11, v12);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D78FA960();
  uint64_t v16 = v3;
  sub_1D7A9D6A8();
  if (v2)
  {

    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v17 = v23;
    uint64_t v18 = sub_1D7A9D0F8();
    id v20 = (uint64_t *)&v16[OBJC_IVAR____TtC13CoreIDVShared19PDF417ParsingConfig_aamvaHeader];
    *id v20 = v18;
    v20[1] = v21;

    v24.receiver = v16;
    v24.super_class = ObjectType;
    uint64_t v15 = objc_msgSendSuper2(&v24, sel_init);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v14, v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v15;
}

void *sub_1D78FABD8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id v6 = objc_allocWithZone(v2);
  unint64_t result = PDF417ParsingConfig.init(from:)(a1);
  if (!v3) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1D78FAC28(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA843B48);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4, v5, v6, v7, v8, v9, v10);
  uint64_t v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D78FA960();
  sub_1D7A9D6E8();
  sub_1D7A9D1D8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v12, v2);
}

uint64_t static IdentityDocScanConfig.supportsSecureCoding.getter()
{
  return 1;
}

id sub_1D78FAD78()
{
  if (qword_1EA8414D0 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1EA845A90;
  id v1 = (objc_class *)type metadata accessor for IdentityDocScanConfig();
  uint64_t v2 = objc_allocWithZone(v1);
  *(void *)&v2[OBJC_IVAR____TtC13CoreIDVShared21IdentityDocScanConfig_pdf417ParsingConfigs] = v0;
  v2[OBJC_IVAR____TtC13CoreIDVShared21IdentityDocScanConfig_requiresPDF417] = 1;
  v2[OBJC_IVAR____TtC13CoreIDVShared21IdentityDocScanConfig_requiresAAMVACompliant] = 1;
  v2[OBJC_IVAR____TtC13CoreIDVShared21IdentityDocScanConfig_requiresStateMatch] = 1;
  uint64_t v3 = &v2[OBJC_IVAR____TtC13CoreIDVShared21IdentityDocScanConfig_issuerIdentificationNumber];
  *uint64_t v3 = 0;
  v3[1] = 0xE000000000000000;
  *(void *)&v2[OBJC_IVAR____TtC13CoreIDVShared21IdentityDocScanConfig_crTimeout] = 10;
  uint64_t v4 = &v2[OBJC_IVAR____TtC13CoreIDVShared21IdentityDocScanConfig_maxRetakeCount];
  *(void *)uint64_t v4 = 0;
  v4[8] = 1;
  v6.receiver = v2;
  v6.super_class = v1;
  swift_bridgeObjectRetain();
  id result = objc_msgSendSuper2(&v6, sel_init);
  qword_1EA843B30 = (uint64_t)result;
  return result;
}

id IdentityDocScanConfig.__allocating_init(pdf417ParsingConfigs:requiresPDF417:requiresAAMVACompliant:requiresStateMatch:issuerIdentificationNumber:crTimeout:maxRetakeCount:)(uint64_t a1, char a2, char a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t v18 = objc_allocWithZone(v9);
  *(void *)&v18[OBJC_IVAR____TtC13CoreIDVShared21IdentityDocScanConfig_pdf417ParsingConfigs] = a1;
  v18[OBJC_IVAR____TtC13CoreIDVShared21IdentityDocScanConfig_requiresPDF417] = a2;
  v18[OBJC_IVAR____TtC13CoreIDVShared21IdentityDocScanConfig_requiresAAMVACompliant] = a3;
  v18[OBJC_IVAR____TtC13CoreIDVShared21IdentityDocScanConfig_requiresStateMatch] = a4;
  uint64_t v19 = &v18[OBJC_IVAR____TtC13CoreIDVShared21IdentityDocScanConfig_issuerIdentificationNumber];
  *uint64_t v19 = a5;
  v19[1] = a6;
  *(void *)&v18[OBJC_IVAR____TtC13CoreIDVShared21IdentityDocScanConfig_crTimeout] = a7;
  id v20 = &v18[OBJC_IVAR____TtC13CoreIDVShared21IdentityDocScanConfig_maxRetakeCount];
  *(void *)id v20 = a8;
  v20[8] = a9 & 1;
  v22.receiver = v18;
  v22.super_class = v9;
  return objc_msgSendSuper2(&v22, sel_init);
}

id static IdentityDocScanConfig.defaultConfig.getter()
{
  if (qword_1EA8414B0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = (void *)qword_1EA843B30;
  return v0;
}

void static IdentityDocScanConfig.defaultConfig.setter(uint64_t a1)
{
  if (qword_1EA8414B0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v2 = (void *)qword_1EA843B30;
  qword_1EA843B30 = a1;
}

uint64_t (*static IdentityDocScanConfig.defaultConfig.modify())()
{
  if (qword_1EA8414B0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t IdentityDocScanConfig.pdf417ParsingConfigs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t IdentityDocScanConfig.requiresPDF417.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC13CoreIDVShared21IdentityDocScanConfig_requiresPDF417);
}

uint64_t IdentityDocScanConfig.requiresAAMVACompliant.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC13CoreIDVShared21IdentityDocScanConfig_requiresAAMVACompliant);
}

uint64_t IdentityDocScanConfig.requiresStateMatch.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC13CoreIDVShared21IdentityDocScanConfig_requiresStateMatch);
}

uint64_t IdentityDocScanConfig.issuerIdentificationNumber.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC13CoreIDVShared21IdentityDocScanConfig_issuerIdentificationNumber);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t IdentityDocScanConfig.crTimeout.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC13CoreIDVShared21IdentityDocScanConfig_crTimeout);
}

uint64_t IdentityDocScanConfig.maxRetakeCount.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC13CoreIDVShared21IdentityDocScanConfig_maxRetakeCount);
}

id IdentityDocScanConfig.init(pdf417ParsingConfigs:requiresPDF417:requiresAAMVACompliant:requiresStateMatch:issuerIdentificationNumber:crTimeout:maxRetakeCount:)(uint64_t a1, char a2, char a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v9[OBJC_IVAR____TtC13CoreIDVShared21IdentityDocScanConfig_pdf417ParsingConfigs] = a1;
  v9[OBJC_IVAR____TtC13CoreIDVShared21IdentityDocScanConfig_requiresPDF417] = a2;
  v9[OBJC_IVAR____TtC13CoreIDVShared21IdentityDocScanConfig_requiresAAMVACompliant] = a3;
  v9[OBJC_IVAR____TtC13CoreIDVShared21IdentityDocScanConfig_requiresStateMatch] = a4;
  uint64_t v19 = &v9[OBJC_IVAR____TtC13CoreIDVShared21IdentityDocScanConfig_issuerIdentificationNumber];
  *uint64_t v19 = a5;
  v19[1] = a6;
  *(void *)&v9[OBJC_IVAR____TtC13CoreIDVShared21IdentityDocScanConfig_crTimeout] = a7;
  id v20 = &v9[OBJC_IVAR____TtC13CoreIDVShared21IdentityDocScanConfig_maxRetakeCount];
  *(void *)id v20 = a8;
  v20[8] = a9 & 1;
  v22.receiver = v9;
  v22.super_class = ObjectType;
  return objc_msgSendSuper2(&v22, sel_init);
}

id IdentityDocScanConfig.__allocating_init(pdf417ParsingConfigs:requiresPDF417:requiresAAMVACompliant:requiresStateMatch:issuerIdentificationNumber:crTimeout:maxRetakeCount:)(uint64_t a1, unsigned __int8 a2, char a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, char a10)
{
  int v14 = a2;
  if (a1)
  {
    uint64_t v25 = a1;
  }
  else
  {
    if (qword_1EA8414D0 != -1) {
      swift_once();
    }
    uint64_t v25 = qword_1EA845A90;
    swift_bridgeObjectRetain();
  }
  if (v14 == 2)
  {
    if (qword_1EA8414B0 != -1) {
      swift_once();
    }
    swift_beginAccess();
    char v15 = *(unsigned char *)(qword_1EA843B30 + OBJC_IVAR____TtC13CoreIDVShared21IdentityDocScanConfig_requiresPDF417);
  }
  else
  {
    char v15 = v14 & 1;
  }
  char v27 = v15;
  if (a3 == 2)
  {
    if (qword_1EA8414B0 != -1) {
      swift_once();
    }
    swift_beginAccess();
    char v16 = *(unsigned char *)(qword_1EA843B30 + OBJC_IVAR____TtC13CoreIDVShared21IdentityDocScanConfig_requiresAAMVACompliant);
  }
  else
  {
    char v16 = a3 & 1;
  }
  char v26 = v16;
  if (a4 == 2)
  {
    if (qword_1EA8414B0 != -1) {
      swift_once();
    }
    swift_beginAccess();
    char v17 = *(unsigned char *)(qword_1EA843B30 + OBJC_IVAR____TtC13CoreIDVShared21IdentityDocScanConfig_requiresStateMatch);
    uint64_t v18 = qword_1EA842FF0 + 16;
    if (a6) {
      goto LABEL_20;
    }
  }
  else
  {
    char v17 = a4 & 1;
    uint64_t v18 = &qword_1EA842FF0[2];
    if (a6)
    {
LABEL_20:
      uint64_t v19 = v18;
      goto LABEL_25;
    }
  }
  if (qword_1EA8414B0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v19 = v18;
  id v20 = (uint64_t *)(qword_1EA843B30 + v18[366]);
  a5 = *v20;
  a6 = v20[1];
  swift_bridgeObjectRetain();
LABEL_25:
  if (a8)
  {
    if (qword_1EA8414B0 != -1) {
      swift_once();
    }
    swift_beginAccess();
    a7 = *(void *)(qword_1EA843B30 + OBJC_IVAR____TtC13CoreIDVShared21IdentityDocScanConfig_crTimeout);
  }
  uint64_t v21 = objc_allocWithZone(v28);
  *(void *)&v21[OBJC_IVAR____TtC13CoreIDVShared21IdentityDocScanConfig_pdf417ParsingConfigs] = v25;
  v21[OBJC_IVAR____TtC13CoreIDVShared21IdentityDocScanConfig_requiresPDF417] = v27;
  v21[OBJC_IVAR____TtC13CoreIDVShared21IdentityDocScanConfig_requiresAAMVACompliant] = v26;
  v21[OBJC_IVAR____TtC13CoreIDVShared21IdentityDocScanConfig_requiresStateMatch] = v17;
  objc_super v22 = &v21[v19[366]];
  *objc_super v22 = a5;
  v22[1] = a6;
  *(void *)&v21[OBJC_IVAR____TtC13CoreIDVShared21IdentityDocScanConfig_crTimeout] = a7;
  uint64_t v23 = &v21[OBJC_IVAR____TtC13CoreIDVShared21IdentityDocScanConfig_maxRetakeCount];
  *(void *)uint64_t v23 = a9;
  v23[8] = a10 & 1;
  v31.receiver = v21;
  v31.super_class = v28;
  return objc_msgSendSuper2(&v31, sel_init);
}

id IdentityDocScanConfig.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  id v4 = sub_1D78FBBF4(a1);

  return v4;
}

id IdentityDocScanConfig.init(coder:)(void *a1)
{
  id v2 = sub_1D78FBBF4(a1);

  return v2;
}

Swift::Void __swiftcall IdentityDocScanConfig.encode(with:)(NSCoder with)
{
  uint64_t v3 = sub_1D7A9B5F8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v5, v6, v7, v8, v9, v10, v11);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v14 = *(void *)&v1[OBJC_IVAR____TtC13CoreIDVShared21IdentityDocScanConfig_pdf417ParsingConfigs];
  type metadata accessor for PDF417ParsingConfig();
  char v15 = (void *)sub_1D7A9C2F8();
  char v16 = (void *)sub_1D7A9BF98();
  char v17 = (SEL *)&unk_1E6A87000;
  [(objc_class *)with.super.isa encodeObject:v15 forKey:v16];

  if (qword_1EBDF9DC8 != -1) {
    swift_once();
  }
  uint64_t v18 = __swift_project_value_buffer(v3, (uint64_t)qword_1EBDFBE70);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v13, v18, v3);
  uint64_t v19 = v1;
  id v20 = sub_1D7A9B5D8();
  os_log_type_t v21 = sub_1D7A9C748();
  if (os_log_type_enabled(v20, v21))
  {
    objc_super v22 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)objc_super v22 = 134217984;
    if (v14 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v23 = sub_1D7A9CFB8();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v23 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v36 = v23;
    sub_1D7A9C9E8();

    _os_log_impl(&dword_1D7853000, v20, v21, "encode pdf417ParsingConfigs size = %ld", v22, 0xCu);
    MEMORY[0x1D947D740](v22, -1, -1);
    char v17 = (SEL *)&unk_1E6A87000;
  }
  else
  {

    id v20 = v19;
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v13, v3);
  uint64_t v24 = *((unsigned __int8 *)&v19->isa + OBJC_IVAR____TtC13CoreIDVShared21IdentityDocScanConfig_requiresPDF417);
  uint64_t v25 = (void *)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeBool:v24 forKey:v25];

  uint64_t v26 = *((unsigned __int8 *)&v19->isa + OBJC_IVAR____TtC13CoreIDVShared21IdentityDocScanConfig_requiresAAMVACompliant);
  char v27 = (void *)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeBool:v26 forKey:v27];

  uint64_t v28 = *((unsigned __int8 *)&v19->isa + OBJC_IVAR____TtC13CoreIDVShared21IdentityDocScanConfig_requiresStateMatch);
  uint64_t v29 = (void *)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeBool:v28 forKey:v29];

  uint64_t v30 = (void *)sub_1D7A9BF98();
  objc_super v31 = (void *)sub_1D7A9BF98();
  objc_msgSend(with.super.isa, v17[307], v30, v31);

  uint64_t v32 = *(uint64_t *)((char *)&v19->isa + OBJC_IVAR____TtC13CoreIDVShared21IdentityDocScanConfig_crTimeout);
  uint64_t v33 = (void *)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeInteger:v32 forKey:v33];

  if ((*((unsigned char *)&v19[1].isa + OBJC_IVAR____TtC13CoreIDVShared21IdentityDocScanConfig_maxRetakeCount) & 1) == 0)
  {
    uint64_t v34 = (void *)sub_1D7A9C9D8();
    uint64_t v35 = (void *)sub_1D7A9BF98();
    objc_msgSend(with.super.isa, v17[307], v34, v35);
  }
}

void IdentityDocScanConfig.init()()
{
}

id sub_1D78FBBF4(void *a1)
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = sub_1D7A9B5F8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6, v7, v8, v9, v10, v11, v12);
  unint64_t v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA843600);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1D7AA0A40;
  *(void *)(v15 + 32) = sub_1D78C4038(0, (unint64_t *)&qword_1EBDF90E0);
  *(void *)(v15 + 40) = type metadata accessor for PDF417ParsingConfig();
  char v16 = v1;
  sub_1D7A9C918();
  id result = (id)swift_bridgeObjectRelease();
  if (!v49)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    return result;
  }
  sub_1D7860E50(&v48, &v50);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA843B90);
  swift_dynamicCast();
  uint64_t v18 = OBJC_IVAR____TtC13CoreIDVShared21IdentityDocScanConfig_pdf417ParsingConfigs;
  *(void *)&v16[OBJC_IVAR____TtC13CoreIDVShared21IdentityDocScanConfig_pdf417ParsingConfigs] = v47;
  if (qword_1EBDF9DC8 != -1) {
    swift_once();
  }
  uint64_t v19 = __swift_project_value_buffer(v4, (uint64_t)qword_1EBDFBE70);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v14, v19, v4);
  id v20 = v16;
  os_log_type_t v21 = sub_1D7A9B5D8();
  os_log_type_t v22 = sub_1D7A9C748();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v45 = ObjectType;
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v23 = 134217984;
    unint64_t v24 = *(void *)&v16[v18];
    if (v24 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v25 = sub_1D7A9CFB8();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v25 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    *(void *)&long long v48 = v25;
    sub_1D7A9C9E8();

    _os_log_impl(&dword_1D7853000, v21, v22, "decode pdf417ParsingConfigs size = %ld", v23, 0xCu);
    MEMORY[0x1D947D740](v23, -1, -1);
    ObjectType = v45;
  }
  else
  {

    os_log_type_t v21 = v20;
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
  uint64_t v26 = (void *)sub_1D7A9BF98();
  unsigned __int8 v27 = objc_msgSend(a1, sel_decodeBoolForKey_, v26);

  *((unsigned char *)&v20->isa + OBJC_IVAR____TtC13CoreIDVShared21IdentityDocScanConfig_requiresPDF417) = v27;
  uint64_t v28 = (void *)sub_1D7A9BF98();
  unsigned __int8 v29 = objc_msgSend(a1, sel_decodeBoolForKey_, v28);

  *((unsigned char *)&v20->isa + OBJC_IVAR____TtC13CoreIDVShared21IdentityDocScanConfig_requiresAAMVACompliant) = v29;
  uint64_t v30 = (void *)sub_1D7A9BF98();
  unsigned __int8 v31 = objc_msgSend(a1, sel_decodeBoolForKey_, v30);

  *((unsigned char *)&v20->isa + OBJC_IVAR____TtC13CoreIDVShared21IdentityDocScanConfig_requiresStateMatch) = v31;
  sub_1D78C4038(0, (unint64_t *)&qword_1EBDF8260);
  id result = (id)sub_1D7A9C908();
  if (!result) {
    goto LABEL_16;
  }
  uint64_t v32 = result;
  uint64_t v33 = sub_1D7A9BFC8();
  uint64_t v35 = v34;

  uint64_t v36 = (uint64_t *)((char *)v20 + OBJC_IVAR____TtC13CoreIDVShared21IdentityDocScanConfig_issuerIdentificationNumber);
  *uint64_t v36 = v33;
  v36[1] = v35;
  uint64_t v37 = (void *)sub_1D7A9BF98();
  id v38 = (objc_class *)objc_msgSend(a1, sel_decodeIntegerForKey_, v37);

  *(Class *)((char *)&v20->isa + OBJC_IVAR____TtC13CoreIDVShared21IdentityDocScanConfig_crTimeout) = v38;
  uint64_t v39 = (void *)sub_1D7A9BF98();
  LODWORD(v38) = objc_msgSend(a1, sel_containsValueForKey_, v39);

  if (v38)
  {
    uint64_t v40 = (void *)sub_1D7A9BF98();
    uint64_t v41 = (uint64_t)objc_msgSend(a1, sel_decodeIntegerForKey_, v40);

    unint64_t v42 = (unint64_t)v41 >> 63;
    uint64_t v43 = v41 & ~(v41 >> 63);
  }
  else
  {
    uint64_t v43 = 0;
    LOBYTE(v42) = 1;
  }
  uint64_t v44 = (char *)v20 + OBJC_IVAR____TtC13CoreIDVShared21IdentityDocScanConfig_maxRetakeCount;
  *(void *)uint64_t v44 = v43;
  v44[8] = v42;

  v46.receiver = v20;
  v46.super_class = ObjectType;
  return objc_msgSendSuper2(&v46, sel_init);
}

uint64_t type metadata accessor for PDF417ParsingConfig()
{
  return self;
}

uint64_t method lookup function for PDF417ParsingConfig(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PDF417ParsingConfig);
}

uint64_t dispatch thunk of PDF417ParsingConfig.__allocating_init(aamvaHeader:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of PDF417ParsingConfig.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of PDF417ParsingConfig.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t type metadata accessor for IdentityDocScanConfig()
{
  return self;
}

uint64_t method lookup function for IdentityDocScanConfig(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for IdentityDocScanConfig);
}

uint64_t dispatch thunk of IdentityDocScanConfig.__allocating_init(pdf417ParsingConfigs:requiresPDF417:requiresAAMVACompliant:requiresStateMatch:issuerIdentificationNumber:crTimeout:maxRetakeCount:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of IdentityDocScanConfig.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

unsigned char *storeEnumTagSinglePayload for PDF417ParsingConfig.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *id result = a2;
        return result;
      case 2:
        *(_WORD *)id result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)id result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *id result = 0;
      break;
    case 2:
      *(_WORD *)id result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1D78FC304);
    case 4:
      *(_DWORD *)id result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for PDF417ParsingConfig.CodingKeys()
{
  return &type metadata for PDF417ParsingConfig.CodingKeys;
}

unint64_t sub_1D78FC340()
{
  unint64_t result = qword_1EA843B88;
  if (!qword_1EA843B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA843B88);
  }
  return result;
}

unint64_t sub_1D78FC398()
{
  unint64_t result = qword_1EBDF95A0;
  if (!qword_1EBDF95A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDF95A0);
  }
  return result;
}

unint64_t sub_1D78FC3F0()
{
  unint64_t result = qword_1EBDF95B8;
  if (!qword_1EBDF95B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDF95B8);
  }
  return result;
}

uint64_t dispatch thunk of HPKESuite.sealMessageAEAD<A>(message:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 8))();
}

uint64_t dispatch thunk of HPKESuite.openMessageAEAD(cipherText:key:aad:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 16))();
}

uint64_t dispatch thunk of HPKESuite.sealMessageHPKE<A>(message:to:encoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 24))();
}

uint64_t dispatch thunk of HPKESuite.openMessageHPKE<A>(envelope:authenticationContext:decoder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 32))();
}

uint64_t sub_1D78FC4E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = sub_1D7A9AC48();
  swift_allocObject();
  v16[3] = v13;
  v16[4] = &protocol witness table for JSONEncoder;
  v16[0] = sub_1D7A9AC38();
  (*(void (**)(uint64_t, uint64_t, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 24))(a1, a2, v16, a4, a6, a7, a3, a5);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
}

uint64_t sub_1D78FC5C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = sub_1D7A9ABF8();
  swift_allocObject();
  v16[3] = v13;
  v16[4] = &protocol witness table for JSONDecoder;
  v16[0] = sub_1D7A9ABE8();
  (*(void (**)(uint64_t, uint64_t, void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 32))(a1, a2, v16, a4, a6, a7, a3, a5);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
}

unint64_t machServiceIdentityProofingDataSharing.getter()
{
  return 0xD000000000000035;
}

id static IdentityProofingDataSharingInterface.interface()()
{
  id v0 = objc_msgSend(self, sel_interfaceWithProtocol_, &unk_1F2F33418);
  return v0;
}

uint64_t IdentityProofingDataSharingInterface.deinit()
{
  return v0;
}

uint64_t IdentityProofingDataSharingInterface.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for IdentityProofingDataSharingInterface()
{
  return self;
}

uint64_t method lookup function for IdentityProofingDataSharingInterface(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for IdentityProofingDataSharingInterface);
}

uint64_t LogotypeImage.imageDetails.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  uint64_t v3 = v1[2];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

__n128 LogotypeImage.imageDetails.setter(uint64_t *a1)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)uint64_t v1 = v3;
  __n128 result = *(__n128 *)(a1 + 1);
  *(__n128 *)(v1 + 8) = result;
  return result;
}

uint64_t (*LogotypeImage.imageDetails.modify())()
{
  return nullsub_1;
}

ValueMetadata *type metadata accessor for LogotypeImage()
{
  return &type metadata for LogotypeImage;
}

CoreIDVShared::IQImageType_optional __swiftcall IQImageType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1D7A9D058();
  result.value = swift_bridgeObjectRelease();
  char v5 = 7;
  if (v3 < 7) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

unint64_t IQImageType.rawValue.getter()
{
  unint64_t result = 0x665F64695F776172;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x625F64695F776172;
      break;
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      unint64_t result = 0x6569666C6573;
      break;
    case 5:
      unint64_t result = 0x7373656E6576696CLL;
      break;
    case 6:
      unint64_t result = 0x5F65766973736170;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D78FC998(unsigned __int8 *a1, char *a2)
{
  return sub_1D7998F18(*a1, *a2);
}

uint64_t sub_1D78FC9A4()
{
  return sub_1D7A1EC08();
}

uint64_t sub_1D78FC9B0()
{
  return sub_1D7A35648();
}

uint64_t sub_1D78FC9B8()
{
  return sub_1D7A1EC08();
}

CoreIDVShared::IQImageType_optional sub_1D78FC9C0(Swift::String *a1)
{
  return IQImageType.init(rawValue:)(*a1);
}

unint64_t sub_1D78FC9CC@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = IQImageType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t PDF417Data.parsedData.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1D7871D78(v1, (uint64_t)v4, &qword_1EA843BA0);
  sub_1D7871D78((uint64_t)v4, a1, &qword_1EA843BA0);
  return sub_1D78FD484(v4, sub_1D78FCA68);
}

uint64_t sub_1D78FCA68(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t PDF417Data.rawData.getter()
{
  uint64_t v1 = *(void *)(v0 + 864);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1D78FCE04()
{
  if (*v0) {
    return 0x61746144776172;
  }
  else {
    return 0x6144646573726170;
  }
}

uint64_t sub_1D78FCE44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1D7910ACC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D78FCE6C(uint64_t a1)
{
  unint64_t v2 = sub_1D78FD090();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D78FCEA8(uint64_t a1)
{
  unint64_t v2 = sub_1D78FD090();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t PDF417Data.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA843BA8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v5, v6, v7, v8, v9, v10, v11);
  uint64_t v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D7871D78(v1, (uint64_t)v19, &qword_1EA843BA0);
  uint64_t v14 = *(void *)(v1 + 864);
  v17[0] = *(void *)(v1 + 872);
  v17[1] = v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D78FD090();
  sub_1D7A9D6E8();
  sub_1D7871D78((uint64_t)v19, (uint64_t)v18, &qword_1EA843BA0);
  v19[887] = 0;
  sub_1D78FD0E4();
  uint64_t v15 = v17[2];
  sub_1D7A9D1C8();
  if (!v15)
  {
    v18[0] = 1;
    sub_1D7A9D1D8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v13, v3);
}

unint64_t sub_1D78FD090()
{
  unint64_t result = qword_1EA843BB0;
  if (!qword_1EA843BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA843BB0);
  }
  return result;
}

unint64_t sub_1D78FD0E4()
{
  unint64_t result = qword_1EA843BB8;
  if (!qword_1EA843BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA843BB8);
  }
  return result;
}

uint64_t *PDF417Data.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = (void *)MEMORY[0x1F4188790](a1, a2, a3, a4, a5, a6, a7, a8);
  uint64_t v28 = v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA843BC0);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11, v13, v14, v15, v16, v17, v18, v19);
  os_log_type_t v21 = (char *)&v29[-1] - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v9, v9[3]);
  sub_1D78FD090();
  sub_1D7A9D6A8();
  if (v8) {
    return (uint64_t *)__swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  }
  uint64_t v22 = v12;
  uint64_t v23 = v28;
  char v35 = 0;
  sub_1D78FD430();
  sub_1D7A9D0E8();
  sub_1D7871D78((uint64_t)&v32, (uint64_t)v31, &qword_1EA843BA0);
  sub_1D7871D78((uint64_t)v31, (uint64_t)v33, &qword_1EA843BA0);
  char v34 = 1;
  sub_1D78FD484(v31, sub_1D78FCA68);
  uint64_t v24 = sub_1D7A9D0F8();
  uint64_t v26 = v25;
  (*(void (**)(char *, uint64_t))(v22 + 8))(v21, v11);
  v33[108] = v24;
  v33[109] = v26;
  sub_1D7871D78((uint64_t)v31, (uint64_t)v29, &qword_1EA843BA0);
  v29[108] = v24;
  v29[109] = v26;
  sub_1D78FD9D8(v29);
  sub_1D78FD484(v31, sub_1D78FD670);
  memcpy(v23, v29, 0x370uLL);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  memcpy(v30, v33, sizeof(v30));
  return sub_1D78FDBD0(v30);
}

unint64_t sub_1D78FD430()
{
  unint64_t result = qword_1EA843BC8;
  if (!qword_1EA843BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA843BC8);
  }
  return result;
}

#error "1D78FD648: call analysis failed (funcsize=123)"

uint64_t sub_1D78FD670(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t *sub_1D78FD9D8(uint64_t *a1)
{
  return a1;
}

uint64_t *sub_1D78FDBD0(uint64_t *a1)
{
  return a1;
}

uint64_t *sub_1D78FDDC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return PDF417Data.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_1D78FDDE0(void *a1)
{
  return PDF417Data.encode(to:)(a1);
}

uint64_t DocScanData.vertices.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DocScanData.vertices.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v1 = a1;
  return result;
}

uint64_t (*DocScanData.vertices.modify())()
{
  return nullsub_1;
}

uint64_t DocScanData.targetVertices.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DocScanData.targetVertices.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*DocScanData.targetVertices.modify())()
{
  return nullsub_1;
}

unint64_t DocScanData.captureTime.getter()
{
  return *(unsigned int *)(v0 + 16) | ((unint64_t)*(unsigned __int8 *)(v0 + 20) << 32);
}

uint64_t DocScanData.captureTime.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 16) = result;
  *(unsigned char *)(v1 + 20) = BYTE4(result) & 1;
  return result;
}

uint64_t (*DocScanData.captureTime.modify())()
{
  return nullsub_1;
}

uint64_t DocScanData.capturePath.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DocScanData.capturePath.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t (*DocScanData.capturePath.modify())()
{
  return nullsub_1;
}

uint64_t DocScanData.rescanCount.getter()
{
  return *(void *)(v0 + 40);
}

uint64_t DocScanData.rescanCount.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 40) = result;
  *(unsigned char *)(v2 + 48) = a2 & 1;
  return result;
}

uint64_t (*DocScanData.rescanCount.modify())()
{
  return nullsub_1;
}

uint64_t DocScanData.init(vertices:targetVertices:captureTime:capturePath:rescanCount:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X8>)
{
  *(void *)a8 = result;
  *(void *)(a8 + 8) = a2;
  *(_DWORD *)(a8 + 16) = a3;
  *(unsigned char *)(a8 + 20) = BYTE4(a3) & 1;
  *(void *)(a8 + 24) = a4;
  *(void *)(a8 + 32) = a5;
  *(void *)(a8 + 40) = a6;
  *(unsigned char *)(a8 + 48) = a7 & 1;
  return result;
}

__n128 SelfieScanData.regionOfInterest.getter@<Q0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 32);
  __n128 result = *(__n128 *)v1;
  long long v4 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v2;
  return result;
}

uint64_t SelfieScanData.regionOfInterest.setter(uint64_t a1)
{
  return sub_1D7871D78(a1, v1, &qword_1EA843BD0);
}

uint64_t (*SelfieScanData.regionOfInterest.modify())()
{
  return nullsub_1;
}

uint64_t SelfieScanData.faceBounds.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SelfieScanData.faceBounds.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 40) = a1;
  return result;
}

uint64_t (*SelfieScanData.faceBounds.modify())()
{
  return nullsub_1;
}

unint64_t SelfieScanData.captureTime.getter()
{
  return *(unsigned int *)(v0 + 48) | ((unint64_t)*(unsigned __int8 *)(v0 + 52) << 32);
}

uint64_t SelfieScanData.captureTime.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 48) = result;
  *(unsigned char *)(v1 + 52) = BYTE4(result) & 1;
  return result;
}

uint64_t (*SelfieScanData.captureTime.modify())()
{
  return nullsub_1;
}

uint64_t SelfieScanData.rescanCount.getter()
{
  return *(void *)(v0 + 56);
}

uint64_t SelfieScanData.rescanCount.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 56) = result;
  *(unsigned char *)(v2 + 64) = a2 & 1;
  return result;
}

uint64_t (*SelfieScanData.rescanCount.modify())()
{
  return nullsub_1;
}

uint64_t SelfieScanData.chute.getter()
{
  uint64_t v1 = *(void *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SelfieScanData.chute.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 72) = a1;
  *(void *)(v2 + 80) = a2;
  return result;
}

uint64_t (*SelfieScanData.chute.modify())()
{
  return nullsub_1;
}

uint64_t SelfieScanData.isFlashEnabled.getter()
{
  return *(unsigned __int8 *)(v0 + 88);
}

uint64_t SelfieScanData.isFlashEnabled.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 88) = result;
  return result;
}

uint64_t (*SelfieScanData.isFlashEnabled.modify())()
{
  return nullsub_1;
}

double SelfieScanData.init(regionOfInterest:faceBounds:captureTime:rescanCount:chute:isFlashEnabled:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>)
{
  sub_1D7871D78(a1, (uint64_t)v20, &qword_1EA843BD0);
  char v17 = v21;
  double result = *(double *)v20;
  long long v19 = v20[1];
  *(_OWORD *)a9 = v20[0];
  *(_OWORD *)(a9 + 16) = v19;
  *(unsigned char *)(a9 + 32) = v17;
  *(void *)(a9 + 40) = a2;
  *(_DWORD *)(a9 + 48) = a3;
  *(unsigned char *)(a9 + 52) = BYTE4(a3) & 1;
  *(void *)(a9 + 56) = a4;
  *(unsigned char *)(a9 + 64) = a5 & 1;
  *(void *)(a9 + 72) = a6;
  *(void *)(a9 + 80) = a7;
  *(unsigned char *)(a9 + 88) = a8;
  return result;
}

unint64_t IQParameters.minFaceConfidence.getter()
{
  return *v0 | ((unint64_t)*((unsigned __int8 *)v0 + 4) << 32);
}

uint64_t IQParameters.minFaceConfidence.setter(uint64_t result)
{
  *(_DWORD *)uint64_t v1 = result;
  *(unsigned char *)(v1 + 4) = BYTE4(result) & 1;
  return result;
}

uint64_t (*IQParameters.minFaceConfidence.modify())()
{
  return nullsub_1;
}

unint64_t IQParameters.maxFaceConfidence.getter()
{
  return *(unsigned int *)(v0 + 8) | ((unint64_t)*(unsigned __int8 *)(v0 + 12) << 32);
}

uint64_t IQParameters.maxFaceConfidence.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 8) = result;
  *(unsigned char *)(v1 + 12) = BYTE4(result) & 1;
  return result;
}

uint64_t (*IQParameters.maxFaceConfidence.modify())()
{
  return nullsub_1;
}

uint64_t IQParameters.ocrKeywords.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t IQParameters.ocrKeywords.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*IQParameters.ocrKeywords.modify())()
{
  return nullsub_1;
}

uint64_t IQParameters.init(minFaceConfidence:maxFaceConfidence:ocrKeywords:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(_DWORD *)a4 = result;
  *(unsigned char *)(a4 + 4) = BYTE4(result) & 1;
  *(_DWORD *)(a4 + 8) = a2;
  *(unsigned char *)(a4 + 12) = BYTE4(a2) & 1;
  *(void *)(a4 + 16) = a3;
  return result;
}

id ImageQualityProperties.metrics.getter()
{
  return *v0;
}

void ImageQualityProperties.metrics.setter(void *a1)
{
  id *v1 = a1;
}

uint64_t (*ImageQualityProperties.metrics.modify())()
{
  return nullsub_1;
}

uint64_t ImageQualityProperties.pdf417Data.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1D7871D78(v1 + 8, (uint64_t)v4, &qword_1EA843BD8);
  sub_1D7871D78((uint64_t)v4, a1, &qword_1EA843BD8);
  return sub_1D78FEA58(v4, sub_1D78FE444);
}

uint64_t sub_1D78FE444(uint64_t result, uint64_t a2)
{
  if (STACK[0x938])
  {
    sub_1D78FCA68(result, a2);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t ImageQualityProperties.pdf417Data.setter(uint64_t a1)
{
  sub_1D7871D78(a1, (uint64_t)v4, &qword_1EA843BD8);
  uint64_t v2 = v1 + 8;
  sub_1D7871D78(v2, (uint64_t)v5, &qword_1EA843BD8);
  sub_1D78FEA58(v5, sub_1D78FEC54);
  return sub_1D7871D78((uint64_t)v4, v2, &qword_1EA843BD8);
}

#error "1D78FEC2C: call analysis failed (funcsize=127)"

uint64_t sub_1D78FEC54(uint64_t result, uint64_t a2)
{
  if (STACK[0x938])
  {
    sub_1D78FD670(result, a2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t (*ImageQualityProperties.pdf417Data.modify())()
{
  return nullsub_1;
}

uint64_t ImageQualityProperties.debugDescription.getter()
{
  uint64_t v1 = *v0;
  sub_1D7871D78((uint64_t)(v0 + 1), (uint64_t)v7, &qword_1EA843BD8);
  v8[0] = 0;
  v8[1] = 0xE000000000000000;
  sub_1D7A9CC48();
  swift_bridgeObjectRelease();
  uint64_t v5 = 0x7363697274654D2DLL;
  unint64_t v6 = 0xEA00000000000A2DLL;
  id v2 = objc_msgSend(v1, sel_debugDescription);
  sub_1D7A9BFC8();

  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  sub_1D7871D78((uint64_t)v7, (uint64_t)v8, &qword_1EA843BD8);
  if (sub_1D78FF37C((uint64_t)v8) != 1)
  {
    sub_1D7871D78((uint64_t)v8, (uint64_t)&v4, &qword_1EA843BA0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA843BA0);
    sub_1D7A9C998();
  }
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1D78FF37C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 872);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

uint64_t MetricsFlags.__allocating_init(rawValue:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t static MetricsFlags.blurriness.getter()
{
  type metadata accessor for MetricsFlags();
  return swift_initStaticObject();
}

uint64_t static MetricsFlags.exposure.getter()
{
  type metadata accessor for MetricsFlags();
  return swift_initStaticObject();
}

uint64_t static MetricsFlags.cardDistortion.getter()
{
  type metadata accessor for MetricsFlags();
  return swift_initStaticObject();
}

uint64_t static MetricsFlags.faceToImageRatio.getter()
{
  type metadata accessor for MetricsFlags();
  return swift_initStaticObject();
}

uint64_t static MetricsFlags.faceCenteredRatio.getter()
{
  type metadata accessor for MetricsFlags();
  return swift_initStaticObject();
}

uint64_t static MetricsFlags.headPitch.getter()
{
  type metadata accessor for MetricsFlags();
  return swift_initStaticObject();
}

uint64_t static MetricsFlags.headRoll.getter()
{
  type metadata accessor for MetricsFlags();
  return swift_initStaticObject();
}

uint64_t static MetricsFlags.headYaw.getter()
{
  type metadata accessor for MetricsFlags();
  return swift_initStaticObject();
}

uint64_t static MetricsFlags.blinkingConfidence.getter()
{
  type metadata accessor for MetricsFlags();
  return swift_initStaticObject();
}

uint64_t static MetricsFlags.prescriptionConfidence.getter()
{
  type metadata accessor for MetricsFlags();
  return swift_initStaticObject();
}

uint64_t static MetricsFlags.sunglassesConfidence.getter()
{
  type metadata accessor for MetricsFlags();
  return swift_initStaticObject();
}

uint64_t static MetricsFlags.facemaskConfidence.getter()
{
  type metadata accessor for MetricsFlags();
  return swift_initStaticObject();
}

uint64_t static MetricsFlags.headgearConfidence.getter()
{
  type metadata accessor for MetricsFlags();
  return swift_initStaticObject();
}

uint64_t static MetricsFlags.faceConfidence.getter()
{
  type metadata accessor for MetricsFlags();
  return swift_initStaticObject();
}

uint64_t static MetricsFlags.captureTime.getter()
{
  type metadata accessor for MetricsFlags();
  return swift_initStaticObject();
}

uint64_t static MetricsFlags.faceCaptureQuality.getter()
{
  type metadata accessor for MetricsFlags();
  return swift_initStaticObject();
}

uint64_t static MetricsFlags.documentSize.getter()
{
  type metadata accessor for MetricsFlags();
  return swift_initStaticObject();
}

uint64_t static MetricsFlags.documentRotation.getter()
{
  type metadata accessor for MetricsFlags();
  return swift_initStaticObject();
}

uint64_t static MetricsFlags.documentSkew.getter()
{
  type metadata accessor for MetricsFlags();
  return swift_initStaticObject();
}

uint64_t static MetricsFlags.targetDrift.getter()
{
  type metadata accessor for MetricsFlags();
  return swift_initStaticObject();
}

uint64_t static MetricsFlags.numFaces.getter()
{
  type metadata accessor for MetricsFlags();
  return swift_initStaticObject();
}

uint64_t static MetricsFlags.luxLevel.getter()
{
  type metadata accessor for MetricsFlags();
  return swift_initStaticObject();
}

uint64_t static MetricsFlags.skinTone.getter()
{
  type metadata accessor for MetricsFlags();
  return swift_initStaticObject();
}

uint64_t static MetricsFlags.pdf417Detected.getter()
{
  type metadata accessor for MetricsFlags();
  return swift_initStaticObject();
}

uint64_t static MetricsFlags.isAAMVACompliant.getter()
{
  type metadata accessor for MetricsFlags();
  return swift_initStaticObject();
}

uint64_t static MetricsFlags.isAutoCaptured.getter()
{
  type metadata accessor for MetricsFlags();
  return swift_initStaticObject();
}

uint64_t static MetricsFlags.isFlashEnabled.getter()
{
  type metadata accessor for MetricsFlags();
  return swift_initStaticObject();
}

uint64_t static MetricsFlags.issuerNumber.getter()
{
  type metadata accessor for MetricsFlags();
  return swift_initStaticObject();
}

uint64_t static MetricsFlags.documentType.getter()
{
  type metadata accessor for MetricsFlags();
  return swift_initStaticObject();
}

uint64_t static MetricsFlags.originalVertices.getter()
{
  type metadata accessor for MetricsFlags();
  return swift_initStaticObject();
}

uint64_t static MetricsFlags.targetVertices.getter()
{
  type metadata accessor for MetricsFlags();
  return swift_initStaticObject();
}

uint64_t static MetricsFlags.rectangleCorners.getter()
{
  type metadata accessor for MetricsFlags();
  return swift_initStaticObject();
}

uint64_t static MetricsFlags.documentCorners.getter()
{
  type metadata accessor for MetricsFlags();
  return swift_initStaticObject();
}

uint64_t static MetricsFlags.fuzzyMatch.getter()
{
  type metadata accessor for MetricsFlags();
  return swift_initStaticObject();
}

uint64_t static MetricsFlags.closestMatches.getter()
{
  type metadata accessor for MetricsFlags();
  return swift_initStaticObject();
}

uint64_t static MetricsFlags.pdf417Data.getter()
{
  type metadata accessor for MetricsFlags();
  return swift_initStaticObject();
}

uint64_t static MetricsFlags.livenessChute.getter()
{
  type metadata accessor for MetricsFlags();
  return swift_initStaticObject();
}

uint64_t MetricsFlags.rawValue.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t MetricsFlags.init(rawValue:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return v1;
}

uint64_t type metadata accessor for MetricsFlags()
{
  return self;
}

uint64_t MetricsFlags.deinit()
{
  return v0;
}

uint64_t MetricsFlags.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1D78FFB08@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  type metadata accessor for MetricsFlags();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v3;
  *a2 = result;
  return result;
}

uint64_t sub_1D78FFB44()
{
  return sub_1D7A9C2C8();
}

uint64_t sub_1D78FFBB8()
{
  return sub_1D7A9C268();
}

uint64_t sub_1D78FFC1C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v3 = sub_1D785DE80();
  return MEMORY[0x1F4186310](a1, WitnessTable, v3);
}

BOOL sub_1D78FFC8C(uint64_t a1)
{
  return (*(void *)(*(void *)a1 + 16) & ~*(void *)(*(void *)v1 + 16)) == 0;
}

uint64_t sub_1D78FFCA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D78FFD48(a1, a2, a3, MEMORY[0x1E4FBC7E0]);
}

uint64_t sub_1D78FFCC0()
{
  swift_getWitnessTable();
  sub_1D7A9D728();
  return swift_release();
}

uint64_t sub_1D78FFD30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D78FFD48(a1, a2, a3, MEMORY[0x1E4FBC7D8]);
}

uint64_t sub_1D78FFD48(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t WitnessTable = swift_getWitnessTable();
  a4(a1, a2, WitnessTable);
  swift_release();
  return swift_release();
}

BOOL sub_1D78FFDD0(uint64_t *a1, uint64_t *a2)
{
  BOOL v2 = sub_1D7938958(a1, *a2);
  swift_release();
  return v2;
}

uint64_t sub_1D78FFE08@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1D78FFE34(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1D78FFE34(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 16);
  uint64_t v3 = *(void *)(a1 + 16);
  type metadata accessor for MetricsFlags();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3 & v2;
  swift_release();
  if ((v3 & v2) == 0) {
    return 0;
  }
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v2 & ~v3;
  *(void *)uint64_t v1 = v5;
  return v4;
}

uint64_t sub_1D78FFED0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_1D78FFF14(*a1);
  uint64_t result = swift_release();
  *a2 = v3;
  return result;
}

uint64_t sub_1D78FFF14(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 16);
  uint64_t v3 = *(void *)(a1 + 16);
  type metadata accessor for MetricsFlags();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3 & v2;
  swift_retain();
  swift_release();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v3 | v2;
  swift_release();
  *(void *)uint64_t v1 = v5;
  if ((v3 & v2) == 0)
  {
    swift_release();
    return 0;
  }
  return v4;
}

uint64_t sub_1D78FFFC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D7900060(a1, a2, a3, MEMORY[0x1E4FBC7F8]);
}

uint64_t sub_1D78FFFDC(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v5 = sub_1D785DE80();
  return MEMORY[0x1F41862F8](a1, a2, WitnessTable, v5);
}

uint64_t sub_1D7900048(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D7900060(a1, a2, a3, MEMORY[0x1E4FBC7F0]);
}

uint64_t sub_1D7900060(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, unint64_t))
{
  uint64_t WitnessTable = swift_getWitnessTable();
  unint64_t v8 = sub_1D785DE80();
  a4(a1, a2, WitnessTable, v8);
  return swift_release();
}

uint64_t sub_1D79000E4()
{
  sub_1D7A9CB58();
  return swift_release();
}

uint64_t sub_1D7900120(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x1F4184B08](a1, a4, a2, a5, a3);
}

void sub_1D790013C(void *a1@<X8>)
{
  *a1 = *(void *)(*(void *)v1 + 16);
}

BOOL sub_1D790014C(uint64_t a1, uint64_t a2)
{
  return *(void *)(*(void *)a1 + 16) == *(void *)(*(void *)a2 + 16);
}

uint64_t sub_1D7900168@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_1D7910BD0(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

CoreIDVShared::ImageQualityCollector::ISOLanguageCode_optional __swiftcall ImageQualityCollector.ISOLanguageCode.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1D7A9D058();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t ImageQualityCollector.ISOLanguageCode.rawValue.getter()
{
  return qword_1D7AA9E40[*v0];
}

unint64_t sub_1D790021C(char a1)
{
  unint64_t result = 0x656E697272756C62;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x657275736F707865;
      break;
    case 2:
      unint64_t result = 0x7473694464726163;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    case 5:
      unint64_t result = 0x6374695064616568;
      break;
    case 6:
      unint64_t result = 0x6C6C6F5264616568;
      break;
    case 7:
      unint64_t result = 0x77615964616568;
      break;
    case 8:
      unint64_t result = 0x666E6F4365636166;
      break;
    case 9:
    case 12:
    case 13:
    case 15:
      unint64_t result = 0xD000000000000012;
      break;
    case 10:
      unint64_t result = 0xD000000000000016;
      break;
    case 11:
      unint64_t result = 0xD000000000000014;
      break;
    case 14:
      unint64_t result = 0x5465727574706163;
      break;
    case 16:
      unint64_t result = 0xD000000000000010;
      break;
    case 17:
      unint64_t result = 0x6556746567726174;
      break;
    case 18:
      unint64_t result = 0xD000000000000010;
      break;
    case 19:
      unint64_t result = 0x746E656D75636F64;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D7900494(char *a1, char *a2)
{
  return sub_1D799669C(*a1, *a2);
}

uint64_t sub_1D79004A0()
{
  return sub_1D7A9D628();
}

uint64_t sub_1D79004FC()
{
  sub_1D7A9C0B8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D790053C()
{
  return sub_1D7A9D628();
}

CoreIDVShared::ImageQualityCollector::ISOLanguageCode_optional sub_1D7900594(Swift::String *a1)
{
  return ImageQualityCollector.ISOLanguageCode.init(rawValue:)(*a1);
}

void sub_1D79005A0(void *a1@<X8>)
{
  *a1 = qword_1D7AA9E40[*v1];
  a1[1] = 0xE300000000000000;
}

uint64_t sub_1D79005BC(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_1D790021C(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1D790021C(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1D7A9D358();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1D7900648()
{
  char v1 = *v0;
  sub_1D7A9D5D8();
  sub_1D790021C(v1);
  sub_1D7A9C0B8();
  swift_bridgeObjectRelease();
  return sub_1D7A9D628();
}

uint64_t sub_1D79006AC()
{
  sub_1D790021C(*v0);
  sub_1D7A9C0B8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D7900700()
{
  char v1 = *v0;
  sub_1D7A9D5D8();
  sub_1D790021C(v1);
  sub_1D7A9C0B8();
  swift_bridgeObjectRelease();
  return sub_1D7A9D628();
}

uint64_t sub_1D7900760@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D7910D9C();
  *a1 = result;
  return result;
}

unint64_t sub_1D7900790@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1D790021C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

double ImageQualityCollector.init(language:monitor:)@<D0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v5 = *a1;
  unint64_t v6 = sub_1D785F8A8((uint64_t)&unk_1F2F16C28);
  *(_OWORD *)a3 = xmmword_1D7AA9700;
  *(void *)(a3 + 16) = 0xD000000000000028;
  *(void *)(a3 + 24) = 0x80000001D7AC2880;
  *(_OWORD *)(a3 + 32) = xmmword_1D7AA9710;
  *(_OWORD *)(a3 + 48) = xmmword_1D7AA9720;
  *(_OWORD *)(a3 + 64) = xmmword_1D7AA9730;
  *(_DWORD *)(a3 + 80) = 0;
  *(void *)(a3 + 88) = 1;
  double result = 0.042;
  *(_OWORD *)(a3 + 96) = xmmword_1D7AA9740;
  *(_OWORD *)(a3 + 112) = xmmword_1D7AA9750;
  *(unsigned char *)(a3 + 128) = v5;
  *(void *)(a3 + 136) = a2;
  *(void *)(a3 + 144) = v6;
  return result;
}

uint64_t ImageQualityCollector.collectProperties(image:flags:docInfo:selfieInfo:docScanConfig:params:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = MEMORY[0x1F4188790](a1, a2, a3, a4, a5, a6, a7, a8);
  uint64_t v11 = v10;
  uint64_t v430 = v12;
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  uint64_t v444 = v17;
  uint64_t v18 = (void *)v9;
  v441 = v19;
  v511[110] = *MEMORY[0x1E4F143B8];
  uint64_t v438 = type metadata accessor for DIPSignpost.Config(0);
  MEMORY[0x1F4188790](v438, v20, v21, v22, v23, v24, v25, v26);
  v439 = (char *)&v422 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for DIPSignpost(0);
  MEMORY[0x1F4188790](v28 - 8, v29, v30, v31, v32, v33, v34, v35);
  uint64_t v440 = (uint64_t)&v422 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_1D7A9D328();
  uint64_t v436 = *(void *)(v37 - 8);
  uint64_t v437 = v37;
  MEMORY[0x1F4188790](v37, v38, v39, v40, v41, v42, v43, v44);
  v435 = (char *)&v422 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  CGFloat v457 = COERCE_DOUBLE(sub_1D7A9B5F8());
  CGFloat v461 = *(double *)(*(void *)&v457 - 8);
  uint64_t v53 = MEMORY[0x1F4188790](*(void *)&v457, v46, v47, v48, v49, v50, v51, v52);
  *(void *)&long long v458 = (char *)&v422 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v53, v55, v56, v57, v58, v59, v60, v61);
  v450 = (char *)&v422 - v62;
  unint64_t v460 = *v16;
  *(void *)&long long v442 = v16[1];
  *(void *)&long long v434 = v16[2];
  unint64_t v63 = v16[4];
  unint64_t v429 = v16[3];
  CGFloat v64 = *(double *)v14;
  CGFloat v65 = *(double *)(v14 + 8);
  long long v66 = v8[6];
  long long v67 = v8[8];
  long long v473 = v8[7];
  long long v474 = v67;
  long long v68 = v8[2];
  long long v69 = v8[4];
  long long v70 = v8[5];
  long long v469 = v8[3];
  long long v470 = v69;
  long long v471 = v70;
  long long v472 = v66;
  long long v71 = v8[1];
  long long v466 = *v8;
  CGFloat v73 = *(double *)(v14 + 16);
  CGFloat v72 = *(double *)(v14 + 24);
  unint64_t v74 = *(void *)(v14 + 40);
  uint64_t v443 = *(void *)(v14 + 32);
  uint64_t v75 = *(void *)(v14 + 72);
  uint64_t v76 = *(void *)(v14 + 80);
  uint64_t v427 = *(void *)(v14 + 48);
  uint64_t v428 = v75;
  LODWORD(v433) = *(unsigned __int8 *)(v14 + 88);
  unint64_t v77 = v11[1];
  unint64_t v425 = *v11;
  unint64_t v426 = v77;
  unint64_t v432 = v11[2];
  uint64_t v475 = *((void *)v8 + 18);
  long long v467 = v71;
  long long v468 = v68;
  v452 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ImageQualityMetrics()), sel_init);
  sub_1D790FA68(v511);
  id v78 = v18;
  uint64_t v79 = MEMORY[0x1E4FBC860];
  sub_1D785F9AC(MEMORY[0x1E4FBC860]);
  id v80 = objc_allocWithZone(MEMORY[0x1E4F45890]);
  type metadata accessor for VNImageOption(0);
  sub_1D7911358(&qword_1EA842010, 255, type metadata accessor for VNImageOption);
  int v81 = (void *)sub_1D7A9BE98();
  swift_bridgeObjectRelease();
  id v447 = objc_msgSend(v80, sel_initWithCIImage_options_, v78, v81);

  id v431 = v78;
  uint64_t v465 = v79;
  id v449 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F45878]), sel_init);
  id v448 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F45888]), sel_init);
  id v451 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F45780]), sel_init);
  id v456 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F457A0]), sel_init);
  id v455 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F457A8]), sel_init);
  id v462 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F456E0]), sel_init);
  id v454 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F45768]), sel_init);
  id v453 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F457C8]), sel_init);
  id v446 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F45778]), sel_init);
  id v445 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F45918]), sel_init);
  v459 = (double *)v74;
  if (v74 >= 2)
  {
    uint64_t v82 = *(void *)(v74 + 16);
    if (v82)
    {
      unint64_t v424 = v63;
      *(void *)&long long v494 = v79;
      swift_bridgeObjectRetain();
      sub_1D7A9CDC8();
      uint64_t v83 = self;
      int v84 = (double *)(v74 + 56);
      do
      {
        id v85 = objc_msgSend(v83, sel_observationWithBoundingBox_, *(v84 - 3), *(v84 - 2), *(v84 - 1), *v84);
        sub_1D7A9CD98();
        sub_1D7A9CDD8();
        sub_1D7A9CDE8();
        sub_1D7A9CDA8();
        v84 += 4;
        --v82;
      }
      while (v82);
      sub_1D78C4038(0, &qword_1EA843BF0);
      uint64_t v86 = (void *)sub_1D7A9C2F8();
      objc_msgSend(v451, sel_setInputFaceObservations_, v86);

      unsigned __int8 v87 = (void *)sub_1D7A9C2F8();
      swift_release();
      objc_msgSend(v456, sel_setInputFaceObservations_, v87);

      unint64_t v74 = (unint64_t)v459;
      if (!*((void *)v459 + 2))
      {
        __break(1u);
        goto LABEL_262;
      }
      CGFloat v88 = v459[4];
      CGFloat v89 = v459[5];
      CGFloat v90 = v459[6];
      CGFloat v91 = v459[7];
      swift_bridgeObjectRelease();
      v527.origin.double x = 0.0;
      v527.origin.double y = 0.0;
      v527.size.double width = 1.0;
      v527.size.double height = 1.0;
      v512.origin.double x = v88;
      v512.origin.double y = v89;
      v512.size.double width = v90;
      v512.size.double height = v91;
      CGRect v513 = CGRectIntersection(v512, v527);
      double x = v513.origin.x;
      double y = v513.origin.y;
      double width = v513.size.width;
      double height = v513.size.height;
      objc_msgSend(v449, sel_setRegionOfInterest_);
      objc_msgSend(v448, sel_setRegionOfInterest_, x, y, width, height);
      unint64_t v63 = v424;
    }
  }
  uint64_t v444 = *(void *)(v444 + 16);
  uint64_t v96 = v452;
  uint64_t v97 = *(void *)&v457;
  if ((qword_1EA841E28 & ~v444) == 0)
  {
    if (v74 == 1)
    {
      uint64_t v98 = 0;
      uint64_t v76 = 0;
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v98 = v428;
    }
    uint64_t v99 = &v96[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_livenessChute];
    swift_beginAccess();
    *(void *)uint64_t v99 = v98;
    *((void *)v99 + 1) = v76;
    swift_bridgeObjectRelease();
  }
  uint64_t v100 = v444;
  if ((qword_1EA841D08 & ~v444) == 0)
  {
    if (v74 == 1) {
      char v101 = 2;
    }
    else {
      char v101 = v433;
    }
    uint64_t v102 = &v96[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_isFlashEnabled];
    swift_beginAccess();
    *uint64_t v102 = v101;
  }
  if ((qword_1EA841CE8 & ~v100) == 0)
  {
    if (v460 == 1 || !v63)
    {
      if (qword_1EBDF9DC8 != -1) {
        swift_once();
      }
      uint64_t v104 = __swift_project_value_buffer(v97, (uint64_t)qword_1EBDFBE70);
      swift_beginAccess();
      CGFloat v105 = v461;
      unint64_t v106 = v450;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)&v461 + 16))(v450, v104, v97);
      sub_1D7921FA8();
      (*(void (**)(char *, uint64_t))(*(void *)&v105 + 8))(v106, v97);
    }
    else
    {
      if (__PAIR128__(v63, v429) == v467) {
        char v103 = 1;
      }
      else {
        char v103 = sub_1D7A9D358();
      }
      char v107 = v103 & 1;
      uint64_t v108 = &v96[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_isAutoCaptured];
      swift_beginAccess();
      *uint64_t v108 = v107;
    }
  }
  if ((qword_1EA841A08 & ~v100) == 0)
  {
    if (v460 >= 2
      && (uint64_t v109 = *(void *)(v460 + 16), v109 == (void)v466)
      && (void)v442
      && *(void *)(v442 + 16) == v109)
    {
      long long v500 = v472;
      long long v501 = v473;
      long long v502 = v474;
      long long v496 = v468;
      long long v497 = v469;
      long long v498 = v470;
      long long v499 = v471;
      long long v494 = v466;
      uint64_t v503 = v475;
      long long v495 = v467;
      sub_1D7904480(v460, v442);
      float v111 = v110;
      long long v500 = v472;
      long long v501 = v473;
      long long v502 = v474;
      long long v496 = v468;
      long long v497 = v469;
      long long v498 = v470;
      long long v499 = v471;
      long long v494 = v466;
      uint64_t v503 = v475;
      long long v495 = v467;
      uint64_t v113 = (uint64_t)v435;
      uint64_t v112 = v436;
      uint64_t v114 = v437;
      (*(void (**)(char *, void, uint64_t))(v436 + 104))(v435, *MEMORY[0x1E4FBBEB0], v437);
      unint64_t v115 = sub_1D7904644(2, v113, v111);
      uint64_t v116 = v113;
      uint64_t v97 = *(void *)&v457;
      (*(void (**)(uint64_t, uint64_t))(v112 + 8))(v116, v114);
      uint64_t v117 = &v96[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_cardDistortion];
      swift_beginAccess();
      *(_DWORD *)uint64_t v117 = v115;
      v117[4] = BYTE4(v115) & 1;
    }
    else
    {
      if (qword_1EBDF9DC8 != -1) {
        swift_once();
      }
      uint64_t v118 = __swift_project_value_buffer(v97, (uint64_t)qword_1EBDFBE70);
      swift_beginAccess();
      CGFloat v119 = v461;
      uint64_t v120 = v450;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)&v461 + 16))(v450, v118, v97);
      sub_1D792212C();
      (*(void (**)(char *, uint64_t))(*(void *)&v119 + 8))(v120, v97);
    }
  }
  if ((qword_1EA841D68 & ~v100) == 0)
  {
    if (v460 >= 2 && (uint64_t v121 = *(void *)(v460 + 16), v121 == (void)v466))
    {
      unint64_t v122 = MEMORY[0x1E4FBC860];
      if (v121)
      {
        double v123 = v73;
        double v124 = v72;
        double v125 = v65;
        double v126 = v64;
        *(void *)&long long v494 = MEMORY[0x1E4FBC860];
        sub_1D7A9CDC8();
        uint64_t v127 = (objc_class *)type metadata accessor for IQPoint();
        uint64_t v128 = (double *)(v460 + 40);
        do
        {
          double v129 = *(v128 - 1);
          double v130 = *v128;
          unint64_t v131 = (char *)objc_allocWithZone(v127);
          float v132 = v129;
          *(float *)&v131[OBJC_IVAR____TtC13CoreIDVShared7IQPoint_x] = v132;
          float v133 = v130;
          *(float *)&v131[OBJC_IVAR____TtC13CoreIDVShared7IQPoint_y] = v133;
          v463.receiver = v131;
          v463.super_class = v127;
          objc_msgSendSuper2(&v463, sel_init);
          sub_1D7A9CD98();
          sub_1D7A9CDD8();
          sub_1D7A9CDE8();
          sub_1D7A9CDA8();
          v128 += 2;
          --v121;
        }
        while (v121);
        unint64_t v122 = v494;
        uint64_t v96 = v452;
        uint64_t v100 = v444;
        unint64_t v74 = (unint64_t)v459;
        CGFloat v64 = v126;
        CGFloat v65 = v125;
        CGFloat v72 = v124;
        CGFloat v73 = v123;
      }
      long long v500 = v472;
      long long v501 = v473;
      long long v502 = v474;
      long long v496 = v468;
      long long v497 = v469;
      long long v498 = v470;
      long long v499 = v471;
      long long v494 = v466;
      uint64_t v503 = v475;
      long long v495 = v467;
      uint64_t v134 = sub_1D7904A9C(v122, 16);
      swift_bridgeObjectRelease();
      uint64_t v135 = (uint64_t *)&v96[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_originalVertices];
      swift_beginAccess();
      *uint64_t v135 = v134;
      swift_bridgeObjectRelease();
      uint64_t v97 = *(void *)&v457;
    }
    else
    {
      if (qword_1EBDF9DC8 != -1) {
        swift_once();
      }
      uint64_t v136 = __swift_project_value_buffer(v97, (uint64_t)qword_1EBDFBE70);
      swift_beginAccess();
      CGFloat v137 = v461;
      uint64_t v138 = v450;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)&v461 + 16))(v450, v136, v97);
      sub_1D79222B0();
      (*(void (**)(char *, uint64_t))(*(void *)&v137 + 8))(v138, v97);
    }
  }
  if ((qword_1EA841D88 & ~v100) == 0)
  {
    if (v460 != 1 && (void)v442 && (uint64_t v139 = *(void *)(v442 + 16), v139 == (void)v466))
    {
      unint64_t v140 = MEMORY[0x1E4FBC860];
      if (v139)
      {
        double v141 = v73;
        double v142 = v72;
        double v143 = v65;
        double v144 = v64;
        *(void *)&long long v494 = MEMORY[0x1E4FBC860];
        sub_1D7A9CDC8();
        uint64_t v145 = (objc_class *)type metadata accessor for IQPoint();
        uint64_t v146 = (double *)(v442 + 40);
        do
        {
          double v147 = *(v146 - 1);
          double v148 = *v146;
          uint64_t v149 = (char *)objc_allocWithZone(v145);
          float v150 = v147;
          *(float *)&v149[OBJC_IVAR____TtC13CoreIDVShared7IQPoint_x] = v150;
          float v151 = v148;
          *(float *)&v149[OBJC_IVAR____TtC13CoreIDVShared7IQPoint_y] = v151;
          v464.receiver = v149;
          v464.super_class = v145;
          objc_msgSendSuper2(&v464, sel_init);
          sub_1D7A9CD98();
          sub_1D7A9CDD8();
          sub_1D7A9CDE8();
          sub_1D7A9CDA8();
          v146 += 2;
          --v139;
        }
        while (v139);
        unint64_t v140 = v494;
        uint64_t v96 = v452;
        uint64_t v100 = v444;
        unint64_t v74 = (unint64_t)v459;
        CGFloat v64 = v144;
        CGFloat v65 = v143;
        CGFloat v72 = v142;
        CGFloat v73 = v141;
      }
      long long v500 = v472;
      long long v501 = v473;
      long long v502 = v474;
      long long v496 = v468;
      long long v497 = v469;
      long long v498 = v470;
      long long v499 = v471;
      long long v494 = v466;
      uint64_t v503 = v475;
      long long v495 = v467;
      uint64_t v152 = sub_1D7904A9C(v140, 17);
      swift_bridgeObjectRelease();
      unint64_t v153 = (uint64_t *)&v96[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_targetVertices];
      swift_beginAccess();
      uint64_t *v153 = v152;
      swift_bridgeObjectRelease();
      uint64_t v97 = *(void *)&v457;
    }
    else
    {
      if (qword_1EBDF9DC8 != -1) {
        swift_once();
      }
      uint64_t v154 = __swift_project_value_buffer(v97, (uint64_t)qword_1EBDFBE70);
      swift_beginAccess();
      CGFloat v155 = v461;
      uint64_t v156 = v450;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)&v461 + 16))(v450, v154, v97);
      sub_1D7922434();
      (*(void (**)(char *, uint64_t))(*(void *)&v155 + 8))(v156, v97);
    }
  }
  CGFloat v157 = v461;
  if ((qword_1EA841B68 & ~v100) == 0)
  {
    float v158 = *(float *)&v434;
    if ((v460 == 1 || (v434 & 0x100000000) != 0)
      && (v74 == 1 || (float v158 = *(float *)&v427, (v427 & 0x100000000) != 0)))
    {
      if (qword_1EBDF9DC8 != -1) {
        swift_once();
      }
      uint64_t v165 = __swift_project_value_buffer(v97, (uint64_t)qword_1EBDFBE70);
      swift_beginAccess();
      unint64_t v166 = v450;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)&v157 + 16))(v450, v165, v97);
      sub_1D79225B8();
      (*(void (**)(char *, uint64_t))(*(void *)&v157 + 8))(v166, v97);
    }
    else
    {
      long long v500 = v472;
      long long v501 = v473;
      long long v502 = v474;
      long long v496 = v468;
      long long v497 = v469;
      long long v498 = v470;
      long long v499 = v471;
      long long v494 = v466;
      float v159 = v158;
      uint64_t v503 = v475;
      long long v495 = v467;
      uint64_t v161 = (uint64_t)v435;
      uint64_t v160 = v436;
      uint64_t v162 = v437;
      (*(void (**)(char *, void, uint64_t))(v436 + 104))(v435, *MEMORY[0x1E4FBBEB0], v437);
      unint64_t v163 = sub_1D7904644(14, v161, v159);
      (*(void (**)(uint64_t, uint64_t))(v160 + 8))(v161, v162);
      uint64_t v164 = &v96[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_captureTime];
      swift_beginAccess();
      *(_DWORD *)uint64_t v164 = v163;
      v164[4] = BYTE4(v163) & 1;
    }
  }
  unsigned __int8 v87 = (void *)v458;
  if ((qword_1EA8419C8 & ~v100) == 0)
  {
    id v167 = v449;
    MEMORY[0x1D947B060]();
    if (*(void *)((v465 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v465 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1D7A9C368();
    }
    sub_1D7A9C3A8();
    sub_1D7A9C338();
  }
  if ((qword_1EA8419E8 & ~v100) == 0)
  {
    id v168 = v448;
    MEMORY[0x1D947B060]();
    if (*(void *)((v465 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v465 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1D7A9C368();
    }
    sub_1D7A9C3A8();
    sub_1D7A9C338();
  }
  if ((qword_1EA841B88 & ~v100) == 0)
  {
    uint64_t v169 = v451;
    objc_msgSend(v451, sel_setRevision_, 3);
    id v170 = v169;
    MEMORY[0x1D947B060]();
    if (*(void *)((v465 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v465 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1D7A9C368();
    }
    sub_1D7A9C3A8();
    sub_1D7A9C338();
  }
  uint64_t v171 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF99C0);
  uint64_t v172 = swift_allocObject();
  long long v434 = xmmword_1D7AA9760;
  *(_OWORD *)(v172 + 16) = xmmword_1D7AA9760;
  type metadata accessor for MetricsFlags();
  *(void *)(v172 + 32) = swift_initStaticObject();
  *(void *)(v172 + 40) = swift_initStaticObject();
  *(void *)(v172 + 48) = swift_initStaticObject();
  *(void *)&long long v494 = v172;
  sub_1D7A9C338();
  uint64_t v173 = sub_1D7910BD0(v494);
  swift_bridgeObjectRelease();
  uint64_t v174 = *(void *)(v173 + 16);
  swift_release();
  if ((v174 & v100) != 0)
  {
    id v175 = v456;
    MEMORY[0x1D947B060]();
    if (*(void *)((v465 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v465 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1D7A9C368();
    }
    sub_1D7A9C3A8();
    sub_1D7A9C338();
    unsigned __int8 v87 = (void *)v458;
  }
  uint64_t v176 = swift_allocObject();
  long long v442 = xmmword_1D7AA91C0;
  *(_OWORD *)(v176 + 16) = xmmword_1D7AA91C0;
  *(void *)(v176 + 32) = swift_initStaticObject();
  *(void *)(v176 + 40) = swift_initStaticObject();
  *(void *)&long long v494 = v176;
  sub_1D7A9C338();
  uint64_t v177 = sub_1D7910BD0(v494);
  swift_bridgeObjectRelease();
  uint64_t v178 = *(void *)(v177 + 16);
  swift_release();
  if ((v178 & v100) != 0 || (qword_1EA841C08 & ~v100) == 0 && v459 != (double *)1 && (v443 & 1) == 0)
  {
    uint64_t v179 = v455;
    objc_msgSend(v455, sel_setRevision_, 3);
    id v180 = v179;
    MEMORY[0x1D947B060]();
    if (*(void *)((v465 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v465 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1D7A9C368();
    }
    sub_1D7A9C3A8();
    sub_1D7A9C338();
    unsigned __int8 v87 = (void *)v458;
  }
  uint64_t v181 = swift_allocObject();
  *(_OWORD *)(v181 + 16) = xmmword_1D7AA9770;
  *(void *)(v181 + 32) = swift_initStaticObject();
  *(void *)(v181 + 40) = swift_initStaticObject();
  *(void *)(v181 + 48) = swift_initStaticObject();
  *(void *)(v181 + 56) = swift_initStaticObject();
  *(void *)(v181 + 64) = swift_initStaticObject();
  *(void *)(v181 + 72) = swift_initStaticObject();
  *(void *)(v181 + 80) = swift_initStaticObject();
  *(void *)(v181 + 88) = swift_initStaticObject();
  *(void *)&long long v494 = v181;
  sub_1D7A9C338();
  uint64_t v182 = sub_1D7910BD0(v494);
  swift_bridgeObjectRelease();
  uint64_t v183 = *(void *)(v182 + 16);
  swift_release();
  unint64_t v460 = v171;
  if ((v183 & v100) == 0)
  {
    uint64_t v433 = 0;
    goto LABEL_103;
  }
  *(void *)&long long v494 = 0;
  if (!objc_msgSend(v462, sel_setRevision_error_, 3737841666, &v494))
  {
    id v185 = (id)v494;
    uint64_t v86 = (void *)sub_1D7A9AE58();

    swift_willThrow();
    if (qword_1EBDF9DC8 == -1)
    {
LABEL_96:
      CGFloat v186 = v457;
      uint64_t v187 = __swift_project_value_buffer(*(uint64_t *)&v457, (uint64_t)qword_1EBDFBE70);
      swift_beginAccess();
      CGFloat v188 = v461;
      (*(void (**)(void *, uint64_t, CGFloat))(*(void *)&v461 + 16))(v87, v187, COERCE_CGFLOAT(*(void *)&v186));
      id v189 = v86;
      id v190 = v86;
      uint64_t v191 = sub_1D7A9B5D8();
      os_log_type_t v192 = sub_1D7A9C758();
      if (os_log_type_enabled(v191, v192))
      {
        uint64_t v193 = (uint8_t *)swift_slowAlloc();
        uint64_t v194 = swift_slowAlloc();
        *(void *)&long long v494 = v194;
        *(_DWORD *)uint64_t v193 = 136315138;
        *(void *)&long long v458 = v193 + 4;
        swift_getErrorValue();
        uint64_t v195 = sub_1D7A9D548();
        *(void *)&long long v484 = sub_1D7923300(v195, v196, (uint64_t *)&v494);
        sub_1D7A9C9E8();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1D7853000, v191, v192, "Failed to set private faceAttributes revision: %s, using default revision", v193, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D947D740](v194, -1, -1);
        MEMORY[0x1D947D740](v193, -1, -1);

        (*(void (**)(void *, CGFloat))(*(void *)&v461 + 8))(v87, COERCE_CGFLOAT(*(void *)&v457));
      }
      else
      {

        (*(void (**)(void *, CGFloat))(*(void *)&v188 + 8))(v87, COERCE_CGFLOAT(*(void *)&v186));
      }
      uint64_t v433 = 0;
      uint64_t v100 = v444;
      uint64_t v96 = v452;
      goto LABEL_100;
    }
LABEL_262:
    swift_once();
    goto LABEL_96;
  }
  id v184 = (id)v494;
  uint64_t v433 = 0;
LABEL_100:
  id v197 = v462;
  MEMORY[0x1D947B060]();
  if (*(void *)((v465 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v465 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1D7A9C368();
  }
  sub_1D7A9C3A8();
  sub_1D7A9C338();
LABEL_103:
  uint64_t v198 = swift_allocObject();
  *(_OWORD *)(v198 + 16) = xmmword_1D7AA9780;
  *(void *)(v198 + 32) = swift_initStaticObject();
  *(void *)(v198 + 40) = swift_initStaticObject();
  *(void *)(v198 + 48) = swift_initStaticObject();
  *(void *)(v198 + 56) = swift_initStaticObject();
  *(void *)(v198 + 64) = swift_initStaticObject();
  *(void *)&long long v494 = v198;
  sub_1D7A9C338();
  uint64_t v199 = sub_1D7910BD0(v494);
  swift_bridgeObjectRelease();
  uint64_t v200 = *(void *)(v199 + 16);
  swift_release();
  if ((v200 & v100) != 0)
  {
    uint64_t v201 = v454;
    objc_msgSend(v454, sel_setRevision_, 3);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA843BE0);
    uint64_t v202 = swift_allocObject();
    *(_OWORD *)(v202 + 16) = xmmword_1D7AA08E0;
    uint64_t v203 = (void *)*MEMORY[0x1E4F45B98];
    *(void *)(v202 + 32) = *MEMORY[0x1E4F45B98];
    type metadata accessor for VNBarcodeSymbology(0);
    id v204 = v203;
    uint64_t v205 = (void *)sub_1D7A9C2F8();
    swift_bridgeObjectRelease();
    objc_msgSend(v201, sel_setSymbologies_, v205);

    id v206 = v201;
    MEMORY[0x1D947B060]();
    if (*(void *)((v465 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v465 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1D7A9C368();
    }
    sub_1D7A9C3A8();
    sub_1D7A9C338();
  }
  uint64_t v207 = swift_allocObject();
  long long v458 = xmmword_1D7AA9790;
  *(_OWORD *)(v207 + 16) = xmmword_1D7AA9790;
  *(void *)(v207 + 32) = swift_initStaticObject();
  *(void *)(v207 + 40) = swift_initStaticObject();
  *(void *)(v207 + 48) = swift_initStaticObject();
  *(void *)(v207 + 56) = swift_initStaticObject();
  *(void *)&long long v494 = v207;
  sub_1D7A9C338();
  uint64_t v208 = sub_1D7910BD0(v494);
  swift_bridgeObjectRelease();
  uint64_t v209 = *(void *)(v208 + 16);
  swift_release();
  if (v209 & v100) != 0 || (qword_1EA841C08 & ~v100) == 0 && (v459 == (double *)1 || (v443))
  {
    LODWORD(v210) = v470;
    uint64_t v211 = v453;
    objc_msgSend(v453, sel_setQuadratureTolerance_, v210);
    LODWORD(v212) = HIDWORD(v470);
    objc_msgSend(v211, sel_setMinimumSize_, v212);
    LODWORD(v213) = DWORD1(v470);
    objc_msgSend(v211, sel_setMinimumAspectRatio_, v213);
    LODWORD(v214) = DWORD2(v470);
    objc_msgSend(v211, sel_setMaximumAspectRatio_, v214);
    LODWORD(v215) = v471;
    objc_msgSend(v211, sel_setMinimumConfidence_, v215);
    objc_msgSend(v211, sel_setMaximumObservations_, *((void *)&v471 + 1));
    id v216 = v211;
    MEMORY[0x1D947B060]();
    if (*(void *)((v465 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v465 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1D7A9C368();
    }
    sub_1D7A9C3A8();
    sub_1D7A9C338();
  }
  if ((qword_1EA841DC8 & ~v100) == 0)
  {
    id v217 = v446;
    MEMORY[0x1D947B060]();
    if (*(void *)((v465 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v465 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1D7A9C368();
    }
    sub_1D7A9C3A8();
    sub_1D7A9C338();
  }
  if ((qword_1EA841E08 & ~v100) == 0)
  {
    uint64_t v218 = v445;
    objc_msgSend(v445, sel_setRecognitionLevel_, 0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF7930);
    uint64_t v219 = swift_allocObject();
    *(_OWORD *)(v219 + 16) = xmmword_1D7AA08E0;
    *(void *)(v219 + 32) = qword_1D7AA9E40[(char)v474];
    *(void *)(v219 + 40) = 0xE300000000000000;
    unint64_t v220 = (void *)sub_1D7A9C2F8();
    swift_bridgeObjectRelease();
    objc_msgSend(v218, sel_setRecognitionLanguages_, v220);

    id v221 = v218;
    MEMORY[0x1D947B060]();
    if (*(void *)((v465 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v465 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1D7A9C368();
    }
    sub_1D7A9C3A8();
    sub_1D7A9C338();
  }
  if (qword_1EA841828 != -1) {
    swift_once();
  }
  uint64_t v222 = __swift_project_value_buffer(v438, (uint64_t)qword_1EA847E40);
  uint64_t v223 = v439;
  sub_1D78912C4(v222, (uint64_t)v439);
  uint64_t v224 = v440;
  DIPSignpost.init(_:)(v223, v440);
  sub_1D78C4038(0, &qword_1EA843BE8);
  swift_bridgeObjectRetain();
  char v225 = (void *)sub_1D7A9C2F8();
  swift_bridgeObjectRelease();
  *(void *)&long long v494 = 0;
  unsigned int v226 = objc_msgSend(v447, sel_performRequests_error_, v225, &v494);

  if (v226)
  {
    id v227 = (id)v494;
    DIPSignpost.end(workflowID:isBackground:)((Swift::String_optional)0, (Swift::Bool_optional)2);
    sub_1D78AB48C(v224);
    if ((qword_1EA8419C8 & ~v100) == 0)
    {
      long long v500 = v472;
      long long v501 = v473;
      long long v502 = v474;
      long long v496 = v468;
      long long v497 = v469;
      long long v498 = v470;
      long long v499 = v471;
      long long v494 = v466;
      uint64_t v503 = v475;
      long long v495 = v467;
      sub_1D7904EAC(v449);
      uint64_t v229 = v228;
      uint64_t v230 = &v96[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_blurriness];
      swift_beginAccess();
      *(_DWORD *)uint64_t v230 = v229;
      v230[4] = BYTE4(v229) & 1;
    }
    if ((qword_1EA8419E8 & ~v100) == 0)
    {
      long long v500 = v472;
      long long v501 = v473;
      long long v502 = v474;
      long long v496 = v468;
      long long v497 = v469;
      long long v498 = v470;
      long long v499 = v471;
      long long v494 = v466;
      uint64_t v503 = v475;
      long long v495 = v467;
      sub_1D79053A4(v448);
      uint64_t v232 = v231;
      uint64_t v233 = &v96[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_exposure];
      swift_beginAccess();
      *(_DWORD *)uint64_t v233 = v232;
      v233[4] = BYTE4(v232) & 1;
    }
    if ((qword_1EA841B88 & ~v100) == 0)
    {
      long long v500 = v472;
      long long v501 = v473;
      long long v502 = v474;
      long long v496 = v468;
      long long v497 = v469;
      long long v498 = v470;
      long long v499 = v471;
      long long v494 = v466;
      uint64_t v503 = v475;
      long long v495 = v467;
      unint64_t v234 = sub_1D790589C(v451);
      uint64_t v235 = &v96[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_faceCaptureQuality];
      swift_beginAccess();
      *(_DWORD *)uint64_t v235 = v234;
      v235[4] = BYTE4(v234) & 1;
    }
    uint64_t v236 = swift_allocObject();
    *(_OWORD *)(v236 + 16) = v434;
    *(void *)(v236 + 32) = swift_initStaticObject();
    *(void *)(v236 + 40) = swift_initStaticObject();
    *(void *)(v236 + 48) = swift_initStaticObject();
    *(void *)&long long v494 = v236;
    sub_1D7A9C338();
    uint64_t v237 = sub_1D7910BD0(v494);
    swift_bridgeObjectRelease();
    uint64_t v238 = *(void *)(v237 + 16);
    swift_release();
    if ((v238 & v100) != 0)
    {
      long long v500 = v472;
      long long v501 = v473;
      long long v502 = v474;
      long long v496 = v468;
      long long v497 = v469;
      long long v498 = v470;
      long long v499 = v471;
      long long v494 = v466;
      uint64_t v503 = v475;
      long long v495 = v467;
      unint64_t v239 = sub_1D7905D28(v456);
      int v242 = v239;
      int v244 = v243;
      uint64_t v245 = HIDWORD(v239) & 1;
      uint64_t v246 = HIDWORD(v243) & 1;
      if ((qword_1EA841A68 & v100) == qword_1EA841A68) {
        int v247 = v240;
      }
      else {
        int v247 = 0;
      }
      if ((qword_1EA841A68 & v100) == qword_1EA841A68) {
        char v248 = v241 & 1;
      }
      else {
        char v248 = 1;
      }
      v249 = &v452[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_headPitch];
      swift_beginAccess();
      *(_DWORD *)v249 = v247;
      v249[4] = v248;
      uint64_t v96 = v452;
      if ((qword_1EA841A88 & v100) == qword_1EA841A88) {
        int v250 = v244;
      }
      else {
        int v250 = 0;
      }
      if ((qword_1EA841A88 & v100) != qword_1EA841A88) {
        LOBYTE(v246) = 1;
      }
      char v251 = &v452[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_headRoll];
      swift_beginAccess();
      *(_DWORD *)char v251 = v250;
      v251[4] = v246;
      if ((qword_1EA841AA8 & v100) == qword_1EA841AA8) {
        int v252 = v242;
      }
      else {
        int v252 = 0;
      }
      if ((qword_1EA841AA8 & v100) != qword_1EA841AA8) {
        LOBYTE(v245) = 1;
      }
      unint64_t v253 = &v96[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_headYaw];
      swift_beginAccess();
      *(_DWORD *)unint64_t v253 = v252;
      v253[4] = v245;
    }
    if ((qword_1EA841C48 & ~v100) == 0)
    {
      if ((unint64_t)v459 >= 2 && (uint64_t v254 = *((void *)v459 + 2)) != 0)
      {
        uint64_t v255 = OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_numFaces;
        swift_beginAccess();
        char v256 = 0;
        *(void *)&v96[v255] = v254;
      }
      else
      {
        LOBYTE(v271) = v432;
        if (v432 == 1)
        {
          unsigned int v272 = 0;
          unsigned int v273 = 0;
          LOBYTE(v274) = 1;
        }
        else
        {
          unsigned int v273 = v425;
          unsigned int v272 = v426;
          uint64_t v274 = HIDWORD(v425) & 1;
          uint64_t v271 = HIDWORD(v426) & 1;
        }
        LOBYTE(v494) = v271;
        uint64_t v275 = sub_1D79064CC(v455, v273 | ((unint64_t)v274 << 32), v272 | ((unint64_t)v271 << 32));
        char v256 = v276 & 1;
        uint64_t v255 = OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_numFaces;
        swift_beginAccess();
        *(void *)&v96[v255] = v275;
      }
      v96[v255 + 8] = v256;
    }
    if ((qword_1EA841C28 & ~v100) == 0)
    {
      long long v500 = v472;
      long long v501 = v473;
      long long v502 = v474;
      long long v496 = v468;
      long long v497 = v469;
      uint64_t v503 = v475;
      long long v498 = v470;
      long long v499 = v471;
      long long v494 = v466;
      long long v495 = v467;
      v277 = sub_1D7906A48(v455);
      uint64_t v278 = (char **)&v96[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_faceConfidences];
      swift_beginAccess();
      *uint64_t v278 = v277;
      swift_bridgeObjectRelease();
    }
    if ((qword_1EA841A28 & ~v100) != 0)
    {
LABEL_174:
      if ((qword_1EA841A48 & ~v100) == 0)
      {
        long long v500 = v472;
        long long v501 = v473;
        long long v502 = v474;
        long long v496 = v468;
        long long v497 = v469;
        uint64_t v503 = v475;
        long long v498 = v470;
        long long v499 = v471;
        long long v494 = v466;
        long long v495 = v467;
        char v291 = (char)v459;
        if (v459 == (double *)1)
        {
          CGFloat v292 = 0.0;
          CGFloat v293 = 0.0;
          CGFloat v294 = 0.0;
          CGFloat v295 = 0.0;
        }
        else
        {
          char v291 = v443 & 1;
          CGFloat v292 = v64;
          CGFloat v293 = v65;
          CGFloat v294 = v73;
          CGFloat v295 = v72;
        }
        *(CGFloat *)v507 = v292;
        *(CGFloat *)&v507[1] = v293;
        *(CGFloat *)&v507[2] = v294;
        *(CGFloat *)&v507[3] = v295;
        char v508 = v291;
        unint64_t v296 = sub_1D790763C(v462, (uint64_t)v507);
        long long v297 = &v96[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_faceCenteredRatio];
        swift_beginAccess();
        *(_DWORD *)long long v297 = v296;
        v297[4] = BYTE4(v296) & 1;
      }
      if ((qword_1EA841AC8 & ~v100) == 0)
      {
        long long v500 = v472;
        long long v501 = v473;
        long long v502 = v474;
        long long v496 = v468;
        long long v497 = v469;
        uint64_t v503 = v475;
        long long v498 = v470;
        long long v499 = v471;
        long long v494 = v466;
        long long v495 = v467;
        unint64_t v298 = sub_1D7907C20(v462);
        long long v299 = &v96[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_blinkingConfidence];
        swift_beginAccess();
        *(_DWORD *)long long v299 = v298;
        v299[4] = BYTE4(v298) & 1;
      }
      uint64_t v300 = swift_allocObject();
      *(_OWORD *)(v300 + 16) = v442;
      *(void *)(v300 + 32) = swift_initStaticObject();
      *(void *)(v300 + 40) = swift_initStaticObject();
      *(void *)&long long v494 = v300;
      sub_1D7A9C338();
      uint64_t v301 = sub_1D7910BD0(v494);
      swift_bridgeObjectRelease();
      uint64_t v302 = *(void *)(v301 + 16);
      swift_release();
      if ((v302 & v100) != 0)
      {
        long long v500 = v472;
        long long v501 = v473;
        long long v502 = v474;
        long long v496 = v468;
        long long v497 = v469;
        uint64_t v503 = v475;
        long long v498 = v470;
        long long v499 = v471;
        long long v494 = v466;
        long long v495 = v467;
        unint64_t v303 = sub_1D790819C(v462);
        uint64_t v305 = v304;
        v306 = &v96[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_sunglassesConfidence];
        swift_beginAccess();
        *(_DWORD *)v306 = v303;
        v306[4] = BYTE4(v303) & 1;
        v307 = &v96[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_prescriptionConfidence];
        swift_beginAccess();
        *(_DWORD *)v307 = v305;
        v307[4] = BYTE4(v305) & 1;
      }
      if ((qword_1EA841B28 & ~v100) == 0)
      {
        long long v500 = v472;
        long long v501 = v473;
        long long v502 = v474;
        long long v496 = v468;
        long long v497 = v469;
        uint64_t v503 = v475;
        long long v498 = v470;
        long long v499 = v471;
        long long v494 = v466;
        long long v495 = v467;
        unint64_t v308 = sub_1D7908870(v462);
        v309 = &v96[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_facemaskConfidence];
        swift_beginAccess();
        *(_DWORD *)v309 = v308;
        v309[4] = BYTE4(v308) & 1;
      }
      if ((qword_1EA841B48 & ~v100) == 0)
      {
        long long v500 = v472;
        long long v501 = v473;
        long long v502 = v474;
        long long v496 = v468;
        long long v497 = v469;
        uint64_t v503 = v475;
        long long v498 = v470;
        long long v499 = v471;
        long long v494 = v466;
        long long v495 = v467;
        v310 = v462;
        unint64_t v311 = sub_1D7908DEC(v462);
        v312 = &v96[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_headgearConfidence];
        swift_beginAccess();
        *(_DWORD *)v312 = v311;
        v312[4] = BYTE4(v311) & 1;
        long long v500 = v472;
        long long v501 = v473;
        long long v502 = v474;
        long long v496 = v468;
        long long v497 = v469;
        uint64_t v503 = v475;
        long long v498 = v470;
        long long v499 = v471;
        long long v494 = v466;
        long long v495 = v467;
        v313 = sub_1D790936C(v310);
        v314 = (char **)&v96[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_headgearConfidences];
        swift_beginAccess();
        *v314 = v313;
        swift_bridgeObjectRelease();
      }
      if ((qword_1EA841C88 & ~v100) == 0)
      {
        uint64_t v315 = sub_1D7909790(v462);
        char v317 = v316;
        v318 = &v96[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_skinTone];
        swift_beginAccess();
        *(void *)v318 = v315;
        v318[8] = v317 & 1;
      }
      if ((qword_1EA841C08 & ~v100) == 0 && v459 != (double *)1 && (v443 & 1) == 0)
      {
        if (v459 && *((void *)v459 + 2))
        {
          v319 = v459 + 4;
          CGFloat v321 = v459[5];
          CGFloat v320 = v459[6];
          v322 = v459 + 7;
        }
        else
        {
          sub_1D7909F80(v462, (uint64_t)v504);
          v319 = (CGFloat *)v505;
          sub_1D7871D78((uint64_t)v504, (uint64_t)v505, &qword_1EA843BD0);
          if (v506[8]) {
            goto LABEL_198;
          }
          CGFloat v321 = *(double *)&v505[1];
          CGFloat v320 = *(double *)&v505[2];
          v322 = (CGFloat *)v506;
        }
        CGFloat v323 = *v322;
        CGFloat v324 = *v319;
        v515.origin.double x = v64;
        v515.origin.double y = v65;
        v515.size.double width = v73;
        v515.size.double height = v72;
        CGFloat MinX = CGRectGetMinX(v515);
        CGFloat v461 = v72;
        CGFloat v326 = v65;
        CGFloat v423 = v65;
        CGFloat v327 = v64;
        CGFloat v328 = MinX;
        v516.origin.double x = v324;
        v516.origin.double y = v321;
        v516.size.double width = v320;
        v516.size.double height = v323;
        *(float *)&CGFloat v328 = v328 - CGRectGetMinX(v516);
        v329 = &v96[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_leftDrift];
        swift_beginAccess();
        *(_DWORD *)v329 = LODWORD(v328);
        v329[4] = 0;
        v517.origin.double x = v324;
        v517.origin.double y = v321;
        v517.size.double width = v320;
        v517.size.double height = v323;
        CGFloat v457 = v323;
        CGFloat MaxX = CGRectGetMaxX(v517);
        v518.origin.double x = v327;
        v518.origin.double y = v326;
        CGFloat v331 = v73;
        v518.size.double width = v73;
        CGFloat v332 = v461;
        v518.size.double height = v461;
        *(float *)&CGFloat MaxX = MaxX - CGRectGetMaxX(v518);
        v333 = &v96[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_rightDrift];
        swift_beginAccess();
        *(_DWORD *)v333 = LODWORD(MaxX);
        v333[4] = 0;
        v519.origin.double x = v324;
        v519.origin.double y = v321;
        v519.size.double width = v320;
        v519.size.double height = v323;
        CGFloat MaxY = CGRectGetMaxY(v519);
        v520.origin.double x = v327;
        CGFloat v335 = v423;
        v520.origin.double y = v423;
        v520.size.double width = v331;
        v520.size.double height = v332;
        *(float *)&CGFloat MaxY = MaxY - CGRectGetMaxY(v520);
        v336 = &v96[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_upDrift];
        swift_beginAccess();
        *(_DWORD *)v336 = LODWORD(MaxY);
        v336[4] = 0;
        v521.origin.double x = v327;
        v521.origin.double y = v335;
        v521.size.double width = v331;
        v521.size.double height = v332;
        CGFloat MinY = CGRectGetMinY(v521);
        v522.origin.double x = v324;
        v522.origin.double y = v321;
        v522.size.double width = v320;
        v522.size.double height = v457;
        *(float *)&CGFloat MinY = MinY - CGRectGetMinY(v522);
        v338 = &v96[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_downDrift];
        swift_beginAccess();
        *(_DWORD *)v338 = LODWORD(MinY);
        v338[4] = 0;
      }
LABEL_198:
      if ((qword_1EA841CA8 & ~v100) == 0)
      {
        BOOL v339 = sub_1D790A2E4(v454);
        v340 = (BOOL *)&v96[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_pdf417Detected];
        swift_beginAccess();
        BOOL *v340 = v339;
      }
      uint64_t v341 = swift_allocObject();
      *(_OWORD *)(v341 + 16) = v458;
      *(void *)(v341 + 32) = swift_initStaticObject();
      *(void *)(v341 + 40) = swift_initStaticObject();
      *(void *)(v341 + 48) = swift_initStaticObject();
      *(void *)(v341 + 56) = swift_initStaticObject();
      *(void *)&long long v494 = v341;
      sub_1D7A9C338();
      uint64_t v342 = sub_1D7910BD0(v494);
      swift_bridgeObjectRelease();
      uint64_t v343 = *(void *)(v342 + 16);
      swift_release();
      if ((v343 & v100) == 0)
      {
        sub_1D7871D78((uint64_t)v511, (uint64_t)&v494, &qword_1EA843BD8);
        goto LABEL_224;
      }
      if (v430)
      {
        uint64_t v344 = *(void *)(v430 + OBJC_IVAR____TtC13CoreIDVShared21IdentityDocScanConfig_pdf417ParsingConfigs);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v344 = 0;
      }
      char v345 = sub_1D790A58C((uint64_t)&v484, v454, v344);
      swift_bridgeObjectRelease();
      sub_1D7871D78((uint64_t)&v484, (uint64_t)v483, &qword_1EA843BD8);
      if ((qword_1EA841CC8 & ~v100) != 0) {
        char v346 = 2;
      }
      else {
        char v346 = v345;
      }
      v347 = &v96[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_isAAMVACompliant];
      swift_beginAccess();
      char *v347 = v346;
      if ((qword_1EA841E48 & ~v100) != 0)
      {
        v348 = v511;
      }
      else
      {
        v348 = v483;
        sub_1D78FEA58(v483, sub_1D78FE444);
      }
      sub_1D7871D78((uint64_t)v348, (uint64_t)v482, &qword_1EA843BD8);
      if ((qword_1EA841D28 & ~v100) != 0
        || (sub_1D7871D78((uint64_t)v483, (uint64_t)&v494, &qword_1EA843BD8),
            sub_1D78FF37C((uint64_t)&v494) == 1)
        || (sub_1D7871D78((uint64_t)&v494, (uint64_t)v476, &qword_1EA843BA0),
            sub_1D7911174((uint64_t)v476) == 1)
        || !v477)
      {
        uint64_t v349 = 0;
        uint64_t v351 = 0;
      }
      else
      {
        uint64_t v480 = v476[2];
        uint64_t v481 = v477;
        sub_1D791118C();
        uint64_t v349 = sub_1D7A9CA38();
        uint64_t v351 = v350;
      }
      v352 = (uint64_t *)&v96[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_issuerNumber];
      swift_beginAccess();
      uint64_t *v352 = v349;
      v352[1] = v351;
      swift_bridgeObjectRelease();
      if ((qword_1EA841D48 & ~v100) != 0)
      {
        sub_1D78FEA58(v483, sub_1D78FEC54);
      }
      else
      {
        sub_1D7871D78((uint64_t)v483, (uint64_t)&v494, &qword_1EA843BD8);
        if (sub_1D78FF37C((uint64_t)&v494) != 1)
        {
          sub_1D78FD484(&v494, sub_1D78FCA68);
          sub_1D78FEA58(v483, sub_1D78FEC54);
          sub_1D7871D78((uint64_t)&v494, (uint64_t)v476, &qword_1EA843BA0);
          if (sub_1D7911174((uint64_t)v476) != 1)
          {
            uint64_t v353 = v476[0];
            uint64_t v354 = v476[1];
            swift_bridgeObjectRetain();
            sub_1D78FD484(&v494, sub_1D78FD670);
            uint64_t v478 = v353;
            uint64_t v479 = v354;
            sub_1D791118C();
            uint64_t v355 = sub_1D7A9CA38();
            uint64_t v357 = v356;
            swift_bridgeObjectRelease();
LABEL_223:
            v358 = (uint64_t *)&v96[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_documentType];
            swift_beginAccess();
            uint64_t *v358 = v355;
            v358[1] = v357;
            swift_bridgeObjectRelease();
            sub_1D7871D78((uint64_t)v482, (uint64_t)&v494, &qword_1EA843BD8);
LABEL_224:
            uint64_t v359 = swift_allocObject();
            *(_OWORD *)(v359 + 16) = v458;
            *(void *)(v359 + 32) = swift_initStaticObject();
            *(void *)(v359 + 40) = swift_initStaticObject();
            *(void *)(v359 + 48) = swift_initStaticObject();
            *(void *)(v359 + 56) = swift_initStaticObject();
            *(void *)&long long v484 = v359;
            sub_1D7A9C338();
            uint64_t v360 = sub_1D7910BD0(v484);
            swift_bridgeObjectRelease();
            uint64_t v361 = *(void *)(v360 + 16);
            swift_release();
            if ((v361 & v100) != 0
              || ((v443 & 1) == 0 ? (BOOL v362 = v459 == (double *)1) : (BOOL v362 = 1),
                  v362 ? (char v363 = 0) : (char v363 = 1),
                  (qword_1EA841C08 & ~v100) == 0 && (v363 & 1) == 0))
            {
              unint64_t v364 = sub_1D790ADC8(v453);
              type metadata accessor for DocumentScanGuidanceHelper();
              swift_allocObject();
              long long v490 = v472;
              long long v491 = v473;
              long long v492 = v474;
              long long v486 = v468;
              long long v487 = v469;
              long long v488 = v470;
              long long v489 = v471;
              long long v484 = v466;
              uint64_t v493 = v475;
              long long v485 = v467;
              sub_1D790B2D8(v364);
              unint64_t v366 = v365;
              swift_bridgeObjectRelease();
              long long v490 = v472;
              long long v491 = v473;
              long long v492 = v474;
              long long v486 = v468;
              long long v487 = v469;
              long long v488 = v470;
              long long v489 = v471;
              long long v484 = v466;
              uint64_t v493 = v475;
              long long v485 = v467;
              objc_msgSend(v431, sel_extent);
              uint64_t v369 = sub_1D790BD50(v366, v367, v368);
              if ((qword_1EA841DA8 & ~v100) == 0)
              {
                v370 = (unint64_t *)&v96[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_rectangleCorners];
                swift_beginAccess();
                unint64_t *v370 = v366;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
              }
              if ((qword_1EA841BA8 & ~v100) == 0)
              {
                long long v490 = v472;
                long long v491 = v473;
                long long v492 = v474;
                long long v486 = v468;
                long long v487 = v469;
                long long v488 = v470;
                long long v489 = v471;
                long long v484 = v466;
                uint64_t v493 = v475;
                long long v485 = v467;
                sub_1D790C250(v366);
                uint64_t v372 = v371;
                v373 = &v96[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_documentSize];
                swift_beginAccess();
                *(_DWORD *)v373 = v372;
                v373[4] = BYTE4(v372) & 1;
              }
              if ((qword_1EA841BE8 & ~v100) == 0)
              {
                unint64_t v374 = sub_1D799E908(v369);
                if ((v374 & 0x100000000) == 0)
                {
                  long long v490 = v472;
                  long long v491 = v473;
                  long long v492 = v474;
                  long long v486 = v468;
                  long long v487 = v469;
                  long long v488 = v470;
                  long long v489 = v471;
                  long long v484 = v466;
                  float v375 = *(float *)&v374;
                  uint64_t v493 = v475;
                  long long v485 = v467;
                  uint64_t v376 = (uint64_t)v435;
                  uint64_t v377 = v436;
                  uint64_t v378 = v437;
                  (*(void (**)(char *, void, uint64_t))(v436 + 104))(v435, *MEMORY[0x1E4FBBE88], v437);
                  unint64_t v379 = sub_1D7904644(19, v376, v375);
                  uint64_t v380 = v376;
                  uint64_t v100 = v444;
                  (*(void (**)(uint64_t, uint64_t))(v377 + 8))(v380, v378);
                  v381 = &v96[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_documentSkew];
                  swift_beginAccess();
                  *(_DWORD *)v381 = v379;
                  v381[4] = BYTE4(v379) & 1;
                }
              }
              if ((qword_1EA841BC8 & ~v100) != 0)
              {
                swift_bridgeObjectRelease();
              }
              else
              {
                unint64_t v382 = sub_1D799EDF4(v369);
                swift_bridgeObjectRelease();
                if ((v382 & 0x100000000) == 0)
                {
                  long long v490 = v472;
                  long long v491 = v473;
                  long long v492 = v474;
                  long long v486 = v468;
                  long long v487 = v469;
                  long long v488 = v470;
                  long long v489 = v471;
                  long long v484 = v466;
                  uint64_t v493 = v475;
                  long long v485 = v467;
                  uint64_t v383 = (uint64_t)v435;
                  uint64_t v384 = v436;
                  uint64_t v385 = v437;
                  (*(void (**)(char *, void, uint64_t))(v436 + 104))(v435, *MEMORY[0x1E4FBBE88], v437);
                  unint64_t v386 = sub_1D7904644(18, v383, *(float *)&v382);
                  uint64_t v387 = v383;
                  uint64_t v100 = v444;
                  (*(void (**)(uint64_t, uint64_t))(v384 + 8))(v387, v385);
                  v388 = &v96[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_documentRotation];
                  swift_beginAccess();
                  *(_DWORD *)v388 = v386;
                  v388[4] = BYTE4(v386) & 1;
                }
              }
              if ((qword_1EA841C08 & ~v100) != 0)
              {
                swift_bridgeObjectRelease();
                swift_setDeallocating();
                swift_deallocClassInstance();
              }
              else
              {
                sub_1D799DE2C(v366, (uint64_t *)&v484, *(CGFloat *)&v472, *((CGFloat *)&v472 + 1), *(CGFloat *)&v473, *((CGFloat *)&v473 + 1));
                swift_release();
                swift_bridgeObjectRelease();
                if ((v485 & 1) == 0)
                {
                  int v389 = DWORD2(v484);
                  int v390 = v484;
                  unint64_t v391 = DWORD1(v484);
                  uint64_t v392 = HIDWORD(*((void *)&v484 + 1));
                  v393 = &v96[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_leftDrift];
                  swift_beginAccess();
                  *(_DWORD *)v393 = v390;
                  v393[4] = 0;
                  v394 = &v96[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_rightDrift];
                  swift_beginAccess();
                  *(_DWORD *)v394 = v391;
                  v394[4] = 0;
                  v395 = &v96[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_upDrift];
                  swift_beginAccess();
                  *(_DWORD *)v395 = v389;
                  v395[4] = 0;
                  v396 = &v96[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_downDrift];
                  swift_beginAccess();
                  *(_DWORD *)v396 = v392;
                  v396[4] = 0;
                }
              }
            }
            if ((qword_1EA841DC8 & ~v100) == 0)
            {
              uint64_t v397 = sub_1D790CD94(v446);
              v398 = (uint64_t *)&v96[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_documentCorners];
              swift_beginAccess();
              uint64_t *v398 = v397;
              swift_bridgeObjectRelease();
            }
            if ((qword_1EA841E08 & ~v100) == 0)
            {
              long long v490 = v472;
              long long v491 = v473;
              long long v492 = v474;
              long long v486 = v468;
              long long v487 = v469;
              long long v488 = v470;
              long long v489 = v471;
              long long v484 = v466;
              uint64_t v493 = v475;
              long long v485 = v467;
              v399 = sub_1D790D2A4(v445);
              uint64_t v400 = v432;
              if (v432 >= 2)
              {
                sub_1D7910D14((uint64_t)&v466);
                uint64_t v401 = sub_1D79109B8(v400, (uint64_t)&v466, (uint64_t)v399);
                sub_1D7910D58((uint64_t)&v466);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v402 = (uint64_t *)&v96[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_closestMatchAssessments];
                swift_beginAccess();
                uint64_t *v402 = v401;
              }
              else
              {
                swift_bridgeObjectRelease();
              }
            }
            swift_bridgeObjectRelease();
            if ((qword_1EA841C68 & ~v100) != 0)
            {
            }
            else
            {
              long long v490 = v472;
              long long v491 = v473;
              long long v492 = v474;
              long long v486 = v468;
              long long v487 = v469;
              long long v488 = v470;
              long long v489 = v471;
              long long v484 = v466;
              uint64_t v493 = v475;
              long long v485 = v467;
              uint64_t v403 = sub_1D790DD10();
              char v405 = v404;

              v406 = &v96[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_luxLevel];
              swift_beginAccess();
              *(void *)v406 = v403;
              v406[8] = v405 & 1;
            }
            v407 = v441;
            void *v441 = v96;
            uint64_t v269 = (uint64_t)(v407 + 1);
            uint64_t v270 = &v494;
            return sub_1D7871D78((uint64_t)v270, v269, &qword_1EA843BD8);
          }
        }
      }
      uint64_t v355 = 0;
      uint64_t v357 = 0;
      goto LABEL_223;
    }
    if ((unint64_t)v459 >= 2)
    {
      if (*((void *)v459 + 2))
      {
        if ((v443 & 1) == 0)
        {
          CGFloat v284 = v459[4];
          CGFloat v285 = v459[5];
          CGFloat v286 = v459[6];
          CGFloat v287 = v459[7];
          v528.origin.double x = 0.0;
          v528.origin.double y = 0.0;
          v528.size.double width = 0.0;
          v528.size.double height = 0.0;
          v514.origin.double x = v64;
          v514.origin.double y = v65;
          v514.size.double width = v73;
          v514.size.double height = v72;
          if (!CGRectEqualToRect(v514, v528))
          {
            v523.origin.double x = v284;
            v523.origin.double y = v285;
            v523.size.double width = v286;
            v523.size.double height = v287;
            CGFloat v409 = CGRectGetWidth(v523);
            CGFloat v461 = v73;
            CGFloat v410 = v72;
            CGFloat v411 = v65;
            CGFloat v412 = v64;
            double v413 = v409;
            v524.origin.double x = v284;
            v524.origin.double y = v285;
            v524.size.double width = v286;
            v524.size.double height = v287;
            float v414 = v413 * CGRectGetHeight(v524);
            v525.origin.double x = v412;
            v525.origin.double y = v411;
            v525.size.double width = v461;
            v525.size.double height = v410;
            CGFloat v415 = CGRectGetWidth(v525);
            v526.origin.double x = v412;
            v526.origin.double y = v411;
            v526.size.double width = v461;
            v526.size.double height = v410;
            float v416 = v415 * CGRectGetHeight(v526);
            *(float *)&CGFloat v415 = v414 / v416;
            long long v500 = v472;
            long long v501 = v473;
            long long v502 = v474;
            long long v496 = v468;
            long long v497 = v469;
            uint64_t v503 = v475;
            long long v498 = v470;
            long long v499 = v471;
            long long v494 = v466;
            long long v495 = v467;
            uint64_t v418 = (uint64_t)v435;
            uint64_t v417 = v436;
            uint64_t v419 = v437;
            (*(void (**)(char *, void, uint64_t))(v436 + 104))(v435, *MEMORY[0x1E4FBBEB0], v437);
            float v420 = *(float *)&v415;
            CGFloat v64 = v412;
            CGFloat v65 = v411;
            CGFloat v72 = v410;
            CGFloat v73 = v461;
            unint64_t v288 = sub_1D7904644(3, v418, v420);
            uint64_t v421 = v418;
            uint64_t v100 = v444;
            (*(void (**)(uint64_t, uint64_t))(v417 + 8))(v421, v419);
            uint64_t v289 = OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_faceToImageRatio;
            unint64_t v290 = &v96[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_faceToImageRatio];
            goto LABEL_173;
          }
        }
      }
      long long v500 = v472;
      long long v501 = v473;
      long long v502 = v474;
      long long v496 = v468;
      long long v497 = v469;
      uint64_t v503 = v475;
      long long v498 = v470;
      long long v499 = v471;
      long long v494 = v466;
      long long v495 = v467;
    }
    else
    {
      long long v500 = v472;
      long long v501 = v473;
      long long v502 = v474;
      long long v496 = v468;
      long long v497 = v469;
      uint64_t v503 = v475;
      long long v498 = v470;
      long long v499 = v471;
      long long v494 = v466;
      long long v495 = v467;
      if (v459 == (double *)1)
      {
        char v279 = 1;
        CGFloat v280 = 0.0;
        CGFloat v281 = 0.0;
        CGFloat v282 = 0.0;
        CGFloat v283 = 0.0;
LABEL_172:
        *(CGFloat *)v509 = v280;
        *(CGFloat *)&v509[1] = v281;
        *(CGFloat *)&v509[2] = v282;
        *(CGFloat *)&v509[3] = v283;
        char v510 = v279;
        unint64_t v288 = sub_1D7906F68(v462, (uint64_t)v509);
        uint64_t v289 = OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_faceToImageRatio;
        unint64_t v290 = &v96[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_faceToImageRatio];
LABEL_173:
        swift_beginAccess();
        *(_DWORD *)unint64_t v290 = v288;
        v96[v289 + 4] = BYTE4(v288) & 1;
        goto LABEL_174;
      }
    }
    char v279 = v443 & 1;
    CGFloat v280 = v64;
    CGFloat v281 = v65;
    CGFloat v282 = v73;
    CGFloat v283 = v72;
    goto LABEL_172;
  }
  id v257 = (id)v494;
  swift_bridgeObjectRelease();
  id v258 = (void *)sub_1D7A9AE58();

  swift_willThrow();
  sub_1D78AB48C(v224);
  *(void *)&long long v494 = 0;
  *((void *)&v494 + 1) = 0xE000000000000000;
  sub_1D7A9CC48();
  swift_bridgeObjectRelease();
  *(void *)&long long v494 = 0xD000000000000023;
  *((void *)&v494 + 1) = 0x80000001D7AC28B0;
  swift_getErrorValue();
  sub_1D7A9D548();
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  long long v259 = v494;
  LOWORD(v494) = 337;
  unint64_t v260 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
  sub_1D7860544();
  uint64_t v261 = (void *)swift_allocError();
  DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, v259, *((uint64_t *)&v259 + 1), (__int16 *)&v494, 0, v260, 0xD000000000000065, 0x80000001D7AC28E0, v262, 0xD000000000000047, 0x80000001D7AC2950, 402);
  if (qword_1EBDF9DC8 != -1) {
    swift_once();
  }
  CGFloat v263 = v457;
  uint64_t v264 = __swift_project_value_buffer(*(uint64_t *)&v457, (uint64_t)qword_1EBDFBE70);
  swift_beginAccess();
  CGFloat v265 = v461;
  uint64_t v266 = v450;
  (*(void (**)(char *, uint64_t, CGFloat))(*(void *)&v461 + 16))(v450, v264, COERCE_CGFLOAT(*(void *)&v263));
  DIPLogError(_:message:log:)(v261, 0, 0xE000000000000000);
  _s13CoreIDVShared9AnalyticsC9sendErroryys0E0_pFZ_0(v261);

  (*(void (**)(char *, CGFloat))(*(void *)&v265 + 8))(v266, COERCE_CGFLOAT(*(void *)&v263));
  uint64_t v267 = &v96[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_errorCode];
  swift_beginAccess();
  *(void *)uint64_t v267 = -9000;
  v267[8] = 0;
  char v268 = v441;
  void *v441 = v96;
  uint64_t v269 = (uint64_t)(v268 + 1);
  uint64_t v270 = (long long *)v511;
  return sub_1D7871D78((uint64_t)v270, v269, &qword_1EA843BD8);
}

uint64_t sub_1D7904480(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1D7A9B5F8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t result = MEMORY[0x1F4188790](v5, v7, v8, v9, v10, v11, v12, v13);
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *v2;
  if (*(void *)(a1 + 16) == *v2 && *(void *)(a2 + 16) == v17)
  {
    if (v17)
    {
      uint64_t v18 = (float64x2_t *)(a1 + 32);
      long long v19 = (float64x2_t *)(a2 + 32);
      BOOL v20 = v17 == 1;
      float v21 = 0.0;
      while (1)
      {
        float32x2_t v22 = vcvt_f32_f64(vsubq_f64(*v18, *v19));
        float v21 = v21 + sqrtf(vaddv_f32(vmul_f32(v22, v22)));
        if (v20) {
          break;
        }
        BOOL v20 = v17 == 2;
        ++v19;
        ++v18;
        if (!--v17)
        {
          __break(1u);
          goto LABEL_8;
        }
      }
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
LABEL_8:
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v23 = __swift_project_value_buffer(v5, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v16, v23, v5);
    sub_1D791F9C4();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v16, v5);
  }
  return result;
}

unint64_t sub_1D7904644(char a1, uint64_t a2, float a3)
{
  uint64_t v7 = sub_1D7A9B5F8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7, v9, v10, v11, v12, v13, v14, v15);
  uint64_t v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1D7A9D328();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18, v20, v21, v22, v23, v24, v25, v26);
  uint64_t v28 = (char *)&v46 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = *(void *)(v3 + 144);
  if (*(void *)(v29 + 16) && (unint64_t v30 = sub_1D7A18CC0(a1), (v31 & 1) != 0))
  {
    float v32 = *(float *)(*(void *)(v29 + 56) + 4 * v30);
    float v33 = a3 / v32;
    *(float *)&uint64_t v46 = v33;
    (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v28, a2, v18);
    int v34 = (*(uint64_t (**)(char *, uint64_t))(v19 + 88))(v28, v18);
    if (v34 == *MEMORY[0x1E4FBBEA0])
    {
      float v35 = roundf(v33);
    }
    else if (v34 == *MEMORY[0x1E4FBBE98])
    {
      float v35 = rintf(v33);
    }
    else if (v34 == *MEMORY[0x1E4FBBEA8])
    {
      float v35 = ceilf(v33);
    }
    else if (v34 == *MEMORY[0x1E4FBBEB0])
    {
      float v35 = floorf(v33);
    }
    else if (v34 == *MEMORY[0x1E4FBBE88])
    {
      float v35 = truncf(v33);
    }
    else if (v34 == *MEMORY[0x1E4FBBE90])
    {
      float v35 = ceilf(v33);
      float v44 = floorf(v33);
      if (v33 < 0.0) {
        float v35 = v44;
      }
    }
    else
    {
      sub_1D7A9C5E8();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v28, v18);
      float v35 = *(float *)&v46;
    }
    unsigned __int8 v43 = 0;
    uint64_t v42 = COERCE_UNSIGNED_INT(v32 * v35);
  }
  else
  {
    uint64_t v46 = 0;
    unint64_t v47 = 0xE000000000000000;
    sub_1D7A9CC48();
    sub_1D7A9C128();
    char v48 = a1;
    sub_1D7A9CE78();
    uint64_t v36 = v46;
    uint64_t v37 = v47;
    LOWORD(v46) = 105;
    unint64_t v38 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    uint64_t v39 = (void *)swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, v36, v37, (__int16 *)&v46, 0, v38, 0xD000000000000065, 0x80000001D7AC28E0, v40, 0xD00000000000001ELL, 0x80000001D7AC30A0, 1173);
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v41 = __swift_project_value_buffer(v7, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v17, v41, v7);
    DIPLogError(_:message:log:)(v39, 0, 0xE000000000000000);
    _s13CoreIDVShared9AnalyticsC9sendErroryys0E0_pFZ_0(v39);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v17, v7);

    uint64_t v42 = 0;
    unsigned __int8 v43 = 1;
  }
  return v42 | ((unint64_t)v43 << 32);
}

uint64_t sub_1D7904A9C(unint64_t a1, char a2)
{
  uint64_t v5 = sub_1D7A9B5F8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7, v8, v9, v10, v11, v12, v13);
  uint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(v2 + 144);
  if (*(void *)(v16 + 16) && (unint64_t v17 = sub_1D7A18CC0(a2), (v18 & 1) != 0))
  {
    float v19 = *(float *)(*(void *)(v16 + 56) + 4 * v17);
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_1D7A9CFB8();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v20 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t result = MEMORY[0x1E4FBC860];
    if (v20)
    {
      uint64_t v40 = MEMORY[0x1E4FBC860];
      uint64_t result = sub_1D7A9CDC8();
      if (v20 < 0)
      {
        __break(1u);
      }
      else
      {
        uint64_t v22 = 0;
        do
        {
          if ((a1 & 0xC000000000000001) != 0) {
            uint64_t v23 = (char *)MEMORY[0x1D947BA10](v22, a1);
          }
          else {
            uint64_t v23 = (char *)*(id *)(a1 + 8 * v22 + 32);
          }
          uint64_t v24 = v23;
          ++v22;
          uint64_t v25 = (float *)&v23[OBJC_IVAR____TtC13CoreIDVShared7IQPoint_x];
          swift_beginAccess();
          float v26 = v19 * floorf(*v25 / v19);
          uint64_t v27 = (float *)&v24[OBJC_IVAR____TtC13CoreIDVShared7IQPoint_y];
          swift_beginAccess();
          float v28 = v19 * floorf(*v27 / v19);
          uint64_t v29 = (objc_class *)type metadata accessor for IQPoint();
          unint64_t v30 = (char *)objc_allocWithZone(v29);
          *(float *)&v30[OBJC_IVAR____TtC13CoreIDVShared7IQPoint_x] = v26;
          *(float *)&v30[OBJC_IVAR____TtC13CoreIDVShared7IQPoint_y] = v28;
          v38.receiver = v30;
          v38.super_class = v29;
          objc_msgSendSuper2(&v38, sel_init);

          sub_1D7A9CD98();
          sub_1D7A9CDD8();
          sub_1D7A9CDE8();
          sub_1D7A9CDA8();
        }
        while (v20 != v22);
        return v40;
      }
    }
  }
  else
  {
    uint64_t v41 = 0;
    unint64_t v42 = 0xE000000000000000;
    sub_1D7A9CC48();
    sub_1D7A9C128();
    char v39 = a2;
    sub_1D7A9CE78();
    uint64_t v31 = v41;
    uint64_t v32 = v42;
    LOWORD(v41) = 105;
    unint64_t v33 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    int v34 = (void *)swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, v31, v32, (__int16 *)&v41, 0, v33, 0xD000000000000065, 0x80000001D7AC28E0, v35, 0xD000000000000017, 0x80000001D7AC2B00, 1185);
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v36 = __swift_project_value_buffer(v5, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v15, v36, v5);
    DIPLogError(_:message:log:)(v34, 0, 0xE000000000000000);
    _s13CoreIDVShared9AnalyticsC9sendErroryys0E0_pFZ_0(v34);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);

    return 0;
  }
  return result;
}

void sub_1D7904EAC(void *a1)
{
  uint64_t v3 = sub_1D7A9B5F8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v5, v6, v7, v8, v9, v10, v11);
  uint64_t v13 = (char *)v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1D7A9D328();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14, v16, v17, v18, v19, v20, v21, v22);
  uint64_t v24 = (char *)v46 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v25 = v1[7];
  long long v51 = v1[6];
  *(_OWORD *)uint64_t v52 = v25;
  *(_OWORD *)&v52[16] = v1[8];
  uint64_t v53 = *((void *)v1 + 18);
  long long v26 = v1[3];
  *(_OWORD *)&v48[16] = v1[2];
  long long v49 = v26;
  long long v27 = v1[5];
  *(_OWORD *)uint64_t v50 = v1[4];
  *(_OWORD *)&v50[16] = v27;
  long long v28 = v1[1];
  long long v47 = *v1;
  *(_OWORD *)char v48 = v28;
  id v29 = objc_msgSend(a1, sel_results);
  if (!v29)
  {
    v46[0] = 338;
    unint64_t v39 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    uint64_t v40 = (void *)swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000029, 0x80000001D7AC2B20, v46, 0, v39, 0xD000000000000065, 0x80000001D7AC28E0, v41, 0xD000000000000015, 0x80000001D7AC2B50, 623);
LABEL_14:
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v45 = __swift_project_value_buffer(v3, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v13, v45, v3);
    DIPLogError(_:message:log:)(v40, 0, 0xE000000000000000);
    _s13CoreIDVShared9AnalyticsC9sendErroryys0E0_pFZ_0(v40);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v13, v3);

    LOBYTE(v13) = 1;
    goto LABEL_17;
  }
  unint64_t v30 = v29;
  sub_1D78C4038(0, &qword_1EA843C68);
  unint64_t v31 = sub_1D7A9C318();

  if (!(v31 >> 62))
  {
    if (*(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_4;
    }
LABEL_12:
    swift_bridgeObjectRelease();
LABEL_13:
    v46[0] = 339;
    unint64_t v43 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    uint64_t v40 = (void *)swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD00000000000001BLL, 0x80000001D7AC2B70, v46, 0, v43, 0xD000000000000065, 0x80000001D7AC28E0, v44, 0xD000000000000015, 0x80000001D7AC2B50, 627);
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  uint64_t v42 = sub_1D7A9CFB8();
  swift_bridgeObjectRelease();
  if (!v42) {
    goto LABEL_12;
  }
LABEL_4:
  if ((v31 & 0xC000000000000001) != 0)
  {
    id v32 = (id)MEMORY[0x1D947BA10](0, v31);
    goto LABEL_7;
  }
  if (*(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v32 = *(id *)(v31 + 32);
LABEL_7:
    unint64_t v33 = v32;
    swift_bridgeObjectRelease();
    id v34 = objc_msgSend(v33, sel_blurScore);
    if (v34)
    {
      uint64_t v35 = v34;
      objc_msgSend(v34, sel_floatValue, v47, *(void *)v48, *(_OWORD *)&v48[8], *(void *)&v48[24], v49, *(void *)v50, *(_OWORD *)&v50[8], *(void *)&v50[24], v51, *(void *)v52, *(_OWORD *)&v52[8], *(void *)&v52[24], v53);
      float v37 = v36;
      (*(void (**)(char *, void, uint64_t))(v15 + 104))(v24, *MEMORY[0x1E4FBBEB0], v14);
      unint64_t v38 = sub_1D7904644(0, (uint64_t)v24, v37);

      uint64_t v13 = (char *)(HIDWORD(v38) & 1);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v24, v14);
LABEL_17:
      LOBYTE(v47) = (_BYTE)v13;
      return;
    }

    goto LABEL_13;
  }
  __break(1u);
}

void sub_1D79053A4(void *a1)
{
  uint64_t v3 = sub_1D7A9B5F8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v5, v6, v7, v8, v9, v10, v11);
  uint64_t v13 = (char *)v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1D7A9D328();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14, v16, v17, v18, v19, v20, v21, v22);
  uint64_t v24 = (char *)v46 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v25 = v1[7];
  long long v51 = v1[6];
  *(_OWORD *)uint64_t v52 = v25;
  *(_OWORD *)&v52[16] = v1[8];
  uint64_t v53 = *((void *)v1 + 18);
  long long v26 = v1[3];
  *(_OWORD *)&v48[16] = v1[2];
  long long v49 = v26;
  long long v27 = v1[5];
  *(_OWORD *)uint64_t v50 = v1[4];
  *(_OWORD *)&v50[16] = v27;
  long long v28 = v1[1];
  long long v47 = *v1;
  *(_OWORD *)char v48 = v28;
  id v29 = objc_msgSend(a1, sel_results);
  if (!v29)
  {
    v46[0] = 338;
    unint64_t v39 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    uint64_t v40 = (void *)swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD00000000000002DLL, 0x80000001D7AC2B90, v46, 0, v39, 0xD000000000000065, 0x80000001D7AC28E0, v41, 0xD000000000000013, 0x80000001D7AC2BC0, 638);
LABEL_14:
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v45 = __swift_project_value_buffer(v3, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v13, v45, v3);
    DIPLogError(_:message:log:)(v40, 0, 0xE000000000000000);
    _s13CoreIDVShared9AnalyticsC9sendErroryys0E0_pFZ_0(v40);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v13, v3);

    LOBYTE(v13) = 1;
    goto LABEL_17;
  }
  unint64_t v30 = v29;
  sub_1D78C4038(0, &qword_1EA843C68);
  unint64_t v31 = sub_1D7A9C318();

  if (!(v31 >> 62))
  {
    if (*(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_4;
    }
LABEL_12:
    swift_bridgeObjectRelease();
LABEL_13:
    v46[0] = 339;
    unint64_t v43 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    uint64_t v40 = (void *)swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD00000000000001FLL, 0x80000001D7AC2BE0, v46, 0, v43, 0xD000000000000065, 0x80000001D7AC28E0, v44, 0xD000000000000013, 0x80000001D7AC2BC0, 642);
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  uint64_t v42 = sub_1D7A9CFB8();
  swift_bridgeObjectRelease();
  if (!v42) {
    goto LABEL_12;
  }
LABEL_4:
  if ((v31 & 0xC000000000000001) != 0)
  {
    id v32 = (id)MEMORY[0x1D947BA10](0, v31);
    goto LABEL_7;
  }
  if (*(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v32 = *(id *)(v31 + 32);
LABEL_7:
    unint64_t v33 = v32;
    swift_bridgeObjectRelease();
    id v34 = objc_msgSend(v33, sel_exposureScore);
    if (v34)
    {
      uint64_t v35 = v34;
      objc_msgSend(v34, sel_floatValue, v47, *(void *)v48, *(_OWORD *)&v48[8], *(void *)&v48[24], v49, *(void *)v50, *(_OWORD *)&v50[8], *(void *)&v50[24], v51, *(void *)v52, *(_OWORD *)&v52[8], *(void *)&v52[24], v53);
      float v37 = v36;
      (*(void (**)(char *, void, uint64_t))(v15 + 104))(v24, *MEMORY[0x1E4FBBEB0], v14);
      unint64_t v38 = sub_1D7904644(1, (uint64_t)v24, v37);

      uint64_t v13 = (char *)(HIDWORD(v38) & 1);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v24, v14);
LABEL_17:
      LOBYTE(v47) = (_BYTE)v13;
      return;
    }

    goto LABEL_13;
  }
  __break(1u);
}

unint64_t sub_1D790589C(void *a1)
{
  uint64_t v3 = sub_1D7A9B5F8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v5, v6, v7, v8, v9, v10, v11);
  uint64_t v13 = (char *)v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1D7A9D328();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14, v16, v17, v18, v19, v20, v21, v22);
  uint64_t v24 = (char *)v41 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v25 = v1[7];
  long long v49 = v1[6];
  long long v50 = v25;
  long long v51 = v1[8];
  uint64_t v52 = *((void *)v1 + 18);
  long long v26 = v1[3];
  long long v45 = v1[2];
  long long v46 = v26;
  long long v27 = v1[5];
  long long v47 = v1[4];
  long long v48 = v27;
  long long v28 = v1[1];
  long long v43 = *v1;
  long long v44 = v28;
  id v29 = objc_msgSend(a1, sel_results);
  if (!v29)
  {
    LOWORD(v41[0]) = 338;
    unint64_t v36 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    uint64_t v33 = swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000037, 0x80000001D7AC2C00, (__int16 *)v41, 0, v36, 0xD000000000000065, 0x80000001D7AC28E0, v37, 0xD00000000000001DLL, 0x80000001D7AC2C40, 652);
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v38 = __swift_project_value_buffer(v3, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v13, v38, v3);
    DIPLogError(_:message:log:)((void *)v33, 0, 0xE000000000000000);
    _s13CoreIDVShared9AnalyticsC9sendErroryys0E0_pFZ_0((void *)v33);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v13, v3);

    LODWORD(v33) = 0;
    goto LABEL_12;
  }
  unint64_t v30 = v29;
  sub_1D78C4038(0, &qword_1EA843BF0);
  unint64_t v31 = sub_1D7A9C318();

  id v32 = sub_1D790F244(v31);
  swift_bridgeObjectRelease();
  if (!v32)
  {
    LODWORD(v33) = 0;
    goto LABEL_9;
  }
  uint64_t v33 = sub_1D7A9C828();

  if ((v33 & 0x100000000) != 0)
  {
LABEL_9:
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v39 = __swift_project_value_buffer(v3, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v13, v39, v3);
    sub_1D791FB48();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v13, v3);
LABEL_12:
    LOBYTE(v35) = 1;
    return v33 | ((unint64_t)v35 << 32);
  }
  v41[6] = v49;
  v41[7] = v50;
  v41[8] = v51;
  uint64_t v42 = v52;
  v41[2] = v45;
  v41[3] = v46;
  v41[4] = v47;
  v41[5] = v48;
  v41[0] = v43;
  v41[1] = v44;
  (*(void (**)(char *, void, uint64_t))(v15 + 104))(v24, *MEMORY[0x1E4FBBEB0], v14);
  unint64_t v34 = sub_1D7904644(15, (uint64_t)v24, *(float *)&v33);
  LODWORD(v33) = v34;
  uint64_t v35 = HIDWORD(v34) & 1;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v24, v14);
  return v33 | ((unint64_t)v35 << 32);
}

unint64_t sub_1D7905D28(void *a1)
{
  uint64_t v81 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = sub_1D7A9B5F8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v5, v6, v7, v8, v9, v10, v11);
  uint64_t v13 = &v53[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = sub_1D7A9D328();
  unint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14, v16, v17, v18, v19, v20, v21, v22);
  uint64_t v24 = &v53[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  long long v25 = v1[7];
  long long v67 = v1[6];
  long long v68 = v25;
  long long v69 = v1[8];
  uint64_t v70 = *((void *)v1 + 18);
  long long v26 = v1[3];
  long long v63 = v1[2];
  long long v64 = v26;
  long long v27 = v1[5];
  long long v65 = v1[4];
  long long v66 = v27;
  long long v28 = v1[1];
  long long v61 = *v1;
  long long v62 = v28;
  id v29 = objc_msgSend(a1, sel_results);
  if (!v29)
  {
    LOWORD(v71) = 338;
    unint64_t v42 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    long long v43 = (void *)swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000031, 0x80000001D7AC32A0, (__int16 *)&v71, 0, v42, 0xD000000000000065, 0x80000001D7AC28E0, v44, 0xD000000000000017, 0x80000001D7AC32E0, 707);
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v45 = __swift_project_value_buffer(v3, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v4 + 16))(v13, v45, v3);
    DIPLogError(_:message:log:)(v43, 0, 0xE000000000000000);
    _s13CoreIDVShared9AnalyticsC9sendErroryys0E0_pFZ_0(v43);
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v13, v3);
    long long v46 = v43;
    goto LABEL_14;
  }
  unint64_t v30 = v29;
  unint64_t v57 = v15;
  sub_1D78C4038(0, &qword_1EA843BF0);
  unint64_t v31 = sub_1D7A9C318();

  id v32 = sub_1D790F244(v31);
  swift_bridgeObjectRelease();
  id v58 = v32;
  if (!v32)
  {
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v47 = __swift_project_value_buffer(v3, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v4 + 16))(v13, v47, v3);
    sub_1D791FCCC();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v13, v3);
    goto LABEL_15;
  }
  uint64_t v60 = 0;
  float v59 = 0.0;
  uint64_t v33 = self;
  objc_msgSend(v58, sel_pose);
  if (!objc_msgSend(v33, sel_computeYawPitchRollFromPoseMatrix_outputYaw_outputPitch_outputRoll_, (char *)&v60 + 4, &v60, &v59))
  {
    LOWORD(v71) = 340;
    unint64_t v48 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    long long v49 = (void *)swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000019, 0x80000001D7AC3300, (__int16 *)&v71, 0, v48, 0xD000000000000065, 0x80000001D7AC28E0, v50, 0xD000000000000017, 0x80000001D7AC32E0, 720);
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v51 = __swift_project_value_buffer(v3, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v4 + 16))(v13, v51, v3);
    DIPLogError(_:message:log:)(v49, 0, 0xE000000000000000);
    _s13CoreIDVShared9AnalyticsC9sendErroryys0E0_pFZ_0(v49);

    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v13, v3);
    long long v46 = v49;
LABEL_14:

LABEL_15:
    uint64_t v41 = 0;
    LOBYTE(v37) = 1;
    return v41 | ((unint64_t)v37 << 32);
  }
  long long v77 = v67;
  long long v78 = v68;
  long long v79 = v69;
  uint64_t v80 = v70;
  long long v73 = v63;
  long long v74 = v64;
  long long v75 = v65;
  long long v76 = v66;
  long long v71 = v61;
  long long v72 = v62;
  float v34 = *((float *)&v60 + 1);
  uint64_t v35 = *MEMORY[0x1E4FBBEB0];
  unint64_t v36 = v57;
  uint64_t v56 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v57 + 104);
  unsigned int v54 = v35;
  v56(v24, v35, v14);
  unint64_t v55 = sub_1D7904644(7, (uint64_t)v24, v34);
  uint64_t v37 = HIDWORD(v55) & 1;
  uint64_t v38 = *(void (**)(unsigned char *, uint64_t))(v36 + 8);
  v38(v24, v14);
  long long v77 = v67;
  long long v78 = v68;
  long long v79 = v69;
  uint64_t v80 = v70;
  long long v73 = v63;
  long long v74 = v64;
  long long v75 = v65;
  long long v76 = v66;
  long long v71 = v61;
  long long v72 = v62;
  float v39 = *(float *)&v60;
  v56(v24, v35, v14);
  unint64_t v57 = sub_1D7904644(5, (uint64_t)v24, v39);
  v38(v24, v14);
  long long v77 = v67;
  long long v78 = v68;
  long long v79 = v69;
  uint64_t v80 = v70;
  long long v73 = v63;
  long long v74 = v64;
  long long v75 = v65;
  long long v76 = v66;
  long long v71 = v61;
  long long v72 = v62;
  float v40 = v59;
  v56(v24, v54, v14);
  sub_1D7904644(6, (uint64_t)v24, v40);

  v38(v24, v14);
  uint64_t v41 = v55;
  return v41 | ((unint64_t)v37 << 32);
}

uint64_t sub_1D79064CC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D7A9B5F8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6, v8, v9, v10, v11, v12, v13, v14);
  uint64_t v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v17 = objc_msgSend(a1, sel_results);
  if (!v17)
  {
    LOWORD(v38[0]) = 338;
    unint64_t v29 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    unint64_t v30 = (void *)swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD00000000000002DLL, 0x80000001D7AC2C60, (__int16 *)v38, 0, v29, 0xD000000000000065, 0x80000001D7AC28E0, v31, 0xD00000000000002FLL, 0x80000001D7AC2C90, 733);
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v32 = __swift_project_value_buffer(v6, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v16, v32, v6);
    DIPLogError(_:message:log:)(v30, 0, 0xE000000000000000);
    _s13CoreIDVShared9AnalyticsC9sendErroryys0E0_pFZ_0(v30);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v16, v6);

    return 0;
  }
  sub_1D78C4038(0, &qword_1EA843BF0);
  unint64_t v18 = sub_1D7A9C318();

  if ((a2 & 0x100000000) != 0 || (a3 & 0x100000000) != 0)
  {
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v27 = __swift_project_value_buffer(v6, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v16, v27, v6);
    sub_1D791FE50();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v16, v6);
    if (v18 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v28 = sub_1D7A9CFB8();
      swift_bridgeObjectRelease_n();
    }
    else
    {
      uint64_t v28 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRelease();
    }
    return v28;
  }
  v38[0] = MEMORY[0x1E4FBC860];
  if (!(v18 >> 62))
  {
    uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v19) {
      goto LABEL_6;
    }
LABEL_26:
    swift_bridgeObjectRelease();
    unint64_t v33 = MEMORY[0x1E4FBC860];
    goto LABEL_27;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1D7A9CFB8();
  uint64_t v19 = result;
  if (!result) {
    goto LABEL_26;
  }
LABEL_6:
  uint64_t v36 = v6;
  id v37 = v17;
  if (v19 >= 1)
  {
    uint64_t v21 = 0;
    float v22 = *(float *)&a2;
    do
    {
      if ((v18 & 0xC000000000000001) != 0) {
        id v23 = (id)MEMORY[0x1D947BA10](v21, v18);
      }
      else {
        id v23 = *(id *)(v18 + 8 * v21 + 32);
      }
      uint64_t v24 = v23;
      objc_msgSend(v23, sel_confidence);
      if (v25 < v22 || (objc_msgSend(v24, sel_confidence), v26 > *(float *)&a3))
      {
      }
      else
      {
        sub_1D7A9CD98();
        sub_1D7A9CDD8();
        sub_1D7A9CDE8();
        sub_1D7A9CDA8();
      }
      ++v21;
    }
    while (v19 != v21);
    swift_bridgeObjectRelease();
    unint64_t v33 = v38[0];
    uint64_t v6 = v36;
LABEL_27:
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v34 = __swift_project_value_buffer(v6, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v16, v34, v6);
    swift_retain();
    sub_1D7925244((uint64_t)v16, v18, v33);
    swift_bridgeObjectRelease();
    swift_release();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v16, v6);
    if ((v33 & 0x8000000000000000) != 0 || (v33 & 0x4000000000000000) != 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v28 = sub_1D7A9CFB8();
      swift_release_n();
    }
    else
    {
      uint64_t v28 = *(void *)(v33 + 16);
      swift_release();
    }
    return v28;
  }
  __break(1u);
  return result;
}

char *sub_1D7906A48(void *a1)
{
  uint64_t v3 = sub_1D7A9B5F8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v5, v6, v7, v8, v9, v10, v11);
  uint64_t v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_1D7A9D328();
  uint64_t v14 = *(char **)(v52 - 8);
  MEMORY[0x1F4188790](v52, v15, v16, v17, v18, v19, v20, v21);
  id v23 = (char *)&v47 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v24 = v1[7];
  long long v61 = v1[6];
  long long v62 = v24;
  long long v63 = v1[8];
  uint64_t v64 = *((void *)v1 + 18);
  long long v25 = v1[3];
  long long v57 = v1[2];
  long long v58 = v25;
  long long v26 = v1[5];
  long long v59 = v1[4];
  long long v60 = v26;
  long long v27 = v1[1];
  long long v55 = *v1;
  long long v56 = v27;
  id v28 = objc_msgSend(a1, sel_results);
  if (v28)
  {
    unint64_t v29 = v28;
    sub_1D78C4038(0, &qword_1EA843BF0);
    unint64_t v30 = sub_1D7A9C318();

    if (v30 >> 62) {
      goto LABEL_22;
    }
    uint64_t v31 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
    while (v31)
    {
      unint64_t v51 = v30 & 0xC000000000000001;
      unsigned int v50 = *MEMORY[0x1E4FBBEB0];
      unint64_t v48 = (void (**)(char *, uint64_t))(v14 + 8);
      long long v49 = (void (**)(char *, void, uint64_t))(v14 + 104);
      uint64_t v14 = (char *)MEMORY[0x1E4FBC860];
      uint64_t v32 = 4;
      unint64_t v47 = v30;
      while (1)
      {
        id v33 = v51 ? (id)MEMORY[0x1D947BA10](v32 - 4, v30) : *(id *)(v30 + 8 * v32);
        uint64_t v34 = v33;
        uint64_t v35 = v32 - 3;
        if (__OFADD__(v32 - 4, 1)) {
          break;
        }
        v53[6] = v61;
        v53[7] = v62;
        v53[8] = v63;
        uint64_t v54 = v64;
        v53[2] = v57;
        v53[3] = v58;
        v53[4] = v59;
        v53[5] = v60;
        v53[0] = v55;
        v53[1] = v56;
        objc_msgSend(v33, sel_confidence);
        float v37 = v36;
        uint64_t v38 = v52;
        (*v49)(v23, v50, v52);
        unint64_t v39 = sub_1D7904644(8, (uint64_t)v23, v37);
        (*v48)(v23, v38);
        if ((v39 & 0x100000000) != 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          return 0;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v14 = sub_1D789E558(0, *((void *)v14 + 2) + 1, 1, v14);
        }
        unint64_t v41 = *((void *)v14 + 2);
        unint64_t v40 = *((void *)v14 + 3);
        if (v41 >= v40 >> 1) {
          uint64_t v14 = sub_1D789E558((char *)(v40 > 1), v41 + 1, 1, v14);
        }
        *((void *)v14 + 2) = v41 + 1;
        *(_DWORD *)&v14[4 * v41 + 32] = v39;

        ++v32;
        unint64_t v30 = v47;
        if (v35 == v31)
        {
          swift_bridgeObjectRelease();
          return v14;
        }
      }
      __break(1u);
LABEL_22:
      swift_bridgeObjectRetain();
      uint64_t v31 = sub_1D7A9CFB8();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    return (char *)MEMORY[0x1E4FBC860];
  }
  else
  {
    LOWORD(v53[0]) = 338;
    unint64_t v42 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    long long v43 = (void *)swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000033, 0x80000001D7AC2CC0, (__int16 *)v53, 0, v42, 0xD000000000000065, 0x80000001D7AC28E0, v44, 0xD00000000000001ALL, 0x80000001D7AC2D00, 750);
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v45 = __swift_project_value_buffer(v3, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v13, v45, v3);
    DIPLogError(_:message:log:)(v43, 0, 0xE000000000000000);
    _s13CoreIDVShared9AnalyticsC9sendErroryys0E0_pFZ_0(v43);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v13, v3);

    return 0;
  }
}

unint64_t sub_1D7906F68(void *a1, uint64_t a2)
{
  uint64_t v5 = sub_1D7A9B5F8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7, v8, v9, v10, v11, v12, v13);
  uint64_t v15 = (char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1D7A9D328();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16, v18, v19, v20, v21, v22, v23, v24);
  long long v26 = (char *)&v62 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v27 = v2[7];
  long long v82 = v2[6];
  long long v83 = v27;
  long long v84 = v2[8];
  uint64_t v85 = *((void *)v2 + 18);
  long long v28 = v2[3];
  long long v78 = v2[2];
  long long v79 = v28;
  long long v29 = v2[5];
  long long v80 = v2[4];
  long long v81 = v29;
  long long v30 = v2[1];
  long long v76 = *v2;
  long long v77 = v30;
  id v31 = objc_msgSend(a1, sel_results);
  if (!v31)
  {
    LOWORD(v64) = 338;
    unint64_t v48 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    long long v49 = (void *)swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD00000000000002ELL, 0x80000001D7AC2D20, (__int16 *)&v64, 0, v48, 0xD000000000000065, 0x80000001D7AC28E0, v50, 0xD000000000000018, 0x80000001D7AC2D50, 668);
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v51 = __swift_project_value_buffer(v5, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v15, v51, v5);
    DIPLogError(_:message:log:)(v49, 0, 0xE000000000000000);
    _s13CoreIDVShared9AnalyticsC9sendErroryys0E0_pFZ_0(v49);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);

    goto LABEL_14;
  }
  uint64_t v32 = v31;
  uint64_t v63 = v17;
  sub_1D78C4038(0, &qword_1EA843BF0);
  unint64_t v33 = sub_1D7A9C318();

  id v34 = sub_1D790F244(v33);
  swift_bridgeObjectRelease();
  if (!v34)
  {
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v52 = __swift_project_value_buffer(v5, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v15, v52, v5);
    sub_1D7920158();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
LABEL_14:
    LODWORD(v46) = 0;
    LOBYTE(v47) = 1;
    goto LABEL_15;
  }
  sub_1D7871D78(a2, (uint64_t)&v74, &qword_1EA843BD0);
  if (v75) {
    goto LABEL_5;
  }
  CGFloat x = v74.origin.x;
  CGFloat y = v74.origin.y;
  CGFloat width = v74.size.width;
  CGFloat height = v74.size.height;
  v92.origin.CGFloat x = 0.0;
  v92.origin.CGFloat y = 0.0;
  v92.size.CGFloat width = 0.0;
  v92.size.CGFloat height = 0.0;
  if (CGRectEqualToRect(v74, v92))
  {
LABEL_5:
    uint64_t v39 = v63;
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v40 = __swift_project_value_buffer(v5, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v15, v40, v5);
    sub_1D791FFD4();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    long long v70 = v82;
    long long v71 = v83;
    long long v72 = v84;
    uint64_t v73 = v85;
    long long v66 = v78;
    long long v67 = v79;
    long long v68 = v80;
    long long v69 = v81;
    long long v64 = v76;
    long long v65 = v77;
    objc_msgSend(v34, sel_boundingBox);
    CGFloat v41 = v86.origin.x;
    CGFloat v42 = v86.origin.y;
    CGFloat v43 = v86.size.width;
    CGFloat v44 = v86.size.height;
    double v45 = CGRectGetWidth(v86);
    v87.origin.CGFloat x = v41;
    v87.origin.CGFloat y = v42;
    v87.size.CGFloat width = v43;
    v87.size.CGFloat height = v44;
    *(float *)&CGFloat v41 = v45 * CGRectGetHeight(v87);
    (*(void (**)(char *, void, uint64_t))(v39 + 104))(v26, *MEMORY[0x1E4FBBEB0], v16);
    unint64_t v46 = sub_1D7904644(3, (uint64_t)v26, *(float *)&v41);

    uint64_t v47 = HIDWORD(v46) & 1;
    (*(void (**)(char *, uint64_t))(v39 + 8))(v26, v16);
  }
  else
  {
    objc_msgSend(v34, sel_boundingBox);
    CGFloat v54 = v88.origin.x;
    CGFloat v55 = v88.origin.y;
    CGFloat v56 = v88.size.width;
    CGFloat v57 = v88.size.height;
    CGFloat v62 = CGRectGetWidth(v88);
    v89.origin.CGFloat x = v54;
    v89.origin.CGFloat y = v55;
    v89.size.CGFloat width = v56;
    v89.size.CGFloat height = v57;
    *(float *)&CGFloat v55 = v62 * CGRectGetHeight(v89);
    v90.origin.CGFloat x = x;
    v90.origin.CGFloat y = y;
    v90.size.CGFloat width = width;
    v90.size.CGFloat height = height;
    double v58 = CGRectGetWidth(v90);
    v91.origin.CGFloat x = x;
    v91.origin.CGFloat y = y;
    v91.size.CGFloat width = width;
    v91.size.CGFloat height = height;
    float v59 = v58 * CGRectGetHeight(v91);
    long long v70 = v82;
    long long v71 = v83;
    float v60 = *(float *)&v55 / v59;
    long long v72 = v84;
    uint64_t v73 = v85;
    long long v66 = v78;
    long long v67 = v79;
    long long v68 = v80;
    long long v69 = v81;
    long long v64 = v76;
    long long v65 = v77;
    uint64_t v61 = v63;
    (*(void (**)(char *, void, uint64_t))(v63 + 104))(v26, *MEMORY[0x1E4FBBEB0], v16);
    unint64_t v46 = sub_1D7904644(3, (uint64_t)v26, v60);

    uint64_t v47 = HIDWORD(v46) & 1;
    (*(void (**)(char *, uint64_t))(v61 + 8))(v26, v16);
  }
LABEL_15:
  LOBYTE(v76) = v47;
  return v46 | ((unint64_t)v47 << 32);
}

unint64_t sub_1D790763C(void *a1, uint64_t a2)
{
  uint64_t v5 = sub_1D7A9B5F8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7, v8, v9, v10, v11, v12, v13);
  uint64_t v15 = (char *)&x - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1D7A9D328();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16, v18, v19, v20, v21, v22, v23, v24);
  long long v26 = (char *)&x - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v27 = v2[7];
  long long v73 = v2[6];
  long long v74 = v27;
  long long v75 = v2[8];
  uint64_t v76 = *((void *)v2 + 18);
  long long v28 = v2[3];
  long long v69 = v2[2];
  long long v70 = v28;
  long long v29 = v2[5];
  long long v71 = v2[4];
  long long v72 = v29;
  long long v30 = v2[1];
  long long v67 = *v2;
  long long v68 = v30;
  id v31 = objc_msgSend(a1, sel_results);
  if (v31)
  {
    uint64_t v32 = v31;
    uint64_t v62 = v17;
    sub_1D78C4038(0, &qword_1EA843BF0);
    unint64_t v33 = sub_1D7A9C318();

    id v34 = sub_1D790F244(v33);
    swift_bridgeObjectRelease();
    if (v34)
    {
      sub_1D7871D78(a2, (uint64_t)v65, &qword_1EA843BD0);
      if ((v66 & 1) == 0)
      {
        CGFloat v44 = *(double *)v65;
        CGFloat v45 = *(double *)&v65[1];
        CGFloat v46 = *(double *)&v65[2];
        CGFloat v47 = *(double *)&v65[3];
        objc_msgSend(v34, sel_boundingBox);
        CGFloat x = v77.origin.x;
        CGFloat y = v77.origin.y;
        CGFloat width = v77.size.width;
        CGFloat height = v77.size.height;
        v82.origin.CGFloat x = v44;
        v82.origin.CGFloat y = v45;
        v82.size.CGFloat width = v46;
        v82.size.CGFloat height = v47;
        CGRect v78 = CGRectIntersection(v77, v82);
        CGFloat v51 = v78.origin.x;
        CGFloat v52 = v78.origin.y;
        CGFloat v53 = v78.size.width;
        CGFloat v54 = v78.size.height;
        double v55 = CGRectGetWidth(v78);
        v79.origin.CGFloat x = v51;
        v79.origin.CGFloat y = v52;
        v79.size.CGFloat width = v53;
        v79.size.CGFloat height = v54;
        *(float *)&CGFloat v52 = v55 * CGRectGetHeight(v79);
        CGFloat v56 = x;
        v80.origin.CGFloat x = x;
        v80.origin.CGFloat y = y;
        v80.size.CGFloat width = width;
        v80.size.CGFloat height = height;
        CGFloat v57 = CGRectGetWidth(v80);
        v81.origin.CGFloat x = v56;
        v81.origin.CGFloat y = y;
        v81.size.CGFloat width = width;
        v81.size.CGFloat height = height;
        float v58 = v57 * CGRectGetHeight(v81);
        v63[6] = v73;
        v63[7] = v74;
        *(float *)&CGFloat v57 = *(float *)&v52 / v58;
        v63[8] = v75;
        uint64_t v64 = v76;
        v63[2] = v69;
        v63[3] = v70;
        v63[4] = v71;
        v63[5] = v72;
        v63[0] = v67;
        v63[1] = v68;
        uint64_t v59 = v62;
        (*(void (**)(char *, void, uint64_t))(v62 + 104))(v26, *MEMORY[0x1E4FBBEB0], v16);
        unint64_t v60 = sub_1D7904644(4, (uint64_t)v26, *(float *)&v57);

        uint64_t v42 = HIDWORD(v60) & 1;
        (*(void (**)(char *, uint64_t))(v59 + 8))(v26, v16);
        uint64_t v41 = v60;
        goto LABEL_15;
      }
      if (qword_1EBDF9DC8 != -1) {
        swift_once();
      }
      uint64_t v35 = __swift_project_value_buffer(v5, (uint64_t)qword_1EBDFBE70);
      swift_beginAccess();
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v15, v35, v5);
      sub_1D79202DC();
    }
    else
    {
      if (qword_1EBDF9DC8 != -1) {
        swift_once();
      }
      uint64_t v40 = __swift_project_value_buffer(v5, (uint64_t)qword_1EBDFBE70);
      swift_beginAccess();
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v15, v40, v5);
      sub_1D7920460();
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
  }
  else
  {
    LOWORD(v63[0]) = 338;
    unint64_t v36 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    float v37 = (void *)swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000036, 0x80000001D7AC2D70, (__int16 *)v63, 0, v36, 0xD000000000000065, 0x80000001D7AC28E0, v38, 0xD00000000000001CLL, 0x80000001D7AC2DB0, 687);
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v39 = __swift_project_value_buffer(v5, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v15, v39, v5);
    DIPLogError(_:message:log:)(v37, 0, 0xE000000000000000);
    _s13CoreIDVShared9AnalyticsC9sendErroryys0E0_pFZ_0(v37);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
  }
  uint64_t v41 = 0;
  LOBYTE(v42) = 1;
LABEL_15:
  LOBYTE(v67) = v42;
  return v41 | ((unint64_t)v42 << 32);
}

unint64_t sub_1D7907C20(void *a1)
{
  uint64_t v3 = sub_1D7A9B5F8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v5, v6, v7, v8, v9, v10, v11);
  uint64_t v13 = (char *)v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1D7A9D328();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14, v16, v17, v18, v19, v20, v21, v22);
  uint64_t v24 = (char *)v54 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v25 = v1[7];
  long long v62 = v1[6];
  long long v63 = v25;
  long long v64 = v1[8];
  uint64_t v65 = *((void *)v1 + 18);
  long long v26 = v1[3];
  long long v58 = v1[2];
  long long v59 = v26;
  long long v27 = v1[5];
  long long v60 = v1[4];
  long long v61 = v27;
  long long v28 = v1[1];
  long long v56 = *v1;
  long long v57 = v28;
  id v29 = objc_msgSend(a1, sel_results);
  if (v29)
  {
    long long v30 = v29;
    sub_1D78C4038(0, &qword_1EA843BF0);
    unint64_t v31 = sub_1D7A9C318();

    id v32 = sub_1D790F244(v31);
    swift_bridgeObjectRelease();
    if (v32)
    {
      id v33 = objc_msgSend(v32, sel_faceAttributes);
      if (v33)
      {
        id v34 = v33;
        id v35 = objc_msgSend(v33, sel_eyesCategory);
        id v36 = objc_msgSend(v35, sel_label);

        id v37 = objc_msgSend(v36, sel_identifier);
        uint64_t v38 = sub_1D7A9BFC8();
        uint64_t v40 = v39;

        if (v38 == sub_1D7A9BFC8() && v40 == v41)
        {
          swift_bridgeObjectRelease_n();
        }
        else
        {
          char v49 = sub_1D7A9D358();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          float v50 = 0.0;
          if ((v49 & 1) == 0)
          {
LABEL_17:
            v54[6] = v62;
            v54[7] = v63;
            v54[8] = v64;
            uint64_t v55 = v65;
            v54[2] = v58;
            v54[3] = v59;
            v54[4] = v60;
            v54[5] = v61;
            v54[0] = v56;
            v54[1] = v57;
            (*(void (**)(char *, void, uint64_t))(v15 + 104))(v24, *MEMORY[0x1E4FBBEB0], v14);
            unint64_t v52 = sub_1D7904644(9, (uint64_t)v24, v50);

            uint64_t v48 = HIDWORD(v52) & 1;
            (*(void (**)(char *, uint64_t))(v15 + 8))(v24, v14);
            uint64_t v47 = v52;
            return v47 | ((unint64_t)v48 << 32);
          }
        }
        objc_msgSend(v36, sel_confidence);
        float v50 = v51;
        goto LABEL_17;
      }
    }
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v46 = __swift_project_value_buffer(v3, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v13, v46, v3);
    sub_1D79205E4();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v13, v3);
  }
  else
  {
    LOWORD(v54[0]) = 338;
    unint64_t v42 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    CGFloat v43 = (void *)swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000037, 0x80000001D7AC2DD0, (__int16 *)v54, 0, v42, 0xD000000000000065, 0x80000001D7AC28E0, v44, 0xD00000000000001DLL, 0x80000001D7AC2E10, 769);
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v45 = __swift_project_value_buffer(v3, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v13, v45, v3);
    DIPLogError(_:message:log:)(v43, 0, 0xE000000000000000);
    _s13CoreIDVShared9AnalyticsC9sendErroryys0E0_pFZ_0(v43);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v13, v3);
  }
  uint64_t v47 = 0;
  LOBYTE(v48) = 1;
  return v47 | ((unint64_t)v48 << 32);
}

unint64_t sub_1D790819C(void *a1)
{
  uint64_t v3 = sub_1D7A9B5F8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v5, v6, v7, v8, v9, v10, v11);
  uint64_t v13 = (char *)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1D7A9D328();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14, v16, v17, v18, v19, v20, v21, v22);
  uint64_t v24 = (char *)&v67 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v25 = v1[7];
  long long v87 = v1[6];
  long long v88 = v25;
  long long v89 = v1[8];
  uint64_t v90 = *((void *)v1 + 18);
  long long v26 = v1[3];
  long long v83 = v1[2];
  long long v84 = v26;
  long long v27 = v1[5];
  long long v85 = v1[4];
  long long v86 = v27;
  long long v28 = v1[1];
  long long v81 = *v1;
  long long v82 = v28;
  id v29 = objc_msgSend(a1, sel_results);
  if (v29)
  {
    long long v30 = v29;
    sub_1D78C4038(0, &qword_1EA843BF0);
    unint64_t v31 = sub_1D7A9C318();

    id v32 = sub_1D790F244(v31);
    swift_bridgeObjectRelease();
    if (v32)
    {
      id v33 = objc_msgSend(v32, sel_faceAttributes);
      if (v33)
      {
        id v69 = v33;
        id v34 = objc_msgSend(v33, sel_glassesCategory);
        id v35 = objc_msgSend(v34, sel_label);

        id v36 = objc_msgSend(v35, sel_identifier);
        uint64_t v37 = sub_1D7A9BFC8();
        uint64_t v39 = v38;

        if (v37 == sub_1D7A9BFC8() && v39 == v40)
        {
          swift_bridgeObjectRelease_n();
        }
        else
        {
          char v48 = sub_1D7A9D358();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          float v49 = 0.0;
          if ((v48 & 1) == 0)
          {
LABEL_17:
            id v51 = objc_msgSend(v35, sel_identifier);
            uint64_t v52 = sub_1D7A9BFC8();
            uint64_t v54 = v53;

            uint64_t v55 = sub_1D7A9BFC8();
            id v70 = v32;
            if (v52 == v55 && v54 == v56)
            {
              uint64_t v57 = v14;
              swift_bridgeObjectRelease_n();
            }
            else
            {
              uint64_t v57 = v14;
              char v58 = sub_1D7A9D358();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              float v59 = 0.0;
              if ((v58 & 1) == 0)
              {
LABEL_22:
                long long v77 = v87;
                long long v78 = v88;
                long long v79 = v89;
                uint64_t v80 = v90;
                long long v73 = v83;
                long long v74 = v84;
                long long v75 = v85;
                long long v76 = v86;
                long long v71 = v81;
                long long v72 = v82;
                uint64_t v61 = *MEMORY[0x1E4FBBEB0];
                long long v62 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 104);
                uint64_t v63 = v57;
                v62(v24, v61, v57);
                unint64_t v64 = sub_1D7904644(11, (uint64_t)v24, v49);
                id v67 = v35;
                unint64_t v68 = v64;
                uint64_t v47 = HIDWORD(v64) & 1;
                uint64_t v65 = *(void (**)(char *, uint64_t))(v15 + 8);
                v65(v24, v63);
                long long v77 = v87;
                long long v78 = v88;
                long long v79 = v89;
                uint64_t v80 = v90;
                long long v73 = v83;
                long long v74 = v84;
                long long v75 = v85;
                long long v76 = v86;
                long long v71 = v81;
                long long v72 = v82;
                v62(v24, v61, v63);
                sub_1D7904644(10, (uint64_t)v24, v59);

                v65(v24, v63);
                uint64_t v46 = v68;
                return v46 | ((unint64_t)v47 << 32);
              }
            }
            objc_msgSend(v35, sel_confidence);
            float v59 = v60;
            goto LABEL_22;
          }
        }
        objc_msgSend(v35, sel_confidence);
        float v49 = v50;
        goto LABEL_17;
      }
    }
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v45 = __swift_project_value_buffer(v3, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v13, v45, v3);
    sub_1D7920768();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v13, v3);
  }
  else
  {
    LOWORD(v71) = 338;
    unint64_t v41 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    unint64_t v42 = (void *)swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000036, 0x80000001D7AC3240, (__int16 *)&v71, 0, v41, 0xD000000000000065, 0x80000001D7AC28E0, v43, 0xD00000000000001CLL, 0x80000001D7AC3280, 784);
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v44 = __swift_project_value_buffer(v3, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v13, v44, v3);
    DIPLogError(_:message:log:)(v42, 0, 0xE000000000000000);
    _s13CoreIDVShared9AnalyticsC9sendErroryys0E0_pFZ_0(v42);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v13, v3);
  }
  uint64_t v46 = 0;
  LOBYTE(v47) = 1;
  return v46 | ((unint64_t)v47 << 32);
}

unint64_t sub_1D7908870(void *a1)
{
  uint64_t v3 = sub_1D7A9B5F8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v5, v6, v7, v8, v9, v10, v11);
  uint64_t v13 = (char *)v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1D7A9D328();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14, v16, v17, v18, v19, v20, v21, v22);
  uint64_t v24 = (char *)v54 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v25 = v1[7];
  long long v62 = v1[6];
  long long v63 = v25;
  long long v64 = v1[8];
  uint64_t v65 = *((void *)v1 + 18);
  long long v26 = v1[3];
  long long v58 = v1[2];
  long long v59 = v26;
  long long v27 = v1[5];
  long long v60 = v1[4];
  long long v61 = v27;
  long long v28 = v1[1];
  long long v56 = *v1;
  long long v57 = v28;
  id v29 = objc_msgSend(a1, sel_results);
  if (v29)
  {
    long long v30 = v29;
    sub_1D78C4038(0, &qword_1EA843BF0);
    unint64_t v31 = sub_1D7A9C318();

    id v32 = sub_1D790F244(v31);
    swift_bridgeObjectRelease();
    if (v32)
    {
      id v33 = objc_msgSend(v32, sel_faceAttributes);
      if (v33)
      {
        id v34 = v33;
        id v35 = objc_msgSend(v33, sel_facemaskCategory);
        id v36 = objc_msgSend(v35, sel_label);

        id v37 = objc_msgSend(v36, sel_identifier);
        uint64_t v38 = sub_1D7A9BFC8();
        uint64_t v40 = v39;

        if (v38 == sub_1D7A9BFC8() && v40 == v41)
        {
          swift_bridgeObjectRelease_n();
        }
        else
        {
          char v49 = sub_1D7A9D358();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          float v50 = 0.0;
          if ((v49 & 1) == 0)
          {
LABEL_17:
            v54[6] = v62;
            v54[7] = v63;
            v54[8] = v64;
            uint64_t v55 = v65;
            v54[2] = v58;
            v54[3] = v59;
            v54[4] = v60;
            v54[5] = v61;
            v54[0] = v56;
            v54[1] = v57;
            (*(void (**)(char *, void, uint64_t))(v15 + 104))(v24, *MEMORY[0x1E4FBBEB0], v14);
            unint64_t v52 = sub_1D7904644(12, (uint64_t)v24, v50);

            uint64_t v48 = HIDWORD(v52) & 1;
            (*(void (**)(char *, uint64_t))(v15 + 8))(v24, v14);
            uint64_t v47 = v52;
            return v47 | ((unint64_t)v48 << 32);
          }
        }
        objc_msgSend(v36, sel_confidence);
        float v50 = v51;
        goto LABEL_17;
      }
    }
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v46 = __swift_project_value_buffer(v3, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v13, v46, v3);
    sub_1D79208EC();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v13, v3);
  }
  else
  {
    LOWORD(v54[0]) = 338;
    unint64_t v42 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    uint64_t v43 = (void *)swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000037, 0x80000001D7AC2E30, (__int16 *)v54, 0, v42, 0xD000000000000065, 0x80000001D7AC28E0, v44, 0xD00000000000001DLL, 0x80000001D7AC2E70, 801);
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v45 = __swift_project_value_buffer(v3, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v13, v45, v3);
    DIPLogError(_:message:log:)(v43, 0, 0xE000000000000000);
    _s13CoreIDVShared9AnalyticsC9sendErroryys0E0_pFZ_0(v43);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v13, v3);
  }
  uint64_t v47 = 0;
  LOBYTE(v48) = 1;
  return v47 | ((unint64_t)v48 << 32);
}

unint64_t sub_1D7908DEC(void *a1)
{
  uint64_t v3 = sub_1D7A9B5F8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v5, v6, v7, v8, v9, v10, v11);
  uint64_t v13 = (char *)v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1D7A9D328();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14, v16, v17, v18, v19, v20, v21, v22);
  uint64_t v24 = (char *)v54 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v25 = v1[7];
  long long v62 = v1[6];
  long long v63 = v25;
  long long v64 = v1[8];
  uint64_t v65 = *((void *)v1 + 18);
  long long v26 = v1[3];
  long long v58 = v1[2];
  long long v59 = v26;
  long long v27 = v1[5];
  long long v60 = v1[4];
  long long v61 = v27;
  long long v28 = v1[1];
  long long v56 = *v1;
  long long v57 = v28;
  id v29 = objc_msgSend(a1, sel_results);
  if (!v29)
  {
    LOWORD(v54[0]) = 338;
    unint64_t v43 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    uint64_t v44 = (void *)swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000037, 0x80000001D7AC2EF0, (__int16 *)v54, 0, v43, 0xD000000000000065, 0x80000001D7AC28E0, v45, 0xD00000000000001DLL, 0x80000001D7AC2F30, 816);
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v46 = __swift_project_value_buffer(v3, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v13, v46, v3);
    DIPLogError(_:message:log:)(v44, 0, 0xE000000000000000);
    _s13CoreIDVShared9AnalyticsC9sendErroryys0E0_pFZ_0(v44);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v13, v3);

    goto LABEL_14;
  }
  long long v30 = v29;
  sub_1D78C4038(0, &qword_1EA843BF0);
  unint64_t v31 = sub_1D7A9C318();

  id v32 = sub_1D790F244(v31);
  swift_bridgeObjectRelease();
  if (!v32)
  {
LABEL_11:
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v47 = __swift_project_value_buffer(v3, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v13, v47, v3);
    sub_1D7920A70();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v13, v3);
LABEL_14:
    uint64_t v48 = 0;
    LOBYTE(v49) = 1;
    return v48 | ((unint64_t)v49 << 32);
  }
  id v33 = objc_msgSend(v32, sel_faceAttributes);
  if (!v33)
  {

    goto LABEL_11;
  }
  id v34 = v33;
  id v35 = objc_msgSend(v33, sel_VN7fiLHgGnvqPqG63cfDUCK4Xm8obUuWoP);
  id v36 = objc_msgSend(v35, sel_label);

  id v37 = objc_msgSend(v36, sel_identifier);
  uint64_t v38 = sub_1D7A9BFC8();
  uint64_t v40 = v39;

  if (v38 == sub_1D7A9BFC8() && v40 == v41)
  {
    swift_bridgeObjectRelease_n();
    float v42 = 0.0;
  }
  else
  {
    char v50 = sub_1D7A9D358();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    float v42 = 0.0;
    if ((v50 & 1) == 0)
    {
      objc_msgSend(v36, sel_confidence);
      float v42 = v51;
    }
  }
  v54[6] = v62;
  v54[7] = v63;
  v54[8] = v64;
  uint64_t v55 = v65;
  v54[2] = v58;
  v54[3] = v59;
  v54[4] = v60;
  v54[5] = v61;
  v54[0] = v56;
  v54[1] = v57;
  (*(void (**)(char *, void, uint64_t))(v15 + 104))(v24, *MEMORY[0x1E4FBBEB0], v14);
  unint64_t v52 = sub_1D7904644(13, (uint64_t)v24, v42);

  uint64_t v49 = HIDWORD(v52) & 1;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v24, v14);
  uint64_t v48 = v52;
  return v48 | ((unint64_t)v49 << 32);
}

char *sub_1D790936C(void *a1)
{
  uint64_t v3 = sub_1D7A9B5F8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v5, v6, v7, v8, v9, v10, v11);
  uint64_t v13 = (char *)&v36[-4] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v14 = *(_OWORD *)(v1 + 112);
  v37[6] = *(_OWORD *)(v1 + 96);
  v37[7] = v14;
  v37[8] = *(_OWORD *)(v1 + 128);
  uint64_t v38 = *(void *)(v1 + 144);
  long long v15 = *(_OWORD *)(v1 + 48);
  v37[2] = *(_OWORD *)(v1 + 32);
  uint64_t v37[3] = v15;
  long long v16 = *(_OWORD *)(v1 + 80);
  v37[4] = *(_OWORD *)(v1 + 64);
  v37[5] = v16;
  long long v17 = *(_OWORD *)(v1 + 16);
  v37[0] = *(_OWORD *)v1;
  v37[1] = v17;
  id v18 = objc_msgSend(a1, sel_results);
  if (!v18)
  {
    v36[0] = 338;
    unint64_t v29 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    long long v30 = (void *)swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000038, 0x80000001D7AC2E90, v36, 0, v29, 0xD000000000000065, 0x80000001D7AC28E0, v31, 0xD00000000000001ELL, 0x80000001D7AC2ED0, 834);
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v32 = __swift_project_value_buffer(v3, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v13, v32, v3);
    DIPLogError(_:message:log:)(v30, 0, 0xE000000000000000);
    _s13CoreIDVShared9AnalyticsC9sendErroryys0E0_pFZ_0(v30);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v13, v3);

    return 0;
  }
  uint64_t v19 = v18;
  sub_1D78C4038(0, &qword_1EA843BF0);
  unint64_t v20 = sub_1D7A9C318();

  id v21 = sub_1D790F244(v20);
  swift_bridgeObjectRelease();
  if (!v21)
  {
LABEL_9:
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v33 = __swift_project_value_buffer(v3, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v13, v33, v3);
    sub_1D7920BF4();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v13, v3);
    return 0;
  }
  id v22 = objc_msgSend(v21, sel_faceAttributes);
  if (!v22)
  {

    goto LABEL_9;
  }
  uint64_t v23 = v22;
  id v24 = objc_msgSend(v22, sel_VN7fiLHgGnvqPqG63cfDUCK4Xm8obUuWoP);
  id v25 = objc_msgSend(v24, sel_allLabelsWithConfidences);

  sub_1D78C4038(0, &qword_1EA843C70);
  unint64_t v26 = sub_1D7A9C318();

  uint64_t v27 = sub_1D7A9C388();
  *(void *)(v27 + 16) = 5;
  *(void *)(v27 + 32) = 0;
  *(void *)(v27 + 40) = 0;
  *(_DWORD *)(v27 + 48) = 0;
  sub_1D7910D14((uint64_t)v37);
  long long v28 = sub_1D7910DF0((char *)v27, v26);
  sub_1D7910D58((uint64_t)v37);
  swift_bridgeObjectRelease();

  return v28;
}

uint64_t sub_1D7909790(void *a1)
{
  uint64_t v2 = sub_1D7A9B5F8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4, v5, v6, v7, v8, v9, v10);
  uint64_t v12 = (char *)&v51[-4] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = objc_msgSend(a1, sel_results);
  if (v13)
  {
    long long v14 = v13;
    sub_1D78C4038(0, &qword_1EA843BF0);
    unint64_t v15 = sub_1D7A9C318();

    id v16 = sub_1D790F244(v15);
    swift_bridgeObjectRelease();
    if (v16)
    {
      id v17 = objc_msgSend(v16, sel_faceAttributes);
      if (v17)
      {
        id v18 = v17;
        id v19 = objc_msgSend(v17, sel_VN3iT1YRjjnIuELobV1olJiO1vvItN6Kdq);
        id v20 = objc_msgSend(v19, sel_label);

        id v21 = objc_msgSend(v20, sel_identifier);
        uint64_t v22 = sub_1D7A9BFC8();
        uint64_t v24 = v23;

        if (sub_1D7A9BFC8() == v22 && v25 == v24)
        {

          swift_bridgeObjectRelease_n();
          return 1;
        }
        char v27 = sub_1D7A9D358();
        swift_bridgeObjectRelease();
        if (v27)
        {
          swift_bridgeObjectRelease();

          return 1;
        }
        if (sub_1D7A9BFC8() == v22 && v36 == v24)
        {

          uint64_t v34 = 2;
          swift_bridgeObjectRelease_n();
          return v34;
        }
        char v37 = sub_1D7A9D358();
        swift_bridgeObjectRelease();
        if (v37)
        {
          swift_bridgeObjectRelease();

          return 2;
        }
        if (sub_1D7A9BFC8() == v22 && v38 == v24)
        {

          swift_bridgeObjectRelease_n();
          return 3;
        }
        char v39 = sub_1D7A9D358();
        swift_bridgeObjectRelease();
        if (v39)
        {
          swift_bridgeObjectRelease();

          return 3;
        }
        if (sub_1D7A9BFC8() == v22 && v40 == v24)
        {

          swift_bridgeObjectRelease_n();
          return 4;
        }
        char v41 = sub_1D7A9D358();
        swift_bridgeObjectRelease();
        if (v41)
        {
          swift_bridgeObjectRelease();

          return 4;
        }
        if (sub_1D7A9BFC8() == v22 && v42 == v24)
        {

          swift_bridgeObjectRelease_n();
          return 5;
        }
        char v43 = sub_1D7A9D358();
        swift_bridgeObjectRelease();
        if (v43)
        {
          swift_bridgeObjectRelease();

          return 5;
        }
        if (sub_1D7A9BFC8() == v22 && v44 == v24)
        {

          swift_bridgeObjectRelease_n();
          return 6;
        }
        char v45 = sub_1D7A9D358();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v45)
        {

          return 6;
        }
        v51[0] = 351;
        unint64_t v46 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
        sub_1D7860544();
        uint64_t v47 = (void *)swift_allocError();
        DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000033, 0x80000001D7AC2FA0, v51, 0, v46, 0xD000000000000065, 0x80000001D7AC28E0, v48, 0xD000000000000013, 0x80000001D7AC2F80, 887);
        if (qword_1EBDF9DC8 != -1) {
          swift_once();
        }
        uint64_t v49 = __swift_project_value_buffer(v2, (uint64_t)qword_1EBDFBE70);
        swift_beginAccess();
        (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v12, v49, v2);
        DIPLogError(_:message:log:)(v47, 0, 0xE000000000000000);
        _s13CoreIDVShared9AnalyticsC9sendErroryys0E0_pFZ_0(v47);

        (*(void (**)(char *, uint64_t))(v3 + 8))(v12, v2);
        uint64_t v32 = v47;
        goto LABEL_13;
      }
    }
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v33 = __swift_project_value_buffer(v2, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v12, v33, v2);
    sub_1D7920D78();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v12, v2);
    return 0;
  }
  v51[0] = 338;
  unint64_t v28 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
  sub_1D7860544();
  unint64_t v29 = (void *)swift_allocError();
  DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD00000000000002ELL, 0x80000001D7AC2F50, v51, 0, v28, 0xD000000000000065, 0x80000001D7AC28E0, v30, 0xD000000000000013, 0x80000001D7AC2F80, 857);
  if (qword_1EBDF9DC8 != -1) {
    swift_once();
  }
  uint64_t v31 = __swift_project_value_buffer(v2, (uint64_t)qword_1EBDFBE70);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v12, v31, v2);
  DIPLogError(_:message:log:)(v29, 0, 0xE000000000000000);
  _s13CoreIDVShared9AnalyticsC9sendErroryys0E0_pFZ_0(v29);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v12, v2);
  uint64_t v32 = v29;
LABEL_13:

  return 0;
}

void sub_1D7909F80(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1D7A9B5F8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6, v7, v8, v9, v10, v11, v12);
  long long v14 = (char *)&v34[-4] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = objc_msgSend(a1, sel_results);
  if (!v15)
  {
    v34[0] = 338;
    unint64_t v28 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    unint64_t v29 = (void *)swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000030, 0x80000001D7AC2FE0, v34, 0, v28, 0xD000000000000065, 0x80000001D7AC28E0, v30, 0xD000000000000015, 0x80000001D7AC3020, 894);
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v31 = __swift_project_value_buffer(v4, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v14, v31, v4);
    DIPLogError(_:message:log:)(v29, 0, 0xE000000000000000);
    _s13CoreIDVShared9AnalyticsC9sendErroryys0E0_pFZ_0(v29);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);

    goto LABEL_10;
  }
  id v16 = v15;
  sub_1D78C4038(0, &qword_1EA843BF0);
  unint64_t v17 = sub_1D7A9C318();

  id v18 = sub_1D790F244(v17);
  swift_bridgeObjectRelease();
  if (!v18)
  {
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v32 = __swift_project_value_buffer(v4, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v14, v32, v4);
    sub_1D7920EFC();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
LABEL_10:
    char v27 = 1;
    uint64_t v20 = 0;
    uint64_t v22 = 0;
    uint64_t v24 = 0;
    uint64_t v26 = 0;
    goto LABEL_11;
  }
  objc_msgSend(v18, sel_boundingBox);
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  uint64_t v26 = v25;

  char v27 = 0;
LABEL_11:
  *(void *)a2 = v20;
  *(void *)(a2 + 8) = v22;
  *(void *)(a2 + 16) = v24;
  *(void *)(a2 + 24) = v26;
  *(unsigned char *)(a2 + 32) = v27;
}

BOOL sub_1D790A2E4(void *a1)
{
  uint64_t v2 = sub_1D7A9B5F8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4, v5, v6, v7, v8, v9, v10);
  uint64_t v12 = (char *)&v23[-4] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = objc_msgSend(a1, sel_results);
  if (v13)
  {
    long long v14 = v13;
    sub_1D78C4038(0, &qword_1EA843C78);
    unint64_t v15 = sub_1D7A9C318();

    if (v15 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v16 = sub_1D7A9CFB8();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    return v16 != 0;
  }
  else
  {
    v23[0] = 338;
    unint64_t v18 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    uint64_t v19 = (void *)swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000033, 0x80000001D7AC3040, v23, 0, v18, 0xD000000000000065, 0x80000001D7AC28E0, v20, 0xD000000000000019, 0x80000001D7AC3080, 909);
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v21 = __swift_project_value_buffer(v2, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v12, v21, v2);
    DIPLogError(_:message:log:)(v19, 0, 0xE000000000000000);
    _s13CoreIDVShared9AnalyticsC9sendErroryys0E0_pFZ_0(v19);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v12, v2);

    return 0;
  }
}

uint64_t sub_1D790A58C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1D7A9B5F8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v6, v8, v9, v10, v11, v12, v13, v14);
  unint64_t v17 = (char *)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15, v18, v19, v20, v21, v22, v23, v24);
  uint64_t v26 = (char *)&v61 - v25;
  id v27 = objc_msgSend(a2, sel_results);
  if (!v27)
  {
    LOWORD(v81[0]) = 338;
    unint64_t v36 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    char v37 = (void *)swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD00000000000002FLL, 0x80000001D7AC31E0, (__int16 *)v81, 0, v36, 0xD000000000000065, 0x80000001D7AC28E0, v38, 0xD00000000000002ALL, 0x80000001D7AC3210, 918);
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v39 = __swift_project_value_buffer(v6, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v26, v39, v6);
    DIPLogError(_:message:log:)(v37, 0, 0xE000000000000000);
    _s13CoreIDVShared9AnalyticsC9sendErroryys0E0_pFZ_0(v37);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v26, v6);

    goto LABEL_29;
  }
  unint64_t v28 = v27;
  sub_1D78C4038(0, &qword_1EA843C78);
  unint64_t v29 = sub_1D7A9C318();

  if (!(v29 >> 62))
  {
    if (*(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_4;
    }
LABEL_26:
    swift_bridgeObjectRelease();
LABEL_27:
    if (qword_1EBDF9DC8 == -1)
    {
LABEL_28:
      uint64_t v60 = __swift_project_value_buffer(v6, (uint64_t)qword_1EBDFBE70);
      swift_beginAccess();
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v26, v60, v6);
      sub_1D7921080();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v26, v6);
LABEL_29:
      sub_1D790FA68(v81);
      uint64_t v58 = a1;
      goto LABEL_30;
    }
LABEL_33:
    swift_once();
    goto LABEL_28;
  }
  swift_bridgeObjectRetain();
  uint64_t v59 = sub_1D7A9CFB8();
  swift_bridgeObjectRelease();
  if (!v59) {
    goto LABEL_26;
  }
LABEL_4:
  if ((v29 & 0xC000000000000001) != 0)
  {
    id v30 = (id)MEMORY[0x1D947BA10](0, v29);
  }
  else
  {
    if (!*(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_33;
    }
    id v30 = *(id *)(v29 + 32);
  }
  uint64_t v31 = v30;
  swift_bridgeObjectRelease();
  id v32 = objc_msgSend(v31, sel_payloadStringValue);
  if (!v32)
  {

    goto LABEL_27;
  }
  uint64_t v33 = v32;
  uint64_t v65 = a1;
  uint64_t v66 = sub_1D7A9BFC8();
  id v67 = v34;

  id v64 = v31;
  if (a3)
  {
    uint64_t v35 = a3;
  }
  else
  {
    if (qword_1EA8414D0 != -1) {
      swift_once();
    }
    uint64_t v35 = qword_1EA845A90;
    swift_bridgeObjectRetain();
  }
  uint64_t v40 = v66;
  long long v70 = xmmword_1D7AA97A0;
  int64x2_t v71 = vdupq_n_s64(2uLL);
  int64x2_t v72 = v71;
  int64x2_t v73 = vdupq_n_s64(4uLL);
  long long v74 = xmmword_1D7AA9720;
  uint64_t v75 = 19524;
  unint64_t v76 = 0xE200000000000000;
  uint64_t v77 = 17481;
  unint64_t v78 = 0xE200000000000000;
  uint64_t v79 = v35;
  swift_bridgeObjectRetain();
  v41._countAndFlagsBits = v40;
  uint64_t v42 = v67;
  v41._object = v67;
  PDF417Parser.parse(payload:)(&v80, v41);
  if (!v43)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    memcpy(v68, &v80, 0x360uLL);
    v54._countAndFlagsBits = 0x3064663432636337;
    v54._object = (void *)0xE800000000000000;
    v55._countAndFlagsBits = 0x4F20373134464450;
    v55._object = (void *)0xE90000000000004BLL;
    logMilestone(tag:description:)(v54, v55);

    nullsub_1(v68);
    sub_1D7871D78((uint64_t)v68, (uint64_t)v69, &qword_1EA843BA0);
    v69[108] = v40;
    v69[109] = v42;
    memcpy(v81, v69, 0x370uLL);
    nullsub_1(v81);
    sub_1D7871D78((uint64_t)v81, v65, &qword_1EA843BD8);
    return 1;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  if (qword_1EBDF9DC8 != -1) {
    swift_once();
  }
  uint64_t v44 = __swift_project_value_buffer(v6, (uint64_t)qword_1EBDFBE70);
  swift_beginAccess();
  char v45 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v45(v26, v44, v6);
  DIPLogError(_:message:log:)(v43, 0, 0xE000000000000000);
  _s13CoreIDVShared9AnalyticsC9sendErroryys0E0_pFZ_0(v43);
  long long v63 = *(void (**)(char *, uint64_t))(v7 + 8);
  v63(v26, v6);
  v45(v17, v44, v6);
  id v46 = v43;
  id v47 = v43;
  uint64_t v48 = sub_1D7A9B5D8();
  os_log_type_t v49 = sub_1D7A9C758();
  if (os_log_type_enabled(v48, v49))
  {
    char v50 = (uint8_t *)swift_slowAlloc();
    uint64_t v62 = swift_slowAlloc();
    v81[0] = v62;
    *(_DWORD *)char v50 = 136446210;
    long long v61 = v50 + 4;
    swift_getErrorValue();
    uint64_t v51 = sub_1D7A9D548();
    v69[0] = sub_1D7923300(v51, v52, v81);
    sub_1D7A9C9E8();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1D7853000, v48, v49, "PDF417 Barcode was found but was not decodable: %{public}s", v50, 0xCu);
    uint64_t v53 = v62;
    swift_arrayDestroy();
    MEMORY[0x1D947D740](v53, -1, -1);
    MEMORY[0x1D947D740](v50, -1, -1);
  }
  else
  {
  }
  v63(v17, v6);
  long long v57 = v67;
  sub_1D79162AC(&v80);
  sub_1D7871D78((uint64_t)&v80, (uint64_t)v69, &qword_1EA843BA0);
  v69[108] = v66;
  v69[109] = v57;
  memcpy(v81, v69, 0x370uLL);
  nullsub_1(v81);
  uint64_t v58 = v65;
LABEL_30:
  sub_1D7871D78((uint64_t)v81, v58, &qword_1EA843BD8);
  return 0;
}

uint64_t sub_1D790ADC8(void *a1)
{
  uint64_t v2 = sub_1D7A9B5F8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4, v5, v6, v7, v8, v9, v10);
  uint64_t v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = objc_msgSend(a1, sel_results);
  if (!v13)
  {
    LOWORD(v60[0]) = 338;
    unint64_t v49 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    unint64_t v15 = swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD00000000000002ELL, 0x80000001D7AC3190, (__int16 *)v60, 0, v49, 0xD000000000000065, 0x80000001D7AC28E0, v50, 0xD000000000000016, 0x80000001D7AC31C0, 971);
    if (qword_1EBDF9DC8 == -1)
    {
LABEL_9:
      uint64_t v51 = __swift_project_value_buffer(v2, (uint64_t)qword_1EBDFBE70);
      swift_beginAccess();
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v12, v51, v2);
      DIPLogError(_:message:log:)((void *)v15, 0, 0xE000000000000000);
      _s13CoreIDVShared9AnalyticsC9sendErroryys0E0_pFZ_0((void *)v15);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v12, v2);

      return MEMORY[0x1E4FBC860];
    }
LABEL_18:
    swift_once();
    goto LABEL_9;
  }
  uint64_t v14 = v13;
  sub_1D78C4038(0, &qword_1EA843C80);
  unint64_t v15 = sub_1D7A9C318();

  if (!(v15 >> 62))
  {
    if (*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_4;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v53 = __swift_project_value_buffer(v2, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v12, v53, v2);
    sub_1D7921204();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v12, v2);
    return MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  uint64_t v52 = sub_1D7A9CFB8();
  swift_bridgeObjectRelease();
  if (!v52) {
    goto LABEL_11;
  }
LABEL_4:
  if ((v15 & 0xC000000000000001) != 0)
  {
    id v16 = (id)MEMORY[0x1D947BA10](0, v15);
    goto LABEL_7;
  }
  if (!*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_18;
  }
  id v16 = *(id *)(v15 + 32);
LABEL_7:
  unint64_t v17 = v16;
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF99C0);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1D7AA9790;
  objc_msgSend(v17, sel_topLeft);
  double v20 = v19;
  double v22 = v21;
  uint64_t v23 = (objc_class *)type metadata accessor for IQPoint();
  uint64_t v24 = (char *)objc_allocWithZone(v23);
  float v25 = v20;
  *(float *)&v24[OBJC_IVAR____TtC13CoreIDVShared7IQPoint_x] = v25;
  float v26 = v22;
  *(float *)&v24[OBJC_IVAR____TtC13CoreIDVShared7IQPoint_y] = v26;
  v59.receiver = v24;
  v59.super_class = v23;
  *(void *)(v18 + 32) = objc_msgSendSuper2(&v59, sel_init);
  objc_msgSend(v17, sel_topRight);
  double v28 = v27;
  double v30 = v29;
  uint64_t v31 = (char *)objc_allocWithZone(v23);
  float v32 = v28;
  *(float *)&v31[OBJC_IVAR____TtC13CoreIDVShared7IQPoint_x] = v32;
  float v33 = v30;
  *(float *)&v31[OBJC_IVAR____TtC13CoreIDVShared7IQPoint_y] = v33;
  v58.receiver = v31;
  v58.super_class = v23;
  *(void *)(v18 + 40) = objc_msgSendSuper2(&v58, sel_init);
  objc_msgSend(v17, sel_bottomRight);
  double v35 = v34;
  double v37 = v36;
  uint64_t v38 = (char *)objc_allocWithZone(v23);
  float v39 = v35;
  *(float *)&v38[OBJC_IVAR____TtC13CoreIDVShared7IQPoint_x] = v39;
  float v40 = v37;
  *(float *)&v38[OBJC_IVAR____TtC13CoreIDVShared7IQPoint_y] = v40;
  v57.receiver = v38;
  v57.super_class = v23;
  *(void *)(v18 + 48) = objc_msgSendSuper2(&v57, sel_init);
  objc_msgSend(v17, sel_bottomLeft);
  double v42 = v41;
  double v44 = v43;
  char v45 = (char *)objc_allocWithZone(v23);
  float v46 = v42;
  *(float *)&v45[OBJC_IVAR____TtC13CoreIDVShared7IQPoint_x] = v46;
  float v47 = v44;
  *(float *)&v45[OBJC_IVAR____TtC13CoreIDVShared7IQPoint_y] = v47;
  v56.receiver = v45;
  v56.super_class = v23;
  *(void *)(v18 + 56) = objc_msgSendSuper2(&v56, sel_init);
  v60[0] = v18;
  sub_1D7A9C338();
  uint64_t v48 = v60[0];

  return v48;
}

void sub_1D790B2D8(unint64_t a1)
{
  unint64_t v4 = sub_1D7A9B5F8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v4, v6, v7, v8, v9, v10, v11, v12);
  unint64_t v15 = (char *)&v113 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13, v16, v17, v18, v19, v20, v21, v22);
  uint64_t v24 = (char *)&v113 - v23;
  long long v25 = *(_OWORD *)(v1 + 112);
  long long v127 = *(_OWORD *)(v1 + 96);
  long long v128 = v25;
  long long v129 = *(_OWORD *)(v1 + 128);
  uint64_t v130 = *(void *)(v1 + 144);
  long long v26 = *(_OWORD *)(v1 + 48);
  long long v123 = *(_OWORD *)(v1 + 32);
  long long v124 = v26;
  long long v27 = *(_OWORD *)(v1 + 80);
  long long v125 = *(_OWORD *)(v1 + 64);
  long long v126 = v27;
  long long v28 = *(_OWORD *)(v1 + 16);
  v122[0] = *(_OWORD *)v1;
  v122[1] = v28;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v110 = sub_1D7A9CFB8();
    swift_bridgeObjectRelease();
    if (v110)
    {
      swift_bridgeObjectRetain();
      unint64_t v29 = sub_1D7A9CFB8();
      swift_bridgeObjectRelease();
LABEL_3:
      unint64_t v30 = *(void *)&v122[0];
      if (v29 != *(void *)&v122[0])
      {
        if (qword_1EBDF9DC8 == -1)
        {
LABEL_19:
          uint64_t v55 = __swift_project_value_buffer(v4, (uint64_t)qword_1EBDFBE70);
          swift_beginAccess();
          (*(void (**)(char *, uint64_t, unint64_t))(v5 + 16))(v15, v55, v4);
          swift_bridgeObjectRetain();
          sub_1D7910D14((uint64_t)v122);
          objc_super v56 = sub_1D7A9B5D8();
          os_log_type_t v57 = sub_1D7A9C758();
          if (os_log_type_enabled(v56, v57))
          {
            uint64_t v58 = swift_slowAlloc();
            *(_DWORD *)uint64_t v58 = 134218240;
            unint64_t v120 = v30;
            sub_1D7A9C9E8();
            sub_1D7910D58((uint64_t)v122);
            *(_WORD *)(v58 + 12) = 2048;
            unint64_t v120 = v29;
            sub_1D7A9C9E8();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1D7853000, v56, v57, "Could not convert rect corners, expected %ld corners but found %ld", (uint8_t *)v58, 0x16u);
            MEMORY[0x1D947D740](v58, -1, -1);
          }
          else
          {
            sub_1D7910D58((uint64_t)v122);

            swift_bridgeObjectRelease();
          }
          (*(void (**)(char *, unint64_t))(v5 + 8))(v15, v4);
          return;
        }
LABEL_70:
        swift_once();
        goto LABEL_19;
      }
      uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF99C0);
      uint64_t inited = swift_initStackObject();
      float v32 = (void *)inited;
      *(_OWORD *)(inited + 16) = xmmword_1D7AA9790;
      unint64_t v29 = *((void *)&v124 + 1);
      long long v115 = xmmword_1D7AA9790;
      if ((a1 & 0xC000000000000001) != 0)
      {
        *(void *)(inited + 32) = MEMORY[0x1D947BA10](*((void *)&v124 + 1), a1);
        unint64_t v112 = a1;
        a1 = v123;
        v32[5] = MEMORY[0x1D947BA10](v123, v112);
        unint64_t v2 = *((void *)&v123 + 1);
        v32[6] = MEMORY[0x1D947BA10](*((void *)&v123 + 1), v112);
        unint64_t v30 = v124;
        float v39 = (char *)MEMORY[0x1D947BA10](v124, v112);
LABEL_11:
        v32[7] = v39;
        unint64_t v121 = (unint64_t)v32;
        sub_1D7A9C338();
        unint64_t v4 = v121;
        uint64_t v24 = (char *)(v121 & 0xC000000000000001);
        uint64_t v113 = v5;
        unint64_t v114 = v30;
        if ((v121 & 0xC000000000000001) == 0)
        {
          if ((a1 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else
          {
            unint64_t v40 = *(void *)((v121 & 0xFFFFFFFFFFFFFF8) + 0x10);
            if (a1 < v40)
            {
              if (v2 < v40)
              {
                double v41 = *(void **)(v121 + 32 + 8 * v2);
                double v42 = (char *)*(id *)(v121 + 32 + 8 * a1);
                double v43 = v41;
                goto LABEL_16;
              }
              goto LABEL_69;
            }
          }
          __break(1u);
LABEL_69:
          __break(1u);
          goto LABEL_70;
        }
LABEL_66:
        double v42 = (char *)MEMORY[0x1D947BA10](a1, v4);
        double v43 = (char *)MEMORY[0x1D947BA10](v2, v4);
LABEL_16:
        double v44 = v43;
        char v45 = (float *)&v42[OBJC_IVAR____TtC13CoreIDVShared7IQPoint_x];
        swift_beginAccess();
        float v46 = *v45;
        float v47 = (float *)&v44[OBJC_IVAR____TtC13CoreIDVShared7IQPoint_x];
        swift_beginAccess();
        float v48 = *v47;
        unint64_t v49 = (float *)&v42[OBJC_IVAR____TtC13CoreIDVShared7IQPoint_y];
        swift_beginAccess();
        float v50 = *v49;
        uint64_t v51 = (float *)&v44[OBJC_IVAR____TtC13CoreIDVShared7IQPoint_y];
        swift_beginAccess();
        float v52 = *v51;

        uint64_t v116 = v24;
        if (v24)
        {
          uint64_t v53 = (char *)MEMORY[0x1D947BA10](a1, v4);
          Swift::String v54 = (char *)MEMORY[0x1D947BA10](v29, v4);
        }
        else
        {
          if ((v29 & 0x8000000000000000) != 0)
          {
LABEL_74:
            __break(1u);
            goto LABEL_75;
          }
          if (v29 >= *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
LABEL_75:
            __break(1u);
            goto LABEL_76;
          }
          objc_super v59 = *(void **)(v4 + 32 + 8 * v29);
          uint64_t v53 = (char *)*(id *)(v4 + 32 + 8 * a1);
          Swift::String v54 = v59;
        }
        uint64_t v60 = v54;
        float v61 = sqrtf((float)((float)(v46 - v48) * (float)(v46 - v48)) + (float)((float)(v50 - v52) * (float)(v50 - v52)));
        uint64_t v62 = (float *)&v53[OBJC_IVAR____TtC13CoreIDVShared7IQPoint_x];
        swift_beginAccess();
        float v63 = *v62;
        id v64 = (float *)&v60[OBJC_IVAR____TtC13CoreIDVShared7IQPoint_x];
        swift_beginAccess();
        float v65 = v63 - *v64;
        uint64_t v66 = (float *)&v53[OBJC_IVAR____TtC13CoreIDVShared7IQPoint_y];
        swift_beginAccess();
        float v67 = *v66;
        unint64_t v68 = (float *)&v60[OBJC_IVAR____TtC13CoreIDVShared7IQPoint_y];
        swift_beginAccess();
        float v69 = *v68;

        if (v61 >= sqrtf((float)(v65 * v65) + (float)((float)(v67 - v69) * (float)(v67 - v69))))
        {
LABEL_46:
          if (v4 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v100 = sub_1D7A9CFB8();
            swift_bridgeObjectRelease();
            if (v100) {
              goto LABEL_48;
            }
          }
          else
          {
            uint64_t v100 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
            if (v100)
            {
LABEL_48:
              uint64_t v119 = MEMORY[0x1E4FBC860];
              sub_1D7A9CDC8();
              if ((v100 & 0x8000000000000000) == 0)
              {
                uint64_t v101 = 0;
                do
                {
                  if ((v4 & 0xC000000000000001) != 0) {
                    uint64_t v102 = (char *)MEMORY[0x1D947BA10](v101, v4);
                  }
                  else {
                    uint64_t v102 = (char *)*(id *)(v4 + 8 * v101 + 32);
                  }
                  char v103 = v102;
                  ++v101;
                  uint64_t v104 = &v102[OBJC_IVAR____TtC13CoreIDVShared7IQPoint_y];
                  swift_beginAccess();
                  int v105 = *(_DWORD *)v104;
                  unint64_t v106 = &v103[OBJC_IVAR____TtC13CoreIDVShared7IQPoint_x];
                  swift_beginAccess();
                  int v107 = *(_DWORD *)v106;
                  uint64_t v108 = (objc_class *)type metadata accessor for IQPoint();
                  uint64_t v109 = (char *)objc_allocWithZone(v108);
                  *(_DWORD *)&v109[OBJC_IVAR____TtC13CoreIDVShared7IQPoint_x] = v105;
                  *(_DWORD *)&v109[OBJC_IVAR____TtC13CoreIDVShared7IQPoint_y] = v107;
                  v117.receiver = v109;
                  v117.super_class = v108;
                  objc_msgSendSuper2(&v117, sel_init);

                  sub_1D7A9CD98();
                  sub_1D7A9CDD8();
                  sub_1D7A9CDE8();
                  sub_1D7A9CDA8();
                }
                while (v100 != v101);
                goto LABEL_72;
              }
              __break(1u);
              goto LABEL_74;
            }
          }
LABEL_72:
          swift_bridgeObjectRelease();
          return;
        }
        if (v116) {
          long long v70 = (char *)MEMORY[0x1D947BA10](a1, v4);
        }
        else {
          long long v70 = (char *)*(id *)(v4 + 8 * a1 + 32);
        }
        int64x2_t v71 = v70;
        int64x2_t v72 = (float *)&v70[OBJC_IVAR____TtC13CoreIDVShared7IQPoint_x];
        swift_beginAccess();
        float v73 = *v72;

        if (v116) {
          long long v74 = (char *)MEMORY[0x1D947BA10](v2, v4);
        }
        else {
          long long v74 = (char *)*(id *)(v4 + 8 * v2 + 32);
        }
        uint64_t v75 = v74;
        unint64_t v76 = (float *)&v74[OBJC_IVAR____TtC13CoreIDVShared7IQPoint_x];
        swift_beginAccess();
        float v77 = *v76;

        uint64_t v78 = swift_allocObject();
        uint64_t v79 = (void *)v78;
        *(_OWORD *)(v78 + 16) = v115;
        if (v77 >= v73)
        {
          unint64_t v82 = v114;
          if (!v116)
          {
            CGRect v92 = *(void **)(v4 + 32 + 8 * v29);
            *(void *)(v78 + 32) = v92;
            uint64_t v93 = *(void **)(v4 + 32 + 8 * a1);
            *(void *)(v78 + 40) = v93;
            uint64_t v94 = *(void **)(v4 + 32 + 8 * v2);
            *(void *)(v78 + 48) = v94;
            if ((v82 & 0x8000000000000000) != 0)
            {
LABEL_77:
              __break(1u);
              goto LABEL_78;
            }
            if (v82 >= *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
LABEL_79:
              __break(1u);
              return;
            }
            uint64_t v95 = *(void **)(v4 + 32 + 8 * v82);
            id v96 = v92;
            id v97 = v93;
            id v98 = v94;
            id v83 = v95;
            goto LABEL_45;
          }
          *(void *)(v78 + 32) = MEMORY[0x1D947BA10](v29, v4);
          v79[5] = MEMORY[0x1D947BA10](a1, v4);
          v79[6] = MEMORY[0x1D947BA10](v2, v4);
          unint64_t v81 = v82;
        }
        else
        {
          unint64_t v80 = v114;
          if (!v116)
          {
            unint64_t v84 = v4 + 32;
            long long v85 = *(void **)(v4 + 32 + 8 * v2);
            *(void *)(v78 + 32) = v85;
            if ((v80 & 0x8000000000000000) != 0)
            {
LABEL_76:
              __break(1u);
              goto LABEL_77;
            }
            if (v80 >= *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
LABEL_78:
              __break(1u);
              goto LABEL_79;
            }
            long long v86 = *(void **)(v84 + 8 * v80);
            *(void *)(v78 + 40) = v86;
            long long v87 = *(void **)(v84 + 8 * v29);
            *(void *)(v78 + 48) = v87;
            long long v88 = *(void **)(v84 + 8 * a1);
            id v89 = v85;
            id v90 = v86;
            id v91 = v87;
            id v83 = v88;
            goto LABEL_45;
          }
          *(void *)(v78 + 32) = MEMORY[0x1D947BA10](v2, v4);
          v79[5] = MEMORY[0x1D947BA10](v80, v4);
          v79[6] = MEMORY[0x1D947BA10](v29, v4);
          unint64_t v81 = a1;
        }
        id v83 = (id)MEMORY[0x1D947BA10](v81, v4);
LABEL_45:
        id v99 = v83;
        swift_bridgeObjectRelease();
        v79[7] = v99;
        uint64_t v118 = v79;
        sub_1D7A9C338();
        unint64_t v4 = (unint64_t)v118;
        goto LABEL_46;
      }
      if ((*((void *)&v124 + 1) & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else
      {
        unint64_t v33 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (*((void *)&v124 + 1) < v33)
        {
          unint64_t v34 = a1 + 32;
          double v35 = *(void **)(a1 + 32 + 8 * *((void *)&v124 + 1));
          *(void *)(inited + 32) = v35;
          a1 = v123;
          if ((unint64_t)v123 < v33)
          {
            unint64_t v4 = *(void *)(v34 + 8 * v123);
            *(void *)(inited + 40) = v4;
            unint64_t v2 = *((void *)&v123 + 1);
            if (*((void *)&v123 + 1) < v33)
            {
              uint64_t v24 = *(char **)(v34 + 8 * *((void *)&v123 + 1));
              *(void *)(inited + 48) = v24;
              unint64_t v30 = v124;
              if ((unint64_t)v124 < v33)
              {
                unint64_t v15 = *(char **)(v34 + 8 * v124);
                id v36 = v35;
                id v37 = (id)v4;
                uint64_t v38 = v24;
                float v39 = v15;
                goto LABEL_11;
              }
LABEL_65:
              __break(1u);
              goto LABEL_66;
            }
LABEL_64:
            __break(1u);
            goto LABEL_65;
          }
LABEL_63:
          __break(1u);
          goto LABEL_64;
        }
      }
      __break(1u);
      goto LABEL_63;
    }
  }
  else
  {
    unint64_t v29 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v29) {
      goto LABEL_3;
    }
  }
  if (qword_1EBDF9DC8 != -1) {
    swift_once();
  }
  uint64_t v111 = __swift_project_value_buffer(v4, (uint64_t)qword_1EBDFBE70);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, unint64_t))(v5 + 16))(v24, v111, v4);
  sub_1D7921388();
  (*(void (**)(char *, unint64_t))(v5 + 8))(v24, v4);
}

uint64_t sub_1D790BD50(unint64_t a1, double a2, double a3)
{
  uint64_t v7 = sub_1D7A9B5F8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v7, v9, v10, v11, v12, v13, v14, v15);
  uint64_t v18 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16, v19, v20, v21, v22, v23, v24, v25);
  long long v27 = (char *)&v52 - v26;
  long long v28 = *(_OWORD *)(v3 + 112);
  v56[6] = *(_OWORD *)(v3 + 96);
  v56[7] = v28;
  v56[8] = *(_OWORD *)(v3 + 128);
  uint64_t v57 = *(void *)(v3 + 144);
  long long v29 = *(_OWORD *)(v3 + 48);
  v56[2] = *(_OWORD *)(v3 + 32);
  v56[3] = v29;
  long long v30 = *(_OWORD *)(v3 + 80);
  v56[4] = *(_OWORD *)(v3 + 64);
  v56[5] = v30;
  long long v31 = *(_OWORD *)(v3 + 16);
  v56[0] = *(_OWORD *)v3;
  v56[1] = v31;
  if (!(a1 >> 62))
  {
    uint64_t v32 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v32) {
      goto LABEL_3;
    }
LABEL_20:
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v51 = __swift_project_value_buffer(v7, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v27, v51, v7);
    sub_1D792150C();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v27, v7);
    return MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  uint64_t v50 = sub_1D7A9CFB8();
  swift_bridgeObjectRelease();
  if (!v50) {
    goto LABEL_20;
  }
  swift_bridgeObjectRetain();
  uint64_t v32 = sub_1D7A9CFB8();
  swift_bridgeObjectRelease();
LABEL_3:
  uint64_t v33 = *(void *)&v56[0];
  if (v32 != *(void *)&v56[0])
  {
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v46 = __swift_project_value_buffer(v7, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v18, v46, v7);
    swift_bridgeObjectRetain();
    sub_1D7910D14((uint64_t)v56);
    float v47 = sub_1D7A9B5D8();
    os_log_type_t v48 = sub_1D7A9C758();
    if (os_log_type_enabled(v47, v48))
    {
      uint64_t v49 = swift_slowAlloc();
      *(_DWORD *)uint64_t v49 = 134218240;
      uint64_t v54 = v33;
      sub_1D7A9C9E8();
      sub_1D7910D58((uint64_t)v56);
      *(_WORD *)(v49 + 12) = 2048;
      uint64_t v54 = v32;
      sub_1D7A9C9E8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D7853000, v47, v48, "Could not scale rect corners, expected %ld corners but found %ld", (uint8_t *)v49, 0x16u);
      MEMORY[0x1D947D740](v49, -1, -1);
    }
    else
    {
      sub_1D7910D58((uint64_t)v56);

      swift_bridgeObjectRelease();
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v18, v7);
    return MEMORY[0x1E4FBC860];
  }
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v32)
  {
    uint64_t v55 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1D7A9CDC8();
    if (v32 < 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t v35 = 0;
      float v36 = a2;
      float v37 = a3;
      do
      {
        if ((a1 & 0xC000000000000001) != 0) {
          uint64_t v38 = (char *)MEMORY[0x1D947BA10](v35, a1);
        }
        else {
          uint64_t v38 = (char *)*(id *)(a1 + 8 * v35 + 32);
        }
        float v39 = v38;
        ++v35;
        unint64_t v40 = (float *)&v38[OBJC_IVAR____TtC13CoreIDVShared7IQPoint_x];
        swift_beginAccess();
        float v41 = *v40 * v36;
        double v42 = (float *)&v39[OBJC_IVAR____TtC13CoreIDVShared7IQPoint_y];
        swift_beginAccess();
        float v43 = *v42 * v37;
        double v44 = (objc_class *)type metadata accessor for IQPoint();
        char v45 = (char *)objc_allocWithZone(v44);
        *(float *)&v45[OBJC_IVAR____TtC13CoreIDVShared7IQPoint_x] = v41;
        *(float *)&v45[OBJC_IVAR____TtC13CoreIDVShared7IQPoint_y] = v43;
        v53.receiver = v45;
        v53.super_class = v44;
        objc_msgSendSuper2(&v53, sel_init);

        sub_1D7A9CD98();
        sub_1D7A9CDD8();
        sub_1D7A9CDE8();
        sub_1D7A9CDA8();
      }
      while (v32 != v35);
      return v55;
    }
  }
  return result;
}

void sub_1D790C250(unint64_t a1)
{
  uint64_t v3 = sub_1D7A9B5F8();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v3, v5, v6, v7, v8, v9, v10, v11);
  uint64_t v14 = (char *)v97 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12, v15, v16, v17, v18, v19, v20, v21);
  uint64_t v23 = (char *)v97 - v22;
  long long v24 = *(_OWORD *)(v1 + 112);
  v100[6] = *(_OWORD *)(v1 + 96);
  v100[7] = v24;
  v100[8] = *(_OWORD *)(v1 + 128);
  uint64_t v101 = *(void *)(v1 + 144);
  long long v25 = *(_OWORD *)(v1 + 48);
  v100[2] = *(_OWORD *)(v1 + 32);
  v100[3] = v25;
  long long v26 = *(_OWORD *)(v1 + 80);
  v100[4] = *(_OWORD *)(v1 + 64);
  v100[5] = v26;
  long long v27 = *(_OWORD *)(v1 + 16);
  v100[0] = *(_OWORD *)v1;
  v100[1] = v27;
  if (!(a1 >> 62))
  {
    unint64_t v28 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v28) {
      goto LABEL_3;
    }
LABEL_87:
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v96 = __swift_project_value_buffer(v3, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v23, v96, v3);
    sub_1D7921690();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v23, v3);
    goto LABEL_90;
  }
  swift_bridgeObjectRetain();
  uint64_t v95 = sub_1D7A9CFB8();
  swift_bridgeObjectRelease();
  if (!v95) {
    goto LABEL_87;
  }
  swift_bridgeObjectRetain();
  unint64_t v28 = sub_1D7A9CFB8();
  swift_bridgeObjectRelease();
LABEL_3:
  unint64_t v29 = *(void *)&v100[0];
  if (v28 != *(void *)&v100[0])
  {
    if (qword_1EBDF9DC8 == -1)
    {
LABEL_10:
      uint64_t v33 = __swift_project_value_buffer(v3, (uint64_t)qword_1EBDFBE70);
      swift_beginAccess();
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v14, v33, v3);
      swift_bridgeObjectRetain();
      sub_1D7910D14((uint64_t)v100);
      unint64_t v34 = sub_1D7A9B5D8();
      os_log_type_t v35 = sub_1D7A9C758();
      if (os_log_type_enabled(v34, v35))
      {
        uint64_t v36 = swift_slowAlloc();
        *(_DWORD *)uint64_t v36 = 134218240;
        unint64_t v99 = v29;
        sub_1D7A9C9E8();
        sub_1D7910D58((uint64_t)v100);
        *(_WORD *)(v36 + 12) = 2048;
        unint64_t v99 = v28;
        sub_1D7A9C9E8();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D7853000, v34, v35, "Could not calculate quad area, expected %ld corners but found %ld", (uint8_t *)v36, 0x16u);
        MEMORY[0x1D947D740](v36, -1, -1);
      }
      else
      {
        sub_1D7910D58((uint64_t)v100);

        swift_bridgeObjectRelease();
      }
      (*(void (**)(char *, uint64_t))(v4 + 8))(v14, v3);
LABEL_90:
      char v94 = 1;
LABEL_91:
      LOBYTE(v100[0]) = v94;
      return;
    }
LABEL_94:
    swift_once();
    goto LABEL_10;
  }
  unint64_t v28 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) == 0)
  {
    if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v30 = *(id *)(a1 + 32);
      goto LABEL_7;
    }
    __break(1u);
    goto LABEL_94;
  }
  id v30 = (id)MEMORY[0x1D947BA10](0, a1);
LABEL_7:
  long long v31 = v30;
  swift_beginAccess();

  if (v28)
  {
    id v32 = (id)MEMORY[0x1D947BA10](1, a1);
  }
  else
  {
    if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10) < 2uLL)
    {
      __break(1u);
      goto LABEL_96;
    }
    id v32 = *(id *)(a1 + 40);
  }
  float v37 = v32;
  swift_beginAccess();

  if (v28) {
    id v38 = (id)MEMORY[0x1D947BA10](1, a1);
  }
  else {
    id v38 = *(id *)(a1 + 40);
  }
  float v39 = v38;
  swift_beginAccess();

  if (!v28)
  {
    if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 4uLL)
    {
      id v40 = *(id *)(a1 + 56);
      goto LABEL_23;
    }
LABEL_96:
    __break(1u);
    goto LABEL_97;
  }
  id v40 = (id)MEMORY[0x1D947BA10](3, a1);
LABEL_23:
  float v41 = v40;
  swift_beginAccess();

  if (v28) {
    double v42 = (char *)MEMORY[0x1D947BA10](3, a1);
  }
  else {
    double v42 = (char *)*(id *)(a1 + 56);
  }
  float v43 = v42;
  double v44 = &v42[OBJC_IVAR____TtC13CoreIDVShared7IQPoint_x];
  swift_beginAccess();
  int v45 = *(_DWORD *)v44;

  if (v28) {
    id v46 = (id)MEMORY[0x1D947BA10](0, a1);
  }
  else {
    id v46 = *(id *)(a1 + 32);
  }
  float v47 = v46;
  swift_beginAccess();

  if (v28) {
    id v48 = (id)MEMORY[0x1D947BA10](1, a1);
  }
  else {
    id v48 = *(id *)(a1 + 40);
  }
  uint64_t v49 = v48;
  swift_beginAccess();

  if (v28) {
    uint64_t v50 = (char *)MEMORY[0x1D947BA10](0, a1);
  }
  else {
    uint64_t v50 = (char *)*(id *)(a1 + 32);
  }
  uint64_t v51 = v50;
  uint64_t v52 = &v50[OBJC_IVAR____TtC13CoreIDVShared7IQPoint_y];
  swift_beginAccess();
  int v98 = *(_DWORD *)v52;

  if (v28) {
    objc_super v53 = (char *)MEMORY[0x1D947BA10](3, a1);
  }
  else {
    objc_super v53 = (char *)*(id *)(a1 + 56);
  }
  uint64_t v54 = v53;
  uint64_t v55 = &v53[OBJC_IVAR____TtC13CoreIDVShared7IQPoint_x];
  swift_beginAccess();
  v97[10] = *(_DWORD *)v55;

  if (v28) {
    id v56 = (id)MEMORY[0x1D947BA10](1, a1);
  }
  else {
    id v56 = *(id *)(a1 + 40);
  }
  uint64_t v57 = v56;
  swift_beginAccess();

  if (v28) {
    uint64_t v58 = (char *)MEMORY[0x1D947BA10](0, a1);
  }
  else {
    uint64_t v58 = (char *)*(id *)(a1 + 32);
  }
  objc_super v59 = v58;
  uint64_t v60 = &v58[OBJC_IVAR____TtC13CoreIDVShared7IQPoint_x];
  swift_beginAccess();
  v97[9] = *(_DWORD *)v60;

  if (v28) {
    float v61 = (char *)MEMORY[0x1D947BA10](3, a1);
  }
  else {
    float v61 = (char *)*(id *)(a1 + 56);
  }
  uint64_t v62 = v61;
  float v63 = &v61[OBJC_IVAR____TtC13CoreIDVShared7IQPoint_y];
  swift_beginAccess();
  v97[7] = *(_DWORD *)v63;

  if (v28) {
    id v64 = (char *)MEMORY[0x1D947BA10](1, a1);
  }
  else {
    id v64 = (char *)*(id *)(a1 + 40);
  }
  float v65 = v64;
  uint64_t v66 = &v64[OBJC_IVAR____TtC13CoreIDVShared7IQPoint_x];
  swift_beginAccess();
  v97[8] = *(_DWORD *)v66;

  if (v28)
  {
    float v67 = (char *)MEMORY[0x1D947BA10](2, a1);
LABEL_54:
    unint64_t v68 = v67;
    float v69 = &v67[OBJC_IVAR____TtC13CoreIDVShared7IQPoint_y];
    swift_beginAccess();
    v97[5] = *(_DWORD *)v69;

    if (v28) {
      long long v70 = (char *)MEMORY[0x1D947BA10](2, a1);
    }
    else {
      long long v70 = (char *)*(id *)(a1 + 48);
    }
    int64x2_t v71 = v70;
    int64x2_t v72 = &v70[OBJC_IVAR____TtC13CoreIDVShared7IQPoint_x];
    swift_beginAccess();
    v97[4] = *(_DWORD *)v72;

    v97[6] = v45;
    if (v28) {
      float v73 = (char *)MEMORY[0x1D947BA10](3, a1);
    }
    else {
      float v73 = (char *)*(id *)(a1 + 56);
    }
    long long v74 = v73;
    uint64_t v75 = &v73[OBJC_IVAR____TtC13CoreIDVShared7IQPoint_y];
    swift_beginAccess();
    v97[2] = *(_DWORD *)v75;

    if (v28) {
      unint64_t v76 = (char *)MEMORY[0x1D947BA10](3, a1);
    }
    else {
      unint64_t v76 = (char *)*(id *)(a1 + 56);
    }
    float v77 = v76;
    uint64_t v78 = &v76[OBJC_IVAR____TtC13CoreIDVShared7IQPoint_x];
    swift_beginAccess();
    v97[3] = *(_DWORD *)v78;

    if (v28) {
      id v79 = (id)MEMORY[0x1D947BA10](1, a1);
    }
    else {
      id v79 = *(id *)(a1 + 40);
    }
    unint64_t v80 = v79;
    swift_beginAccess();

    if (v28) {
      unint64_t v81 = (char *)MEMORY[0x1D947BA10](2, a1);
    }
    else {
      unint64_t v81 = (char *)*(id *)(a1 + 48);
    }
    unint64_t v82 = v81;
    id v83 = &v81[OBJC_IVAR____TtC13CoreIDVShared7IQPoint_x];
    swift_beginAccess();
    int v98 = *(_DWORD *)v83;

    if (v28) {
      id v84 = (id)MEMORY[0x1D947BA10](1, a1);
    }
    else {
      id v84 = *(id *)(a1 + 40);
    }
    long long v85 = v84;
    swift_beginAccess();

    if (v28) {
      id v86 = (id)MEMORY[0x1D947BA10](3, a1);
    }
    else {
      id v86 = *(id *)(a1 + 56);
    }
    long long v87 = v86;
    swift_beginAccess();

    if (v28) {
      id v88 = (id)MEMORY[0x1D947BA10](2, a1);
    }
    else {
      id v88 = *(id *)(a1 + 48);
    }
    id v89 = v88;
    swift_beginAccess();

    if (v28) {
      id v90 = (id)MEMORY[0x1D947BA10](1, a1);
    }
    else {
      id v90 = *(id *)(a1 + 40);
    }
    id v91 = v90;
    swift_beginAccess();

    if (v28) {
      id v92 = (id)MEMORY[0x1D947BA10](3, a1);
    }
    else {
      id v92 = *(id *)(a1 + 56);
    }
    uint64_t v93 = v92;
    swift_beginAccess();

    char v94 = 0;
    goto LABEL_91;
  }
  if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 3uLL)
  {
    float v67 = (char *)*(id *)(a1 + 48);
    goto LABEL_54;
  }
LABEL_97:
  __break(1u);
}

uint64_t sub_1D790CD94(void *a1)
{
  uint64_t v2 = sub_1D7A9B5F8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4, v5, v6, v7, v8, v9, v10);
  uint64_t v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = objc_msgSend(a1, sel_results);
  if (!v13)
  {
    LOWORD(v60[0]) = 338;
    unint64_t v49 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    unint64_t v15 = swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD00000000000002DLL, 0x80000001D7AC30C0, (__int16 *)v60, 0, v49, 0xD000000000000065, 0x80000001D7AC28E0, v50, 0xD000000000000015, 0x80000001D7AC30F0, 989);
    if (qword_1EBDF9DC8 == -1)
    {
LABEL_9:
      uint64_t v51 = __swift_project_value_buffer(v2, (uint64_t)qword_1EBDFBE70);
      swift_beginAccess();
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v12, v51, v2);
      DIPLogError(_:message:log:)((void *)v15, 0, 0xE000000000000000);
      _s13CoreIDVShared9AnalyticsC9sendErroryys0E0_pFZ_0((void *)v15);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v12, v2);

      return MEMORY[0x1E4FBC860];
    }
LABEL_18:
    swift_once();
    goto LABEL_9;
  }
  uint64_t v14 = v13;
  sub_1D78C4038(0, &qword_1EA843C80);
  unint64_t v15 = sub_1D7A9C318();

  if (!(v15 >> 62))
  {
    if (*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_4;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v53 = __swift_project_value_buffer(v2, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v12, v53, v2);
    sub_1D7921CA0();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v12, v2);
    return MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  uint64_t v52 = sub_1D7A9CFB8();
  swift_bridgeObjectRelease();
  if (!v52) {
    goto LABEL_11;
  }
LABEL_4:
  if ((v15 & 0xC000000000000001) != 0)
  {
    id v16 = (id)MEMORY[0x1D947BA10](0, v15);
    goto LABEL_7;
  }
  if (!*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_18;
  }
  id v16 = *(id *)(v15 + 32);
LABEL_7:
  uint64_t v17 = v16;
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF99C0);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1D7AA9790;
  objc_msgSend(v17, sel_topLeft);
  double v20 = v19;
  double v22 = v21;
  uint64_t v23 = (objc_class *)type metadata accessor for IQPoint();
  long long v24 = (char *)objc_allocWithZone(v23);
  float v25 = v20;
  *(float *)&v24[OBJC_IVAR____TtC13CoreIDVShared7IQPoint_x] = v25;
  float v26 = v22;
  *(float *)&v24[OBJC_IVAR____TtC13CoreIDVShared7IQPoint_y] = v26;
  v59.receiver = v24;
  v59.super_class = v23;
  *(void *)(v18 + 32) = objc_msgSendSuper2(&v59, sel_init);
  objc_msgSend(v17, sel_topRight);
  double v28 = v27;
  double v30 = v29;
  long long v31 = (char *)objc_allocWithZone(v23);
  float v32 = v28;
  *(float *)&v31[OBJC_IVAR____TtC13CoreIDVShared7IQPoint_x] = v32;
  float v33 = v30;
  *(float *)&v31[OBJC_IVAR____TtC13CoreIDVShared7IQPoint_y] = v33;
  v58.receiver = v31;
  v58.super_class = v23;
  *(void *)(v18 + 40) = objc_msgSendSuper2(&v58, sel_init);
  objc_msgSend(v17, sel_bottomRight);
  double v35 = v34;
  double v37 = v36;
  id v38 = (char *)objc_allocWithZone(v23);
  float v39 = v35;
  *(float *)&v38[OBJC_IVAR____TtC13CoreIDVShared7IQPoint_x] = v39;
  float v40 = v37;
  *(float *)&v38[OBJC_IVAR____TtC13CoreIDVShared7IQPoint_y] = v40;
  v57.receiver = v38;
  v57.super_class = v23;
  *(void *)(v18 + 48) = objc_msgSendSuper2(&v57, sel_init);
  objc_msgSend(v17, sel_bottomLeft);
  double v42 = v41;
  double v44 = v43;
  int v45 = (char *)objc_allocWithZone(v23);
  float v46 = v42;
  *(float *)&v45[OBJC_IVAR____TtC13CoreIDVShared7IQPoint_x] = v46;
  float v47 = v44;
  *(float *)&v45[OBJC_IVAR____TtC13CoreIDVShared7IQPoint_y] = v47;
  v56.receiver = v45;
  v56.super_class = v23;
  *(void *)(v18 + 56) = objc_msgSendSuper2(&v56, sel_init);
  v60[0] = v18;
  sub_1D7A9C338();
  uint64_t v48 = v60[0];

  return v48;
}

void *sub_1D790D2A4(void *a1)
{
  uint64_t v3 = (void *)sub_1D7A9B5F8();
  uint64_t v4 = *(v3 - 1);
  MEMORY[0x1F4188790](v3, v5, v6, v7, v8, v9, v10, v11);
  id v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = *(void *)(v1 + 8);
  id v14 = objc_msgSend(a1, sel_results);
  if (!v14)
  {
    v46[0] = 338;
    unint64_t v32 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    unint64_t v16 = swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD00000000000002CLL, 0x80000001D7AC3110, v46, 0, v32, 0xD000000000000065, 0x80000001D7AC28E0, v33, 0xD000000000000012, 0x80000001D7AC3140, 943);
    if (qword_1EBDF9DC8 != -1) {
      goto LABEL_39;
    }
    goto LABEL_26;
  }
  unint64_t v15 = v14;
  sub_1D78C4038(0, &qword_1EA843C88);
  unint64_t v16 = sub_1D7A9C318();

  if (v16 >> 62) {
    goto LABEL_28;
  }
  uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v17)
  {
LABEL_4:
    if (v17 >= 1)
    {
      id v13 = 0;
      unint64_t v18 = v16 & 0xC000000000000001;
      uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
      unint64_t v43 = v16;
      while (1)
      {
        if (v18) {
          id v19 = (id)MEMORY[0x1D947BA10](v13, v16);
        }
        else {
          id v19 = *(id *)(v16 + 8 * (void)v13 + 32);
        }
        double v20 = v19;
        id v21 = objc_msgSend(v19, sel_topCandidates_, v44, v43);
        sub_1D78C4038(0, &qword_1EA843C90);
        unint64_t v22 = sub_1D7A9C318();

        if (v22 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v4 = sub_1D7A9CFB8();
          swift_bridgeObjectRelease();
          if (!v4)
          {
LABEL_6:

            swift_bridgeObjectRelease();
            goto LABEL_7;
          }
        }
        else
        {
          uint64_t v4 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (!v4) {
            goto LABEL_6;
          }
        }
        if ((v22 & 0xC000000000000001) != 0)
        {
          id v23 = (id)MEMORY[0x1D947BA10](0, v22);
        }
        else
        {
          if (!*(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_28:
            swift_bridgeObjectRetain();
            uint64_t v17 = sub_1D7A9CFB8();
            swift_bridgeObjectRelease();
            if (!v17) {
              goto LABEL_29;
            }
            goto LABEL_4;
          }
          id v23 = *(id *)(v22 + 32);
        }
        long long v24 = v23;
        swift_bridgeObjectRelease();
        id v25 = objc_msgSend(v24, sel_string);
        uint64_t v26 = sub_1D7A9BFC8();
        uint64_t v28 = v27;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v3 = sub_1D789E300(0, v3[2] + 1, 1, v3);
        }
        unint64_t v30 = v3[2];
        unint64_t v29 = v3[3];
        if (v30 >= v29 >> 1) {
          uint64_t v3 = sub_1D789E300((void *)(v29 > 1), v30 + 1, 1, v3);
        }
        v3[2] = v30 + 1;
        long long v31 = &v3[2 * v30];
        v31[4] = v26;
        v31[5] = v28;

        unint64_t v16 = v43;
LABEL_7:
        if ((char *)v17 == ++v13)
        {
          swift_bridgeObjectRelease();
          goto LABEL_32;
        }
      }
    }
    __break(1u);
LABEL_39:
    swift_once();
LABEL_26:
    uint64_t v34 = __swift_project_value_buffer((uint64_t)v3, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, void *))(v4 + 16))(v13, v34, v3);
    DIPLogError(_:message:log:)((void *)v16, 0, 0xE000000000000000);
    _s13CoreIDVShared9AnalyticsC9sendErroryys0E0_pFZ_0((void *)v16);
    (*(void (**)(char *, void *))(v4 + 8))(v13, v3);

    return (void *)MEMORY[0x1E4FBC860];
  }
  else
  {
LABEL_29:
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v36 = __swift_project_value_buffer((uint64_t)v3, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, void *))(v4 + 16))(v13, v36, v3);
    sub_1D7921E24();
    (*(void (**)(char *, void *))(v4 + 8))(v13, v3);
    swift_bridgeObjectRelease();
    uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
LABEL_32:
    uint64_t v45 = MEMORY[0x1E4FBC870];
    uint64_t v37 = v3[2];
    if (v37)
    {
      swift_bridgeObjectRetain();
      id v38 = v3 + 5;
      do
      {
        uint64_t v39 = *(v38 - 1);
        uint64_t v40 = *v38;
        swift_bridgeObjectRetain();
        uint64_t v41 = sub_1D790F5A0(v39, v40);
        sub_1D790F778(v41);
        swift_bridgeObjectRelease();
        v38 += 2;
        --v37;
      }
      while (v37);
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    double v35 = sub_1D790FA70(v45);
    swift_bridgeObjectRelease();
  }
  return v35;
}

uint64_t sub_1D790D858(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_1D7A9B5F8();
  v47[0] = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7, v8, v9, v10, v11, v12, v13, v14);
  unint64_t v16 = (char *)v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA843C48);
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17, v19, v20, v21, v22, v23, v24, v25);
  uint64_t v27 = (char *)v47 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v28 = *(_OWORD *)(v3 + 112);
  v48[6] = *(_OWORD *)(v3 + 96);
  v48[7] = v28;
  v48[8] = *(_OWORD *)(v3 + 128);
  uint64_t v49 = *(void *)(v3 + 144);
  long long v29 = *(_OWORD *)(v3 + 48);
  v48[2] = *(_OWORD *)(v3 + 32);
  v48[3] = v29;
  long long v30 = *(_OWORD *)(v3 + 80);
  v48[4] = *(_OWORD *)(v3 + 64);
  v48[5] = v30;
  long long v31 = *(_OWORD *)(v3 + 16);
  v48[0] = *(_OWORD *)v3;
  v48[1] = v31;
  if (!a2) {
    return 0;
  }
  v47[8] = a1;
  v47[9] = a2;
  sub_1D7A9B4D8();
  v47[6] = 0;
  v47[7] = 0xE000000000000000;
  sub_1D7916204();
  sub_1D7916258();
  sub_1D7871DDC(&qword_1EA843C60, &qword_1EA843C48);
  sub_1D7A9C6E8();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v27, v17);
  uint64_t v32 = sub_1D7A9C068();
  uint64_t v34 = v33;
  swift_bridgeObjectRelease();
  sub_1D7910D14((uint64_t)v48);
  swift_bridgeObjectRetain();
  uint64_t v35 = sub_1D79106B8(a3, v32, v34);
  swift_bridgeObjectRelease();
  sub_1D7910D58((uint64_t)v48);
  int64_t v36 = sub_1D799DD70(v35);
  uint64_t v38 = v36;
  char v39 = v37;
  uint64_t v40 = *(void *)(v35 + 16);
  if (v40)
  {
    unint64_t v41 = 0;
    while ((v37 & 1) != 0 || *(void *)(v35 + 8 * v41 + 32) != v36)
    {
      if (v40 == ++v41) {
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease();
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v42 = __swift_project_value_buffer(v7, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    uint64_t v43 = v47[0];
    (*(void (**)(char *, uint64_t, uint64_t))(v47[0] + 16))(v16, v42, v7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1D79238F0((uint64_t)v16, v32, v34, a3, v41);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v16, v7);
    goto LABEL_11;
  }
LABEL_10:
  swift_bridgeObjectRelease();
  if ((v39 & 1) == 0)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    if (v38 >= 3) {
      return 3;
    }
    return v38;
  }
  if (qword_1EBDF9DC8 != -1) {
    swift_once();
  }
  uint64_t v44 = __swift_project_value_buffer(v7, (uint64_t)qword_1EBDFBE70);
  swift_beginAccess();
  uint64_t v45 = v47[0];
  (*(void (**)(char *, uint64_t, uint64_t))(v47[0] + 16))(v16, v44, v7);
  sub_1D7923BE8();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v16, v7);
  return v38;
}

uint64_t sub_1D790DD10()
{
  uint64_t v1 = sub_1D7A9B5F8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1, v3, v4, v5, v6, v7, v8, v9);
  uint64_t v11 = (char *)&v18[-4] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(result) = objc_msgSend(*(id *)(v0 + 136), sel_luxLevel);
  if ((result & 0x80000000) == 0) {
    return result;
  }
  v18[0] = 344;
  unint64_t v13 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
  sub_1D7860544();
  uint64_t v14 = (void *)swift_allocError();
  DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD00000000000002DLL, 0x80000001D7AC3160, v18, 0, v13, 0xD000000000000065, 0x80000001D7AC28E0, v15, 0x4C7463656C6C6F63, 0xEC00000029287875, 1009);
  if (qword_1EBDF9DC8 != -1) {
    swift_once();
  }
  uint64_t v16 = __swift_project_value_buffer(v1, (uint64_t)qword_1EBDFBE70);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v11, v16, v1);
  DIPLogError(_:message:log:)(v14, 0, 0xE000000000000000);
  _s13CoreIDVShared9AnalyticsC9sendErroryys0E0_pFZ_0(v14);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v11, v1);

  return 0;
}

unsigned char *ImageQualityCollector.getFuzzyMatchAssessment(frontID:pdf417Data:)(void *a1, void *a2)
{
  uint64_t v207 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = sub_1D7A9B5F8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v5, v7, v8, v9, v10, v11, v12, v13);
  uint64_t v177 = (uint64_t)&v160 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x1F4188790](v14, v16, v17, v18, v19, v20, v21, v22);
  uint64_t v178 = (char *)&v160 - v24;
  uint64_t v32 = MEMORY[0x1F4188790](v23, v25, v26, v27, v28, v29, v30, v31);
  uint64_t v181 = (uint64_t)&v160 - v33;
  MEMORY[0x1F4188790](v32, v34, v35, v36, v37, v38, v39, v40);
  uint64_t v42 = (char *)&v160 - v41;
  uint64_t v43 = a2[14];
  uint64_t v170 = a2[15];
  uint64_t v171 = v43;
  uint64_t v44 = a2[16];
  uint64_t v168 = a2[17];
  uint64_t v169 = v44;
  uint64_t v45 = a2[27];
  uint64_t v163 = a2[26];
  uint64_t v164 = v45;
  uint64_t v46 = a2[30];
  uint64_t v172 = a2[31];
  uint64_t v173 = v46;
  uint64_t v47 = a2[32];
  unint64_t v179 = a2[33];
  uint64_t v165 = a2[38];
  uint64_t v176 = a2[39];
  uint64_t v166 = a2[50];
  uint64_t v167 = v47;
  uint64_t v174 = a2[51];
  long long v48 = *v2;
  long long v49 = v2[1];
  long long v50 = v2[3];
  long long v190 = v2[2];
  long long v191 = v50;
  long long v188 = v48;
  long long v189 = v49;
  long long v51 = v2[4];
  long long v52 = v2[5];
  long long v53 = v2[7];
  long long v194 = v2[6];
  long long v195 = v53;
  long long v192 = v51;
  long long v193 = v52;
  uint64_t v54 = *((char *)v2 + 128);
  long long v55 = *(long long *)((char *)v2 + 129);
  *(void *)((char *)v187 + 15) = *((void *)v2 + 18);
  v187[0] = v55;
  id v56 = a1;
  sub_1D785F9AC(MEMORY[0x1E4FBC860]);
  id v57 = objc_allocWithZone(MEMORY[0x1E4F45890]);
  type metadata accessor for VNImageOption(0);
  sub_1D7911358(&qword_1EA842010, 255, type metadata accessor for VNImageOption);
  objc_super v58 = (void *)sub_1D7A9BE98();
  swift_bridgeObjectRelease();
  objc_super v59 = objc_msgSend(v57, sel_initWithCIImage_options_, v56, v58);

  id v60 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F45918]), sel_init);
  objc_msgSend(v60, sel_setRecognitionLevel_, 0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF7930);
  uint64_t v61 = swift_allocObject();
  *(_OWORD *)(v61 + 16) = xmmword_1D7AA08E0;
  *(void *)(v61 + 32) = qword_1D7AA9E40[v54];
  *(void *)(v61 + 40) = 0xE300000000000000;
  uint64_t v62 = (void *)sub_1D7A9C2F8();
  swift_bridgeObjectRelease();
  objc_msgSend(v60, sel_setRecognitionLanguages_, v62);

  if (qword_1EBDF9DC8 != -1) {
    swift_once();
  }
  uint64_t v63 = __swift_project_value_buffer(v5, (uint64_t)qword_1EBDFBE70);
  swift_beginAccess();
  id v64 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  uint64_t v183 = v63;
  id v184 = v64;
  id v185 = (uint8_t *)(v6 + 16);
  v64((uint64_t)v42, v63, v5);
  float v65 = sub_1D7A9B5D8();
  os_log_type_t v66 = sub_1D7A9C748();
  if (os_log_type_enabled(v65, v66))
  {
    uint64_t v67 = v6;
    uint64_t v68 = v5;
    float v69 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)float v69 = 0;
    _os_log_impl(&dword_1D7853000, v65, v66, "Performing fuzzy matching OCR vision request on front ID", v69, 2u);
    long long v70 = v69;
    uint64_t v5 = v68;
    uint64_t v6 = v67;
    MEMORY[0x1D947D740](v70, -1, -1);
  }

  float v73 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  uint64_t v71 = v6 + 8;
  int64x2_t v72 = v73;
  v73((uint64_t)v42, v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF99C0);
  uint64_t v74 = swift_allocObject();
  *(_OWORD *)(v74 + 16) = xmmword_1D7AA97B0;
  *(void *)(v74 + 32) = v60;
  *(void *)&long long v197 = v74;
  sub_1D7A9C338();
  sub_1D78C4038(0, &qword_1EA843BE8);
  uint64_t v75 = v60;
  unint64_t v76 = (void *)sub_1D7A9C2F8();
  swift_bridgeObjectRelease();
  *(void *)&long long v197 = 0;
  unsigned int v77 = [v59 performRequests:v76 error:&v197];

  uint64_t v78 = (void *)v197;
  uint64_t v182 = v59;
  if (!v77)
  {
    id v88 = (id)v197;
    uint64_t v180 = v71;
    id v89 = v88;
    id v90 = (void *)sub_1D7A9AE58();

    swift_willThrow();
    *(void *)&long long v197 = 0;
    *((void *)&v197 + 1) = 0xE000000000000000;
    sub_1D7A9CC48();
    sub_1D7A9C128();
    swift_getErrorValue();
    sub_1D7A9D548();
    sub_1D7A9C128();
    swift_bridgeObjectRelease();
    long long v91 = v197;
    LOWORD(v197) = 337;
    unint64_t v92 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    uint64_t v93 = (void *)swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, v91, *((uint64_t *)&v91 + 1), (__int16 *)&v197, 0, v92, 0xD000000000000065, 0x80000001D7AC28E0, v94, 0xD00000000000002CLL, 0x80000001D7AC29E0, 575);
    uint64_t v95 = v181;
    v184(v181, v183, v5);
    DIPLogError(_:message:log:)(v93, 0, 0xE000000000000000);
    _s13CoreIDVShared9AnalyticsC9sendErroryys0E0_pFZ_0(v93);

    v72(v95, v5);
    return 0;
  }
  id v175 = v72;
  long long v201 = v192;
  long long v202 = v193;
  long long v203 = v194;
  long long v204 = v195;
  long long v197 = v188;
  long long v198 = v189;
  long long v199 = v190;
  long long v200 = v191;
  char v205 = v54;
  *(void *)&v206[15] = *(void *)((char *)v187 + 15);
  *(_OWORD *)id v206 = v187[0];
  id v79 = v78;
  uint64_t v162 = v75;
  unint64_t v80 = sub_1D790D2A4(v75);
  uint64_t v81 = v183;
  if (!v80[2])
  {
    swift_bridgeObjectRelease();
    v184(v177, v81, v5);
    uint64_t v96 = sub_1D7A9B5D8();
    os_log_type_t v97 = sub_1D7A9C748();
    BOOL v98 = os_log_type_enabled(v96, v97);
    unint64_t v99 = v175;
    if (v98)
    {
      uint64_t v100 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v100 = 0;
      _os_log_impl(&dword_1D7853000, v96, v97, "OCR could not find any text, returning nil fuzzy match", v100, 2u);
      MEMORY[0x1D947D740](v100, -1, -1);
      uint64_t v101 = v162;
      uint64_t v102 = v182;
    }
    else
    {
      uint64_t v101 = v96;
      uint64_t v96 = v182;
      uint64_t v102 = v162;
    }

    v99(v177, v5);
    return 0;
  }
  uint64_t v82 = v181;
  v184(v181, v183, v5);
  sub_1D7925690(v82, (uint64_t)v80);
  v175(v82, v5);
  id v83 = objc_allocWithZone((Class)type metadata accessor for FuzzyMatchAssessment());
  id v84 = FuzzyMatchAssessment.init(firstName:lastName:state:houseNumber:street:dob:postalCode:)(0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1);
  uint64_t v85 = v167;
  if (!v179) {
    uint64_t v85 = 0;
  }
  uint64_t v177 = v85;
  if (v179) {
    unint64_t v86 = v179;
  }
  else {
    unint64_t v86 = 0xE000000000000000;
  }
  uint64_t v161 = v5;
  uint64_t v180 = v71;
  if (v176)
  {
    if (sub_1D7A9C048() == 29557 && v87 == 0xE200000000000000)
    {
      swift_bridgeObjectRetain();
      goto LABEL_24;
    }
    char v107 = sub_1D7A9D358();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (v107)
    {
LABEL_25:
      uint64_t v110 = sub_1D790EF84(v177, v86);
      uint64_t v112 = v111;
      swift_bridgeObjectRelease();
      uint64_t v177 = v110;
      unint64_t v179 = v112;
      swift_bridgeObjectRetain();
      uint64_t v113 = sub_1D790F138();
      uint64_t v115 = v114;
      uint64_t v181 = v116;
      uint64_t v118 = v117;
      swift_bridgeObjectRelease();
      long long v201 = v192;
      long long v202 = v193;
      long long v203 = v194;
      long long v204 = v195;
      long long v197 = v188;
      long long v198 = v189;
      long long v199 = v190;
      long long v200 = v191;
      char v205 = v54;
      *(_OWORD *)id v206 = v187[0];
      *(void *)&v206[15] = *(void *)((char *)v187 + 15);
      swift_bridgeObjectRetain();
      uint64_t v119 = sub_1D790D858(v113, v115, (uint64_t)v80);
      LOBYTE(v113) = v120;
      swift_bridgeObjectRelease();
      unint64_t v121 = &v84[OBJC_IVAR____TtC13CoreIDVShared20FuzzyMatchAssessment_houseNumber];
      swift_beginAccess();
      *(void *)unint64_t v121 = v119;
      v121[8] = v113 & 1;
      swift_bridgeObjectRelease();
      long long v201 = v192;
      long long v202 = v193;
      long long v203 = v194;
      long long v204 = v195;
      long long v197 = v188;
      long long v198 = v189;
      long long v199 = v190;
      long long v200 = v191;
      char v205 = v54;
      *(_OWORD *)id v206 = v187[0];
      *(void *)&v206[15] = *(void *)((char *)v187 + 15);
      uint64_t v122 = sub_1D790D858(v181, v118, (uint64_t)v80);
      LOBYTE(v113) = v123;
      swift_bridgeObjectRelease();
      char v106 = v113 & 1;
      uint64_t v104 = OBJC_IVAR____TtC13CoreIDVShared20FuzzyMatchAssessment_street;
      long long v124 = (uint64_t *)&v84[OBJC_IVAR____TtC13CoreIDVShared20FuzzyMatchAssessment_street];
      swift_beginAccess();
      *long long v124 = v122;
      goto LABEL_29;
    }
    if (sub_1D7A9C048() == 6386549 && v108 == 0xE300000000000000)
    {
LABEL_24:
      swift_bridgeObjectRelease();
      goto LABEL_25;
    }
    char v159 = sub_1D7A9D358();
    swift_bridgeObjectRelease();
    if (v159) {
      goto LABEL_25;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  unint64_t v179 = v86;
  char v103 = &v84[OBJC_IVAR____TtC13CoreIDVShared20FuzzyMatchAssessment_street];
  swift_beginAccess();
  *(void *)char v103 = -1;
  v103[8] = 0;
  uint64_t v104 = OBJC_IVAR____TtC13CoreIDVShared20FuzzyMatchAssessment_houseNumber;
  int v105 = &v84[OBJC_IVAR____TtC13CoreIDVShared20FuzzyMatchAssessment_houseNumber];
  swift_beginAccess();
  char v106 = 0;
  *int v105 = -1;
LABEL_29:
  uint64_t v125 = v166;
  v84[v104 + 8] = v106;
  long long v201 = v192;
  long long v202 = v193;
  long long v203 = v194;
  long long v204 = v195;
  long long v197 = v188;
  long long v198 = v189;
  long long v199 = v190;
  long long v200 = v191;
  char v205 = v54;
  *(_OWORD *)id v206 = v187[0];
  *(void *)&v206[15] = *(void *)((char *)v187 + 15);
  uint64_t v126 = sub_1D790D858(v169, v168, (uint64_t)v80);
  char v128 = v127;
  long long v129 = &v84[OBJC_IVAR____TtC13CoreIDVShared20FuzzyMatchAssessment_firstName];
  swift_beginAccess();
  *(void *)long long v129 = v126;
  v129[8] = v128 & 1;
  long long v201 = v192;
  long long v202 = v193;
  long long v203 = v194;
  long long v204 = v195;
  long long v197 = v188;
  long long v198 = v189;
  long long v199 = v190;
  long long v200 = v191;
  char v205 = v54;
  *(_OWORD *)id v206 = v187[0];
  *(void *)&v206[15] = *(void *)((char *)v187 + 15);
  uint64_t v130 = sub_1D790D858(v171, v170, (uint64_t)v80);
  char v132 = v131;
  float v133 = &v84[OBJC_IVAR____TtC13CoreIDVShared20FuzzyMatchAssessment_lastName];
  swift_beginAccess();
  *(void *)float v133 = v130;
  v133[8] = v132 & 1;
  long long v201 = v192;
  long long v202 = v193;
  long long v203 = v194;
  long long v204 = v195;
  long long v197 = v188;
  long long v198 = v189;
  long long v199 = v190;
  long long v200 = v191;
  char v205 = v54;
  *(_OWORD *)id v206 = v187[0];
  *(void *)&v206[15] = *(void *)((char *)v187 + 15);
  uint64_t v134 = sub_1D790D858(v173, v172, (uint64_t)v80);
  char v136 = v135;
  CGFloat v137 = &v84[OBJC_IVAR____TtC13CoreIDVShared20FuzzyMatchAssessment_state];
  swift_beginAccess();
  *(void *)CGFloat v137 = v134;
  v137[8] = v136 & 1;
  long long v201 = v192;
  long long v202 = v193;
  long long v203 = v194;
  long long v204 = v195;
  long long v197 = v188;
  long long v198 = v189;
  long long v199 = v190;
  long long v200 = v191;
  char v205 = v54;
  *(_OWORD *)id v206 = v187[0];
  *(void *)&v206[15] = *(void *)((char *)v187 + 15);
  uint64_t v138 = sub_1D790D858(v125, v174, (uint64_t)v80);
  char v140 = v139;
  double v141 = &v84[OBJC_IVAR____TtC13CoreIDVShared20FuzzyMatchAssessment_dob];
  swift_beginAccess();
  *(void *)double v141 = v138;
  v141[8] = v140 & 1;
  long long v201 = v192;
  long long v202 = v193;
  long long v203 = v194;
  long long v204 = v195;
  long long v197 = v188;
  long long v198 = v189;
  long long v199 = v190;
  long long v200 = v191;
  char v205 = v54;
  *(_OWORD *)id v206 = v187[0];
  *(void *)&v206[15] = *(void *)((char *)v187 + 15);
  uint64_t v142 = sub_1D790D858(v177, v179, (uint64_t)v80);
  char v144 = v143;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v145 = &v84[OBJC_IVAR____TtC13CoreIDVShared20FuzzyMatchAssessment_postalCode];
  swift_beginAccess();
  *(void *)uint64_t v145 = v142;
  v145[8] = v144 & 1;
  uint64_t v146 = v178;
  uint64_t v147 = v161;
  v184((uint64_t)v178, v183, v161);
  uint64_t v109 = v84;
  double v148 = sub_1D7A9B5D8();
  os_log_type_t v149 = sub_1D7A9C748();
  if (os_log_type_enabled(v148, v149))
  {
    float v150 = (uint8_t *)swift_slowAlloc();
    uint64_t v151 = swift_slowAlloc();
    v196[0] = v151;
    *(_DWORD *)float v150 = 136315138;
    id v185 = v150 + 4;
    id v152 = objc_msgSend(v109, sel_debugDescription);
    uint64_t v153 = sub_1D7A9BFC8();
    unint64_t v155 = v154;

    uint64_t v186 = sub_1D7923300(v153, v155, v196);
    sub_1D7A9C9E8();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D7853000, v148, v149, "Fuzzy Match Assessment:\n%s", v150, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D947D740](v151, -1, -1);
    MEMORY[0x1D947D740](v150, -1, -1);

    uint64_t v156 = v178;
    uint64_t v157 = v161;
  }
  else
  {

    uint64_t v156 = v146;
    uint64_t v157 = v147;
  }
  v175((uint64_t)v156, v157);
  return v109;
}

uint64_t sub_1D790EF84(uint64_t a1, unint64_t a2)
{
  swift_bridgeObjectRetain();
  sub_1D790F8F8(a1, a2, 0x3736353433323130, 0xEA00000000003938);
  if (sub_1D7A9C0D8() >= 5)
  {
    sub_1D7A9C0F8();
    sub_1D7A9C0E8();
    uint64_t v7 = sub_1D7A9C1E8();
    uint64_t v9 = v8;
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    swift_bridgeObjectRelease();
    uint64_t v14 = MEMORY[0x1D947AE00](v7, v9, v11, v13);
    swift_bridgeObjectRelease();
    return v14;
  }
  else
  {
    swift_bridgeObjectRelease();
    __int16 v15 = 355;
    unint64_t v4 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD00000000000004BLL, 0x80000001D7AC2A40, &v15, 0, v4, 0xD000000000000065, 0x80000001D7AC28E0, v5, 0xD000000000000012, 0x80000001D7AC2A90, 1204);
    return swift_willThrow();
  }
}

uint64_t sub_1D790F138()
{
  sub_1D791118C();
  uint64_t result = sub_1D7A9CA28();
  if (*(void *)(result + 16))
  {
    uint64_t v1 = *(void *)(result + 32);
    swift_bridgeObjectRetain();
    sub_1D78692A0(0, 1);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDF7900);
    sub_1D7871DDC((unint64_t *)&qword_1EBDF7910, (uint64_t *)&unk_1EBDF7900);
    sub_1D7A9BF38();
    swift_bridgeObjectRelease();
    return v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1D790F244(unint64_t a1)
{
  if (!(a1 >> 62))
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id result = (id)swift_bridgeObjectRetain();
    if (v2) {
      goto LABEL_3;
    }
LABEL_23:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  id result = (id)sub_1D7A9CFB8();
  uint64_t v2 = (uint64_t)result;
  if (!result) {
    goto LABEL_23;
  }
LABEL_3:
  unint64_t v4 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    id result = (id)MEMORY[0x1D947BA10](0, a1);
  }
  else
  {
    if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    id result = *(id *)(a1 + 32);
  }
  uint64_t v5 = result;
  unint64_t v6 = v2 - 1;
  if (v2 == 1)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    return v5;
  }
  if (v2 < 2) {
    goto LABEL_27;
  }
  if (v4 || (unint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10), v7 >= 2) && v6 < v7)
  {
    uint64_t v8 = 0;
    do
    {
      if (v4) {
        id v9 = (id)MEMORY[0x1D947BA10](v8 + 1, a1);
      }
      else {
        id v9 = *(id *)(a1 + 8 * v8 + 40);
      }
      uint64_t v10 = v9;
      objc_msgSend(v5, sel_boundingBox);
      CGFloat x = v24.origin.x;
      CGFloat y = v24.origin.y;
      CGFloat width = v24.size.width;
      CGFloat height = v24.size.height;
      double v15 = CGRectGetWidth(v24);
      v25.origin.CGFloat x = x;
      v25.origin.CGFloat y = y;
      v25.size.CGFloat width = width;
      v25.size.CGFloat height = height;
      float v16 = v15 * CGRectGetHeight(v25);
      objc_msgSend(v10, sel_boundingBox);
      CGFloat v17 = v26.origin.x;
      CGFloat v18 = v26.origin.y;
      CGFloat v19 = v26.size.width;
      CGFloat v20 = v26.size.height;
      double v21 = CGRectGetWidth(v26);
      v27.origin.CGFloat x = v17;
      v27.origin.CGFloat y = v18;
      v27.size.CGFloat width = v19;
      v27.size.CGFloat height = v20;
      float v22 = v21 * CGRectGetHeight(v27);
      if (v16 >= v22) {
        uint64_t v23 = v10;
      }
      else {
        uint64_t v23 = v5;
      }
      if (v16 < v22) {
        uint64_t v5 = v10;
      }

      ++v8;
    }
    while (v6 != v8);
    goto LABEL_7;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1D790F424(unint64_t a1, unint64_t a2)
{
  sub_1D7A9CC48();
  swift_bridgeObjectRelease();
  strcpy((char *)v5, "Filtered from ");
  HIBYTE(v5[1]) = -18;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1D7A9CFB8();
    swift_bridgeObjectRelease();
  }
  sub_1D7A9D258();
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1D7A9CFB8();
    swift_bridgeObjectRelease();
  }
  sub_1D7A9D258();
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  return v5[0];
}

uint64_t sub_1D790F5A0(uint64_t a1, uint64_t a2)
{
  uint64_t v24 = a1;
  uint64_t v25 = a2;
  uint64_t v22 = 32;
  unint64_t v23 = 0xE100000000000000;
  sub_1D791118C();
  uint64_t v2 = sub_1D7A9CA28();
  uint64_t v3 = v2;
  uint64_t v21 = MEMORY[0x1E4FBC870];
  unint64_t v4 = *(void *)(v2 + 16);
  if (v4)
  {
    uint64_t v20 = v2 + 32;
    swift_bridgeObjectRetain();
    unint64_t v5 = 0;
    unint64_t v6 = v4 - 1;
    uint64_t v7 = v3 + 56;
    unint64_t v18 = v4;
    uint64_t v19 = v3;
    while (1)
    {
      uint64_t v8 = (uint64_t *)(v20 + 16 * v5);
      uint64_t v9 = v8[1];
      ++v5;
      uint64_t v24 = *v8;
      uint64_t v10 = v24;
      uint64_t v25 = v9;
      swift_bridgeObjectRetain_n();
      sub_1D790FB58(&v22, v10, v9);
      uint64_t result = swift_bridgeObjectRelease();
      if (v5 == v4) {
        goto LABEL_12;
      }
      unint64_t v12 = *(void *)(v3 + 16);
      if (v5 >= v12 || v4 > v12) {
        break;
      }
      uint64_t v14 = v7;
      unint64_t v15 = v6;
      do
      {
        uint64_t v22 = 32;
        unint64_t v23 = 0xE100000000000000;
        swift_bridgeObjectRetain();
        sub_1D7A9C128();
        swift_bridgeObjectRelease();
        sub_1D7A9C128();
        swift_bridgeObjectRelease();
        uint64_t v17 = v24;
        uint64_t v16 = v25;
        swift_bridgeObjectRetain();
        sub_1D790FB58(&v22, v17, v16);
        swift_bridgeObjectRelease();
        v14 += 16;
        --v15;
      }
      while (v15);
      swift_bridgeObjectRelease();
      unint64_t v4 = v18;
      uint64_t v3 = v19;
      --v6;
      v7 += 16;
      if (v5 >= *(void *)(v19 + 16))
      {
        __break(1u);
LABEL_12:
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        return v21;
      }
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC870];
  }
  return result;
}

uint64_t sub_1D790F778(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v13 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      return result;
    }
    if (v13 >= v7) {
      goto LABEL_23;
    }
    unint64_t v14 = *(void *)(v3 + 8 * v13);
    ++v2;
    if (!v14)
    {
      int64_t v2 = v13 + 1;
      if (v13 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v14 = *(void *)(v3 + 8 * v2);
      if (!v14)
      {
        int64_t v2 = v13 + 2;
        if (v13 + 2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v14 = *(void *)(v3 + 8 * v2);
        if (!v14)
        {
          int64_t v2 = v13 + 3;
          if (v13 + 3 >= v7) {
            goto LABEL_23;
          }
          unint64_t v14 = *(void *)(v3 + 8 * v2);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v14 - 1) & v14;
    unint64_t v9 = __clz(__rbit64(v14)) + (v2 << 6);
LABEL_5:
    uint64_t v10 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v9);
    uint64_t v11 = *v10;
    uint64_t v12 = v10[1];
    swift_bridgeObjectRetain();
    sub_1D790FB58(&v16, v11, v12);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v15 = v13 + 4;
  if (v15 < v7)
  {
    unint64_t v14 = *(void *)(v3 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v2 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_27;
        }
        if (v2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v14 = *(void *)(v3 + 8 * v2);
        ++v15;
        if (v14) {
          goto LABEL_22;
        }
      }
    }
    int64_t v2 = v15;
    goto LABEL_22;
  }
LABEL_23:
  return swift_release();
}

uint64_t sub_1D790F8F8(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a3;
  *(void *)(v8 + 24) = a4;
  uint64_t v24 = 0;
  unint64_t v25 = 0xE000000000000000;
  uint64_t v9 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v9 = a1 & 0xFFFFFFFFFFFFLL;
  }
  v23[2] = a1;
  v23[3] = a2;
  v23[4] = 0;
  v23[5] = v9;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1D7A9C138();
  if (v11)
  {
    uint64_t v18 = v10;
    uint64_t v19 = v11;
    do
    {
      v23[0] = v18;
      v23[1] = v19;
      MEMORY[0x1F4188790](v10, v11, v12, v13, v14, v15, v16, v17);
      v22[2] = v23;
      if (sub_1D79105E8(sub_1D79161AC, (uint64_t)v22, a3, a4)) {
        MEMORY[0x1D947AE90](v18, v19);
      }
      swift_bridgeObjectRelease();
      uint64_t v10 = sub_1D7A9C138();
      uint64_t v18 = v10;
      uint64_t v19 = v11;
    }
    while (v11);
    uint64_t v20 = v24;
  }
  else
  {
    uint64_t v20 = 0;
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v20;
}

void sub_1D790FA68(void *a1)
{
}

void *sub_1D790FA70(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF7930);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_1D7A2F2C8((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1D78907D0();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

uint64_t sub_1D790FB58(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_1D7A9D5D8();
  swift_bridgeObjectRetain();
  sub_1D7A9C0B8();
  uint64_t v8 = sub_1D7A9D628();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1D7A9D358() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1D7A9D358() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1D790FFE8(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1D790FD08()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA843C98);
  uint64_t v3 = sub_1D7A9CC18();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      BOOL v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_1D7A9D5D8();
      sub_1D7A9C0B8();
      uint64_t result = sub_1D7A9D628();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      BOOL v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *BOOL v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_1D790FFE8(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_1D790FD08();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_1D7910184();
      goto LABEL_22;
    }
    sub_1D7910338();
  }
  uint64_t v11 = *v4;
  sub_1D7A9D5D8();
  sub_1D7A9C0B8();
  uint64_t result = sub_1D7A9D628();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    unint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_1D7A9D358(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_1D7A9D4E8();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        int64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_1D7A9D358();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  uint64_t *v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

void *sub_1D7910184()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA843C98);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1D7A9CC08();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    BOOL v19 = (void *)(*(void *)(v4 + 48) + v16);
    *BOOL v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1D7910338()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA843C98);
  uint64_t v3 = sub_1D7A9CC18();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    BOOL v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_1D7A9D5D8();
    swift_bridgeObjectRetain();
    sub_1D7A9C0B8();
    uint64_t result = sub_1D7A9D628();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    int64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *int64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1D79105E8(uint64_t (*a1)(void *), uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v6 = HIBYTE(a4) & 0xF;
  v13[2] = a3;
  v13[3] = a4;
  if ((a4 & 0x2000000000000000) == 0) {
    uint64_t v6 = a3 & 0xFFFFFFFFFFFFLL;
  }
  v13[4] = 0;
  v13[5] = v6;
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1D7A9C138();
  if (v8)
  {
    uint64_t v9 = v8;
    while (1)
    {
      v13[0] = v7;
      v13[1] = v9;
      char v10 = a1(v13);
      swift_bridgeObjectRelease();
      if (v4 || (v10 & 1) != 0) {
        break;
      }
      uint64_t v7 = sub_1D7A9C138();
      uint64_t v9 = v11;
      if (!v11) {
        goto LABEL_8;
      }
    }
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRelease();
    return 0;
  }
}

uint64_t sub_1D79106B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v27 = a2;
  uint64_t v28 = a3;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA843C48);
  uint64_t v5 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26, v6, v7, v8, v9, v10, v11, v12);
  char v25 = (char *)v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v14 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x1E4FBC860];
  if (v14)
  {
    v23[0] = v3;
    uint64_t v34 = MEMORY[0x1E4FBC860];
    sub_1D78AB608(0, v14, 0);
    uint64_t result = v34;
    int64_t v16 = (uint64_t *)(a1 + 40);
    v23[1] = 0x80000001D7AC2AB0;
    unint64_t v24 = (void (**)(char *, uint64_t))(v5 + 8);
    do
    {
      uint64_t v29 = result;
      uint64_t v17 = *v16;
      uint64_t v32 = *(v16 - 1);
      uint64_t v33 = v17;
      swift_bridgeObjectRetain();
      int64_t v18 = v25;
      sub_1D7A9B4D8();
      uint64_t v30 = 0;
      unint64_t v31 = 0xE000000000000000;
      sub_1D7916204();
      sub_1D7916258();
      sub_1D7871DDC(&qword_1EA843C60, &qword_1EA843C48);
      uint64_t v19 = v26;
      sub_1D7A9C6E8();
      (*v24)(v18, v19);
      sub_1D7A9C068();
      swift_bridgeObjectRelease();
      sub_1D7A9C0D8();
      sub_1D7A9C0D8();
      sub_1D7A9C078();
      sub_1D7A9C078();
      int v20 = LevenshteinDistance();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      uint64_t result = v29;
      uint64_t v34 = v29;
      unint64_t v22 = *(void *)(v29 + 16);
      unint64_t v21 = *(void *)(v29 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_1D78AB608(v21 > 1, v22 + 1, 1);
        uint64_t result = v34;
      }
      v16 += 2;
      *(void *)(result + 16) = v22 + 1;
      *(void *)(result + 8 * v22 + 32) = v20;
      --v14;
    }
    while (v14);
  }
  return result;
}

uint64_t sub_1D79109B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = MEMORY[0x1E4FBC860];
  if (v3)
  {
    uint64_t v17 = MEMORY[0x1E4FBC860];
    sub_1D78AB608(0, v3, 0);
    uint64_t v4 = v17;
    uint64_t v7 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v8 = *(v7 - 1);
      uint64_t v9 = *v7;
      swift_bridgeObjectRetain();
      uint64_t v10 = sub_1D790D858(v8, v9, a3);
      char v12 = v11;
      swift_bridgeObjectRelease();
      if (v12) {
        uint64_t v13 = -1;
      }
      else {
        uint64_t v13 = v10;
      }
      unint64_t v15 = *(void *)(v17 + 16);
      unint64_t v14 = *(void *)(v17 + 24);
      if (v15 >= v14 >> 1) {
        sub_1D78AB608(v14 > 1, v15 + 1, 1);
      }
      v7 += 2;
      *(void *)(v17 + 16) = v15 + 1;
      *(void *)(v17 + 8 * v15 + 32) = v13;
      --v3;
    }
    while (v3);
  }
  return v4;
}

uint64_t sub_1D7910ACC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6144646573726170 && a2 == 0xEA00000000006174;
  if (v2 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x61746144776172 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1D7A9D358();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1D7910BD0(unint64_t a1)
{
  type metadata accessor for MetricsFlags();
  uint64_t result = swift_allocObject();
  uint64_t v3 = result;
  *(void *)(result + 16) = 0;
  if (!(a1 >> 62))
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4) {
      goto LABEL_3;
    }
    return v3;
  }
  uint64_t result = sub_1D7A9CFB8();
  uint64_t v4 = result;
  if (!result) {
    return v3;
  }
LABEL_3:
  if (v4 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        uint64_t v6 = MEMORY[0x1D947BA10](i, a1);
        uint64_t v7 = *(void *)(v3 + 16);
        uint64_t v8 = *(void *)(v6 + 16);
        swift_unknownObjectRelease();
        if ((v8 & ~v7) != 0)
        {
          swift_release();
          uint64_t v3 = swift_allocObject();
          *(void *)(v3 + 16) = v8 | v7;
        }
      }
    }
    else
    {
      unint64_t v9 = a1 + 32;
      do
      {
        uint64_t v10 = *(void *)(v3 + 16);
        uint64_t v11 = *(void *)(*(void *)v9 + 16);
        if ((v11 & ~v10) != 0)
        {
          swift_release();
          uint64_t v3 = swift_allocObject();
          *(void *)(v3 + 16) = v11 | v10;
        }
        v9 += 8;
        --v4;
      }
      while (v4);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D7910D14(uint64_t a1)
{
  BOOL v2 = *(void **)(a1 + 136);
  swift_bridgeObjectRetain();
  id v3 = v2;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D7910D58(uint64_t a1)
{
  BOOL v2 = *(void **)(a1 + 136);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D7910D9C()
{
  unint64_t v0 = sub_1D7A9D478();
  swift_bridgeObjectRelease();
  if (v0 >= 0x14) {
    return 20;
  }
  else {
    return v0;
  }
}

char *sub_1D7910DF0(char *a1, unint64_t a2)
{
  unint64_t v2 = a2;
  if (a2 >> 62) {
    goto LABEL_48;
  }
  uint64_t v4 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; uint64_t v4 = sub_1D7A9CFB8())
  {
    unint64_t v31 = v2 & 0xC000000000000001;
    uint64_t v29 = *MEMORY[0x1E4F45A78];
    uint64_t v5 = 4;
    unint64_t v30 = v2;
    while (1)
    {
      id v6 = v31 ? (id)MEMORY[0x1D947BA10](v5 - 4, v2) : *(id *)(v2 + 8 * v5);
      uint64_t v7 = v6;
      uint64_t v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1)) {
        break;
      }
      id v9 = objc_msgSend(v6, sel_identifier);
      uint64_t v10 = sub_1D7A9BFC8();
      uint64_t v12 = v11;

      if (sub_1D7A9BFC8() == v10 && v13 == v12)
      {
        unint64_t v17 = 0;
        goto LABEL_35;
      }
      uint64_t v15 = v4;
      char v16 = sub_1D7A9D358();
      swift_bridgeObjectRelease();
      if (v16)
      {
        unint64_t v17 = 0;
        goto LABEL_30;
      }
      if (sub_1D7A9BFC8() == v10 && v18 == v12)
      {
        unint64_t v17 = 1;
LABEL_34:
        uint64_t v4 = v15;
        unint64_t v2 = v30;
LABEL_35:
        swift_bridgeObjectRelease();
        goto LABEL_36;
      }
      char v19 = sub_1D7A9D358();
      swift_bridgeObjectRelease();
      if (v19)
      {
        unint64_t v17 = 1;
        goto LABEL_30;
      }
      if (sub_1D7A9BFC8() == v10 && v20 == v12)
      {
        unint64_t v17 = 2;
        goto LABEL_34;
      }
      char v21 = sub_1D7A9D358();
      swift_bridgeObjectRelease();
      if (v21)
      {
        unint64_t v17 = 2;
        goto LABEL_30;
      }
      if (sub_1D7A9BFC8() == v10 && v22 == v12)
      {
        unint64_t v17 = 3;
        goto LABEL_34;
      }
      char v23 = sub_1D7A9D358();
      swift_bridgeObjectRelease();
      if (v23)
      {
        unint64_t v17 = 3;
LABEL_30:
        uint64_t v4 = v15;
        unint64_t v2 = v30;
LABEL_36:
        swift_bridgeObjectRelease();
        goto LABEL_37;
      }
      if (sub_1D7A9BFC8() == v10 && v24 == v12)
      {
        unint64_t v17 = 4;
        goto LABEL_34;
      }
      char v27 = sub_1D7A9D358();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v4 = v15;
      if ((v27 & 1) == 0)
      {
        unint64_t v2 = v30;
        goto LABEL_41;
      }
      unint64_t v17 = 4;
      unint64_t v2 = v30;
LABEL_37:
      objc_msgSend(v7, sel_confidence, v29);
      int v26 = v25;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        a1 = sub_1D7A2EFEC((uint64_t)a1);
      }
      if (v17 >= *((void *)a1 + 2)) {
        goto LABEL_47;
      }
      *(_DWORD *)&a1[4 * v17 + 32] = v26;
LABEL_41:

      ++v5;
      if (v8 == v4) {
        goto LABEL_49;
      }
    }
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    swift_bridgeObjectRetain();
  }
LABEL_49:
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D7911174(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

unint64_t sub_1D791118C()
{
  unint64_t result = qword_1EBDF78F0;
  if (!qword_1EBDF78F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDF78F0);
  }
  return result;
}

unint64_t sub_1D79111E4()
{
  unint64_t result = qword_1EA843BF8;
  if (!qword_1EA843BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA843BF8);
  }
  return result;
}

uint64_t sub_1D7911238(uint64_t a1, uint64_t a2)
{
  return sub_1D7911358(&qword_1EA843C00, a2, (void (*)(uint64_t))type metadata accessor for MetricsFlags);
}

uint64_t sub_1D7911280(uint64_t a1, uint64_t a2)
{
  return sub_1D7911358(&qword_1EA843C08, a2, (void (*)(uint64_t))type metadata accessor for MetricsFlags);
}

uint64_t sub_1D79112C8(uint64_t a1, uint64_t a2)
{
  return sub_1D7911358(&qword_1EA843C10, a2, (void (*)(uint64_t))type metadata accessor for MetricsFlags);
}

uint64_t sub_1D7911310(uint64_t a1, uint64_t a2)
{
  return sub_1D7911358(&qword_1EA843C18, a2, (void (*)(uint64_t))type metadata accessor for MetricsFlags);
}

uint64_t sub_1D7911358(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D79113A4()
{
  unint64_t result = qword_1EA843C20;
  if (!qword_1EA843C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA843C20);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for IQImageType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D79114C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IQImageType()
{
  return &type metadata for IQImageType;
}

uint64_t destroy for PDF417Data(uint64_t a1)
{
  if (*(void *)(a1 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for PDF417Data(void *__dst, void *__src)
{
  uint64_t v4 = __src[1];
  if (v4)
  {
    uint64_t v5 = __src[3];
    __dst[2] = __src[2];
    uint64_t v6 = __src[5];
    __dst[4] = __src[4];
    uint64_t v7 = __src[7];
    __dst[6] = __src[6];
    uint64_t v8 = __src[9];
    __dst[8] = __src[8];
    uint64_t v9 = __src[11];
    __dst[10] = __src[10];
    uint64_t v10 = __src[13];
    __dst[12] = __src[12];
    uint64_t v11 = __src[15];
    __dst[14] = __src[14];
    uint64_t v12 = __src[17];
    __dst[16] = __src[16];
    uint64_t v13 = __src[19];
    __dst[18] = __src[18];
    uint64_t v37 = __src[21];
    uint64_t v38 = v13;
    __dst[20] = __src[20];
    uint64_t v14 = __src[23];
    __dst[22] = __src[22];
    uint64_t v35 = __src[25];
    uint64_t v36 = v14;
    __dst[24] = __src[24];
    uint64_t v15 = __src[27];
    __dst[26] = __src[26];
    uint64_t v34 = __src[29];
    __dst[28] = __src[28];
    uint64_t v16 = __src[31];
    __dst[30] = __src[30];
    uint64_t v28 = __src[33];
    __dst[32] = __src[32];
    uint64_t v17 = __src[35];
    __dst[34] = __src[34];
    uint64_t v29 = __src[37];
    __dst[36] = __src[36];
    uint64_t v18 = __src[39];
    __dst[38] = __src[38];
    uint64_t v30 = __src[41];
    __dst[40] = __src[40];
    uint64_t v19 = __src[43];
    __dst[42] = __src[42];
    uint64_t v31 = __src[45];
    __dst[44] = __src[44];
    uint64_t v20 = __src[47];
    __dst[46] = __src[46];
    uint64_t v32 = __src[49];
    __dst[48] = __src[48];
    uint64_t v21 = __src[51];
    __dst[50] = __src[50];
    uint64_t v22 = __src[53];
    __dst[52] = __src[52];
    uint64_t v23 = __src[55];
    __dst[54] = __src[54];
    uint64_t v24 = __src[57];
    __dst[56] = __src[56];
    uint64_t v25 = __src[59];
    __dst[58] = __src[58];
    uint64_t v33 = __src[61];
    __dst[60] = __src[60];
    uint64_t v26 = __src[63];
    __dst[62] = __src[62];
    __dst[64] = __src[64];
    __dst[66] = __src[66];
    __dst[68] = __src[68];
    __dst[70] = __src[70];
    __dst[72] = __src[72];
    __dst[74] = __src[74];
    __dst[76] = __src[76];
    __dst[78] = __src[78];
    __dst[80] = __src[80];
    __dst[82] = __src[82];
    __dst[84] = __src[84];
    __dst[86] = __src[86];
    __dst[88] = __src[88];
    __dst[90] = __src[90];
    __dst[92] = __src[92];
    __dst[94] = __src[94];
    __dst[96] = __src[96];
    __dst[98] = __src[98];
    __dst[100] = __src[100];
    __dst[102] = __src[102];
    __dst[104] = __src[104];
    __dst[106] = __src[106];
    *__dst = *__src;
    __dst[1] = v4;
    __dst[3] = v5;
    __dst[5] = v6;
    __dst[7] = v7;
    __dst[9] = v8;
    __dst[11] = v9;
    __dst[13] = v10;
    __dst[15] = v11;
    __dst[17] = v12;
    __dst[19] = v38;
    __dst[21] = v37;
    __dst[23] = v36;
    __dst[25] = v35;
    __dst[27] = v15;
    __dst[29] = v34;
    __dst[31] = v16;
    __dst[33] = v28;
    __dst[35] = v17;
    __dst[37] = v29;
    __dst[39] = v18;
    __dst[41] = v30;
    __dst[43] = v19;
    __dst[45] = v31;
    __dst[47] = v20;
    __dst[49] = v32;
    __dst[51] = v21;
    __dst[53] = v22;
    __dst[55] = v23;
    __dst[57] = v24;
    __dst[59] = v25;
    __dst[61] = v33;
    __dst[63] = v26;
    __dst[65] = __src[65];
    __dst[67] = __src[67];
    __dst[69] = __src[69];
    __dst[71] = __src[71];
    __dst[73] = __src[73];
    __dst[75] = __src[75];
    __dst[77] = __src[77];
    __dst[79] = __src[79];
    __dst[81] = __src[81];
    __dst[83] = __src[83];
    __dst[85] = __src[85];
    __dst[87] = __src[87];
    __dst[89] = __src[89];
    __dst[91] = __src[91];
    __dst[93] = __src[93];
    __dst[95] = __src[95];
    __dst[97] = __src[97];
    __dst[99] = __src[99];
    __dst[101] = __src[101];
    __dst[103] = __src[103];
    __dst[105] = __src[105];
    __dst[107] = __src[107];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    memcpy(__dst, __src, 0x360uLL);
  }
  __dst[108] = __src[108];
  __dst[109] = __src[109];
  swift_bridgeObjectRetain();
  return __dst;
}

void *assignWithCopy for PDF417Data(void *__dst, void *__src)
{
  uint64_t v4 = __src[1];
  if (!__dst[1])
  {
    if (v4)
    {
      *__dst = *__src;
      __dst[1] = __src[1];
      __dst[2] = __src[2];
      __dst[3] = __src[3];
      __dst[4] = __src[4];
      __dst[5] = __src[5];
      __dst[6] = __src[6];
      __dst[7] = __src[7];
      __dst[8] = __src[8];
      __dst[9] = __src[9];
      __dst[10] = __src[10];
      __dst[11] = __src[11];
      __dst[12] = __src[12];
      __dst[13] = __src[13];
      __dst[14] = __src[14];
      __dst[15] = __src[15];
      __dst[16] = __src[16];
      __dst[17] = __src[17];
      __dst[18] = __src[18];
      __dst[19] = __src[19];
      __dst[20] = __src[20];
      __dst[21] = __src[21];
      __dst[22] = __src[22];
      __dst[23] = __src[23];
      __dst[24] = __src[24];
      __dst[25] = __src[25];
      __dst[26] = __src[26];
      __dst[27] = __src[27];
      __dst[28] = __src[28];
      __dst[29] = __src[29];
      __dst[30] = __src[30];
      __dst[31] = __src[31];
      __dst[32] = __src[32];
      __dst[33] = __src[33];
      __dst[34] = __src[34];
      __dst[35] = __src[35];
      __dst[36] = __src[36];
      __dst[37] = __src[37];
      __dst[38] = __src[38];
      __dst[39] = __src[39];
      __dst[40] = __src[40];
      __dst[41] = __src[41];
      __dst[42] = __src[42];
      __dst[43] = __src[43];
      __dst[44] = __src[44];
      __dst[45] = __src[45];
      __dst[46] = __src[46];
      __dst[47] = __src[47];
      __dst[48] = __src[48];
      __dst[49] = __src[49];
      __dst[50] = __src[50];
      __dst[51] = __src[51];
      __dst[52] = __src[52];
      __dst[53] = __src[53];
      __dst[54] = __src[54];
      __dst[55] = __src[55];
      __dst[56] = __src[56];
      __dst[57] = __src[57];
      __dst[58] = __src[58];
      __dst[59] = __src[59];
      __dst[60] = __src[60];
      __dst[61] = __src[61];
      __dst[62] = __src[62];
      __dst[63] = __src[63];
      __dst[64] = __src[64];
      __dst[65] = __src[65];
      __dst[66] = __src[66];
      __dst[67] = __src[67];
      __dst[68] = __src[68];
      __dst[69] = __src[69];
      __dst[70] = __src[70];
      __dst[71] = __src[71];
      __dst[72] = __src[72];
      __dst[73] = __src[73];
      __dst[74] = __src[74];
      __dst[75] = __src[75];
      __dst[76] = __src[76];
      __dst[77] = __src[77];
      __dst[78] = __src[78];
      __dst[79] = __src[79];
      __dst[80] = __src[80];
      __dst[81] = __src[81];
      __dst[82] = __src[82];
      __dst[83] = __src[83];
      __dst[84] = __src[84];
      __dst[85] = __src[85];
      __dst[86] = __src[86];
      __dst[87] = __src[87];
      __dst[88] = __src[88];
      __dst[89] = __src[89];
      __dst[90] = __src[90];
      __dst[91] = __src[91];
      __dst[92] = __src[92];
      __dst[93] = __src[93];
      __dst[94] = __src[94];
      __dst[95] = __src[95];
      __dst[96] = __src[96];
      __dst[97] = __src[97];
      __dst[98] = __src[98];
      __dst[99] = __src[99];
      __dst[100] = __src[100];
      __dst[101] = __src[101];
      __dst[102] = __src[102];
      __dst[103] = __src[103];
      __dst[104] = __src[104];
      __dst[105] = __src[105];
      __dst[106] = __src[106];
      __dst[107] = __src[107];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
LABEL_7:
    memcpy(__dst, __src, 0x360uLL);
    goto LABEL_8;
  }
  if (!v4)
  {
    sub_1D79129AC((uint64_t)__dst);
    goto LABEL_7;
  }
  *__dst = *__src;
  __dst[1] = __src[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[2] = __src[2];
  __dst[3] = __src[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[4] = __src[4];
  __dst[5] = __src[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[6] = __src[6];
  __dst[7] = __src[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[8] = __src[8];
  __dst[9] = __src[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[10] = __src[10];
  __dst[11] = __src[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[12] = __src[12];
  __dst[13] = __src[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[14] = __src[14];
  __dst[15] = __src[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[16] = __src[16];
  __dst[17] = __src[17];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[18] = __src[18];
  __dst[19] = __src[19];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[20] = __src[20];
  __dst[21] = __src[21];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[22] = __src[22];
  __dst[23] = __src[23];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[24] = __src[24];
  __dst[25] = __src[25];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[26] = __src[26];
  __dst[27] = __src[27];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[28] = __src[28];
  __dst[29] = __src[29];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[30] = __src[30];
  __dst[31] = __src[31];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[32] = __src[32];
  __dst[33] = __src[33];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[34] = __src[34];
  __dst[35] = __src[35];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[36] = __src[36];
  __dst[37] = __src[37];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[38] = __src[38];
  __dst[39] = __src[39];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[40] = __src[40];
  __dst[41] = __src[41];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[42] = __src[42];
  __dst[43] = __src[43];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[44] = __src[44];
  __dst[45] = __src[45];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[46] = __src[46];
  __dst[47] = __src[47];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[48] = __src[48];
  __dst[49] = __src[49];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[50] = __src[50];
  __dst[51] = __src[51];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[52] = __src[52];
  __dst[53] = __src[53];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[54] = __src[54];
  __dst[55] = __src[55];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[56] = __src[56];
  __dst[57] = __src[57];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[58] = __src[58];
  __dst[59] = __src[59];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[60] = __src[60];
  __dst[61] = __src[61];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[62] = __src[62];
  __dst[63] = __src[63];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[64] = __src[64];
  __dst[65] = __src[65];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[66] = __src[66];
  __dst[67] = __src[67];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[68] = __src[68];
  __dst[69] = __src[69];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[70] = __src[70];
  __dst[71] = __src[71];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[72] = __src[72];
  __dst[73] = __src[73];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[74] = __src[74];
  __dst[75] = __src[75];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[76] = __src[76];
  __dst[77] = __src[77];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[78] = __src[78];
  __dst[79] = __src[79];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[80] = __src[80];
  __dst[81] = __src[81];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[82] = __src[82];
  __dst[83] = __src[83];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[84] = __src[84];
  __dst[85] = __src[85];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[86] = __src[86];
  __dst[87] = __src[87];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[88] = __src[88];
  __dst[89] = __src[89];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[90] = __src[90];
  __dst[91] = __src[91];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[92] = __src[92];
  __dst[93] = __src[93];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[94] = __src[94];
  __dst[95] = __src[95];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[96] = __src[96];
  __dst[97] = __src[97];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[98] = __src[98];
  __dst[99] = __src[99];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[100] = __src[100];
  __dst[101] = __src[101];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[102] = __src[102];
  __dst[103] = __src[103];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[104] = __src[104];
  __dst[105] = __src[105];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __dst[106] = __src[106];
  __dst[107] = __src[107];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_8:
  __dst[108] = __src[108];
  __dst[109] = __src[109];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return __dst;
}

uint64_t sub_1D79129AC(uint64_t a1)
{
  return a1;
}

void *__swift_memcpy880_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x370uLL);
}

void *assignWithTake for PDF417Data(void *__dst, void *__src)
{
  if (!__dst[1]) {
    goto LABEL_5;
  }
  uint64_t v4 = __src[1];
  if (!v4)
  {
    sub_1D79129AC((uint64_t)__dst);
LABEL_5:
    memcpy(__dst, __src, 0x360uLL);
    goto LABEL_6;
  }
  *__dst = *__src;
  __dst[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = __src[3];
  __dst[2] = __src[2];
  __dst[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = __src[5];
  __dst[4] = __src[4];
  __dst[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = __src[7];
  __dst[6] = __src[6];
  __dst[7] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = __src[9];
  __dst[8] = __src[8];
  __dst[9] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = __src[11];
  __dst[10] = __src[10];
  __dst[11] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = __src[13];
  __dst[12] = __src[12];
  __dst[13] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = __src[15];
  __dst[14] = __src[14];
  __dst[15] = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = __src[17];
  __dst[16] = __src[16];
  __dst[17] = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = __src[19];
  __dst[18] = __src[18];
  __dst[19] = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = __src[21];
  __dst[20] = __src[20];
  __dst[21] = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = __src[23];
  __dst[22] = __src[22];
  __dst[23] = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = __src[25];
  __dst[24] = __src[24];
  __dst[25] = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = __src[27];
  __dst[26] = __src[26];
  __dst[27] = v17;
  swift_bridgeObjectRelease();
  uint64_t v18 = __src[29];
  __dst[28] = __src[28];
  __dst[29] = v18;
  swift_bridgeObjectRelease();
  uint64_t v19 = __src[31];
  __dst[30] = __src[30];
  __dst[31] = v19;
  swift_bridgeObjectRelease();
  uint64_t v20 = __src[33];
  __dst[32] = __src[32];
  __dst[33] = v20;
  swift_bridgeObjectRelease();
  uint64_t v21 = __src[35];
  __dst[34] = __src[34];
  __dst[35] = v21;
  swift_bridgeObjectRelease();
  uint64_t v22 = __src[37];
  __dst[36] = __src[36];
  __dst[37] = v22;
  swift_bridgeObjectRelease();
  uint64_t v23 = __src[39];
  __dst[38] = __src[38];
  __dst[39] = v23;
  swift_bridgeObjectRelease();
  uint64_t v24 = __src[41];
  __dst[40] = __src[40];
  __dst[41] = v24;
  swift_bridgeObjectRelease();
  uint64_t v25 = __src[43];
  __dst[42] = __src[42];
  __dst[43] = v25;
  swift_bridgeObjectRelease();
  uint64_t v26 = __src[45];
  __dst[44] = __src[44];
  __dst[45] = v26;
  swift_bridgeObjectRelease();
  uint64_t v27 = __src[47];
  __dst[46] = __src[46];
  __dst[47] = v27;
  swift_bridgeObjectRelease();
  uint64_t v28 = __src[49];
  __dst[48] = __src[48];
  __dst[49] = v28;
  swift_bridgeObjectRelease();
  uint64_t v29 = __src[51];
  __dst[50] = __src[50];
  __dst[51] = v29;
  swift_bridgeObjectRelease();
  uint64_t v30 = __src[53];
  __dst[52] = __src[52];
  __dst[53] = v30;
  swift_bridgeObjectRelease();
  uint64_t v31 = __src[55];
  __dst[54] = __src[54];
  __dst[55] = v31;
  swift_bridgeObjectRelease();
  uint64_t v32 = __src[57];
  __dst[56] = __src[56];
  __dst[57] = v32;
  swift_bridgeObjectRelease();
  uint64_t v33 = __src[59];
  __dst[58] = __src[58];
  __dst[59] = v33;
  swift_bridgeObjectRelease();
  uint64_t v34 = __src[61];
  __dst[60] = __src[60];
  __dst[61] = v34;
  swift_bridgeObjectRelease();
  uint64_t v35 = __src[63];
  __dst[62] = __src[62];
  __dst[63] = v35;
  swift_bridgeObjectRelease();
  __dst[64] = __src[64];
  __dst[65] = __src[65];
  swift_bridgeObjectRelease();
  __dst[66] = __src[66];
  __dst[67] = __src[67];
  swift_bridgeObjectRelease();
  __dst[68] = __src[68];
  __dst[69] = __src[69];
  swift_bridgeObjectRelease();
  __dst[70] = __src[70];
  __dst[71] = __src[71];
  swift_bridgeObjectRelease();
  __dst[72] = __src[72];
  __dst[73] = __src[73];
  swift_bridgeObjectRelease();
  __dst[74] = __src[74];
  __dst[75] = __src[75];
  swift_bridgeObjectRelease();
  __dst[76] = __src[76];
  __dst[77] = __src[77];
  swift_bridgeObjectRelease();
  __dst[78] = __src[78];
  __dst[79] = __src[79];
  swift_bridgeObjectRelease();
  __dst[80] = __src[80];
  __dst[81] = __src[81];
  swift_bridgeObjectRelease();
  __dst[82] = __src[82];
  __dst[83] = __src[83];
  swift_bridgeObjectRelease();
  __dst[84] = __src[84];
  __dst[85] = __src[85];
  swift_bridgeObjectRelease();
  __dst[86] = __src[86];
  __dst[87] = __src[87];
  swift_bridgeObjectRelease();
  __dst[88] = __src[88];
  __dst[89] = __src[89];
  swift_bridgeObjectRelease();
  __dst[90] = __src[90];
  __dst[91] = __src[91];
  swift_bridgeObjectRelease();
  __dst[92] = __src[92];
  __dst[93] = __src[93];
  swift_bridgeObjectRelease();
  __dst[94] = __src[94];
  __dst[95] = __src[95];
  swift_bridgeObjectRelease();
  __dst[96] = __src[96];
  __dst[97] = __src[97];
  swift_bridgeObjectRelease();
  __dst[98] = __src[98];
  __dst[99] = __src[99];
  swift_bridgeObjectRelease();
  __dst[100] = __src[100];
  __dst[101] = __src[101];
  swift_bridgeObjectRelease();
  __dst[102] = __src[102];
  __dst[103] = __src[103];
  swift_bridgeObjectRelease();
  __dst[104] = __src[104];
  __dst[105] = __src[105];
  swift_bridgeObjectRelease();
  __dst[106] = __src[106];
  __dst[107] = __src[107];
  swift_bridgeObjectRelease();
LABEL_6:
  __dst[108] = __src[108];
  __dst[109] = __src[109];
  swift_bridgeObjectRelease();
  return __dst;
}

uint64_t getEnumTagSinglePayload for PDF417Data(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 880)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 872);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PDF417Data(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 872) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 856) = 0u;
    *(_OWORD *)(result + 840) = 0u;
    *(_OWORD *)(result + 824) = 0u;
    *(_OWORD *)(result + 808) = 0u;
    *(_OWORD *)(result + 792) = 0u;
    *(_OWORD *)(result + 776) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 880) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 872) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 880) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PDF417Data()
{
  return &type metadata for PDF417Data;
}

uint64_t destroy for DocScanData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DocScanData(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DocScanData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v4 = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(_DWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = v5;
  return a1;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for DocScanData(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for DocScanData(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 49)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DocScanData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 49) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DocScanData()
{
  return &type metadata for DocScanData;
}

uint64_t destroy for SelfieScanData()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SelfieScanData(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 52) = *(unsigned char *)(a2 + 52);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v4 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v4;
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SelfieScanData(uint64_t a1, long long *a2)
{
  long long v4 = *a2;
  long long v5 = a2[1];
  *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
  *(_OWORD *)a1 = v4;
  *(_OWORD *)(a1 + 16) = v5;
  *(void *)(a1 + 40) = *((void *)a2 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v6 = *((_DWORD *)a2 + 12);
  *(unsigned char *)(a1 + 52) = *((unsigned char *)a2 + 52);
  *(_DWORD *)(a1 + 48) = v6;
  uint64_t v7 = *((void *)a2 + 7);
  *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
  *(void *)(a1 + 56) = v7;
  *(void *)(a1 + 72) = *((void *)a2 + 9);
  *(void *)(a1 + 80) = *((void *)a2 + 10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 88) = *((unsigned char *)a2 + 88);
  return a1;
}

__n128 __swift_memcpy89_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for SelfieScanData(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 52) = *(unsigned char *)(a2 + 52);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v5 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  return a1;
}

uint64_t getEnumTagSinglePayload for SelfieScanData(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 89)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 40);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SelfieScanData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 88) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 89) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 89) = 0;
    }
    if (a2) {
      *(void *)(result + 40) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SelfieScanData()
{
  return &type metadata for SelfieScanData;
}

uint64_t initializeBufferWithCopyOfBuffer for IQParameters(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for IQParameters()
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for IQParameters(uint64_t a1, int *a2)
{
  int v3 = *a2;
  *(unsigned char *)(a1 + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)a1 = v3;
  int v4 = a2[2];
  *(unsigned char *)(a1 + 12) = *((unsigned char *)a2 + 12);
  *(_DWORD *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for IQParameters(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for IQParameters(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for IQParameters(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IQParameters()
{
  return &type metadata for IQParameters;
}

uint64_t destroy for ImageQualityProperties(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 880);
  if (result)
  {
    if (*(void *)(a1 + 16))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *initializeWithCopy for ImageQualityProperties(void *a1, uint64_t a2)
{
  int v4 = *(void **)a2;
  *a1 = *(void *)a2;
  uint64_t v5 = a1 + 1;
  int v6 = (const void *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 880);
  id v8 = v4;
  if (v7)
  {
    uint64_t v9 = *(void *)(a2 + 16);
    if (v9)
    {
      uint64_t v10 = *(void *)(a2 + 32);
      a1[3] = *(void *)(a2 + 24);
      uint64_t v11 = *(void *)(a2 + 48);
      a1[5] = *(void *)(a2 + 40);
      uint64_t v12 = *(void *)(a2 + 64);
      a1[7] = *(void *)(a2 + 56);
      uint64_t v13 = *(void *)(a2 + 80);
      a1[9] = *(void *)(a2 + 72);
      uint64_t v14 = *(void *)(a2 + 96);
      a1[11] = *(void *)(a2 + 88);
      uint64_t v15 = *(void *)(a2 + 112);
      a1[13] = *(void *)(a2 + 104);
      uint64_t v16 = *(void *)(a2 + 128);
      a1[15] = *(void *)(a2 + 120);
      uint64_t v17 = *(void *)(a2 + 144);
      a1[17] = *(void *)(a2 + 136);
      uint64_t v43 = *(void *)(a2 + 160);
      uint64_t v44 = v17;
      a1[19] = *(void *)(a2 + 152);
      uint64_t v18 = *(void *)(a2 + 176);
      a1[21] = *(void *)(a2 + 168);
      uint64_t v41 = *(void *)(a2 + 192);
      uint64_t v42 = v18;
      a1[23] = *(void *)(a2 + 184);
      uint64_t v19 = *(void *)(a2 + 208);
      a1[25] = *(void *)(a2 + 200);
      uint64_t v39 = *(void *)(a2 + 224);
      uint64_t v40 = v19;
      a1[27] = *(void *)(a2 + 216);
      uint64_t v20 = *(void *)(a2 + 240);
      a1[29] = *(void *)(a2 + 232);
      uint64_t v30 = *(void *)(a2 + 256);
      a1[31] = *(void *)(a2 + 248);
      uint64_t v21 = *(void *)(a2 + 272);
      a1[33] = *(void *)(a2 + 264);
      uint64_t v31 = *(void *)(a2 + 288);
      a1[35] = *(void *)(a2 + 280);
      uint64_t v22 = *(void *)(a2 + 304);
      a1[37] = *(void *)(a2 + 296);
      uint64_t v32 = *(void *)(a2 + 320);
      a1[39] = *(void *)(a2 + 312);
      uint64_t v23 = *(void *)(a2 + 336);
      a1[41] = *(void *)(a2 + 328);
      uint64_t v33 = *(void *)(a2 + 352);
      a1[43] = *(void *)(a2 + 344);
      uint64_t v24 = *(void *)(a2 + 368);
      a1[45] = *(void *)(a2 + 360);
      uint64_t v34 = *(void *)(a2 + 384);
      a1[47] = *(void *)(a2 + 376);
      uint64_t v25 = *(void *)(a2 + 400);
      a1[49] = *(void *)(a2 + 392);
      uint64_t v26 = *(void *)(a2 + 416);
      a1[51] = *(void *)(a2 + 408);
      uint64_t v27 = *(void *)(a2 + 432);
      a1[53] = *(void *)(a2 + 424);
      uint64_t v35 = *(void *)(a2 + 448);
      a1[55] = *(void *)(a2 + 440);
      uint64_t v36 = *(void *)(a2 + 464);
      a1[57] = *(void *)(a2 + 456);
      uint64_t v37 = *(void *)(a2 + 480);
      a1[59] = *(void *)(a2 + 472);
      uint64_t v28 = *(void *)(a2 + 496);
      a1[61] = *(void *)(a2 + 488);
      uint64_t v38 = *(void *)(a2 + 512);
      a1[63] = *(void *)(a2 + 504);
      a1[65] = *(void *)(a2 + 520);
      a1[67] = *(void *)(a2 + 536);
      a1[69] = *(void *)(a2 + 552);
      a1[71] = *(void *)(a2 + 568);
      a1[73] = *(void *)(a2 + 584);
      a1[75] = *(void *)(a2 + 600);
      a1[77] = *(void *)(a2 + 616);
      a1[79] = *(void *)(a2 + 632);
      a1[81] = *(void *)(a2 + 648);
      a1[83] = *(void *)(a2 + 664);
      a1[85] = *(void *)(a2 + 680);
      a1[87] = *(void *)(a2 + 696);
      a1[89] = *(void *)(a2 + 712);
      a1[91] = *(void *)(a2 + 728);
      a1[93] = *(void *)(a2 + 744);
      a1[95] = *(void *)(a2 + 760);
      a1[97] = *(void *)(a2 + 776);
      a1[99] = *(void *)(a2 + 792);
      a1[101] = *(void *)(a2 + 808);
      a1[103] = *(void *)(a2 + 824);
      a1[105] = *(void *)(a2 + 840);
      a1[107] = *(void *)(a2 + 856);
      a1[1] = *(void *)(a2 + 8);
      a1[2] = v9;
      a1[4] = v10;
      a1[6] = v11;
      a1[8] = v12;
      a1[10] = v13;
      a1[12] = v14;
      a1[14] = v15;
      a1[16] = v16;
      a1[18] = v44;
      a1[20] = v43;
      a1[22] = v42;
      a1[24] = v41;
      a1[26] = v40;
      a1[28] = v39;
      a1[30] = v20;
      a1[32] = v30;
      a1[34] = v21;
      a1[36] = v31;
      a1[38] = v22;
      a1[40] = v32;
      a1[42] = v23;
      a1[44] = v33;
      a1[46] = v24;
      a1[48] = v34;
      a1[50] = v25;
      a1[52] = v26;
      a1[54] = v27;
      a1[56] = v35;
      a1[58] = v36;
      a1[60] = v37;
      a1[62] = v28;
      a1[64] = v38;
      a1[66] = *(void *)(a2 + 528);
      a1[68] = *(void *)(a2 + 544);
      a1[70] = *(void *)(a2 + 560);
      a1[72] = *(void *)(a2 + 576);
      a1[74] = *(void *)(a2 + 592);
      a1[76] = *(void *)(a2 + 608);
      a1[78] = *(void *)(a2 + 624);
      a1[80] = *(void *)(a2 + 640);
      a1[82] = *(void *)(a2 + 656);
      a1[84] = *(void *)(a2 + 672);
      a1[86] = *(void *)(a2 + 688);
      a1[88] = *(void *)(a2 + 704);
      a1[90] = *(void *)(a2 + 720);
      a1[92] = *(void *)(a2 + 736);
      a1[94] = *(void *)(a2 + 752);
      a1[96] = *(void *)(a2 + 768);
      a1[98] = *(void *)(a2 + 784);
      a1[100] = *(void *)(a2 + 800);
      a1[102] = *(void *)(a2 + 816);
      a1[104] = *(void *)(a2 + 832);
      a1[106] = *(void *)(a2 + 848);
      a1[108] = *(void *)(a2 + 864);
      uint64_t v7 = *(void *)(a2 + 880);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      memcpy(v5, v6, 0x360uLL);
    }
    a1[109] = *(void *)(a2 + 872);
    a1[110] = v7;
    swift_bridgeObjectRetain();
  }
  else
  {
    memcpy(v5, v6, 0x370uLL);
  }
  return a1;
}

uint64_t assignWithCopy for ImageQualityProperties(uint64_t a1, uint64_t a2)
{
  int v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void *)(a2 + 880);
  if (*(void *)(a1 + 880))
  {
    if (v7)
    {
      uint64_t v8 = *(void *)(a2 + 16);
      if (*(void *)(a1 + 16))
      {
        if (v8)
        {
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 24) = *(void *)(a2 + 24);
          *(void *)(a1 + 32) = *(void *)(a2 + 32);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 40) = *(void *)(a2 + 40);
          *(void *)(a1 + 48) = *(void *)(a2 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 56) = *(void *)(a2 + 56);
          *(void *)(a1 + 64) = *(void *)(a2 + 64);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 72) = *(void *)(a2 + 72);
          *(void *)(a1 + 80) = *(void *)(a2 + 80);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 88) = *(void *)(a2 + 88);
          *(void *)(a1 + 96) = *(void *)(a2 + 96);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 104) = *(void *)(a2 + 104);
          *(void *)(a1 + 112) = *(void *)(a2 + 112);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 120) = *(void *)(a2 + 120);
          *(void *)(a1 + 128) = *(void *)(a2 + 128);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 136) = *(void *)(a2 + 136);
          *(void *)(a1 + 144) = *(void *)(a2 + 144);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 152) = *(void *)(a2 + 152);
          *(void *)(a1 + 160) = *(void *)(a2 + 160);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 168) = *(void *)(a2 + 168);
          *(void *)(a1 + 176) = *(void *)(a2 + 176);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 184) = *(void *)(a2 + 184);
          *(void *)(a1 + 192) = *(void *)(a2 + 192);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 200) = *(void *)(a2 + 200);
          *(void *)(a1 + 208) = *(void *)(a2 + 208);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 216) = *(void *)(a2 + 216);
          *(void *)(a1 + 224) = *(void *)(a2 + 224);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 232) = *(void *)(a2 + 232);
          *(void *)(a1 + 240) = *(void *)(a2 + 240);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 248) = *(void *)(a2 + 248);
          *(void *)(a1 + 256) = *(void *)(a2 + 256);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 264) = *(void *)(a2 + 264);
          *(void *)(a1 + 272) = *(void *)(a2 + 272);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 280) = *(void *)(a2 + 280);
          *(void *)(a1 + 288) = *(void *)(a2 + 288);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 296) = *(void *)(a2 + 296);
          *(void *)(a1 + 304) = *(void *)(a2 + 304);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 312) = *(void *)(a2 + 312);
          *(void *)(a1 + 320) = *(void *)(a2 + 320);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 328) = *(void *)(a2 + 328);
          *(void *)(a1 + 336) = *(void *)(a2 + 336);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 344) = *(void *)(a2 + 344);
          *(void *)(a1 + 352) = *(void *)(a2 + 352);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 360) = *(void *)(a2 + 360);
          *(void *)(a1 + 368) = *(void *)(a2 + 368);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 376) = *(void *)(a2 + 376);
          *(void *)(a1 + 384) = *(void *)(a2 + 384);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 392) = *(void *)(a2 + 392);
          *(void *)(a1 + 400) = *(void *)(a2 + 400);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 408) = *(void *)(a2 + 408);
          *(void *)(a1 + 416) = *(void *)(a2 + 416);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 424) = *(void *)(a2 + 424);
          *(void *)(a1 + 432) = *(void *)(a2 + 432);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 440) = *(void *)(a2 + 440);
          *(void *)(a1 + 448) = *(void *)(a2 + 448);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 456) = *(void *)(a2 + 456);
          *(void *)(a1 + 464) = *(void *)(a2 + 464);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 472) = *(void *)(a2 + 472);
          *(void *)(a1 + 480) = *(void *)(a2 + 480);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 488) = *(void *)(a2 + 488);
          *(void *)(a1 + 496) = *(void *)(a2 + 496);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 504) = *(void *)(a2 + 504);
          *(void *)(a1 + 512) = *(void *)(a2 + 512);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 520) = *(void *)(a2 + 520);
          *(void *)(a1 + 528) = *(void *)(a2 + 528);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 536) = *(void *)(a2 + 536);
          *(void *)(a1 + 544) = *(void *)(a2 + 544);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 552) = *(void *)(a2 + 552);
          *(void *)(a1 + 560) = *(void *)(a2 + 560);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 568) = *(void *)(a2 + 568);
          *(void *)(a1 + 576) = *(void *)(a2 + 576);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 584) = *(void *)(a2 + 584);
          *(void *)(a1 + 592) = *(void *)(a2 + 592);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 600) = *(void *)(a2 + 600);
          *(void *)(a1 + 608) = *(void *)(a2 + 608);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 616) = *(void *)(a2 + 616);
          *(void *)(a1 + 624) = *(void *)(a2 + 624);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 632) = *(void *)(a2 + 632);
          *(void *)(a1 + 640) = *(void *)(a2 + 640);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 648) = *(void *)(a2 + 648);
          *(void *)(a1 + 656) = *(void *)(a2 + 656);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 664) = *(void *)(a2 + 664);
          *(void *)(a1 + 672) = *(void *)(a2 + 672);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 680) = *(void *)(a2 + 680);
          *(void *)(a1 + 688) = *(void *)(a2 + 688);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 696) = *(void *)(a2 + 696);
          *(void *)(a1 + 704) = *(void *)(a2 + 704);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 712) = *(void *)(a2 + 712);
          *(void *)(a1 + 720) = *(void *)(a2 + 720);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 728) = *(void *)(a2 + 728);
          *(void *)(a1 + 736) = *(void *)(a2 + 736);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 744) = *(void *)(a2 + 744);
          *(void *)(a1 + 752) = *(void *)(a2 + 752);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 760) = *(void *)(a2 + 760);
          *(void *)(a1 + 768) = *(void *)(a2 + 768);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 776) = *(void *)(a2 + 776);
          *(void *)(a1 + 784) = *(void *)(a2 + 784);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 792) = *(void *)(a2 + 792);
          *(void *)(a1 + 800) = *(void *)(a2 + 800);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 808) = *(void *)(a2 + 808);
          *(void *)(a1 + 816) = *(void *)(a2 + 816);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 824) = *(void *)(a2 + 824);
          *(void *)(a1 + 832) = *(void *)(a2 + 832);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 840) = *(void *)(a2 + 840);
          *(void *)(a1 + 848) = *(void *)(a2 + 848);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 856) = *(void *)(a2 + 856);
          *(void *)(a1 + 864) = *(void *)(a2 + 864);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
LABEL_15:
          *(void *)(a1 + 872) = *(void *)(a2 + 872);
          *(void *)(a1 + 880) = *(void *)(a2 + 880);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          return a1;
        }
        sub_1D79129AC(a1 + 8);
      }
      else if (v8)
      {
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        *(void *)(a1 + 80) = *(void *)(a2 + 80);
        *(void *)(a1 + 88) = *(void *)(a2 + 88);
        *(void *)(a1 + 96) = *(void *)(a2 + 96);
        *(void *)(a1 + 104) = *(void *)(a2 + 104);
        *(void *)(a1 + 112) = *(void *)(a2 + 112);
        *(void *)(a1 + 120) = *(void *)(a2 + 120);
        *(void *)(a1 + 128) = *(void *)(a2 + 128);
        *(void *)(a1 + 136) = *(void *)(a2 + 136);
        *(void *)(a1 + 144) = *(void *)(a2 + 144);
        *(void *)(a1 + 152) = *(void *)(a2 + 152);
        *(void *)(a1 + 160) = *(void *)(a2 + 160);
        *(void *)(a1 + 168) = *(void *)(a2 + 168);
        *(void *)(a1 + 176) = *(void *)(a2 + 176);
        *(void *)(a1 + 184) = *(void *)(a2 + 184);
        *(void *)(a1 + 192) = *(void *)(a2 + 192);
        *(void *)(a1 + 200) = *(void *)(a2 + 200);
        *(void *)(a1 + 208) = *(void *)(a2 + 208);
        *(void *)(a1 + 216) = *(void *)(a2 + 216);
        *(void *)(a1 + 224) = *(void *)(a2 + 224);
        *(void *)(a1 + 232) = *(void *)(a2 + 232);
        *(void *)(a1 + 240) = *(void *)(a2 + 240);
        *(void *)(a1 + 248) = *(void *)(a2 + 248);
        *(void *)(a1 + 256) = *(void *)(a2 + 256);
        *(void *)(a1 + 264) = *(void *)(a2 + 264);
        *(void *)(a1 + 272) = *(void *)(a2 + 272);
        *(void *)(a1 + 280) = *(void *)(a2 + 280);
        *(void *)(a1 + 288) = *(void *)(a2 + 288);
        *(void *)(a1 + 296) = *(void *)(a2 + 296);
        *(void *)(a1 + 304) = *(void *)(a2 + 304);
        *(void *)(a1 + 312) = *(void *)(a2 + 312);
        *(void *)(a1 + 320) = *(void *)(a2 + 320);
        *(void *)(a1 + 328) = *(void *)(a2 + 328);
        *(void *)(a1 + 336) = *(void *)(a2 + 336);
        *(void *)(a1 + 344) = *(void *)(a2 + 344);
        *(void *)(a1 + 352) = *(void *)(a2 + 352);
        *(void *)(a1 + 360) = *(void *)(a2 + 360);
        *(void *)(a1 + 368) = *(void *)(a2 + 368);
        *(void *)(a1 + 376) = *(void *)(a2 + 376);
        *(void *)(a1 + 384) = *(void *)(a2 + 384);
        *(void *)(a1 + 392) = *(void *)(a2 + 392);
        *(void *)(a1 + 400) = *(void *)(a2 + 400);
        *(void *)(a1 + 408) = *(void *)(a2 + 408);
        *(void *)(a1 + 416) = *(void *)(a2 + 416);
        *(void *)(a1 + 424) = *(void *)(a2 + 424);
        *(void *)(a1 + 432) = *(void *)(a2 + 432);
        *(void *)(a1 + 440) = *(void *)(a2 + 440);
        *(void *)(a1 + 448) = *(void *)(a2 + 448);
        *(void *)(a1 + 456) = *(void *)(a2 + 456);
        *(void *)(a1 + 464) = *(void *)(a2 + 464);
        *(void *)(a1 + 472) = *(void *)(a2 + 472);
        *(void *)(a1 + 480) = *(void *)(a2 + 480);
        *(void *)(a1 + 488) = *(void *)(a2 + 488);
        *(void *)(a1 + 496) = *(void *)(a2 + 496);
        *(void *)(a1 + 504) = *(void *)(a2 + 504);
        *(void *)(a1 + 512) = *(void *)(a2 + 512);
        *(void *)(a1 + 520) = *(void *)(a2 + 520);
        *(void *)(a1 + 528) = *(void *)(a2 + 528);
        *(void *)(a1 + 536) = *(void *)(a2 + 536);
        *(void *)(a1 + 544) = *(void *)(a2 + 544);
        *(void *)(a1 + 552) = *(void *)(a2 + 552);
        *(void *)(a1 + 560) = *(void *)(a2 + 560);
        *(void *)(a1 + 568) = *(void *)(a2 + 568);
        *(void *)(a1 + 576) = *(void *)(a2 + 576);
        *(void *)(a1 + 584) = *(void *)(a2 + 584);
        *(void *)(a1 + 592) = *(void *)(a2 + 592);
        *(void *)(a1 + 600) = *(void *)(a2 + 600);
        *(void *)(a1 + 608) = *(void *)(a2 + 608);
        *(void *)(a1 + 616) = *(void *)(a2 + 616);
        *(void *)(a1 + 624) = *(void *)(a2 + 624);
        *(void *)(a1 + 632) = *(void *)(a2 + 632);
        *(void *)(a1 + 640) = *(void *)(a2 + 640);
        *(void *)(a1 + 648) = *(void *)(a2 + 648);
        *(void *)(a1 + 656) = *(void *)(a2 + 656);
        *(void *)(a1 + 664) = *(void *)(a2 + 664);
        *(void *)(a1 + 672) = *(void *)(a2 + 672);
        *(void *)(a1 + 680) = *(void *)(a2 + 680);
        *(void *)(a1 + 688) = *(void *)(a2 + 688);
        *(void *)(a1 + 696) = *(void *)(a2 + 696);
        *(void *)(a1 + 704) = *(void *)(a2 + 704);
        *(void *)(a1 + 712) = *(void *)(a2 + 712);
        *(void *)(a1 + 720) = *(void *)(a2 + 720);
        *(void *)(a1 + 728) = *(void *)(a2 + 728);
        *(void *)(a1 + 736) = *(void *)(a2 + 736);
        *(void *)(a1 + 744) = *(void *)(a2 + 744);
        *(void *)(a1 + 752) = *(void *)(a2 + 752);
        *(void *)(a1 + 760) = *(void *)(a2 + 760);
        *(void *)(a1 + 768) = *(void *)(a2 + 768);
        *(void *)(a1 + 776) = *(void *)(a2 + 776);
        *(void *)(a1 + 784) = *(void *)(a2 + 784);
        *(void *)(a1 + 792) = *(void *)(a2 + 792);
        *(void *)(a1 + 800) = *(void *)(a2 + 800);
        *(void *)(a1 + 808) = *(void *)(a2 + 808);
        *(void *)(a1 + 816) = *(void *)(a2 + 816);
        *(void *)(a1 + 824) = *(void *)(a2 + 824);
        *(void *)(a1 + 832) = *(void *)(a2 + 832);
        *(void *)(a1 + 840) = *(void *)(a2 + 840);
        *(void *)(a1 + 848) = *(void *)(a2 + 848);
        *(void *)(a1 + 856) = *(void *)(a2 + 856);
        *(void *)(a1 + 864) = *(void *)(a2 + 864);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_15;
      }
      memcpy((void *)(a1 + 8), (const void *)(a2 + 8), 0x360uLL);
      goto LABEL_15;
    }
    sub_1D791528C(a1 + 8);
    goto LABEL_10;
  }
  if (!v7)
  {
LABEL_10:
    memcpy((void *)(a1 + 8), (const void *)(a2 + 8), 0x370uLL);
    return a1;
  }
  if (*(void *)(a2 + 16))
  {
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = *(void *)(a2 + 120);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    *(void *)(a1 + 176) = *(void *)(a2 + 176);
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    *(void *)(a1 + 200) = *(void *)(a2 + 200);
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
    *(void *)(a1 + 216) = *(void *)(a2 + 216);
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    *(void *)(a1 + 232) = *(void *)(a2 + 232);
    *(void *)(a1 + 240) = *(void *)(a2 + 240);
    *(void *)(a1 + 248) = *(void *)(a2 + 248);
    *(void *)(a1 + 256) = *(void *)(a2 + 256);
    *(void *)(a1 + 264) = *(void *)(a2 + 264);
    *(void *)(a1 + 272) = *(void *)(a2 + 272);
    *(void *)(a1 + 280) = *(void *)(a2 + 280);
    *(void *)(a1 + 288) = *(void *)(a2 + 288);
    *(void *)(a1 + 296) = *(void *)(a2 + 296);
    *(void *)(a1 + 304) = *(void *)(a2 + 304);
    *(void *)(a1 + 312) = *(void *)(a2 + 312);
    *(void *)(a1 + 320) = *(void *)(a2 + 320);
    *(void *)(a1 + 328) = *(void *)(a2 + 328);
    *(void *)(a1 + 336) = *(void *)(a2 + 336);
    *(void *)(a1 + 344) = *(void *)(a2 + 344);
    *(void *)(a1 + 352) = *(void *)(a2 + 352);
    *(void *)(a1 + 360) = *(void *)(a2 + 360);
    *(void *)(a1 + 368) = *(void *)(a2 + 368);
    *(void *)(a1 + 376) = *(void *)(a2 + 376);
    *(void *)(a1 + 384) = *(void *)(a2 + 384);
    *(void *)(a1 + 392) = *(void *)(a2 + 392);
    *(void *)(a1 + 400) = *(void *)(a2 + 400);
    *(void *)(a1 + 408) = *(void *)(a2 + 408);
    *(void *)(a1 + 416) = *(void *)(a2 + 416);
    *(void *)(a1 + 424) = *(void *)(a2 + 424);
    *(void *)(a1 + 432) = *(void *)(a2 + 432);
    *(void *)(a1 + 440) = *(void *)(a2 + 440);
    *(void *)(a1 + 448) = *(void *)(a2 + 448);
    *(void *)(a1 + 456) = *(void *)(a2 + 456);
    *(void *)(a1 + 464) = *(void *)(a2 + 464);
    *(void *)(a1 + 472) = *(void *)(a2 + 472);
    *(void *)(a1 + 480) = *(void *)(a2 + 480);
    *(void *)(a1 + 488) = *(void *)(a2 + 488);
    *(void *)(a1 + 496) = *(void *)(a2 + 496);
    *(void *)(a1 + 504) = *(void *)(a2 + 504);
    *(void *)(a1 + 512) = *(void *)(a2 + 512);
    *(void *)(a1 + 520) = *(void *)(a2 + 520);
    *(void *)(a1 + 528) = *(void *)(a2 + 528);
    *(void *)(a1 + 536) = *(void *)(a2 + 536);
    *(void *)(a1 + 544) = *(void *)(a2 + 544);
    *(void *)(a1 + 552) = *(void *)(a2 + 552);
    *(void *)(a1 + 560) = *(void *)(a2 + 560);
    *(void *)(a1 + 568) = *(void *)(a2 + 568);
    *(void *)(a1 + 576) = *(void *)(a2 + 576);
    *(void *)(a1 + 584) = *(void *)(a2 + 584);
    *(void *)(a1 + 592) = *(void *)(a2 + 592);
    *(void *)(a1 + 600) = *(void *)(a2 + 600);
    *(void *)(a1 + 608) = *(void *)(a2 + 608);
    *(void *)(a1 + 616) = *(void *)(a2 + 616);
    *(void *)(a1 + 624) = *(void *)(a2 + 624);
    *(void *)(a1 + 632) = *(void *)(a2 + 632);
    *(void *)(a1 + 640) = *(void *)(a2 + 640);
    *(void *)(a1 + 648) = *(void *)(a2 + 648);
    *(void *)(a1 + 656) = *(void *)(a2 + 656);
    *(void *)(a1 + 664) = *(void *)(a2 + 664);
    *(void *)(a1 + 672) = *(void *)(a2 + 672);
    *(void *)(a1 + 680) = *(void *)(a2 + 680);
    *(void *)(a1 + 688) = *(void *)(a2 + 688);
    *(void *)(a1 + 696) = *(void *)(a2 + 696);
    *(void *)(a1 + 704) = *(void *)(a2 + 704);
    *(void *)(a1 + 712) = *(void *)(a2 + 712);
    *(void *)(a1 + 720) = *(void *)(a2 + 720);
    *(void *)(a1 + 728) = *(void *)(a2 + 728);
    *(void *)(a1 + 736) = *(void *)(a2 + 736);
    *(void *)(a1 + 744) = *(void *)(a2 + 744);
    *(void *)(a1 + 752) = *(void *)(a2 + 752);
    *(void *)(a1 + 760) = *(void *)(a2 + 760);
    *(void *)(a1 + 768) = *(void *)(a2 + 768);
    *(void *)(a1 + 776) = *(void *)(a2 + 776);
    *(void *)(a1 + 784) = *(void *)(a2 + 784);
    *(void *)(a1 + 792) = *(void *)(a2 + 792);
    *(void *)(a1 + 800) = *(void *)(a2 + 800);
    *(void *)(a1 + 808) = *(void *)(a2 + 808);
    *(void *)(a1 + 816) = *(void *)(a2 + 816);
    *(void *)(a1 + 824) = *(void *)(a2 + 824);
    *(void *)(a1 + 832) = *(void *)(a2 + 832);
    *(void *)(a1 + 840) = *(void *)(a2 + 840);
    *(void *)(a1 + 848) = *(void *)(a2 + 848);
    *(void *)(a1 + 856) = *(void *)(a2 + 856);
    *(void *)(a1 + 864) = *(void *)(a2 + 864);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    memcpy((void *)(a1 + 8), (const void *)(a2 + 8), 0x360uLL);
  }
  *(void *)(a1 + 872) = *(void *)(a2 + 872);
  *(void *)(a1 + 880) = *(void *)(a2 + 880);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D791528C(uint64_t a1)
{
  return a1;
}

void *__swift_memcpy888_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x378uLL);
}

uint64_t assignWithTake for ImageQualityProperties(uint64_t a1, void *a2)
{
  int v4 = a2 + 1;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *a2;

  if (*(void *)(a1 + 880))
  {
    if (a2[110])
    {
      if (*(void *)(a1 + 16))
      {
        uint64_t v6 = a2[2];
        if (v6)
        {
          *(void *)(a1 + 8) = a2[1];
          *(void *)(a1 + 16) = v6;
          swift_bridgeObjectRelease();
          uint64_t v7 = a2[4];
          *(void *)(a1 + 24) = a2[3];
          *(void *)(a1 + 32) = v7;
          swift_bridgeObjectRelease();
          uint64_t v8 = a2[6];
          *(void *)(a1 + 40) = a2[5];
          *(void *)(a1 + 48) = v8;
          swift_bridgeObjectRelease();
          uint64_t v9 = a2[8];
          *(void *)(a1 + 56) = a2[7];
          *(void *)(a1 + 64) = v9;
          swift_bridgeObjectRelease();
          uint64_t v10 = a2[10];
          *(void *)(a1 + 72) = a2[9];
          *(void *)(a1 + 80) = v10;
          swift_bridgeObjectRelease();
          uint64_t v11 = a2[12];
          *(void *)(a1 + 88) = a2[11];
          *(void *)(a1 + 96) = v11;
          swift_bridgeObjectRelease();
          uint64_t v12 = a2[14];
          *(void *)(a1 + 104) = a2[13];
          *(void *)(a1 + 112) = v12;
          swift_bridgeObjectRelease();
          uint64_t v13 = a2[16];
          *(void *)(a1 + 120) = a2[15];
          *(void *)(a1 + 128) = v13;
          swift_bridgeObjectRelease();
          uint64_t v14 = a2[18];
          *(void *)(a1 + 136) = a2[17];
          *(void *)(a1 + 144) = v14;
          swift_bridgeObjectRelease();
          uint64_t v15 = a2[20];
          *(void *)(a1 + 152) = a2[19];
          *(void *)(a1 + 160) = v15;
          swift_bridgeObjectRelease();
          uint64_t v16 = a2[22];
          *(void *)(a1 + 168) = a2[21];
          *(void *)(a1 + 176) = v16;
          swift_bridgeObjectRelease();
          uint64_t v17 = a2[24];
          *(void *)(a1 + 184) = a2[23];
          *(void *)(a1 + 192) = v17;
          swift_bridgeObjectRelease();
          uint64_t v18 = a2[26];
          *(void *)(a1 + 200) = a2[25];
          *(void *)(a1 + 208) = v18;
          swift_bridgeObjectRelease();
          uint64_t v19 = a2[28];
          *(void *)(a1 + 216) = a2[27];
          *(void *)(a1 + 224) = v19;
          swift_bridgeObjectRelease();
          uint64_t v20 = a2[30];
          *(void *)(a1 + 232) = a2[29];
          *(void *)(a1 + 240) = v20;
          swift_bridgeObjectRelease();
          uint64_t v21 = a2[32];
          *(void *)(a1 + 248) = a2[31];
          *(void *)(a1 + 256) = v21;
          swift_bridgeObjectRelease();
          uint64_t v22 = a2[34];
          *(void *)(a1 + 264) = a2[33];
          *(void *)(a1 + 272) = v22;
          swift_bridgeObjectRelease();
          uint64_t v23 = a2[36];
          *(void *)(a1 + 280) = a2[35];
          *(void *)(a1 + 288) = v23;
          swift_bridgeObjectRelease();
          uint64_t v24 = a2[38];
          *(void *)(a1 + 296) = a2[37];
          *(void *)(a1 + 304) = v24;
          swift_bridgeObjectRelease();
          uint64_t v25 = a2[40];
          *(void *)(a1 + 312) = a2[39];
          *(void *)(a1 + 320) = v25;
          swift_bridgeObjectRelease();
          uint64_t v26 = a2[42];
          *(void *)(a1 + 328) = a2[41];
          *(void *)(a1 + 336) = v26;
          swift_bridgeObjectRelease();
          uint64_t v27 = a2[44];
          *(void *)(a1 + 344) = a2[43];
          *(void *)(a1 + 352) = v27;
          swift_bridgeObjectRelease();
          uint64_t v28 = a2[46];
          *(void *)(a1 + 360) = a2[45];
          *(void *)(a1 + 368) = v28;
          swift_bridgeObjectRelease();
          uint64_t v29 = a2[48];
          *(void *)(a1 + 376) = a2[47];
          *(void *)(a1 + 384) = v29;
          swift_bridgeObjectRelease();
          uint64_t v30 = a2[50];
          *(void *)(a1 + 392) = a2[49];
          *(void *)(a1 + 400) = v30;
          swift_bridgeObjectRelease();
          uint64_t v31 = a2[52];
          *(void *)(a1 + 408) = a2[51];
          *(void *)(a1 + 416) = v31;
          swift_bridgeObjectRelease();
          uint64_t v32 = a2[54];
          *(void *)(a1 + 424) = a2[53];
          *(void *)(a1 + 432) = v32;
          swift_bridgeObjectRelease();
          uint64_t v33 = a2[56];
          *(void *)(a1 + 440) = a2[55];
          *(void *)(a1 + 448) = v33;
          swift_bridgeObjectRelease();
          uint64_t v34 = a2[58];
          *(void *)(a1 + 456) = a2[57];
          *(void *)(a1 + 464) = v34;
          swift_bridgeObjectRelease();
          uint64_t v35 = a2[60];
          *(void *)(a1 + 472) = a2[59];
          *(void *)(a1 + 480) = v35;
          swift_bridgeObjectRelease();
          uint64_t v36 = a2[62];
          *(void *)(a1 + 488) = a2[61];
          *(void *)(a1 + 496) = v36;
          swift_bridgeObjectRelease();
          uint64_t v37 = a2[64];
          *(void *)(a1 + 504) = a2[63];
          *(void *)(a1 + 512) = v37;
          swift_bridgeObjectRelease();
          *(void *)(a1 + 520) = a2[65];
          *(void *)(a1 + 528) = a2[66];
          swift_bridgeObjectRelease();
          *(void *)(a1 + 536) = a2[67];
          *(void *)(a1 + 544) = a2[68];
          swift_bridgeObjectRelease();
          *(void *)(a1 + 552) = a2[69];
          *(void *)(a1 + 560) = a2[70];
          swift_bridgeObjectRelease();
          *(void *)(a1 + 568) = a2[71];
          *(void *)(a1 + 576) = a2[72];
          swift_bridgeObjectRelease();
          *(void *)(a1 + 584) = a2[73];
          *(void *)(a1 + 592) = a2[74];
          swift_bridgeObjectRelease();
          *(void *)(a1 + 600) = a2[75];
          *(void *)(a1 + 608) = a2[76];
          swift_bridgeObjectRelease();
          *(void *)(a1 + 616) = a2[77];
          *(void *)(a1 + 624) = a2[78];
          swift_bridgeObjectRelease();
          *(void *)(a1 + 632) = a2[79];
          *(void *)(a1 + 640) = a2[80];
          swift_bridgeObjectRelease();
          *(void *)(a1 + 648) = a2[81];
          *(void *)(a1 + 656) = a2[82];
          swift_bridgeObjectRelease();
          *(void *)(a1 + 664) = a2[83];
          *(void *)(a1 + 672) = a2[84];
          swift_bridgeObjectRelease();
          *(void *)(a1 + 680) = a2[85];
          *(void *)(a1 + 688) = a2[86];
          swift_bridgeObjectRelease();
          *(void *)(a1 + 696) = a2[87];
          *(void *)(a1 + 704) = a2[88];
          swift_bridgeObjectRelease();
          *(void *)(a1 + 712) = a2[89];
          *(void *)(a1 + 720) = a2[90];
          swift_bridgeObjectRelease();
          *(void *)(a1 + 728) = a2[91];
          *(void *)(a1 + 736) = a2[92];
          swift_bridgeObjectRelease();
          *(void *)(a1 + 744) = a2[93];
          *(void *)(a1 + 752) = a2[94];
          swift_bridgeObjectRelease();
          *(void *)(a1 + 760) = a2[95];
          *(void *)(a1 + 768) = a2[96];
          swift_bridgeObjectRelease();
          *(void *)(a1 + 776) = a2[97];
          *(void *)(a1 + 784) = a2[98];
          swift_bridgeObjectRelease();
          *(void *)(a1 + 792) = a2[99];
          *(void *)(a1 + 800) = a2[100];
          swift_bridgeObjectRelease();
          *(void *)(a1 + 808) = a2[101];
          *(void *)(a1 + 816) = a2[102];
          swift_bridgeObjectRelease();
          *(void *)(a1 + 824) = a2[103];
          *(void *)(a1 + 832) = a2[104];
          swift_bridgeObjectRelease();
          *(void *)(a1 + 840) = a2[105];
          *(void *)(a1 + 848) = a2[106];
          swift_bridgeObjectRelease();
          *(void *)(a1 + 856) = a2[107];
          *(void *)(a1 + 864) = a2[108];
          swift_bridgeObjectRelease();
LABEL_10:
          *(void *)(a1 + 872) = a2[109];
          *(void *)(a1 + 880) = a2[110];
          swift_bridgeObjectRelease();
          return a1;
        }
        sub_1D79129AC(a1 + 8);
      }
      memcpy((void *)(a1 + 8), v4, 0x360uLL);
      goto LABEL_10;
    }
    sub_1D791528C(a1 + 8);
  }
  memcpy((void *)(a1 + 8), v4, 0x370uLL);
  return a1;
}

uint64_t getEnumTagSinglePayload for ImageQualityProperties(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 888)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ImageQualityProperties(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 872) = 0u;
    *(_OWORD *)(result + 856) = 0u;
    *(_OWORD *)(result + 840) = 0u;
    *(_OWORD *)(result + 824) = 0u;
    *(_OWORD *)(result + 808) = 0u;
    *(_OWORD *)(result + 792) = 0u;
    *(_OWORD *)(result + 776) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 888) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 888) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageQualityProperties()
{
  return &type metadata for ImageQualityProperties;
}

uint64_t method lookup function for MetricsFlags(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MetricsFlags);
}

uint64_t dispatch thunk of MetricsFlags.__allocating_init(rawValue:)()
{
  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t destroy for ImageQualityCollector(uint64_t a1)
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ImageQualityCollector(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  long long v5 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v5;
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  uint64_t v7 = *(void **)(a2 + 136);
  uint64_t v6 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = v7;
  *(void *)(a1 + 144) = v6;
  swift_bridgeObjectRetain();
  id v8 = v7;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ImageQualityCollector(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 68) = *(_DWORD *)(a2 + 68);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(_DWORD *)(a1 + 76) = *(_DWORD *)(a2 + 76);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  long long v4 = *(void **)(a2 + 136);
  long long v5 = *(void **)(a1 + 136);
  *(void *)(a1 + 136) = v4;
  id v6 = v4;

  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy152_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  __n128 result = *(__n128 *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 128);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

uint64_t assignWithTake for ImageQualityCollector(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  long long v6 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v6;
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);

  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ImageQualityCollector(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 152)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ImageQualityCollector(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 152) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 152) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageQualityCollector()
{
  return &type metadata for ImageQualityCollector;
}

unsigned char *storeEnumTagSinglePayload for ImageQualityCollector.ISOLanguageCode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D7915D44);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageQualityCollector.ISOLanguageCode()
{
  return &type metadata for ImageQualityCollector.ISOLanguageCode;
}

uint64_t getEnumTagSinglePayload for ImageQualityCollector.BucketKey(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xED) {
    goto LABEL_17;
  }
  if (a2 + 19 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 19) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 19;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 19;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 19;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x14;
  int v8 = v6 - 20;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ImageQualityCollector.BucketKey(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 19 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 19) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xED) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEC)
  {
    unsigned int v6 = ((a2 - 237) >> 8) + 1;
    *__n128 result = a2 + 19;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D7915ED8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 19;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageQualityCollector.BucketKey()
{
  return &type metadata for ImageQualityCollector.BucketKey;
}

unsigned char *storeEnumTagSinglePayload for PDF417Data.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D7915FDCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PDF417Data.CodingKeys()
{
  return &type metadata for PDF417Data.CodingKeys;
}

unint64_t sub_1D7916018()
{
  unint64_t result = qword_1EA843C28;
  if (!qword_1EA843C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA843C28);
  }
  return result;
}

unint64_t sub_1D7916070()
{
  unint64_t result = qword_1EA843C30;
  if (!qword_1EA843C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA843C30);
  }
  return result;
}

unint64_t sub_1D79160C8()
{
  unint64_t result = qword_1EA843C38;
  if (!qword_1EA843C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA843C38);
  }
  return result;
}

unint64_t sub_1D7916120()
{
  unint64_t result = qword_1EA843C40;
  if (!qword_1EA843C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA843C40);
  }
  return result;
}

uint64_t sub_1D7916174()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D79161AC(void *a1)
{
  int v2 = *(void **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1]) {
    return 1;
  }
  else {
    return sub_1D7A9D358() & 1;
  }
}

unint64_t sub_1D7916204()
{
  unint64_t result = qword_1EA843C50;
  if (!qword_1EA843C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA843C50);
  }
  return result;
}

unint64_t sub_1D7916258()
{
  unint64_t result = qword_1EA843C58;
  if (!qword_1EA843C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA843C58);
  }
  return result;
}

void sub_1D79162AC(void *a1)
{
}

uint64_t ISO18013MobileSecurityObject.DeviceKeyInfo.init(deviceKey:keyAuthorizations:keyInfo:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  uint64_t v9 = sub_1D7A9B458();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(a4, a1, v9);
  uint64_t result = type metadata accessor for ISO18013MobileSecurityObject.DeviceKeyInfo(0);
  uint64_t v11 = (void *)(a4 + *(int *)(result + 20));
  *uint64_t v11 = v7;
  v11[1] = v8;
  *(void *)(a4 + *(int *)(result + 24)) = a3;
  return result;
}

uint64_t type metadata accessor for ISO18013MobileSecurityObject.DeviceKeyInfo(uint64_t a1)
{
  return sub_1D786E938(a1, (uint64_t *)&unk_1EA843E18);
}

uint64_t ISO18013MobileSecurityObject.ValidityInfo.init(signed:validFrom:validUntil:expectedUpdate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = sub_1D7A9B148();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(a5, a1, v10);
  uint64_t v12 = (int *)type metadata accessor for ISO18013MobileSecurityObject.ValidityInfo(0);
  v11(a5 + v12[5], a2, v10);
  v11(a5 + v12[6], a3, v10);
  uint64_t v13 = a5 + v12[7];
  return sub_1D7916474(a4, v13);
}

uint64_t type metadata accessor for ISO18013MobileSecurityObject.ValidityInfo(uint64_t a1)
{
  return sub_1D786E938(a1, (uint64_t *)&unk_1EA843E28);
}

uint64_t sub_1D7916474(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9118);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t ISO18013MobileSecurityObject.init(version:digestAlgorithm:valueDigests:deviceKeyInfo:docType:validityInfo:timePolicy:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, char a11)
{
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  uint64_t v15 = (int *)type metadata accessor for ISO18013MobileSecurityObject(0);
  sub_1D79165BC(a6, (uint64_t)a9 + v15[7], type metadata accessor for ISO18013MobileSecurityObject.DeviceKeyInfo);
  uint64_t v16 = (void *)((char *)a9 + v15[8]);
  *uint64_t v16 = a7;
  v16[1] = a8;
  uint64_t result = sub_1D79165BC(a10, (uint64_t)a9 + v15[9], type metadata accessor for ISO18013MobileSecurityObject.ValidityInfo);
  *((unsigned char *)a9 + v15[10]) = a11;
  return result;
}

uint64_t type metadata accessor for ISO18013MobileSecurityObject(uint64_t a1)
{
  return sub_1D786E938(a1, (uint64_t *)&unk_1EA843E08);
}

uint64_t sub_1D79165BC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t static ISO18013MobileSecurityObject.supportedVersion.getter()
{
  return 3157553;
}

uint64_t ISO18013MobileSecurityObject.version.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ISO18013MobileSecurityObject.digestAlgorithm.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ISO18013MobileSecurityObject.valueDigests.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ISO18013MobileSecurityObject.deviceKeyInfo.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ISO18013MobileSecurityObject(0);
  return sub_1D7916774(v1 + *(int *)(v3 + 28), a1, type metadata accessor for ISO18013MobileSecurityObject.DeviceKeyInfo);
}

uint64_t ISO18013MobileSecurityObject.docType.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ISO18013MobileSecurityObject(0) + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ISO18013MobileSecurityObject.validityInfo.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ISO18013MobileSecurityObject(0);
  return sub_1D7916774(v1 + *(int *)(v3 + 36), a1, type metadata accessor for ISO18013MobileSecurityObject.ValidityInfo);
}

uint64_t sub_1D7916774(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t ISO18013MobileSecurityObject.timePolicy.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ISO18013MobileSecurityObject(0) + 40));
}

uint64_t sub_1D7916800(unsigned __int8 *a1, char *a2)
{
  return sub_1D799594C(*a1, *a2);
}

uint64_t sub_1D791680C()
{
  return sub_1D7A1E480();
}

uint64_t sub_1D7916814()
{
  sub_1D7A9C0B8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D7916934()
{
  return sub_1D7A1F8AC();
}

uint64_t sub_1D791693C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D791E8D0();
  *a1 = result;
  return result;
}

void sub_1D791696C(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x6E6F6973726576;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEF6D687469726F67;
      uint64_t v3 = 0x6C41747365676964;
      goto LABEL_3;
    case 2:
      strcpy((char *)a1, "valueDigests");
      *(unsigned char *)(a1 + 13) = 0;
      *(_WORD *)(a1 + 14) = -5120;
      break;
    case 3:
      strcpy((char *)a1, "deviceKeyInfo");
      *(_WORD *)(a1 + 14) = -4864;
      break;
    case 4:
      *(void *)a1 = 0x65707954636F64;
      *(void *)(a1 + 8) = 0xE700000000000000;
      break;
    case 5:
      strcpy((char *)a1, "validityInfo");
      *(unsigned char *)(a1 + 13) = 0;
      *(_WORD *)(a1 + 14) = -5120;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_1D7916A6C()
{
  uint64_t result = 0x6E6F6973726576;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6C41747365676964;
      break;
    case 2:
      uint64_t result = 0x67694465756C6176;
      break;
    case 3:
      uint64_t result = 0x654B656369766564;
      break;
    case 4:
      uint64_t result = 0x65707954636F64;
      break;
    case 5:
      uint64_t result = 0x79746964696C6176;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D7916B58@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D791E8D0();
  *a1 = result;
  return result;
}

void sub_1D7916B80(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_1D7916B8C(uint64_t a1)
{
  unint64_t v2 = sub_1D7917928();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D7916BC8(uint64_t a1)
{
  unint64_t v2 = sub_1D7917928();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D7916C04(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D799567C(*a1, *a2);
}

uint64_t sub_1D7916C10()
{
  return sub_1D7A1F9E0();
}

uint64_t sub_1D7916C20()
{
  return sub_1D7A1F9E0();
}

uint64_t sub_1D7916C28@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D791E91C();
  *a1 = result;
  return result;
}

uint64_t sub_1D7916C58@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D791E91C();
  *a1 = result;
  return result;
}

uint64_t sub_1D7916C80(uint64_t a1)
{
  unint64_t v2 = sub_1D79177F0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D7916CBC(uint64_t a1)
{
  unint64_t v2 = sub_1D79177F0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ISO18013MobileSecurityObject.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v95 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA843CA0);
  uint64_t v105 = *(void *)(v4 - 8);
  uint64_t v106 = v4;
  MEMORY[0x1F4188790](v4, v5, v6, v7, v8, v9, v10, v11);
  uint64_t v13 = (char *)&v94 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = type metadata accessor for ISO18013MobileSecurityObject.ValidityInfo(0);
  uint64_t v21 = MEMORY[0x1F4188790](v98, v14, v15, v16, v17, v18, v19, v20);
  os_log_type_t v97 = (char *)&v94 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21, v23, v24, v25, v26, v27, v28, v29);
  uint64_t v96 = (char *)&v94 - v30;
  uint64_t v101 = type metadata accessor for ISO18013MobileSecurityObject.DeviceKeyInfo(0);
  uint64_t v38 = MEMORY[0x1F4188790](v101, v31, v32, v33, v34, v35, v36, v37);
  uint64_t v100 = (char *)&v94 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v38, v40, v41, v42, v43, v44, v45, v46);
  unint64_t v99 = (char *)&v94 - v47;
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA843CA8);
  uint64_t v104 = *(void *)(v48 - 8);
  MEMORY[0x1F4188790](v48, v49, v50, v51, v52, v53, v54, v55);
  id v57 = (char *)&v94 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = type metadata accessor for ISO18013MobileSecurityObject(0);
  MEMORY[0x1F4188790](v102, v58, v59, v60, v61, v62, v63, v64);
  char v103 = (uint64_t *)((char *)&v94 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v66 = a1[3];
  uint64_t v67 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v66);
  Decoder.codingKeyFormat.getter(v66, v67, &v109);
  char v68 = v109;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if ((v68 & 1) == 0)
  {
    sub_1D7917928();
    sub_1D7A9D6A8();
    if (!v2)
    {
      LOBYTE(v107) = 0;
      uint64_t v72 = sub_1D7A9D0F8();
      uint64_t v74 = v103;
      *char v103 = v72;
      v74[1] = v76;
      LOBYTE(v107) = 1;
      v74[2] = sub_1D7A9D0F8();
      v74[3] = v79;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA843CB8);
      char v108 = 2;
      sub_1D7917FC4(&qword_1EA843CC0, (void (*)(void))sub_1D79178A4);
      sub_1D7A9D148();
      unint64_t v80 = (int *)v102;
      v74[4] = v107;
      LOBYTE(v107) = 3;
      sub_1D79178E0(&qword_1EA843CD8, (void (*)(uint64_t))type metadata accessor for ISO18013MobileSecurityObject.DeviceKeyInfo);
      uint64_t v82 = (uint64_t)v99;
      sub_1D7A9D148();
      sub_1D79165BC(v82, (uint64_t)v74 + v80[7], type metadata accessor for ISO18013MobileSecurityObject.DeviceKeyInfo);
      LOBYTE(v107) = 4;
      uint64_t v84 = sub_1D7A9D0F8();
      id v88 = (uint64_t *)((char *)v74 + v80[8]);
      *id v88 = v84;
      v88[1] = v89;
      LOBYTE(v107) = 5;
      sub_1D79178E0(&qword_1EA843CE0, (void (*)(uint64_t))type metadata accessor for ISO18013MobileSecurityObject.ValidityInfo);
      uint64_t v90 = (uint64_t)v96;
      sub_1D7A9D148();
      (*(void (**)(char *, uint64_t))(v104 + 8))(v57, v48);
      sub_1D79165BC(v90, (uint64_t)v74 + v80[9], type metadata accessor for ISO18013MobileSecurityObject.ValidityInfo);
      uint64_t v92 = v80[10];
      char v93 = 1;
      goto LABEL_7;
    }
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  sub_1D79177F0();
  float v69 = v13;
  sub_1D7A9D6A8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  LOBYTE(v107) = 0;
  uint64_t v70 = v106;
  uint64_t v71 = sub_1D7A9D0F8();
  uint64_t v74 = v103;
  *char v103 = v71;
  v74[1] = v75;
  LOBYTE(v107) = 1;
  v74[2] = sub_1D7A9D0F8();
  v74[3] = v77;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA843CB8);
  char v108 = 2;
  sub_1D7917FC4(&qword_1EA843CC0, (void (*)(void))sub_1D79178A4);
  sub_1D7A9D148();
  uint64_t v78 = (int *)v102;
  v74[4] = v107;
  LOBYTE(v107) = 3;
  sub_1D79178E0(&qword_1EA843CD8, (void (*)(uint64_t))type metadata accessor for ISO18013MobileSecurityObject.DeviceKeyInfo);
  uint64_t v81 = (uint64_t)v100;
  sub_1D7A9D148();
  sub_1D79165BC(v81, (uint64_t)v74 + v78[7], type metadata accessor for ISO18013MobileSecurityObject.DeviceKeyInfo);
  LOBYTE(v107) = 4;
  uint64_t v83 = sub_1D7A9D0F8();
  uint64_t v85 = (uint64_t *)((char *)v74 + v78[8]);
  *uint64_t v85 = v83;
  v85[1] = v86;
  LOBYTE(v107) = 5;
  sub_1D79178E0(&qword_1EA843CE0, (void (*)(uint64_t))type metadata accessor for ISO18013MobileSecurityObject.ValidityInfo);
  uint64_t v87 = (uint64_t)v97;
  sub_1D7A9D148();
  sub_1D79165BC(v87, (uint64_t)v74 + v78[9], type metadata accessor for ISO18013MobileSecurityObject.ValidityInfo);
  LOBYTE(v107) = 6;
  char v91 = sub_1D7A9D108();
  (*(void (**)(char *, uint64_t))(v105 + 8))(v69, v70);
  uint64_t v92 = v78[10];
  char v93 = v91 & 1;
LABEL_7:
  *((unsigned char *)v74 + v92) = v93;
  sub_1D7916774((uint64_t)v74, v95, type metadata accessor for ISO18013MobileSecurityObject);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1D7917844((uint64_t)v74, type metadata accessor for ISO18013MobileSecurityObject);
}

unint64_t sub_1D79177F0()
{
  unint64_t result = qword_1EA843CB0;
  if (!qword_1EA843CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA843CB0);
  }
  return result;
}

uint64_t sub_1D7917844(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1D79178A4()
{
  return sub_1D791807C(&qword_1EA843CC8, (void (*)(void))sub_1D786073C);
}

uint64_t sub_1D79178E0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D7917928()
{
  unint64_t result = qword_1EA843CE8;
  if (!qword_1EA843CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA843CE8);
  }
  return result;
}

uint64_t ISO18013MobileSecurityObject.encode(to:)(void *a1)
{
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA843CF0);
  uint64_t v2 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](v35, v3, v4, v5, v6, v7, v8, v9);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA843CF8);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12, v14, v15, v16, v17, v18, v19, v20);
  uint64_t v36 = (char *)&v34 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = a1[3];
  uint64_t v23 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v22);
  Encoder.codingKeyFormat.getter(v22, v23, &v41);
  char v24 = v41;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (v24)
  {
    uint64_t v25 = v2;
    sub_1D79177F0();
    sub_1D7A9D6E8();
    uint64_t v26 = v37;
    uint64_t v27 = v38;
    LOBYTE(v39) = 0;
    uint64_t v28 = v35;
    sub_1D7A9D1D8();
    if (!v26)
    {
      LOBYTE(v39) = 1;
      sub_1D7A9D1D8();
      uint64_t v39 = *(void *)(v27 + 32);
      char v40 = 2;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA843CB8);
      sub_1D7917FC4(&qword_1EA843D00, (void (*)(void))sub_1D7918040);
      sub_1D7A9D228();
      type metadata accessor for ISO18013MobileSecurityObject(0);
      LOBYTE(v39) = 3;
      type metadata accessor for ISO18013MobileSecurityObject.DeviceKeyInfo(0);
      sub_1D79178E0(&qword_1EA843D10, (void (*)(uint64_t))type metadata accessor for ISO18013MobileSecurityObject.DeviceKeyInfo);
      sub_1D7A9D228();
      LOBYTE(v39) = 4;
      sub_1D7A9D1D8();
      LOBYTE(v39) = 5;
      type metadata accessor for ISO18013MobileSecurityObject.ValidityInfo(0);
      sub_1D79178E0(&qword_1EA843D18, (void (*)(uint64_t))type metadata accessor for ISO18013MobileSecurityObject.ValidityInfo);
      sub_1D7A9D228();
      LOBYTE(v39) = 6;
      sub_1D7A9D1E8();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v11, v28);
  }
  else
  {
    sub_1D7917928();
    uint64_t v30 = v36;
    sub_1D7A9D6E8();
    uint64_t v31 = v37;
    uint64_t v32 = v38;
    LOBYTE(v39) = 0;
    sub_1D7A9D1D8();
    if (v31)
    {
      return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v30, v12);
    }
    else
    {
      LOBYTE(v39) = 1;
      sub_1D7A9D1D8();
      uint64_t v39 = *(void *)(v32 + 32);
      char v40 = 2;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA843CB8);
      sub_1D7917FC4(&qword_1EA843D00, (void (*)(void))sub_1D7918040);
      sub_1D7A9D228();
      type metadata accessor for ISO18013MobileSecurityObject(0);
      LOBYTE(v39) = 3;
      type metadata accessor for ISO18013MobileSecurityObject.DeviceKeyInfo(0);
      sub_1D79178E0(&qword_1EA843D10, (void (*)(uint64_t))type metadata accessor for ISO18013MobileSecurityObject.DeviceKeyInfo);
      sub_1D7A9D228();
      LOBYTE(v39) = 4;
      sub_1D7A9D1D8();
      LOBYTE(v39) = 5;
      type metadata accessor for ISO18013MobileSecurityObject.ValidityInfo(0);
      sub_1D79178E0(&qword_1EA843D18, (void (*)(uint64_t))type metadata accessor for ISO18013MobileSecurityObject.ValidityInfo);
      uint64_t v33 = v36;
      sub_1D7A9D228();
      return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v33, v12);
    }
  }
}

uint64_t sub_1D7917FC4(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA843CB8);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D7918040()
{
  return sub_1D791807C(&qword_1EA843D08, (void (*)(void))sub_1D7871AD8);
}

uint64_t sub_1D791807C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA843CD0);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D79180F8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ISO18013MobileSecurityObject.init(from:)(a1, a2);
}

uint64_t sub_1D7918110(void *a1)
{
  return ISO18013MobileSecurityObject.encode(to:)(a1);
}

uint64_t ISO18013MobileSecurityObject.DeviceKeyInfo.deviceKey.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D7919D7C(MEMORY[0x1E4F50DD8], a1);
}

uint64_t ISO18013MobileSecurityObject.DeviceKeyInfo.keyAuthorizations.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for ISO18013MobileSecurityObject.DeviceKeyInfo(0) + 20));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  *a1 = *v3;
  a1[1] = v5;
  return sub_1D786E8D0(v4);
}

uint64_t ISO18013MobileSecurityObject.DeviceKeyInfo.keyInfo.getter()
{
  type metadata accessor for ISO18013MobileSecurityObject.DeviceKeyInfo(0);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D79181BC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D7995680(*a1, *a2);
}

uint64_t sub_1D79181C8()
{
  return sub_1D7A9D628();
}

uint64_t sub_1D7918274()
{
  sub_1D7A9C0B8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D791830C()
{
  return sub_1D7A9D628();
}

uint64_t sub_1D79183B4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D791E9B4();
  *a1 = result;
  return result;
}

void sub_1D79183EC(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE900000000000079;
  unint64_t v4 = 0x80000001D7ABBE50;
  unint64_t v5 = 0xD000000000000011;
  if (v2 != 1)
  {
    unint64_t v5 = 0x6F666E4979656BLL;
    unint64_t v4 = 0xE700000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x654B656369766564;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1D7918454()
{
  unint64_t v1 = 0xD000000000000011;
  if (*v0 != 1) {
    unint64_t v1 = 0x6F666E4979656BLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x654B656369766564;
  }
}

uint64_t sub_1D79184B8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D791E9B4();
  *a1 = result;
  return result;
}

uint64_t sub_1D79184E8(uint64_t a1)
{
  unint64_t v2 = sub_1D7918D60();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D7918524(uint64_t a1)
{
  unint64_t v2 = sub_1D7918D60();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D7918560()
{
  return sub_1D7A9D628();
}

uint64_t sub_1D79185A8()
{
  return sub_1D7A9C0B8();
}

uint64_t sub_1D79185B4()
{
  return sub_1D7A9D628();
}

uint64_t sub_1D79185F8@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1D7A9D058();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1D791864C(void *a1@<X8>)
{
  *a1 = 49;
  a1[1] = 0xE100000000000000;
}

uint64_t sub_1D791865C()
{
  return 49;
}

uint64_t sub_1D7918668@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_1D7A9D058();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1D79186C0(uint64_t a1)
{
  unint64_t v2 = sub_1D7918D0C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D79186FC(uint64_t a1)
{
  unint64_t v2 = sub_1D7918D0C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ISO18013MobileSecurityObject.DeviceKeyInfo.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v67 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA843D20);
  uint64_t v73 = *(void *)(v3 - 8);
  uint64_t v74 = v3;
  MEMORY[0x1F4188790](v3, v4, v5, v6, v7, v8, v9, v10);
  uint64_t v75 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1D7A9B458();
  uint64_t v70 = *(void *)(v12 - 8);
  uint64_t v71 = v12;
  uint64_t v20 = MEMORY[0x1F4188790](v12, v13, v14, v15, v16, v17, v18, v19);
  uint64_t v22 = (char *)&v67 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20, v23, v24, v25, v26, v27, v28, v29);
  uint64_t v31 = (char *)&v67 - v30;
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA843D28);
  uint64_t v72 = *(void *)(v32 - 8);
  MEMORY[0x1F4188790](v32, v33, v34, v35, v36, v37, v38, v39);
  char v41 = (char *)&v67 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = type metadata accessor for ISO18013MobileSecurityObject.DeviceKeyInfo(0);
  MEMORY[0x1F4188790](v69, v42, v43, v44, v45, v46, v47, v48);
  char v68 = (char *)&v67 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = a1[3];
  uint64_t v51 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v50);
  Decoder.codingKeyFormat.getter(v50, v51, &v79);
  char v52 = v79;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (v52)
  {
    uint64_t v53 = v22;
    uint64_t v55 = v73;
    uint64_t v54 = v74;
    sub_1D7918D0C();
    id v57 = v75;
    uint64_t v56 = v76;
    sub_1D7A9D6A8();
    if (!v56)
    {
      sub_1D79178E0(&qword_1EA843D38, MEMORY[0x1E4F50DD8]);
      uint64_t v58 = v71;
      sub_1D7A9D148();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v57, v54);
      uint64_t v59 = (uint64_t)v68;
      (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v68, v53, v58);
      uint64_t v60 = v69;
      *(_OWORD *)(v59 + *(int *)(v69 + 20)) = xmmword_1D7AA9E60;
      *(void *)(v59 + *(int *)(v60 + 24)) = 0;
LABEL_4:
      sub_1D7916774(v59, v67, type metadata accessor for ISO18013MobileSecurityObject.DeviceKeyInfo);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      return sub_1D7917844(v59, type metadata accessor for ISO18013MobileSecurityObject.DeviceKeyInfo);
    }
  }
  else
  {
    uint64_t v62 = v31;
    uint64_t v63 = v72;
    uint64_t v64 = v32;
    sub_1D7918D60();
    uint64_t v65 = v76;
    sub_1D7A9D6A8();
    if (!v65)
    {
      LOBYTE(v77) = 0;
      sub_1D79178E0(&qword_1EA843D38, MEMORY[0x1E4F50DD8]);
      uint64_t v66 = v71;
      sub_1D7A9D148();
      uint64_t v59 = (uint64_t)v68;
      (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v68, v62, v66);
      char v78 = 1;
      sub_1D7918DB4();
      sub_1D7A9D0E8();
      *(_OWORD *)(v59 + *(int *)(v69 + 20)) = v77;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA843D50);
      char v78 = 2;
      sub_1D7918E4C();
      sub_1D7A9D0E8();
      (*(void (**)(char *, uint64_t))(v63 + 8))(v41, v64);
      *(void *)(v59 + *(int *)(v69 + 24)) = v77;
      goto LABEL_4;
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1D7918D0C()
{
  unint64_t result = qword_1EA843D30;
  if (!qword_1EA843D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA843D30);
  }
  return result;
}

unint64_t sub_1D7918D60()
{
  unint64_t result = qword_1EA843D40;
  if (!qword_1EA843D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA843D40);
  }
  return result;
}

unint64_t sub_1D7918DB4()
{
  unint64_t result = qword_1EA843D48;
  if (!qword_1EA843D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA843D48);
  }
  return result;
}

uint64_t sub_1D7918E08(uint64_t result)
{
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1D7918E4C()
{
  unint64_t result = qword_1EA843D58;
  if (!qword_1EA843D58)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA843D50);
    sub_1D79178E0(&qword_1EA843D60, (void (*)(uint64_t))type metadata accessor for AnyCodable);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA843D58);
  }
  return result;
}

uint64_t ISO18013MobileSecurityObject.DeviceKeyInfo.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA843D68);
  uint64_t v31 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v3, v4, v5, v6, v7, v8, v9);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA843D70);
  uint64_t v12 = *(void *)(v32 - 8);
  MEMORY[0x1F4188790](v32, v13, v14, v15, v16, v17, v18, v19);
  uint64_t v21 = (char *)&v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = a1[3];
  uint64_t v23 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v22);
  Encoder.codingKeyFormat.getter(v22, v23, &v37);
  char v24 = v37;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (v24)
  {
    sub_1D7918D0C();
    sub_1D7A9D6E8();
    sub_1D7A9B458();
    sub_1D79178E0(&qword_1EA843D78, MEMORY[0x1E4F50DD8]);
    sub_1D7A9D228();
    return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v11, v2);
  }
  else
  {
    uint64_t v26 = v12;
    sub_1D7918D60();
    sub_1D7A9D6E8();
    LOBYTE(v35) = 0;
    sub_1D7A9B458();
    sub_1D79178E0(&qword_1EA843D78, MEMORY[0x1E4F50DD8]);
    uint64_t v27 = v33;
    uint64_t v28 = v34;
    uint64_t v29 = v32;
    sub_1D7A9D228();
    if (!v27)
    {
      uint64_t v30 = type metadata accessor for ISO18013MobileSecurityObject.DeviceKeyInfo(0);
      long long v35 = *(_OWORD *)(v28 + *(int *)(v30 + 20));
      char v36 = 1;
      sub_1D7919270();
      sub_1D7A9D1C8();
      *(void *)&long long v35 = *(void *)(v28 + *(int *)(v30 + 24));
      char v36 = 2;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA843D50);
      sub_1D79192C4();
      sub_1D7A9D1C8();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v21, v29);
  }
}

unint64_t sub_1D7919270()
{
  unint64_t result = qword_1EA843D80;
  if (!qword_1EA843D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA843D80);
  }
  return result;
}

unint64_t sub_1D79192C4()
{
  unint64_t result = qword_1EA843D88;
  if (!qword_1EA843D88)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA843D50);
    sub_1D79178E0(&qword_1EA843D90, (void (*)(uint64_t))type metadata accessor for AnyCodable);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA843D88);
  }
  return result;
}

uint64_t sub_1D7919370@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ISO18013MobileSecurityObject.DeviceKeyInfo.init(from:)(a1, a2);
}

uint64_t sub_1D7919388(void *a1)
{
  return ISO18013MobileSecurityObject.DeviceKeyInfo.encode(to:)(a1);
}

uint64_t ISO18013MobileSecurityObject.KeyAuthorizations.namespaces.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ISO18013MobileSecurityObject.KeyAuthorizations.dataElements.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D79193B0(char *a1, char *a2)
{
  return sub_1D79955C8(*a1, *a2);
}

uint64_t sub_1D79193BC()
{
  return sub_1D7A9D628();
}

uint64_t sub_1D791944C()
{
  sub_1D7A9C0B8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D79194C8()
{
  return sub_1D7A9D628();
}

uint64_t sub_1D7919554@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1D7A9D058();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1D79195B4(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x63617053656D616ELL;
  if (*v1) {
    uint64_t v2 = 0x6D656C4561746164;
  }
  unint64_t v3 = 0xEA00000000007365;
  if (*v1) {
    unint64_t v3 = 0xEC00000073746E65;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1D7919600()
{
  if (*v0) {
    return 0x6D656C4561746164;
  }
  else {
    return 0x63617053656D616ELL;
  }
}

uint64_t sub_1D7919648@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1D7A9D058();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1D79196AC(uint64_t a1)
{
  unint64_t v2 = sub_1D79198F8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D79196E8(uint64_t a1)
{
  unint64_t v2 = sub_1D79198F8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ISO18013MobileSecurityObject.KeyAuthorizations.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA843D98);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6, v7, v8, v9, v10, v11, v12);
  uint64_t v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *v1;
  uint64_t v17 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D79198F8();
  sub_1D7A9D6E8();
  uint64_t v19 = v15;
  char v18 = 0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDF7900);
  sub_1D7919C34(&qword_1EBDF8230);
  sub_1D7A9D1C8();
  if (!v2)
  {
    uint64_t v19 = v17;
    char v18 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA843DA8);
    sub_1D791994C();
    sub_1D7A9D1C8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v14, v4);
}

unint64_t sub_1D79198F8()
{
  unint64_t result = qword_1EA843DA0;
  if (!qword_1EA843DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA843DA0);
  }
  return result;
}

unint64_t sub_1D791994C()
{
  unint64_t result = qword_1EA843DB0;
  if (!qword_1EA843DB0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA843DA8);
    sub_1D7919C34(&qword_1EBDF8230);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA843DB0);
  }
  return result;
}

uint64_t ISO18013MobileSecurityObject.KeyAuthorizations.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA843DB8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7, v8, v9, v10, v11, v12, v13);
  uint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D79198F8();
  sub_1D7A9D6A8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDF7900);
  char v20 = 0;
  sub_1D7919C34(&qword_1EBDF7A30);
  sub_1D7A9D0E8();
  uint64_t v16 = v21;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA843DA8);
  char v20 = 1;
  sub_1D7919C98();
  swift_bridgeObjectRetain();
  sub_1D7A9D0E8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
  uint64_t v17 = v21;
  *a2 = v16;
  a2[1] = v17;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D7919C34(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EBDF7900);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D7919C98()
{
  unint64_t result = qword_1EA843DC0;
  if (!qword_1EA843DC0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA843DA8);
    sub_1D7919C34(&qword_1EBDF7A30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA843DC0);
  }
  return result;
}

uint64_t sub_1D7919D34@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return ISO18013MobileSecurityObject.KeyAuthorizations.init(from:)(a1, a2);
}

uint64_t sub_1D7919D4C(void *a1)
{
  return ISO18013MobileSecurityObject.KeyAuthorizations.encode(to:)(a1);
}

uint64_t ISO18013MobileSecurityObject.ValidityInfo.signed.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D7919D7C(MEMORY[0x1E4F27928], a1);
}

uint64_t sub_1D7919D7C@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = a1(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a2, v2, v4);
}

uint64_t ISO18013MobileSecurityObject.ValidityInfo.validFrom.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ISO18013MobileSecurityObject.ValidityInfo(0) + 20);
  uint64_t v4 = sub_1D7A9B148();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t ISO18013MobileSecurityObject.ValidityInfo.validUntil.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ISO18013MobileSecurityObject.ValidityInfo(0) + 24);
  uint64_t v4 = sub_1D7A9B148();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t ISO18013MobileSecurityObject.ValidityInfo.expectedUpdate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ISO18013MobileSecurityObject.ValidityInfo(0) + 28);
  return sub_1D7919F20(v3, a1);
}

uint64_t sub_1D7919F20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9118);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D7919F88(unsigned __int8 *a1, char *a2)
{
  return sub_1D799579C(*a1, *a2);
}

uint64_t sub_1D7919F94()
{
  return sub_1D7A9D628();
}

uint64_t sub_1D791A080()
{
  sub_1D7A9C0B8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D791A154()
{
  return sub_1D7A9D628();
}

uint64_t sub_1D791A23C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D791E968();
  *a1 = result;
  return result;
}

void sub_1D791A26C(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE600000000000000;
  uint64_t v3 = 0x64656E676973;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE90000000000006DLL;
      uint64_t v3 = 0x6F724664696C6176;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x746E5564696C6176;
      *(void *)(a1 + 8) = 0xEA00000000006C69;
      break;
    case 3:
      strcpy((char *)a1, "expectedUpdate");
      *(unsigned char *)(a1 + 15) = -18;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_1D791A318()
{
  uint64_t result = 0x64656E676973;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6F724664696C6176;
      break;
    case 2:
      uint64_t result = 0x746E5564696C6176;
      break;
    case 3:
      uint64_t result = 0x6465746365707865;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D791A3B8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D791E968();
  *a1 = result;
  return result;
}

uint64_t sub_1D791A3E0(uint64_t a1)
{
  unint64_t v2 = sub_1D791AF4C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D791A41C(uint64_t a1)
{
  unint64_t v2 = sub_1D791AF4C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D791A458()
{
  return sub_1D7A9D628();
}

uint64_t sub_1D791A4AC()
{
  sub_1D7A9C0B8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D791A4E4()
{
  return sub_1D7A9D628();
}

uint64_t sub_1D791A534@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D791E9B4();
  *a1 = result;
  return result;
}

void sub_1D791A56C(void *a1@<X8>)
{
  *a1 = *v1 + 49;
  a1[1] = 0xE100000000000000;
}

uint64_t sub_1D791A580()
{
  return *v0 + 49;
}

uint64_t sub_1D791A590@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D791E9B4();
  *a1 = result;
  return result;
}

uint64_t sub_1D791A5C0(uint64_t a1)
{
  unint64_t v2 = sub_1D791AEF8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D791A5FC(uint64_t a1)
{
  unint64_t v2 = sub_1D791AEF8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ISO18013MobileSecurityObject.ValidityInfo.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v118 = a2;
  uint64_t v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA843DC8);
  uint64_t v120 = *(void *)(v129 - 8);
  MEMORY[0x1F4188790](v129, v3, v4, v5, v6, v7, v8, v9);
  char v128 = (char *)&v117 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9118);
  MEMORY[0x1F4188790](v11 - 8, v12, v13, v14, v15, v16, v17, v18);
  uint64_t v117 = (char *)&v117 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = sub_1D7A9B148();
  uint64_t v122 = *(void *)(v124 - 8);
  uint64_t v27 = MEMORY[0x1F4188790](v124, v20, v21, v22, v23, v24, v25, v26);
  char v127 = (char *)&v117 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = MEMORY[0x1F4188790](v27, v29, v30, v31, v32, v33, v34, v35);
  uint64_t v126 = (char *)&v117 - v37;
  uint64_t v45 = MEMORY[0x1F4188790](v36, v38, v39, v40, v41, v42, v43, v44);
  uint64_t v125 = (char *)&v117 - v46;
  uint64_t v54 = MEMORY[0x1F4188790](v45, v47, v48, v49, v50, v51, v52, v53);
  uint64_t v56 = (char *)&v117 - v55;
  uint64_t v64 = MEMORY[0x1F4188790](v54, v57, v58, v59, v60, v61, v62, v63);
  uint64_t v66 = (char *)&v117 - v65;
  MEMORY[0x1F4188790](v64, v67, v68, v69, v70, v71, v72, v73);
  uint64_t v75 = (char *)&v117 - v74;
  uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA843DD0);
  uint64_t v119 = *(void *)(v76 - 8);
  MEMORY[0x1F4188790](v76, v77, v78, v79, v80, v81, v82, v83);
  uint64_t v130 = (char *)&v117 - ((v84 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = type metadata accessor for ISO18013MobileSecurityObject.ValidityInfo(0);
  MEMORY[0x1F4188790](v121, v85, v86, v87, v88, v89, v90, v91);
  char v123 = (char *)&v117 - ((v92 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = a1[3];
  uint64_t v94 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v93);
  Decoder.codingKeyFormat.getter(v93, v94, &v140);
  char v95 = v140;
  uint64_t v96 = a1[3];
  char v131 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v96);
  if ((v95 & 1) == 0)
  {
    char v103 = v75;
    uint64_t v104 = v66;
    sub_1D791AF4C();
    uint64_t v105 = v132;
    sub_1D7A9D6A8();
    if (!v105)
    {
      char v136 = 0;
      sub_1D79178E0(&qword_1EA843DE0, MEMORY[0x1E4F27928]);
      uint64_t v106 = v103;
      uint64_t v107 = v124;
      sub_1D7A9D148();
      uint64_t v111 = v106;
      uint64_t v112 = *(void (**)(char *, char *, uint64_t))(v122 + 32);
      v112(v123, v111, v107);
      char v135 = 1;
      char v132 = (void (*)(void, void, void))v76;
      sub_1D7A9D148();
      v112(&v123[*(int *)(v121 + 20)], v104, v107);
      char v134 = 2;
      sub_1D7A9D148();
      v112(&v123[*(int *)(v121 + 24)], v56, v107);
      char v133 = 3;
      uint64_t v115 = (uint64_t)v117;
      sub_1D7A9D0E8();
      uint64_t v116 = v121;
      (*(void (**)(char *, void (*)(void, void, void)))(v119 + 8))(v130, v132);
      uint64_t v113 = (uint64_t)v123;
      sub_1D7916474(v115, (uint64_t)&v123[*(int *)(v116 + 28)]);
      goto LABEL_7;
    }
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v131);
  }
  uint64_t v98 = v125;
  os_log_type_t v97 = v126;
  unint64_t v99 = v127;
  sub_1D791AEF8();
  uint64_t v100 = v132;
  sub_1D7A9D6A8();
  if (v100) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v131);
  }
  char v139 = 0;
  sub_1D79178E0(&qword_1EA843DE0, MEMORY[0x1E4F27928]);
  uint64_t v101 = v98;
  uint64_t v102 = v124;
  sub_1D7A9D148();
  char v109 = v101;
  uint64_t v110 = v122;
  char v132 = *(void (**)(void, void, void))(v122 + 32);
  v132(v123, v109, v102);
  char v138 = 1;
  sub_1D7A9D148();
  v132(&v123[*(int *)(v121 + 20)], v97, v102);
  char v137 = 2;
  sub_1D7A9D148();
  uint64_t v113 = (uint64_t)v123;
  (*(void (**)(char *, uint64_t))(v120 + 8))(v128, v129);
  uint64_t v114 = v121;
  v132(v113 + *(int *)(v121 + 24), v99, v102);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v110 + 56))(v113 + *(int *)(v114 + 28), 1, 1, v102);
LABEL_7:
  sub_1D7916774(v113, v118, type metadata accessor for ISO18013MobileSecurityObject.ValidityInfo);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v131);
  return sub_1D7917844(v113, type metadata accessor for ISO18013MobileSecurityObject.ValidityInfo);
}

unint64_t sub_1D791AEF8()
{
  unint64_t result = qword_1EA843DD8;
  if (!qword_1EA843DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA843DD8);
  }
  return result;
}

unint64_t sub_1D791AF4C()
{
  unint64_t result = qword_1EA843DE8;
  if (!qword_1EA843DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA843DE8);
  }
  return result;
}

uint64_t ISO18013MobileSecurityObject.ValidityInfo.encode(to:)(void *a1)
{
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA843DF0);
  uint64_t v2 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31, v3, v4, v5, v6, v7, v8, v9);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA843DF8);
  uint64_t v12 = *(void *)(v32 - 8);
  MEMORY[0x1F4188790](v32, v13, v14, v15, v16, v17, v18, v19);
  uint64_t v21 = (char *)&v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = a1[3];
  uint64_t v23 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v22);
  Encoder.codingKeyFormat.getter(v22, v23, &v41);
  char v24 = v41;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (v24)
  {
    uint64_t v32 = v2;
    sub_1D791AEF8();
    sub_1D7A9D6E8();
    char v40 = 0;
    sub_1D7A9B148();
    sub_1D79178E0(&qword_1EA843E00, MEMORY[0x1E4F27928]);
    uint64_t v25 = v33;
    uint64_t v26 = v31;
    sub_1D7A9D228();
    if (!v25)
    {
      type metadata accessor for ISO18013MobileSecurityObject.ValidityInfo(0);
      char v39 = 1;
      sub_1D7A9D228();
      char v38 = 2;
      sub_1D7A9D228();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v11, v26);
  }
  else
  {
    uint64_t v31 = v12;
    sub_1D791AF4C();
    sub_1D7A9D6E8();
    char v37 = 0;
    sub_1D7A9B148();
    sub_1D79178E0(&qword_1EA843E00, MEMORY[0x1E4F27928]);
    uint64_t v28 = v33;
    uint64_t v29 = v32;
    sub_1D7A9D228();
    if (v28)
    {
      return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v21, v29);
    }
    else
    {
      type metadata accessor for ISO18013MobileSecurityObject.ValidityInfo(0);
      char v36 = 1;
      sub_1D7A9D228();
      char v35 = 2;
      sub_1D7A9D228();
      uint64_t v30 = v31;
      char v34 = 3;
      sub_1D7A9D1C8();
      return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v21, v29);
    }
  }
}

uint64_t sub_1D791B3C8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ISO18013MobileSecurityObject.ValidityInfo.init(from:)(a1, a2);
}

uint64_t sub_1D791B3E0(void *a1)
{
  return ISO18013MobileSecurityObject.ValidityInfo.encode(to:)(a1);
}

void *initializeBufferWithCopyOfBuffer for ISO18013MobileSecurityObject(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    void *v4 = *a2;
    uint64_t v4 = (void *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    uint64_t v8 = a3[7];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    a1[4] = a2[4];
    uint64_t v11 = sub_1D7A9B458();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = type metadata accessor for ISO18013MobileSecurityObject.DeviceKeyInfo(0);
    uint64_t v14 = *(int *)(v13 + 20);
    uint64_t v15 = &v9[v14];
    uint64_t v16 = &v10[v14];
    if (*(void *)v16 == 1)
    {
      *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
    }
    else
    {
      uint64_t v18 = *((void *)v16 + 1);
      *(void *)uint64_t v15 = *(void *)v16;
      *((void *)v15 + 1) = v18;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    *(void *)&v9[*(int *)(v13 + 24)] = *(void *)&v10[*(int *)(v13 + 24)];
    uint64_t v19 = a3[8];
    uint64_t v20 = a3[9];
    uint64_t v21 = (void *)((char *)v4 + v19);
    uint64_t v22 = (void *)((char *)a2 + v19);
    uint64_t v23 = v22[1];
    void *v21 = *v22;
    v21[1] = v23;
    char v24 = (char *)v4 + v20;
    uint64_t v25 = (char *)a2 + v20;
    uint64_t v26 = sub_1D7A9B148();
    uint64_t v27 = *(void *)(v26 - 8);
    uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v27 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v28(v24, v25, v26);
    uint64_t v29 = (int *)type metadata accessor for ISO18013MobileSecurityObject.ValidityInfo(0);
    v28(&v24[v29[5]], &v25[v29[5]], v26);
    v28(&v24[v29[6]], &v25[v29[6]], v26);
    uint64_t v30 = v29[7];
    uint64_t v31 = &v24[v30];
    uint64_t v32 = &v25[v30];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(&v25[v30], 1, v26))
    {
      uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9118);
      memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
    }
    else
    {
      v28(v31, v32, v26);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v31, 0, 1, v26);
    }
    *((unsigned char *)v4 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  }
  return v4;
}

uint64_t destroy for ISO18013MobileSecurityObject(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_1D7A9B458();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  if (*(void *)(v4 + *(int *)(type metadata accessor for ISO18013MobileSecurityObject.DeviceKeyInfo(0) + 20)) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(a2 + 36);
  uint64_t v7 = sub_1D7A9B148();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v12(v6, v7);
  uint64_t v9 = (int *)type metadata accessor for ISO18013MobileSecurityObject.ValidityInfo(0);
  v12(v6 + v9[5], v7);
  v12(v6 + v9[6], v7);
  uint64_t v10 = v6 + v9[7];
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v10, 1, v7);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v12)(v10, v7);
  }
  return result;
}

void *initializeWithCopy for ISO18013MobileSecurityObject(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  a1[4] = a2[4];
  uint64_t v7 = a3[7];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1D7A9B458();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = type metadata accessor for ISO18013MobileSecurityObject.DeviceKeyInfo(0);
  uint64_t v13 = *(int *)(v12 + 20);
  uint64_t v14 = &v8[v13];
  uint64_t v15 = &v9[v13];
  if (*(void *)v15 == 1)
  {
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  }
  else
  {
    uint64_t v16 = *((void *)v15 + 1);
    *(void *)uint64_t v14 = *(void *)v15;
    *((void *)v14 + 1) = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *(void *)&v8[*(int *)(v12 + 24)] = *(void *)&v9[*(int *)(v12 + 24)];
  uint64_t v17 = a3[8];
  uint64_t v18 = a3[9];
  uint64_t v19 = (void *)((char *)a1 + v17);
  uint64_t v20 = (void *)((char *)a2 + v17);
  uint64_t v21 = v20[1];
  *uint64_t v19 = *v20;
  v19[1] = v21;
  uint64_t v22 = (char *)a1 + v18;
  uint64_t v23 = (char *)a2 + v18;
  uint64_t v24 = sub_1D7A9B148();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v25 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v26(v22, v23, v24);
  uint64_t v27 = (int *)type metadata accessor for ISO18013MobileSecurityObject.ValidityInfo(0);
  v26(&v22[v27[5]], &v23[v27[5]], v24);
  v26(&v22[v27[6]], &v23[v27[6]], v24);
  uint64_t v28 = v27[7];
  uint64_t v29 = &v22[v28];
  uint64_t v30 = &v23[v28];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(&v23[v28], 1, v24))
  {
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9118);
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    v26(v29, v30, v24);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v29, 0, 1, v24);
  }
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  return a1;
}

void *assignWithCopy for ISO18013MobileSecurityObject(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[7];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1D7A9B458();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = type metadata accessor for ISO18013MobileSecurityObject.DeviceKeyInfo(0);
  uint64_t v11 = *(int *)(v10 + 20);
  uint64_t v12 = &v7[v11];
  uint64_t v13 = &v8[v11];
  uint64_t v14 = *(void *)&v8[v11];
  if (*(void *)&v7[v11] == 1)
  {
    if (v14 != 1)
    {
      *(void *)uint64_t v12 = v14;
      *((void *)v12 + 1) = *((void *)v13 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v14 == 1)
  {
    sub_1D786F81C((uint64_t)&v7[v11]);
LABEL_6:
    *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
    goto LABEL_8;
  }
  *(void *)uint64_t v12 = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v12 + 1) = *((void *)v13 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_8:
  *(void *)&v7[*(int *)(v10 + 24)] = *(void *)&v8[*(int *)(v10 + 24)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[8];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v32 = a3;
  uint64_t v33 = a2;
  uint64_t v18 = a3[9];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = sub_1D7A9B148();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v22 + 24);
  v23(v19, v20, v21);
  uint64_t v24 = (int *)type metadata accessor for ISO18013MobileSecurityObject.ValidityInfo(0);
  v23(&v19[v24[5]], &v20[v24[5]], v21);
  v23(&v19[v24[6]], &v20[v24[6]], v21);
  uint64_t v25 = v24[7];
  uint64_t v26 = &v19[v25];
  uint64_t v27 = &v20[v25];
  uint64_t v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48);
  LODWORD(v24) = v28(v26, 1, v21);
  int v29 = v28(v27, 1, v21);
  if (!v24)
  {
    if (!v29)
    {
      v23(v26, v27, v21);
      goto LABEL_14;
    }
    (*(void (**)(char *, uint64_t))(v22 + 8))(v26, v21);
    goto LABEL_13;
  }
  if (v29)
  {
LABEL_13:
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9118);
    memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v26, v27, v21);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v26, 0, 1, v21);
LABEL_14:
  *((unsigned char *)a1 + v32[10]) = *((unsigned char *)v33 + v32[10]);
  return a1;
}

uint64_t initializeWithTake for ISO18013MobileSecurityObject(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = a3[7];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1D7A9B458();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = type metadata accessor for ISO18013MobileSecurityObject.DeviceKeyInfo(0);
  *(_OWORD *)(v8 + *(int *)(v11 + 20)) = *(_OWORD *)(v9 + *(int *)(v11 + 20));
  *(void *)(v8 + *(int *)(v11 + 24)) = *(void *)(v9 + *(int *)(v11 + 24));
  uint64_t v12 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  uint64_t v13 = (char *)(a1 + v12);
  uint64_t v14 = (char *)(a2 + v12);
  uint64_t v15 = sub_1D7A9B148();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void (**)(void *, const void *, uint64_t))(v16 + 32);
  v17(v13, v14, v15);
  uint64_t v18 = (int *)type metadata accessor for ISO18013MobileSecurityObject.ValidityInfo(0);
  v17(&v13[v18[5]], &v14[v18[5]], v15);
  v17(&v13[v18[6]], &v14[v18[6]], v15);
  uint64_t v19 = v18[7];
  uint64_t v20 = &v13[v19];
  uint64_t v21 = &v14[v19];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v21, 1, v15))
  {
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9118);
    memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    v17(v20, v21, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v20, 0, 1, v15);
  }
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  return a1;
}

void *assignWithTake for ISO18013MobileSecurityObject(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[7];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_1D7A9B458();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = type metadata accessor for ISO18013MobileSecurityObject.DeviceKeyInfo(0);
  uint64_t v13 = *(int *)(v12 + 20);
  uint64_t v14 = (uint64_t)&v9[v13];
  uint64_t v15 = &v10[v13];
  if (*(void *)&v9[v13] == 1) {
    goto LABEL_4;
  }
  if (*(void *)v15 == 1)
  {
    sub_1D786F81C(v14);
LABEL_4:
    *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
    goto LABEL_6;
  }
  *(void *)uint64_t v14 = *(void *)v15;
  swift_bridgeObjectRelease();
  *(void *)(v14 + 8) = *((void *)v15 + 1);
  swift_bridgeObjectRelease();
LABEL_6:
  *(void *)&v9[*(int *)(v12 + 24)] = *(void *)&v10[*(int *)(v12 + 24)];
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  *uint64_t v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  char v37 = a3;
  uint64_t v21 = a3[9];
  uint64_t v22 = (char *)a1 + v21;
  uint64_t v23 = (char *)a2 + v21;
  uint64_t v24 = sub_1D7A9B148();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v25 + 40);
  v26(v22, v23, v24);
  uint64_t v27 = (int *)type metadata accessor for ISO18013MobileSecurityObject.ValidityInfo(0);
  v26(&v22[v27[5]], &v23[v27[5]], v24);
  v26(&v22[v27[6]], &v23[v27[6]], v24);
  uint64_t v28 = v27[7];
  int v29 = &v22[v28];
  uint64_t v30 = &v23[v28];
  uint64_t v31 = *(uint64_t (**)(void))(v25 + 48);
  char v36 = v29;
  LODWORD(v27) = v31();
  int v32 = ((uint64_t (*)(char *, uint64_t, uint64_t))v31)(v30, 1, v24);
  if (v27)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v36, v30, v24);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v36, 0, 1, v24);
      goto LABEL_14;
    }
    size_t v33 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9118) - 8) + 64);
    char v34 = v36;
  }
  else
  {
    if (!v32)
    {
      v26(v36, v30, v24);
      goto LABEL_14;
    }
    (*(void (**)(char *, uint64_t))(v25 + 8))(v36, v24);
    size_t v33 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9118) - 8) + 64);
    char v34 = v36;
  }
  memcpy(v34, v30, v33);
LABEL_14:
  *((unsigned char *)a1 + v37[10]) = *((unsigned char *)a2 + v37[10]);
  return a1;
}

uint64_t getEnumTagSinglePayload for ISO18013MobileSecurityObject(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D791C43C);
}

uint64_t sub_1D791C43C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for ISO18013MobileSecurityObject.DeviceKeyInfo(0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 28);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for ISO18013MobileSecurityObject.ValidityInfo(0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 36);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for ISO18013MobileSecurityObject(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D791C57C);
}

uint64_t sub_1D791C57C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for ISO18013MobileSecurityObject.DeviceKeyInfo(0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 28);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for ISO18013MobileSecurityObject.ValidityInfo(0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 36);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_1D791C6A8()
{
  uint64_t result = type metadata accessor for ISO18013MobileSecurityObject.DeviceKeyInfo(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for ISO18013MobileSecurityObject.ValidityInfo(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ISO18013MobileSecurityObject.DeviceKeyInfo(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1D7A9B458();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    if (*(void *)v10 == 1)
    {
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    }
    else
    {
      uint64_t v12 = *((void *)v10 + 1);
      *(void *)uint64_t v9 = *(void *)v10;
      *((void *)v9 + 1) = v12;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ISO18013MobileSecurityObject.DeviceKeyInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D7A9B458();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  if (*(void *)(a1 + *(int *)(a2 + 20)) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ISO18013MobileSecurityObject.DeviceKeyInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D7A9B458();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  if (*(void *)v9 == 1)
  {
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  }
  else
  {
    uint64_t v10 = *(void *)(v9 + 8);
    *(void *)uint64_t v8 = *(void *)v9;
    *(void *)(v8 + 8) = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ISO18013MobileSecurityObject.DeviceKeyInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D7A9B458();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7);
  if (*(void *)(a1 + v7) != 1)
  {
    if (v10 != 1)
    {
      *uint64_t v8 = v10;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v8[1] = *(void *)(v9 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_1D786F81C(a1 + v7);
    goto LABEL_6;
  }
  if (v10 == 1)
  {
LABEL_6:
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    goto LABEL_8;
  }
  *uint64_t v8 = v10;
  v8[1] = *(void *)(v9 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_8:
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ISO18013MobileSecurityObject.DeviceKeyInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D7A9B458();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for ISO18013MobileSecurityObject.DeviceKeyInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D7A9B458();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  if (*(void *)(a1 + v7) != 1)
  {
    if (*v9 != 1)
    {
      *uint64_t v8 = *v9;
      swift_bridgeObjectRelease();
      v8[1] = v9[1];
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1D786F81C((uint64_t)v8);
  }
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
LABEL_6:
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ISO18013MobileSecurityObject.DeviceKeyInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D791CC7C);
}

uint64_t sub_1D791CC7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D7A9B458();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for ISO18013MobileSecurityObject.DeviceKeyInfo(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D791CD5C);
}

uint64_t sub_1D791CD5C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1D7A9B458();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = a2;
  }
  return result;
}

uint64_t sub_1D791CE18()
{
  uint64_t result = sub_1D7A9B458();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for ISO18013MobileSecurityObject.KeyAuthorizations()
{
  return &type metadata for ISO18013MobileSecurityObject.KeyAuthorizations;
}

uint64_t *initializeBufferWithCopyOfBuffer for ISO18013MobileSecurityObject.ValidityInfo(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1D7A9B148();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    v9((uint64_t *)((char *)a1 + a3[5]), (uint64_t *)((char *)a2 + a3[5]), v7);
    v9((uint64_t *)((char *)a1 + a3[6]), (uint64_t *)((char *)a2 + a3[6]), v7);
    uint64_t v10 = a3[7];
    int v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v12, 1, v7))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9118);
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      v9((uint64_t *)v11, (uint64_t *)v12, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for ISO18013MobileSecurityObject.ValidityInfo(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_1D7A9B148();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v8(a1, v4);
  v8(a1 + a2[5], v4);
  v8(a1 + a2[6], v4);
  uint64_t v6 = a1 + a2[7];
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v8)(v6, v4);
  }
  return result;
}

char *initializeWithCopy for ISO18013MobileSecurityObject.ValidityInfo(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1D7A9B148();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  v8(&a1[a3[5]], &a2[a3[5]], v6);
  v8(&a1[a3[6]], &a2[a3[6]], v6);
  uint64_t v9 = a3[7];
  uint64_t v10 = &a1[v9];
  int v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v11, 1, v6))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9118);
    memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  return a1;
}

char *assignWithCopy for ISO18013MobileSecurityObject.ValidityInfo(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1D7A9B148();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v8(&a1[a3[5]], &a2[a3[5]], v6);
  v8(&a1[a3[6]], &a2[a3[6]], v6);
  uint64_t v9 = a3[7];
  uint64_t v10 = &a1[v9];
  int v11 = &a2[v9];
  uint64_t v12 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  int v13 = v12(&a1[v9], 1, v6);
  int v14 = v12(v11, 1, v6);
  if (!v13)
  {
    if (!v14)
    {
      v8(v10, v11, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9118);
    memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  return a1;
}

char *initializeWithTake for ISO18013MobileSecurityObject.ValidityInfo(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1D7A9B148();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  v8(&a1[a3[5]], &a2[a3[5]], v6);
  v8(&a1[a3[6]], &a2[a3[6]], v6);
  uint64_t v9 = a3[7];
  uint64_t v10 = &a1[v9];
  int v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v11, 1, v6))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9118);
    memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  return a1;
}

char *assignWithTake for ISO18013MobileSecurityObject.ValidityInfo(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_1D7A9B148();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v8(&a1[a3[5]], &a2[a3[5]], v6);
  v8(&a1[a3[6]], &a2[a3[6]], v6);
  uint64_t v9 = a3[7];
  uint64_t v10 = &a1[v9];
  int v11 = &a2[v9];
  uint64_t v12 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  int v13 = v12(&a1[v9], 1, v6);
  int v14 = v12(v11, 1, v6);
  if (!v13)
  {
    if (!v14)
    {
      v8(v10, v11, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9118);
    memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ISO18013MobileSecurityObject.ValidityInfo(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D791D8B8);
}

uint64_t sub_1D791D8B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D7A9B148();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9118);
    int v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 28);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for ISO18013MobileSecurityObject.ValidityInfo(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D791D9C8);
}

uint64_t sub_1D791D9C8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1D7A9B148();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9118);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 28);
    return v13(v15, a2, a2, v14);
  }
}

void sub_1D791DAD0()
{
  sub_1D7A9B148();
  if (v0 <= 0x3F)
  {
    sub_1D787010C();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unsigned char *storeEnumTagSinglePayload for ISO18013MobileSecurityObject.ValidityInfo.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D791DC68);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ISO18013MobileSecurityObject.ValidityInfo.CodingKeys()
{
  return &type metadata for ISO18013MobileSecurityObject.ValidityInfo.CodingKeys;
}

ValueMetadata *type metadata accessor for ISO18013MobileSecurityObject.ValidityInfo.ACWGCodingKeys()
{
  return &type metadata for ISO18013MobileSecurityObject.ValidityInfo.ACWGCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ISO18013MobileSecurityObject.KeyAuthorizations.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D791DD80);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ISO18013MobileSecurityObject.KeyAuthorizations.CodingKeys()
{
  return &type metadata for ISO18013MobileSecurityObject.KeyAuthorizations.CodingKeys;
}

unsigned char *_s13CoreIDVShared28ISO18013MobileSecurityObjectV12ValidityInfoV14ACWGCodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D791DE84);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ISO18013MobileSecurityObject.DeviceKeyInfo.CodingKeys()
{
  return &type metadata for ISO18013MobileSecurityObject.DeviceKeyInfo.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ISO18013MobileSecurityObject.DeviceKeyInfo.ACWGCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1D791DF58);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ISO18013MobileSecurityObject.DeviceKeyInfo.ACWGCodingKeys()
{
  return &type metadata for ISO18013MobileSecurityObject.DeviceKeyInfo.ACWGCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ISO18013MobileSecurityObject.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D791E05CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ISO18013MobileSecurityObject.CodingKeys()
{
  return &type metadata for ISO18013MobileSecurityObject.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ISO18013MobileSecurityObject.ACWGCodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D791E160);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ISO18013MobileSecurityObject.ACWGCodingKeys()
{
  return &type metadata for ISO18013MobileSecurityObject.ACWGCodingKeys;
}

unint64_t sub_1D791E19C()
{
  unint64_t result = qword_1EA843E38;
  if (!qword_1EA843E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA843E38);
  }
  return result;
}

unint64_t sub_1D791E1F4()
{
  unint64_t result = qword_1EA843E40;
  if (!qword_1EA843E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA843E40);
  }
  return result;
}

unint64_t sub_1D791E24C()
{
  unint64_t result = qword_1EA843E48;
  if (!qword_1EA843E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA843E48);
  }
  return result;
}

unint64_t sub_1D791E2A4()
{
  unint64_t result = qword_1EA843E50;
  if (!qword_1EA843E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA843E50);
  }
  return result;
}

unint64_t sub_1D791E2FC()
{
  unint64_t result = qword_1EA843E58;
  if (!qword_1EA843E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA843E58);
  }
  return result;
}

unint64_t sub_1D791E354()
{
  unint64_t result = qword_1EA843E60;
  if (!qword_1EA843E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA843E60);
  }
  return result;
}

unint64_t sub_1D791E3AC()
{
  unint64_t result = qword_1EA843E68;
  if (!qword_1EA843E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA843E68);
  }
  return result;
}

unint64_t sub_1D791E404()
{
  unint64_t result = qword_1EA843E70;
  if (!qword_1EA843E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA843E70);
  }
  return result;
}

unint64_t sub_1D791E45C()
{
  unint64_t result = qword_1EA843E78;
  if (!qword_1EA843E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA843E78);
  }
  return result;
}

unint64_t sub_1D791E4B4()
{
  unint64_t result = qword_1EA843E80;
  if (!qword_1EA843E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA843E80);
  }
  return result;
}

unint64_t sub_1D791E50C()
{
  unint64_t result = qword_1EA843E88;
  if (!qword_1EA843E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA843E88);
  }
  return result;
}

unint64_t sub_1D791E564()
{
  unint64_t result = qword_1EA843E90;
  if (!qword_1EA843E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA843E90);
  }
  return result;
}

unint64_t sub_1D791E5BC()
{
  unint64_t result = qword_1EA843E98;
  if (!qword_1EA843E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA843E98);
  }
  return result;
}

unint64_t sub_1D791E614()
{
  unint64_t result = qword_1EA843EA0;
  if (!qword_1EA843EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA843EA0);
  }
  return result;
}

unint64_t sub_1D791E66C()
{
  unint64_t result = qword_1EA843EA8;
  if (!qword_1EA843EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA843EA8);
  }
  return result;
}

unint64_t sub_1D791E6C4()
{
  unint64_t result = qword_1EA843EB0;
  if (!qword_1EA843EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA843EB0);
  }
  return result;
}

unint64_t sub_1D791E71C()
{
  unint64_t result = qword_1EA843EB8;
  if (!qword_1EA843EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA843EB8);
  }
  return result;
}

unint64_t sub_1D791E774()
{
  unint64_t result = qword_1EA843EC0;
  if (!qword_1EA843EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA843EC0);
  }
  return result;
}

unint64_t sub_1D791E7CC()
{
  unint64_t result = qword_1EA843EC8;
  if (!qword_1EA843EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA843EC8);
  }
  return result;
}

unint64_t sub_1D791E824()
{
  unint64_t result = qword_1EA843ED0;
  if (!qword_1EA843ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA843ED0);
  }
  return result;
}

unint64_t sub_1D791E87C()
{
  unint64_t result = qword_1EA843ED8;
  if (!qword_1EA843ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA843ED8);
  }
  return result;
}

uint64_t sub_1D791E8D0()
{
  unint64_t v0 = sub_1D7A9D058();
  swift_bridgeObjectRelease();
  if (v0 >= 6) {
    return 6;
  }
  else {
    return v0;
  }
}

uint64_t sub_1D791E91C()
{
  unint64_t v0 = sub_1D7A9D058();
  swift_bridgeObjectRelease();
  if (v0 >= 7) {
    return 7;
  }
  else {
    return v0;
  }
}

uint64_t sub_1D791E968()
{
  unint64_t v0 = sub_1D7A9D058();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t sub_1D791E9B4()
{
  unint64_t v0 = sub_1D7A9D058();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t TimerHelper.__allocating_init()()
{
  uint64_t v0 = sub_1D7A9B738();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0, v2, v3, v4, v5, v6, v7, v8);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = swift_allocObject();
  *(_DWORD *)(v11 + 16) = 1315859240;
  *(void *)(v11 + 24) = 0;
  sub_1D7A9B728();
  uint64_t v12 = sub_1D7A9B718();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v10, v0);
  *(void *)(v11 + 24) = v12;
  return v11;
}

uint64_t TimerHelper.init()()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D7A9B738();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4, v5, v6, v7, v8, v9, v10);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_DWORD *)(v1 + 16) = 1315859240;
  *(void *)(v1 + 24) = 0;
  sub_1D7A9B728();
  uint64_t v13 = sub_1D7A9B718();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v12, v2);
  *(void *)(v1 + 24) = v13;
  return v1;
}

uint64_t sub_1D791EBF0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D7A9B738();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4, v5, v6, v7, v8, v9, v10);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D7A9B728();
  uint64_t v13 = sub_1D7A9B718();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v12, v2);
  *(void *)(v1 + 24) = v13;
  return result;
}

uint64_t sub_1D791ECC8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D7A9B738();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4, v5, v6, v7, v8, v9, v10);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D7A9B728();
  unint64_t v13 = sub_1D7A9B718();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v12, v2);
  if (v13 < *(void *)(v1 + 24)) {
    __break(1u);
  }
  return result;
}

uint64_t TimerHelper.deinit()
{
  return v0;
}

uint64_t TimerHelper.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TimerHelper()
{
  return self;
}

uint64_t method lookup function for TimerHelper(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for TimerHelper);
}

uint64_t dispatch thunk of TimerHelper.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of TimerHelper.reset()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of TimerHelper.calculateTimeElapsed()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t defaultLogger()@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EBDF9DC8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D7A9B5F8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EBDFBE70);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(a1, v3, v2);
}

void sub_1D791EF30(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = objc_msgSend(self, sel_standardUserDefaults);
  if (qword_1EBDF9690 != -1)
  {
    uint64_t v15 = v3;
    swift_once();
    uint64_t v3 = v15;
  }
  if (byte_1EBDFBE68 == 1)
  {
    unint64_t v13 = v3;
    uint64_t v4 = (void *)sub_1D7A9BF98();
    unsigned __int8 v5 = [v13 BOOLForKey:v4];

    if ((v5 & 1) == 0) {
      return;
    }
    sub_1D7A9CC48();
    swift_bridgeObjectRelease();
    uint64_t v16 = 0xD00000000000001CLL;
    unint64_t v17 = 0x80000001D7AC3D30;
    unint64_t v6 = *(void *)(a2 + 8);
    if (v6 >> 60 != 15)
    {
      uint64_t v7 = *(void *)a2;
      sub_1D7860790(*(void *)a2, *(void *)(a2 + 8));
      sub_1D7A9B008();
      sub_1D7871BDC(v7, v6);
    }
    sub_1D7A9C128();
    swift_bridgeObjectRelease();
    uint64_t v9 = v16;
    unint64_t v8 = v17;
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_1D7A9B5D8();
    os_log_type_t v10 = sub_1D7A9C748();
    if (os_log_type_enabled(v14, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      uint64_t v16 = v12;
      *(_DWORD *)uint64_t v11 = 136315138;
      swift_bridgeObjectRetain();
      sub_1D7923300(v9, v8, &v16);
      sub_1D7A9C9E8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D7853000, v14, v10, "%s", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v12, -1, -1);
      MEMORY[0x1D947D740](v11, -1, -1);

      return;
    }
    swift_bridgeObjectRelease_n();
    uint64_t v3 = v14;
  }
}

void sub_1D791F220()
{
  uint64_t v0 = objc_msgSend(self, sel_standardUserDefaults);
  if (qword_1EBDF9690 != -1)
  {
    unint64_t v8 = v0;
    swift_once();
    uint64_t v0 = v8;
  }
  if (byte_1EBDFBE68 == 1)
  {
    unint64_t v6 = v0;
    uint64_t v1 = (void *)sub_1D7A9BF98();
    unsigned __int8 v2 = [v6 BOOLForKey:v1];

    if ((v2 & 1) == 0) {
      return;
    }
    uint64_t v7 = sub_1D7A9B5D8();
    os_log_type_t v3 = sub_1D7A9C748();
    if (os_log_type_enabled(v7, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      uint64_t v5 = swift_slowAlloc();
      uint64_t v9 = v5;
      *(_DWORD *)uint64_t v4 = 136315138;
      sub_1D7923300(0xD000000000000032, 0x80000001D7AC3C70, &v9);
      sub_1D7A9C9E8();
      _os_log_impl(&dword_1D7853000, v7, v3, "%s", v4, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v5, -1, -1);
      MEMORY[0x1D947D740](v4, -1, -1);

      return;
    }
    uint64_t v0 = v7;
  }
}

void sub_1D791F438(uint64_t a1, uint64_t a2)
{
  os_log_type_t v3 = objc_msgSend(self, sel_standardUserDefaults);
  if (qword_1EBDF9690 != -1)
  {
    uint64_t v15 = v3;
    swift_once();
    os_log_type_t v3 = v15;
  }
  if (byte_1EBDFBE68 == 1)
  {
    unint64_t v13 = v3;
    uint64_t v4 = (void *)sub_1D7A9BF98();
    unsigned __int8 v5 = [v13 BOOLForKey:v4];

    if ((v5 & 1) == 0) {
      return;
    }
    sub_1D7A9CC48();
    swift_bridgeObjectRelease();
    uint64_t v16 = 0xD00000000000001DLL;
    unint64_t v17 = 0x80000001D7AC3CB0;
    unint64_t v6 = *(void *)(a2 + 8);
    if (v6 >> 60 != 15)
    {
      uint64_t v7 = *(void *)a2;
      sub_1D7860790(*(void *)a2, *(void *)(a2 + 8));
      sub_1D7A9B008();
      sub_1D7871BDC(v7, v6);
    }
    sub_1D7A9C128();
    swift_bridgeObjectRelease();
    sub_1D7A9C128();
    uint64_t v9 = v16;
    unint64_t v8 = v17;
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_1D7A9B5D8();
    os_log_type_t v10 = sub_1D7A9C748();
    if (os_log_type_enabled(v14, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      uint64_t v16 = v12;
      *(_DWORD *)uint64_t v11 = 136315138;
      swift_bridgeObjectRetain();
      sub_1D7923300(v9, v8, &v16);
      sub_1D7A9C9E8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D7853000, v14, v10, "%s", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v12, -1, -1);
      MEMORY[0x1D947D740](v11, -1, -1);

      return;
    }
    swift_bridgeObjectRelease_n();
    os_log_type_t v3 = v14;
  }
}

void Logger.cryptoParam(_:)(uint64_t (*a1)(void))
{
  unsigned __int8 v2 = objc_msgSend(self, sel_standardUserDefaults);
  if (qword_1EBDF9690 != -1)
  {
    unint64_t v13 = v2;
    swift_once();
    unsigned __int8 v2 = v13;
  }
  if (byte_1EBDFBE68 == 1)
  {
    uint64_t v11 = v2;
    os_log_type_t v3 = (void *)sub_1D7A9BF98();
    unsigned __int8 v4 = [v11 BOOLForKey:v3];

    if ((v4 & 1) == 0) {
      return;
    }
    uint64_t v5 = a1();
    unint64_t v7 = v6;
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1D7A9B5D8();
    os_log_type_t v8 = sub_1D7A9C748();
    if (os_log_type_enabled(v12, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v10 = swift_slowAlloc();
      uint64_t v14 = v10;
      *(_DWORD *)uint64_t v9 = 136315138;
      swift_bridgeObjectRetain();
      sub_1D7923300(v5, v7, &v14);
      sub_1D7A9C9E8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D7853000, v12, v8, "%s", v9, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v10, -1, -1);
      MEMORY[0x1D947D740](v9, -1, -1);

      return;
    }
    swift_bridgeObjectRelease_n();
    unsigned __int8 v2 = v12;
  }
}

Swift::String_optional __swiftcall processName()()
{
  uint64_t v0 = qword_1EBDF7848;
  uint64_t v1 = qword_1EBDF7850;
  swift_bridgeObjectRetain();
  uint64_t v2 = v0;
  os_log_type_t v3 = (void *)v1;
  result.value._object = v3;
  result.value._countAndFlagsBits = v2;
  return result;
}

void sub_1D791F9C4()
{
  if (_sSo14NSUserDefaultsC13CoreIDVSharedE18globalInternalBool6forKeySbSS_tFZ_0(0xD00000000000001ALL, 0x80000001D7ABE380))
  {
    oslog = sub_1D7A9B5D8();
    os_log_type_t v0 = sub_1D7A9C748();
    if (os_log_type_enabled(oslog, v0))
    {
      uint64_t v1 = (uint8_t *)swift_slowAlloc();
      uint64_t v2 = swift_slowAlloc();
      uint64_t v4 = v2;
      *(_DWORD *)uint64_t v1 = 136315138;
      sub_1D7923300(0xD00000000000003CLL, 0x80000001D7AC3520, &v4);
      sub_1D7A9C9E8();
      _os_log_impl(&dword_1D7853000, oslog, v0, "%s", v1, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v2, -1, -1);
      MEMORY[0x1D947D740](v1, -1, -1);
    }
    else
    {
    }
  }
}

void sub_1D791FB48()
{
  if (_sSo14NSUserDefaultsC13CoreIDVSharedE18globalInternalBool6forKeySbSS_tFZ_0(0xD00000000000001ALL, 0x80000001D7ABE380))
  {
    oslog = sub_1D7A9B5D8();
    os_log_type_t v0 = sub_1D7A9C748();
    if (os_log_type_enabled(oslog, v0))
    {
      uint64_t v1 = (uint8_t *)swift_slowAlloc();
      uint64_t v2 = swift_slowAlloc();
      uint64_t v4 = v2;
      *(_DWORD *)uint64_t v1 = 136315138;
      sub_1D7923300(0xD00000000000003ALL, 0x80000001D7AC3630, &v4);
      sub_1D7A9C9E8();
      _os_log_impl(&dword_1D7853000, oslog, v0, "%s", v1, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v2, -1, -1);
      MEMORY[0x1D947D740](v1, -1, -1);
    }
    else
    {
    }
  }
}

void sub_1D791FCCC()
{
  if (_sSo14NSUserDefaultsC13CoreIDVSharedE18globalInternalBool6forKeySbSS_tFZ_0(0xD00000000000001ALL, 0x80000001D7ABE380))
  {
    oslog = sub_1D7A9B5D8();
    os_log_type_t v0 = sub_1D7A9C748();
    if (os_log_type_enabled(oslog, v0))
    {
      uint64_t v1 = (uint8_t *)swift_slowAlloc();
      uint64_t v2 = swift_slowAlloc();
      uint64_t v4 = v2;
      *(_DWORD *)uint64_t v1 = 136315138;
      sub_1D7923300(0xD000000000000034, 0x80000001D7AC3BA0, &v4);
      sub_1D7A9C9E8();
      _os_log_impl(&dword_1D7853000, oslog, v0, "%s", v1, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v2, -1, -1);
      MEMORY[0x1D947D740](v1, -1, -1);
    }
    else
    {
    }
  }
}

void sub_1D791FE50()
{
  if (_sSo14NSUserDefaultsC13CoreIDVSharedE18globalInternalBool6forKeySbSS_tFZ_0(0xD00000000000001ALL, 0x80000001D7ABE380))
  {
    oslog = sub_1D7A9B5D8();
    os_log_type_t v0 = sub_1D7A9C748();
    if (os_log_type_enabled(oslog, v0))
    {
      uint64_t v1 = (uint8_t *)swift_slowAlloc();
      uint64_t v2 = swift_slowAlloc();
      uint64_t v4 = v2;
      *(_DWORD *)uint64_t v1 = 136315138;
      sub_1D7923300(0xD000000000000048, 0x80000001D7AC3670, &v4);
      sub_1D7A9C9E8();
      _os_log_impl(&dword_1D7853000, oslog, v0, "%s", v1, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v2, -1, -1);
      MEMORY[0x1D947D740](v1, -1, -1);
    }
    else
    {
    }
  }
}

void sub_1D791FFD4()
{
  if (_sSo14NSUserDefaultsC13CoreIDVSharedE18globalInternalBool6forKeySbSS_tFZ_0(0xD00000000000001ALL, 0x80000001D7ABE380))
  {
    oslog = sub_1D7A9B5D8();
    os_log_type_t v0 = sub_1D7A9C748();
    if (os_log_type_enabled(oslog, v0))
    {
      uint64_t v1 = (uint8_t *)swift_slowAlloc();
      uint64_t v2 = swift_slowAlloc();
      uint64_t v4 = v2;
      *(_DWORD *)uint64_t v1 = 136315138;
      sub_1D7923300(0xD000000000000028, 0x80000001D7AC36C0, &v4);
      sub_1D7A9C9E8();
      _os_log_impl(&dword_1D7853000, oslog, v0, "%s", v1, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v2, -1, -1);
      MEMORY[0x1D947D740](v1, -1, -1);
    }
    else
    {
    }
  }
}

void sub_1D7920158()
{
  if (_sSo14NSUserDefaultsC13CoreIDVSharedE18globalInternalBool6forKeySbSS_tFZ_0(0xD00000000000001ALL, 0x80000001D7ABE380))
  {
    oslog = sub_1D7A9B5D8();
    os_log_type_t v0 = sub_1D7A9C748();
    if (os_log_type_enabled(oslog, v0))
    {
      uint64_t v1 = (uint8_t *)swift_slowAlloc();
      uint64_t v2 = swift_slowAlloc();
      uint64_t v4 = v2;
      *(_DWORD *)uint64_t v1 = 136315138;
      sub_1D7923300(0xD000000000000038, 0x80000001D7AC36F0, &v4);
      sub_1D7A9C9E8();
      _os_log_impl(&dword_1D7853000, oslog, v0, "%s", v1, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v2, -1, -1);
      MEMORY[0x1D947D740](v1, -1, -1);
    }
    else
    {
    }
  }
}

void sub_1D79202DC()
{
  if (_sSo14NSUserDefaultsC13CoreIDVSharedE18globalInternalBool6forKeySbSS_tFZ_0(0xD00000000000001ALL, 0x80000001D7ABE380))
  {
    oslog = sub_1D7A9B5D8();
    os_log_type_t v0 = sub_1D7A9C748();
    if (os_log_type_enabled(oslog, v0))
    {
      uint64_t v1 = (uint8_t *)swift_slowAlloc();
      uint64_t v2 = swift_slowAlloc();
      uint64_t v4 = v2;
      *(_DWORD *)uint64_t v1 = 136315138;
      sub_1D7923300(0xD000000000000039, 0x80000001D7AC3730, &v4);
      sub_1D7A9C9E8();
      _os_log_impl(&dword_1D7853000, oslog, v0, "%s", v1, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v2, -1, -1);
      MEMORY[0x1D947D740](v1, -1, -1);
    }
    else
    {
    }
  }
}

void sub_1D7920460()
{
  if (_sSo14NSUserDefaultsC13CoreIDVSharedE18globalInternalBool6forKeySbSS_tFZ_0(0xD00000000000001ALL, 0x80000001D7ABE380))
  {
    oslog = sub_1D7A9B5D8();
    os_log_type_t v0 = sub_1D7A9C748();
    if (os_log_type_enabled(oslog, v0))
    {
      uint64_t v1 = (uint8_t *)swift_slowAlloc();
      uint64_t v2 = swift_slowAlloc();
      uint64_t v4 = v2;
      *(_DWORD *)uint64_t v1 = 136315138;
      sub_1D7923300(0xD00000000000003DLL, 0x80000001D7AC3770, &v4);
      sub_1D7A9C9E8();
      _os_log_impl(&dword_1D7853000, oslog, v0, "%s", v1, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v2, -1, -1);
      MEMORY[0x1D947D740](v1, -1, -1);
    }
    else
    {
    }
  }
}

void sub_1D79205E4()
{
  if (_sSo14NSUserDefaultsC13CoreIDVSharedE18globalInternalBool6forKeySbSS_tFZ_0(0xD00000000000001ALL, 0x80000001D7ABE380))
  {
    oslog = sub_1D7A9B5D8();
    os_log_type_t v0 = sub_1D7A9C748();
    if (os_log_type_enabled(oslog, v0))
    {
      uint64_t v1 = (uint8_t *)swift_slowAlloc();
      uint64_t v2 = swift_slowAlloc();
      uint64_t v4 = v2;
      *(_DWORD *)uint64_t v1 = 136315138;
      sub_1D7923300(0xD00000000000003ALL, 0x80000001D7AC37B0, &v4);
      sub_1D7A9C9E8();
      _os_log_impl(&dword_1D7853000, oslog, v0, "%s", v1, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v2, -1, -1);
      MEMORY[0x1D947D740](v1, -1, -1);
    }
    else
    {
    }
  }
}

void sub_1D7920768()
{
  if (_sSo14NSUserDefaultsC13CoreIDVSharedE18globalInternalBool6forKeySbSS_tFZ_0(0xD00000000000001ALL, 0x80000001D7ABE380))
  {
    oslog = sub_1D7A9B5D8();
    os_log_type_t v0 = sub_1D7A9C748();
    if (os_log_type_enabled(oslog, v0))
    {
      uint64_t v1 = (uint8_t *)swift_slowAlloc();
      uint64_t v2 = swift_slowAlloc();
      uint64_t v4 = v2;
      *(_DWORD *)uint64_t v1 = 136315138;
      sub_1D7923300(0xD000000000000039, 0x80000001D7AC3B60, &v4);
      sub_1D7A9C9E8();
      _os_log_impl(&dword_1D7853000, oslog, v0, "%s", v1, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v2, -1, -1);
      MEMORY[0x1D947D740](v1, -1, -1);
    }
    else
    {
    }
  }
}

void sub_1D79208EC()
{
  if (_sSo14NSUserDefaultsC13CoreIDVSharedE18globalInternalBool6forKeySbSS_tFZ_0(0xD00000000000001ALL, 0x80000001D7ABE380))
  {
    oslog = sub_1D7A9B5D8();
    os_log_type_t v0 = sub_1D7A9C748();
    if (os_log_type_enabled(oslog, v0))
    {
      uint64_t v1 = (uint8_t *)swift_slowAlloc();
      uint64_t v2 = swift_slowAlloc();
      uint64_t v4 = v2;
      *(_DWORD *)uint64_t v1 = 136315138;
      sub_1D7923300(0xD00000000000003ALL, 0x80000001D7AC37F0, &v4);
      sub_1D7A9C9E8();
      _os_log_impl(&dword_1D7853000, oslog, v0, "%s", v1, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v2, -1, -1);
      MEMORY[0x1D947D740](v1, -1, -1);
    }
    else
    {
    }
  }
}

void sub_1D7920A70()
{
  if (_sSo14NSUserDefaultsC13CoreIDVSharedE18globalInternalBool6forKeySbSS_tFZ_0(0xD00000000000001ALL, 0x80000001D7ABE380))
  {
    oslog = sub_1D7A9B5D8();
    os_log_type_t v0 = sub_1D7A9C748();
    if (os_log_type_enabled(oslog, v0))
    {
      uint64_t v1 = (uint8_t *)swift_slowAlloc();
      uint64_t v2 = swift_slowAlloc();
      uint64_t v4 = v2;
      *(_DWORD *)uint64_t v1 = 136315138;
      sub_1D7923300(0xD00000000000003ALL, 0x80000001D7AC3870, &v4);
      sub_1D7A9C9E8();
      _os_log_impl(&dword_1D7853000, oslog, v0, "%s", v1, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v2, -1, -1);
      MEMORY[0x1D947D740](v1, -1, -1);
    }
    else
    {
    }
  }
}

void sub_1D7920BF4()
{
  if (_sSo14NSUserDefaultsC13CoreIDVSharedE18globalInternalBool6forKeySbSS_tFZ_0(0xD00000000000001ALL, 0x80000001D7ABE380))
  {
    oslog = sub_1D7A9B5D8();
    os_log_type_t v0 = sub_1D7A9C748();
    if (os_log_type_enabled(oslog, v0))
    {
      uint64_t v1 = (uint8_t *)swift_slowAlloc();
      uint64_t v2 = swift_slowAlloc();
      uint64_t v4 = v2;
      *(_DWORD *)uint64_t v1 = 136315138;
      sub_1D7923300(0xD00000000000003BLL, 0x80000001D7AC3830, &v4);
      sub_1D7A9C9E8();
      _os_log_impl(&dword_1D7853000, oslog, v0, "%s", v1, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v2, -1, -1);
      MEMORY[0x1D947D740](v1, -1, -1);
    }
    else
    {
    }
  }
}

void sub_1D7920D78()
{
  if (_sSo14NSUserDefaultsC13CoreIDVSharedE18globalInternalBool6forKeySbSS_tFZ_0(0xD00000000000001ALL, 0x80000001D7ABE380))
  {
    oslog = sub_1D7A9B5D8();
    os_log_type_t v0 = sub_1D7A9C748();
    if (os_log_type_enabled(oslog, v0))
    {
      uint64_t v1 = (uint8_t *)swift_slowAlloc();
      uint64_t v2 = swift_slowAlloc();
      uint64_t v4 = v2;
      *(_DWORD *)uint64_t v1 = 136315138;
      sub_1D7923300(0xD000000000000031, 0x80000001D7AC38B0, &v4);
      sub_1D7A9C9E8();
      _os_log_impl(&dword_1D7853000, oslog, v0, "%s", v1, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v2, -1, -1);
      MEMORY[0x1D947D740](v1, -1, -1);
    }
    else
    {
    }
  }
}

void sub_1D7920EFC()
{
  if (_sSo14NSUserDefaultsC13CoreIDVSharedE18globalInternalBool6forKeySbSS_tFZ_0(0xD00000000000001ALL, 0x80000001D7ABE380))
  {
    oslog = sub_1D7A9B5D8();
    os_log_type_t v0 = sub_1D7A9C748();
    if (os_log_type_enabled(oslog, v0))
    {
      uint64_t v1 = (uint8_t *)swift_slowAlloc();
      uint64_t v2 = swift_slowAlloc();
      uint64_t v4 = v2;
      *(_DWORD *)uint64_t v1 = 136315138;
      sub_1D7923300(0xD000000000000033, 0x80000001D7AC38F0, &v4);
      sub_1D7A9C9E8();
      _os_log_impl(&dword_1D7853000, oslog, v0, "%s", v1, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v2, -1, -1);
      MEMORY[0x1D947D740](v1, -1, -1);
    }
    else
    {
    }
  }
}

void sub_1D7921080()
{
  if (_sSo14NSUserDefaultsC13CoreIDVSharedE18globalInternalBool6forKeySbSS_tFZ_0(0xD00000000000001ALL, 0x80000001D7ABE380))
  {
    oslog = sub_1D7A9B5D8();
    os_log_type_t v0 = sub_1D7A9C748();
    if (os_log_type_enabled(oslog, v0))
    {
      uint64_t v1 = (uint8_t *)swift_slowAlloc();
      uint64_t v2 = swift_slowAlloc();
      uint64_t v4 = v2;
      *(_DWORD *)uint64_t v1 = 136315138;
      sub_1D7923300(0xD000000000000047, 0x80000001D7AC3B10, &v4);
      sub_1D7A9C9E8();
      _os_log_impl(&dword_1D7853000, oslog, v0, "%s", v1, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v2, -1, -1);
      MEMORY[0x1D947D740](v1, -1, -1);
    }
    else
    {
    }
  }
}

void sub_1D7921204()
{
  if (_sSo14NSUserDefaultsC13CoreIDVSharedE18globalInternalBool6forKeySbSS_tFZ_0(0xD00000000000001ALL, 0x80000001D7ABE380))
  {
    oslog = sub_1D7A9B5D8();
    os_log_type_t v0 = sub_1D7A9C748();
    if (os_log_type_enabled(oslog, v0))
    {
      uint64_t v1 = (uint8_t *)swift_slowAlloc();
      uint64_t v2 = swift_slowAlloc();
      uint64_t v4 = v2;
      *(_DWORD *)uint64_t v1 = 136315138;
      sub_1D7923300(0xD000000000000037, 0x80000001D7AC3AD0, &v4);
      sub_1D7A9C9E8();
      _os_log_impl(&dword_1D7853000, oslog, v0, "%s", v1, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v2, -1, -1);
      MEMORY[0x1D947D740](v1, -1, -1);
    }
    else
    {
    }
  }
}

void sub_1D7921388()
{
  if (_sSo14NSUserDefaultsC13CoreIDVSharedE18globalInternalBool6forKeySbSS_tFZ_0(0xD00000000000001ALL, 0x80000001D7ABE380))
  {
    oslog = sub_1D7A9B5D8();
    os_log_type_t v0 = sub_1D7A9C748();
    if (os_log_type_enabled(oslog, v0))
    {
      uint64_t v1 = (uint8_t *)swift_slowAlloc();
      uint64_t v2 = swift_slowAlloc();
      uint64_t v4 = v2;
      *(_DWORD *)uint64_t v1 = 136315138;
      sub_1D7923300(0xD000000000000031, 0x80000001D7AC3A90, &v4);
      sub_1D7A9C9E8();
      _os_log_impl(&dword_1D7853000, oslog, v0, "%s", v1, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v2, -1, -1);
      MEMORY[0x1D947D740](v1, -1, -1);
    }
    else
    {
    }
  }
}

void sub_1D792150C()
{
  if (_sSo14NSUserDefaultsC13CoreIDVSharedE18globalInternalBool6forKeySbSS_tFZ_0(0xD00000000000001ALL, 0x80000001D7ABE380))
  {
    oslog = sub_1D7A9B5D8();
    os_log_type_t v0 = sub_1D7A9C748();
    if (os_log_type_enabled(oslog, v0))
    {
      uint64_t v1 = (uint8_t *)swift_slowAlloc();
      uint64_t v2 = swift_slowAlloc();
      uint64_t v4 = v2;
      *(_DWORD *)uint64_t v1 = 136315138;
      sub_1D7923300(0xD00000000000002FLL, 0x80000001D7AC3A60, &v4);
      sub_1D7A9C9E8();
      _os_log_impl(&dword_1D7853000, oslog, v0, "%s", v1, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v2, -1, -1);
      MEMORY[0x1D947D740](v1, -1, -1);
    }
    else
    {
    }
  }
}

void sub_1D7921690()
{
  if (_sSo14NSUserDefaultsC13CoreIDVSharedE18globalInternalBool6forKeySbSS_tFZ_0(0xD00000000000001ALL, 0x80000001D7ABE380))
  {
    oslog = sub_1D7A9B5D8();
    os_log_type_t v0 = sub_1D7A9C748();
    if (os_log_type_enabled(oslog, v0))
    {
      uint64_t v1 = (uint8_t *)swift_slowAlloc();
      uint64_t v2 = swift_slowAlloc();
      uint64_t v4 = v2;
      *(_DWORD *)uint64_t v1 = 136315138;
      sub_1D7923300(0xD000000000000030, 0x80000001D7AC3930, &v4);
      sub_1D7A9C9E8();
      _os_log_impl(&dword_1D7853000, oslog, v0, "%s", v1, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v2, -1, -1);
      MEMORY[0x1D947D740](v1, -1, -1);
    }
    else
    {
    }
  }
}

void sub_1D7921814()
{
  if (_sSo14NSUserDefaultsC13CoreIDVSharedE18globalInternalBool6forKeySbSS_tFZ_0(0xD00000000000001ALL, 0x80000001D7ABE380))
  {
    oslog = sub_1D7A9B5D8();
    os_log_type_t v0 = sub_1D7A9C748();
    if (os_log_type_enabled(oslog, v0))
    {
      uint64_t v1 = (uint8_t *)swift_slowAlloc();
      uint64_t v2 = swift_slowAlloc();
      uint64_t v4 = v2;
      *(_DWORD *)uint64_t v1 = 136315138;
      sub_1D7923300(0xD000000000000034, 0x80000001D7AC3970, &v4);
      sub_1D7A9C9E8();
      _os_log_impl(&dword_1D7853000, oslog, v0, "%s", v1, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v2, -1, -1);
      MEMORY[0x1D947D740](v1, -1, -1);
    }
    else
    {
    }
  }
}

void sub_1D7921998()
{
  if (_sSo14NSUserDefaultsC13CoreIDVSharedE18globalInternalBool6forKeySbSS_tFZ_0(0xD00000000000001ALL, 0x80000001D7ABE380))
  {
    oslog = sub_1D7A9B5D8();
    os_log_type_t v0 = sub_1D7A9C748();
    if (os_log_type_enabled(oslog, v0))
    {
      uint64_t v1 = (uint8_t *)swift_slowAlloc();
      uint64_t v2 = swift_slowAlloc();
      uint64_t v4 = v2;
      *(_DWORD *)uint64_t v1 = 136315138;
      sub_1D7923300(0xD000000000000038, 0x80000001D7AC39B0, &v4);
      sub_1D7A9C9E8();
      _os_log_impl(&dword_1D7853000, oslog, v0, "%s", v1, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v2, -1, -1);
      MEMORY[0x1D947D740](v1, -1, -1);
    }
    else
    {
    }
  }
}

void sub_1D7921B1C()
{
  if (_sSo14NSUserDefaultsC13CoreIDVSharedE18globalInternalBool6forKeySbSS_tFZ_0(0xD00000000000001ALL, 0x80000001D7ABE380))
  {
    oslog = sub_1D7A9B5D8();
    os_log_type_t v0 = sub_1D7A9C748();
    if (os_log_type_enabled(oslog, v0))
    {
      uint64_t v1 = (uint8_t *)swift_slowAlloc();
      uint64_t v2 = swift_slowAlloc();
      uint64_t v4 = v2;
      *(_DWORD *)uint64_t v1 = 136315138;
      sub_1D7923300(0xD000000000000035, 0x80000001D7AC33F0, &v4);
      sub_1D7A9C9E8();
      _os_log_impl(&dword_1D7853000, oslog, v0, "%s", v1, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v2, -1, -1);
      MEMORY[0x1D947D740](v1, -1, -1);
    }
    else
    {
    }
  }
}

void sub_1D7921CA0()
{
  if (_sSo14NSUserDefaultsC13CoreIDVSharedE18globalInternalBool6forKeySbSS_tFZ_0(0xD00000000000001ALL, 0x80000001D7ABE380))
  {
    oslog = sub_1D7A9B5D8();
    os_log_type_t v0 = sub_1D7A9C748();
    if (os_log_type_enabled(oslog, v0))
    {
      uint64_t v1 = (uint8_t *)swift_slowAlloc();
      uint64_t v2 = swift_slowAlloc();
      uint64_t v4 = v2;
      *(_DWORD *)uint64_t v1 = 136315138;
      sub_1D7923300(0xD000000000000035, 0x80000001D7AC39F0, &v4);
      sub_1D7A9C9E8();
      _os_log_impl(&dword_1D7853000, oslog, v0, "%s", v1, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v2, -1, -1);
      MEMORY[0x1D947D740](v1, -1, -1);
    }
    else
    {
    }
  }
}

void sub_1D7921E24()
{
  if (_sSo14NSUserDefaultsC13CoreIDVSharedE18globalInternalBool6forKeySbSS_tFZ_0(0xD00000000000001ALL, 0x80000001D7ABE380))
  {
    oslog = sub_1D7A9B5D8();
    os_log_type_t v0 = sub_1D7A9C748();
    if (os_log_type_enabled(oslog, v0))
    {
      uint64_t v1 = (uint8_t *)swift_slowAlloc();
      uint64_t v2 = swift_slowAlloc();
      uint64_t v4 = v2;
      *(_DWORD *)uint64_t v1 = 136315138;
      sub_1D7923300(0xD00000000000002CLL, 0x80000001D7AC3A30, &v4);
      sub_1D7A9C9E8();
      _os_log_impl(&dword_1D7853000, oslog, v0, "%s", v1, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v2, -1, -1);
      MEMORY[0x1D947D740](v1, -1, -1);
    }
    else
    {
    }
  }
}

void sub_1D7921FA8()
{
  if (_sSo14NSUserDefaultsC13CoreIDVSharedE18globalInternalBool6forKeySbSS_tFZ_0(0xD00000000000001ALL, 0x80000001D7ABE380))
  {
    oslog = sub_1D7A9B5D8();
    os_log_type_t v0 = sub_1D7A9C748();
    if (os_log_type_enabled(oslog, v0))
    {
      uint64_t v1 = (uint8_t *)swift_slowAlloc();
      uint64_t v2 = swift_slowAlloc();
      uint64_t v4 = v2;
      *(_DWORD *)uint64_t v1 = 136315138;
      sub_1D7923300(0xD00000000000003CLL, 0x80000001D7AC34E0, &v4);
      sub_1D7A9C9E8();
      _os_log_impl(&dword_1D7853000, oslog, v0, "%s", v1, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v2, -1, -1);
      MEMORY[0x1D947D740](v1, -1, -1);
    }
    else
    {
    }
  }
}

void sub_1D792212C()
{
  if (_sSo14NSUserDefaultsC13CoreIDVSharedE18globalInternalBool6forKeySbSS_tFZ_0(0xD00000000000001ALL, 0x80000001D7ABE380))
  {
    oslog = sub_1D7A9B5D8();
    os_log_type_t v0 = sub_1D7A9C748();
    if (os_log_type_enabled(oslog, v0))
    {
      uint64_t v1 = (uint8_t *)swift_slowAlloc();
      uint64_t v2 = swift_slowAlloc();
      uint64_t v4 = v2;
      *(_DWORD *)uint64_t v1 = 136315138;
      sub_1D7923300(0xD000000000000035, 0x80000001D7AC3560, &v4);
      sub_1D7A9C9E8();
      _os_log_impl(&dword_1D7853000, oslog, v0, "%s", v1, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v2, -1, -1);
      MEMORY[0x1D947D740](v1, -1, -1);
    }
    else
    {
    }
  }
}

void sub_1D79222B0()
{
  if (_sSo14NSUserDefaultsC13CoreIDVSharedE18globalInternalBool6forKeySbSS_tFZ_0(0xD00000000000001ALL, 0x80000001D7ABE380))
  {
    oslog = sub_1D7A9B5D8();
    os_log_type_t v0 = sub_1D7A9C748();
    if (os_log_type_enabled(oslog, v0))
    {
      uint64_t v1 = (uint8_t *)swift_slowAlloc();
      uint64_t v2 = swift_slowAlloc();
      uint64_t v4 = v2;
      *(_DWORD *)uint64_t v1 = 136315138;
      sub_1D7923300(0xD00000000000002ALL, 0x80000001D7AC35A0, &v4);
      sub_1D7A9C9E8();
      _os_log_impl(&dword_1D7853000, oslog, v0, "%s", v1, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v2, -1, -1);
      MEMORY[0x1D947D740](v1, -1, -1);
    }
    else
    {
    }
  }
}

void sub_1D7922434()
{
  if (_sSo14NSUserDefaultsC13CoreIDVSharedE18globalInternalBool6forKeySbSS_tFZ_0(0xD00000000000001ALL, 0x80000001D7ABE380))
  {
    oslog = sub_1D7A9B5D8();
    os_log_type_t v0 = sub_1D7A9C748();
    if (os_log_type_enabled(oslog, v0))
    {
      uint64_t v1 = (uint8_t *)swift_slowAlloc();
      uint64_t v2 = swift_slowAlloc();
      uint64_t v4 = v2;
      *(_DWORD *)uint64_t v1 = 136315138;
      sub_1D7923300(0xD000000000000028, 0x80000001D7AC35D0, &v4);
      sub_1D7A9C9E8();
      _os_log_impl(&dword_1D7853000, oslog, v0, "%s", v1, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v2, -1, -1);
      MEMORY[0x1D947D740](v1, -1, -1);
    }
    else
    {
    }
  }
}

void sub_1D79225B8()
{
  if (_sSo14NSUserDefaultsC13CoreIDVSharedE18globalInternalBool6forKeySbSS_tFZ_0(0xD00000000000001ALL, 0x80000001D7ABE380))
  {
    oslog = sub_1D7A9B5D8();
    os_log_type_t v0 = sub_1D7A9C748();
    if (os_log_type_enabled(oslog, v0))
    {
      uint64_t v1 = (uint8_t *)swift_slowAlloc();
      uint64_t v2 = swift_slowAlloc();
      uint64_t v4 = v2;
      *(_DWORD *)uint64_t v1 = 136315138;
      sub_1D7923300(0xD000000000000029, 0x80000001D7AC3600, &v4);
      sub_1D7A9C9E8();
      _os_log_impl(&dword_1D7853000, oslog, v0, "%s", v1, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v2, -1, -1);
      MEMORY[0x1D947D740](v1, -1, -1);
    }
    else
    {
    }
  }
}

void Logger.verboseIQ(_:)(uint64_t (*a1)(void))
{
  if (_sSo14NSUserDefaultsC13CoreIDVSharedE18globalInternalBool6forKeySbSS_tFZ_0(0xD00000000000001ALL, 0x80000001D7ABE380))
  {
    uint64_t v2 = a1();
    unint64_t v4 = v3;
    swift_bridgeObjectRetain();
    oslog = sub_1D7A9B5D8();
    os_log_type_t v5 = sub_1D7A9C748();
    if (os_log_type_enabled(oslog, v5))
    {
      unint64_t v6 = (uint8_t *)swift_slowAlloc();
      uint64_t v7 = swift_slowAlloc();
      uint64_t v9 = v7;
      *(_DWORD *)unint64_t v6 = 136315138;
      swift_bridgeObjectRetain();
      sub_1D7923300(v2, v4, &v9);
      sub_1D7A9C9E8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D7853000, oslog, v5, "%s", v6, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v7, -1, -1);
      MEMORY[0x1D947D740](v6, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
  }
}

void Logger.sensitive(_:)(uint64_t (*a1)(void))
{
  uint64_t v2 = objc_msgSend(self, sel_standardUserDefaults);
  if (qword_1EBDF9690 != -1)
  {
    unint64_t v13 = v2;
    swift_once();
    uint64_t v2 = v13;
  }
  if (byte_1EBDFBE68 == 1)
  {
    uint64_t v11 = v2;
    unint64_t v3 = (void *)sub_1D7A9BF98();
    unsigned __int8 v4 = [v11 BOOLForKey:v3];

    if ((v4 & 1) == 0) {
      return;
    }
    uint64_t v5 = a1();
    unint64_t v7 = v6;
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1D7A9B5D8();
    os_log_type_t v8 = sub_1D7A9C748();
    if (os_log_type_enabled(v12, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v10 = swift_slowAlloc();
      uint64_t v14 = v10;
      *(_DWORD *)uint64_t v9 = 136315138;
      swift_bridgeObjectRetain();
      sub_1D7923300(v5, v7, &v14);
      sub_1D7A9C9E8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D7853000, v12, v8, "%s", v9, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v10, -1, -1);
      MEMORY[0x1D947D740](v9, -1, -1);

      return;
    }
    swift_bridgeObjectRelease_n();
    uint64_t v2 = v12;
  }
}

Swift::Void __swiftcall logMilestone(tag:description:)(Swift::String tag, Swift::String description)
{
  object = description._object;
  uint64_t countAndFlagsBits = description._countAndFlagsBits;
  unsigned __int8 v4 = tag._object;
  uint64_t v5 = tag._countAndFlagsBits;
  uint64_t v6 = sub_1D7A9B5F8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6, v8, v9, v10, v11, v12, v13, v14);
  uint64_t v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBDF7B68 != -1) {
    swift_once();
  }
  uint64_t v17 = __swift_project_value_buffer(v6, (uint64_t)qword_1EBDFBDF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v16, v17, v6);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v18 = sub_1D7A9B5D8();
  os_log_type_t v19 = sub_1D7A9C748();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    uint64_t v25 = v23;
    *(_DWORD *)uint64_t v20 = 136315394;
    uint64_t v22 = countAndFlagsBits;
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_1D7923300(v5, (unint64_t)v4, &v25);
    sub_1D7A9C9E8();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v20 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_1D7923300(v22, (unint64_t)object, &v25);
    sub_1D7A9C9E8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D7853000, v18, v19, "(%s) %s", (uint8_t *)v20, 0x16u);
    uint64_t v21 = v23;
    swift_arrayDestroy();
    MEMORY[0x1D947D740](v21, -1, -1);
    MEMORY[0x1D947D740](v20, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v16, v6);
}

uint64_t sub_1D7922E14(uint64_t a1)
{
  return sub_1D7923034(a1, qword_1EBDFBE70);
}

uint64_t sub_1D7922E30(uint64_t a1)
{
  return sub_1D7923034(a1, qword_1EBDFBE50);
}

uint64_t setDefaultLogger(_:)(uint64_t a1)
{
  if (qword_1EBDF9DC8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D7A9B5F8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EBDFBE70);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 24))(v3, a1, v2);
  return swift_endAccess();
}

uint64_t analyticsLogger()@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EBDF9130 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1D7A9B5F8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EBDFBE50);
  unsigned __int8 v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

Swift::Void __swiftcall setProcessName(_:)(Swift::String a1)
{
  xmmword_1EBDF7848 = (__int128)a1;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
}

uint64_t sub_1D7923010(uint64_t a1)
{
  return sub_1D7923034(a1, qword_1EBDFBDF0);
}

uint64_t sub_1D7923034(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_1D7A9B5F8();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_1D7A9B5E8();
}

void Logger.logPADFrame(_:)(uint64_t (*a1)(void))
{
  uint64_t v2 = objc_msgSend(self, sel_standardUserDefaults);
  if (qword_1EBDF9690 != -1)
  {
    uint64_t v13 = v2;
    swift_once();
    uint64_t v2 = v13;
  }
  if (byte_1EBDFBE68 == 1)
  {
    uint64_t v11 = v2;
    uint64_t v3 = (void *)sub_1D7A9BF98();
    unsigned __int8 v4 = [v11 BOOLForKey:v3];

    if ((v4 & 1) == 0) {
      return;
    }
    uint64_t v5 = a1();
    unint64_t v7 = v6;
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1D7A9B5D8();
    os_log_type_t v8 = sub_1D7A9C748();
    if (os_log_type_enabled(v12, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v10 = swift_slowAlloc();
      uint64_t v14 = v10;
      *(_DWORD *)uint64_t v9 = 136315138;
      swift_bridgeObjectRetain();
      sub_1D7923300(v5, v7, &v14);
      sub_1D7A9C9E8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D7853000, v12, v8, "%s", v9, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v10, -1, -1);
      MEMORY[0x1D947D740](v9, -1, -1);

      return;
    }
    swift_bridgeObjectRelease_n();
    uint64_t v2 = v12;
  }
}

uint64_t sub_1D7923300(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_1D79233D4(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_1D78907D8((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x1E4FBB9B0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_1D78907D8((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_1D79233D4(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1D7A9C9F8();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_1D7923590(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_1D7A9CD78();
  if (!v8)
  {
    sub_1D7A9CF88();
    __break(1u);
LABEL_17:
    uint64_t result = sub_1D7A9D008();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_1D7923590(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_1D7923628(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1D79237A0(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_1D79237A0(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1D7923628(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_1D7A60F18(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_1D7A9CC58();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_1D7A9CF88();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_1D7A9C148();
      if (!v2) {
        return MEMORY[0x1E4FBC860];
      }
    }
    sub_1D7A9D008();
    __break(1u);
LABEL_14:
    uint64_t result = sub_1D7A9CF88();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

uint64_t sub_1D79237A0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDF9D80);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1D7A9D008();
  __break(1u);
  return result;
}

void sub_1D79238F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  int64_t v7 = objc_msgSend(self, sel_standardUserDefaults);
  if (qword_1EBDF9690 != -1)
  {
    uint64_t v17 = v7;
    swift_once();
    int64_t v7 = v17;
  }
  if (byte_1EBDFBE68 != 1) {
    goto LABEL_11;
  }
  uint64_t v15 = v7;
  int64_t v8 = (void *)sub_1D7A9BF98();
  unsigned __int8 v9 = [v15 BOOLForKey:v8];

  if ((v9 & 1) == 0) {
    return;
  }
  sub_1D7A9CC48();
  swift_bridgeObjectRelease();
  uint64_t v18 = 0xD000000000000012;
  unint64_t v19 = 0x80000001D7AC3470;
  swift_bridgeObjectRetain();
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  if ((a5 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (*(void *)(a4 + 16) <= a5)
  {
LABEL_15:
    __break(1u);
    return;
  }
  swift_bridgeObjectRetain();
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  uint64_t v11 = v18;
  unint64_t v10 = v19;
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_1D7A9B5D8();
  os_log_type_t v12 = sub_1D7A9C748();
  if (os_log_type_enabled(v16, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v18 = v14;
    *(_DWORD *)uint64_t v13 = 136315138;
    swift_bridgeObjectRetain();
    sub_1D7923300(v11, v10, &v18);
    sub_1D7A9C9E8();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D7853000, v16, v12, "%s", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D947D740](v14, -1, -1);
    MEMORY[0x1D947D740](v13, -1, -1);

    return;
  }
  swift_bridgeObjectRelease_n();
  int64_t v7 = v16;
LABEL_11:
}

void sub_1D7923BE8()
{
  os_log_type_t v0 = objc_msgSend(self, sel_standardUserDefaults);
  if (qword_1EBDF9690 != -1)
  {
    int64_t v8 = v0;
    swift_once();
    os_log_type_t v0 = v8;
  }
  if (byte_1EBDFBE68 == 1)
  {
    unint64_t v6 = v0;
    uint64_t v1 = (void *)sub_1D7A9BF98();
    unsigned __int8 v2 = [v6 BOOLForKey:v1];

    if ((v2 & 1) == 0) {
      return;
    }
    sub_1D7A9CC48();
    swift_bridgeObjectRelease();
    v9[1] = 0x80000001D7AC3490;
    swift_bridgeObjectRetain();
    sub_1D7A9C128();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    int64_t v7 = sub_1D7A9B5D8();
    os_log_type_t v3 = sub_1D7A9C748();
    if (os_log_type_enabled(v7, v3))
    {
      unint64_t v4 = (uint8_t *)swift_slowAlloc();
      uint64_t v5 = swift_slowAlloc();
      v9[0] = v5;
      *(_DWORD *)unint64_t v4 = 136315138;
      swift_bridgeObjectRetain();
      sub_1D7923300(0xD000000000000024, 0x80000001D7AC3490, v9);
      sub_1D7A9C9E8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D7853000, v7, v3, "%s", v4, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v5, -1, -1);
      MEMORY[0x1D947D740](v4, -1, -1);

      return;
    }
    swift_bridgeObjectRelease_n();
    os_log_type_t v0 = v7;
  }
}

void sub_1D7923E8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_1D7923EA4(uint64_t a1, uint64_t a2)
{
  os_log_type_t v3 = objc_msgSend(self, sel_standardUserDefaults);
  if (qword_1EBDF9690 != -1)
  {
    uint64_t v14 = v3;
    swift_once();
    os_log_type_t v3 = v14;
  }
  if (byte_1EBDFBE68 == 1)
  {
    os_log_type_t v12 = v3;
    unint64_t v4 = (void *)sub_1D7A9BF98();
    unsigned __int8 v5 = [v12 BOOLForKey:v4];

    if ((v5 & 1) == 0) {
      return;
    }
    unint64_t v6 = sub_1D786C7D8(a2);
    unint64_t v8 = v7;
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_1D7A9B5D8();
    os_log_type_t v9 = sub_1D7A9C748();
    if (os_log_type_enabled(v13, v9))
    {
      unint64_t v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      uint64_t v15 = v11;
      *(_DWORD *)unint64_t v10 = 136315138;
      swift_bridgeObjectRetain();
      sub_1D7923300(v6, v8, &v15);
      sub_1D7A9C9E8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D7853000, v13, v9, "%s", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v11, -1, -1);
      MEMORY[0x1D947D740](v10, -1, -1);

      return;
    }
    swift_bridgeObjectRelease_n();
    os_log_type_t v3 = v13;
  }
}

void sub_1D79240F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_1D7924110(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_1D7924130()
{
  os_log_type_t v0 = objc_msgSend(self, sel_standardUserDefaults);
  if (qword_1EBDF9690 != -1)
  {
    unint64_t v8 = v0;
    swift_once();
    os_log_type_t v0 = v8;
  }
  if (byte_1EBDFBE68 == 1)
  {
    unint64_t v6 = v0;
    uint64_t v1 = (void *)sub_1D7A9BF98();
    unsigned __int8 v2 = [v6 BOOLForKey:v1];

    if ((v2 & 1) == 0) {
      return;
    }
    v9[1] = 0xE000000000000000;
    sub_1D7A9CC48();
    sub_1D7A9C128();
    sub_1D7A9C128();
    swift_bridgeObjectRetain();
    unint64_t v7 = sub_1D7A9B5D8();
    os_log_type_t v3 = sub_1D7A9C748();
    if (os_log_type_enabled(v7, v3))
    {
      unint64_t v4 = (uint8_t *)swift_slowAlloc();
      uint64_t v5 = swift_slowAlloc();
      v9[0] = v5;
      *(_DWORD *)unint64_t v4 = 136315138;
      swift_bridgeObjectRetain();
      sub_1D7923300(0, 0xE000000000000000, v9);
      sub_1D7A9C9E8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D7853000, v7, v3, "%s", v4, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v5, -1, -1);
      MEMORY[0x1D947D740](v4, -1, -1);

      return;
    }
    swift_bridgeObjectRelease_n();
    os_log_type_t v0 = v7;
  }
}

void sub_1D79243C8()
{
  os_log_type_t v0 = objc_msgSend(self, sel_standardUserDefaults);
  if (qword_1EBDF9690 != -1)
  {
    unint64_t v8 = v0;
    swift_once();
    os_log_type_t v0 = v8;
  }
  if (byte_1EBDFBE68 == 1)
  {
    unint64_t v6 = v0;
    uint64_t v1 = (void *)sub_1D7A9BF98();
    unsigned __int8 v2 = [v6 BOOLForKey:v1];

    if ((v2 & 1) == 0) {
      return;
    }
    sub_1D7A9CC48();
    swift_bridgeObjectRelease();
    v9[1] = 0x80000001D7AC3CD0;
    sub_1D7A9B008();
    sub_1D7A9C128();
    swift_bridgeObjectRelease();
    sub_1D7A9C128();
    swift_bridgeObjectRetain();
    unint64_t v7 = sub_1D7A9B5D8();
    os_log_type_t v3 = sub_1D7A9C748();
    if (os_log_type_enabled(v7, v3))
    {
      unint64_t v4 = (uint8_t *)swift_slowAlloc();
      uint64_t v5 = swift_slowAlloc();
      v9[0] = v5;
      *(_DWORD *)unint64_t v4 = 136315138;
      swift_bridgeObjectRetain();
      sub_1D7923300(0xD00000000000001ELL, 0x80000001D7AC3CD0, v9);
      sub_1D7A9C9E8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D7853000, v7, v3, "%s", v4, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v5, -1, -1);
      MEMORY[0x1D947D740](v4, -1, -1);

      return;
    }
    swift_bridgeObjectRelease_n();
    os_log_type_t v0 = v7;
  }
}

void sub_1D7924680(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_1D79246A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_1D79246C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_1D79246E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_1D79246F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_1D7924710(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_1D7924728(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_1D7924740(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_1D7924760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  unint64_t v8 = objc_msgSend(self, sel_standardUserDefaults);
  if (qword_1EBDF9690 != -1)
  {
    uint64_t v16 = v8;
    swift_once();
    unint64_t v8 = v16;
  }
  if (byte_1EBDFBE68 == 1)
  {
    uint64_t v14 = v8;
    os_log_type_t v9 = (void *)sub_1D7A9BF98();
    unsigned __int8 v10 = [v14 BOOLForKey:v9];

    if ((v10 & 1) == 0) {
      return;
    }
    sub_1D7A9CC48();
    swift_bridgeObjectRelease();
    v17[1] = a6;
    sub_1D7A9B008();
    sub_1D7A9C128();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_1D7A9B5D8();
    os_log_type_t v11 = sub_1D7A9C748();
    if (os_log_type_enabled(v15, v11))
    {
      os_log_type_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      v17[0] = v13;
      *(_DWORD *)os_log_type_t v12 = 136315138;
      swift_bridgeObjectRetain();
      sub_1D7923300(a5, a6, v17);
      sub_1D7A9C9E8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D7853000, v15, v11, "%s", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v13, -1, -1);
      MEMORY[0x1D947D740](v12, -1, -1);

      return;
    }
    swift_bridgeObjectRelease_n();
    unint64_t v8 = v15;
  }
}

void sub_1D79249F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
}

void sub_1D7924A10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v15 = objc_msgSend(self, sel_standardUserDefaults);
  if (qword_1EBDF9690 != -1)
  {
    uint64_t v26 = v15;
    swift_once();
    uint64_t v15 = v26;
  }
  if (byte_1EBDFBE68 == 1)
  {
    uint64_t v24 = v15;
    uint64_t v16 = (void *)sub_1D7A9BF98();
    unsigned __int8 v17 = [v24 BOOLForKey:v16];

    if ((v17 & 1) == 0) {
      return;
    }
    uint64_t v18 = a8(a2, a3, a4, a5, a6, a7);
    unint64_t v20 = v19;
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_1D7A9B5D8();
    os_log_type_t v21 = sub_1D7A9C748();
    if (os_log_type_enabled(v25, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      uint64_t v27 = v23;
      *(_DWORD *)uint64_t v22 = 136315138;
      swift_bridgeObjectRetain();
      sub_1D7923300(v18, v20, &v27);
      sub_1D7A9C9E8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D7853000, v25, v21, "%s", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v23, -1, -1);
      MEMORY[0x1D947D740](v22, -1, -1);

      return;
    }
    swift_bridgeObjectRelease_n();
    uint64_t v15 = v25;
  }
}

void sub_1D7924C98(uint64_t a1, _OWORD *a2)
{
}

void sub_1D7924CB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_1D7924CD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_1D7924CE8(uint64_t a1, _OWORD *a2)
{
}

void sub_1D7924D08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  unint64_t v7 = objc_msgSend(self, sel_standardUserDefaults);
  if (qword_1EBDF9690 != -1)
  {
    uint64_t v18 = v7;
    swift_once();
    unint64_t v7 = v18;
  }
  if (byte_1EBDFBE68 == 1)
  {
    uint64_t v16 = v7;
    unint64_t v8 = (void *)sub_1D7A9BF98();
    unsigned __int8 v9 = [v16 BOOLForKey:v8];

    if ((v9 & 1) == 0) {
      return;
    }
    uint64_t v10 = a4(a2, a3);
    unint64_t v12 = v11;
    swift_bridgeObjectRetain();
    unsigned __int8 v17 = sub_1D7A9B5D8();
    os_log_type_t v13 = sub_1D7A9C748();
    if (os_log_type_enabled(v17, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      uint64_t v19 = v15;
      *(_DWORD *)uint64_t v14 = 136315138;
      swift_bridgeObjectRetain();
      sub_1D7923300(v10, v12, &v19);
      sub_1D7A9C9E8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D7853000, v17, v13, "%s", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v15, -1, -1);
      MEMORY[0x1D947D740](v14, -1, -1);

      return;
    }
    swift_bridgeObjectRelease_n();
    unint64_t v7 = v17;
  }
}

void sub_1D7924F64(uint64_t a1, _OWORD *a2)
{
  id v3 = objc_msgSend(self, sel_standardUserDefaults);
  if (qword_1EBDF9690 != -1)
  {
    id v16 = v3;
    swift_once();
    id v3 = v16;
  }
  if (byte_1EBDFBE68 == 1)
  {
    id v15 = v3;
    unint64_t v4 = (void *)sub_1D7A9BF98();
    unsigned __int8 v5 = objc_msgSend(v15, sel_BOOLForKey_, v4);

    if (v5)
    {
      *(void *)&v17[0] = 0;
      *((void *)&v17[0] + 1) = 0xE000000000000000;
      sub_1D7A9CC48();
      long long v19 = v17[0];
      sub_1D7A9C128();
      long long v6 = a2[7];
      v17[6] = a2[6];
      v17[7] = v6;
      v18[0] = a2[8];
      *(_OWORD *)((char *)v18 + 9) = *(_OWORD *)((char *)a2 + 137);
      long long v7 = a2[3];
      uint64_t v17[2] = a2[2];
      void v17[3] = v7;
      long long v8 = a2[5];
      v17[4] = a2[4];
      v17[5] = v8;
      long long v9 = a2[1];
      v17[0] = *a2;
      v17[1] = v9;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA843EE0);
      sub_1D7A9CE78();
      long long v10 = v19;
      swift_bridgeObjectRetain();
      unint64_t v11 = sub_1D7A9B5D8();
      os_log_type_t v12 = sub_1D7A9C748();
      if (os_log_type_enabled(v11, v12))
      {
        os_log_type_t v13 = (uint8_t *)swift_slowAlloc();
        uint64_t v14 = swift_slowAlloc();
        *(void *)&v17[0] = v14;
        *(_DWORD *)os_log_type_t v13 = 136315138;
        swift_bridgeObjectRetain();
        *(void *)&long long v19 = sub_1D7923300(v10, *((unint64_t *)&v10 + 1), (uint64_t *)v17);
        sub_1D7A9C9E8();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1D7853000, v11, v12, "%s", v13, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D947D740](v14, -1, -1);
        MEMORY[0x1D947D740](v13, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }
    }
  }
  else
  {
  }
}

void sub_1D7925244(uint64_t a1, unint64_t a2, unint64_t a3)
{
  if (_sSo14NSUserDefaultsC13CoreIDVSharedE18globalInternalBool6forKeySbSS_tFZ_0(0xD00000000000001ALL, 0x80000001D7ABE380))
  {
    uint64_t v5 = sub_1D790F424(a2, a3);
    unint64_t v7 = v6;
    swift_bridgeObjectRetain();
    oslog = sub_1D7A9B5D8();
    os_log_type_t v8 = sub_1D7A9C748();
    if (os_log_type_enabled(oslog, v8))
    {
      long long v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v10 = swift_slowAlloc();
      uint64_t v12 = v10;
      *(_DWORD *)long long v9 = 136315138;
      swift_bridgeObjectRetain();
      sub_1D7923300(v5, v7, &v12);
      sub_1D7A9C9E8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D7853000, oslog, v8, "%s", v9, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v10, -1, -1);
      MEMORY[0x1D947D740](v9, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
  }
}

void sub_1D7925404()
{
  os_log_type_t v0 = objc_msgSend(self, sel_standardUserDefaults);
  if (qword_1EBDF9690 != -1)
  {
    os_log_type_t v8 = v0;
    swift_once();
    os_log_type_t v0 = v8;
  }
  if (byte_1EBDFBE68 == 1)
  {
    unint64_t v6 = v0;
    uint64_t v1 = (void *)sub_1D7A9BF98();
    unsigned __int8 v2 = [v6 BOOLForKey:v1];

    if ((v2 & 1) == 0) {
      return;
    }
    sub_1D7A9CC48();
    swift_bridgeObjectRelease();
    v9[1] = 0x80000001D7AC3450;
    sub_1D7A9C128();
    swift_bridgeObjectRetain();
    unint64_t v7 = sub_1D7A9B5D8();
    os_log_type_t v3 = sub_1D7A9C748();
    if (os_log_type_enabled(v7, v3))
    {
      unint64_t v4 = (uint8_t *)swift_slowAlloc();
      uint64_t v5 = swift_slowAlloc();
      v9[0] = v5;
      *(_DWORD *)unint64_t v4 = 136315138;
      swift_bridgeObjectRetain();
      sub_1D7923300(0xD000000000000017, 0x80000001D7AC3450, v9);
      sub_1D7A9C9E8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D7853000, v7, v3, "%s", v4, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v5, -1, -1);
      MEMORY[0x1D947D740](v4, -1, -1);

      return;
    }
    swift_bridgeObjectRelease_n();
    os_log_type_t v0 = v7;
  }
}

void sub_1D7925690(uint64_t a1, uint64_t a2)
{
  os_log_type_t v3 = objc_msgSend(self, sel_standardUserDefaults);
  if (qword_1EBDF9690 != -1)
  {
    unint64_t v11 = v3;
    swift_once();
    os_log_type_t v3 = v11;
  }
  if (byte_1EBDFBE68 == 1)
  {
    long long v9 = v3;
    unint64_t v4 = (void *)sub_1D7A9BF98();
    unsigned __int8 v5 = [v9 BOOLForKey:v4];

    if ((v5 & 1) == 0) {
      return;
    }
    sub_1D7A9CC48();
    swift_bridgeObjectRelease();
    v12[1] = 0x80000001D7AC34C0;
    MEMORY[0x1D947B0F0](a2, MEMORY[0x1E4FBB1A0]);
    sub_1D7A9C128();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1D7A9B5D8();
    os_log_type_t v6 = sub_1D7A9C748();
    if (os_log_type_enabled(v10, v6))
    {
      unint64_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v8 = swift_slowAlloc();
      v12[0] = v8;
      *(_DWORD *)unint64_t v7 = 136315138;
      swift_bridgeObjectRetain();
      sub_1D7923300(0xD000000000000010, 0x80000001D7AC34C0, v12);
      sub_1D7A9C9E8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D7853000, v10, v6, "%s", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v8, -1, -1);
      MEMORY[0x1D947D740](v7, -1, -1);

      return;
    }
    swift_bridgeObjectRelease_n();
    os_log_type_t v3 = v10;
  }
}

void sub_1D792592C()
{
  os_log_type_t v0 = objc_msgSend(self, sel_standardUserDefaults);
  if (qword_1EBDF9690 != -1)
  {
    unint64_t v11 = v0;
    swift_once();
    os_log_type_t v0 = v11;
  }
  if (byte_1EBDFBE68 == 1)
  {
    long long v9 = v0;
    uint64_t v1 = (void *)sub_1D7A9BF98();
    unsigned __int8 v2 = [v9 BOOLForKey:v1];

    if ((v2 & 1) == 0) {
      return;
    }
    uint64_t v3 = sub_1D7A4CE1C();
    unint64_t v5 = v4;
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1D7A9B5D8();
    os_log_type_t v6 = sub_1D7A9C748();
    if (os_log_type_enabled(v10, v6))
    {
      unint64_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v8 = swift_slowAlloc();
      uint64_t v12 = v8;
      *(_DWORD *)unint64_t v7 = 136315138;
      swift_bridgeObjectRetain();
      sub_1D7923300(v3, v5, &v12);
      sub_1D7A9C9E8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D7853000, v10, v6, "%s", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v8, -1, -1);
      MEMORY[0x1D947D740](v7, -1, -1);

      return;
    }
    swift_bridgeObjectRelease_n();
    os_log_type_t v0 = v10;
  }
}

void sub_1D7925B80(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v5 = objc_msgSend(self, sel_standardUserDefaults);
  if (qword_1EBDF9690 != -1)
  {
    id v16 = v5;
    swift_once();
    unint64_t v5 = v16;
  }
  if (byte_1EBDFBE68 == 1)
  {
    uint64_t v14 = v5;
    os_log_type_t v6 = (void *)sub_1D7A9BF98();
    unsigned __int8 v7 = [v14 BOOLForKey:v6];

    if ((v7 & 1) == 0) {
      return;
    }
    unint64_t v8 = sub_1D7A4F538(a2, a3);
    unint64_t v10 = v9;
    swift_bridgeObjectRetain();
    id v15 = sub_1D7A9B5D8();
    os_log_type_t v11 = sub_1D7A9C748();
    if (os_log_type_enabled(v15, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      uint64_t v17 = v13;
      *(_DWORD *)uint64_t v12 = 136315138;
      swift_bridgeObjectRetain();
      sub_1D7923300(v8, v10, &v17);
      sub_1D7A9C9E8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D7853000, v15, v11, "%s", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v13, -1, -1);
      MEMORY[0x1D947D740](v12, -1, -1);

      return;
    }
    swift_bridgeObjectRelease_n();
    unint64_t v5 = v15;
  }
}

void sub_1D7925DD4()
{
  os_log_type_t v0 = objc_msgSend(self, sel_standardUserDefaults);
  if (qword_1EBDF9690 != -1)
  {
    os_log_type_t v11 = v0;
    swift_once();
    os_log_type_t v0 = v11;
  }
  if (byte_1EBDFBE68 == 1)
  {
    unint64_t v9 = v0;
    uint64_t v1 = (void *)sub_1D7A9BF98();
    unsigned __int8 v2 = [v9 BOOLForKey:v1];

    if ((v2 & 1) == 0) {
      return;
    }
    uint64_t v3 = sub_1D7A4F6D0();
    unint64_t v5 = v4;
    swift_bridgeObjectRetain();
    unint64_t v10 = sub_1D7A9B5D8();
    os_log_type_t v6 = sub_1D7A9C748();
    if (os_log_type_enabled(v10, v6))
    {
      unsigned __int8 v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v8 = swift_slowAlloc();
      uint64_t v12 = v8;
      *(_DWORD *)unsigned __int8 v7 = 136315138;
      swift_bridgeObjectRetain();
      sub_1D7923300(v3, v5, &v12);
      sub_1D7A9C9E8();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D7853000, v10, v6, "%s", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D947D740](v8, -1, -1);
      MEMORY[0x1D947D740](v7, -1, -1);

      return;
    }
    swift_bridgeObjectRelease_n();
    os_log_type_t v0 = v10;
  }
}

uint64_t sub_1D7926020(int a1, size_t a2)
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    uint64_t result = sub_1D7A9CF88();
    __break(1u);
  }
  else
  {
    if (!a2) {
      return MEMORY[0x1E4FBC860];
    }
    uint64_t v4 = sub_1D7A9C388();
    *(void *)(v4 + 16) = a2;
    memset((void *)(v4 + 32), a1, a2);
    return v4;
  }
  return result;
}

uint64_t randomData(numBytes:)(size_t a1)
{
  uint64_t v2 = sub_1D7926020(0, a1);
  uint64_t v3 = (const __SecRandom *)*MEMORY[0x1E4F3BC60];
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = (uint64_t)sub_1D789E0D8(0, *(void *)(v2 + 16), 0, (char *)v2);
  }
  if (SecRandomCopyBytes(v3, a1, (void *)(v2 + 32)))
  {
    sub_1D7A9CC48();
    swift_bridgeObjectRelease();
    sub_1D7A9D258();
    sub_1D7A9C128();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1D7A9CF98();
    __break(1u);
  }
  else
  {
    uint64_t v4 = sub_1D78D1EB0(v2);
    swift_bridgeObjectRelease();
    return v4;
  }
  return result;
}

uint64_t Collection.nilIfEmpty.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v5 = sub_1D7A9C6A8();
  uint64_t v6 = *(void *)(a1 - 8);
  if (v5)
  {
    uint64_t v7 = 1;
  }
  else
  {
    uint64_t v10 = *(void *)(a1 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(a2, v2, a1);
    uint64_t v6 = v10;
    uint64_t v7 = 0;
  }
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
  return v8(a2, v7, 1, a1);
}

Swift::Void __swiftcall debugLogFootprint(_:)(Swift::String a1)
{
  object = a1._object;
  uint64_t countAndFlagsBits = a1._countAndFlagsBits;
  v49[4] = *MEMORY[0x1E4F143B8];
  uint64_t v3 = sub_1D7A9B5F8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v5, v6, v7, v8, v9, v10, v11);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBDF9690 != -1) {
    swift_once();
  }
  if (byte_1EBDFBE68 == 1)
  {
    pid_t v14 = getpid();
    long long v47 = 0u;
    long long v48 = 0u;
    long long v45 = 0u;
    long long v46 = 0u;
    long long v43 = 0u;
    long long v44 = 0u;
    long long v41 = 0u;
    long long v42 = 0u;
    long long v39 = 0u;
    long long v40 = 0u;
    long long v37 = 0u;
    long long v38 = 0u;
    long long v35 = 0u;
    long long v36 = 0u;
    long long v33 = 0u;
    long long v34 = 0u;
    long long v31 = 0u;
    long long v32 = 0u;
    long long v29 = 0u;
    long long v30 = 0u;
    long long v28 = 0u;
    long long v26 = 0u;
    long long v27 = 0u;
    long long v24 = 0u;
    long long v25 = 0u;
    memset(v23, 0, sizeof(v23));
    if (!proc_pid_rusage(v14, 6, v23))
    {
      unint64_t v15 = *((void *)&v24 + 1);
      if (qword_1EBDF9DC8 != -1) {
        swift_once();
      }
      uint64_t v16 = __swift_project_value_buffer(v3, (uint64_t)qword_1EBDFBE70);
      swift_beginAccess();
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v13, v16, v3);
      swift_bridgeObjectRetain_n();
      sub_1D785C27C();
      sub_1D785C27C();
      uint64_t v17 = sub_1D7A9B5D8();
      os_log_type_t v18 = sub_1D7A9C748();
      if (os_log_type_enabled(v17, v18))
      {
        uint64_t v19 = swift_slowAlloc();
        uint64_t v21 = swift_slowAlloc();
        v49[0] = v21;
        *(_DWORD *)uint64_t v19 = 136315650;
        swift_bridgeObjectRetain();
        double v22 = COERCE_DOUBLE(sub_1D7923300(countAndFlagsBits, (unint64_t)object, v49));
        sub_1D7A9C9E8();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v19 + 12) = 1040;
        LODWORD(v22) = 2;
        sub_1D7A9C9E8();
        *(_WORD *)(v19 + 18) = 2048;
        double v22 = (double)v15 * 0.000000953674316;
        sub_1D7A9C9E8();
        _os_log_impl(&dword_1D7853000, v17, v18, "[%s] dirty footprint: %.*f MB", (uint8_t *)v19, 0x1Cu);
        uint64_t v20 = v21;
        swift_arrayDestroy();
        MEMORY[0x1D947D740](v20, -1, -1);
        MEMORY[0x1D947D740](v19, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      (*(void (**)(char *, uint64_t))(v4 + 8))(v13, v3);
    }
  }
}

uint64_t Data.xor(with:)(uint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v69 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = 0;
  switch(a4 >> 62)
  {
    case 1uLL:
      LODWORD(v5) = HIDWORD(a3) - a3;
      if (__OFSUB__(HIDWORD(a3), a3)) {
        goto LABEL_74;
      }
      uint64_t v5 = (int)v5;
      break;
    case 2uLL:
      uint64_t v7 = *(void *)(a3 + 16);
      uint64_t v6 = *(void *)(a3 + 24);
      BOOL v8 = __OFSUB__(v6, v7);
      uint64_t v5 = v6 - v7;
      if (!v8) {
        break;
      }
      goto LABEL_75;
    case 3uLL:
      break;
    default:
      uint64_t v5 = BYTE6(a4);
      break;
  }
  unint64_t v59 = a2 >> 62;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v9) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_76;
      }
      uint64_t v9 = (int)v9;
LABEL_11:
      if (v5 == v9)
      {
        if (v59)
        {
          if (v59 == 1)
          {
            if (__OFSUB__(HIDWORD(a1), a1))
            {
LABEL_78:
              __break(1u);
              goto LABEL_79;
            }
            uint64_t v12 = HIDWORD(a1) - (int)a1;
          }
          else
          {
            uint64_t v17 = *(void *)(a1 + 16);
            uint64_t v16 = *(void *)(a1 + 24);
            uint64_t v12 = v16 - v17;
            if (__OFSUB__(v16, v17))
            {
LABEL_79:
              __break(1u);
LABEL_80:
              __break(1u);
LABEL_81:
              __break(1u);
LABEL_82:
              __break(1u);
LABEL_83:
              __break(1u);
LABEL_84:
              __break(1u);
            }
          }
          if (v12 < 0)
          {
LABEL_73:
            __break(1u);
LABEL_74:
            __break(1u);
LABEL_75:
            __break(1u);
LABEL_76:
            __break(1u);
LABEL_77:
            __break(1u);
            goto LABEL_78;
          }
        }
        else
        {
          uint64_t v12 = BYTE6(a2);
        }
        if (v12)
        {
          unint64_t v40 = HIDWORD(a1);
          int64_t v18 = 0;
          int64_t v55 = (int)a3;
          uint64_t v54 = (uint64_t)a3 >> 32;
          uint64_t v41 = a1 >> 32;
          unint64_t v42 = BYTE6(a2);
          int64_t v43 = (int)a1;
          uint64_t v19 = (char *)MEMORY[0x1E4FBC860];
          unint64_t v52 = a3 >> 16;
          unint64_t v53 = a3 >> 8;
          unint64_t v50 = HIDWORD(a3);
          unint64_t v51 = a3 >> 24;
          unint64_t v48 = HIWORD(a3);
          unint64_t v49 = a3 >> 40;
          unint64_t v46 = a4 >> 8;
          unint64_t v47 = HIBYTE(a3);
          unint64_t v44 = a4 >> 24;
          unint64_t v45 = a4 >> 16;
          unint64_t v58 = a4 >> 62;
          unint64_t v57 = a3;
          while (v12 != v18)
          {
            int64_t v20 = v18 + 1;
            switch(v58)
            {
              case 1uLL:
                if (v18 < v55 || v18 >= v54) {
                  goto LABEL_62;
                }
                uint64_t v24 = sub_1D7A9AC98();
                if (!v24) {
                  goto LABEL_81;
                }
                uint64_t v25 = v24;
                uint64_t v26 = sub_1D7A9ACB8();
                int64_t v27 = v18 - v26;
                if (!__OFSUB__(v18, v26)) {
                  goto LABEL_39;
                }
                goto LABEL_64;
              case 2uLL:
                if (v18 < *(void *)(a3 + 16)) {
                  goto LABEL_63;
                }
                if (v18 >= *(void *)(a3 + 24)) {
                  goto LABEL_65;
                }
                uint64_t v28 = sub_1D7A9AC98();
                if (!v28) {
                  goto LABEL_82;
                }
                uint64_t v25 = v28;
                uint64_t v29 = sub_1D7A9ACB8();
                int64_t v27 = v18 - v29;
                if (__OFSUB__(v18, v29)) {
                  goto LABEL_67;
                }
LABEL_39:
                char v21 = *(unsigned char *)(v25 + v27);
                int v22 = v59;
                if (v59)
                {
LABEL_40:
                  if (v22 == 1)
                  {
                    if (v18 < v43 || v18 >= v41) {
                      goto LABEL_68;
                    }
                    uint64_t v30 = sub_1D7A9AC98();
                    if (!v30) {
                      goto LABEL_83;
                    }
                    uint64_t v31 = v30;
                    uint64_t v32 = sub_1D7A9ACB8();
                    int64_t v33 = v18 - v32;
                    if (__OFSUB__(v18, v32)) {
                      goto LABEL_70;
                    }
                  }
                  else
                  {
                    if (v18 < *(void *)(a1 + 16)) {
                      goto LABEL_69;
                    }
                    if (v18 >= *(void *)(a1 + 24)) {
                      goto LABEL_71;
                    }
                    uint64_t v34 = sub_1D7A9AC98();
                    if (!v34) {
                      goto LABEL_84;
                    }
                    uint64_t v31 = v34;
                    uint64_t v35 = sub_1D7A9ACB8();
                    int64_t v33 = v18 - v35;
                    if (__OFSUB__(v18, v35)) {
                      goto LABEL_72;
                    }
                  }
                  char v23 = *(unsigned char *)(v31 + v33);
                }
                else
                {
LABEL_27:
                  if (v18 >= v42) {
                    goto LABEL_66;
                  }
                  __int16 v60 = a1;
                  char v61 = BYTE2(a1);
                  char v62 = BYTE3(a1);
                  char v63 = v40;
                  char v64 = BYTE5(a1);
                  char v65 = BYTE6(a1);
                  char v66 = HIBYTE(a1);
                  int v67 = a2;
                  __int16 v68 = WORD2(a2);
                  char v23 = *((unsigned char *)&v60 + v18);
                }
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  uint64_t v19 = sub_1D789E0D8(0, *((void *)v19 + 2) + 1, 1, v19);
                }
                unint64_t v37 = *((void *)v19 + 2);
                unint64_t v36 = *((void *)v19 + 3);
                if (v37 >= v36 >> 1) {
                  uint64_t v19 = sub_1D789E0D8((char *)(v36 > 1), v37 + 1, 1, v19);
                }
                *((void *)v19 + 2) = v37 + 1;
                v19[v37 + 32] = v23 ^ v21;
                int64_t v18 = v20;
                a3 = v57;
                if (v12 == v20) {
                  goto LABEL_59;
                }
                break;
              case 3uLL:
                goto LABEL_80;
              default:
                if (v18 >= (unint64_t)BYTE6(a4)) {
                  goto LABEL_61;
                }
                LOBYTE(v60) = a3;
                HIBYTE(v60) = v53;
                char v61 = v52;
                char v62 = v51;
                char v63 = v50;
                char v64 = v49;
                char v65 = v48;
                char v66 = v47;
                LOBYTE(v67) = a4;
                BYTE1(v67) = v46;
                BYTE2(v67) = v45;
                HIBYTE(v67) = v44;
                __int16 v68 = WORD2(a4);
                char v21 = *((unsigned char *)&v60 + v18);
                int v22 = v59;
                if (!v59) {
                  goto LABEL_27;
                }
                goto LABEL_40;
            }
          }
          __break(1u);
LABEL_61:
          __break(1u);
LABEL_62:
          __break(1u);
LABEL_63:
          __break(1u);
LABEL_64:
          __break(1u);
LABEL_65:
          __break(1u);
LABEL_66:
          __break(1u);
LABEL_67:
          __break(1u);
LABEL_68:
          __break(1u);
LABEL_69:
          __break(1u);
LABEL_70:
          __break(1u);
LABEL_71:
          __break(1u);
LABEL_72:
          __break(1u);
          goto LABEL_73;
        }
LABEL_58:
        uint64_t v19 = (char *)MEMORY[0x1E4FBC860];
LABEL_59:
        uint64_t v38 = sub_1D78D1EB0((uint64_t)v19);
        swift_bridgeObjectRelease();
        return v38;
      }
      else
      {
LABEL_17:
        __int16 v60 = 0;
        unint64_t v13 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
        sub_1D7860544();
        swift_allocError();
        DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000017, 0x80000001D7AC3FD0, &v60, 0, v13, 0xD000000000000056, 0x80000001D7AC3FF0, v14, 0x6874697728726F78, 0xEA0000000000293ALL, 51);
        return swift_willThrow();
      }
    case 2uLL:
      uint64_t v11 = *(void *)(a1 + 16);
      uint64_t v10 = *(void *)(a1 + 24);
      BOOL v8 = __OFSUB__(v10, v11);
      uint64_t v9 = v10 - v11;
      if (!v8) {
        goto LABEL_11;
      }
      goto LABEL_77;
    case 3uLL:
      if (v5) {
        goto LABEL_17;
      }
      goto LABEL_58;
    default:
      uint64_t v9 = BYTE6(a2);
      goto LABEL_11;
  }
}

unint64_t ISO18013KnownDocTypes.rawValue.getter()
{
  if (*v0) {
    return 0xD000000000000016;
  }
  else {
    return 0xD000000000000015;
  }
}

unint64_t ISO18013KnownNamespaces.rawValue.getter()
{
  unint64_t result = 0xD000000000000011;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000017;
      break;
    case 2:
      unint64_t result = 0x2E6F73692E67726FLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t ISO18013_5_1_ElementIdentifier.rawValue.getter()
{
  uint64_t result = 0x616E5F6E65766967;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6E5F796C696D6166;
      break;
    case 2:
      uint64_t v2 = 0x5F6874726962;
      goto LABEL_5;
    case 3:
      uint64_t v2 = 0x5F6575737369;
LABEL_5:
      uint64_t result = v2 & 0xFFFFFFFFFFFFLL | 0x6164000000000000;
      break;
    case 4:
      uint64_t result = 0x645F797269707865;
      break;
    case 5:
      uint64_t result = 0x5F676E6975737369;
      break;
    case 6:
      uint64_t result = 0xD000000000000011;
      break;
    case 7:
      uint64_t result = 0x746E656D75636F64;
      break;
    case 8:
      uint64_t result = 0x7469617274726F70;
      break;
    case 9:
      uint64_t result = 0xD000000000000012;
      break;
    case 0xA:
      uint64_t result = 0xD000000000000016;
      break;
    case 0xB:
      uint64_t result = 0xD000000000000015;
      break;
    case 0xC:
      uint64_t result = 7890291;
      break;
    case 0xD:
      uint64_t result = 0x746867696568;
      break;
    case 0xE:
      uint64_t result = 0x746867696577;
      break;
    case 0xF:
      uint64_t result = 0x6F6C6F635F657965;
      break;
    case 0x10:
      uint64_t result = 0x6C6F635F72696168;
      break;
    case 0x11:
      uint64_t result = 0x6C705F6874726962;
      break;
    case 0x12:
      uint64_t result = 0xD000000000000010;
      break;
    case 0x13:
      uint64_t result = 0xD000000000000015;
      break;
    case 0x14:
      uint64_t result = 0x795F6E695F656761;
      break;
    case 0x15:
      uint64_t result = 0x747269625F656761;
      break;
    case 0x16:
    case 0x1A:
    case 0x1E:
      uint64_t result = 0xD000000000000014;
      break;
    case 0x17:
      uint64_t result = 0x6C616E6F6974616ELL;
      break;
    case 0x18:
    case 0x19:
      uint64_t result = 0x746E656469736572;
      break;
    case 0x1B:
      uint64_t result = 0xD000000000000010;
      break;
    case 0x1C:
      uint64_t result = 0xD00000000000001ELL;
      break;
    case 0x1D:
      uint64_t result = 0xD00000000000001DLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t ISO18013_5_1_DrivingPrivilegeIdentifier.rawValue.getter()
{
  unint64_t result = 0xD000000000000015;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x61645F6575737369;
      break;
    case 2:
      unint64_t result = 0x645F797269707865;
      break;
    case 3:
      unint64_t result = 0x7365646F63;
      break;
    case 4:
      unint64_t result = 1701080931;
      break;
    case 5:
      unint64_t result = 1852270963;
      break;
    case 6:
      unint64_t result = 0x65756C6176;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t ISO18013_AAMVA_ElementIdentifier.rawValue.getter()
{
  unint64_t result = 0xD00000000000001BLL;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6675735F656D616ELL;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0x6F645F6E6167726FLL;
      break;
    case 4:
      unint64_t result = 0x6E617265746576;
      break;
    case 5:
      unint64_t result = 0xD000000000000016;
      break;
    case 6:
      unint64_t result = 0xD000000000000015;
      break;
    case 7:
      unint64_t result = 0x696D61665F616B61;
      break;
    case 8:
      unint64_t result = 0x657669675F616B61;
      break;
    case 9:
      unint64_t result = 0x666675735F616B61;
      break;
    case 0xA:
      unint64_t result = 0x725F746867696577;
      break;
    case 0xB:
      unint64_t result = 0x6874655F65636172;
      break;
    case 0xC:
      unint64_t result = 0x706D6F635F534844;
      break;
    case 0xE:
      unint64_t result = 0x646572635F6C6465;
      break;
    case 0xF:
      unint64_t result = 0xD000000000000010;
      break;
    case 0x10:
      unint64_t result = 0xD000000000000022;
      break;
    case 0x11:
      unint64_t result = 7890291;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t ISO18013_AAMVA_DomesticDrivingPrivilegeIdentifier.rawValue.getter()
{
  unint64_t result = 0xD000000000000016;
  switch(*v0)
  {
    case 1:
    case 2:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 3:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 4:
      unint64_t result = 0xD000000000000022;
      break;
    case 5:
      unint64_t result = 0x61645F6575737369;
      break;
    case 6:
      unint64_t result = 0x645F797269707865;
      break;
    case 7:
      unint64_t result = 0xD000000000000021;
      break;
    case 8:
      unint64_t result = 0xD000000000000028;
      break;
    case 9:
      unint64_t result = 0xD000000000000021;
      break;
    case 0xA:
      unint64_t result = 0xD000000000000028;
      break;
    default:
      return result;
  }
  return result;
}

CoreIDVShared::ISO18013KnownDocTypes_optional __swiftcall ISO18013KnownDocTypes.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1D7A9D058();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_1D792762C(char *a1, char *a2)
{
  return sub_1D79969A4(*a1, *a2);
}

uint64_t sub_1D7927638()
{
  return sub_1D7A1E5B8();
}

uint64_t sub_1D7927640()
{
  sub_1D7A9C0B8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D79276B0()
{
  return sub_1D7A1F660();
}

CoreIDVShared::ISO18013KnownDocTypes_optional sub_1D79276B8(Swift::String *a1)
{
  return ISO18013KnownDocTypes.init(rawValue:)(*a1);
}

void sub_1D79276C4(unint64_t *a1@<X8>)
{
  unint64_t v2 = 0xD000000000000015;
  if (*v1) {
    unint64_t v2 = 0xD000000000000016;
  }
  unint64_t v3 = 0x80000001D7ABB700;
  if (!*v1) {
    unint64_t v3 = 0x80000001D7ABB6E0;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1D7927704()
{
  return sub_1D7A9C2B8();
}

uint64_t sub_1D7927764()
{
  return sub_1D7A9C258();
}

CoreIDVShared::ISO18013KnownNamespaces_optional __swiftcall ISO18013KnownNamespaces.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_1D7A9D058();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

uint64_t sub_1D7927810(unsigned __int8 *a1, char *a2)
{
  return sub_1D7995F48(*a1, *a2);
}

uint64_t sub_1D792781C()
{
  return sub_1D7A1E63C();
}

uint64_t sub_1D7927824()
{
  return sub_1D7A351C4();
}

uint64_t sub_1D792782C()
{
  return sub_1D7A1F6E0();
}

CoreIDVShared::ISO18013KnownNamespaces_optional sub_1D7927834(Swift::String *a1)
{
  return ISO18013KnownNamespaces.init(rawValue:)(*a1);
}

unint64_t sub_1D7927840@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = ISO18013KnownNamespaces.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1D7927868()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA843FE0);
  __swift_allocate_value_buffer(v0, qword_1EA843EE8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EA843EE8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA843FE8);
  return sub_1D7A9B4D8();
}

void static ISO18013_5_1_ElementIdentifier.namespaceIdentifier.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t static ISO18013_5_1_ElementIdentifier.ageOver(nn:)(uint64_t a1)
{
  uint64_t v2 = sub_1D7A9AE98();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4, v5, v6, v7, v8, v9, v10);
  uint64_t v12 = (char *)v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1D7A9B228();
  MEMORY[0x1F4188790](v13 - 8, v14, v15, v16, v17, v18, v19, v20);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8432D0);
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v30 = MEMORY[0x1F4188790](v21, v23, v24, v25, v26, v27, v28, v29);
  uint64_t v32 = (char *)v44 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v30, v33, v34, v35, v36, v37, v38, v39);
  uint64_t v41 = (char *)v44 - v40;
  uint64_t v45 = 0x7265766F5F656761;
  unint64_t v46 = 0xE90000000000005FLL;
  v44[1] = a1;
  sub_1D7A9B1D8();
  sub_1D78CDF34();
  sub_1D7A9AD88();
  v44[2] = 2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8432D8);
  sub_1D7871DDC(&qword_1EA8432E0, &qword_1EA8432D8);
  sub_1D7A9AE88();
  MEMORY[0x1D9479B10](v12, v21);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v12, v2);
  unint64_t v42 = *(void (**)(char *, uint64_t))(v22 + 8);
  v42(v32, v21);
  sub_1D7871DDC(&qword_1EA8432E8, &qword_1EA8432D0);
  sub_1D7A9CA78();
  v42(v41, v21);
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  return v45;
}

CoreIDVShared::ISO18013_5_1_ElementIdentifier_optional __swiftcall ISO18013_5_1_ElementIdentifier.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_1D7A9D478();
  result.value = swift_bridgeObjectRelease();
  char v5 = 0;
  char v6 = 13;
  switch(v3)
  {
    case 0:
      goto LABEL_15;
    case 1:
      char v5 = 1;
      goto LABEL_15;
    case 2:
      char v5 = 2;
      goto LABEL_15;
    case 3:
      char v5 = 3;
      goto LABEL_15;
    case 4:
      char v5 = 4;
      goto LABEL_15;
    case 5:
      char v5 = 5;
      goto LABEL_15;
    case 6:
      char v5 = 6;
      goto LABEL_15;
    case 7:
      char v5 = 7;
      goto LABEL_15;
    case 8:
      char v5 = 8;
      goto LABEL_15;
    case 9:
      char v5 = 9;
      goto LABEL_15;
    case 10:
      char v5 = 10;
      goto LABEL_15;
    case 11:
      char v5 = 11;
      goto LABEL_15;
    case 12:
      char v5 = 12;
LABEL_15:
      char v6 = v5;
      break;
    case 13:
      break;
    case 14:
      char v6 = 14;
      break;
    case 15:
      char v6 = 15;
      break;
    case 16:
      char v6 = 16;
      break;
    case 17:
      char v6 = 17;
      break;
    case 18:
      char v6 = 18;
      break;
    case 19:
      char v6 = 19;
      break;
    case 20:
      char v6 = 20;
      break;
    case 21:
      char v6 = 21;
      break;
    case 22:
      char v6 = 22;
      break;
    case 23:
      char v6 = 23;
      break;
    case 24:
      char v6 = 24;
      break;
    case 25:
      char v6 = 25;
      break;
    case 26:
      char v6 = 26;
      break;
    case 27:
      char v6 = 27;
      break;
    case 28:
      char v6 = 28;
      break;
    case 29:
      char v6 = 29;
      break;
    case 30:
      char v6 = 30;
      break;
    default:
      char v6 = 31;
      break;
  }
  *uint64_t v2 = v6;
  return result;
}

void *static ISO18013_5_1_ElementIdentifier.allCases.getter()
{
  return &unk_1F2F17448;
}

uint64_t sub_1D7927DEC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D79953F0(*a1, *a2);
}

uint64_t sub_1D7927DF8(uint64_t a1, uint64_t a2)
{
  return sub_1D7927F94(a1, a2, (void (*)(uint64_t))ISO18013_5_1_ElementIdentifier.rawValue.getter);
}

uint64_t sub_1D7927E10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D792801C(a1, a2, a3, (void (*)(void))ISO18013_5_1_ElementIdentifier.rawValue.getter);
}

uint64_t sub_1D7927E28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D792809C(a1, a2, a3, (void (*)(uint64_t))ISO18013_5_1_ElementIdentifier.rawValue.getter);
}

CoreIDVShared::ISO18013_5_1_ElementIdentifier_optional sub_1D7927E40(Swift::String *a1)
{
  return ISO18013_5_1_ElementIdentifier.init(rawValue:)(*a1);
}

uint64_t sub_1D7927E4C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ISO18013_5_1_ElementIdentifier.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1D7927E74(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

void sub_1D7927E7C(void *a1@<X8>)
{
  *a1 = &unk_1F2F17448;
}

CoreIDVShared::ISO18013_5_1_DrivingPrivilegeIdentifier_optional __swiftcall ISO18013_5_1_DrivingPrivilegeIdentifier.init(rawValue:)(Swift::String rawValue)
{
  return (CoreIDVShared::ISO18013_5_1_DrivingPrivilegeIdentifier_optional)sub_1D7928614(v1);
}

uint64_t sub_1D7927E98(unsigned __int8 *a1, char *a2)
{
  return sub_1D7994A10(*a1, *a2);
}

uint64_t sub_1D7927EA4()
{
  return sub_1D7A1FD18();
}

uint64_t sub_1D7927EB0()
{
  return sub_1D7A34EAC();
}

uint64_t sub_1D7927EB8()
{
  return sub_1D7A1FD18();
}

CoreIDVShared::ISO18013_5_1_DrivingPrivilegeIdentifier_optional sub_1D7927EC0(Swift::String *a1)
{
  return ISO18013_5_1_DrivingPrivilegeIdentifier.init(rawValue:)(*a1);
}

unint64_t sub_1D7927ECC@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = ISO18013_5_1_DrivingPrivilegeIdentifier.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void static ISO18013_AAMVA_ElementIdentifier.namespaceIdentifier.getter(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

CoreIDVShared::ISO18013_AAMVA_ElementIdentifier_optional __swiftcall ISO18013_AAMVA_ElementIdentifier.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1D7A9D478();
  result.value = swift_bridgeObjectRelease();
  char v5 = 18;
  if (v3 < 0x12) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

void *static ISO18013_AAMVA_ElementIdentifier.allCases.getter()
{
  return &unk_1F2F17720;
}

uint64_t sub_1D7927F70(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D79953D8(*a1, *a2);
}

uint64_t sub_1D7927F7C(uint64_t a1, uint64_t a2)
{
  return sub_1D7927F94(a1, a2, (void (*)(uint64_t))ISO18013_AAMVA_ElementIdentifier.rawValue.getter);
}

uint64_t sub_1D7927F94(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v4 = sub_1D7A9D5D8();
  a3(v4);
  sub_1D7A9C0B8();
  swift_bridgeObjectRelease();
  return sub_1D7A9D628();
}

uint64_t sub_1D7928004(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D792801C(a1, a2, a3, (void (*)(void))ISO18013_AAMVA_ElementIdentifier.rawValue.getter);
}

uint64_t sub_1D792801C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  a4();
  sub_1D7A9C0B8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D7928084(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D792809C(a1, a2, a3, (void (*)(uint64_t))ISO18013_AAMVA_ElementIdentifier.rawValue.getter);
}

uint64_t sub_1D792809C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v5 = sub_1D7A9D5D8();
  a4(v5);
  sub_1D7A9C0B8();
  swift_bridgeObjectRelease();
  return sub_1D7A9D628();
}

CoreIDVShared::ISO18013_AAMVA_ElementIdentifier_optional sub_1D7928108(Swift::String *a1)
{
  return ISO18013_AAMVA_ElementIdentifier.init(rawValue:)(*a1);
}

unint64_t sub_1D7928114@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = ISO18013_AAMVA_ElementIdentifier.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1D792813C(void *a1@<X8>)
{
  *a1 = &unk_1F2F17720;
}

CoreIDVShared::ISO18013_AAMVA_DomesticDrivingPrivilegeIdentifier_optional __swiftcall ISO18013_AAMVA_DomesticDrivingPrivilegeIdentifier.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1D7A9D058();
  result.value = swift_bridgeObjectRelease();
  char v5 = 11;
  if (v3 < 0xB) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_1D79281A8(unsigned __int8 *a1, char *a2)
{
  return sub_1D7994564(*a1, *a2);
}

uint64_t sub_1D79281B4()
{
  return sub_1D7A9D628();
}

uint64_t sub_1D79281FC()
{
  return sub_1D7A34D3C();
}

uint64_t sub_1D7928204()
{
  return sub_1D7A9D628();
}

CoreIDVShared::ISO18013_AAMVA_DomesticDrivingPrivilegeIdentifier_optional sub_1D7928248(Swift::String *a1)
{
  return ISO18013_AAMVA_DomesticDrivingPrivilegeIdentifier.init(rawValue:)(*a1);
}

unint64_t sub_1D7928254@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = ISO18013_AAMVA_DomesticDrivingPrivilegeIdentifier.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

BOOL static ISO23220_1_ElementIdentifier.isAgeOverElement(_:)(unint64_t a1, unint64_t a2)
{
  sub_1D7929330(a1, a2);
  return (v2 & 1) == 0;
}

unsigned __int8 *static ISO23220_1_ElementIdentifier.parseAgeOverElement(_:)(unint64_t a1, unint64_t a2)
{
  return sub_1D7929330(a1, a2);
}

void static ISO23220_1_ElementIdentifier.namespaceIdentifier.getter(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

CoreIDVShared::ISO23220_1_ElementIdentifier_optional __swiftcall ISO23220_1_ElementIdentifier.init(rawValue:)(Swift::String rawValue)
{
  char v2 = v1;
  unint64_t v3 = sub_1D7A9D058();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *char v2 = v5;
  return result;
}

void *static ISO23220_1_ElementIdentifier.allCases.getter()
{
  return &unk_1F2F178E8;
}

uint64_t ISO23220_1_ElementIdentifier.rawValue.getter()
{
  uint64_t v1 = 0x61645F6874726962;
  if (*v0 != 1) {
    uint64_t v1 = 7890291;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x795F6E695F656761;
  }
}

uint64_t sub_1D7928390(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D7995408(*a1, *a2);
}

uint64_t sub_1D792839C()
{
  return sub_1D7A9D628();
}

uint64_t sub_1D7928444()
{
  sub_1D7A9C0B8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D79284D8()
{
  return sub_1D7A9D628();
}

CoreIDVShared::ISO23220_1_ElementIdentifier_optional sub_1D792857C(Swift::String *a1)
{
  return ISO23220_1_ElementIdentifier.init(rawValue:)(*a1);
}

void sub_1D7928588(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xEC00000073726165;
  unint64_t v4 = 0xEA00000000006574;
  uint64_t v5 = 0x61645F6874726962;
  if (v2 != 1)
  {
    uint64_t v5 = 7890291;
    unint64_t v4 = 0xE300000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x795F6E695F656761;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

void sub_1D79285EC(void *a1@<X8>)
{
  *a1 = &unk_1F2F17910;
}

void static ISO23220_1_Japan_ElementIdentifier.namespaceIdentifier.getter(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

CoreIDVShared::ISO23220_1_Japan_ElementIdentifier_optional __swiftcall ISO23220_1_Japan_ElementIdentifier.init(rawValue:)(Swift::String rawValue)
{
  return (CoreIDVShared::ISO23220_1_Japan_ElementIdentifier_optional)sub_1D7928614(v1);
}

uint64_t sub_1D7928614@<X0>(char *a1@<X8>)
{
  unint64_t v2 = sub_1D7A9D058();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 7;
  if (v2 < 7) {
    char v4 = v2;
  }
  *a1 = v4;
  return result;
}

void *static ISO23220_1_Japan_ElementIdentifier.allCases.getter()
{
  return &unk_1F2F17A00;
}

unint64_t ISO23220_1_Japan_ElementIdentifier.rawValue.getter()
{
  unint64_t result = 0xD000000000000016;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0xD000000000000018;
      break;
    case 4:
      unint64_t result = 0x63696E755F786573;
      break;
    case 5:
      unint64_t result = 0xD000000000000019;
      break;
    case 6:
      unint64_t result = 0x7469617274726F70;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D7928760(char *a1, char *a2)
{
  return sub_1D7994E1C(*a1, *a2);
}

uint64_t sub_1D792876C()
{
  return sub_1D7A1FBE0();
}

uint64_t sub_1D7928778()
{
  return sub_1D7A34FC0();
}

uint64_t sub_1D7928780()
{
  return sub_1D7A1FBE0();
}

CoreIDVShared::ISO23220_1_Japan_ElementIdentifier_optional sub_1D7928788(Swift::String *a1)
{
  return ISO23220_1_Japan_ElementIdentifier.init(rawValue:)(*a1);
}

unint64_t sub_1D7928794@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = ISO23220_1_Japan_ElementIdentifier.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1D79287BC(void *a1@<X8>)
{
  *a1 = &unk_1F2F17A00;
}

unsigned __int8 *sub_1D79287CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  uint64_t v18 = a4;
  sub_1D792A860();
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1D7A9C1D8();
  unint64_t v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v10 = HIBYTE(v8) & 0xF;
    uint64_t v15 = v7;
    uint64_t v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v9 = (unsigned __int8 *)&v15;
    goto LABEL_7;
  }
  uint64_t v7 = sub_1D7A457C4();
  unint64_t v12 = v11;
  swift_bridgeObjectRelease();
  unint64_t v8 = v12;
  if ((v12 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = (unsigned __int8 *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v9 = (unsigned __int8 *)sub_1D7A9CD78();
  }
LABEL_7:
  uint64_t v13 = sub_1D79288C0(v9, v10, a5);
  swift_bridgeObjectRelease();
  return v13;
}

unsigned __int8 *sub_1D79288C0(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (uint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  uint64_t v13 = 0;
                  if (v11 < 0x61 || v11 >= v8) {
                    return (unsigned __int8 *)v13;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v14 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v14 - (v11 + v12);
              if (__OFSUB__(v14, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_66;
    }
    if (a2)
    {
      unsigned __int8 v23 = a3 + 48;
      unsigned __int8 v24 = a3 + 55;
      unsigned __int8 v25 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v23 = 58;
      }
      else
      {
        unsigned __int8 v25 = 97;
        unsigned __int8 v24 = 65;
      }
      if (result)
      {
        uint64_t v26 = 0;
        do
        {
          unsigned int v27 = *result;
          if (v27 < 0x30 || v27 >= v23)
          {
            if (v27 < 0x41 || v27 >= v24)
            {
              uint64_t v13 = 0;
              if (v27 < 0x61 || v27 >= v25) {
                return (unsigned __int8 *)v13;
              }
              char v28 = -87;
            }
            else
            {
              char v28 = -55;
            }
          }
          else
          {
            char v28 = -48;
          }
          uint64_t v29 = v26 * a3;
          if ((unsigned __int128)(v26 * (__int128)a3) >> 64 != (v26 * a3) >> 63) {
            return 0;
          }
          uint64_t v26 = v29 + (v27 + v28);
          if (__OFADD__(v29, (v27 + v28))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v29 + (v27 + v28));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_66:
    __break(1u);
    return result;
  }
  uint64_t v15 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v16 = a3 + 48;
  unsigned __int8 v17 = a3 + 55;
  unsigned __int8 v18 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v16 = 58;
  }
  else
  {
    unsigned __int8 v18 = 97;
    unsigned __int8 v17 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  uint64_t v19 = result + 1;
  do
  {
    unsigned int v20 = *v19;
    if (v20 < 0x30 || v20 >= v16)
    {
      if (v20 < 0x41 || v20 >= v17)
      {
        uint64_t v13 = 0;
        if (v20 < 0x61 || v20 >= v18) {
          return (unsigned __int8 *)v13;
        }
        char v21 = -87;
      }
      else
      {
        char v21 = -55;
      }
    }
    else
    {
      char v21 = -48;
    }
    uint64_t v22 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v22 + (v20 + v21);
    if (__OFADD__(v22, (v20 + v21))) {
      return 0;
    }
    ++v19;
    --v15;
  }
  while (v15);
  return (unsigned __int8 *)v9;
}

uint64_t sub_1D7928B3C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t result = 0;
    goto LABEL_8;
  }
  if ((a4 & 0x2000000000000000) != 0)
  {
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    unsigned int v11 = v14;
  }
  else if ((a3 & 0x1000000000000000) != 0)
  {
    unsigned int v11 = (void *)((a4 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else
  {
    unsigned int v11 = (void *)sub_1D7A9CD78();
  }
  uint64_t result = sub_1D7928C10((uint64_t)v11, a1, a2, a3, a4, a5);
  if (!v5)
  {
    char v15 = v13 & 1;
LABEL_8:
    LOBYTE(v14[0]) = (a4 & 0x1000000000000000) != 0;
  }
  return result;
}

uint64_t sub_1D7928C10(uint64_t result, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, uint64_t a6)
{
  unint64_t v10 = a2;
  uint64_t v11 = result;
  uint64_t v12 = (a4 >> 59) & 1;
  if ((a5 & 0x1000000000000000) == 0) {
    LOBYTE(v12) = 1;
  }
  uint64_t v13 = 4 << v12;
  unint64_t v14 = a2 & 0xC;
  if (v14 == 4 << v12)
  {
    uint64_t result = sub_1D7A453CC(a2, a4, a5);
    a2 = result;
    if ((a5 & 0x1000000000000000) == 0)
    {
LABEL_5:
      int64_t v15 = a2 >> 16;
      if (v14 != v13) {
        goto LABEL_6;
      }
      goto LABEL_14;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
    goto LABEL_5;
  }
  unint64_t v16 = a4 & 0xFFFFFFFFFFFFLL;
  if ((a5 & 0x2000000000000000) != 0) {
    unint64_t v16 = HIBYTE(a5) & 0xF;
  }
  if (v16 < a2 >> 16) {
    goto LABEL_95;
  }
  uint64_t result = sub_1D7A9C178();
  int64_t v15 = result;
  if (v14 == v13)
  {
LABEL_14:
    uint64_t result = sub_1D7A453CC(v10, a4, a5);
    unint64_t v10 = result;
  }
LABEL_6:
  if ((a3 & 0xC) == v13)
  {
    uint64_t result = sub_1D7A453CC(a3, a4, a5);
    a3 = result;
    if ((a5 & 0x1000000000000000) == 0) {
      goto LABEL_8;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
LABEL_8:
    uint64_t result = (a3 >> 16) - (v10 >> 16);
    goto LABEL_21;
  }
  unint64_t v17 = HIBYTE(a5) & 0xF;
  if ((a5 & 0x2000000000000000) == 0) {
    unint64_t v17 = a4 & 0xFFFFFFFFFFFFLL;
  }
  if (v17 < v10 >> 16) {
    goto LABEL_91;
  }
  if (v17 < a3 >> 16)
  {
LABEL_92:
    __break(1u);
    goto LABEL_93;
  }
  uint64_t result = sub_1D7A9C178();
LABEL_21:
  int64_t v18 = v15 + result;
  if (__OFADD__(v15, result))
  {
    __break(1u);
    goto LABEL_90;
  }
  if (v18 < v15)
  {
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
  uint64_t v19 = (unsigned __int8 *)(v11 + v15);
  if (!v11) {
    uint64_t v19 = 0;
  }
  int v20 = *v19;
  if (v20 == 43)
  {
    if (result >= 1)
    {
      if (result != 1)
      {
        unsigned __int8 v31 = a6 + 48;
        unsigned __int8 v32 = a6 + 55;
        unsigned __int8 v33 = a6 + 87;
        if (a6 > 10)
        {
          unsigned __int8 v31 = 58;
        }
        else
        {
          unsigned __int8 v33 = 97;
          unsigned __int8 v32 = 65;
        }
        if (v19)
        {
          uint64_t v24 = 0;
          uint64_t v34 = v19 + 1;
          uint64_t v35 = result - 1;
          do
          {
            unsigned int v36 = *v34;
            if (v36 < 0x30 || v36 >= v31)
            {
              if (v36 < 0x41 || v36 >= v32)
              {
                uint64_t v29 = 0;
                if (v36 < 0x61 || v36 >= v33) {
                  return v29;
                }
                char v37 = -87;
              }
              else
              {
                char v37 = -55;
              }
            }
            else
            {
              char v37 = -48;
            }
            uint64_t v38 = v24 * a6;
            if ((unsigned __int128)(v24 * (__int128)a6) >> 64 != (v24 * a6) >> 63) {
              return 0;
            }
            uint64_t v24 = v38 + (v36 + v37);
            if (__OFADD__(v38, (v36 + v37))) {
              return 0;
            }
            ++v34;
            --v35;
          }
          while (v35);
          return v24;
        }
        return 0;
      }
      return 0;
    }
    goto LABEL_94;
  }
  if (v20 != 45)
  {
    if (v18 != v15)
    {
      unsigned __int8 v39 = a6 + 48;
      unsigned __int8 v40 = a6 + 55;
      unsigned __int8 v41 = a6 + 87;
      if (a6 > 10)
      {
        unsigned __int8 v39 = 58;
      }
      else
      {
        unsigned __int8 v41 = 97;
        unsigned __int8 v40 = 65;
      }
      if (v19)
      {
        uint64_t v42 = 0;
        do
        {
          unsigned int v43 = *v19;
          if (v43 < 0x30 || v43 >= v39)
          {
            if (v43 < 0x41 || v43 >= v40)
            {
              uint64_t v29 = 0;
              if (v43 < 0x61 || v43 >= v41) {
                return v29;
              }
              char v44 = -87;
            }
            else
            {
              char v44 = -55;
            }
          }
          else
          {
            char v44 = -48;
          }
          uint64_t v45 = v42 * a6;
          if ((unsigned __int128)(v42 * (__int128)a6) >> 64 != (v42 * a6) >> 63) {
            return 0;
          }
          uint64_t v42 = v45 + (v43 + v44);
          if (__OFADD__(v45, (v43 + v44))) {
            return 0;
          }
          ++v19;
          --result;
        }
        while (result);
        return v45 + (v43 + v44);
      }
      return 0;
    }
    return 0;
  }
  if (result >= 1)
  {
    if (result != 1)
    {
      unsigned __int8 v21 = a6 + 48;
      unsigned __int8 v22 = a6 + 55;
      unsigned __int8 v23 = a6 + 87;
      if (a6 > 10)
      {
        unsigned __int8 v21 = 58;
      }
      else
      {
        unsigned __int8 v23 = 97;
        unsigned __int8 v22 = 65;
      }
      if (v19)
      {
        uint64_t v24 = 0;
        unsigned __int8 v25 = v19 + 1;
        uint64_t v26 = result - 1;
        while (1)
        {
          unsigned int v27 = *v25;
          if (v27 < 0x30 || v27 >= v21)
          {
            if (v27 < 0x41 || v27 >= v22)
            {
              uint64_t v29 = 0;
              if (v27 < 0x61 || v27 >= v23) {
                return v29;
              }
              char v28 = -87;
            }
            else
            {
              char v28 = -55;
            }
          }
          else
          {
            char v28 = -48;
          }
          uint64_t v30 = v24 * a6;
          if ((unsigned __int128)(v24 * (__int128)a6) >> 64 != (v24 * a6) >> 63) {
            return 0;
          }
          uint64_t v24 = v30 - (v27 + v28);
          if (__OFSUB__(v30, (v27 + v28))) {
            return 0;
          }
          ++v25;
          if (!--v26) {
            return v24;
          }
        }
      }
      return 0;
    }
    return 0;
  }
LABEL_93:
  __break(1u);
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
  return result;
}

uint64_t _s13CoreIDVShared28ISO23220_1_ElementIdentifierO7ageOver2nnSSSi_tFZ_0(uint64_t a1)
{
  uint64_t v2 = sub_1D7A9AE98();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4, v5, v6, v7, v8, v9, v10);
  uint64_t v12 = (char *)v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1D7A9B228();
  MEMORY[0x1F4188790](v13 - 8, v14, v15, v16, v17, v18, v19, v20);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8432D0);
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v30 = MEMORY[0x1F4188790](v21, v23, v24, v25, v26, v27, v28, v29);
  unsigned __int8 v32 = (char *)v44 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v30, v33, v34, v35, v36, v37, v38, v39);
  unsigned __int8 v41 = (char *)v44 - v40;
  uint64_t v45 = 0x7265766F5F656761;
  unint64_t v46 = 0xE90000000000005FLL;
  v44[1] = a1;
  sub_1D7A9B1D8();
  sub_1D78CDF34();
  sub_1D7A9AD88();
  v44[2] = 2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8432D8);
  sub_1D7871DDC(&qword_1EA8432E0, &qword_1EA8432D8);
  sub_1D7A9AE88();
  MEMORY[0x1D9479B10](v12, v21);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v12, v2);
  uint64_t v42 = *(void (**)(char *, uint64_t))(v22 + 8);
  v42(v32, v21);
  sub_1D7871DDC(&qword_1EA8432E8, &qword_1EA8432D0);
  sub_1D7A9CA78();
  v42(v41, v21);
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  return v45;
}

unsigned __int8 *sub_1D7929330(unint64_t a1, unint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA843FD0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6, v7, v8, v9, v10, v11, v12);
  uint64_t v14 = &v48[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA843FD8);
  uint64_t v23 = MEMORY[0x1F4188790](v15 - 8, v16, v17, v18, v19, v20, v21, v22);
  uint64_t v25 = &v48[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v23, v26, v27, v28, v29, v30, v31, v32);
  uint64_t v34 = &v48[-v33];
  unint64_t v49 = a1;
  unint64_t v50 = a2;
  if (qword_1EA8414C0 != -1) {
    swift_once();
  }
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA843FE0);
  __swift_project_value_buffer(v35, (uint64_t)qword_1EA843EE8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA843FE8);
  sub_1D792A744();
  sub_1D7871DDC(&qword_1EA843FF8, &qword_1EA843FE0);
  sub_1D7A9BF18();
  sub_1D792A798((uint64_t)v34, (uint64_t)v25);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v5 + 48))(v25, 1, v4) == 1)
  {
    uint64_t v36 = 0;
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v5 + 32))(v14, v25, v4);
    swift_getKeyPath();
    sub_1D7A9B4F8();
    swift_release();
    uint64_t v37 = v49;
    uint64_t v38 = v50;
    uint64_t v39 = v52;
    if ((v50 ^ v49) >> 14)
    {
      uint64_t v40 = v51;
      uint64_t v41 = sub_1D7928B3C(v49, v50, v51, v52, 10);
      if ((v42 & 0x100) != 0)
      {
        uint64_t v36 = sub_1D79287CC(v37, v38, v40, v39, 10);
        char v46 = v45;
        swift_bridgeObjectRelease();
        int v44 = v46 & 1;
      }
      else
      {
        uint64_t v36 = (unsigned __int8 *)v41;
        char v43 = v42;
        swift_bridgeObjectRelease();
        int v44 = v43 & 1;
      }
      if (v44) {
        uint64_t v36 = 0;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v36 = 0;
    }
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v14, v4);
  }
  sub_1D792A800((uint64_t)v34);
  return v36;
}

unint64_t sub_1D7929668()
{
  unint64_t result = qword_1EA843F00;
  if (!qword_1EA843F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA843F00);
  }
  return result;
}

unint64_t sub_1D79296C0()
{
  unint64_t result = qword_1EA843F08;
  if (!qword_1EA843F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA843F08);
  }
  return result;
}

unint64_t sub_1D7929718()
{
  unint64_t result = qword_1EA843F10;
  if (!qword_1EA843F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA843F10);
  }
  return result;
}

unint64_t sub_1D7929770()
{
  unint64_t result = qword_1EA843F18;
  if (!qword_1EA843F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA843F18);
  }
  return result;
}

uint64_t sub_1D79297C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D7929CD8(a1, a2, a3, (uint64_t (*)(void))sub_1D79297F0, (uint64_t (*)(void))sub_1D7929844);
}

unint64_t sub_1D79297F0()
{
  unint64_t result = qword_1EA843F20;
  if (!qword_1EA843F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA843F20);
  }
  return result;
}

unint64_t sub_1D7929844()
{
  unint64_t result = qword_1EA843F28;
  if (!qword_1EA843F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA843F28);
  }
  return result;
}

uint64_t sub_1D7929898()
{
  return sub_1D7871DDC(&qword_1EA843F30, &qword_1EA843F38);
}

unint64_t sub_1D79298D8()
{
  unint64_t result = qword_1EA843F40;
  if (!qword_1EA843F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA843F40);
  }
  return result;
}

unint64_t sub_1D7929930()
{
  unint64_t result = qword_1EA843F48;
  if (!qword_1EA843F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA843F48);
  }
  return result;
}

uint64_t sub_1D7929984(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D7929CD8(a1, a2, a3, (uint64_t (*)(void))sub_1D79299B0, (uint64_t (*)(void))sub_1D7929A04);
}

unint64_t sub_1D79299B0()
{
  unint64_t result = qword_1EA843F50;
  if (!qword_1EA843F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA843F50);
  }
  return result;
}

unint64_t sub_1D7929A04()
{
  unint64_t result = qword_1EA843F58;
  if (!qword_1EA843F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA843F58);
  }
  return result;
}

uint64_t sub_1D7929A58()
{
  return sub_1D7871DDC(&qword_1EA843F60, &qword_1EA843F68);
}

unint64_t sub_1D7929A98()
{
  unint64_t result = qword_1EA843F70;
  if (!qword_1EA843F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA843F70);
  }
  return result;
}

unint64_t sub_1D7929AF0()
{
  unint64_t result = qword_1EA843F78;
  if (!qword_1EA843F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA843F78);
  }
  return result;
}

uint64_t sub_1D7929B44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D7929CD8(a1, a2, a3, (uint64_t (*)(void))sub_1D7929B70, (uint64_t (*)(void))sub_1D7929BC4);
}

unint64_t sub_1D7929B70()
{
  unint64_t result = qword_1EA843F80;
  if (!qword_1EA843F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA843F80);
  }
  return result;
}

unint64_t sub_1D7929BC4()
{
  unint64_t result = qword_1EA843F88;
  if (!qword_1EA843F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA843F88);
  }
  return result;
}

uint64_t sub_1D7929C18()
{
  return sub_1D7871DDC(&qword_1EA843F90, &qword_1EA843F98);
}

unint64_t sub_1D7929C58()
{
  unint64_t result = qword_1EA843FA0;
  if (!qword_1EA843FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA843FA0);
  }
  return result;
}

uint64_t sub_1D7929CAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D7929CD8(a1, a2, a3, (uint64_t (*)(void))sub_1D7929D14, (uint64_t (*)(void))sub_1D7929D68);
}

uint64_t sub_1D7929CD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  *(void *)(a1 + 8) = a4();
  uint64_t result = a5();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1D7929D14()
{
  unint64_t result = qword_1EA843FA8;
  if (!qword_1EA843FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA843FA8);
  }
  return result;
}

unint64_t sub_1D7929D68()
{
  unint64_t result = qword_1EA843FB0;
  if (!qword_1EA843FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA843FB0);
  }
  return result;
}

uint64_t sub_1D7929DBC()
{
  return sub_1D7871DDC(&qword_1EA843FB8, &qword_1EA843FC0);
}

unsigned char *storeEnumTagSinglePayload for ISO18013KnownDocTypes(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D7929EC4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ISO18013KnownDocTypes()
{
  return &type metadata for ISO18013KnownDocTypes;
}

unsigned char *storeEnumTagSinglePayload for ISO18013KnownNamespaces(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D7929FC8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ISO18013KnownNamespaces()
{
  return &type metadata for ISO18013KnownNamespaces;
}

uint64_t dispatch thunk of static MobileDocumentElementIdentifier.namespaceIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t getEnumTagSinglePayload for ISO18013_5_1_ElementIdentifier(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xE2) {
    goto LABEL_17;
  }
  if (a2 + 30 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 30) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 30;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 30;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 30;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x1F;
  int v8 = v6 - 31;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ISO18013_5_1_ElementIdentifier(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 30 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 30) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE2) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE1)
  {
    unsigned int v6 = ((a2 - 226) >> 8) + 1;
    *unint64_t result = a2 + 30;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D792A170);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 30;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ISO18013_5_1_ElementIdentifier()
{
  return &type metadata for ISO18013_5_1_ElementIdentifier;
}

ValueMetadata *type metadata accessor for ISO18013_5_1_DrivingPrivilegeIdentifier()
{
  return &type metadata for ISO18013_5_1_DrivingPrivilegeIdentifier;
}

uint64_t getEnumTagSinglePayload for ISO18013_AAMVA_ElementIdentifier(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEF) {
    goto LABEL_17;
  }
  if (a2 + 17 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 17) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 17;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 17;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 17;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x12;
  int v8 = v6 - 18;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ISO18013_AAMVA_ElementIdentifier(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 17 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 17) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEE)
  {
    unsigned int v6 = ((a2 - 239) >> 8) + 1;
    *unint64_t result = a2 + 17;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D792A31CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 17;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ISO18013_AAMVA_ElementIdentifier()
{
  return &type metadata for ISO18013_AAMVA_ElementIdentifier;
}

uint64_t getEnumTagSinglePayload for ISO18013_AAMVA_DomesticDrivingPrivilegeIdentifier(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF6) {
    goto LABEL_17;
  }
  if (a2 + 10 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 10) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 10;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xB;
  int v8 = v6 - 11;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ISO18013_AAMVA_DomesticDrivingPrivilegeIdentifier(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *unint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D792A4B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ISO18013_AAMVA_DomesticDrivingPrivilegeIdentifier()
{
  return &type metadata for ISO18013_AAMVA_DomesticDrivingPrivilegeIdentifier;
}

unsigned char *storeEnumTagSinglePayload for ISO23220_1_ElementIdentifier(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D792A5B4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ISO23220_1_ElementIdentifier()
{
  return &type metadata for ISO23220_1_ElementIdentifier;
}

unsigned char *_s13CoreIDVShared39ISO18013_5_1_DrivingPrivilegeIdentifierOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D792A6B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ISO23220_1_Japan_ElementIdentifier()
{
  return &type metadata for ISO23220_1_Japan_ElementIdentifier;
}

unint64_t sub_1D792A6F0()
{
  unint64_t result = qword_1EA843FC8;
  if (!qword_1EA843FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA843FC8);
  }
  return result;
}

unint64_t sub_1D792A744()
{
  unint64_t result = qword_1EA843FF0;
  if (!qword_1EA843FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA843FF0);
  }
  return result;
}

uint64_t sub_1D792A798(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA843FD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D792A800(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA843FD8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1D792A860()
{
  unint64_t result = qword_1EA844000;
  if (!qword_1EA844000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844000);
  }
  return result;
}

uint64_t static IdentityProofingDocuments.supportsSecureCoding.getter()
{
  return 1;
}

void *IdentityProofingDocuments.frontID.getter()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC13CoreIDVShared25IdentityProofingDocuments_frontID);
  id v2 = v1;
  return v1;
}

void *IdentityProofingDocuments.backID.getter()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC13CoreIDVShared25IdentityProofingDocuments_backID);
  id v2 = v1;
  return v1;
}

void *IdentityProofingDocuments.selfie.getter()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC13CoreIDVShared25IdentityProofingDocuments_selfie);
  id v2 = v1;
  return v1;
}

void *IdentityProofingDocuments.liveness.getter()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC13CoreIDVShared25IdentityProofingDocuments_liveness);
  id v2 = v1;
  return v1;
}

id IdentityProofingDocuments.__allocating_init(frontID:backID:selfie:liveness:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (char *)objc_allocWithZone(v4);
  *(void *)&v9[OBJC_IVAR____TtC13CoreIDVShared25IdentityProofingDocuments_frontID] = a1;
  *(void *)&v9[OBJC_IVAR____TtC13CoreIDVShared25IdentityProofingDocuments_backID] = a2;
  *(void *)&v9[OBJC_IVAR____TtC13CoreIDVShared25IdentityProofingDocuments_selfie] = a3;
  *(void *)&v9[OBJC_IVAR____TtC13CoreIDVShared25IdentityProofingDocuments_liveness] = a4;
  v11.receiver = v9;
  v11.super_class = v4;
  return objc_msgSendSuper2(&v11, sel_init);
}

id IdentityProofingDocuments.init(frontID:backID:selfie:liveness:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v4[OBJC_IVAR____TtC13CoreIDVShared25IdentityProofingDocuments_frontID] = a1;
  *(void *)&v4[OBJC_IVAR____TtC13CoreIDVShared25IdentityProofingDocuments_backID] = a2;
  *(void *)&v4[OBJC_IVAR____TtC13CoreIDVShared25IdentityProofingDocuments_selfie] = a3;
  *(void *)&v4[OBJC_IVAR____TtC13CoreIDVShared25IdentityProofingDocuments_liveness] = a4;
  v11.receiver = v4;
  v11.super_class = ObjectType;
  return objc_msgSendSuper2(&v11, sel_init);
}

Swift::Void __swiftcall IdentityProofingDocuments.encode(with:)(NSCoder with)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC13CoreIDVShared25IdentityProofingDocuments_frontID);
  uint64_t v4 = (void *)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeObject:v3 forKey:v4];

  uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC13CoreIDVShared25IdentityProofingDocuments_backID);
  unsigned int v6 = (void *)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeObject:v5 forKey:v6];

  uint64_t v7 = *(void *)(v1 + OBJC_IVAR____TtC13CoreIDVShared25IdentityProofingDocuments_selfie);
  int v8 = (void *)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeObject:v7 forKey:v8];

  uint64_t v9 = *(void *)(v1 + OBJC_IVAR____TtC13CoreIDVShared25IdentityProofingDocuments_liveness);
  id v10 = (id)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeObject:v9 forKey:v10];
}

id IdentityProofingDocuments.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  id v4 = sub_1D792AE38();

  return v4;
}

id IdentityProofingDocuments.init(coder:)(void *a1)
{
  id v2 = sub_1D792AE38();

  return v2;
}

id IdentityProofingDocuments.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void IdentityProofingDocuments.init()()
{
}

id IdentityProofingDocuments.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1D792AE38()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  type metadata accessor for IdentityDocument();
  objc_super v2 = v0;
  *(void *)&v2[OBJC_IVAR____TtC13CoreIDVShared25IdentityProofingDocuments_frontID] = sub_1D7A9C908();
  *(void *)&v2[OBJC_IVAR____TtC13CoreIDVShared25IdentityProofingDocuments_backID] = sub_1D7A9C908();
  *(void *)&v2[OBJC_IVAR____TtC13CoreIDVShared25IdentityProofingDocuments_selfie] = sub_1D7A9C908();
  type metadata accessor for IdentityLivenessResults();
  *(void *)&v2[OBJC_IVAR____TtC13CoreIDVShared25IdentityProofingDocuments_liveness] = sub_1D7A9C908();

  v4.receiver = v2;
  v4.super_class = ObjectType;
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t type metadata accessor for IdentityProofingDocuments()
{
  return self;
}

uint64_t method lookup function for IdentityProofingDocuments(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for IdentityProofingDocuments);
}

uint64_t dispatch thunk of IdentityProofingDocuments.__allocating_init(frontID:backID:selfie:liveness:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of IdentityProofingDocuments.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

unint64_t sub_1D792AFB8()
{
  unint64_t result = qword_1EA844030;
  if (!qword_1EA844030)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA843428);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844030);
  }
  return result;
}

uint64_t static IdentityLivenessConfig.supportsSecureCoding.getter()
{
  return byte_1EA844040;
}

uint64_t static IdentityLivenessConfig.supportsSecureCoding.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  byte_1EA844040 = a1;
  return result;
}

uint64_t (*static IdentityLivenessConfig.supportsSecureCoding.modify())()
{
  return j_j__swift_endAccess;
}

void *IdentityLivenessConfig.active.getter()
{
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC13CoreIDVShared22IdentityLivenessConfig_active);
  id v2 = v1;
  return v1;
}

void *IdentityLivenessConfig.passive.getter()
{
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC13CoreIDVShared22IdentityLivenessConfig_passive);
  id v2 = v1;
  return v1;
}

id IdentityLivenessConfig.__allocating_init(active:passive:)(uint64_t a1, uint64_t a2)
{
  return sub_1D792D4DC(a1, a2, &OBJC_IVAR____TtC13CoreIDVShared22IdentityLivenessConfig_active, &OBJC_IVAR____TtC13CoreIDVShared22IdentityLivenessConfig_passive);
}

id IdentityLivenessConfig.init(active:passive:)(uint64_t a1, uint64_t a2)
{
  return sub_1D792D560(a1, a2, &OBJC_IVAR____TtC13CoreIDVShared22IdentityLivenessConfig_active, &OBJC_IVAR____TtC13CoreIDVShared22IdentityLivenessConfig_passive);
}

id IdentityLivenessConfig.__allocating_init(coder:)(void *a1)
{
  id v2 = v1;
  id v4 = objc_allocWithZone(v2);
  type metadata accessor for IdentityActiveLivenessConfig();
  uint64_t v5 = (char *)v4;
  *(void *)&v5[OBJC_IVAR____TtC13CoreIDVShared22IdentityLivenessConfig_active] = sub_1D7A9C908();
  type metadata accessor for IdentityPassiveLivenessConfig();
  *(void *)&v5[OBJC_IVAR____TtC13CoreIDVShared22IdentityLivenessConfig_passive] = sub_1D7A9C908();

  v8.receiver = v5;
  v8.super_class = v2;
  id v6 = objc_msgSendSuper2(&v8, sel_init);

  return v6;
}

id IdentityLivenessConfig.init(coder:)(void *a1)
{
  id v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  type metadata accessor for IdentityActiveLivenessConfig();
  uint64_t v5 = v2;
  *(void *)&v5[OBJC_IVAR____TtC13CoreIDVShared22IdentityLivenessConfig_active] = sub_1D7A9C908();
  type metadata accessor for IdentityPassiveLivenessConfig();
  *(void *)&v5[OBJC_IVAR____TtC13CoreIDVShared22IdentityLivenessConfig_passive] = sub_1D7A9C908();

  v8.receiver = v5;
  v8.super_class = ObjectType;
  id v6 = objc_msgSendSuper2(&v8, sel_init);

  return v6;
}

uint64_t type metadata accessor for IdentityActiveLivenessConfig()
{
  return self;
}

uint64_t type metadata accessor for IdentityPassiveLivenessConfig()
{
  return self;
}

Swift::Void __swiftcall IdentityLivenessConfig.encode(with:)(NSCoder with)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC13CoreIDVShared22IdentityLivenessConfig_active);
  id v4 = (void *)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeObject:v3 forKey:v4];

  uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC13CoreIDVShared22IdentityLivenessConfig_passive);
  id v6 = (id)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeObject:v5 forKey:v6];
}

void IdentityLivenessConfig.init()()
{
}

uint64_t static IdentityActiveLivenessConfig.supportsSecureCoding.getter()
{
  return byte_1EA844041;
}

uint64_t static IdentityActiveLivenessConfig.supportsSecureCoding.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  byte_1EA844041 = a1;
  return result;
}

uint64_t (*static IdentityActiveLivenessConfig.supportsSecureCoding.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t IdentityActiveLivenessConfig.gestureSequence.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t IdentityActiveLivenessConfig.minRequiredGestureCount.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_minRequiredGestureCount);
}

uint64_t IdentityActiveLivenessConfig.timeToSkipOption.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_timeToSkipOption);
}

uint64_t IdentityActiveLivenessConfig.timeToSkipAccessible.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_timeToSkipAccessible);
}

uint64_t IdentityActiveLivenessConfig.timeToAlert.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_timeToAlert);
}

uint64_t IdentityActiveLivenessConfig.timeToAlertAccessible.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_timeToAlertAccessible);
}

uint64_t IdentityActiveLivenessConfig.maxRetakeCount.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_maxRetakeCount);
}

uint64_t IdentityActiveLivenessConfig.sessionTimeout.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_sessionTimeout);
}

uint64_t IdentityActiveLivenessConfig.faceOutOfBoundFrames.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_faceOutOfBoundFrames);
}

uint64_t IdentityActiveLivenessConfig.gestureCompletionDelay.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_gestureCompletionDelay);
}

uint64_t IdentityActiveLivenessConfig.tutorialVideoDelay.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_tutorialVideoDelay);
}

uint64_t IdentityActiveLivenessConfig.tutorialVideoDuration.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_tutorialVideoDuration);
}

uint64_t IdentityActiveLivenessConfig.tutorialResumeDelay.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_tutorialResumeDelay);
}

uint64_t IdentityActiveLivenessConfig.gestureDetectedSuccessDuration.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_gestureDetectedSuccessDuration);
}

uint64_t IdentityActiveLivenessConfig.lastGestureExtraFrameDuration.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_lastGestureExtraFrameDuration);
}

uint64_t IdentityActiveLivenessConfig.requiresGoodLux.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_requiresGoodLux);
}

uint64_t IdentityActiveLivenessConfig.enablePrintReplay.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_enablePrintReplay);
}

uint64_t IdentityActiveLivenessConfig.enableIDMatching.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_enableIDMatching);
}

uint64_t IdentityActiveLivenessConfig.requireSelfie.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_requireSelfie);
}

uint64_t IdentityActiveLivenessConfig.enableAutoFlash.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_enableAutoFlash);
}

id IdentityActiveLivenessConfig.__allocating_init(gestureSequence:minRequiredGestureCount:timeToSkipOption:timeToSkipAccessible:timeToAlert:timeToAlertAccessible:maxRetakeCount:sessionTimeout:faceOutOfBoundFrames:gestureCompletionDelay:tutorialVideoDelay:tutorialVideoDuration:tutorialResumeDelay:gestureDetectedSuccessDuration:lastGestureExtraFrameDuration:requiresGoodLux:enablePrintReplay:enableIDMatching:requireSelfie:enableAutoFlash:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, long long a10, long long a11, uint64_t a12, char a13, char a14, char a15, char a16, char a17)
{
  id v21 = objc_allocWithZone(v17);
  return IdentityActiveLivenessConfig.init(gestureSequence:minRequiredGestureCount:timeToSkipOption:timeToSkipAccessible:timeToAlert:timeToAlertAccessible:maxRetakeCount:sessionTimeout:faceOutOfBoundFrames:gestureCompletionDelay:tutorialVideoDelay:tutorialVideoDuration:tutorialResumeDelay:gestureDetectedSuccessDuration:lastGestureExtraFrameDuration:requiresGoodLux:enablePrintReplay:enableIDMatching:requireSelfie:enableAutoFlash:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, *((uint64_t *)&a9 + 1), a10, *((uint64_t *)&a10 + 1), a11, *((uint64_t *)&a11 + 1), a12, a13, a14, a15, a16,
           a17);
}

id IdentityActiveLivenessConfig.init(gestureSequence:minRequiredGestureCount:timeToSkipOption:timeToSkipAccessible:timeToAlert:timeToAlertAccessible:maxRetakeCount:sessionTimeout:faceOutOfBoundFrames:gestureCompletionDelay:tutorialVideoDelay:tutorialVideoDuration:tutorialResumeDelay:gestureDetectedSuccessDuration:lastGestureExtraFrameDuration:requiresGoodLux:enablePrintReplay:enableIDMatching:requireSelfie:enableAutoFlash:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, char a17, char a18, char a19, char a20)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v20[OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_gestureSequence] = a1;
  *(void *)&v20[OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_minRequiredGestureCount] = a2;
  *(void *)&v20[OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_timeToSkipOption] = a3;
  *(void *)&v20[OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_timeToSkipAccessible] = a4;
  *(void *)&v20[OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_timeToAlert] = a5;
  *(void *)&v20[OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_timeToAlertAccessible] = a6;
  *(void *)&v20[OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_maxRetakeCount] = a7;
  *(void *)&v20[OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_sessionTimeout] = a8;
  *(void *)&v20[OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_faceOutOfBoundFrames] = a9;
  *(void *)&v20[OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_gestureCompletionDelay] = a10;
  *(void *)&v20[OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_tutorialVideoDelay] = a11;
  *(void *)&v20[OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_tutorialVideoDuration] = a12;
  *(void *)&v20[OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_tutorialResumeDelay] = a13;
  *(void *)&v20[OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_gestureDetectedSuccessDuration] = a14;
  *(void *)&v20[OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_lastGestureExtraFrameDuration] = a15;
  v20[OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_requiresGoodLux] = a16;
  v20[OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_enablePrintReplay] = a17;
  v20[OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_enableIDMatching] = a18;
  v20[OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_requireSelfie] = a19;
  v20[OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_enableAutoFlash] = a20;
  v31.receiver = v20;
  v31.super_class = ObjectType;
  return objc_msgSendSuper2(&v31, sel_init);
}

id IdentityActiveLivenessConfig.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  id v4 = sub_1D792D958(a1);

  return v4;
}

id IdentityActiveLivenessConfig.init(coder:)(void *a1)
{
  id v2 = sub_1D792D958(a1);

  return v2;
}

Swift::Void __swiftcall IdentityActiveLivenessConfig.encode(with:)(NSCoder with)
{
  type metadata accessor for IdentityGesture();
  id v3 = (void *)sub_1D7A9C2F8();
  id v4 = (void *)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeObject:v3 forKey:v4];

  uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_minRequiredGestureCount);
  id v6 = (void *)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeInteger:v5 forKey:v6];

  uint64_t v7 = *(void *)(v1 + OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_timeToSkipOption);
  objc_super v8 = (void *)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeInteger:v7 forKey:v8];

  uint64_t v9 = *(void *)(v1 + OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_timeToSkipAccessible);
  id v10 = (void *)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeInteger:v9 forKey:v10];

  uint64_t v11 = *(void *)(v1 + OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_timeToAlert);
  uint64_t v12 = (void *)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeInteger:v11 forKey:v12];

  uint64_t v13 = *(void *)(v1 + OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_timeToAlertAccessible);
  uint64_t v14 = (void *)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeInteger:v13 forKey:v14];

  uint64_t v15 = *(void *)(v1 + OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_maxRetakeCount);
  uint64_t v16 = (void *)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeInteger:v15 forKey:v16];

  uint64_t v17 = *(void *)(v1 + OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_sessionTimeout);
  uint64_t v18 = (void *)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeInteger:v17 forKey:v18];

  uint64_t v19 = *(void *)(v1 + OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_faceOutOfBoundFrames);
  uint64_t v20 = (void *)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeInteger:v19 forKey:v20];

  uint64_t v21 = *(void *)(v1 + OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_gestureCompletionDelay);
  uint64_t v22 = (void *)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeInteger:v21 forKey:v22];

  uint64_t v23 = *(void *)(v1 + OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_tutorialVideoDelay);
  uint64_t v24 = (void *)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeInteger:v23 forKey:v24];

  uint64_t v25 = *(void *)(v1 + OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_tutorialVideoDuration);
  uint64_t v26 = (void *)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeInteger:v25 forKey:v26];

  uint64_t v27 = *(void *)(v1 + OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_tutorialResumeDelay);
  uint64_t v28 = (void *)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeInteger:v27 forKey:v28];

  uint64_t v29 = *(void *)(v1 + OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_gestureDetectedSuccessDuration);
  uint64_t v30 = (void *)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeInteger:v29 forKey:v30];

  uint64_t v31 = *(void *)(v1 + OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_lastGestureExtraFrameDuration);
  uint64_t v32 = (void *)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeInteger:v31 forKey:v32];

  uint64_t v33 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_requiresGoodLux);
  uint64_t v34 = (void *)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeBool:v33 forKey:v34];

  uint64_t v35 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_enablePrintReplay);
  uint64_t v36 = (void *)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeBool:v35 forKey:v36];

  uint64_t v37 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_enableIDMatching);
  uint64_t v38 = (void *)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeBool:v37 forKey:v38];

  uint64_t v39 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_requireSelfie);
  uint64_t v40 = (void *)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeBool:v39 forKey:v40];

  uint64_t v41 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_enableAutoFlash);
  id v42 = (id)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeBool:v41 forKey:v42];
}

uint64_t IdentityActiveLivenessConfig.debugDescription.getter()
{
  return 0;
}

void IdentityActiveLivenessConfig.init()()
{
}

uint64_t static IdentityPassiveLivenessConfig.supportsSecureCoding.getter()
{
  return byte_1EA844042;
}

uint64_t static IdentityPassiveLivenessConfig.supportsSecureCoding.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  byte_1EA844042 = a1;
  return result;
}

uint64_t (*static IdentityPassiveLivenessConfig.supportsSecureCoding.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t IdentityPassiveLivenessConfig.maxRetakeCount.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC13CoreIDVShared29IdentityPassiveLivenessConfig_maxRetakeCount);
}

uint64_t IdentityPassiveLivenessConfig.sessionTimeout.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC13CoreIDVShared29IdentityPassiveLivenessConfig_sessionTimeout);
}

uint64_t IdentityPassiveLivenessConfig.faceOutOfBoundFrames.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC13CoreIDVShared29IdentityPassiveLivenessConfig_faceOutOfBoundFrames);
}

uint64_t IdentityPassiveLivenessConfig.totalFrameCount.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC13CoreIDVShared29IdentityPassiveLivenessConfig_totalFrameCount);
}

uint64_t IdentityPassiveLivenessConfig.minimumValidFrameCount.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC13CoreIDVShared29IdentityPassiveLivenessConfig_minimumValidFrameCount);
}

uint64_t IdentityPassiveLivenessConfig.requiresGoodLux.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC13CoreIDVShared29IdentityPassiveLivenessConfig_requiresGoodLux);
}

uint64_t IdentityPassiveLivenessConfig.enablePrintReplay.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC13CoreIDVShared29IdentityPassiveLivenessConfig_enablePrintReplay);
}

uint64_t IdentityPassiveLivenessConfig.disableStitchDetection.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC13CoreIDVShared29IdentityPassiveLivenessConfig_disableStitchDetection);
}

uint64_t IdentityPassiveLivenessConfig.enableAutoFlash.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC13CoreIDVShared29IdentityPassiveLivenessConfig_enableAutoFlash);
}

id IdentityPassiveLivenessConfig.__allocating_init(maxRetakeCount:sessionTimeout:faceOutOfBoundFrames:totalFrameCount:minimumValidFrameCount:requiresGoodLux:enablePrintReplay:disableStitchDetection:enableAutoFlash:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char a7, char a8, char a9)
{
  uint64_t v18 = objc_allocWithZone(v9);
  *(void *)&v18[OBJC_IVAR____TtC13CoreIDVShared29IdentityPassiveLivenessConfig_maxRetakeCount] = a1;
  *(void *)&v18[OBJC_IVAR____TtC13CoreIDVShared29IdentityPassiveLivenessConfig_sessionTimeout] = a2;
  *(void *)&v18[OBJC_IVAR____TtC13CoreIDVShared29IdentityPassiveLivenessConfig_faceOutOfBoundFrames] = a3;
  *(void *)&v18[OBJC_IVAR____TtC13CoreIDVShared29IdentityPassiveLivenessConfig_totalFrameCount] = a4;
  *(void *)&v18[OBJC_IVAR____TtC13CoreIDVShared29IdentityPassiveLivenessConfig_minimumValidFrameCount] = a5;
  v18[OBJC_IVAR____TtC13CoreIDVShared29IdentityPassiveLivenessConfig_requiresGoodLux] = a6;
  v18[OBJC_IVAR____TtC13CoreIDVShared29IdentityPassiveLivenessConfig_enablePrintReplay] = a7;
  v18[OBJC_IVAR____TtC13CoreIDVShared29IdentityPassiveLivenessConfig_disableStitchDetection] = a8;
  v18[OBJC_IVAR____TtC13CoreIDVShared29IdentityPassiveLivenessConfig_enableAutoFlash] = a9;
  v20.receiver = v18;
  v20.super_class = v9;
  return objc_msgSendSuper2(&v20, sel_init);
}

id IdentityPassiveLivenessConfig.init(maxRetakeCount:sessionTimeout:faceOutOfBoundFrames:totalFrameCount:minimumValidFrameCount:requiresGoodLux:enablePrintReplay:disableStitchDetection:enableAutoFlash:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char a7, char a8, char a9)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v9[OBJC_IVAR____TtC13CoreIDVShared29IdentityPassiveLivenessConfig_maxRetakeCount] = a1;
  *(void *)&v9[OBJC_IVAR____TtC13CoreIDVShared29IdentityPassiveLivenessConfig_sessionTimeout] = a2;
  *(void *)&v9[OBJC_IVAR____TtC13CoreIDVShared29IdentityPassiveLivenessConfig_faceOutOfBoundFrames] = a3;
  *(void *)&v9[OBJC_IVAR____TtC13CoreIDVShared29IdentityPassiveLivenessConfig_totalFrameCount] = a4;
  *(void *)&v9[OBJC_IVAR____TtC13CoreIDVShared29IdentityPassiveLivenessConfig_minimumValidFrameCount] = a5;
  v9[OBJC_IVAR____TtC13CoreIDVShared29IdentityPassiveLivenessConfig_requiresGoodLux] = a6;
  v9[OBJC_IVAR____TtC13CoreIDVShared29IdentityPassiveLivenessConfig_enablePrintReplay] = a7;
  v9[OBJC_IVAR____TtC13CoreIDVShared29IdentityPassiveLivenessConfig_disableStitchDetection] = a8;
  v9[OBJC_IVAR____TtC13CoreIDVShared29IdentityPassiveLivenessConfig_enableAutoFlash] = a9;
  v20.receiver = v9;
  v20.super_class = ObjectType;
  return objc_msgSendSuper2(&v20, sel_init);
}

id IdentityPassiveLivenessConfig.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  id v4 = sub_1D792DFF0(a1);

  return v4;
}

id IdentityPassiveLivenessConfig.init(coder:)(void *a1)
{
  id v2 = sub_1D792DFF0(a1);

  return v2;
}

Swift::Void __swiftcall IdentityPassiveLivenessConfig.encode(with:)(NSCoder with)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC13CoreIDVShared29IdentityPassiveLivenessConfig_maxRetakeCount);
  id v4 = (void *)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeInteger:v3 forKey:v4];

  uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC13CoreIDVShared29IdentityPassiveLivenessConfig_sessionTimeout);
  id v6 = (void *)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeInteger:v5 forKey:v6];

  uint64_t v7 = *(void *)(v1 + OBJC_IVAR____TtC13CoreIDVShared29IdentityPassiveLivenessConfig_faceOutOfBoundFrames);
  objc_super v8 = (void *)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeInteger:v7 forKey:v8];

  uint64_t v9 = *(void *)(v1 + OBJC_IVAR____TtC13CoreIDVShared29IdentityPassiveLivenessConfig_totalFrameCount);
  id v10 = (void *)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeInteger:v9 forKey:v10];

  uint64_t v11 = *(void *)(v1 + OBJC_IVAR____TtC13CoreIDVShared29IdentityPassiveLivenessConfig_minimumValidFrameCount);
  uint64_t v12 = (void *)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeInteger:v11 forKey:v12];

  uint64_t v13 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC13CoreIDVShared29IdentityPassiveLivenessConfig_requiresGoodLux);
  uint64_t v14 = (void *)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeBool:v13 forKey:v14];

  uint64_t v15 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC13CoreIDVShared29IdentityPassiveLivenessConfig_enablePrintReplay);
  uint64_t v16 = (void *)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeBool:v15 forKey:v16];

  uint64_t v17 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC13CoreIDVShared29IdentityPassiveLivenessConfig_disableStitchDetection);
  uint64_t v18 = (void *)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeBool:v17 forKey:v18];

  uint64_t v19 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC13CoreIDVShared29IdentityPassiveLivenessConfig_enableAutoFlash);
  id v20 = (id)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeBool:v19 forKey:v20];
}

void IdentityPassiveLivenessConfig.init()()
{
}

uint64_t static IdentityGesture.supportsSecureCoding.getter()
{
  return byte_1EA844043;
}

uint64_t static IdentityGesture.supportsSecureCoding.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  byte_1EA844043 = a1;
  return result;
}

uint64_t (*static IdentityGesture.supportsSecureCoding.modify())()
{
  return j__swift_endAccess;
}

uint64_t IdentityGesture.gesture.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC13CoreIDVShared15IdentityGesture_gesture);
}

uint64_t IdentityGesture.type.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC13CoreIDVShared15IdentityGesture_type);
}

id IdentityGesture.__allocating_init(gesture:type:)(uint64_t a1, uint64_t a2)
{
  return sub_1D792D4DC(a1, a2, &OBJC_IVAR____TtC13CoreIDVShared15IdentityGesture_gesture, &OBJC_IVAR____TtC13CoreIDVShared15IdentityGesture_type);
}

id sub_1D792D4DC(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v9 = (char *)objc_allocWithZone(v4);
  *(void *)&v9[*a3] = a1;
  *(void *)&v9[*a4] = a2;
  v11.receiver = v9;
  v11.super_class = v4;
  return objc_msgSendSuper2(&v11, sel_init);
}

id IdentityGesture.init(gesture:type:)(uint64_t a1, uint64_t a2)
{
  return sub_1D792D560(a1, a2, &OBJC_IVAR____TtC13CoreIDVShared15IdentityGesture_gesture, &OBJC_IVAR____TtC13CoreIDVShared15IdentityGesture_type);
}

id sub_1D792D560(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v4[*a3] = a1;
  *(void *)&v4[*a4] = a2;
  v11.receiver = v4;
  v11.super_class = ObjectType;
  return objc_msgSendSuper2(&v11, sel_init);
}

id IdentityGesture.__allocating_init(coder:)(void *a1)
{
  uint64_t v3 = (char *)objc_allocWithZone(v1);
  id v4 = (void *)sub_1D7A9BF98();
  id v5 = objc_msgSend(a1, sel_decodeIntegerForKey_, v4);

  *(void *)&v3[OBJC_IVAR____TtC13CoreIDVShared15IdentityGesture_gesture] = v5;
  id v6 = (void *)sub_1D7A9BF98();
  id v7 = objc_msgSend(a1, sel_decodeIntegerForKey_, v6);

  *(void *)&v3[OBJC_IVAR____TtC13CoreIDVShared15IdentityGesture_type] = v7;
  v10.receiver = v3;
  v10.super_class = v1;
  id v8 = objc_msgSendSuper2(&v10, sel_init);

  return v8;
}

id IdentityGesture.init(coder:)(void *a1)
{
  id v2 = sub_1D792E2F0(a1);

  return v2;
}

Swift::Void __swiftcall IdentityGesture.encode(with:)(NSCoder with)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC13CoreIDVShared15IdentityGesture_gesture);
  id v4 = (void *)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeInteger:v3 forKey:v4];

  uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC13CoreIDVShared15IdentityGesture_type);
  id v6 = (id)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeInteger:v5 forKey:v6];
}

id IdentityGesture.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void IdentityGesture.init()()
{
}

id sub_1D792D958(void *a1)
{
  id v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA843600);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1D7AA0A40;
  *(void *)(v5 + 32) = sub_1D7867558();
  *(void *)(v5 + 40) = type metadata accessor for IdentityGesture();
  id v6 = v2;
  sub_1D7A9C918();
  swift_bridgeObjectRelease();
  if (!v46)
  {
    sub_1D7867598((uint64_t)v45);
    goto LABEL_5;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA844160);
  if (!swift_dynamicCast())
  {
LABEL_5:
    uint64_t v7 = MEMORY[0x1E4FBC860];
    goto LABEL_6;
  }
  uint64_t v7 = v43;
LABEL_6:
  *(void *)&v6[OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_gestureSequence] = v7;
  id v8 = (void *)sub_1D7A9BF98();
  id v9 = objc_msgSend(a1, sel_decodeIntegerForKey_, v8);

  *(void *)&v6[OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_minRequiredGestureCount] = v9;
  objc_super v10 = (void *)sub_1D7A9BF98();
  id v11 = objc_msgSend(a1, sel_decodeIntegerForKey_, v10);

  *(void *)&v6[OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_timeToSkipOption] = v11;
  uint64_t v12 = (void *)sub_1D7A9BF98();
  id v13 = objc_msgSend(a1, sel_decodeIntegerForKey_, v12);

  *(void *)&v6[OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_timeToSkipAccessible] = v13;
  uint64_t v14 = (void *)sub_1D7A9BF98();
  id v15 = objc_msgSend(a1, sel_decodeIntegerForKey_, v14);

  *(void *)&v6[OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_timeToAlert] = v15;
  uint64_t v16 = (void *)sub_1D7A9BF98();
  id v17 = objc_msgSend(a1, sel_decodeIntegerForKey_, v16);

  *(void *)&v6[OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_timeToAlertAccessible] = v17;
  uint64_t v18 = (void *)sub_1D7A9BF98();
  uint64_t v19 = (uint64_t)objc_msgSend(a1, sel_decodeIntegerForKey_, v18);

  *(void *)&v6[OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_maxRetakeCount] = v19 & ~(v19 >> 63);
  id v20 = (void *)sub_1D7A9BF98();
  id v21 = objc_msgSend(a1, sel_decodeIntegerForKey_, v20);

  *(void *)&v6[OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_sessionTimeout] = v21;
  uint64_t v22 = (void *)sub_1D7A9BF98();
  id v23 = objc_msgSend(a1, sel_decodeIntegerForKey_, v22);

  *(void *)&v6[OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_faceOutOfBoundFrames] = v23;
  uint64_t v24 = (void *)sub_1D7A9BF98();
  id v25 = objc_msgSend(a1, sel_decodeIntegerForKey_, v24);

  *(void *)&v6[OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_gestureCompletionDelay] = v25;
  uint64_t v26 = (void *)sub_1D7A9BF98();
  id v27 = objc_msgSend(a1, sel_decodeIntegerForKey_, v26);

  *(void *)&v6[OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_tutorialVideoDelay] = v27;
  uint64_t v28 = (void *)sub_1D7A9BF98();
  id v29 = objc_msgSend(a1, sel_decodeIntegerForKey_, v28);

  *(void *)&v6[OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_tutorialVideoDuration] = v29;
  uint64_t v30 = (void *)sub_1D7A9BF98();
  id v31 = objc_msgSend(a1, sel_decodeIntegerForKey_, v30);

  *(void *)&v6[OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_tutorialResumeDelay] = v31;
  uint64_t v32 = (void *)sub_1D7A9BF98();
  id v33 = objc_msgSend(a1, sel_decodeIntegerForKey_, v32);

  *(void *)&v6[OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_gestureDetectedSuccessDuration] = v33;
  uint64_t v34 = (void *)sub_1D7A9BF98();
  id v35 = objc_msgSend(a1, sel_decodeIntegerForKey_, v34);

  *(void *)&v6[OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_lastGestureExtraFrameDuration] = v35;
  uint64_t v36 = (void *)sub_1D7A9BF98();
  LOBYTE(v35) = objc_msgSend(a1, sel_decodeBoolForKey_, v36);

  v6[OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_requiresGoodLux] = (_BYTE)v35;
  uint64_t v37 = (void *)sub_1D7A9BF98();
  LOBYTE(v35) = objc_msgSend(a1, sel_decodeBoolForKey_, v37);

  v6[OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_enablePrintReplay] = (_BYTE)v35;
  uint64_t v38 = (void *)sub_1D7A9BF98();
  LOBYTE(v35) = objc_msgSend(a1, sel_decodeBoolForKey_, v38);

  v6[OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_enableIDMatching] = (_BYTE)v35;
  uint64_t v39 = (void *)sub_1D7A9BF98();
  LOBYTE(v35) = objc_msgSend(a1, sel_decodeBoolForKey_, v39);

  v6[OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_requireSelfie] = (_BYTE)v35;
  uint64_t v40 = (void *)sub_1D7A9BF98();
  unsigned __int8 v41 = objc_msgSend(a1, sel_decodeBoolForKey_, v40);

  v6[OBJC_IVAR____TtC13CoreIDVShared28IdentityActiveLivenessConfig_enableAutoFlash] = v41;
  v44.receiver = v6;
  v44.super_class = ObjectType;
  return objc_msgSendSuper2(&v44, sel_init);
}

uint64_t type metadata accessor for IdentityGesture()
{
  return self;
}

id sub_1D792DFF0(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v4 = v1;
  uint64_t v5 = (void *)sub_1D7A9BF98();
  id v6 = objc_msgSend(a1, sel_decodeIntegerForKey_, v5);

  *(void *)&v4[OBJC_IVAR____TtC13CoreIDVShared29IdentityPassiveLivenessConfig_maxRetakeCount] = v6;
  uint64_t v7 = (void *)sub_1D7A9BF98();
  id v8 = objc_msgSend(a1, sel_decodeIntegerForKey_, v7);

  *(void *)&v4[OBJC_IVAR____TtC13CoreIDVShared29IdentityPassiveLivenessConfig_sessionTimeout] = v8;
  id v9 = (void *)sub_1D7A9BF98();
  id v10 = objc_msgSend(a1, sel_decodeIntegerForKey_, v9);

  *(void *)&v4[OBJC_IVAR____TtC13CoreIDVShared29IdentityPassiveLivenessConfig_faceOutOfBoundFrames] = v10;
  id v11 = (void *)sub_1D7A9BF98();
  id v12 = objc_msgSend(a1, sel_decodeIntegerForKey_, v11);

  *(void *)&v4[OBJC_IVAR____TtC13CoreIDVShared29IdentityPassiveLivenessConfig_totalFrameCount] = v12;
  id v13 = (void *)sub_1D7A9BF98();
  id v14 = objc_msgSend(a1, sel_decodeIntegerForKey_, v13);

  *(void *)&v4[OBJC_IVAR____TtC13CoreIDVShared29IdentityPassiveLivenessConfig_minimumValidFrameCount] = v14;
  id v15 = (void *)sub_1D7A9BF98();
  LOBYTE(v14) = objc_msgSend(a1, sel_decodeBoolForKey_, v15);

  v4[OBJC_IVAR____TtC13CoreIDVShared29IdentityPassiveLivenessConfig_requiresGoodLux] = (_BYTE)v14;
  uint64_t v16 = (void *)sub_1D7A9BF98();
  LOBYTE(v14) = objc_msgSend(a1, sel_decodeBoolForKey_, v16);

  v4[OBJC_IVAR____TtC13CoreIDVShared29IdentityPassiveLivenessConfig_enablePrintReplay] = (_BYTE)v14;
  id v17 = (void *)sub_1D7A9BF98();
  LOBYTE(v14) = objc_msgSend(a1, sel_decodeBoolForKey_, v17);

  v4[OBJC_IVAR____TtC13CoreIDVShared29IdentityPassiveLivenessConfig_disableStitchDetection] = (_BYTE)v14;
  uint64_t v18 = (void *)sub_1D7A9BF98();
  LOBYTE(a1) = objc_msgSend(a1, sel_decodeBoolForKey_, v18);

  v4[OBJC_IVAR____TtC13CoreIDVShared29IdentityPassiveLivenessConfig_enableAutoFlash] = (_BYTE)a1;
  v20.receiver = v4;
  v20.super_class = ObjectType;
  return objc_msgSendSuper2(&v20, sel_init);
}

id sub_1D792E2F0(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v4 = v1;
  uint64_t v5 = (void *)sub_1D7A9BF98();
  id v6 = objc_msgSend(a1, sel_decodeIntegerForKey_, v5);

  *(void *)&v4[OBJC_IVAR____TtC13CoreIDVShared15IdentityGesture_gesture] = v6;
  uint64_t v7 = (void *)sub_1D7A9BF98();
  id v8 = objc_msgSend(a1, sel_decodeIntegerForKey_, v7);

  *(void *)&v4[OBJC_IVAR____TtC13CoreIDVShared15IdentityGesture_type] = v8;
  v10.receiver = v4;
  v10.super_class = ObjectType;
  return objc_msgSendSuper2(&v10, sel_init);
}

uint64_t type metadata accessor for IdentityLivenessConfig()
{
  return self;
}

uint64_t method lookup function for IdentityLivenessConfig(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for IdentityLivenessConfig);
}

uint64_t dispatch thunk of IdentityLivenessConfig.__allocating_init(active:passive:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of IdentityLivenessConfig.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t method lookup function for IdentityActiveLivenessConfig(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for IdentityActiveLivenessConfig);
}

uint64_t dispatch thunk of IdentityActiveLivenessConfig.__allocating_init(gestureSequence:minRequiredGestureCount:timeToSkipOption:timeToSkipAccessible:timeToAlert:timeToAlertAccessible:maxRetakeCount:sessionTimeout:faceOutOfBoundFrames:gestureCompletionDelay:tutorialVideoDelay:tutorialVideoDuration:tutorialResumeDelay:gestureDetectedSuccessDuration:lastGestureExtraFrameDuration:requiresGoodLux:enablePrintReplay:enableIDMatching:requireSelfie:enableAutoFlash:)()
{
  return (*(uint64_t (**)(void))(v0 + 240))();
}

uint64_t dispatch thunk of IdentityActiveLivenessConfig.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 248))();
}

uint64_t method lookup function for IdentityPassiveLivenessConfig(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for IdentityPassiveLivenessConfig);
}

uint64_t dispatch thunk of IdentityPassiveLivenessConfig.__allocating_init(maxRetakeCount:sessionTimeout:faceOutOfBoundFrames:totalFrameCount:minimumValidFrameCount:requiresGoodLux:enablePrintReplay:disableStitchDetection:enableAutoFlash:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of IdentityPassiveLivenessConfig.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t method lookup function for IdentityGesture(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for IdentityGesture);
}

uint64_t dispatch thunk of IdentityGesture.__allocating_init(gesture:type:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of IdentityGesture.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

id NSError.init(domain:code:localizedDescription:debugDescription:underlyingError:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  sub_1D785F2A0(MEMORY[0x1E4FBC860]);
  unint64_t v13 = MEMORY[0x1E4FBB1A0];
  if (a5)
  {
    uint64_t v14 = sub_1D7A9BFC8();
    uint64_t v16 = v15;
    unint64_t v42 = v13;
    *(void *)&long long v41 = a4;
    *((void *)&v41 + 1) = a5;
    sub_1D7860E50(&v41, v40);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1D78A095C(v40, v14, v16, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a7)
  {
    uint64_t v18 = sub_1D7A9BFC8();
    uint64_t v20 = v19;
    unint64_t v42 = v13;
    *(void *)&long long v41 = a6;
    *((void *)&v41 + 1) = a7;
    sub_1D7860E50(&v41, v40);
    char v21 = swift_isUniquelyReferenced_nonNull_native();
    sub_1D78A095C(v40, v18, v20, v21);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a8)
  {
    id v22 = a8;
    id v23 = (void *)sub_1D7A9AE48();
    id v24 = objc_msgSend(v23, sel_domain);
    sub_1D7A9BFC8();

    id v25 = objc_msgSend(v23, sel_code);
    id v26 = objc_allocWithZone(MEMORY[0x1E4F28C58]);
    id v27 = (void *)sub_1D7A9BF98();
    swift_bridgeObjectRelease();
    id v28 = objc_msgSend(v26, sel_initWithDomain_code_userInfo_, v27, v25, 0);

    uint64_t v29 = sub_1D7A9BFC8();
    uint64_t v31 = v30;
    unint64_t v42 = sub_1D792E858();
    *(void *)&long long v41 = v28;
    sub_1D7860E50(&v41, v40);
    id v32 = v28;
    char v33 = swift_isUniquelyReferenced_nonNull_native();
    sub_1D78A095C(v40, v29, v31, v33);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  id v34 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  id v35 = (void *)sub_1D7A9BF98();
  swift_bridgeObjectRelease();
  uint64_t v36 = (void *)sub_1D7A9BE98();
  swift_bridgeObjectRelease();
  id v37 = objc_msgSend(v34, sel_initWithDomain_code_userInfo_, v35, a3, v36);

  return v37;
}

unint64_t sub_1D792E858()
{
  unint64_t result = qword_1EBDF7C58;
  if (!qword_1EBDF7C58)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBDF7C58);
  }
  return result;
}

id static NSError.mapFromError(_:domain:mapper:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, id))
{
  v44[0] = a2;
  uint64_t v6 = sub_1D7A9B5F8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6, v8, v9, v10, v11, v12, v13, v14);
  uint64_t v16 = (char *)v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v17 = (void *)sub_1D7A9AE48();
  if (os_variant_allows_internal_security_policies())
  {
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v18 = __swift_project_value_buffer(v6, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v16, v18, v6);
    uint64_t v19 = sub_1D7A9B5D8();
    os_log_type_t v20 = sub_1D7A9C748();
    if (os_log_type_enabled(v19, v20))
    {
      char v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v21 = 0;
      _os_log_impl(&dword_1D7853000, v19, v20, "Internal build detected", v21, 2u);
      MEMORY[0x1D947D740](v21, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v16, v6);
    id v22 = objc_msgSend(v17, sel_debugDescription, v44[0]);
    uint64_t v23 = sub_1D7A9BFC8();
    uint64_t v25 = v24;

    id v26 = objc_msgSend(v17, sel_userInfo);
    uint64_t v27 = sub_1D7A9BEB8();

    uint64_t v28 = sub_1D7A9BFC8();
    if (*(void *)(v27 + 16) && (uint64_t v30 = sub_1D7A18684(v28, v29), (v31 & 1) != 0))
    {
      sub_1D78907D8(*(void *)(v27 + 56) + 32 * v30, (uint64_t)&v45);
    }
    else
    {
      long long v45 = 0u;
      long long v46 = 0u;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*((void *)&v46 + 1))
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDF9740);
      if (swift_dynamicCast()) {
        id v32 = (void *)v44[1];
      }
      else {
        id v32 = 0;
      }
    }
    else
    {
      sub_1D7867598((uint64_t)&v45);
      id v32 = 0;
    }
  }
  else
  {
    id v32 = 0;
    uint64_t v23 = 0;
    uint64_t v25 = 0xE000000000000000;
  }
  id v33 = objc_msgSend(v17, sel_domain, v44[0]);
  uint64_t v34 = sub_1D7A9BFC8();
  uint64_t v36 = v35;

  uint64_t v37 = a4(v34, v36, objc_msgSend(v17, sel_code));
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  swift_bridgeObjectRelease();
  sub_1D792E858();
  swift_bridgeObjectRetain();
  id v42 = NSError.init(domain:code:localizedDescription:debugDescription:underlyingError:)(v44[0], a3, v37, v39, v41, v23, v25, v32);

  return v42;
}

uint64_t sub_1D792EC48(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1D792EC70(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_1D792EC98@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF8218);
  MEMORY[0x1F4188790](v4 - 8, v5, v6, v7, v8, v9, v10, v11);
  uint64_t v13 = (char *)aBlock - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1D7A9B688();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  uint64_t v15 = *(NSObject **)(v2 + 24);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v13;
  *(void *)(v16 + 24) = v2;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_1D792EF78;
  *(void *)(v17 + 24) = v16;
  aBlock[4] = sub_1D792EF90;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D792EC70;
  aBlock[3] = &block_descriptor_5;
  uint64_t v18 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v15, v18);
  _Block_release(v18);
  LOBYTE(v2) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v2)
  {
    __break(1u);
  }
  else
  {
    sub_1D792EFD0((uint64_t)v13, a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_1D792EE8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF8218);
  MEMORY[0x1F4188790](v4 - 8, v5, v6, v7, v8, v9, v10, v11);
  uint64_t v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a2 + OBJC_IVAR____TtC13CoreIDVShared14NetworkMonitor_currPath;
  swift_beginAccess();
  sub_1D7930838(v14, (uint64_t)v13);
  return sub_1D793071C((uint64_t)v13, a1);
}

uint64_t sub_1D792EF40()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D792EF78()
{
  return sub_1D792EE8C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1D792EF80()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D792EF90()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t sub_1D792EFD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF8218);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D792F038()
{
  uint64_t v0 = sub_1D7A9B5F8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0, v2, v3, v4, v5, v6, v7, v8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBDF9DC8 != -1) {
    swift_once();
  }
  uint64_t v11 = __swift_project_value_buffer(v0, (uint64_t)qword_1EBDFBE70);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v10, v11, v0);
  uint64_t v12 = sub_1D7A9B5D8();
  os_log_type_t v13 = sub_1D7A9C748();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl(&dword_1D7853000, v12, v13, "Creating shared NetworkMonitor", v14, 2u);
    MEMORY[0x1D947D740](v14, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v10, v0);
  type metadata accessor for NetworkMonitor();
  uint64_t v15 = swift_allocObject();
  sub_1D792F260();
  uint64_t result = sub_1D792F4C4();
  qword_1EBDF7CC0 = v15;
  return result;
}

uint64_t static NetworkMonitor.shared.getter()
{
  if (qword_1EBDF7DD8 != -1) {
    swift_once();
  }
  return swift_retain();
}

uint64_t sub_1D792F260()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D7A9C7C8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4, v5, v6, v7, v8, v9, v10);
  uint64_t v12 = (char *)v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1D7A9C7B8();
  MEMORY[0x1F4188790](v13, v14, v15, v16, v17, v18, v19, v20);
  uint64_t v21 = sub_1D7A9B708();
  MEMORY[0x1F4188790](v21 - 8, v22, v23, v24, v25, v26, v27, v28);
  *(void *)(v0 + 16) = 0;
  sub_1D7865074();
  sub_1D7A9B6E8();
  v33[1] = MEMORY[0x1E4FBC860];
  sub_1D7930784();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9DD0);
  sub_1D79307DC();
  sub_1D7A9CBA8();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v12, *MEMORY[0x1E4FBCC58], v2);
  *(void *)(v0 + 24) = sub_1D7A9C808();
  uint64_t v29 = v0 + OBJC_IVAR____TtC13CoreIDVShared14NetworkMonitor_currPath;
  uint64_t v30 = sub_1D7A9B688();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v29, 1, 1, v30);
  char v31 = (void *)(v1 + OBJC_IVAR____TtC13CoreIDVShared14NetworkMonitor_observer);
  void *v31 = 0;
  v31[1] = 0;
  return v1;
}

uint64_t sub_1D792F4C4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D7A9B5F8();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v2, v4, v5, v6, v7, v8, v9, v10);
  uint64_t v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11, v14, v15, v16, v17, v18, v19, v20);
  uint64_t v22 = (char *)&v32 - v21;
  if (*(void *)(v1 + 16))
  {
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v23 = __swift_project_value_buffer(v2, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v13, v23, v2);
    uint64_t v24 = sub_1D7A9B5D8();
    os_log_type_t v25 = sub_1D7A9C748();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v26 = 0;
      _os_log_impl(&dword_1D7853000, v24, v25, "NetworkMonitor already started, ignoring.", v26, 2u);
      MEMORY[0x1D947D740](v26, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v13, v2);
  }
  else
  {
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v28 = __swift_project_value_buffer(v2, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v22, v28, v2);
    uint64_t v29 = sub_1D7A9B5D8();
    os_log_type_t v30 = sub_1D7A9C748();
    if (os_log_type_enabled(v29, v30))
    {
      char v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v31 = 0;
      _os_log_impl(&dword_1D7853000, v29, v30, "NetworkMonitor start called", v31, 2u);
      MEMORY[0x1D947D740](v31, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v22, v2);
    sub_1D7A9B658();
    swift_allocObject();
    *(void *)(v1 + 16) = sub_1D7A9B648();
    uint64_t result = swift_release();
    if (*(void *)(v1 + 16))
    {
      swift_allocObject();
      swift_weakInit();
      swift_retain();
      swift_retain();
      sub_1D78F0D88((uint64_t)sub_1D793049C);
      sub_1D7A9B618();
      swift_release();
      uint64_t result = swift_release_n();
      if (*(void *)(v1 + 16))
      {
        swift_retain();
        sub_1D7A9B628();
        return swift_release();
      }
    }
  }
  return result;
}

uint64_t sub_1D792F85C(uint64_t a1)
{
  uint64_t v128 = a1;
  uint64_t v1 = sub_1D7A9B608();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1, v3, v4, v5, v6, v7, v8, v9);
  uint64_t v11 = (char *)&v117 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF8218);
  MEMORY[0x1F4188790](v12 - 8, v13, v14, v15, v16, v17, v18, v19);
  uint64_t v21 = (char *)&v117 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1D7A9B5F8();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v31 = MEMORY[0x1F4188790](v22, v24, v25, v26, v27, v28, v29, v30);
  id v33 = (char *)&v117 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = MEMORY[0x1F4188790](v31, v34, v35, v36, v37, v38, v39, v40);
  uint64_t v43 = (char *)&v117 - v42;
  uint64_t v51 = MEMORY[0x1F4188790](v41, v44, v45, v46, v47, v48, v49, v50);
  uint64_t v121 = (char *)&v117 - v52;
  uint64_t v60 = MEMORY[0x1F4188790](v51, v53, v54, v55, v56, v57, v58, v59);
  uint64_t v120 = (char *)&v117 - v61;
  uint64_t v69 = MEMORY[0x1F4188790](v60, v62, v63, v64, v65, v66, v67, v68);
  uint64_t v119 = (char *)&v117 - v70;
  MEMORY[0x1F4188790](v69, v71, v72, v73, v74, v75, v76, v77);
  uint64_t v79 = (char *)&v117 - v78;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  uint64_t v127 = result;
  if (result)
  {
    uint64_t v117 = v43;
    uint64_t v118 = v33;
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v81 = __swift_project_value_buffer(v22, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    uint64_t v82 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
    uint64_t v124 = v23 + 16;
    uint64_t v125 = v81;
    char v123 = v82;
    v82(v79, v81, v22);
    uint64_t v83 = sub_1D7A9B5D8();
    os_log_type_t v84 = sub_1D7A9C748();
    if (os_log_type_enabled(v83, v84))
    {
      uint64_t v85 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v85 = 0;
      _os_log_impl(&dword_1D7853000, v83, v84, "NetworkMonitor: update handler called.", v85, 2u);
      MEMORY[0x1D947D740](v85, -1, -1);
    }

    uint64_t v86 = *(void (**)(char *, uint64_t))(v23 + 8);
    uint64_t v126 = v23 + 8;
    uint64_t v122 = v86;
    v86(v79, v22);
    uint64_t v87 = sub_1D7A9B688();
    uint64_t v88 = *(void *)(v87 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v88 + 16))(v21, v128, v87);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v88 + 56))(v21, 0, 1, v87);
    uint64_t v89 = v127;
    uint64_t v90 = v127 + OBJC_IVAR____TtC13CoreIDVShared14NetworkMonitor_currPath;
    swift_beginAccess();
    sub_1D793071C((uint64_t)v21, v90);
    swift_endAccess();
    if (*(void *)(v89 + OBJC_IVAR____TtC13CoreIDVShared14NetworkMonitor_observer))
    {
      uint64_t v91 = *(void *)(v89 + OBJC_IVAR____TtC13CoreIDVShared14NetworkMonitor_observer + 8);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v93 = *(void (**)(uint64_t, uint64_t, uint64_t))(v91 + 8);
      swift_unknownObjectRetain();
      v93(v128, ObjectType, v91);
      swift_unknownObjectRelease();
    }
    uint64_t v94 = *(void (**)(char *, void, uint64_t))(v2 + 104);
    v94(v11, *MEMORY[0x1E4F389B8], v1);
    char v95 = sub_1D7A9B678();
    uint64_t v96 = *(void (**)(char *, uint64_t))(v2 + 8);
    v96(v11, v1);
    if (v95)
    {
      v123(v119, v125, v22);
      os_log_type_t v97 = sub_1D7A9B5D8();
      os_log_type_t v98 = sub_1D7A9C748();
      if (os_log_type_enabled(v97, v98))
      {
        unint64_t v99 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v99 = 0;
        _os_log_impl(&dword_1D7853000, v97, v98, "DEVICE ON CELLULAR NETWORK", v99, 2u);
        MEMORY[0x1D947D740](v99, -1, -1);
      }

      v122(v119, v22);
    }
    v94(v11, *MEMORY[0x1E4F38998], v1);
    char v100 = sub_1D7A9B678();
    v96(v11, v1);
    if (v100)
    {
      v123(v120, v125, v22);
      uint64_t v101 = sub_1D7A9B5D8();
      os_log_type_t v102 = sub_1D7A9C748();
      if (os_log_type_enabled(v101, v102))
      {
        char v103 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)char v103 = 0;
        _os_log_impl(&dword_1D7853000, v101, v102, "DEVICE ON WIRED ETHERNET NETWORK", v103, 2u);
        MEMORY[0x1D947D740](v103, -1, -1);
      }

      v122(v120, v22);
    }
    v94(v11, *MEMORY[0x1E4F389A0], v1);
    char v104 = sub_1D7A9B678();
    v96(v11, v1);
    if (v104)
    {
      v123(v121, v125, v22);
      uint64_t v105 = sub_1D7A9B5D8();
      os_log_type_t v106 = sub_1D7A9C748();
      if (os_log_type_enabled(v105, v106))
      {
        uint64_t v107 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v107 = 0;
        _os_log_impl(&dword_1D7853000, v105, v106, "DEVICE ON WIFI NETWORK", v107, 2u);
        MEMORY[0x1D947D740](v107, -1, -1);
      }

      v122(v121, v22);
    }
    v94(v11, *MEMORY[0x1E4F389A8], v1);
    char v108 = sub_1D7A9B678();
    v96(v11, v1);
    char v109 = v118;
    if (v108)
    {
      uint64_t v110 = v117;
      v123(v117, v125, v22);
      uint64_t v111 = sub_1D7A9B5D8();
      os_log_type_t v112 = sub_1D7A9C748();
      if (os_log_type_enabled(v111, v112))
      {
        uint64_t v113 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v113 = 0;
        _os_log_impl(&dword_1D7853000, v111, v112, "DEVICE ON OTHER NETWORK", v113, 2u);
        MEMORY[0x1D947D740](v113, -1, -1);
      }

      v122(v110, v22);
    }
    if (sub_1D7A9B668())
    {
      v123(v109, v125, v22);
      uint64_t v114 = sub_1D7A9B5D8();
      os_log_type_t v115 = sub_1D7A9C748();
      if (os_log_type_enabled(v114, v115))
      {
        uint64_t v116 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v116 = 0;
        _os_log_impl(&dword_1D7853000, v114, v115, "DEVICE ON EXPENSIVE NETWORK", v116, 2u);
        MEMORY[0x1D947D740](v116, -1, -1);
      }

      swift_release();
      return ((uint64_t (*)(char *, uint64_t))v122)(v109, v22);
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1D7930170()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D7A9B5F8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4, v5, v6, v7, v8, v9, v10);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBDF9DC8 != -1) {
    swift_once();
  }
  uint64_t v13 = __swift_project_value_buffer(v2, (uint64_t)qword_1EBDFBE70);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v12, v13, v2);
  uint64_t v14 = sub_1D7A9B5D8();
  os_log_type_t v15 = sub_1D7A9C748();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v16 = 0;
    _os_log_impl(&dword_1D7853000, v14, v15, "NetworkMonitor stop called", v16, 2u);
    MEMORY[0x1D947D740](v16, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v12, v2);
  if (*(void *)(v1 + 16))
  {
    swift_retain();
    sub_1D7A9B638();
    swift_release();
  }
  *(void *)(v1 + 16) = 0;
  return swift_release();
}

uint64_t sub_1D7930350(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)(v2 + OBJC_IVAR____TtC13CoreIDVShared14NetworkMonitor_observer);
  *uint64_t v3 = a1;
  v3[1] = a2;
  swift_unknownObjectRetain();
  return swift_unknownObjectRelease();
}

uint64_t NetworkMonitor.deinit()
{
  swift_release();

  sub_1D79304A4(v0 + OBJC_IVAR____TtC13CoreIDVShared14NetworkMonitor_currPath);
  swift_unknownObjectRelease();
  return v0;
}

uint64_t NetworkMonitor.__deallocating_deinit()
{
  swift_release();

  sub_1D79304A4(v0 + OBJC_IVAR____TtC13CoreIDVShared14NetworkMonitor_currPath);
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1D7930464()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D793049C(uint64_t a1)
{
  return sub_1D792F85C(a1);
}

uint64_t sub_1D79304A4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF8218);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t dispatch thunk of NetworkObserver.pathDidChange(path:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1D7930518()
{
  return type metadata accessor for NetworkMonitor();
}

uint64_t type metadata accessor for NetworkMonitor()
{
  uint64_t result = qword_1EBDF7DF0;
  if (!qword_1EBDF7DF0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1D793056C()
{
  sub_1D79306C4();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for NetworkMonitor(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for NetworkMonitor);
}

uint64_t dispatch thunk of NetworkMonitor.currentPath.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of NetworkMonitor.start()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of NetworkMonitor.stop()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of NetworkMonitor.setObserver(observer:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

void sub_1D79306C4()
{
  if (!qword_1EBDF8220)
  {
    sub_1D7A9B688();
    unint64_t v0 = sub_1D7A9C9A8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBDF8220);
    }
  }
}

uint64_t sub_1D793071C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF8218);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_1D7930784()
{
  unint64_t result = qword_1EBDF9DE0;
  if (!qword_1EBDF9DE0)
  {
    sub_1D7A9C7B8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDF9DE0);
  }
  return result;
}

unint64_t sub_1D79307DC()
{
  unint64_t result = qword_1EBDF9DD8;
  if (!qword_1EBDF9DD8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBDF9DD0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDF9DD8);
  }
  return result;
}

uint64_t sub_1D7930838(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF8218);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t static ISO18013ReaderRequestInfoConstant.requestLogotypeIconDataKey.getter()
{
  return 0xD00000000000001CLL;
}

unint64_t static ISO18013ReaderRequestInfoConstant.requestInterpretWillNotRetainIntentAsDisplayOnlyKey.getter()
{
  return 0xD00000000000003ALL;
}

ValueMetadata *type metadata accessor for ISO18013ReaderRequestInfoConstant()
{
  return &type metadata for ISO18013ReaderRequestInfoConstant;
}

uint64_t destroy for ASN1Any()
{
  return swift_unknownObjectRelease();
}

uint64_t initializeWithCopy for ASN1Any(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_unknownObjectRetain();
  return a1;
}

void *assignWithCopy for ASN1Any(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  return a1;
}

_OWORD *assignWithTake for ASN1Any(_OWORD *a1, _OWORD *a2)
{
  swift_unknownObjectRelease();
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  return a1;
}

uint64_t getEnumTagSinglePayload for ASN1Any(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ASN1Any(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ASN1Any()
{
  return &type metadata for ASN1Any;
}

uint64_t sub_1D7930A60()
{
  return sub_1D7930C74(*(void *)(v0 + 8), *(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1D7930A6C(uint64_t a1)
{
  return sub_1D7930C0C(a1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1D7930A78()
{
  uint64_t v1 = v0[1];
  uint64_t v2 = v0[2];
  unint64_t v3 = v0[3];
  sub_1D7A9D5D8();
  unint64_t v4 = v3 >> 1;
  uint64_t result = v4 - v2;
  if (__OFSUB__(v4, v2))
  {
    __break(1u);
  }
  else
  {
    uint64_t result = sub_1D7A9D5E8();
    BOOL v6 = __OFSUB__(v4, v2);
    uint64_t v7 = v4 - v2;
    if (!v7) {
      return sub_1D7A9D628();
    }
    if (!((v7 < 0) ^ v6 | (v7 == 0)))
    {
      uint64_t v8 = v1 + v2;
      do
      {
        ++v8;
        sub_1D7A9D5F8();
        --v7;
      }
      while (v7);
      return sub_1D7A9D628();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1D7930AFC(uint64_t a1, uint64_t a2)
{
  return sub_1D7932AA4(*(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a2 + 8), *(void *)(a2 + 16), *(void *)(a2 + 24));
}

unint64_t sub_1D7930B1C()
{
  unint64_t result = qword_1EA844170;
  if (!qword_1EA844170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844170);
  }
  return result;
}

uint64_t sub_1D7930B70()
{
  return 0x28796E41314E5341;
}

uint64_t sub_1D7930C0C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t result = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t result = sub_1D7A9D5E8();
  BOOL v8 = __OFSUB__(v4, a3);
  uint64_t v9 = v4 - a3;
  if (!v9) {
    return result;
  }
  if ((v9 < 0) ^ v8 | (v9 == 0))
  {
LABEL_8:
    __break(1u);
    return result;
  }
  uint64_t v10 = a2 + a3;
  do
  {
    ++v10;
    uint64_t result = sub_1D7A9D5F8();
    --v9;
  }
  while (v9);
  return result;
}

uint64_t sub_1D7930C74(uint64_t a1, uint64_t a2, unint64_t a3)
{
  sub_1D7A9D5D8();
  unint64_t v6 = a3 >> 1;
  uint64_t result = (a3 >> 1) - a2;
  if (__OFSUB__(a3 >> 1, a2))
  {
    __break(1u);
  }
  else
  {
    uint64_t result = sub_1D7A9D5E8();
    BOOL v8 = __OFSUB__(v6, a2);
    uint64_t v9 = v6 - a2;
    if (!v9) {
      return sub_1D7A9D628();
    }
    if (!((v9 < 0) ^ v8 | (v9 == 0)))
    {
      uint64_t v10 = a1 + a2;
      do
      {
        ++v10;
        sub_1D7A9D5F8();
        --v9;
      }
      while (v9);
      return sub_1D7A9D628();
    }
  }
  __break(1u);
  return result;
}

uint64_t AlgorithmIdentifier.description.getter()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_1D7A46E6C(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1D7930D50()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_1D7A46E6C(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t static AlgorithmIdentifier.sha1.getter@<X0>(void *a1@<X8>)
{
  return sub_1D7930DD0((uint64_t)&unk_1F2F17A28, a1);
}

uint64_t static AlgorithmIdentifier.sha256.getter@<X0>(void *a1@<X8>)
{
  return sub_1D7930DD0((uint64_t)&unk_1F2F17A78, a1);
}

uint64_t static AlgorithmIdentifier.sha384.getter@<X0>(void *a1@<X8>)
{
  return sub_1D7930DD0((uint64_t)&unk_1F2F17AE0, a1);
}

uint64_t static AlgorithmIdentifier.sha512.getter@<X0>(void *a1@<X8>)
{
  return sub_1D7930DD0((uint64_t)&unk_1F2F17B48, a1);
}

uint64_t sub_1D7930DD0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  BOOL v8 = sub_1D789E0D8(0, 1024, 0, MEMORY[0x1E4FBC860]);
  uint64_t result = sub_1D7A2E84C(5uLL, 0, 0, (uint64_t *)&v8);
  uint64_t v5 = v8;
  unint64_t v6 = v8 + 32;
  uint64_t v7 = (2 * *((void *)v8 + 2)) | 1;
  *a2 = a1;
  a2[1] = v5;
  a2[2] = v6;
  a2[3] = 0;
  a2[4] = v7;
  return result;
}

uint64_t AlgorithmIdentifier.hash(_:)(uint64_t a1, unint64_t a2)
{
  unint64_t v148 = a2;
  uint64_t v144 = a1;
  uint64_t v153 = *MEMORY[0x1E4F143B8];
  uint64_t v139 = sub_1D7A9BDA8();
  uint64_t v124 = *(void *)(v139 - 8);
  MEMORY[0x1F4188790](v139, v4, v5, v6, v7, v8, v9, v10);
  uint64_t v138 = (uint64_t)&v124 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v127 = sub_1D7A9B858();
  uint64_t v126 = *(void *)(v127 - 8);
  MEMORY[0x1F4188790](v127, v12, v13, v14, v15, v16, v17, v18);
  uint64_t v125 = (char *)&v124 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v143 = sub_1D7A9BD98();
  uint64_t v128 = *(void *)(v143 - 8);
  MEMORY[0x1F4188790](v143, v20, v21, v22, v23, v24, v25, v26);
  uint64_t v142 = (uint64_t)&v124 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v131 = sub_1D7A9B848();
  uint64_t v130 = *(void *)(v131 - 8);
  MEMORY[0x1F4188790](v131, v28, v29, v30, v31, v32, v33, v34);
  uint64_t v129 = (char *)&v124 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v137 = sub_1D7A9BD88();
  uint64_t v132 = *(void *)(v137 - 8);
  MEMORY[0x1F4188790](v137, v36, v37, v38, v39, v40, v41, v42);
  char v136 = (char *)&v124 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = sub_1D7A9B838();
  uint64_t v134 = *(void *)(v135 - 8);
  MEMORY[0x1F4188790](v135, v44, v45, v46, v47, v48, v49, v50);
  char v133 = (char *)&v124 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_1D7A9BE78();
  uint64_t v140 = *(void *)(v52 - 8);
  MEMORY[0x1F4188790](v52, v53, v54, v55, v56, v57, v58, v59);
  uint64_t v61 = (char *)&v124 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_1D7A9BE68();
  uint64_t v141 = *(void *)(v62 - 8);
  MEMORY[0x1F4188790](v62, v63, v64, v65, v66, v67, v68, v69);
  uint64_t v71 = (char *)&v124 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = *(void **)v2;
  uint64_t v73 = *(void *)(v2 + 8);
  uint64_t v74 = *(void *)(v2 + 16);
  unint64_t v146 = *(void *)(v2 + 24);
  uint64_t v147 = v74;
  unint64_t v145 = *(void *)(v2 + 32);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  *(void *)&long long v150 = sub_1D789E0D8(0, 1024, 0, MEMORY[0x1E4FBC860]);
  sub_1D7A2E84C(5uLL, 0, 0, (uint64_t *)&v150);
  uint64_t v75 = v150;
  uint64_t v76 = *(void *)(v150 + 16);
  if (sub_1D7932718(qword_1F2F17BB0, v72))
  {
    if (v73)
    {
      char v77 = sub_1D7932AA4(v75 + 32, 0, (2 * v76) | 1, v147, v146, v145);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      if (v77)
      {
        uint64_t v78 = sub_1D7932FB0(&qword_1EA844190, MEMORY[0x1E4F251E8]);
        sub_1D7A9B828();
        unint64_t v79 = v148;
        uint64_t v80 = v144;
        switch(v148 >> 62)
        {
          case 1uLL:
            uint64_t v147 = v78;
            if (v144 >> 32 < (int)v144)
            {
              __break(1u);
LABEL_66:
              __break(1u);
LABEL_67:
              __break(1u);
LABEL_68:
              __break(1u);
            }
            unint64_t v105 = v148;
            unint64_t v146 = v148 & 0x3FFFFFFFFFFFFFFFLL;
            sub_1D7860790(v144, v148);
            sub_1D79328C4((int)v80, v80 >> 32);
LABEL_37:
            sub_1D78607E8(v80, v105);
            uint64_t v108 = v140;
            uint64_t v107 = v141;
LABEL_38:
            sub_1D7A9B818();
            (*(void (**)(char *, uint64_t))(v108 + 8))(v61, v52);
            uint64_t v151 = v62;
            uint64_t v152 = sub_1D7932FB0(&qword_1EA844198, MEMORY[0x1E4F251C8]);
            boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v150);
            (*(void (**)(uint64_t *, char *, uint64_t))(v107 + 16))(boxed_opaque_existential_0, v71, v62);
            __swift_project_boxed_opaque_existential_1(&v150, v151);
            sub_1D7A9AD38();
            (*(void (**)(char *, uint64_t))(v107 + 8))(v71, v62);
            break;
          case 2uLL:
            unint64_t v146 = *(void *)(v144 + 16);
            uint64_t v147 = v78;
            unint64_t v105 = v148;
            uint64_t v106 = *(void *)(v144 + 24);
            sub_1D7860790(v144, v148);
            swift_retain();
            swift_retain();
            sub_1D79328C4(v146, v106);
            if (v3) {
              goto LABEL_69;
            }
            swift_release();
            swift_release();
            goto LABEL_37;
          case 3uLL:
            *(void *)((char *)&v150 + 6) = 0;
            *(void *)&long long v150 = 0;
            goto LABEL_34;
          default:
            *(void *)&long long v150 = v144;
            DWORD2(v150) = v148;
            WORD6(v150) = WORD2(v148);
LABEL_34:
            sub_1D7A9B808();
            sub_1D78607E8(v80, v79);
            uint64_t v108 = v140;
            uint64_t v107 = v141;
            goto LABEL_38;
        }
        goto LABEL_63;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease_n();
    }
  }
  else
  {
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  *(void *)&long long v150 = sub_1D789E0D8(0, 1024, 0, MEMORY[0x1E4FBC860]);
  sub_1D7A2E84C(5uLL, 0, 0, (uint64_t *)&v150);
  uint64_t v81 = v150;
  uint64_t v82 = *(void *)(v150 + 16);
  if (!sub_1D7932718(qword_1F2F17C00, v72))
  {
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
LABEL_15:
    unint64_t v84 = v148;
    goto LABEL_16;
  }
  if (!v73)
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease_n();
    goto LABEL_15;
  }
  char v83 = sub_1D7932AA4(v81 + 32, 0, (2 * v82) | 1, v147, v146, v145);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v84 = v148;
  if (v83)
  {
    sub_1D7932FB0(&qword_1EA8424A0, MEMORY[0x1E4F25170]);
    uint64_t v86 = (uint64_t)v136;
    uint64_t v85 = v137;
    sub_1D7A9B828();
    uint64_t v87 = v144;
    switch(v84 >> 62)
    {
      case 1uLL:
        if (v144 >> 32 < (int)v144) {
          goto LABEL_66;
        }
        sub_1D7860790(v144, v84);
        sub_1D78D117C((int)v87, v87 >> 32, v84 & 0x3FFFFFFFFFFFFFFFLL, v86);
        break;
      case 2uLL:
        uint64_t v110 = *(void *)(v144 + 16);
        uint64_t v111 = *(void *)(v144 + 24);
        sub_1D7860790(v144, v84);
        swift_retain();
        swift_retain();
        sub_1D78D117C(v110, v111, v84 & 0x3FFFFFFFFFFFFFFFLL, v86);
        if (v3) {
          goto LABEL_69;
        }
        swift_release();
        swift_release();
        break;
      case 3uLL:
        *(void *)((char *)&v150 + 6) = 0;
        *(void *)&long long v150 = 0;
        goto LABEL_42;
      default:
        *(void *)&long long v150 = v144;
        WORD4(v150) = v84;
        BYTE10(v150) = BYTE2(v84);
        BYTE11(v150) = BYTE3(v84);
        BYTE12(v150) = BYTE4(v84);
        BYTE13(v150) = BYTE5(v84);
LABEL_42:
        sub_1D7A9B808();
        break;
    }
    sub_1D78607E8(v87, v84);
    uint64_t v112 = v135;
    uint64_t v113 = v133;
    sub_1D7A9B818();
    (*(void (**)(uint64_t, uint64_t))(v132 + 8))(v86, v85);
    uint64_t v151 = v112;
    uint64_t v152 = sub_1D7932FB0(&qword_1EA844188, MEMORY[0x1E4F24F80]);
    uint64_t v114 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v150);
    os_log_type_t v115 = &v156;
LABEL_62:
    uint64_t v122 = *(v115 - 32);
    (*(void (**)(uint64_t *, char *, uint64_t))(v122 + 16))(v114, v113, v112);
    __swift_project_boxed_opaque_existential_1(&v150, v151);
    sub_1D7A9AD38();
    (*(void (**)(char *, uint64_t))(v122 + 8))(v113, v112);
LABEL_63:
    uint64_t v101 = v149;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v150);
    return v101;
  }
LABEL_16:
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  *(void *)&long long v150 = sub_1D789E0D8(0, 1024, 0, MEMORY[0x1E4FBC860]);
  sub_1D7A2E84C(5uLL, 0, 0, (uint64_t *)&v150);
  uint64_t v88 = v150;
  uint64_t v89 = *(void *)(v150 + 16);
  if (sub_1D7932718(qword_1F2F17C68, v72))
  {
    if (v73)
    {
      char v90 = sub_1D7932AA4(v88 + 32, 0, (2 * v89) | 1, v147, v146, v145);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      if (v90)
      {
        sub_1D7932FB0(&qword_1EA843400, MEMORY[0x1E4F25180]);
        uint64_t v92 = v142;
        uint64_t v91 = v143;
        sub_1D7A9B828();
        uint64_t v93 = v144;
        switch(v84 >> 62)
        {
          case 1uLL:
            if (v144 >> 32 < (int)v144) {
              goto LABEL_67;
            }
            sub_1D7860790(v144, v84);
            uint64_t v92 = v142;
            sub_1D78D11D8((int)v93, v93 >> 32, v84 & 0x3FFFFFFFFFFFFFFFLL, v142);
            goto LABEL_50;
          case 2uLL:
            uint64_t v116 = *(void *)(v144 + 16);
            uint64_t v117 = *(void *)(v144 + 24);
            sub_1D7860790(v144, v84);
            swift_retain();
            swift_retain();
            uint64_t v118 = v117;
            uint64_t v92 = v142;
            sub_1D78D11D8(v116, v118, v84 & 0x3FFFFFFFFFFFFFFFLL, v142);
            if (v3) {
              goto LABEL_69;
            }
            swift_release();
            swift_release();
LABEL_50:
            sub_1D78607E8(v93, v84);
            uint64_t v91 = v143;
            break;
          case 3uLL:
            *(void *)((char *)&v150 + 6) = 0;
            *(void *)&long long v150 = 0;
            goto LABEL_52;
          default:
            *(void *)&long long v150 = v144;
            WORD4(v150) = v84;
            BYTE10(v150) = BYTE2(v84);
            BYTE11(v150) = BYTE3(v84);
            BYTE12(v150) = BYTE4(v84);
            BYTE13(v150) = BYTE5(v84);
LABEL_52:
            sub_1D7A9B808();
            sub_1D78607E8(v93, v84);
            break;
        }
        uint64_t v113 = v129;
        sub_1D7A9B818();
        (*(void (**)(uint64_t, uint64_t))(v128 + 8))(v92, v91);
        uint64_t v112 = v131;
        uint64_t v151 = v131;
        uint64_t v152 = sub_1D7932FB0(&qword_1EA844180, MEMORY[0x1E4F24FA0]);
        uint64_t v114 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v150);
        os_log_type_t v115 = &v155;
        goto LABEL_62;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease_n();
    }
  }
  else
  {
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  *(void *)&long long v150 = sub_1D789E0D8(0, 1024, 0, MEMORY[0x1E4FBC860]);
  sub_1D7A2E84C(5uLL, 0, 0, (uint64_t *)&v150);
  uint64_t v94 = v150;
  uint64_t v95 = *(void *)(v150 + 16);
  if (sub_1D7932718(qword_1F2F17CD0, v72))
  {
    if (v73)
    {
      char v96 = sub_1D7932AA4(v94 + 32, 0, (2 * v95) | 1, v147, v146, v145);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      if (v96)
      {
        sub_1D7932FB0(&qword_1EA8433F0, MEMORY[0x1E4F25190]);
        uint64_t v98 = v138;
        uint64_t v97 = v139;
        sub_1D7A9B828();
        uint64_t v99 = v144;
        switch(v84 >> 62)
        {
          case 1uLL:
            if (v144 >> 32 < (int)v144) {
              goto LABEL_68;
            }
            sub_1D7860790(v144, v84);
            uint64_t v98 = v138;
            sub_1D78D1314((int)v99, v99 >> 32, v84 & 0x3FFFFFFFFFFFFFFFLL, v138);
LABEL_60:
            sub_1D78607E8(v99, v84);
            uint64_t v97 = v139;
            break;
          case 2uLL:
            uint64_t v119 = *(void *)(v144 + 16);
            uint64_t v120 = *(void *)(v144 + 24);
            sub_1D7860790(v144, v84);
            swift_retain();
            swift_retain();
            uint64_t v121 = v120;
            uint64_t v98 = v138;
            sub_1D78D1314(v119, v121, v84 & 0x3FFFFFFFFFFFFFFFLL, v138);
            if (v3)
            {
LABEL_69:
              swift_release();
              swift_release();
              __break(1u);
              JUMPOUT(0x1D793229CLL);
            }
            swift_release();
            swift_release();
            goto LABEL_60;
          case 3uLL:
            *(void *)((char *)&v150 + 6) = 0;
            *(void *)&long long v150 = 0;
            goto LABEL_57;
          default:
            *(void *)&long long v150 = v144;
            WORD4(v150) = v84;
            BYTE10(v150) = BYTE2(v84);
            BYTE11(v150) = BYTE3(v84);
            BYTE12(v150) = BYTE4(v84);
            BYTE13(v150) = BYTE5(v84);
LABEL_57:
            sub_1D7A9B808();
            sub_1D78607E8(v99, v84);
            break;
        }
        uint64_t v113 = v125;
        sub_1D7A9B818();
        (*(void (**)(uint64_t, uint64_t))(v124 + 8))(v98, v97);
        uint64_t v112 = v127;
        uint64_t v151 = v127;
        uint64_t v152 = sub_1D7932FB0(&qword_1EA844178, MEMORY[0x1E4F24FB8]);
        uint64_t v114 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v150);
        os_log_type_t v115 = &v154;
        goto LABEL_62;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease_n();
    }
  }
  else
  {
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  *(void *)&long long v150 = 0;
  *((void *)&v150 + 1) = 0xE000000000000000;
  sub_1D7A9CC48();
  sub_1D7A9C128();
  uint64_t v100 = swift_bridgeObjectRetain();
  sub_1D7A46E6C(v100);
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v102 = *((void *)&v150 + 1);
  uint64_t v101 = v150;
  LOWORD(v150) = 0;
  unint64_t v103 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
  sub_1D7860544();
  swift_allocError();
  DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, v101, v102, (__int16 *)&v150, 0, v103, 0xD00000000000006DLL, 0x80000001D7AC48A0, v104, 0x293A5F2868736168, 0xE800000000000000, 47);
  swift_willThrow();
  return v101;
}

uint64_t sub_1D79322DC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  BOOL v4 = *(void *)a1 == 16 && *(unsigned char *)(a1 + 8) == 0;
  if (!v4 || (*(unsigned char *)(a1 + 56) & 1) != 0)
  {
    uint64_t v6 = sub_1D78F7D1C();
    uint64_t v8 = v7;
    type metadata accessor for ASN1Error.Backing();
    uint64_t v9 = swift_allocObject();
    *(unsigned char *)(v9 + 16) = 0;
    *(void *)(v9 + 24) = v6;
    *(void *)(v9 + 32) = v8;
    *(void *)(v9 + 40) = 0xD000000000000018;
    *(void *)(v9 + 48) = 0x80000001D7AC0E80;
    *(void *)(v9 + 56) = 82;
    sub_1D785D8F0();
    swift_allocError();
    *uint64_t v10 = v9;
    swift_willThrow();
    return sub_1D785D944(a1);
  }
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  uint64_t v15 = *(void *)(a1 + 32);
  uint64_t v14 = *(void *)(a1 + 40);
  uint64_t v16 = *(void *)(a1 + 48);
  v38[0] = v13;
  v38[1] = v12;
  v38[2] = v15;
  unint64_t v38[3] = v14;
  v38[4] = v16;
  j__swift_unknownObjectRetain(v13, v12, v15, v14, v16, 0);
  swift_unknownObjectRetain();
  uint64_t v17 = sub_1D78C4FCC((uint64_t)v38, 6, 0);
  if (v2)
  {
    swift_unknownObjectRelease();
    j__swift_unknownObjectRelease(v13, v12, v15, v14, v16, 0);
    return sub_1D785D944(a1);
  }
  uint64_t v35 = v17;
  sub_1D7A2BC88((uint64_t)&v39);
  unint64_t v36 = v39;
  uint64_t v25 = v42;
  uint64_t v26 = v41;
  uint64_t v23 = v44;
  uint64_t v24 = v43;
  char v18 = v46;
  uint64_t v22 = v45;
  uint64_t v31 = v47;
  char v33 = v40;
  uint64_t v28 = v49;
  uint64_t v29 = v48;
  uint64_t v27 = v50;
  sub_1D785D9E8((uint64_t)&v39, (uint64_t)v54);
  if (v55)
  {
    unint64_t v56 = v36;
    char v57 = v33;
    uint64_t v58 = v26;
    uint64_t v59 = v25;
    uint64_t v60 = v24;
    uint64_t v61 = v23;
    uint64_t v62 = v22;
    char v63 = v18 & 1;
    uint64_t v64 = v31;
    uint64_t v65 = v29;
    uint64_t v66 = v28;
    uint64_t v67 = v27;
    uint64_t v68 = sub_1D789E0D8(0, 1024, 0, MEMORY[0x1E4FBC860]);
    sub_1D79332EC(&v39, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1D7933348);
    sub_1D7A2F6A4(v36, v33, (v18 & 1) == 0, (uint64_t)&v68, (uint64_t)&v56);
    sub_1D79332EC(&v39, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1D785DB2C);
    uint64_t v34 = v68 + 32;
    uint64_t v30 = v16;
    uint64_t v37 = v68;
    uint64_t v19 = *((void *)v68 + 2);
    sub_1D79332EC(&v39, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1D785DB2C);
    uint64_t v32 = (2 * v19) | 1;
    uint64_t v16 = v30;
  }
  else
  {
    uint64_t v37 = 0;
    uint64_t v32 = 0;
    uint64_t v34 = 0;
  }
  sub_1D7A2BC88((uint64_t)v51);
  sub_1D79332EC(v51, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_1D785DB2C);
  sub_1D785D9E8((uint64_t)v51, (uint64_t)v52);
  if (v53)
  {
    type metadata accessor for ASN1Error.Backing();
    uint64_t v20 = swift_allocObject();
    *(unsigned char *)(v20 + 16) = 1;
    *(void *)(v20 + 24) = 0xD000000000000019;
    *(void *)(v20 + 32) = 0x80000001D7ABCD20;
    *(void *)(v20 + 40) = 0xD000000000000018;
    *(void *)(v20 + 48) = 0x80000001D7AC0E80;
    *(void *)(v20 + 56) = 90;
    sub_1D785D8F0();
    swift_allocError();
    uint64_t *v21 = v20;
    swift_willThrow();
    j__swift_unknownObjectRelease(v13, v12, v15, v14, v16, 0);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    return sub_1D785D944(a1);
  }
  swift_unknownObjectRelease();
  j__swift_unknownObjectRelease(v13, v12, v15, v14, v16, 0);
  uint64_t result = sub_1D785D944(a1);
  *a2 = v35;
  a2[1] = (uint64_t)v37;
  a2[2] = (uint64_t)v34;
  a2[3] = 0;
  a2[4] = v32;
  return result;
}

BOOL sub_1D7932718(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (a1[4] != a2[4]) {
    return 0;
  }
  uint64_t v3 = a1 + 5;
  BOOL v4 = a2 + 5;
  uint64_t v5 = v2 - 1;
  do
  {
    BOOL result = v5 == 0;
    if (!v5) {
      break;
    }
    uint64_t v8 = *v3++;
    uint64_t v7 = v8;
    uint64_t v9 = *v4++;
    --v5;
  }
  while (v7 == v9);
  return result;
}

uint64_t sub_1D7932784(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_1D7A9D358(), uint64_t result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    uint64_t v9 = a1 + 7;
    for (uint64_t i = a2 + 7; ; i += 2)
    {
      BOOL v11 = *(v9 - 1) == *(i - 1) && *v9 == *i;
      if (!v11 && (sub_1D7A9D358() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

unsigned char *sub_1D793284C@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  if (!result) {
    goto LABEL_4;
  }
  uint64_t v4 = a2 - result;
  if (a2 == result)
  {
    uint64_t result = 0;
LABEL_4:
    unint64_t v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    uint64_t result = (unsigned char *)sub_1D7A7B1EC(result, a2);
    unint64_t v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    uint64_t result = (unsigned char *)sub_1D79329A4((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v8 | 0x8000000000000000;
  }
  else
  {
    uint64_t result = (unsigned char *)sub_1D7932A20((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_1D79328C4(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1D7A9AC98();
  if (!result || (uint64_t result = sub_1D7A9ACB8(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_1D7A9ACA8();
      sub_1D7A9BE78();
      sub_1D7932FB0(&qword_1EA844190, MEMORY[0x1E4F251E8]);
      return sub_1D7A9B808();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1D79329A4(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_1D7A9ACD8();
  swift_allocObject();
  uint64_t result = sub_1D7A9AC88();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1D7A9AFC8();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = v2;
  }
  return result;
}

uint64_t sub_1D7932A20(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v2 = a2 - a1;
  }
  else {
    uint64_t v2 = 0;
  }
  sub_1D7A9ACD8();
  swift_allocObject();
  uint64_t result = sub_1D7A9AC88();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0) {
    return v2 << 32;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_1D7932AA4(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  int64_t v6 = a3 >> 1;
  uint64_t v7 = (a3 >> 1) - a2;
  if (!__OFSUB__(a3 >> 1, a2))
  {
    int64_t v8 = a6 >> 1;
    if (__OFSUB__(a6 >> 1, a5)) {
      goto LABEL_20;
    }
    if (v7 != (a6 >> 1) - a5) {
      return 0;
    }
    if (!v7 || result + a2 == a4 + a5 || v6 == a2) {
      return 1;
    }
    if (v6 <= a2) {
      goto LABEL_22;
    }
    uint64_t v9 = a2 + 1;
    int v10 = *(unsigned __int8 *)(result + a2);
    if (v6 == a2) {
      return 1;
    }
    uint64_t v11 = a5;
    if (v8 == a5) {
      return 0;
    }
    while (v11 >= a5 && v11 < v8)
    {
      if (v10 != *(unsigned __int8 *)(a4 + v11)) {
        return 0;
      }
      if (v6 == v9) {
        return 1;
      }
      if (v9 >= v6) {
        goto LABEL_21;
      }
      int v10 = *(unsigned __int8 *)(result + v9++);
      if (v8 == ++v11) {
        return 0;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_1D7932B78(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  int64_t v6 = a3 >> 1;
  uint64_t v7 = (a3 >> 1) - a2;
  if (__OFSUB__(a3 >> 1, a2))
  {
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  uint64_t v8 = a5;
  int64_t v9 = a6 >> 1;
  if (__OFSUB__(a6 >> 1, a5)) {
    goto LABEL_37;
  }
  if (v7 != (a6 >> 1) - a5) {
    return 0;
  }
  if (!v7) {
    return 1;
  }
  uint64_t v10 = a4;
  uint64_t v11 = result + 96 * a2;
  if (v11 == a4 + 96 * a5) {
    return 1;
  }
  int64_t v44 = a3 >> 1;
  unint64_t v46 = a6 >> 1;
  if (v6 == a2)
  {
    uint64_t v42 = result;
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    uint64_t v61 = 0;
    unint64_t v15 = 0;
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    char v19 = 0;
    uint64_t v20 = 0;
    uint64_t v21 = 0;
    uint64_t result = 0;
    uint64_t v22 = a5;
    uint64_t v23 = a5;
    goto LABEL_11;
  }
  uint64_t v23 = a5;
  if (v6 > a2)
  {
LABEL_10:
    uint64_t v42 = result;
    uint64_t v25 = result + 96 * a2;
    char v19 = *(unsigned char *)(v25 + 24);
    uint64_t v55 = a2 + 1;
    uint64_t v18 = *(void *)(v25 + 32);
    uint64_t v57 = *(void *)(v25 + 40);
    uint64_t v58 = *(unsigned __int8 *)(v11 + 8);
    uint64_t v54 = *(void *)(v25 + 88);
    uint64_t v50 = *(void *)(v25 + 80);
    uint64_t v52 = *(void *)(v25 + 72);
    uint64_t v26 = *(void *)(v25 + 48);
    unint64_t v60 = *(void *)(v25 + 56);
    uint64_t v61 = *(void *)(v25 + 64);
    uint64_t v27 = *(void *)(v25 + 16);
    uint64_t v28 = *(void *)v11;
    uint64_t v29 = v23;
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    uint64_t result = v28;
    uint64_t v14 = v52;
    uint64_t v12 = v54;
    uint64_t v13 = v50;
    uint64_t v20 = v27;
    uint64_t v17 = v57;
    uint64_t v21 = v58;
    uint64_t v23 = v29;
    uint64_t v16 = v26;
    unint64_t v15 = v60;
    uint64_t v22 = v29;
    a2 = v55;
LABEL_11:
    uint64_t v30 = (unint64_t *)(v10 + 96 * v22 + 88);
    uint64_t v47 = v22;
    uint64_t v48 = a2;
    while (1)
    {
      BOOL v24 = v18 == 0;
      if (!v18) {
        return v24;
      }
      uint64_t v31 = v19 & 1;
      if (v9 == v23) {
        break;
      }
      if (v22 < v8 || v23 >= v9) {
        goto LABEL_38;
      }
      if (result != *(v30 - 11)
        || *((unsigned __int8 *)v30 - 80) != v21
        || v20 != *(v30 - 9)
        || v31 != *((unsigned __int8 *)v30 - 64))
      {
        uint64_t v40 = v21;
        uint64_t v41 = v18;
LABEL_32:
        sub_1D79331E4(result, v40, v20, v31, v41);
        return 0;
      }
      uint64_t v51 = v19 & 1;
      uint64_t v53 = v20;
      uint64_t v32 = result;
      unint64_t v33 = v12;
      uint64_t v34 = v13;
      uint64_t v59 = v21;
      uint64_t v49 = v23;
      uint64_t v56 = v18;
      uint64_t v35 = *(v30 - 3);
      uint64_t v37 = *(v30 - 2);
      uint64_t v36 = *(v30 - 1);
      unint64_t v38 = *v30;
      if ((sub_1D7932AA4(v17, v16, v15, *(v30 - 6), *(v30 - 5), *(v30 - 4)) & 1) == 0) {
        goto LABEL_31;
      }
      if (v61)
      {
        if (!v35) {
          goto LABEL_31;
        }
        char v39 = sub_1D7932AA4(v14, v34, v33, v37, v36, v38);
        sub_1D79331E4(v32, v59, v53, v51, v56);
        if ((v39 & 1) == 0) {
          return v24;
        }
      }
      else
      {
        if (v35)
        {
LABEL_31:
          uint64_t result = v32;
          uint64_t v40 = v59;
          uint64_t v31 = v51;
          uint64_t v20 = v53;
          uint64_t v41 = v56;
          goto LABEL_32;
        }
        sub_1D79331E4(v32, v59, v53, v51, v56);
      }
      uint64_t v12 = 0;
      uint64_t v13 = 0;
      uint64_t v14 = 0;
      uint64_t v61 = 0;
      unint64_t v15 = 0;
      uint64_t v16 = 0;
      uint64_t v17 = 0;
      uint64_t v18 = 0;
      char v19 = 0;
      uint64_t v20 = 0;
      uint64_t v21 = 0;
      uint64_t result = 0;
      v30 += 12;
      a2 = v48;
      uint64_t v23 = v49 + 1;
      uint64_t v8 = a5;
      int64_t v9 = v46;
      uint64_t v22 = v47;
      if (v48 != v44)
      {
        if (v48 >= v44) {
          goto LABEL_40;
        }
        uint64_t result = v42;
        uint64_t v10 = a4;
        uint64_t v11 = v42 + 96 * v48;
        goto LABEL_10;
      }
    }
    v62[0] = result;
    v62[1] = v21;
    v62[2] = v20;
    v62[3] = v19 & 1;
    v62[4] = v18;
    v62[5] = v17;
    v62[6] = v16;
    v62[7] = v15;
    v62[8] = v61;
    v62[9] = v14;
    v62[10] = v13;
    v62[11] = v12;
    long long v63 = 0u;
    long long v64 = 0u;
    long long v65 = 0u;
    long long v66 = 0u;
    long long v67 = 0u;
    long long v68 = 0u;
    sub_1D7933228(v62);
    return 0;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
  return result;
}

uint64_t _s13CoreIDVShared19AlgorithmIdentifierV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  unint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  unint64_t v9 = *(void *)(a2 + 32);
  if (sub_1D7932718(*(void **)a1, *(void **)a2))
  {
    if (v2)
    {
      if (v6 && (sub_1D7932AA4(v3, v4, v5, v7, v8, v9) & 1) != 0) {
        return 1;
      }
    }
    else if (!v6)
    {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_1D7932FB0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for AlgorithmIdentifier()
{
  swift_bridgeObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t initializeWithCopy for AlgorithmIdentifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  return a1;
}

void *assignWithCopy for AlgorithmIdentifier(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  return a1;
}

uint64_t assignWithTake for AlgorithmIdentifier(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_unknownObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for AlgorithmIdentifier(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AlgorithmIdentifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AlgorithmIdentifier()
{
  return &type metadata for AlgorithmIdentifier;
}

uint64_t sub_1D79331E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5)
  {
    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t *sub_1D7933228(uint64_t *a1)
{
  uint64_t v2 = a1[13];
  uint64_t v7 = a1[12];
  uint64_t v3 = a1[14];
  uint64_t v4 = a1[15];
  uint64_t v5 = a1[16];
  sub_1D79331E4(*a1, a1[1], a1[2], a1[3], a1[4]);
  sub_1D79331E4(v7, v2, v3, v4, v5);
  return a1;
}

void *sub_1D79332EC(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_1D7933348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9)
{
  if (a9)
  {
    j__swift_unknownObjectRetain(a3, a4, a5, a6, a7, a8 & 1);
    return swift_unknownObjectRetain();
  }
  return result;
}

uint64_t sub_1D79333AC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  BOOL v4 = *(void *)a1 == 16 && *(unsigned char *)(a1 + 8) == 0;
  if (!v4 || (*(unsigned char *)(a1 + 56) & 1) != 0)
  {
    uint64_t v6 = sub_1D78F7D1C();
    uint64_t v8 = v7;
    type metadata accessor for ASN1Error.Backing();
    uint64_t v9 = swift_allocObject();
    *(unsigned char *)(v9 + 16) = 0;
    *(void *)(v9 + 24) = v6;
    *(void *)(v9 + 32) = v8;
    *(void *)(v9 + 40) = 0xD000000000000018;
    *(void *)(v9 + 48) = 0x80000001D7AC0E80;
    *(void *)(v9 + 56) = 82;
    sub_1D785D8F0();
    swift_allocError();
    *uint64_t v10 = v9;
    swift_willThrow();
    return sub_1D785D944(a1);
  }
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  uint64_t v15 = *(void *)(a1 + 32);
  uint64_t v14 = *(void *)(a1 + 40);
  uint64_t v16 = *(void *)(a1 + 48);
  v21[3] = v13;
  v21[4] = v12;
  v21[5] = v15;
  v21[6] = v14;
  v21[7] = v16;
  j__swift_unknownObjectRetain(v13, v12, v15, v14, v16, 0);
  swift_unknownObjectRetain();
  sub_1D7933648(v21);
  if (v2)
  {

    uint64_t v25 = 0;
    uint64_t v19 = 0;
    uint64_t v20 = 0;
  }
  else
  {
    uint64_t v25 = v21[0];
    uint64_t v19 = v21[2];
    uint64_t v20 = v21[1];
  }
  sub_1D7A2BC88((uint64_t)v22);
  sub_1D785DAD8(v22);
  sub_1D785D9E8((uint64_t)v22, (uint64_t)v23);
  if (v24)
  {
    type metadata accessor for ASN1Error.Backing();
    uint64_t v17 = swift_allocObject();
    *(unsigned char *)(v17 + 16) = 1;
    *(void *)(v17 + 24) = 0xD000000000000019;
    *(void *)(v17 + 32) = 0x80000001D7ABCD20;
    *(void *)(v17 + 40) = 0xD000000000000018;
    *(void *)(v17 + 48) = 0x80000001D7AC0E80;
    *(void *)(v17 + 56) = 90;
    sub_1D785D8F0();
    swift_allocError();
    uint64_t *v18 = v17;
    swift_willThrow();
    j__swift_unknownObjectRelease(v13, v12, v15, v14, v16, 0);
    sub_1D7933EA8(v25, v20);
    swift_unknownObjectRelease();
    return sub_1D785D944(a1);
  }
  swift_unknownObjectRelease();
  j__swift_unknownObjectRelease(v13, v12, v15, v14, v16, 0);
  uint64_t result = sub_1D785D944(a1);
  *a2 = v25;
  a2[1] = v20;
  a2[2] = v19;
  return result;
}

uint64_t *sub_1D7933648@<X0>(void *a1@<X8>)
{
  sub_1D7A2BC88((uint64_t)v28);
  sub_1D785D9E8((uint64_t)v28, (uint64_t)&v32);
  if (v40)
  {
    BOOL v3 = v32 == 16 && v33 == 0;
    if (!v3 || (v39 & 1) != 0)
    {
      uint64_t v9 = sub_1D78F7D1C();
      uint64_t v11 = v10;
      type metadata accessor for ASN1Error.Backing();
      uint64_t v12 = swift_allocObject();
      *(unsigned char *)(v12 + 16) = 0;
      *(void *)(v12 + 24) = v9;
      *(void *)(v12 + 32) = v11;
      *(void *)(v12 + 40) = 0xD000000000000018;
      *(void *)(v12 + 48) = 0x80000001D7AC0E80;
      *(void *)(v12 + 56) = 82;
      sub_1D785D8F0();
      swift_allocError();
      *uint64_t v13 = v12;
      swift_willThrow();
      return sub_1D785DAD8(v28);
    }
    uint64_t v5 = v34;
    unint64_t v4 = v35;
    uint64_t v7 = v36;
    uint64_t v6 = v37;
    uint64_t v8 = v38;
    uint64_t v23 = v34;
    unint64_t v24 = v35;
    uint64_t v25 = v36;
    uint64_t v26 = v37;
    uint64_t v27 = v38;
    j__swift_unknownObjectRetain(v34, v35, v36, v37, v38, 0);
    swift_unknownObjectRetain();
    sub_1D79339B4((uint64_t)v22);
    if (v1)
    {
      swift_unknownObjectRelease();
      j__swift_unknownObjectRelease(v5, v4, v7, v6, v8, 0);
      return sub_1D785DAD8(v28);
    }
    uint64_t v17 = v22[0];
    uint64_t v41 = v22[1];
    uint64_t v21 = v22[2];
    sub_1D7A2BC88((uint64_t)v29);
    sub_1D785DAD8(v29);
    sub_1D785D9E8((uint64_t)v29, (uint64_t)v30);
    if (v31)
    {
      type metadata accessor for ASN1Error.Backing();
      uint64_t v18 = swift_allocObject();
      *(unsigned char *)(v18 + 16) = 1;
      *(void *)(v18 + 24) = 0xD000000000000019;
      *(void *)(v18 + 32) = 0x80000001D7ABCD20;
      *(void *)(v18 + 40) = 0xD000000000000018;
      *(void *)(v18 + 48) = 0x80000001D7AC0E80;
      *(void *)(v18 + 56) = 90;
      sub_1D785D8F0();
      swift_allocError();
      *uint64_t v19 = v18;
      swift_willThrow();
      j__swift_unknownObjectRelease(v5, v4, v7, v6, v8, 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      return sub_1D785DAD8(v28);
    }
    swift_unknownObjectRelease();
    j__swift_unknownObjectRelease(v5, v4, v7, v6, v8, 0);
    uint64_t result = sub_1D785DAD8(v28);
    uint64_t v20 = v41;
    *a1 = v17;
    a1[1] = v20;
    a1[2] = v21;
  }
  else
  {
    uint64_t v23 = 0;
    unint64_t v24 = 0xE000000000000000;
    sub_1D7A9CC48();
    swift_bridgeObjectRelease();
    type metadata accessor for ASN1Error.Backing();
    uint64_t v15 = swift_allocObject();
    *(unsigned char *)(v15 + 16) = 1;
    *(void *)(v15 + 24) = 0xD000000000000038;
    *(void *)(v15 + 32) = 0x80000001D7AC4910;
    *(void *)(v15 + 40) = 0xD000000000000018;
    *(void *)(v15 + 48) = 0x80000001D7AC0E80;
    *(void *)(v15 + 56) = 1006;
    sub_1D785D8F0();
    swift_allocError();
    *uint64_t v16 = v15;
    return (uint64_t *)swift_willThrow();
  }
  return result;
}

uint64_t *sub_1D79339B4@<X0>(uint64_t a1@<X8>)
{
  sub_1D7A2BC88((uint64_t)v27);
  sub_1D785D9E8((uint64_t)v27, (uint64_t)&v31);
  if (v39)
  {
    BOOL v3 = v31 == 16 && v32 == 0;
    if (!v3 || (v38 & 1) != 0)
    {
      uint64_t v9 = sub_1D78F7D1C();
      uint64_t v11 = v10;
      type metadata accessor for ASN1Error.Backing();
      uint64_t v12 = swift_allocObject();
      *(unsigned char *)(v12 + 16) = 0;
      *(void *)(v12 + 24) = v9;
      *(void *)(v12 + 32) = v11;
      *(void *)(v12 + 40) = 0xD000000000000018;
      *(void *)(v12 + 48) = 0x80000001D7AC0E80;
      *(void *)(v12 + 56) = 82;
      sub_1D785D8F0();
      swift_allocError();
      *uint64_t v13 = v12;
      swift_willThrow();
      return sub_1D785DAD8(v27);
    }
    uint64_t v5 = v33;
    unint64_t v4 = v34;
    uint64_t v7 = v35;
    uint64_t v6 = v36;
    uint64_t v8 = v37;
    uint64_t v22 = v33;
    unint64_t v23 = v34;
    uint64_t v24 = v35;
    uint64_t v25 = v36;
    uint64_t v26 = v37;
    swift_unknownObjectRetain_n();
    sub_1D78C4C20((uint64_t)&v22, &v20);
    if (v1)
    {
      swift_unknownObjectRelease();
      j__swift_unknownObjectRelease(v5, v4, v7, v6, v8, 0);
      return sub_1D785DAD8(v27);
    }
    sub_1D7A2BC88((uint64_t)v28);
    sub_1D785DAD8(v28);
    sub_1D785D9E8((uint64_t)v28, (uint64_t)v29);
    if (v30)
    {
      type metadata accessor for ASN1Error.Backing();
      uint64_t v17 = swift_allocObject();
      *(unsigned char *)(v17 + 16) = 1;
      *(void *)(v17 + 24) = 0xD000000000000019;
      *(void *)(v17 + 32) = 0x80000001D7ABCD20;
      *(void *)(v17 + 40) = 0xD000000000000018;
      *(void *)(v17 + 48) = 0x80000001D7AC0E80;
      *(void *)(v17 + 56) = 90;
      sub_1D785D8F0();
      swift_allocError();
      uint64_t *v18 = v17;
      swift_willThrow();
      j__swift_unknownObjectRelease(v5, v4, v7, v6, v8, 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      return sub_1D785DAD8(v27);
    }
    swift_unknownObjectRelease();
    j__swift_unknownObjectRelease(v5, v4, v7, v6, v8, 0);
    uint64_t result = sub_1D785DAD8(v27);
    long long v19 = v21;
    *(void *)a1 = v20;
    *(_OWORD *)(a1 + 8) = v19;
  }
  else
  {
    uint64_t v22 = 0;
    unint64_t v23 = 0xE000000000000000;
    sub_1D7A9CC48();
    swift_bridgeObjectRelease();
    type metadata accessor for ASN1Error.Backing();
    uint64_t v15 = swift_allocObject();
    *(unsigned char *)(v15 + 16) = 1;
    *(void *)(v15 + 24) = 0xD00000000000003ALL;
    *(void *)(v15 + 32) = 0x80000001D7AC4950;
    *(void *)(v15 + 40) = 0xD000000000000018;
    *(void *)(v15 + 48) = 0x80000001D7AC0E80;
    *(void *)(v15 + 56) = 1006;
    sub_1D785D8F0();
    swift_allocError();
    *uint64_t v16 = v15;
    return (uint64_t *)swift_willThrow();
  }
  return result;
}

uint64_t sub_1D7933CFC@<X0>(uint64_t a1@<X8>)
{
  sub_1D7A2BC88((uint64_t)v9);
  sub_1D785D9E8((uint64_t)v9, (uint64_t)v10);
  if ((void)v11)
  {
    v13[2] = v10[2];
    v13[3] = v10[3];
    v13[4] = v11;
    v13[5] = v12;
    v13[0] = v10[0];
    v13[1] = v10[1];
    uint64_t result = sub_1D79322DC((uint64_t)v13, &v6);
    if (!v1)
    {
      *(void *)a1 = v6;
      *(_OWORD *)(a1 + 8) = v7;
      *(_OWORD *)(a1 + 24) = v8;
    }
  }
  else
  {
    sub_1D7A9CC48();
    swift_bridgeObjectRelease();
    type metadata accessor for ASN1Error.Backing();
    uint64_t v4 = swift_allocObject();
    *(unsigned char *)(v4 + 16) = 1;
    *(void *)(v4 + 24) = 0xD00000000000003ELL;
    *(void *)(v4 + 32) = 0x80000001D7AC4990;
    *(void *)(v4 + 40) = 0xD000000000000018;
    *(void *)(v4 + 48) = 0x80000001D7AC0E80;
    *(void *)(v4 + 56) = 1006;
    sub_1D785D8F0();
    swift_allocError();
    *uint64_t v5 = v4;
    return swift_willThrow();
  }
  return result;
}

uint64_t LogotypeData.image.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  uint64_t v4 = v1[2];
  *a1 = *v1;
  a1[1] = v3;
  a1[2] = v4;
  return sub_1D785BF34(v2, v3);
}

__n128 LogotypeData.image.setter(__n128 *a1)
{
  __n128 v4 = *a1;
  uint64_t v2 = a1[1].n128_i64[0];
  sub_1D7933EA8(*v1, v1[1]);
  __n128 result = v4;
  *(__n128 *)uint64_t v1 = v4;
  v1[2] = v2;
  return result;
}

uint64_t sub_1D7933EA8(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t (*LogotypeData.image.modify())()
{
  return nullsub_1;
}

ValueMetadata *type metadata accessor for LogotypeData()
{
  return &type metadata for LogotypeData;
}

unint64_t static Logotype.oid.getter()
{
  return 0xD000000000000012;
}

uint64_t Logotype.subjectLogo.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  uint64_t v4 = v1[2];
  *a1 = *v1;
  a1[1] = v3;
  a1[2] = v4;
  return sub_1D7933F4C(v2, v3);
}

uint64_t sub_1D7933F4C(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return sub_1D785BF34(a1, a2);
  }
  return a1;
}

__n128 Logotype.subjectLogo.setter(__n128 *a1)
{
  __n128 v4 = *a1;
  uint64_t v2 = a1[1].n128_i64[0];
  sub_1D7933FA4(*v1, v1[1]);
  __n128 result = v4;
  *(__n128 *)uint64_t v1 = v4;
  v1[2] = v2;
  return result;
}

uint64_t sub_1D7933FA4(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return sub_1D7933EA8(a1, a2);
  }
  return a1;
}

uint64_t (*Logotype.subjectLogo.modify())()
{
  return nullsub_1;
}

uint64_t sub_1D7933FD4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  BOOL v4 = *(void *)a1 == 16 && *(unsigned char *)(a1 + 8) == 0;
  if (!v4 || (*(unsigned char *)(a1 + 56) & 1) != 0)
  {
    uint64_t v6 = sub_1D78F7D1C();
    uint64_t v8 = v7;
    type metadata accessor for ASN1Error.Backing();
    uint64_t v9 = swift_allocObject();
    *(unsigned char *)(v9 + 16) = 0;
    *(void *)(v9 + 24) = v6;
    *(void *)(v9 + 32) = v8;
    *(void *)(v9 + 40) = 0xD000000000000018;
    *(void *)(v9 + 48) = 0x80000001D7AC0E80;
    *(void *)(v9 + 56) = 82;
    sub_1D785D8F0();
    swift_allocError();
    *uint64_t v10 = v9;
    swift_willThrow();
    return sub_1D785D944(a1);
  }
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  uint64_t v15 = *(void *)(a1 + 32);
  uint64_t v14 = *(void *)(a1 + 40);
  uint64_t v16 = *(void *)(a1 + 48);
  *(void *)&long long v22 = v13;
  *((void *)&v22 + 1) = v12;
  uint64_t v23 = v15;
  uint64_t v24 = v14;
  uint64_t v25 = v16;
  j__swift_unknownObjectRetain(v13, v12, v15, v14, v16, 0);
  swift_unknownObjectRetain();
  sub_1D7A2BED4(&v22, 2, 2u, (uint64_t)v21);
  if (v2)
  {
    swift_unknownObjectRelease();
    j__swift_unknownObjectRelease(v13, v12, v15, v14, v16, 0);
    return sub_1D785D944(a1);
  }
  uint64_t v19 = v21[0];
  uint64_t v20 = v21[1];
  uint64_t v29 = v21[2];
  sub_1D7A2BC88((uint64_t)v26);
  sub_1D785DAD8(v26);
  sub_1D785D9E8((uint64_t)v26, (uint64_t)v27);
  if (v28)
  {
    type metadata accessor for ASN1Error.Backing();
    uint64_t v17 = swift_allocObject();
    *(unsigned char *)(v17 + 16) = 1;
    *(void *)(v17 + 24) = 0xD000000000000019;
    *(void *)(v17 + 32) = 0x80000001D7ABCD20;
    *(void *)(v17 + 40) = 0xD000000000000018;
    *(void *)(v17 + 48) = 0x80000001D7AC0E80;
    *(void *)(v17 + 56) = 90;
    sub_1D785D8F0();
    swift_allocError();
    uint64_t *v18 = v17;
    swift_willThrow();
    j__swift_unknownObjectRelease(v13, v12, v15, v14, v16, 0);
    sub_1D7933FA4(v19, v20);
    swift_unknownObjectRelease();
    return sub_1D785D944(a1);
  }
  swift_unknownObjectRelease();
  j__swift_unknownObjectRelease(v13, v12, v15, v14, v16, 0);
  uint64_t result = sub_1D785D944(a1);
  *a2 = v19;
  a2[1] = v20;
  a2[2] = v29;
  return result;
}

uint64_t Logotype.logotypeTuples.getter()
{
  if (*(void *)(v0 + 8) >= 2uLL) {
    return swift_bridgeObjectRetain();
  }
  else {
    return MEMORY[0x1E4FBC860];
  }
}

unint64_t destroy for Logotype(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *_s13CoreIDVShared8LogotypeVwCP_0(void *a1, void *a2)
{
  unint64_t v3 = a2[1];
  if (v3 > 1)
  {
    *a1 = *a2;
    a1[1] = v3;
    a1[2] = a2[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = a2[2];
  }
  return a1;
}

void *assignWithCopy for Logotype(void *a1, void *a2)
{
  uint64_t v4 = a1[1];
  unint64_t v5 = a2[1];
  if (v4 != 1)
  {
    if (v5 == 1)
    {
      sub_1D7934470((uint64_t)a1);
    }
    else
    {
      if (!v4)
      {
        if (!v5) {
          goto LABEL_3;
        }
LABEL_11:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        return a1;
      }
      if (v5)
      {
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        a1[2] = a2[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        return a1;
      }
      sub_1D785C0F4((uint64_t)a1);
    }
    uint64_t v7 = a2[2];
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = v7;
    return a1;
  }
  if (v5 > 1) {
    goto LABEL_11;
  }
LABEL_3:
  long long v6 = *(_OWORD *)a2;
  a1[2] = a2[2];
  *(_OWORD *)a1 = v6;
  return a1;
}

uint64_t sub_1D7934470(uint64_t a1)
{
  return a1;
}

uint64_t assignWithTake for Logotype(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if (v4 == 1) {
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)(a2 + 8);
  if (v5 == 1)
  {
    sub_1D7934470(a1);
LABEL_8:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    return a1;
  }
  if (!v4) {
    goto LABEL_8;
  }
  if (!v5)
  {
    sub_1D785C0F4(a1);
    goto LABEL_8;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Logotype(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFFD && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  BOOL v5 = __OFSUB__(v4, 1);
  int v6 = v4 - 1;
  if (v6 < 0 != v5) {
    int v6 = -1;
  }
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for Logotype(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 2147483646;
    if (a3 > 0x7FFFFFFD) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 > 0x7FFFFFFD) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Logotype()
{
  return &type metadata for Logotype;
}

uint64_t IdentityProofingUnorderedUI.unorderedUI.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t IdentityProofingUnorderedUI.init(unorderedUI:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_1D7934624()
{
  return 0x65726564726F6E75;
}

uint64_t sub_1D7934644@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x65726564726F6E75 && a2 == 0xEB00000000495564)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1D7A9D358();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D79346F4(uint64_t a1)
{
  unint64_t v2 = sub_1D79348F8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D7934730(uint64_t a1)
{
  unint64_t v2 = sub_1D79348F8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t IdentityProofingUnorderedUI.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8441A0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v5, v6, v7, v8, v9, v10, v11);
  uint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D79348F8();
  sub_1D7A9D6E8();
  v16[1] = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8441B0);
  sub_1D7934B4C(&qword_1EA8441B8, (void (*)(void))sub_1D793494C);
  sub_1D7A9D1C8();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v13, v3);
}

unint64_t sub_1D79348F8()
{
  unint64_t result = qword_1EA8441A8;
  if (!qword_1EA8441A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8441A8);
  }
  return result;
}

unint64_t sub_1D793494C()
{
  unint64_t result = qword_1EA8441C0;
  if (!qword_1EA8441C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8441C0);
  }
  return result;
}

uint64_t IdentityProofingUnorderedUI.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8441C8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7, v8, v9, v10, v11, v12, v13);
  uint64_t v15 = (char *)v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D79348F8();
  sub_1D7A9D6A8();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8441B0);
    sub_1D7934B4C(&qword_1EA8441D0, (void (*)(void))sub_1D7934BC8);
    sub_1D7A9D0E8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    *a2 = v17[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1D7934B4C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA8441B0);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D7934BC8()
{
  unint64_t result = qword_1EA8441D8;
  if (!qword_1EA8441D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8441D8);
  }
  return result;
}

uint64_t sub_1D7934C1C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return IdentityProofingUnorderedUI.init(from:)(a1, a2);
}

uint64_t sub_1D7934C34(void *a1)
{
  return IdentityProofingUnorderedUI.encode(to:)(a1);
}

uint64_t static IdentityProofingUnorderedUIElementOption.supportsSecureCoding.getter()
{
  return 1;
}

uint64_t IdentityProofingUnorderedUIElementOption.title.getter()
{
  return sub_1D78E28A4(&OBJC_IVAR____TtC13CoreIDVShared40IdentityProofingUnorderedUIElementOption_title);
}

uint64_t IdentityProofingUnorderedUIElementOption.subTitle.getter()
{
  return sub_1D78E28A4(&OBJC_IVAR____TtC13CoreIDVShared40IdentityProofingUnorderedUIElementOption_subTitle);
}

uint64_t IdentityProofingUnorderedUIElementOption.bullets.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t IdentityProofingUnorderedUIElementOption.assessments.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t IdentityProofingUnorderedUIElementOption.accessibility.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D7934CA4(unsigned __int8 *a1, char *a2)
{
  return sub_1D7994824(*a1, *a2);
}

uint64_t sub_1D7934CB0()
{
  return sub_1D7A9D628();
}

uint64_t sub_1D7934DB8()
{
  sub_1D7A9C0B8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D7934EA8()
{
  return sub_1D7A9D628();
}

uint64_t sub_1D7934FAC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D7937180();
  *a1 = result;
  return result;
}

void sub_1D7934FDC(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE500000000000000;
  uint64_t v3 = 0x656C746974;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE800000000000000;
      uint64_t v3 = 0x656C746954627573;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x7374656C6C7562;
      *(void *)(a1 + 8) = 0xE700000000000000;
      break;
    case 3:
      *(void *)a1 = 0x656D737365737361;
      *(void *)(a1 + 8) = 0xEB0000000073746ELL;
      break;
    case 4:
      strcpy((char *)a1, "accessibility");
      *(_WORD *)(a1 + 14) = -4864;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_1D79350A8()
{
  uint64_t result = 0x656C746974;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x656C746954627573;
      break;
    case 2:
      uint64_t result = 0x7374656C6C7562;
      break;
    case 3:
      uint64_t result = 0x656D737365737361;
      break;
    case 4:
      uint64_t result = 0x6269737365636361;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D7935164@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D7937180();
  *a1 = result;
  return result;
}

void sub_1D793518C(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_1D7935198(uint64_t a1)
{
  unint64_t v2 = sub_1D7937530();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D79351D4(uint64_t a1)
{
  unint64_t v2 = sub_1D7937530();
  return MEMORY[0x1F41862B0](a1, v2);
}

id IdentityProofingUnorderedUIElementOption.__allocating_init(title:subtitle:bullets:assessments:accessibility:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v15 = (char *)objc_allocWithZone(v7);
  uint64_t v16 = &v15[OBJC_IVAR____TtC13CoreIDVShared40IdentityProofingUnorderedUIElementOption_title];
  *(void *)uint64_t v16 = a1;
  *((void *)v16 + 1) = a2;
  uint64_t v17 = &v15[OBJC_IVAR____TtC13CoreIDVShared40IdentityProofingUnorderedUIElementOption_subTitle];
  *(void *)uint64_t v17 = a3;
  *((void *)v17 + 1) = a4;
  *(void *)&v15[OBJC_IVAR____TtC13CoreIDVShared40IdentityProofingUnorderedUIElementOption_bullets] = a5;
  *(void *)&v15[OBJC_IVAR____TtC13CoreIDVShared40IdentityProofingUnorderedUIElementOption_assessments] = a6;
  *(void *)&v15[OBJC_IVAR____TtC13CoreIDVShared40IdentityProofingUnorderedUIElementOption_accessibility] = a7;
  v19.receiver = v15;
  v19.super_class = v7;
  return objc_msgSendSuper2(&v19, sel_init);
}

id IdentityProofingUnorderedUIElementOption.init(title:subtitle:bullets:assessments:accessibility:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v16 = &v7[OBJC_IVAR____TtC13CoreIDVShared40IdentityProofingUnorderedUIElementOption_title];
  *(void *)uint64_t v16 = a1;
  *((void *)v16 + 1) = a2;
  uint64_t v17 = &v7[OBJC_IVAR____TtC13CoreIDVShared40IdentityProofingUnorderedUIElementOption_subTitle];
  *(void *)uint64_t v17 = a3;
  *((void *)v17 + 1) = a4;
  *(void *)&v7[OBJC_IVAR____TtC13CoreIDVShared40IdentityProofingUnorderedUIElementOption_bullets] = a5;
  *(void *)&v7[OBJC_IVAR____TtC13CoreIDVShared40IdentityProofingUnorderedUIElementOption_assessments] = a6;
  *(void *)&v7[OBJC_IVAR____TtC13CoreIDVShared40IdentityProofingUnorderedUIElementOption_accessibility] = a7;
  v19.receiver = v7;
  v19.super_class = ObjectType;
  return objc_msgSendSuper2(&v19, sel_init);
}

Swift::Void __swiftcall IdentityProofingUnorderedUIElementOption.encode(with:)(NSCoder with)
{
  if (*(void *)(v1 + OBJC_IVAR____TtC13CoreIDVShared40IdentityProofingUnorderedUIElementOption_title + 8)) {
    uint64_t v3 = sub_1D7A9BF98();
  }
  else {
    uint64_t v3 = 0;
  }
  uint64_t v4 = (void *)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeObject:v3 forKey:v4];
  swift_unknownObjectRelease();

  if (*(void *)(v1 + OBJC_IVAR____TtC13CoreIDVShared40IdentityProofingUnorderedUIElementOption_subTitle + 8)) {
    uint64_t v5 = sub_1D7A9BF98();
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = (void *)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeObject:v5 forKey:v6];
  swift_unknownObjectRelease();

  if (*(void *)(v1 + OBJC_IVAR____TtC13CoreIDVShared40IdentityProofingUnorderedUIElementOption_bullets)) {
    uint64_t v7 = sub_1D7A9C2F8();
  }
  else {
    uint64_t v7 = 0;
  }
  uint64_t v8 = (void *)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeObject:v7 forKey:v8];
  swift_unknownObjectRelease();

  if (*(void *)(v1 + OBJC_IVAR____TtC13CoreIDVShared40IdentityProofingUnorderedUIElementOption_assessments)) {
    uint64_t v9 = sub_1D7A9BE98();
  }
  else {
    uint64_t v9 = 0;
  }
  uint64_t v10 = (void *)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeObject:v9 forKey:v10];
  swift_unknownObjectRelease();

  if (*(void *)(v1 + OBJC_IVAR____TtC13CoreIDVShared40IdentityProofingUnorderedUIElementOption_accessibility)) {
    uint64_t v11 = sub_1D7A9BE98();
  }
  else {
    uint64_t v11 = 0;
  }
  id v12 = (id)sub_1D7A9BF98();
  [(objc_class *)with.super.isa encodeObject:v11 forKey:v12];
  swift_unknownObjectRelease();
}

id IdentityProofingUnorderedUIElementOption.__allocating_init(coder:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  id v4 = sub_1D79371CC();

  return v4;
}

id IdentityProofingUnorderedUIElementOption.init(coder:)(void *a1)
{
  id v2 = sub_1D79371CC();

  return v2;
}

id IdentityProofingUnorderedUIElementOption.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void IdentityProofingUnorderedUIElementOption.init()()
{
}

id IdentityProofingUnorderedUIElementOption.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t IdentityProofingUnorderedUIElementOption.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844208);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7, v8, v9, v10, v11, v12, v13);
  uint64_t v15 = (char *)&v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D7937530();
  sub_1D7A9D6E8();
  LOBYTE(v18) = 0;
  sub_1D7A9D188();
  if (!v2)
  {
    LOBYTE(v18) = 1;
    sub_1D7A9D188();
    uint64_t v18 = *(void *)(v3 + OBJC_IVAR____TtC13CoreIDVShared40IdentityProofingUnorderedUIElementOption_bullets);
    HIBYTE(v17) = 2;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDF7900);
    sub_1D7919C34(&qword_1EBDF8230);
    sub_1D7A9D1C8();
    uint64_t v18 = *(void *)(v3 + OBJC_IVAR____TtC13CoreIDVShared40IdentityProofingUnorderedUIElementOption_assessments);
    HIBYTE(v17) = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF8C18);
    sub_1D78C6EE0((unint64_t *)&unk_1EA844210);
    sub_1D7A9D1C8();
    uint64_t v18 = *(void *)(v3 + OBJC_IVAR____TtC13CoreIDVShared40IdentityProofingUnorderedUIElementOption_accessibility);
    HIBYTE(v17) = 4;
    sub_1D7A9D1C8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v15, v5);
}

unint64_t IdentityProofingUnorderedUIElementOption.__allocating_init(from:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return IdentityProofingUnorderedUIElementOption.init(from:)(a1);
}

unint64_t IdentityProofingUnorderedUIElementOption.init(from:)(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF8C88);
  uint64_t v27 = *(void *)(v4 - 8);
  uint64_t v28 = v4;
  MEMORY[0x1F4188790](v4, v5, v6, v7, v8, v9, v10, v11);
  uint64_t v13 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  unint64_t v14 = sub_1D7937530();
  uint64_t v15 = v1;
  sub_1D7A9D6A8();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);

    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v16 = (uint64_t)a1;
    uint64_t v18 = v27;
    uint64_t v17 = v28;
    LOBYTE(v32) = 0;
    uint64_t v19 = sub_1D7A9D0A8();
    long long v21 = (uint64_t *)&v15[OBJC_IVAR____TtC13CoreIDVShared40IdentityProofingUnorderedUIElementOption_title];
    uint64_t *v21 = v19;
    v21[1] = v22;
    LOBYTE(v32) = 1;
    uint64_t v23 = sub_1D7A9D0A8();
    uint64_t v24 = (uint64_t *)&v15[OBJC_IVAR____TtC13CoreIDVShared40IdentityProofingUnorderedUIElementOption_subTitle];
    *uint64_t v24 = v23;
    v24[1] = v25;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDF7900);
    char v31 = 2;
    sub_1D7919C34(&qword_1EBDF7A30);
    v26[1] = 0;
    sub_1D7A9D0E8();
    *(void *)&v15[OBJC_IVAR____TtC13CoreIDVShared40IdentityProofingUnorderedUIElementOption_bullets] = v32;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF8C18);
    char v31 = 3;
    sub_1D78C6EE0((unint64_t *)&unk_1EBDF8C20);
    sub_1D7A9D0E8();
    *(void *)&v15[OBJC_IVAR____TtC13CoreIDVShared40IdentityProofingUnorderedUIElementOption_assessments] = v32;
    char v31 = 4;
    sub_1D7A9D0E8();
    *(void *)&v15[OBJC_IVAR____TtC13CoreIDVShared40IdentityProofingUnorderedUIElementOption_accessibility] = v32;

    v30.receiver = v15;
    v30.super_class = ObjectType;
    unint64_t v14 = (unint64_t)objc_msgSendSuper2(&v30, sel_init);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v13, v17);
    __swift_destroy_boxed_opaque_existential_1(v16);
  }
  return v14;
}

unint64_t sub_1D7935FAC@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  id v6 = objc_allocWithZone(v2);
  unint64_t result = IdentityProofingUnorderedUIElementOption.init(from:)(a1);
  if (!v3) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1D7935FFC(void *a1)
{
  return IdentityProofingUnorderedUIElementOption.encode(to:)(a1);
}

uint64_t IdentityProofingUnorderedUIElement.title.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t IdentityProofingUnorderedUIElement.messages.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t IdentityProofingUnorderedUIElement.actions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t IdentityProofingUnorderedUIElement.imageAssets.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t IdentityProofingUnorderedUIElement.learnMoreURL.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t IdentityProofingUnorderedUIElement.options.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t IdentityProofingUnorderedUIElement.init(title:messages:actions:imageAssets:options:learnMoreURL:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  *a9 = result;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a7;
  a9[6] = a8;
  a9[7] = a6;
  return result;
}

uint64_t sub_1D79360B4()
{
  uint64_t result = 0x656C746974;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x736567617373656DLL;
      break;
    case 2:
      uint64_t result = 0x736E6F69746361;
      break;
    case 3:
      uint64_t result = 0x7373416567616D69;
      break;
    case 4:
      uint64_t result = 0x726F4D6E7261656CLL;
      break;
    case 5:
      uint64_t result = 0x736E6F6974706FLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D793618C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1D7938554(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D79361B4(uint64_t a1)
{
  unint64_t v2 = sub_1D7937584();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D79361F0(uint64_t a1)
{
  unint64_t v2 = sub_1D7937584();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t IdentityProofingUnorderedUIElement.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844220);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v5, v6, v7, v8, v9, v10, v11);
  uint64_t v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = v1[2];
  uint64_t v22 = v1[3];
  uint64_t v23 = v14;
  uint64_t v15 = v1[4];
  uint64_t v16 = v1[5];
  _OWORD v20[2] = v1[6];
  uint64_t v21 = v15;
  v20[0] = v1[7];
  v20[1] = v16;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D7937584();
  sub_1D7A9D6E8();
  LOBYTE(v26) = 0;
  uint64_t v17 = v24;
  sub_1D7A9D188();
  if (!v17)
  {
    uint64_t v18 = v22;
    uint64_t v26 = v23;
    char v25 = 1;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDF7900);
    sub_1D7919C34(&qword_1EBDF8230);
    sub_1D7A9D1C8();
    uint64_t v26 = v18;
    char v25 = 2;
    sub_1D7A9D1C8();
    uint64_t v26 = v21;
    char v25 = 3;
    sub_1D7A9D1C8();
    LOBYTE(v26) = 4;
    sub_1D7A9D188();
    uint64_t v26 = v20[0];
    char v25 = 5;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDF8C30);
    sub_1D79375FC(&qword_1EA844228, (unint64_t *)&unk_1EA844230);
    sub_1D7A9D1C8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v13, v3);
}

uint64_t IdentityProofingUnorderedUIElement.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDF8C78);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7, v8, v9, v10, v11, v12, v13);
  uint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D7937584();
  sub_1D7A9D6A8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  LOBYTE(v38) = 0;
  uint64_t v16 = sub_1D7A9D0A8();
  uint64_t v18 = v17;
  uint64_t v35 = v16;
  uint64_t v36 = a2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDF7900);
  char v37 = 1;
  sub_1D7919C34(&qword_1EBDF7A30);
  swift_bridgeObjectRetain();
  sub_1D7A9D0E8();
  uint64_t v34 = v18;
  uint64_t v19 = v38;
  char v37 = 2;
  swift_bridgeObjectRetain();
  sub_1D7A9D0E8();
  char v37 = 3;
  uint64_t v33 = v38;
  swift_bridgeObjectRetain();
  sub_1D7A9D0E8();
  uint64_t v20 = v38;
  LOBYTE(v38) = 4;
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_1D7A9D0A8();
  uint64_t v32 = v20;
  uint64_t v31 = v21;
  uint64_t v24 = v23;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDF8C30);
  char v37 = 5;
  sub_1D79375FC(&qword_1EBDF8C40, &qword_1EBDF8BF8);
  swift_bridgeObjectRetain();
  sub_1D7A9D0E8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
  uint64_t v25 = v38;
  swift_bridgeObjectRetain();
  uint64_t v26 = v36;
  uint64_t v27 = v33;
  uint64_t v28 = v34;
  *uint64_t v36 = v35;
  v26[1] = v28;
  void v26[2] = v19;
  v26[3] = v27;
  uint64_t v29 = v31;
  void v26[4] = v32;
  v26[5] = v29;
  v26[6] = v24;
  v26[7] = v25;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D7936A80@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return IdentityProofingUnorderedUIElement.init(from:)(a1, a2);
}

uint64_t sub_1D7936A98(void *a1)
{
  return IdentityProofingUnorderedUIElement.encode(to:)(a1);
}

uint64_t IdentityProofingAttributeConfiguration.attributeMessages.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t IdentityProofingAttributeConfiguration.messageReplacements.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t IdentityProofingAttributeConfiguration.unorderedUI.getter()
{
  return swift_bridgeObjectRetain();
}

CoreIDVShared::IdentityProofingAttributeConfiguration __swiftcall IdentityProofingAttributeConfiguration.init(attributeMessages:messageReplacements:unorderedUI:)(Swift::OpaquePointer attributeMessages, Swift::OpaquePointer messageReplacements, Swift::OpaquePointer unorderedUI)
{
  v3->_rawValue = attributeMessages._rawValue;
  v3[1]._rawValue = messageReplacements._rawValue;
  v3[2]._rawValue = unorderedUI._rawValue;
  result.unorderedUI = unorderedUI;
  result.messageReplacements = messageReplacements;
  result.attributeMessages = attributeMessages;
  return result;
}

unint64_t sub_1D7936AD4()
{
  unint64_t v1 = 0xD000000000000013;
  if (*v0 != 1) {
    unint64_t v1 = 0x65726564726F6E75;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000011;
  }
}

uint64_t sub_1D7936B3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1D79387EC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D7936B64(uint64_t a1)
{
  unint64_t v2 = sub_1D79376BC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D7936BA0(uint64_t a1)
{
  unint64_t v2 = sub_1D79376BC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t IdentityProofingAttributeConfiguration.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844240);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6, v7, v8, v9, v10, v11, v12);
  uint64_t v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *v1;
  uint64_t v15 = v1[1];
  uint64_t v20 = v1[2];
  uint64_t v21 = v15;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D79376BC();
  sub_1D7A9D6E8();
  uint64_t v23 = v16;
  char v22 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF8C18);
  sub_1D78C6EE0((unint64_t *)&unk_1EA844210);
  sub_1D7A9D228();
  if (!v2)
  {
    uint64_t v17 = v20;
    uint64_t v23 = v21;
    char v22 = 1;
    sub_1D7A9D228();
    uint64_t v23 = v17;
    char v22 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8441B0);
    sub_1D7934B4C(&qword_1EA8441B8, (void (*)(void))sub_1D793494C);
    sub_1D7A9D228();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v14, v4);
}

uint64_t IdentityProofingAttributeConfiguration.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA844250);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7, v8, v9, v10, v11, v12, v13);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D79376BC();
  sub_1D7A9D6A8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v21 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF8C18);
  char v22 = 0;
  sub_1D78C6EE0((unint64_t *)&unk_1EBDF8C20);
  sub_1D7A9D148();
  uint64_t v16 = v23;
  char v22 = 1;
  swift_bridgeObjectRetain();
  sub_1D7A9D148();
  uint64_t v17 = v23;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8441B0);
  char v22 = 2;
  sub_1D7934B4C(&qword_1EA8441D0, (void (*)(void))sub_1D7934BC8);
  swift_bridgeObjectRetain();
  sub_1D7A9D148();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
  uint64_t v18 = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = v21;
  void *v21 = v16;
  v19[1] = v17;
  v19[2] = v18;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D7937150@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return IdentityProofingAttributeConfiguration.init(from:)(a1, a2);
}

uint64_t sub_1D7937168(void *a1)
{
  return IdentityProofingAttributeConfiguration.encode(to:)(a1);
}

uint64_t sub_1D7937180()
{
  unint64_t v0 = sub_1D7A9D058();
  swift_bridgeObjectRelease();
  if (v0 >= 5) {
    return 5;
  }
  else {
    return v0;
  }
}

id sub_1D79371CC()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = sub_1D78C4038(0, (unint64_t *)&qword_1EBDF8260);
  uint64_t v3 = v0;
  uint64_t v4 = sub_1D7A9C908();
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    uint64_t v6 = sub_1D7A9BFC8();
    uint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = 0;
  }
  uint64_t v9 = (uint64_t *)&v3[OBJC_IVAR____TtC13CoreIDVShared40IdentityProofingUnorderedUIElementOption_title];
  *uint64_t v9 = v6;
  v9[1] = v8;
  uint64_t v10 = sub_1D7A9C908();
  if (v10)
  {
    uint64_t v11 = (void *)v10;
    uint64_t v12 = sub_1D7A9BFC8();
    uint64_t v14 = v13;
  }
  else
  {
    uint64_t v12 = 0;
    uint64_t v14 = 0;
  }
  uint64_t v15 = (uint64_t *)&v3[OBJC_IVAR____TtC13CoreIDVShared40IdentityProofingUnorderedUIElementOption_subTitle];
  *uint64_t v15 = v12;
  v15[1] = v14;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA843600);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1D7AA0A40;
  *(void *)(v16 + 32) = sub_1D78C4038(0, (unint64_t *)&qword_1EBDF90E0);
  *(void *)(v16 + 40) = v2;
  sub_1D7A9C918();
  swift_bridgeObjectRelease();
  if (v30)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDF7900);
    int v17 = swift_dynamicCast();
    uint64_t v18 = v27;
    if (!v17) {
      uint64_t v18 = 0;
    }
  }
  else
  {
    sub_1D7867598((uint64_t)v29);
    uint64_t v18 = 0;
  }
  *(void *)&v3[OBJC_IVAR____TtC13CoreIDVShared40IdentityProofingUnorderedUIElementOption_bullets] = v18;
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1D7AA0A40;
  uint64_t v20 = sub_1D78C4038(0, (unint64_t *)&unk_1EA8442A0);
  *(void *)(v19 + 32) = v20;
  *(void *)(v19 + 40) = v2;
  sub_1D7A9C918();
  swift_bridgeObjectRelease();
  if (v30)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF8C18);
    int v21 = swift_dynamicCast();
    uint64_t v22 = v27;
    if (!v21) {
      uint64_t v22 = 0;
    }
  }
  else
  {
    sub_1D7867598((uint64_t)v29);
    uint64_t v22 = 0;
  }
  *(void *)&v3[OBJC_IVAR____TtC13CoreIDVShared40IdentityProofingUnorderedUIElementOption_assessments] = v22;
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1D7AA0A40;
  *(void *)(v23 + 32) = v20;
  *(void *)(v23 + 40) = v2;
  sub_1D7A9C918();
  swift_bridgeObjectRelease();
  if (v30)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF8C18);
    int v24 = swift_dynamicCast();
    uint64_t v25 = v27;
    if (!v24) {
      uint64_t v25 = 0;
    }
  }
  else
  {
    sub_1D7867598((uint64_t)v29);
    uint64_t v25 = 0;
  }
  *(void *)&v3[OBJC_IVAR____TtC13CoreIDVShared40IdentityProofingUnorderedUIElementOption_accessibility] = v25;

  v28.receiver = v3;
  v28.super_class = ObjectType;
  return objc_msgSendSuper2(&v28, sel_init);
}

unint64_t sub_1D7937530()
{
  unint64_t result = qword_1EBDF8BE0;
  if (!qword_1EBDF8BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDF8BE0);
  }
  return result;
}

unint64_t sub_1D7937584()
{
  unint64_t result = qword_1EBDF8AA8;
  if (!qword_1EBDF8AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDF8AA8);
  }
  return result;
}

uint64_t type metadata accessor for IdentityProofingUnorderedUIElementOption()
{
  return self;
}

uint64_t sub_1D79375FC(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EBDF8C30);
    sub_1D793767C(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D793767C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for IdentityProofingUnorderedUIElementOption();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D79376BC()
{
  unint64_t result = qword_1EA844248;
  if (!qword_1EA844248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844248);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for IdentityProofingUnorderedUI(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for IdentityProofingUnorderedUI(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for IdentityProofingUnorderedUI(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for IdentityProofingUnorderedUI(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for IdentityProofingUnorderedUI(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IdentityProofingUnorderedUI()
{
  return &type metadata for IdentityProofingUnorderedUI;
}

uint64_t method lookup function for IdentityProofingUnorderedUIElementOption(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for IdentityProofingUnorderedUIElementOption);
}

uint64_t dispatch thunk of IdentityProofingUnorderedUIElementOption.__allocating_init(title:subtitle:bullets:assessments:accessibility:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of IdentityProofingUnorderedUIElementOption.__allocating_init(coder:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of IdentityProofingUnorderedUIElementOption.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t destroy for IdentityProofingUnorderedUIElement()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for IdentityProofingUnorderedUIElement(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for IdentityProofingUnorderedUIElement(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for IdentityProofingUnorderedUIElement(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for IdentityProofingUnorderedUIElement(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 64)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for IdentityProofingUnorderedUIElement(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 64) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IdentityProofingUnorderedUIElement()
{
  return &type metadata for IdentityProofingUnorderedUIElement;
}

uint64_t destroy for IdentityProofingAttributeConfiguration()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s13CoreIDVShared38IdentityProofingAttributeConfigurationVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for IdentityProofingAttributeConfiguration(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for IdentityProofingAttributeConfiguration(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for IdentityProofingAttributeConfiguration()
{
  return &type metadata for IdentityProofingAttributeConfiguration;
}

unsigned char *storeEnumTagSinglePayload for IdentityProofingAttributeConfiguration.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D7937E20);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IdentityProofingAttributeConfiguration.CodingKeys()
{
  return &type metadata for IdentityProofingAttributeConfiguration.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for IdentityProofingUnorderedUIElement.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *__n128 result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D7937F24);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IdentityProofingUnorderedUIElement.CodingKeys()
{
  return &type metadata for IdentityProofingUnorderedUIElement.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for IdentityProofingUnorderedUIElementOption.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D7938028);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IdentityProofingUnorderedUIElementOption.CodingKeys()
{
  return &type metadata for IdentityProofingUnorderedUIElementOption.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for IdentityProofingUnorderedUI.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1D79380FCLL);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for IdentityProofingUnorderedUI.CodingKeys()
{
  return &type metadata for IdentityProofingUnorderedUI.CodingKeys;
}

unint64_t sub_1D7938138()
{
  unint64_t result = qword_1EA844260;
  if (!qword_1EA844260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844260);
  }
  return result;
}

unint64_t sub_1D7938190()
{
  unint64_t result = qword_1EA844268;
  if (!qword_1EA844268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844268);
  }
  return result;
}

unint64_t sub_1D79381E8()
{
  unint64_t result = qword_1EA844270;
  if (!qword_1EA844270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844270);
  }
  return result;
}

unint64_t sub_1D7938240()
{
  unint64_t result = qword_1EA844278;
  if (!qword_1EA844278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844278);
  }
  return result;
}

unint64_t sub_1D7938298()
{
  unint64_t result = qword_1EA844280;
  if (!qword_1EA844280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844280);
  }
  return result;
}

unint64_t sub_1D79382F0()
{
  unint64_t result = qword_1EA844288;
  if (!qword_1EA844288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844288);
  }
  return result;
}

unint64_t sub_1D7938348()
{
  unint64_t result = qword_1EBDF8AC0;
  if (!qword_1EBDF8AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDF8AC0);
  }
  return result;
}

unint64_t sub_1D79383A0()
{
  unint64_t result = qword_1EBDF8AB8;
  if (!qword_1EBDF8AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDF8AB8);
  }
  return result;
}

unint64_t sub_1D79383F8()
{
  unint64_t result = qword_1EBDF8BF0;
  if (!qword_1EBDF8BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDF8BF0);
  }
  return result;
}

unint64_t sub_1D7938450()
{
  unint64_t result = qword_1EBDF8BE8;
  if (!qword_1EBDF8BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDF8BE8);
  }
  return result;
}

unint64_t sub_1D79384A8()
{
  unint64_t result = qword_1EA844290;
  if (!qword_1EA844290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844290);
  }
  return result;
}

unint64_t sub_1D7938500()
{
  unint64_t result = qword_1EA844298;
  if (!qword_1EA844298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844298);
  }
  return result;
}

uint64_t sub_1D7938554(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736567617373656DLL && a2 == 0xE800000000000000 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x736E6F69746361 && a2 == 0xE700000000000000 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7373416567616D69 && a2 == 0xEB00000000737465 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x726F4D6E7261656CLL && a2 == 0xEC0000004C525565 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x736E6F6974706FLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_1D7A9D358();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_1D79387EC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x80000001D7AC4A70 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D7AC4A90 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65726564726F6E75 && a2 == 0xEB00000000495564)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_1D7A9D358();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

BOOL sub_1D7938958(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = a2;
  uint64_t v5 = *v2;
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = v6 & *(void *)(*v2 + 16);
  type metadata accessor for MetricsFlags();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  if (v7 == v6)
  {
    uint64_t v3 = v8;
  }
  else
  {
    swift_release();
    uint64_t v9 = *(void *)(v5 + 16);
    swift_retain();
    swift_release();
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v9 | v6;
    *BOOL v2 = v10;
  }
  BOOL result = v7 != v6;
  *a1 = v3;
  return result;
}

Swift::Bool __swiftcall IQACode.isPassing()()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v6 = v1;
  uint64_t v7 = v2;
  long long v5 = 0uLL;
  if (_s13CoreIDVShared7IQACodeO2eeoiySbAC_ACtFZ_0(&v6, (uint64_t *)&v5))
  {
    char v3 = 1;
  }
  else
  {
    uint64_t v6 = v1;
    uint64_t v7 = v2;
    long long v5 = xmmword_1D7AABDD0;
    char v3 = _s13CoreIDVShared7IQACodeO2eeoiySbAC_ACtFZ_0(&v6, (uint64_t *)&v5);
  }
  return v3 & 1;
}

Swift::Bool __swiftcall IQACode.failsPDF417()()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v6 = v1;
  uint64_t v7 = v2;
  long long v5 = xmmword_1D7AABDE0;
  if ((_s13CoreIDVShared7IQACodeO2eeoiySbAC_ACtFZ_0(&v6, (uint64_t *)&v5) & 1) != 0
    || (uint64_t v6 = v1,
        uint64_t v7 = v2,
        long long v5 = xmmword_1D7AABDF0,
        (_s13CoreIDVShared7IQACodeO2eeoiySbAC_ACtFZ_0(&v6, (uint64_t *)&v5) & 1) != 0))
  {
    char v3 = 1;
  }
  else
  {
    uint64_t v6 = v1;
    uint64_t v7 = v2;
    long long v5 = xmmword_1D7AABE00;
    char v3 = _s13CoreIDVShared7IQACodeO2eeoiySbAC_ACtFZ_0(&v6, (uint64_t *)&v5);
  }
  return v3 & 1;
}

uint64_t IQACode.hash(into:)()
{
  switch(*(void *)(v0 + 8))
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 0xALL:
    case 0xBLL:
    case 0xCLL:
    case 0xDLL:
    case 0xELL:
    case 0xFLL:
    case 0x10:
    case 0x11:
    case 0x12:
    case 0x13:
    case 0x14:
    case 0x15:
    case 0x16:
    case 0x17:
    case 0x18:
    case 0x19:
    case 0x1ALL:
    case 0x1BLL:
    case 0x1CLL:
    case 0x1DLL:
    case 0x1ELL:
    case 0x1FLL:
    case 0x20:
    case 0x21:
    case 0x22:
    case 0x23:
    case 0x24:
    case 0x25:
    case 0x26:
    case 0x27:
    case 0x28:
    case 0x29:
    case 0x2ALL:
    case 0x2BLL:
    case 0x2CLL:
    case 0x2DLL:
    case 0x2ELL:
    case 0x2FLL:
      uint64_t result = sub_1D7A9D5E8();
      break;
    default:
      sub_1D7A9D5E8();
      uint64_t result = sub_1D7A9C0B8();
      break;
  }
  return result;
}

unint64_t sub_1D7938DE4(char a1)
{
  unint64_t result = 1936941424;
  switch(a1)
  {
    case 1:
    case 2:
      unint64_t result = 0x656E697272756C62;
      break;
    case 3:
      unint64_t result = 0x657275736F707865;
      break;
    case 4:
      unint64_t result = 0x657275736F707865;
      break;
    case 5:
      unint64_t result = 0xD000000000000011;
      break;
    case 6:
      unint64_t result = 0xD000000000000012;
      break;
    case 7:
      unint64_t result = 0xD000000000000013;
      break;
    case 8:
      unint64_t result = 0xD000000000000014;
      break;
    case 9:
      unint64_t result = 0xD000000000000014;
      break;
    case 10:
    case 17:
    case 23:
    case 25:
    case 27:
      unint64_t result = 0xD000000000000015;
      break;
    case 11:
    case 12:
      unint64_t result = 0x6374695064616568;
      break;
    case 13:
      unint64_t result = 0x6C6C6F5264616568;
      break;
    case 14:
      unint64_t result = 0x6C6C6F5264616568;
      break;
    case 15:
      unint64_t result = 0x4C77615964616568;
      break;
    case 16:
      unint64_t result = 0x4877615964616568;
      break;
    case 18:
      unint64_t result = 0xD000000000000016;
      break;
    case 19:
      unint64_t result = 0xD000000000000019;
      break;
    case 20:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 21:
      unint64_t result = 0xD000000000000017;
      break;
    case 22:
      unint64_t result = 0xD000000000000018;
      break;
    case 24:
      unint64_t result = 0xD000000000000016;
      break;
    case 26:
      unint64_t result = 0xD000000000000016;
      break;
    case 28:
      unint64_t result = 0xD000000000000016;
      break;
    case 29:
    case 33:
      unint64_t result = 0x746E656D75636F64;
      break;
    case 30:
      unint64_t result = 0xD000000000000010;
      break;
    case 31:
      unint64_t result = 0xD000000000000013;
      break;
    case 32:
      unint64_t result = 0xD000000000000014;
      break;
    case 34:
      unint64_t result = 0xD000000000000010;
      break;
    case 35:
      unint64_t result = 0xD000000000000011;
      break;
    case 36:
      unint64_t result = 0x6F54746567726174;
      break;
    case 37:
      unint64_t result = 0xD000000000000010;
      break;
    case 38:
      unint64_t result = 0x73656361466D756ELL;
      break;
    case 39:
      unint64_t result = 0x73656361466D756ELL;
      break;
    case 40:
      unint64_t result = 0x6C6576654C78756CLL;
      break;
    case 41:
      unint64_t result = 0x6C6576654C78756CLL;
      break;
    case 42:
      unint64_t result = 0x6F4E373134666470;
      break;
    case 43:
      unint64_t result = 0x6F46373134666470;
      break;
    case 44:
      unint64_t result = 0xD000000000000011;
      break;
    case 45:
      unint64_t result = 0xD000000000000010;
      break;
    case 46:
      unint64_t result = 0x73694D6574617473;
      break;
    case 47:
      unint64_t result = 0x756C636E6F636E69;
      break;
    case 48:
      unint64_t result = 0x78656C706D6F63;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D7939384(uint64_t a1)
{
  unint64_t v2 = sub_1D7952384();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D79393C0(uint64_t a1)
{
  unint64_t v2 = sub_1D7952384();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D79393FC(uint64_t a1)
{
  unint64_t v2 = sub_1D79523D8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D7939438(uint64_t a1)
{
  unint64_t v2 = sub_1D79523D8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D7939474(uint64_t a1)
{
  unint64_t v2 = sub_1D79528C4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D79394B0(uint64_t a1)
{
  unint64_t v2 = sub_1D79528C4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D79394EC(uint64_t a1)
{
  unint64_t v2 = sub_1D7952918();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D7939528(uint64_t a1)
{
  unint64_t v2 = sub_1D7952918();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D7939564(uint64_t a1)
{
  unint64_t v2 = sub_1D7952774();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D79395A0(uint64_t a1)
{
  unint64_t v2 = sub_1D7952774();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D79395DC(uint64_t a1)
{
  unint64_t v2 = sub_1D79527C8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D7939618(uint64_t a1)
{
  unint64_t v2 = sub_1D79527C8();
  return MEMORY[0x1F41862B0](a1, v2);
}

unint64_t sub_1D7939654()
{
  return sub_1D7938DE4(*v0);
}

uint64_t sub_1D793965C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1D795ACE8(a1, a2);
  *a3 = result;
  return result;
}

void sub_1D7939684(unsigned char *a1@<X8>)
{
  *a1 = 49;
}

uint64_t sub_1D7939690(uint64_t a1)
{
  unint64_t v2 = sub_1D7951958();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D79396CC(uint64_t a1)
{
  unint64_t v2 = sub_1D7951958();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D7939710()
{
  return 12383;
}

uint64_t sub_1D7939720(uint64_t a1)
{
  unint64_t v2 = sub_1D79519AC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D793975C(uint64_t a1)
{
  unint64_t v2 = sub_1D79519AC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D7939798(uint64_t a1)
{
  unint64_t v2 = sub_1D7951F40();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D79397D4(uint64_t a1)
{
  unint64_t v2 = sub_1D7951F40();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D7939810(uint64_t a1)
{
  unint64_t v2 = sub_1D7951EEC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D793984C(uint64_t a1)
{
  unint64_t v2 = sub_1D7951EEC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D7939888(uint64_t a1)
{
  unint64_t v2 = sub_1D7951F94();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D79398C4(uint64_t a1)
{
  unint64_t v2 = sub_1D7951F94();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D7939900(uint64_t a1)
{
  unint64_t v2 = sub_1D7951FE8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D793993C(uint64_t a1)
{
  unint64_t v2 = sub_1D7951FE8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D7939978(uint64_t a1)
{
  unint64_t v2 = sub_1D7951E98();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D79399B4(uint64_t a1)
{
  unint64_t v2 = sub_1D7951E98();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D79399F0(uint64_t a1)
{
  unint64_t v2 = sub_1D795281C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D7939A2C(uint64_t a1)
{
  unint64_t v2 = sub_1D795281C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D7939A68(uint64_t a1)
{
  unint64_t v2 = sub_1D7952870();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D7939AA4(uint64_t a1)
{
  unint64_t v2 = sub_1D7952870();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D7939AE0(uint64_t a1)
{
  unint64_t v2 = sub_1D795203C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D7939B1C(uint64_t a1)
{
  unint64_t v2 = sub_1D795203C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D7939B58(uint64_t a1)
{
  unint64_t v2 = sub_1D7952090();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D7939B94(uint64_t a1)
{
  unint64_t v2 = sub_1D7952090();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D7939BD0(uint64_t a1)
{
  unint64_t v2 = sub_1D7952624();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D7939C0C(uint64_t a1)
{
  unint64_t v2 = sub_1D7952624();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D7939C48(uint64_t a1)
{
  unint64_t v2 = sub_1D7952678();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D7939C84(uint64_t a1)
{
  unint64_t v2 = sub_1D7952678();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D7939CC0(uint64_t a1)
{
  unint64_t v2 = sub_1D79526CC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D7939CFC(uint64_t a1)
{
  unint64_t v2 = sub_1D79526CC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D7939D38(uint64_t a1)
{
  unint64_t v2 = sub_1D7952720();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D7939D74(uint64_t a1)
{
  unint64_t v2 = sub_1D7952720();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D7939DB0(uint64_t a1)
{
  unint64_t v2 = sub_1D795218C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D7939DEC(uint64_t a1)
{
  unint64_t v2 = sub_1D795218C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D7939E28(uint64_t a1)
{
  unint64_t v2 = sub_1D79521E0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D7939E64(uint64_t a1)
{
  unint64_t v2 = sub_1D79521E0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D7939EA0(uint64_t a1)
{
  unint64_t v2 = sub_1D795257C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D7939EDC(uint64_t a1)
{
  unint64_t v2 = sub_1D795257C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D7939F18(uint64_t a1)
{
  unint64_t v2 = sub_1D79525D0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D7939F54(uint64_t a1)
{
  unint64_t v2 = sub_1D79525D0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D7939F90(uint64_t a1)
{
  unint64_t v2 = sub_1D79524D4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D7939FCC(uint64_t a1)
{
  unint64_t v2 = sub_1D79524D4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D793A008(uint64_t a1)
{
  unint64_t v2 = sub_1D7952528();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D793A044(uint64_t a1)
{
  unint64_t v2 = sub_1D7952528();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D793A080(uint64_t a1)
{
  unint64_t v2 = sub_1D795242C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D793A0BC(uint64_t a1)
{
  unint64_t v2 = sub_1D795242C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D793A0F8(uint64_t a1)
{
  unint64_t v2 = sub_1D7952480();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D793A134(uint64_t a1)
{
  unint64_t v2 = sub_1D7952480();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D793A170(uint64_t a1)
{
  unint64_t v2 = sub_1D79520E4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D793A1AC(uint64_t a1)
{
  unint64_t v2 = sub_1D79520E4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D793A1E8(uint64_t a1)
{
  unint64_t v2 = sub_1D7952138();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D793A224(uint64_t a1)
{
  unint64_t v2 = sub_1D7952138();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D793A260(uint64_t a1)
{
  unint64_t v2 = sub_1D7951A00();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D793A29C(uint64_t a1)
{
  unint64_t v2 = sub_1D7951A00();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D793A2D8(uint64_t a1)
{
  unint64_t v2 = sub_1D7951AA8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D793A314(uint64_t a1)
{
  unint64_t v2 = sub_1D7951AA8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D793A350(uint64_t a1)
{
  unint64_t v2 = sub_1D7951BF8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D793A38C(uint64_t a1)
{
  unint64_t v2 = sub_1D7951BF8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D793A3C8(uint64_t a1)
{
  unint64_t v2 = sub_1D7951C4C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D793A404(uint64_t a1)
{
  unint64_t v2 = sub_1D7951C4C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D793A440(uint64_t a1)
{
  unint64_t v2 = sub_1D7951AFC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D793A47C(uint64_t a1)
{
  unint64_t v2 = sub_1D7951AFC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D793A4B8(uint64_t a1)
{
  unint64_t v2 = sub_1D7951CA0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D793A4F4(uint64_t a1)
{
  unint64_t v2 = sub_1D7951CA0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D793A530(uint64_t a1)
{
  unint64_t v2 = sub_1D7951CF4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D793A56C(uint64_t a1)
{
  unint64_t v2 = sub_1D7951CF4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D793A5A8(uint64_t a1)
{
  unint64_t v2 = sub_1D795296C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D793A5E4(uint64_t a1)
{
  unint64_t v2 = sub_1D795296C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D793A620(uint64_t a1)
{
  unint64_t v2 = sub_1D7951B50();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D793A65C(uint64_t a1)
{
  unint64_t v2 = sub_1D7951B50();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D793A698(uint64_t a1)
{
  unint64_t v2 = sub_1D7951BA4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D793A6D4(uint64_t a1)
{
  unint64_t v2 = sub_1D7951BA4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D793A710(uint64_t a1)
{
  unint64_t v2 = sub_1D79522DC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D793A74C(uint64_t a1)
{
  unint64_t v2 = sub_1D79522DC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D793A788(uint64_t a1)
{
  unint64_t v2 = sub_1D7952330();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D793A7C4(uint64_t a1)
{
  unint64_t v2 = sub_1D7952330();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D793A800(uint64_t a1)
{
  unint64_t v2 = sub_1D7951A54();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D793A83C(uint64_t a1)
{
  unint64_t v2 = sub_1D7951A54();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D793A878(uint64_t a1)
{
  unint64_t v2 = sub_1D7952234();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D793A8B4(uint64_t a1)
{
  unint64_t v2 = sub_1D7952234();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D793A8F0(uint64_t a1)
{
  unint64_t v2 = sub_1D7952288();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D793A92C(uint64_t a1)
{
  unint64_t v2 = sub_1D7952288();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D793A968(uint64_t a1)
{
  unint64_t v2 = sub_1D7951D48();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D793A9A4(uint64_t a1)
{
  unint64_t v2 = sub_1D7951D48();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D793A9E0(uint64_t a1)
{
  unint64_t v2 = sub_1D7951E44();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D793AA1C(uint64_t a1)
{
  unint64_t v2 = sub_1D7951E44();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D793AA58(uint64_t a1)
{
  unint64_t v2 = sub_1D7951DF0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D793AA94(uint64_t a1)
{
  unint64_t v2 = sub_1D7951DF0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D793AAD0(uint64_t a1)
{
  unint64_t v2 = sub_1D7951D9C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D793AB0C(uint64_t a1)
{
  unint64_t v2 = sub_1D7951D9C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t IQACode.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8442B0);
  uint64_t v613 = *(void *)(v3 - 8);
  uint64_t v614 = v3;
  MEMORY[0x1F4188790](v3, v4, v5, v6, v7, v8, v9, v10);
  v612 = (char *)v471 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8442B8);
  uint64_t v610 = *(void *)(v12 - 8);
  uint64_t v611 = v12;
  MEMORY[0x1F4188790](v12, v13, v14, v15, v16, v17, v18, v19);
  v609 = (char *)v471 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8442C0);
  uint64_t v607 = *(void *)(v21 - 8);
  uint64_t v608 = v21;
  MEMORY[0x1F4188790](v21, v22, v23, v24, v25, v26, v27, v28);
  v606 = (char *)v471 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8442C8);
  uint64_t v604 = *(void *)(v30 - 8);
  uint64_t v605 = v30;
  MEMORY[0x1F4188790](v30, v31, v32, v33, v34, v35, v36, v37);
  v603 = (char *)v471 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8442D0);
  uint64_t v601 = *(void *)(v39 - 8);
  uint64_t v602 = v39;
  MEMORY[0x1F4188790](v39, v40, v41, v42, v43, v44, v45, v46);
  v600 = (char *)v471 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8442D8);
  uint64_t v598 = *(void *)(v48 - 8);
  uint64_t v599 = v48;
  MEMORY[0x1F4188790](v48, v49, v50, v51, v52, v53, v54, v55);
  v597 = (char *)v471 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v596 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8442E0);
  uint64_t v595 = *(void *)(v596 - 8);
  MEMORY[0x1F4188790](v596, v57, v58, v59, v60, v61, v62, v63);
  v594 = (char *)v471 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v593 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8442E8);
  uint64_t v592 = *(void *)(v593 - 8);
  MEMORY[0x1F4188790](v593, v65, v66, v67, v68, v69, v70, v71);
  v591 = (char *)v471 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v590 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8442F0);
  uint64_t v589 = *(void *)(v590 - 8);
  MEMORY[0x1F4188790](v590, v73, v74, v75, v76, v77, v78, v79);
  v588 = (char *)v471 - ((v80 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v587 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8442F8);
  uint64_t v586 = *(void *)(v587 - 8);
  MEMORY[0x1F4188790](v587, v81, v82, v83, v84, v85, v86, v87);
  v585 = (char *)v471 - ((v88 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v584 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844300);
  uint64_t v583 = *(void *)(v584 - 8);
  MEMORY[0x1F4188790](v584, v89, v90, v91, v92, v93, v94, v95);
  v582 = (char *)v471 - ((v96 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v581 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844308);
  uint64_t v580 = *(void *)(v581 - 8);
  MEMORY[0x1F4188790](v581, v97, v98, v99, v100, v101, v102, v103);
  v579 = (char *)v471 - ((v104 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v578 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844310);
  uint64_t v577 = *(void *)(v578 - 8);
  MEMORY[0x1F4188790](v578, v105, v106, v107, v108, v109, v110, v111);
  v576 = (char *)v471 - ((v112 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v575 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844318);
  uint64_t v574 = *(void *)(v575 - 8);
  MEMORY[0x1F4188790](v575, v113, v114, v115, v116, v117, v118, v119);
  v573 = (char *)v471 - ((v120 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v572 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844320);
  uint64_t v571 = *(void *)(v572 - 8);
  MEMORY[0x1F4188790](v572, v121, v122, v123, v124, v125, v126, v127);
  v570 = (char *)v471 - ((v128 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v569 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844328);
  uint64_t v568 = *(void *)(v569 - 8);
  MEMORY[0x1F4188790](v569, v129, v130, v131, v132, v133, v134, v135);
  v567 = (char *)v471 - ((v136 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v566 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844330);
  uint64_t v565 = *(void *)(v566 - 8);
  MEMORY[0x1F4188790](v566, v137, v138, v139, v140, v141, v142, v143);
  v564 = (char *)v471 - ((v144 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v563 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844338);
  uint64_t v562 = *(void *)(v563 - 8);
  MEMORY[0x1F4188790](v563, v145, v146, v147, v148, v149, v150, v151);
  v561 = (char *)v471 - ((v152 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v560 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844340);
  uint64_t v559 = *(void *)(v560 - 8);
  MEMORY[0x1F4188790](v560, v153, v154, v155, v156, v157, v158, v159);
  v558 = (char *)v471 - ((v160 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v557 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844348);
  uint64_t v556 = *(void *)(v557 - 8);
  MEMORY[0x1F4188790](v557, v161, v162, v163, v164, v165, v166, v167);
  v555 = (char *)v471 - ((v168 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v554 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844350);
  uint64_t v553 = *(void *)(v554 - 8);
  MEMORY[0x1F4188790](v554, v169, v170, v171, v172, v173, v174, v175);
  v552 = (char *)v471 - ((v176 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v551 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844358);
  uint64_t v550 = *(void *)(v551 - 8);
  MEMORY[0x1F4188790](v551, v177, v178, v179, v180, v181, v182, v183);
  v549 = (char *)v471 - ((v184 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v548 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844360);
  uint64_t v547 = *(void *)(v548 - 8);
  MEMORY[0x1F4188790](v548, v185, v186, v187, v188, v189, v190, v191);
  v546 = (char *)v471 - ((v192 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v545 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844368);
  uint64_t v544 = *(void *)(v545 - 8);
  MEMORY[0x1F4188790](v545, v193, v194, v195, v196, v197, v198, v199);
  v543 = (char *)v471 - ((v200 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v542 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844370);
  uint64_t v541 = *(void *)(v542 - 8);
  MEMORY[0x1F4188790](v542, v201, v202, v203, v204, v205, v206, v207);
  v540 = (char *)v471 - ((v208 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v539 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844378);
  uint64_t v538 = *(void *)(v539 - 8);
  MEMORY[0x1F4188790](v539, v209, v210, v211, v212, v213, v214, v215);
  v537 = (char *)v471 - ((v216 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v536 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844380);
  uint64_t v535 = *(void *)(v536 - 8);
  MEMORY[0x1F4188790](v536, v217, v218, v219, v220, v221, v222, v223);
  v534 = (char *)v471 - ((v224 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v533 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844388);
  uint64_t v532 = *(void *)(v533 - 8);
  MEMORY[0x1F4188790](v533, v225, v226, v227, v228, v229, v230, v231);
  v531 = (char *)v471 - ((v232 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v530 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844390);
  uint64_t v529 = *(void *)(v530 - 8);
  MEMORY[0x1F4188790](v530, v233, v234, v235, v236, v237, v238, v239);
  CGRect v528 = (char *)v471 - ((v240 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v527 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844398);
  uint64_t v526 = *(void *)(v527 - 8);
  MEMORY[0x1F4188790](v527, v241, v242, v243, v244, v245, v246, v247);
  CGRect v525 = (char *)v471 - ((v248 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v524 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8443A0);
  uint64_t v523 = *(void *)(v524 - 8);
  MEMORY[0x1F4188790](v524, v249, v250, v251, v252, v253, v254, v255);
  CGRect v522 = (char *)v471 - ((v256 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v521 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8443A8);
  uint64_t v520 = *(void *)(v521 - 8);
  MEMORY[0x1F4188790](v521, v257, v258, v259, v260, v261, v262, v263);
  CGRect v519 = (char *)v471 - ((v264 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v518 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8443B0);
  uint64_t v517 = *(void *)(v518 - 8);
  MEMORY[0x1F4188790](v518, v265, v266, v267, v268, v269, v270, v271);
  CGRect v516 = (char *)v471 - ((v272 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v515 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8443B8);
  uint64_t v514 = *(void *)(v515 - 8);
  MEMORY[0x1F4188790](v515, v273, v274, v275, v276, v277, v278, v279);
  CGRect v513 = (char *)v471 - ((v280 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v512 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8443C0);
  uint64_t v511 = *(void *)(v512 - 8);
  MEMORY[0x1F4188790](v512, v281, v282, v283, v284, v285, v286, v287);
  char v510 = (char *)v471 - ((v288 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v509 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8443C8);
  uint64_t v508 = *(void *)(v509 - 8);
  MEMORY[0x1F4188790](v509, v289, v290, v291, v292, v293, v294, v295);
  v507 = (char *)v471 - ((v296 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v506 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8443D0);
  uint64_t v505 = *(void *)(v506 - 8);
  MEMORY[0x1F4188790](v506, v297, v298, v299, v300, v301, v302, v303);
  v504 = (char *)v471 - ((v304 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v503 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8443D8);
  uint64_t v502 = *(void *)(v503 - 8);
  MEMORY[0x1F4188790](v503, v305, v306, v307, v308, v309, v310, v311);
  long long v501 = (char *)v471 - ((v312 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v500 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8443E0);
  uint64_t v499 = *(void *)(v500 - 8);
  MEMORY[0x1F4188790](v500, v313, v314, v315, v316, v317, v318, v319);
  long long v498 = (char *)v471 - ((v320 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v497 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8443E8);
  uint64_t v496 = *(void *)(v497 - 8);
  MEMORY[0x1F4188790](v497, v321, v322, v323, v324, v325, v326, v327);
  long long v495 = (char *)v471 - ((v328 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v494 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8443F0);
  uint64_t v493 = *(void *)(v494 - 8);
  MEMORY[0x1F4188790](v494, v329, v330, v331, v332, v333, v334, v335);
  long long v492 = (char *)v471 - ((v336 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v491 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8443F8);
  uint64_t v490 = *(void *)(v491 - 8);
  MEMORY[0x1F4188790](v491, v337, v338, v339, v340, v341, v342, v343);
  long long v489 = (char *)v471 - ((v344 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v488 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844400);
  uint64_t v487 = *(void *)(v488 - 8);
  MEMORY[0x1F4188790](v488, v345, v346, v347, v348, v349, v350, v351);
  long long v486 = (char *)v471 - ((v352 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v485 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844408);
  uint64_t v484 = *(void *)(v485 - 8);
  MEMORY[0x1F4188790](v485, v353, v354, v355, v356, v357, v358, v359);
  v483 = (char *)v471 - ((v360 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v482 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844410);
  uint64_t v481 = *(void *)(v482 - 8);
  MEMORY[0x1F4188790](v482, v361, v362, v363, v364, v365, v366, v367);
  uint64_t v480 = (char *)v471 - ((v368 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v479 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844418);
  uint64_t v478 = *(void *)(v479 - 8);
  MEMORY[0x1F4188790](v479, v369, v370, v371, v372, v373, v374, v375);
  uint64_t v477 = (char *)v471 - ((v376 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v476 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844420);
  uint64_t v475 = *(void *)(v476 - 8);
  MEMORY[0x1F4188790](v476, v377, v378, v379, v380, v381, v382, v383);
  long long v474 = (char *)v471 - ((v384 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v385 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844428);
  uint64_t v473 = *(void *)(v385 - 8);
  MEMORY[0x1F4188790](v385, v386, v387, v388, v389, v390, v391, v392);
  v394 = (char *)v471 - ((v393 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v395 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844430);
  uint64_t v472 = *(void *)(v395 - 8);
  MEMORY[0x1F4188790](v395, v396, v397, v398, v399, v400, v401, v402);
  char v404 = (char *)v471 - ((v403 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v405 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844438);
  uint64_t v406 = *(void *)(v405 - 8);
  uint64_t v616 = v405;
  uint64_t v617 = v406;
  MEMORY[0x1F4188790](v405, v407, v408, v409, v410, v411, v412, v413);
  CGFloat v415 = (char *)v471 - ((v414 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v416 = v1[1];
  v471[1] = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D7951958();
  v615 = v415;
  sub_1D7A9D6E8();
  switch(v416)
  {
    case 0:
      char v619 = 0;
      sub_1D795296C();
      uint64_t v418 = v615;
      uint64_t v417 = v616;
      sub_1D7A9D178();
      (*(void (**)(char *, uint64_t))(v472 + 8))(v404, v395);
      goto LABEL_47;
    case 1:
      char v619 = 1;
      sub_1D7952918();
      uint64_t v418 = v615;
      uint64_t v417 = v616;
      sub_1D7A9D178();
      (*(void (**)(char *, uint64_t))(v473 + 8))(v394, v385);
      goto LABEL_47;
    case 2:
      char v619 = 2;
      sub_1D79528C4();
      unint64_t v424 = v474;
      uint64_t v418 = v615;
      uint64_t v417 = v616;
      sub_1D7A9D178();
      unint64_t v425 = *(void (**)(char *, void))(v475 + 8);
      unint64_t v426 = v424;
      uint64_t v427 = &v508;
      goto LABEL_46;
    case 3:
      char v619 = 3;
      sub_1D7952870();
      uint64_t v428 = v477;
      uint64_t v418 = v615;
      uint64_t v417 = v616;
      sub_1D7A9D178();
      unint64_t v425 = *(void (**)(char *, void))(v478 + 8);
      unint64_t v426 = v428;
      uint64_t v427 = &v511;
      goto LABEL_46;
    case 4:
      char v619 = 4;
      sub_1D795281C();
      unint64_t v429 = v480;
      uint64_t v418 = v615;
      uint64_t v417 = v616;
      sub_1D7A9D178();
      unint64_t v425 = *(void (**)(char *, void))(v481 + 8);
      unint64_t v426 = v429;
      uint64_t v427 = &v514;
      goto LABEL_46;
    case 5:
      char v619 = 5;
      sub_1D79527C8();
      uint64_t v430 = v483;
      uint64_t v418 = v615;
      uint64_t v417 = v616;
      sub_1D7A9D178();
      unint64_t v425 = *(void (**)(char *, void))(v484 + 8);
      unint64_t v426 = v430;
      uint64_t v427 = &v517;
      goto LABEL_46;
    case 6:
      char v619 = 6;
      sub_1D7952774();
      id v431 = v486;
      uint64_t v418 = v615;
      uint64_t v417 = v616;
      sub_1D7A9D178();
      unint64_t v425 = *(void (**)(char *, void))(v487 + 8);
      unint64_t v426 = v431;
      uint64_t v427 = &v520;
      goto LABEL_46;
    case 7:
      char v619 = 7;
      sub_1D7952720();
      unint64_t v432 = v489;
      uint64_t v418 = v615;
      uint64_t v417 = v616;
      sub_1D7A9D178();
      unint64_t v425 = *(void (**)(char *, void))(v490 + 8);
      unint64_t v426 = v432;
      uint64_t v427 = &v523;
      goto LABEL_46;
    case 8:
      char v619 = 8;
      sub_1D79526CC();
      uint64_t v433 = v492;
      uint64_t v418 = v615;
      uint64_t v417 = v616;
      sub_1D7A9D178();
      unint64_t v425 = *(void (**)(char *, void))(v493 + 8);
      unint64_t v426 = v433;
      uint64_t v427 = &v526;
      goto LABEL_46;
    case 9:
      char v619 = 9;
      sub_1D7952678();
      long long v434 = v495;
      uint64_t v418 = v615;
      uint64_t v417 = v616;
      sub_1D7A9D178();
      unint64_t v425 = *(void (**)(char *, void))(v496 + 8);
      unint64_t v426 = v434;
      uint64_t v427 = &v529;
      goto LABEL_46;
    case 10:
      char v619 = 10;
      sub_1D7952624();
      v435 = v498;
      uint64_t v418 = v615;
      uint64_t v417 = v616;
      sub_1D7A9D178();
      unint64_t v425 = *(void (**)(char *, void))(v499 + 8);
      unint64_t v426 = v435;
      uint64_t v427 = &v532;
      goto LABEL_46;
    case 11:
      char v619 = 11;
      sub_1D79525D0();
      uint64_t v436 = v501;
      uint64_t v418 = v615;
      uint64_t v417 = v616;
      sub_1D7A9D178();
      unint64_t v425 = *(void (**)(char *, void))(v502 + 8);
      unint64_t v426 = v436;
      uint64_t v427 = &v535;
      goto LABEL_46;
    case 12:
      char v619 = 12;
      sub_1D795257C();
      uint64_t v437 = v504;
      uint64_t v418 = v615;
      uint64_t v417 = v616;
      sub_1D7A9D178();
      unint64_t v425 = *(void (**)(char *, void))(v505 + 8);
      unint64_t v426 = v437;
      uint64_t v427 = &v538;
      goto LABEL_46;
    case 13:
      char v619 = 13;
      sub_1D7952528();
      uint64_t v438 = v507;
      uint64_t v418 = v615;
      uint64_t v417 = v616;
      sub_1D7A9D178();
      unint64_t v425 = *(void (**)(char *, void))(v508 + 8);
      unint64_t v426 = v438;
      uint64_t v427 = &v541;
      goto LABEL_46;
    case 14:
      char v619 = 14;
      sub_1D79524D4();
      v439 = v510;
      uint64_t v418 = v615;
      uint64_t v417 = v616;
      sub_1D7A9D178();
      unint64_t v425 = *(void (**)(char *, void))(v511 + 8);
      unint64_t v426 = v439;
      uint64_t v427 = &v544;
      goto LABEL_46;
    case 15:
      char v619 = 15;
      sub_1D7952480();
      uint64_t v440 = v513;
      uint64_t v418 = v615;
      uint64_t v417 = v616;
      sub_1D7A9D178();
      unint64_t v425 = *(void (**)(char *, void))(v514 + 8);
      unint64_t v426 = v440;
      uint64_t v427 = &v547;
      goto LABEL_46;
    case 16:
      char v619 = 16;
      sub_1D795242C();
      v441 = v516;
      uint64_t v418 = v615;
      uint64_t v417 = v616;
      sub_1D7A9D178();
      unint64_t v425 = *(void (**)(char *, void))(v517 + 8);
      unint64_t v426 = v441;
      uint64_t v427 = &v550;
      goto LABEL_46;
    case 17:
      char v619 = 17;
      sub_1D79523D8();
      long long v442 = v519;
      uint64_t v418 = v615;
      uint64_t v417 = v616;
      sub_1D7A9D178();
      unint64_t v425 = *(void (**)(char *, void))(v520 + 8);
      unint64_t v426 = v442;
      uint64_t v427 = &v553;
      goto LABEL_46;
    case 18:
      char v619 = 18;
      sub_1D7952384();
      uint64_t v443 = v522;
      uint64_t v418 = v615;
      uint64_t v417 = v616;
      sub_1D7A9D178();
      unint64_t v425 = *(void (**)(char *, void))(v523 + 8);
      unint64_t v426 = v443;
      uint64_t v427 = &v556;
      goto LABEL_46;
    case 19:
      char v619 = 19;
      sub_1D7952330();
      uint64_t v444 = v525;
      uint64_t v418 = v615;
      uint64_t v417 = v616;
      sub_1D7A9D178();
      unint64_t v425 = *(void (**)(char *, void))(v526 + 8);
      unint64_t v426 = v444;
      uint64_t v427 = &v559;
      goto LABEL_46;
    case 20:
      char v619 = 20;
      sub_1D79522DC();
      id v445 = v528;
      uint64_t v418 = v615;
      uint64_t v417 = v616;
      sub_1D7A9D178();
      unint64_t v425 = *(void (**)(char *, void))(v529 + 8);
      unint64_t v426 = v445;
      uint64_t v427 = &v562;
      goto LABEL_46;
    case 21:
      char v619 = 21;
      sub_1D7952288();
      id v446 = v531;
      uint64_t v418 = v615;
      uint64_t v417 = v616;
      sub_1D7A9D178();
      unint64_t v425 = *(void (**)(char *, void))(v532 + 8);
      unint64_t v426 = v446;
      uint64_t v427 = &v565;
      goto LABEL_46;
    case 22:
      char v619 = 22;
      sub_1D7952234();
      id v447 = v534;
      uint64_t v418 = v615;
      uint64_t v417 = v616;
      sub_1D7A9D178();
      unint64_t v425 = *(void (**)(char *, void))(v535 + 8);
      unint64_t v426 = v447;
      uint64_t v427 = &v568;
      goto LABEL_46;
    case 23:
      char v619 = 23;
      sub_1D79521E0();
      id v448 = v537;
      uint64_t v418 = v615;
      uint64_t v417 = v616;
      sub_1D7A9D178();
      unint64_t v425 = *(void (**)(char *, void))(v538 + 8);
      unint64_t v426 = v448;
      uint64_t v427 = &v571;
      goto LABEL_46;
    case 24:
      char v619 = 24;
      sub_1D795218C();
      id v449 = v540;
      uint64_t v418 = v615;
      uint64_t v417 = v616;
      sub_1D7A9D178();
      unint64_t v425 = *(void (**)(char *, void))(v541 + 8);
      unint64_t v426 = v449;
      uint64_t v427 = &v574;
      goto LABEL_46;
    case 25:
      char v619 = 25;
      sub_1D7952138();
      v450 = v543;
      uint64_t v418 = v615;
      uint64_t v417 = v616;
      sub_1D7A9D178();
      unint64_t v425 = *(void (**)(char *, void))(v544 + 8);
      unint64_t v426 = v450;
      uint64_t v427 = &v577;
      goto LABEL_46;
    case 26:
      char v619 = 26;
      sub_1D79520E4();
      id v451 = v546;
      uint64_t v418 = v615;
      uint64_t v417 = v616;
      sub_1D7A9D178();
      unint64_t v425 = *(void (**)(char *, void))(v547 + 8);
      unint64_t v426 = v451;
      uint64_t v427 = &v580;
      goto LABEL_46;
    case 27:
      char v619 = 27;
      sub_1D7952090();
      v452 = v549;
      uint64_t v418 = v615;
      uint64_t v417 = v616;
      sub_1D7A9D178();
      unint64_t v425 = *(void (**)(char *, void))(v550 + 8);
      unint64_t v426 = v452;
      uint64_t v427 = &v583;
      goto LABEL_46;
    case 28:
      char v619 = 28;
      sub_1D795203C();
      id v453 = v552;
      uint64_t v418 = v615;
      uint64_t v417 = v616;
      sub_1D7A9D178();
      unint64_t v425 = *(void (**)(char *, void))(v553 + 8);
      unint64_t v426 = v453;
      uint64_t v427 = &v586;
      goto LABEL_46;
    case 29:
      char v619 = 29;
      sub_1D7951FE8();
      id v454 = v555;
      uint64_t v418 = v615;
      uint64_t v417 = v616;
      sub_1D7A9D178();
      unint64_t v425 = *(void (**)(char *, void))(v556 + 8);
      unint64_t v426 = v454;
      uint64_t v427 = &v589;
      goto LABEL_46;
    case 30:
      char v619 = 30;
      sub_1D7951F94();
      id v455 = v558;
      uint64_t v418 = v615;
      uint64_t v417 = v616;
      sub_1D7A9D178();
      unint64_t v425 = *(void (**)(char *, void))(v559 + 8);
      unint64_t v426 = v455;
      uint64_t v427 = &v592;
      goto LABEL_46;
    case 31:
      char v619 = 31;
      sub_1D7951F40();
      id v456 = v561;
      uint64_t v418 = v615;
      uint64_t v417 = v616;
      sub_1D7A9D178();
      unint64_t v425 = *(void (**)(char *, void))(v562 + 8);
      unint64_t v426 = v456;
      uint64_t v427 = &v595;
      goto LABEL_46;
    case 32:
      char v619 = 32;
      sub_1D7951EEC();
      CGFloat v457 = v564;
      uint64_t v418 = v615;
      uint64_t v417 = v616;
      sub_1D7A9D178();
      unint64_t v425 = *(void (**)(char *, void))(v565 + 8);
      unint64_t v426 = v457;
      uint64_t v427 = &v598;
      goto LABEL_46;
    case 33:
      char v619 = 33;
      sub_1D7951E98();
      long long v458 = v567;
      uint64_t v418 = v615;
      uint64_t v417 = v616;
      sub_1D7A9D178();
      unint64_t v425 = *(void (**)(char *, void))(v568 + 8);
      unint64_t v426 = v458;
      uint64_t v427 = &v601;
      goto LABEL_46;
    case 34:
      char v619 = 34;
      sub_1D7951E44();
      v459 = v570;
      uint64_t v418 = v615;
      uint64_t v417 = v616;
      sub_1D7A9D178();
      unint64_t v425 = *(void (**)(char *, void))(v571 + 8);
      unint64_t v426 = v459;
      uint64_t v427 = &v604;
      goto LABEL_46;
    case 35:
      char v619 = 35;
      sub_1D7951DF0();
      unint64_t v460 = v573;
      uint64_t v418 = v615;
      uint64_t v417 = v616;
      sub_1D7A9D178();
      unint64_t v425 = *(void (**)(char *, void))(v574 + 8);
      unint64_t v426 = v460;
      uint64_t v427 = &v607;
      goto LABEL_46;
    case 36:
      char v619 = 36;
      sub_1D7951D9C();
      CGFloat v461 = v576;
      uint64_t v418 = v615;
      uint64_t v417 = v616;
      sub_1D7A9D178();
      unint64_t v425 = *(void (**)(char *, void))(v577 + 8);
      unint64_t v426 = v461;
      uint64_t v427 = &v610;
      goto LABEL_46;
    case 37:
      char v619 = 37;
      sub_1D7951D48();
      id v462 = v579;
      uint64_t v418 = v615;
      uint64_t v417 = v616;
      sub_1D7A9D178();
      unint64_t v425 = *(void (**)(char *, void))(v580 + 8);
      unint64_t v426 = v462;
      uint64_t v427 = &v613;
      goto LABEL_46;
    case 38:
      char v619 = 38;
      sub_1D7951CF4();
      objc_super v463 = v582;
      uint64_t v418 = v615;
      uint64_t v417 = v616;
      sub_1D7A9D178();
      unint64_t v425 = *(void (**)(char *, void))(v583 + 8);
      unint64_t v426 = v463;
      uint64_t v427 = &v616;
      goto LABEL_46;
    case 39:
      char v619 = 39;
      sub_1D7951CA0();
      objc_super v464 = v585;
      uint64_t v418 = v615;
      uint64_t v417 = v616;
      sub_1D7A9D178();
      unint64_t v425 = *(void (**)(char *, void))(v586 + 8);
      unint64_t v426 = v464;
      uint64_t v427 = (uint64_t *)&v618;
      goto LABEL_46;
    case 40:
      char v619 = 40;
      sub_1D7951C4C();
      uint64_t v465 = v588;
      uint64_t v418 = v615;
      uint64_t v417 = v616;
      sub_1D7A9D178();
      unint64_t v425 = *(void (**)(char *, void))(v589 + 8);
      unint64_t v426 = v465;
      uint64_t v427 = &v620;
      goto LABEL_46;
    case 41:
      char v619 = 41;
      sub_1D7951BF8();
      long long v466 = v591;
      uint64_t v418 = v615;
      uint64_t v417 = v616;
      sub_1D7A9D178();
      unint64_t v425 = *(void (**)(char *, void))(v592 + 8);
      unint64_t v426 = v466;
      uint64_t v427 = &v621;
      goto LABEL_46;
    case 42:
      char v619 = 42;
      sub_1D7951BA4();
      long long v467 = v594;
      uint64_t v418 = v615;
      uint64_t v417 = v616;
      sub_1D7A9D178();
      unint64_t v425 = *(void (**)(char *, void))(v595 + 8);
      unint64_t v426 = v467;
      uint64_t v427 = &v622;
LABEL_46:
      v425(v426, *(v427 - 32));
      goto LABEL_47;
    case 43:
      char v619 = 43;
      sub_1D7951B50();
      long long v468 = v597;
      uint64_t v418 = v615;
      uint64_t v417 = v616;
      sub_1D7A9D178();
      uint64_t v470 = v598;
      uint64_t v469 = v599;
      goto LABEL_54;
    case 44:
      char v619 = 44;
      sub_1D7951AFC();
      long long v468 = v600;
      uint64_t v418 = v615;
      uint64_t v417 = v616;
      sub_1D7A9D178();
      uint64_t v470 = v601;
      uint64_t v469 = v602;
      goto LABEL_54;
    case 45:
      char v619 = 45;
      sub_1D7951AA8();
      long long v468 = v603;
      uint64_t v418 = v615;
      uint64_t v417 = v616;
      sub_1D7A9D178();
      uint64_t v470 = v604;
      uint64_t v469 = v605;
      goto LABEL_54;
    case 46:
      char v619 = 46;
      sub_1D7951A54();
      long long v468 = v606;
      uint64_t v418 = v615;
      uint64_t v417 = v616;
      sub_1D7A9D178();
      uint64_t v470 = v607;
      uint64_t v469 = v608;
      goto LABEL_54;
    case 47:
      char v619 = 47;
      sub_1D7951A00();
      long long v468 = v609;
      uint64_t v418 = v615;
      uint64_t v417 = v616;
      sub_1D7A9D178();
      uint64_t v470 = v610;
      uint64_t v469 = v611;
LABEL_54:
      (*(void (**)(char *, uint64_t))(v470 + 8))(v468, v469);
LABEL_47:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v617 + 8))(v418, v417);
      break;
    default:
      char v619 = 48;
      sub_1D79519AC();
      uint64_t v419 = v612;
      uint64_t v421 = v615;
      uint64_t v420 = v616;
      sub_1D7A9D178();
      uint64_t v422 = v614;
      sub_1D7A9D1D8();
      (*(void (**)(char *, uint64_t))(v613 + 8))(v419, v422);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v617 + 8))(v421, v420);
      break;
  }
  return result;
}

uint64_t IQACode.hashValue.getter()
{
  return sub_1D7A9D628();
}

uint64_t IQACode.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  char v618 = a2;
  uint64_t v573 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8445D0);
  uint64_t v574 = *(void *)(v573 - 8);
  MEMORY[0x1F4188790](v573, v3, v4, v5, v6, v7, v8, v9);
  uint64_t v622 = (char *)&v474 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v572 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8445D8);
  uint64_t v571 = *(void *)(v572 - 8);
  MEMORY[0x1F4188790](v572, v11, v12, v13, v14, v15, v16, v17);
  uint64_t v617 = (char *)&v474 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v570 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8445E0);
  uint64_t v569 = *(void *)(v570 - 8);
  MEMORY[0x1F4188790](v570, v19, v20, v21, v22, v23, v24, v25);
  uint64_t v616 = (char *)&v474 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v568 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8445E8);
  uint64_t v567 = *(void *)(v568 - 8);
  MEMORY[0x1F4188790](v568, v27, v28, v29, v30, v31, v32, v33);
  v615 = (char *)&v474 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v566 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8445F0);
  uint64_t v565 = *(void *)(v566 - 8);
  MEMORY[0x1F4188790](v566, v35, v36, v37, v38, v39, v40, v41);
  uint64_t v614 = (char *)&v474 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v564 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8445F8);
  uint64_t v563 = *(void *)(v564 - 8);
  MEMORY[0x1F4188790](v564, v43, v44, v45, v46, v47, v48, v49);
  uint64_t v613 = (char *)&v474 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v562 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844600);
  uint64_t v561 = *(void *)(v562 - 8);
  MEMORY[0x1F4188790](v562, v51, v52, v53, v54, v55, v56, v57);
  v612 = (char *)&v474 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v560 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844608);
  uint64_t v559 = *(void *)(v560 - 8);
  MEMORY[0x1F4188790](v560, v59, v60, v61, v62, v63, v64, v65);
  uint64_t v611 = (char *)&v474 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v558 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844610);
  uint64_t v557 = *(void *)(v558 - 8);
  MEMORY[0x1F4188790](v558, v67, v68, v69, v70, v71, v72, v73);
  uint64_t v610 = (char *)&v474 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v556 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844618);
  uint64_t v555 = *(void *)(v556 - 8);
  MEMORY[0x1F4188790](v556, v75, v76, v77, v78, v79, v80, v81);
  v609 = (char *)&v474 - ((v82 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v554 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844620);
  uint64_t v553 = *(void *)(v554 - 8);
  MEMORY[0x1F4188790](v554, v83, v84, v85, v86, v87, v88, v89);
  uint64_t v608 = (char *)&v474 - ((v90 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v552 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844628);
  uint64_t v551 = *(void *)(v552 - 8);
  MEMORY[0x1F4188790](v552, v91, v92, v93, v94, v95, v96, v97);
  uint64_t v607 = (char *)&v474 - ((v98 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v550 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844630);
  uint64_t v549 = *(void *)(v550 - 8);
  MEMORY[0x1F4188790](v550, v99, v100, v101, v102, v103, v104, v105);
  v606 = (char *)&v474 - ((v106 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v548 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844638);
  uint64_t v547 = *(void *)(v548 - 8);
  MEMORY[0x1F4188790](v548, v107, v108, v109, v110, v111, v112, v113);
  uint64_t v605 = (char *)&v474 - ((v114 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v546 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844640);
  uint64_t v545 = *(void *)(v546 - 8);
  MEMORY[0x1F4188790](v546, v115, v116, v117, v118, v119, v120, v121);
  uint64_t v604 = (char *)&v474 - ((v122 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v544 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844648);
  uint64_t v543 = *(void *)(v544 - 8);
  MEMORY[0x1F4188790](v544, v123, v124, v125, v126, v127, v128, v129);
  v603 = (char *)&v474 - ((v130 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v542 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844650);
  uint64_t v541 = *(void *)(v542 - 8);
  MEMORY[0x1F4188790](v542, v131, v132, v133, v134, v135, v136, v137);
  uint64_t v602 = (char *)&v474 - ((v138 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v540 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844658);
  uint64_t v539 = *(void *)(v540 - 8);
  MEMORY[0x1F4188790](v540, v139, v140, v141, v142, v143, v144, v145);
  uint64_t v601 = (char *)&v474 - ((v146 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v538 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844660);
  uint64_t v537 = *(void *)(v538 - 8);
  MEMORY[0x1F4188790](v538, v147, v148, v149, v150, v151, v152, v153);
  v600 = (char *)&v474 - ((v154 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v536 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844668);
  uint64_t v535 = *(void *)(v536 - 8);
  MEMORY[0x1F4188790](v536, v155, v156, v157, v158, v159, v160, v161);
  uint64_t v599 = (char *)&v474 - ((v162 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v534 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844670);
  uint64_t v533 = *(void *)(v534 - 8);
  MEMORY[0x1F4188790](v534, v163, v164, v165, v166, v167, v168, v169);
  uint64_t v598 = (char *)&v474 - ((v170 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v532 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844678);
  uint64_t v531 = *(void *)(v532 - 8);
  MEMORY[0x1F4188790](v532, v171, v172, v173, v174, v175, v176, v177);
  v597 = (char *)&v474 - ((v178 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v530 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844680);
  uint64_t v529 = *(void *)(v530 - 8);
  MEMORY[0x1F4188790](v530, v179, v180, v181, v182, v183, v184, v185);
  uint64_t v596 = (char *)&v474 - ((v186 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v528 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844688);
  uint64_t v527 = *(void *)(v528 - 8);
  MEMORY[0x1F4188790](v528, v187, v188, v189, v190, v191, v192, v193);
  uint64_t v595 = (char *)&v474 - ((v194 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v526 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844690);
  uint64_t v525 = *(void *)(v526 - 8);
  MEMORY[0x1F4188790](v526, v195, v196, v197, v198, v199, v200, v201);
  v594 = (char *)&v474 - ((v202 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v524 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844698);
  uint64_t v523 = *(void *)(v524 - 8);
  MEMORY[0x1F4188790](v524, v203, v204, v205, v206, v207, v208, v209);
  uint64_t v593 = (char *)&v474 - ((v210 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v522 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8446A0);
  uint64_t v521 = *(void *)(v522 - 8);
  MEMORY[0x1F4188790](v522, v211, v212, v213, v214, v215, v216, v217);
  uint64_t v592 = (char *)&v474 - ((v218 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v520 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8446A8);
  uint64_t v519 = *(void *)(v520 - 8);
  MEMORY[0x1F4188790](v520, v219, v220, v221, v222, v223, v224, v225);
  v591 = (char *)&v474 - ((v226 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v518 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8446B0);
  uint64_t v517 = *(void *)(v518 - 8);
  MEMORY[0x1F4188790](v518, v227, v228, v229, v230, v231, v232, v233);
  uint64_t v590 = (char *)&v474 - ((v234 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v516 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8446B8);
  uint64_t v515 = *(void *)(v516 - 8);
  MEMORY[0x1F4188790](v516, v235, v236, v237, v238, v239, v240, v241);
  uint64_t v589 = (char *)&v474 - ((v242 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v514 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8446C0);
  uint64_t v513 = *(void *)(v514 - 8);
  MEMORY[0x1F4188790](v514, v243, v244, v245, v246, v247, v248, v249);
  v588 = (char *)&v474 - ((v250 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v512 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8446C8);
  uint64_t v511 = *(void *)(v512 - 8);
  MEMORY[0x1F4188790](v512, v251, v252, v253, v254, v255, v256, v257);
  uint64_t v587 = (char *)&v474 - ((v258 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v510 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8446D0);
  uint64_t v509 = *(void *)(v510 - 8);
  MEMORY[0x1F4188790](v510, v259, v260, v261, v262, v263, v264, v265);
  uint64_t v586 = (char *)&v474 - ((v266 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v508 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8446D8);
  uint64_t v507 = *(void *)(v508 - 8);
  MEMORY[0x1F4188790](v508, v267, v268, v269, v270, v271, v272, v273);
  v585 = (char *)&v474 - ((v274 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v506 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8446E0);
  uint64_t v505 = *(void *)(v506 - 8);
  MEMORY[0x1F4188790](v506, v275, v276, v277, v278, v279, v280, v281);
  uint64_t v584 = (char *)&v474 - ((v282 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v504 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8446E8);
  uint64_t v503 = *(void *)(v504 - 8);
  MEMORY[0x1F4188790](v504, v283, v284, v285, v286, v287, v288, v289);
  uint64_t v583 = (char *)&v474 - ((v290 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v502 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8446F0);
  uint64_t v501 = *(void *)(v502 - 8);
  MEMORY[0x1F4188790](v502, v291, v292, v293, v294, v295, v296, v297);
  uint64_t v621 = (char *)&v474 - ((v298 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v499 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8446F8);
  uint64_t v500 = *(void *)(v499 - 8);
  MEMORY[0x1F4188790](v499, v299, v300, v301, v302, v303, v304, v305);
  v579 = (char *)&v474 - ((v306 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v498 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844700);
  uint64_t v497 = *(void *)(v498 - 8);
  MEMORY[0x1F4188790](v498, v307, v308, v309, v310, v311, v312, v313);
  uint64_t v620 = (char *)&v474 - ((v314 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v496 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844708);
  uint64_t v495 = *(void *)(v496 - 8);
  MEMORY[0x1F4188790](v496, v315, v316, v317, v318, v319, v320, v321);
  v582 = (char *)&v474 - ((v322 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v494 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844710);
  uint64_t v493 = *(void *)(v494 - 8);
  MEMORY[0x1F4188790](v494, v323, v324, v325, v326, v327, v328, v329);
  uint64_t v581 = (char *)&v474 - ((v330 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v492 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844718);
  uint64_t v491 = *(void *)(v492 - 8);
  MEMORY[0x1F4188790](v492, v331, v332, v333, v334, v335, v336, v337);
  uint64_t v580 = (char *)&v474 - ((v338 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v490 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844720);
  uint64_t v489 = *(void *)(v490 - 8);
  MEMORY[0x1F4188790](v490, v339, v340, v341, v342, v343, v344, v345);
  char v619 = (char *)&v474 - ((v346 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v488 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844728);
  uint64_t v487 = *(void *)(v488 - 8);
  MEMORY[0x1F4188790](v488, v347, v348, v349, v350, v351, v352, v353);
  uint64_t v578 = (char *)&v474 - ((v354 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v486 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844730);
  uint64_t v485 = *(void *)(v486 - 8);
  MEMORY[0x1F4188790](v486, v355, v356, v357, v358, v359, v360, v361);
  uint64_t v577 = (char *)&v474 - ((v362 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v484 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844738);
  uint64_t v483 = *(void *)(v484 - 8);
  MEMORY[0x1F4188790](v484, v363, v364, v365, v366, v367, v368, v369);
  v576 = (char *)&v474 - ((v370 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v482 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844740);
  uint64_t v481 = *(void *)(v482 - 8);
  MEMORY[0x1F4188790](v482, v371, v372, v373, v374, v375, v376, v377);
  uint64_t v575 = (char *)&v474 - ((v378 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v480 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844748);
  uint64_t v479 = *(void *)(v480 - 8);
  MEMORY[0x1F4188790](v480, v379, v380, v381, v382, v383, v384, v385);
  uint64_t v387 = (char *)&v474 - ((v386 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v388 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844750);
  uint64_t v478 = *(void *)(v388 - 8);
  MEMORY[0x1F4188790](v388, v389, v390, v391, v392, v393, v394, v395);
  uint64_t v397 = (char *)&v474 - ((v396 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v398 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844758);
  uint64_t v399 = *(void *)(v398 - 8);
  MEMORY[0x1F4188790](v398, v400, v401, v402, v403, v404, v405, v406);
  uint64_t v408 = (char *)&v474 - ((v407 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v409 = a1[3];
  v623 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v409);
  sub_1D7951958();
  uint64_t v410 = v624;
  sub_1D7A9D6A8();
  uint64_t v411 = v410;
  if (v410) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v623);
  }
  uint64_t v476 = v397;
  uint64_t v475 = v388;
  uint64_t v477 = v387;
  uint64_t v413 = v619;
  uint64_t v412 = v620;
  CGFloat v415 = v621;
  uint64_t v414 = v622;
  uint64_t v624 = v399;
  uint64_t v416 = sub_1D7A9D158();
  if (*(void *)(v416 + 16) != 1)
  {
    uint64_t v419 = sub_1D7A9CCF8();
    swift_allocError();
    uint64_t v421 = v420;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA843728);
    *uint64_t v421 = &type metadata for IQACode;
    sub_1D7A9D098();
    sub_1D7A9CCB8();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v419 - 8) + 104))(v421, *MEMORY[0x1E4FBBA70], v419);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v624 + 8))(v408, v398);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v623);
  }
  switch(*(unsigned char *)(v416 + 32))
  {
    case 1:
      char v625 = 1;
      sub_1D7952918();
      uint64_t v422 = v477;
      sub_1D7A9D088();
      uint64_t v474 = 0;
      (*(void (**)(char *, uint64_t))(v479 + 8))(v422, v480);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v624 + 8))(v408, v398);
      uint64_t v418 = 1;
      break;
    case 2:
      char v625 = 2;
      sub_1D79528C4();
      CGFloat v423 = v575;
      sub_1D7A9D088();
      uint64_t v474 = 0;
      (*(void (**)(char *, uint64_t))(v481 + 8))(v423, v482);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v624 + 8))(v408, v398);
      uint64_t v418 = 2;
      break;
    case 3:
      char v625 = 3;
      sub_1D7952870();
      unint64_t v424 = v576;
      sub_1D7A9D088();
      uint64_t v474 = 0;
      (*(void (**)(char *, uint64_t))(v483 + 8))(v424, v484);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v624 + 8))(v408, v398);
      uint64_t v418 = 3;
      break;
    case 4:
      char v625 = 4;
      sub_1D795281C();
      unint64_t v425 = v577;
      sub_1D7A9D088();
      uint64_t v474 = 0;
      (*(void (**)(char *, uint64_t))(v485 + 8))(v425, v486);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v624 + 8))(v408, v398);
      uint64_t v418 = 4;
      break;
    case 5:
      char v625 = 5;
      sub_1D79527C8();
      unint64_t v426 = v578;
      sub_1D7A9D088();
      uint64_t v474 = 0;
      (*(void (**)(char *, uint64_t))(v487 + 8))(v426, v488);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v624 + 8))(v408, v398);
      uint64_t v418 = 5;
      break;
    case 6:
      char v625 = 6;
      sub_1D7952774();
      sub_1D7A9D088();
      uint64_t v474 = 0;
      (*(void (**)(char *, uint64_t))(v489 + 8))(v413, v490);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v624 + 8))(v408, v398);
      uint64_t v418 = 6;
      break;
    case 7:
      char v625 = 7;
      sub_1D7952720();
      uint64_t v427 = v580;
      sub_1D7A9D088();
      uint64_t v474 = 0;
      (*(void (**)(char *, uint64_t))(v491 + 8))(v427, v492);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v624 + 8))(v408, v398);
      uint64_t v418 = 7;
      break;
    case 8:
      char v625 = 8;
      sub_1D79526CC();
      uint64_t v428 = v581;
      sub_1D7A9D088();
      uint64_t v474 = 0;
      (*(void (**)(char *, uint64_t))(v493 + 8))(v428, v494);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v624 + 8))(v408, v398);
      uint64_t v418 = 8;
      break;
    case 9:
      char v625 = 9;
      sub_1D7952678();
      unint64_t v429 = v582;
      sub_1D7A9D088();
      uint64_t v474 = 0;
      (*(void (**)(char *, uint64_t))(v495 + 8))(v429, v496);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v624 + 8))(v408, v398);
      uint64_t v418 = 9;
      break;
    case 0xA:
      char v625 = 10;
      sub_1D7952624();
      sub_1D7A9D088();
      uint64_t v474 = 0;
      (*(void (**)(char *, uint64_t))(v497 + 8))(v412, v498);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v624 + 8))(v408, v398);
      uint64_t v418 = 10;
      break;
    case 0xB:
      char v625 = 11;
      sub_1D79525D0();
      uint64_t v430 = v579;
      sub_1D7A9D088();
      uint64_t v474 = 0;
      (*(void (**)(char *, uint64_t))(v500 + 8))(v430, v499);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v624 + 8))(v408, v398);
      uint64_t v418 = 11;
      break;
    case 0xC:
      char v625 = 12;
      sub_1D795257C();
      sub_1D7A9D088();
      uint64_t v474 = 0;
      (*(void (**)(char *, uint64_t))(v501 + 8))(v415, v502);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v624 + 8))(v408, v398);
      uint64_t v418 = 12;
      break;
    case 0xD:
      char v625 = 13;
      sub_1D7952528();
      id v431 = v583;
      sub_1D7A9D088();
      uint64_t v474 = 0;
      (*(void (**)(char *, uint64_t))(v503 + 8))(v431, v504);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v624 + 8))(v408, v398);
      uint64_t v418 = 13;
      break;
    case 0xE:
      char v625 = 14;
      sub_1D79524D4();
      unint64_t v432 = v584;
      sub_1D7A9D088();
      uint64_t v474 = 0;
      (*(void (**)(char *, uint64_t))(v505 + 8))(v432, v506);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v624 + 8))(v408, v398);
      uint64_t v418 = 14;
      break;
    case 0xF:
      char v625 = 15;
      sub_1D7952480();
      uint64_t v433 = v585;
      sub_1D7A9D088();
      uint64_t v474 = 0;
      (*(void (**)(char *, uint64_t))(v507 + 8))(v433, v508);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v624 + 8))(v408, v398);
      uint64_t v418 = 15;
      break;
    case 0x10:
      char v625 = 16;
      sub_1D795242C();
      long long v434 = v586;
      sub_1D7A9D088();
      uint64_t v474 = 0;
      (*(void (**)(char *, uint64_t))(v509 + 8))(v434, v510);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v624 + 8))(v408, v398);
      uint64_t v418 = 16;
      break;
    case 0x11:
      char v625 = 17;
      sub_1D79523D8();
      v435 = v587;
      sub_1D7A9D088();
      uint64_t v474 = 0;
      (*(void (**)(char *, uint64_t))(v511 + 8))(v435, v512);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v624 + 8))(v408, v398);
      uint64_t v418 = 17;
      break;
    case 0x12:
      char v625 = 18;
      sub_1D7952384();
      uint64_t v436 = v588;
      sub_1D7A9D088();
      uint64_t v474 = 0;
      (*(void (**)(char *, uint64_t))(v513 + 8))(v436, v514);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v624 + 8))(v408, v398);
      uint64_t v418 = 18;
      break;
    case 0x13:
      char v625 = 19;
      sub_1D7952330();
      uint64_t v437 = v589;
      sub_1D7A9D088();
      uint64_t v474 = 0;
      (*(void (**)(char *, uint64_t))(v515 + 8))(v437, v516);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v624 + 8))(v408, v398);
      uint64_t v418 = 19;
      break;
    case 0x14:
      char v625 = 20;
      sub_1D79522DC();
      uint64_t v438 = v590;
      sub_1D7A9D088();
      uint64_t v474 = 0;
      (*(void (**)(char *, uint64_t))(v517 + 8))(v438, v518);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v624 + 8))(v408, v398);
      uint64_t v418 = 20;
      break;
    case 0x15:
      char v625 = 21;
      sub_1D7952288();
      v439 = v591;
      sub_1D7A9D088();
      uint64_t v474 = 0;
      (*(void (**)(char *, uint64_t))(v519 + 8))(v439, v520);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v624 + 8))(v408, v398);
      uint64_t v418 = 21;
      break;
    case 0x16:
      char v625 = 22;
      sub_1D7952234();
      uint64_t v440 = v592;
      sub_1D7A9D088();
      uint64_t v474 = 0;
      (*(void (**)(char *, uint64_t))(v521 + 8))(v440, v522);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v624 + 8))(v408, v398);
      uint64_t v418 = 22;
      break;
    case 0x17:
      char v625 = 23;
      sub_1D79521E0();
      v441 = v593;
      sub_1D7A9D088();
      uint64_t v474 = 0;
      (*(void (**)(char *, uint64_t))(v523 + 8))(v441, v524);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v624 + 8))(v408, v398);
      uint64_t v418 = 23;
      break;
    case 0x18:
      char v625 = 24;
      sub_1D795218C();
      long long v442 = v594;
      sub_1D7A9D088();
      uint64_t v474 = 0;
      (*(void (**)(char *, uint64_t))(v525 + 8))(v442, v526);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v624 + 8))(v408, v398);
      uint64_t v418 = 24;
      break;
    case 0x19:
      char v625 = 25;
      sub_1D7952138();
      uint64_t v443 = v595;
      sub_1D7A9D088();
      uint64_t v474 = 0;
      (*(void (**)(char *, uint64_t))(v527 + 8))(v443, v528);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v624 + 8))(v408, v398);
      uint64_t v418 = 25;
      break;
    case 0x1A:
      char v625 = 26;
      sub_1D79520E4();
      uint64_t v444 = v596;
      sub_1D7A9D088();
      uint64_t v474 = 0;
      (*(void (**)(char *, uint64_t))(v529 + 8))(v444, v530);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v624 + 8))(v408, v398);
      uint64_t v418 = 26;
      break;
    case 0x1B:
      char v625 = 27;
      sub_1D7952090();
      id v445 = v597;
      sub_1D7A9D088();
      uint64_t v474 = 0;
      (*(void (**)(char *, uint64_t))(v531 + 8))(v445, v532);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v624 + 8))(v408, v398);
      uint64_t v418 = 27;
      break;
    case 0x1C:
      char v625 = 28;
      sub_1D795203C();
      id v446 = v598;
      sub_1D7A9D088();
      uint64_t v474 = 0;
      (*(void (**)(char *, uint64_t))(v533 + 8))(v446, v534);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v624 + 8))(v408, v398);
      uint64_t v418 = 28;
      break;
    case 0x1D:
      char v625 = 29;
      sub_1D7951FE8();
      id v447 = v599;
      sub_1D7A9D088();
      uint64_t v474 = 0;
      (*(void (**)(char *, uint64_t))(v535 + 8))(v447, v536);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v624 + 8))(v408, v398);
      uint64_t v418 = 29;
      break;
    case 0x1E:
      char v625 = 30;
      sub_1D7951F94();
      id v448 = v600;
      sub_1D7A9D088();
      uint64_t v474 = 0;
      (*(void (**)(char *, uint64_t))(v537 + 8))(v448, v538);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v624 + 8))(v408, v398);
      uint64_t v418 = 30;
      break;
    case 0x1F:
      char v625 = 31;
      sub_1D7951F40();
      id v449 = v601;
      sub_1D7A9D088();
      uint64_t v474 = 0;
      (*(void (**)(char *, uint64_t))(v539 + 8))(v449, v540);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v624 + 8))(v408, v398);
      uint64_t v418 = 31;
      break;
    case 0x20:
      char v625 = 32;
      sub_1D7951EEC();
      v450 = v602;
      sub_1D7A9D088();
      uint64_t v474 = 0;
      (*(void (**)(char *, uint64_t))(v541 + 8))(v450, v542);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v624 + 8))(v408, v398);
      uint64_t v418 = 32;
      break;
    case 0x21:
      char v625 = 33;
      sub_1D7951E98();
      id v451 = v603;
      sub_1D7A9D088();
      uint64_t v474 = 0;
      (*(void (**)(char *, uint64_t))(v543 + 8))(v451, v544);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v624 + 8))(v408, v398);
      uint64_t v418 = 33;
      break;
    case 0x22:
      char v625 = 34;
      sub_1D7951E44();
      v452 = v604;
      sub_1D7A9D088();
      uint64_t v474 = 0;
      (*(void (**)(char *, uint64_t))(v545 + 8))(v452, v546);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v624 + 8))(v408, v398);
      uint64_t v418 = 34;
      break;
    case 0x23:
      char v625 = 35;
      sub_1D7951DF0();
      id v453 = v605;
      sub_1D7A9D088();
      uint64_t v474 = 0;
      (*(void (**)(char *, uint64_t))(v547 + 8))(v453, v548);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v624 + 8))(v408, v398);
      uint64_t v418 = 35;
      break;
    case 0x24:
      char v625 = 36;
      sub_1D7951D9C();
      id v454 = v606;
      sub_1D7A9D088();
      uint64_t v474 = 0;
      (*(void (**)(char *, uint64_t))(v549 + 8))(v454, v550);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v624 + 8))(v408, v398);
      uint64_t v418 = 36;
      break;
    case 0x25:
      char v625 = 37;
      sub_1D7951D48();
      id v455 = v607;
      sub_1D7A9D088();
      uint64_t v474 = 0;
      (*(void (**)(char *, uint64_t))(v551 + 8))(v455, v552);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v624 + 8))(v408, v398);
      uint64_t v418 = 37;
      break;
    case 0x26:
      char v625 = 38;
      sub_1D7951CF4();
      id v456 = v608;
      sub_1D7A9D088();
      uint64_t v474 = 0;
      (*(void (**)(char *, uint64_t))(v553 + 8))(v456, v554);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v624 + 8))(v408, v398);
      uint64_t v418 = 38;
      break;
    case 0x27:
      char v625 = 39;
      sub_1D7951CA0();
      CGFloat v457 = v609;
      sub_1D7A9D088();
      uint64_t v474 = 0;
      (*(void (**)(char *, uint64_t))(v555 + 8))(v457, v556);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v624 + 8))(v408, v398);
      uint64_t v418 = 39;
      break;
    case 0x28:
      char v625 = 40;
      sub_1D7951C4C();
      long long v458 = v610;
      sub_1D7A9D088();
      uint64_t v474 = 0;
      (*(void (**)(char *, uint64_t))(v557 + 8))(v458, v558);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v624 + 8))(v408, v398);
      uint64_t v418 = 40;
      break;
    case 0x29:
      char v625 = 41;
      sub_1D7951BF8();
      v459 = v611;
      sub_1D7A9D088();
      uint64_t v474 = 0;
      (*(void (**)(char *, uint64_t))(v559 + 8))(v459, v560);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v624 + 8))(v408, v398);
      uint64_t v418 = 41;
      break;
    case 0x2A:
      char v625 = 42;
      sub_1D7951BA4();
      unint64_t v460 = v612;
      sub_1D7A9D088();
      uint64_t v474 = 0;
      (*(void (**)(char *, uint64_t))(v561 + 8))(v460, v562);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v624 + 8))(v408, v398);
      uint64_t v418 = 42;
      break;
    case 0x2B:
      char v625 = 43;
      sub_1D7951B50();
      CGFloat v461 = v613;
      sub_1D7A9D088();
      uint64_t v474 = 0;
      (*(void (**)(char *, uint64_t))(v563 + 8))(v461, v564);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v624 + 8))(v408, v398);
      uint64_t v418 = 43;
      break;
    case 0x2C:
      char v625 = 44;
      sub_1D7951AFC();
      id v462 = v614;
      sub_1D7A9D088();
      uint64_t v474 = 0;
      (*(void (**)(char *, uint64_t))(v565 + 8))(v462, v566);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v624 + 8))(v408, v398);
      uint64_t v418 = 44;
      break;
    case 0x2D:
      char v625 = 45;
      sub_1D7951AA8();
      objc_super v463 = v615;
      sub_1D7A9D088();
      uint64_t v474 = 0;
      (*(void (**)(char *, uint64_t))(v567 + 8))(v463, v568);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v624 + 8))(v408, v398);
      uint64_t v418 = 45;
      break;
    case 0x2E:
      char v625 = 46;
      sub_1D7951A54();
      objc_super v464 = v616;
      sub_1D7A9D088();
      uint64_t v474 = 0;
      (*(void (**)(char *, uint64_t))(v569 + 8))(v464, v570);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v624 + 8))(v408, v398);
      uint64_t v418 = 46;
      break;
    case 0x2F:
      char v625 = 47;
      sub_1D7951A00();
      uint64_t v465 = v617;
      sub_1D7A9D088();
      uint64_t v474 = 0;
      (*(void (**)(char *, uint64_t))(v571 + 8))(v465, v572);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v624 + 8))(v408, v398);
      uint64_t v418 = 47;
      break;
    case 0x30:
      char v625 = 48;
      sub_1D79519AC();
      long long v466 = v414;
      sub_1D7A9D088();
      uint64_t v468 = v573;
      uint64_t v469 = sub_1D7A9D0F8();
      uint64_t v474 = 0;
      uint64_t v470 = v624;
      uint64_t v411 = v469;
      uint64_t v418 = v471;
      (*(void (**)(char *, uint64_t))(v574 + 8))(v466, v468);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v470 + 8))(v408, v398);
      break;
    default:
      char v625 = 0;
      sub_1D795296C();
      uint64_t v417 = v476;
      sub_1D7A9D088();
      uint64_t v474 = 0;
      (*(void (**)(char *, uint64_t))(v478 + 8))(v417, v475);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v624 + 8))(v408, v398);
      uint64_t v418 = 0;
      break;
  }
  uint64_t v472 = (uint64_t)v623;
  uint64_t v473 = v618;
  *char v618 = v411;
  v473[1] = v418;
  return __swift_destroy_boxed_opaque_existential_1(v472);
}

uint64_t sub_1D7941308@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return IQACode.init(from:)(a1, a2);
}

uint64_t sub_1D7941320(void *a1)
{
  return IQACode.encode(to:)(a1);
}

uint64_t sub_1D794133C()
{
  return sub_1D7A9D628();
}

uint64_t sub_1D794138C()
{
  return sub_1D7A9D628();
}

uint64_t IQCType.hash(into:)()
{
  if (*(unsigned char *)(v0 + 16) && *(unsigned char *)(v0 + 16) != 1) {
    return sub_1D7A9D5E8();
  }
  sub_1D7A9D5E8();
  return sub_1D7A9C0B8();
}

uint64_t sub_1D79415B4(char a1)
{
  uint64_t result = 0x656E697272756C62;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x657275736F707865;
      break;
    case 2:
      uint64_t result = 0x7473694464726163;
      break;
    case 3:
      uint64_t result = 0xD000000000000010;
      break;
    case 4:
      uint64_t result = 0xD000000000000011;
      break;
    case 5:
      uint64_t result = 0x6374695064616568;
      break;
    case 6:
      uint64_t result = 0x6C6C6F5264616568;
      break;
    case 7:
      uint64_t result = 0x77615964616568;
      break;
    case 8:
    case 11:
    case 12:
    case 13:
      uint64_t result = 0xD000000000000012;
      break;
    case 9:
      uint64_t result = 0xD000000000000016;
      break;
    case 10:
      uint64_t result = 0xD000000000000014;
      break;
    case 14:
    case 16:
      uint64_t result = 0x746E656D75636F64;
      break;
    case 15:
      uint64_t result = 0xD000000000000010;
      break;
    case 17:
      unsigned int v3 = 1952867692;
      goto LABEL_18;
    case 18:
      uint64_t result = 0x6972447468676972;
      break;
    case 19:
      uint64_t result = 0x74666972447075;
      break;
    case 20:
      unsigned int v3 = 1853321060;
LABEL_18:
      uint64_t result = v3 | 0x6669724400000000;
      break;
    case 21:
      uint64_t result = 0x73656361466D756ELL;
      break;
    case 22:
      uint64_t result = 0x6C6576654C78756CLL;
      break;
    case 23:
      uint64_t result = 0x6544373134666470;
      break;
    case 24:
      uint64_t result = 0xD000000000000010;
      break;
    case 25:
      uint64_t result = 0x754E726575737369;
      break;
    case 26:
      uint64_t result = 0x78656C706D6F63;
      break;
    case 27:
      uint64_t result = 0x6E776F6E6B6E75;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D79418F0(uint64_t a1)
{
  unint64_t v2 = sub_1D7953690();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D794192C(uint64_t a1)
{
  unint64_t v2 = sub_1D7953690();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D7941968(uint64_t a1)
{
  unint64_t v2 = sub_1D7953930();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D79419A4(uint64_t a1)
{
  unint64_t v2 = sub_1D7953930();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D79419E0(uint64_t a1)
{
  unint64_t v2 = sub_1D7953888();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D7941A1C(uint64_t a1)
{
  unint64_t v2 = sub_1D7953888();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D7941A58()
{
  return sub_1D79415B4(*v0);
}

uint64_t sub_1D7941A60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1D795C054(a1, a2);
  *a3 = result;
  return result;
}

void sub_1D7941A88(unsigned char *a1@<X8>)
{
  *a1 = 28;
}

uint64_t sub_1D7941A94(uint64_t a1)
{
  unint64_t v2 = sub_1D7953000();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D7941AD0(uint64_t a1)
{
  unint64_t v2 = sub_1D7953000();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D7941B0C(uint64_t a1)
{
  unint64_t v2 = sub_1D79530A8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D7941B48(uint64_t a1)
{
  unint64_t v2 = sub_1D79530A8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D7941B84(uint64_t a1)
{
  unint64_t v2 = sub_1D7953444();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D7941BC0(uint64_t a1)
{
  unint64_t v2 = sub_1D7953444();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D7941BFC(uint64_t a1)
{
  unint64_t v2 = sub_1D7953498();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D7941C38(uint64_t a1)
{
  unint64_t v2 = sub_1D7953498();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D7941C74(uint64_t a1)
{
  unint64_t v2 = sub_1D79533F0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D7941CB0(uint64_t a1)
{
  unint64_t v2 = sub_1D79533F0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D7941CEC(uint64_t a1)
{
  unint64_t v2 = sub_1D79532A0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D7941D28(uint64_t a1)
{
  unint64_t v2 = sub_1D79532A0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D7941D64(uint64_t a1)
{
  unint64_t v2 = sub_1D79538DC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D7941DA0(uint64_t a1)
{
  unint64_t v2 = sub_1D79538DC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D7941DDC(uint64_t a1)
{
  unint64_t v2 = sub_1D79534EC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D7941E18(uint64_t a1)
{
  unint64_t v2 = sub_1D79534EC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D7941E54(uint64_t a1)
{
  unint64_t v2 = sub_1D79537E0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D7941E90(uint64_t a1)
{
  unint64_t v2 = sub_1D79537E0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D7941ECC(uint64_t a1)
{
  unint64_t v2 = sub_1D7953834();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D7941F08(uint64_t a1)
{
  unint64_t v2 = sub_1D7953834();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D7941F44(uint64_t a1)
{
  unint64_t v2 = sub_1D7953594();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D7941F80(uint64_t a1)
{
  unint64_t v2 = sub_1D7953594();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D7941FBC(uint64_t a1)
{
  unint64_t v2 = sub_1D795378C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D7941FF8(uint64_t a1)
{
  unint64_t v2 = sub_1D795378C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D7942034(uint64_t a1)
{
  unint64_t v2 = sub_1D7953738();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D7942070(uint64_t a1)
{
  unint64_t v2 = sub_1D7953738();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D79420AC(uint64_t a1)
{
  unint64_t v2 = sub_1D79536E4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D79420E8(uint64_t a1)
{
  unint64_t v2 = sub_1D79536E4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D7942124(uint64_t a1)
{
  unint64_t v2 = sub_1D7953540();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D7942160(uint64_t a1)
{
  unint64_t v2 = sub_1D7953540();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D794219C(uint64_t a1)
{
  unint64_t v2 = sub_1D7953150();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D79421D8(uint64_t a1)
{
  unint64_t v2 = sub_1D7953150();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D7942214(uint64_t a1)
{
  unint64_t v2 = sub_1D79530FC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D7942250(uint64_t a1)
{
  unint64_t v2 = sub_1D79530FC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D794228C(uint64_t a1)
{
  unint64_t v2 = sub_1D795339C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D79422C8(uint64_t a1)
{
  unint64_t v2 = sub_1D795339C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D7942304(uint64_t a1)
{
  unint64_t v2 = sub_1D79531F8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D7942340(uint64_t a1)
{
  unint64_t v2 = sub_1D79531F8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D794237C(uint64_t a1)
{
  unint64_t v2 = sub_1D795324C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D79423B8(uint64_t a1)
{
  unint64_t v2 = sub_1D795324C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D79423F4(uint64_t a1)
{
  unint64_t v2 = sub_1D79531A4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D7942430(uint64_t a1)
{
  unint64_t v2 = sub_1D79531A4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D794246C(uint64_t a1)
{
  unint64_t v2 = sub_1D795363C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D79424A8(uint64_t a1)
{
  unint64_t v2 = sub_1D795363C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D79424E4(uint64_t a1)
{
  unint64_t v2 = sub_1D7953348();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D7942520(uint64_t a1)
{
  unint64_t v2 = sub_1D7953348();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D794255C(uint64_t a1)
{
  unint64_t v2 = sub_1D79535E8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D7942598(uint64_t a1)
{
  unint64_t v2 = sub_1D79535E8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D79425D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1D7A9D358();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D7942654(uint64_t a1)
{
  unint64_t v2 = sub_1D7953054();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D7942690(uint64_t a1)
{
  unint64_t v2 = sub_1D7953054();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D79426CC(uint64_t a1)
{
  unint64_t v2 = sub_1D79532F4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D7942708(uint64_t a1)
{
  unint64_t v2 = sub_1D79532F4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t IQCType.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844760);
  uint64_t v363 = *(void *)(v3 - 8);
  uint64_t v364 = v3;
  MEMORY[0x1F4188790](v3, v4, v5, v6, v7, v8, v9, v10);
  uint64_t v362 = (char *)&v282 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844768);
  uint64_t v360 = *(void *)(v12 - 8);
  uint64_t v361 = v12;
  MEMORY[0x1F4188790](v12, v13, v14, v15, v16, v17, v18, v19);
  uint64_t v359 = (char *)&v282 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844770);
  uint64_t v357 = *(void *)(v21 - 8);
  uint64_t v358 = v21;
  MEMORY[0x1F4188790](v21, v22, v23, v24, v25, v26, v27, v28);
  uint64_t v356 = (char *)&v282 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844778);
  uint64_t v354 = *(void *)(v30 - 8);
  uint64_t v355 = v30;
  MEMORY[0x1F4188790](v30, v31, v32, v33, v34, v35, v36, v37);
  uint64_t v353 = (char *)&v282 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844780);
  uint64_t v351 = *(void *)(v39 - 8);
  uint64_t v352 = v39;
  MEMORY[0x1F4188790](v39, v40, v41, v42, v43, v44, v45, v46);
  uint64_t v350 = (char *)&v282 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844788);
  uint64_t v348 = *(void *)(v48 - 8);
  uint64_t v349 = v48;
  MEMORY[0x1F4188790](v48, v49, v50, v51, v52, v53, v54, v55);
  uint64_t v347 = (char *)&v282 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v346 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844790);
  uint64_t v345 = *(void *)(v346 - 8);
  MEMORY[0x1F4188790](v346, v57, v58, v59, v60, v61, v62, v63);
  uint64_t v344 = (char *)&v282 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v343 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844798);
  uint64_t v342 = *(void *)(v343 - 8);
  MEMORY[0x1F4188790](v343, v65, v66, v67, v68, v69, v70, v71);
  uint64_t v341 = (char *)&v282 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v340 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8447A0);
  uint64_t v339 = *(void *)(v340 - 8);
  MEMORY[0x1F4188790](v340, v73, v74, v75, v76, v77, v78, v79);
  uint64_t v338 = (char *)&v282 - ((v80 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v337 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8447A8);
  uint64_t v336 = *(void *)(v337 - 8);
  MEMORY[0x1F4188790](v337, v81, v82, v83, v84, v85, v86, v87);
  uint64_t v335 = (char *)&v282 - ((v88 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v334 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8447B0);
  uint64_t v333 = *(void *)(v334 - 8);
  MEMORY[0x1F4188790](v334, v89, v90, v91, v92, v93, v94, v95);
  uint64_t v332 = (char *)&v282 - ((v96 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v331 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8447B8);
  uint64_t v330 = *(void *)(v331 - 8);
  MEMORY[0x1F4188790](v331, v97, v98, v99, v100, v101, v102, v103);
  uint64_t v329 = (char *)&v282 - ((v104 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v328 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8447C0);
  uint64_t v327 = *(void *)(v328 - 8);
  MEMORY[0x1F4188790](v328, v105, v106, v107, v108, v109, v110, v111);
  uint64_t v326 = (char *)&v282 - ((v112 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v325 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8447C8);
  uint64_t v324 = *(void *)(v325 - 8);
  MEMORY[0x1F4188790](v325, v113, v114, v115, v116, v117, v118, v119);
  uint64_t v323 = (char *)&v282 - ((v120 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v322 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8447D0);
  uint64_t v321 = *(void *)(v322 - 8);
  MEMORY[0x1F4188790](v322, v121, v122, v123, v124, v125, v126, v127);
  uint64_t v320 = (char *)&v282 - ((v128 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v319 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8447D8);
  uint64_t v318 = *(void *)(v319 - 8);
  MEMORY[0x1F4188790](v319, v129, v130, v131, v132, v133, v134, v135);
  uint64_t v317 = (char *)&v282 - ((v136 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v316 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8447E0);
  uint64_t v315 = *(void *)(v316 - 8);
  MEMORY[0x1F4188790](v316, v137, v138, v139, v140, v141, v142, v143);
  uint64_t v314 = (char *)&v282 - ((v144 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v313 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8447E8);
  uint64_t v312 = *(void *)(v313 - 8);
  MEMORY[0x1F4188790](v313, v145, v146, v147, v148, v149, v150, v151);
  uint64_t v311 = (char *)&v282 - ((v152 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v310 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8447F0);
  uint64_t v309 = *(void *)(v310 - 8);
  MEMORY[0x1F4188790](v310, v153, v154, v155, v156, v157, v158, v159);
  uint64_t v308 = (char *)&v282 - ((v160 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v307 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8447F8);
  uint64_t v306 = *(void *)(v307 - 8);
  MEMORY[0x1F4188790](v307, v161, v162, v163, v164, v165, v166, v167);
  uint64_t v305 = (char *)&v282 - ((v168 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v304 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844800);
  uint64_t v303 = *(void *)(v304 - 8);
  MEMORY[0x1F4188790](v304, v169, v170, v171, v172, v173, v174, v175);
  uint64_t v302 = (char *)&v282 - ((v176 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v301 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844808);
  uint64_t v300 = *(void *)(v301 - 8);
  MEMORY[0x1F4188790](v301, v177, v178, v179, v180, v181, v182, v183);
  uint64_t v299 = (char *)&v282 - ((v184 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v298 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844810);
  uint64_t v297 = *(void *)(v298 - 8);
  MEMORY[0x1F4188790](v298, v185, v186, v187, v188, v189, v190, v191);
  uint64_t v296 = (char *)&v282 - ((v192 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v295 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844818);
  uint64_t v294 = *(void *)(v295 - 8);
  MEMORY[0x1F4188790](v295, v193, v194, v195, v196, v197, v198, v199);
  uint64_t v293 = (char *)&v282 - ((v200 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v292 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844820);
  uint64_t v291 = *(void *)(v292 - 8);
  MEMORY[0x1F4188790](v292, v201, v202, v203, v204, v205, v206, v207);
  uint64_t v290 = (char *)&v282 - ((v208 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v289 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844828);
  uint64_t v288 = *(void *)(v289 - 8);
  MEMORY[0x1F4188790](v289, v209, v210, v211, v212, v213, v214, v215);
  uint64_t v287 = (char *)&v282 - ((v216 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v286 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844830);
  uint64_t v285 = *(void *)(v286 - 8);
  MEMORY[0x1F4188790](v286, v217, v218, v219, v220, v221, v222, v223);
  uint64_t v284 = (char *)&v282 - ((v224 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v225 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844838);
  uint64_t v283 = *(void *)(v225 - 8);
  MEMORY[0x1F4188790](v225, v226, v227, v228, v229, v230, v231, v232);
  uint64_t v234 = (char *)&v282 - ((v233 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v235 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844840);
  uint64_t v236 = *(void *)(v235 - 8);
  uint64_t v366 = v235;
  uint64_t v367 = v236;
  MEMORY[0x1F4188790](v235, v237, v238, v239, v240, v241, v242, v243);
  uint64_t v245 = (char *)&v282 - ((v244 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v246 = *v1;
  int v247 = *((unsigned __int8 *)v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D7953000();
  uint64_t v365 = v245;
  sub_1D7A9D6E8();
  if (!v247)
  {
    char v368 = 26;
    sub_1D79530A8();
    uint64_t v248 = v359;
    uint64_t v250 = v365;
    uint64_t v249 = v366;
    sub_1D7A9D178();
    uint64_t v251 = v361;
    sub_1D7A9D1D8();
    uint64_t v252 = v360;
    goto LABEL_5;
  }
  if (v247 == 1)
  {
    char v368 = 27;
    sub_1D7953054();
    uint64_t v248 = v362;
    uint64_t v250 = v365;
    uint64_t v249 = v366;
    sub_1D7A9D178();
    uint64_t v251 = v364;
    sub_1D7A9D1D8();
    uint64_t v252 = v363;
LABEL_5:
    (*(void (**)(char *, uint64_t))(v252 + 8))(v248, v251);
    return (*(uint64_t (**)(char *, uint64_t))(v367 + 8))(v250, v249);
  }
  switch(v246)
  {
    case 1:
      char v368 = 1;
      sub_1D79538DC();
      uint64_t v256 = v284;
      uint64_t v258 = v365;
      uint64_t v257 = v366;
      sub_1D7A9D178();
      (*(void (**)(char *, uint64_t))(v285 + 8))(v256, v286);
      goto LABEL_30;
    case 2:
      char v368 = 2;
      sub_1D7953888();
      uint64_t v259 = v287;
      uint64_t v258 = v365;
      uint64_t v257 = v366;
      sub_1D7A9D178();
      (*(void (**)(char *, uint64_t))(v288 + 8))(v259, v289);
      goto LABEL_30;
    case 3:
      char v368 = 3;
      sub_1D7953834();
      uint64_t v260 = v290;
      uint64_t v258 = v365;
      uint64_t v257 = v366;
      sub_1D7A9D178();
      (*(void (**)(char *, uint64_t))(v291 + 8))(v260, v292);
      goto LABEL_30;
    case 4:
      char v368 = 4;
      sub_1D79537E0();
      uint64_t v261 = v293;
      uint64_t v258 = v365;
      uint64_t v257 = v366;
      sub_1D7A9D178();
      (*(void (**)(char *, uint64_t))(v294 + 8))(v261, v295);
      goto LABEL_30;
    case 5:
      char v368 = 5;
      sub_1D795378C();
      uint64_t v262 = v296;
      uint64_t v258 = v365;
      uint64_t v257 = v366;
      sub_1D7A9D178();
      (*(void (**)(char *, uint64_t))(v297 + 8))(v262, v298);
      goto LABEL_30;
    case 6:
      char v368 = 6;
      sub_1D7953738();
      uint64_t v263 = v299;
      uint64_t v258 = v365;
      uint64_t v257 = v366;
      sub_1D7A9D178();
      (*(void (**)(char *, uint64_t))(v300 + 8))(v263, v301);
      goto LABEL_30;
    case 7:
      char v368 = 7;
      sub_1D79536E4();
      uint64_t v264 = v302;
      uint64_t v258 = v365;
      uint64_t v257 = v366;
      sub_1D7A9D178();
      (*(void (**)(char *, uint64_t))(v303 + 8))(v264, v304);
      goto LABEL_30;
    case 8:
      char v368 = 8;
      sub_1D7953690();
      uint64_t v265 = v305;
      uint64_t v258 = v365;
      uint64_t v257 = v366;
      sub_1D7A9D178();
      (*(void (**)(char *, uint64_t))(v306 + 8))(v265, v307);
      goto LABEL_30;
    case 9:
      char v368 = 9;
      sub_1D795363C();
      uint64_t v266 = v308;
      uint64_t v258 = v365;
      uint64_t v257 = v366;
      sub_1D7A9D178();
      (*(void (**)(char *, uint64_t))(v309 + 8))(v266, v310);
      goto LABEL_30;
    case 10:
      char v368 = 10;
      sub_1D79535E8();
      uint64_t v267 = v311;
      uint64_t v258 = v365;
      uint64_t v257 = v366;
      sub_1D7A9D178();
      (*(void (**)(char *, uint64_t))(v312 + 8))(v267, v313);
      goto LABEL_30;
    case 11:
      char v368 = 11;
      sub_1D7953594();
      uint64_t v268 = v314;
      uint64_t v258 = v365;
      uint64_t v257 = v366;
      sub_1D7A9D178();
      (*(void (**)(char *, uint64_t))(v315 + 8))(v268, v316);
      goto LABEL_30;
    case 12:
      char v368 = 12;
      sub_1D7953540();
      uint64_t v269 = v317;
      uint64_t v258 = v365;
      uint64_t v257 = v366;
      sub_1D7A9D178();
      (*(void (**)(char *, uint64_t))(v318 + 8))(v269, v319);
      goto LABEL_30;
    case 13:
      char v368 = 13;
      sub_1D79534EC();
      uint64_t v270 = v320;
      uint64_t v258 = v365;
      uint64_t v257 = v366;
      sub_1D7A9D178();
      (*(void (**)(char *, uint64_t))(v321 + 8))(v270, v322);
      goto LABEL_30;
    case 14:
      char v368 = 14;
      sub_1D7953498();
      uint64_t v271 = v323;
      uint64_t v258 = v365;
      uint64_t v257 = v366;
      sub_1D7A9D178();
      (*(void (**)(char *, uint64_t))(v324 + 8))(v271, v325);
      goto LABEL_30;
    case 15:
      char v368 = 15;
      sub_1D7953444();
      uint64_t v272 = v326;
      uint64_t v258 = v365;
      uint64_t v257 = v366;
      sub_1D7A9D178();
      (*(void (**)(char *, uint64_t))(v327 + 8))(v272, v328);
      goto LABEL_30;
    case 16:
      char v368 = 16;
      sub_1D79533F0();
      uint64_t v273 = v329;
      uint64_t v258 = v365;
      uint64_t v257 = v366;
      sub_1D7A9D178();
      (*(void (**)(char *, uint64_t))(v330 + 8))(v273, v331);
      goto LABEL_30;
    case 17:
      char v368 = 17;
      sub_1D795339C();
      uint64_t v274 = v332;
      uint64_t v258 = v365;
      uint64_t v257 = v366;
      sub_1D7A9D178();
      (*(void (**)(char *, uint64_t))(v333 + 8))(v274, v334);
      goto LABEL_30;
    case 18:
      char v368 = 18;
      sub_1D7953348();
      uint64_t v275 = v335;
      uint64_t v258 = v365;
      uint64_t v257 = v366;
      sub_1D7A9D178();
      (*(void (**)(char *, uint64_t))(v336 + 8))(v275, v337);
      goto LABEL_30;
    case 19:
      char v368 = 19;
      sub_1D79532F4();
      uint64_t v276 = v338;
      uint64_t v258 = v365;
      uint64_t v257 = v366;
      sub_1D7A9D178();
      (*(void (**)(char *, uint64_t))(v339 + 8))(v276, v340);
      goto LABEL_30;
    case 20:
      char v368 = 20;
      sub_1D79532A0();
      uint64_t v277 = v341;
      uint64_t v258 = v365;
      uint64_t v257 = v366;
      sub_1D7A9D178();
      (*(void (**)(char *, uint64_t))(v342 + 8))(v277, v343);
      goto LABEL_30;
    case 21:
      char v368 = 21;
      sub_1D795324C();
      uint64_t v278 = v344;
      uint64_t v258 = v365;
      uint64_t v257 = v366;
      sub_1D7A9D178();
      (*(void (**)(char *, uint64_t))(v345 + 8))(v278, v346);
      goto LABEL_30;
    case 22:
      char v368 = 22;
      sub_1D79531F8();
      uint64_t v279 = v347;
      uint64_t v258 = v365;
      uint64_t v257 = v366;
      sub_1D7A9D178();
      uint64_t v281 = v348;
      uint64_t v280 = v349;
      goto LABEL_36;
    case 23:
      char v368 = 23;
      sub_1D79531A4();
      uint64_t v279 = v350;
      uint64_t v258 = v365;
      uint64_t v257 = v366;
      sub_1D7A9D178();
      uint64_t v281 = v351;
      uint64_t v280 = v352;
      goto LABEL_36;
    case 24:
      char v368 = 24;
      sub_1D7953150();
      uint64_t v279 = v353;
      uint64_t v258 = v365;
      uint64_t v257 = v366;
      sub_1D7A9D178();
      uint64_t v281 = v354;
      uint64_t v280 = v355;
      goto LABEL_36;
    case 25:
      char v368 = 25;
      sub_1D79530FC();
      uint64_t v279 = v356;
      uint64_t v258 = v365;
      uint64_t v257 = v366;
      sub_1D7A9D178();
      uint64_t v281 = v357;
      uint64_t v280 = v358;
LABEL_36:
      (*(void (**)(char *, uint64_t))(v281 + 8))(v279, v280);
LABEL_30:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v367 + 8))(v258, v257);
      break;
    default:
      char v368 = 0;
      sub_1D7953930();
      uint64_t v254 = v365;
      uint64_t v255 = v366;
      sub_1D7A9D178();
      (*(void (**)(char *, uint64_t))(v283 + 8))(v234, v225);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v367 + 8))(v254, v255);
      break;
  }
  return result;
}

uint64_t IQCType.hashValue.getter()
{
  return sub_1D7A9D628();
}

uint64_t IQCType.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v401 = a2;
  uint64_t v406 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844930);
  uint64_t v377 = *(void *)(v406 - 8);
  MEMORY[0x1F4188790](v406, v3, v4, v5, v6, v7, v8, v9);
  uint64_t v400 = (char *)&v320 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v376 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844938);
  uint64_t v375 = *(void *)(v376 - 8);
  MEMORY[0x1F4188790](v376, v11, v12, v13, v14, v15, v16, v17);
  uint64_t v399 = (char *)&v320 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v405 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844940);
  uint64_t v374 = *(void *)(v405 - 8);
  MEMORY[0x1F4188790](v405, v19, v20, v21, v22, v23, v24, v25);
  uint64_t v398 = (char *)&v320 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v373 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844948);
  uint64_t v372 = *(void *)(v373 - 8);
  MEMORY[0x1F4188790](v373, v27, v28, v29, v30, v31, v32, v33);
  uint64_t v397 = (char *)&v320 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v371 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844950);
  uint64_t v370 = *(void *)(v371 - 8);
  MEMORY[0x1F4188790](v371, v35, v36, v37, v38, v39, v40, v41);
  uint64_t v396 = (char *)&v320 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v369 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844958);
  uint64_t v368 = *(void *)(v369 - 8);
  MEMORY[0x1F4188790](v369, v43, v44, v45, v46, v47, v48, v49);
  uint64_t v395 = (char *)&v320 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v367 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844960);
  uint64_t v366 = *(void *)(v367 - 8);
  MEMORY[0x1F4188790](v367, v51, v52, v53, v54, v55, v56, v57);
  uint64_t v394 = (char *)&v320 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v365 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844968);
  uint64_t v364 = *(void *)(v365 - 8);
  MEMORY[0x1F4188790](v365, v59, v60, v61, v62, v63, v64, v65);
  uint64_t v393 = (char *)&v320 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v363 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844970);
  uint64_t v362 = *(void *)(v363 - 8);
  MEMORY[0x1F4188790](v363, v67, v68, v69, v70, v71, v72, v73);
  uint64_t v392 = (char *)&v320 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v361 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844978);
  uint64_t v360 = *(void *)(v361 - 8);
  MEMORY[0x1F4188790](v361, v75, v76, v77, v78, v79, v80, v81);
  uint64_t v391 = (char *)&v320 - ((v82 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v359 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844980);
  uint64_t v358 = *(void *)(v359 - 8);
  MEMORY[0x1F4188790](v359, v83, v84, v85, v86, v87, v88, v89);
  uint64_t v390 = (char *)&v320 - ((v90 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v357 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844988);
  uint64_t v356 = *(void *)(v357 - 8);
  MEMORY[0x1F4188790](v357, v91, v92, v93, v94, v95, v96, v97);
  uint64_t v389 = (char *)&v320 - ((v98 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v355 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844990);
  uint64_t v354 = *(void *)(v355 - 8);
  MEMORY[0x1F4188790](v355, v99, v100, v101, v102, v103, v104, v105);
  uint64_t v388 = (char *)&v320 - ((v106 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v353 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844998);
  uint64_t v352 = *(void *)(v353 - 8);
  MEMORY[0x1F4188790](v353, v107, v108, v109, v110, v111, v112, v113);
  uint64_t v387 = (char *)&v320 - ((v114 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v351 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8449A0);
  uint64_t v350 = *(void *)(v351 - 8);
  MEMORY[0x1F4188790](v351, v115, v116, v117, v118, v119, v120, v121);
  uint64_t v386 = (char *)&v320 - ((v122 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v349 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8449A8);
  uint64_t v348 = *(void *)(v349 - 8);
  MEMORY[0x1F4188790](v349, v123, v124, v125, v126, v127, v128, v129);
  uint64_t v385 = (char *)&v320 - ((v130 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v347 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8449B0);
  uint64_t v346 = *(void *)(v347 - 8);
  MEMORY[0x1F4188790](v347, v131, v132, v133, v134, v135, v136, v137);
  uint64_t v384 = (char *)&v320 - ((v138 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v345 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8449B8);
  uint64_t v344 = *(void *)(v345 - 8);
  MEMORY[0x1F4188790](v345, v139, v140, v141, v142, v143, v144, v145);
  uint64_t v383 = (char *)&v320 - ((v146 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v343 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8449C0);
  uint64_t v342 = *(void *)(v343 - 8);
  MEMORY[0x1F4188790](v343, v147, v148, v149, v150, v151, v152, v153);
  uint64_t v382 = (char *)&v320 - ((v154 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v341 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8449C8);
  uint64_t v340 = *(void *)(v341 - 8);
  MEMORY[0x1F4188790](v341, v155, v156, v157, v158, v159, v160, v161);
  uint64_t v404 = (char *)&v320 - ((v162 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v339 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8449D0);
  uint64_t v338 = *(void *)(v339 - 8);
  MEMORY[0x1F4188790](v339, v163, v164, v165, v166, v167, v168, v169);
  uint64_t v403 = (char *)&v320 - ((v170 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v332 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8449D8);
  uint64_t v337 = *(void *)(v332 - 8);
  MEMORY[0x1F4188790](v332, v171, v172, v173, v174, v175, v176, v177);
  uint64_t v381 = (char *)&v320 - ((v178 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v336 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8449E0);
  uint64_t v335 = *(void *)(v336 - 8);
  MEMORY[0x1F4188790](v336, v179, v180, v181, v182, v183, v184, v185);
  uint64_t v380 = (char *)&v320 - ((v186 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v334 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8449E8);
  uint64_t v333 = *(void *)(v334 - 8);
  MEMORY[0x1F4188790](v334, v187, v188, v189, v190, v191, v192, v193);
  uint64_t v402 = (char *)&v320 - ((v194 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v331 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8449F0);
  uint64_t v330 = *(void *)(v331 - 8);
  MEMORY[0x1F4188790](v331, v195, v196, v197, v198, v199, v200, v201);
  uint64_t v379 = (char *)&v320 - ((v202 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v329 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8449F8);
  uint64_t v328 = *(void *)(v329 - 8);
  MEMORY[0x1F4188790](v329, v203, v204, v205, v206, v207, v208, v209);
  uint64_t v378 = (char *)&v320 - ((v210 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v327 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844A00);
  uint64_t v326 = *(void *)(v327 - 8);
  MEMORY[0x1F4188790](v327, v211, v212, v213, v214, v215, v216, v217);
  uint64_t v219 = (char *)&v320 - ((v218 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v220 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844A08);
  uint64_t v325 = *(void *)(v220 - 8);
  MEMORY[0x1F4188790](v220, v221, v222, v223, v224, v225, v226, v227);
  uint64_t v229 = (char *)&v320 - ((v228 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v230 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844A10);
  uint64_t v231 = *(void *)(v230 - 8);
  MEMORY[0x1F4188790](v230, v232, v233, v234, v235, v236, v237, v238);
  uint64_t v240 = (char *)&v320 - ((v239 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v241 = a1[3];
  uint64_t v407 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v241);
  sub_1D7953000();
  uint64_t v242 = v408;
  sub_1D7A9D6A8();
  if (v242)
  {
LABEL_60:
    uint64_t v308 = (uint64_t)v407;
    return __swift_destroy_boxed_opaque_existential_1(v308);
  }
  uint64_t v322 = v229;
  uint64_t v321 = v220;
  uint64_t v323 = v219;
  uint64_t v243 = v402;
  uint64_t v244 = v403;
  uint64_t v246 = v404;
  uint64_t v245 = v405;
  uint64_t v324 = 0;
  uint64_t v247 = v406;
  uint64_t v408 = v231;
  uint64_t v248 = v240;
  uint64_t v249 = sub_1D7A9D158();
  if (*(void *)(v249 + 16) != 1)
  {
    uint64_t v254 = sub_1D7A9CCF8();
    swift_allocError();
    uint64_t v256 = v255;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA843728);
    void *v256 = &type metadata for IQCType;
    sub_1D7A9D098();
    sub_1D7A9CCB8();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v254 - 8) + 104))(v256, *MEMORY[0x1E4FBBA70], v254);
    swift_willThrow();
LABEL_59:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v408 + 8))(v248, v230);
    goto LABEL_60;
  }
  switch(*(unsigned char *)(v249 + 32))
  {
    case 1:
      char v409 = 1;
      sub_1D79538DC();
      uint64_t v257 = v323;
      uint64_t v258 = v324;
      sub_1D7A9D088();
      if (v258) {
        goto LABEL_59;
      }
      (*(void (**)(char *, uint64_t))(v326 + 8))(v257, v327);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v408 + 8))(v240, v230);
      uint64_t v253 = 0;
      char v259 = 2;
      uint64_t v252 = 1;
      goto LABEL_66;
    case 2:
      char v409 = 2;
      sub_1D7953888();
      uint64_t v260 = v378;
      uint64_t v261 = v324;
      sub_1D7A9D088();
      if (v261) {
        goto LABEL_59;
      }
      (*(void (**)(char *, uint64_t))(v328 + 8))(v260, v329);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v408 + 8))(v240, v230);
      uint64_t v253 = 0;
      uint64_t v252 = 2;
      goto LABEL_11;
    case 3:
      char v409 = 3;
      sub_1D7953834();
      uint64_t v262 = v379;
      uint64_t v263 = v324;
      sub_1D7A9D088();
      if (v263) {
        goto LABEL_59;
      }
      (*(void (**)(char *, uint64_t))(v330 + 8))(v262, v331);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v408 + 8))(v240, v230);
      uint64_t v253 = 0;
      char v259 = 2;
      uint64_t v252 = 3;
      goto LABEL_66;
    case 4:
      char v409 = 4;
      sub_1D79537E0();
      uint64_t v264 = v324;
      sub_1D7A9D088();
      if (v264) {
        goto LABEL_59;
      }
      (*(void (**)(char *, uint64_t))(v333 + 8))(v243, v334);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v408 + 8))(v240, v230);
      uint64_t v253 = 0;
      char v259 = 2;
      uint64_t v252 = 4;
      goto LABEL_66;
    case 5:
      char v409 = 5;
      sub_1D795378C();
      uint64_t v265 = v380;
      uint64_t v266 = v324;
      sub_1D7A9D088();
      if (v266) {
        goto LABEL_59;
      }
      (*(void (**)(char *, uint64_t))(v335 + 8))(v265, v336);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v408 + 8))(v240, v230);
      uint64_t v253 = 0;
      char v259 = 2;
      uint64_t v252 = 5;
      goto LABEL_66;
    case 6:
      char v409 = 6;
      sub_1D7953738();
      uint64_t v267 = v381;
      uint64_t v268 = v324;
      sub_1D7A9D088();
      if (v268) {
        goto LABEL_59;
      }
      (*(void (**)(char *, uint64_t))(v337 + 8))(v267, v332);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v408 + 8))(v240, v230);
      uint64_t v253 = 0;
      char v259 = 2;
      uint64_t v252 = 6;
      goto LABEL_66;
    case 7:
      char v409 = 7;
      sub_1D79536E4();
      uint64_t v269 = v324;
      sub_1D7A9D088();
      if (v269) {
        goto LABEL_59;
      }
      (*(void (**)(char *, uint64_t))(v338 + 8))(v244, v339);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v408 + 8))(v240, v230);
      uint64_t v253 = 0;
      char v259 = 2;
      uint64_t v252 = 7;
      goto LABEL_66;
    case 8:
      char v409 = 8;
      sub_1D7953690();
      uint64_t v270 = v324;
      sub_1D7A9D088();
      if (v270) {
        goto LABEL_59;
      }
      (*(void (**)(char *, uint64_t))(v340 + 8))(v246, v341);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v408 + 8))(v240, v230);
      uint64_t v253 = 0;
      char v259 = 2;
      uint64_t v252 = 8;
      goto LABEL_66;
    case 9:
      char v409 = 9;
      sub_1D795363C();
      uint64_t v271 = v382;
      uint64_t v272 = v324;
      sub_1D7A9D088();
      if (v272) {
        goto LABEL_59;
      }
      (*(void (**)(char *, uint64_t))(v342 + 8))(v271, v343);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v408 + 8))(v240, v230);
      uint64_t v253 = 0;
      char v259 = 2;
      uint64_t v252 = 9;
      goto LABEL_66;
    case 0xA:
      char v409 = 10;
      sub_1D79535E8();
      uint64_t v273 = v383;
      uint64_t v274 = v324;
      sub_1D7A9D088();
      if (v274) {
        goto LABEL_59;
      }
      (*(void (**)(char *, uint64_t))(v344 + 8))(v273, v345);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v408 + 8))(v240, v230);
      uint64_t v253 = 0;
      char v259 = 2;
      uint64_t v252 = 10;
      goto LABEL_66;
    case 0xB:
      char v409 = 11;
      sub_1D7953594();
      uint64_t v275 = v384;
      uint64_t v276 = v324;
      sub_1D7A9D088();
      if (v276) {
        goto LABEL_59;
      }
      (*(void (**)(char *, uint64_t))(v346 + 8))(v275, v347);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v408 + 8))(v240, v230);
      uint64_t v253 = 0;
      char v259 = 2;
      uint64_t v252 = 11;
      goto LABEL_66;
    case 0xC:
      char v409 = 12;
      sub_1D7953540();
      uint64_t v277 = v385;
      uint64_t v278 = v324;
      sub_1D7A9D088();
      if (v278) {
        goto LABEL_59;
      }
      (*(void (**)(char *, uint64_t))(v348 + 8))(v277, v349);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v408 + 8))(v240, v230);
      uint64_t v253 = 0;
      char v259 = 2;
      uint64_t v252 = 12;
      goto LABEL_66;
    case 0xD:
      char v409 = 13;
      sub_1D79534EC();
      uint64_t v279 = v386;
      uint64_t v280 = v324;
      sub_1D7A9D088();
      if (v280) {
        goto LABEL_59;
      }
      (*(void (**)(char *, uint64_t))(v350 + 8))(v279, v351);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v408 + 8))(v240, v230);
      uint64_t v253 = 0;
      char v259 = 2;
      uint64_t v252 = 13;
      goto LABEL_66;
    case 0xE:
      char v409 = 14;
      sub_1D7953498();
      uint64_t v281 = v387;
      uint64_t v282 = v324;
      sub_1D7A9D088();
      if (v282) {
        goto LABEL_59;
      }
      (*(void (**)(char *, uint64_t))(v352 + 8))(v281, v353);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v408 + 8))(v240, v230);
      uint64_t v253 = 0;
      char v259 = 2;
      uint64_t v252 = 14;
      goto LABEL_66;
    case 0xF:
      char v409 = 15;
      sub_1D7953444();
      uint64_t v283 = v388;
      uint64_t v284 = v324;
      sub_1D7A9D088();
      if (v284) {
        goto LABEL_59;
      }
      (*(void (**)(char *, uint64_t))(v354 + 8))(v283, v355);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v408 + 8))(v240, v230);
      uint64_t v253 = 0;
      char v259 = 2;
      uint64_t v252 = 15;
      goto LABEL_66;
    case 0x10:
      char v409 = 16;
      sub_1D79533F0();
      uint64_t v285 = v389;
      uint64_t v286 = v324;
      sub_1D7A9D088();
      if (v286) {
        goto LABEL_59;
      }
      (*(void (**)(char *, uint64_t))(v356 + 8))(v285, v357);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v408 + 8))(v240, v230);
      uint64_t v253 = 0;
      char v259 = 2;
      uint64_t v252 = 16;
      goto LABEL_66;
    case 0x11:
      char v409 = 17;
      sub_1D795339C();
      uint64_t v287 = v390;
      uint64_t v288 = v324;
      sub_1D7A9D088();
      if (v288) {
        goto LABEL_59;
      }
      (*(void (**)(char *, uint64_t))(v358 + 8))(v287, v359);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v408 + 8))(v240, v230);
      uint64_t v253 = 0;
      char v259 = 2;
      uint64_t v252 = 17;
      goto LABEL_66;
    case 0x12:
      char v409 = 18;
      sub_1D7953348();
      uint64_t v289 = v391;
      uint64_t v290 = v324;
      sub_1D7A9D088();
      if (v290) {
        goto LABEL_59;
      }
      (*(void (**)(char *, uint64_t))(v360 + 8))(v289, v361);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v408 + 8))(v240, v230);
      uint64_t v253 = 0;
      char v259 = 2;
      uint64_t v252 = 18;
      goto LABEL_66;
    case 0x13:
      char v409 = 19;
      sub_1D79532F4();
      uint64_t v291 = v392;
      uint64_t v292 = v324;
      sub_1D7A9D088();
      if (v292) {
        goto LABEL_59;
      }
      (*(void (**)(char *, uint64_t))(v362 + 8))(v291, v363);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v408 + 8))(v240, v230);
      uint64_t v253 = 0;
      char v259 = 2;
      uint64_t v252 = 19;
      goto LABEL_66;
    case 0x14:
      char v409 = 20;
      sub_1D79532A0();
      uint64_t v293 = v393;
      uint64_t v294 = v324;
      sub_1D7A9D088();
      if (v294) {
        goto LABEL_59;
      }
      (*(void (**)(char *, uint64_t))(v364 + 8))(v293, v365);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v408 + 8))(v240, v230);
      uint64_t v253 = 0;
      char v259 = 2;
      uint64_t v252 = 20;
      goto LABEL_66;
    case 0x15:
      char v409 = 21;
      sub_1D795324C();
      uint64_t v295 = v394;
      uint64_t v296 = v324;
      sub_1D7A9D088();
      if (v296) {
        goto LABEL_59;
      }
      (*(void (**)(char *, uint64_t))(v366 + 8))(v295, v367);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v408 + 8))(v240, v230);
      uint64_t v253 = 0;
      char v259 = 2;
      uint64_t v252 = 21;
      goto LABEL_66;
    case 0x16:
      char v409 = 22;
      sub_1D79531F8();
      uint64_t v297 = v395;
      uint64_t v298 = v324;
      sub_1D7A9D088();
      if (v298) {
        goto LABEL_59;
      }
      (*(void (**)(char *, uint64_t))(v368 + 8))(v297, v369);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v408 + 8))(v240, v230);
      uint64_t v253 = 0;
      char v259 = 2;
      uint64_t v252 = 22;
      goto LABEL_66;
    case 0x17:
      char v409 = 23;
      sub_1D79531A4();
      uint64_t v299 = v396;
      uint64_t v300 = v324;
      sub_1D7A9D088();
      if (v300) {
        goto LABEL_59;
      }
      (*(void (**)(char *, uint64_t))(v370 + 8))(v299, v371);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v408 + 8))(v240, v230);
      uint64_t v253 = 0;
      char v259 = 2;
      uint64_t v252 = 23;
      goto LABEL_66;
    case 0x18:
      char v409 = 24;
      sub_1D7953150();
      uint64_t v301 = v397;
      uint64_t v302 = v324;
      sub_1D7A9D088();
      if (v302) {
        goto LABEL_59;
      }
      (*(void (**)(char *, uint64_t))(v372 + 8))(v301, v373);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v408 + 8))(v240, v230);
      uint64_t v253 = 0;
      char v259 = 2;
      uint64_t v252 = 24;
      goto LABEL_66;
    case 0x19:
      uint64_t v303 = v245;
      char v409 = 25;
      sub_1D79530FC();
      uint64_t v304 = v398;
      uint64_t v305 = v324;
      sub_1D7A9D088();
      if (v305) {
        goto LABEL_59;
      }
      (*(void (**)(char *, uint64_t))(v374 + 8))(v304, v303);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v408 + 8))(v248, v230);
      uint64_t v253 = 0;
      char v259 = 2;
      uint64_t v252 = 25;
      goto LABEL_66;
    case 0x1A:
      char v409 = 26;
      sub_1D79530A8();
      uint64_t v306 = v399;
      uint64_t v307 = v324;
      sub_1D7A9D088();
      if (v307) {
        goto LABEL_59;
      }
      uint64_t v312 = v376;
      uint64_t v313 = sub_1D7A9D0F8();
      uint64_t v314 = v408;
      uint64_t v252 = v313;
      uint64_t v253 = v317;
      (*(void (**)(char *, uint64_t))(v375 + 8))(v306, v312);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v314 + 8))(v240, v230);
      char v259 = 0;
      goto LABEL_66;
    case 0x1B:
      char v409 = 27;
      sub_1D7953054();
      uint64_t v310 = v400;
      uint64_t v311 = v324;
      sub_1D7A9D088();
      if (v311)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v408 + 8))(v248, v230);
        uint64_t v308 = (uint64_t)v407;
      }
      else
      {
        uint64_t v405 = (uint64_t)v248;
        uint64_t v315 = sub_1D7A9D0F8();
        uint64_t v316 = v408;
        uint64_t v324 = 0;
        uint64_t v252 = v315;
        uint64_t v253 = v318;
        (*(void (**)(char *, uint64_t))(v377 + 8))(v310, v247);
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v316 + 8))(v405, v230);
        char v259 = 1;
        uint64_t v308 = (uint64_t)v407;
        uint64_t v319 = v401;
LABEL_67:
        *(void *)uint64_t v319 = v252;
        *(void *)(v319 + 8) = v253;
        *(unsigned char *)(v319 + 16) = v259;
      }
      break;
    default:
      char v409 = 0;
      sub_1D7953930();
      uint64_t v250 = v322;
      uint64_t v251 = v324;
      sub_1D7A9D088();
      if (v251) {
        goto LABEL_59;
      }
      (*(void (**)(char *, uint64_t))(v325 + 8))(v250, v321);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v408 + 8))(v240, v230);
      uint64_t v252 = 0;
      uint64_t v253 = 0;
LABEL_11:
      char v259 = 2;
LABEL_66:
      uint64_t v308 = (uint64_t)v407;
      uint64_t v319 = v401;
      goto LABEL_67;
  }
  return __swift_destroy_boxed_opaque_existential_1(v308);
}

uint64_t sub_1D79464F8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return IQCType.init(from:)(a1, a2);
}

uint64_t sub_1D7946510(void *a1)
{
  return IQCType.encode(to:)(a1);
}

uint64_t sub_1D7946528()
{
  return sub_1D7A9D628();
}

uint64_t sub_1D7946580()
{
  return sub_1D7A9D628();
}

unint64_t ImageQualityCriteria.minBlurriness.getter()
{
  return *v0 | ((unint64_t)*((unsigned __int8 *)v0 + 4) << 32);
}

uint64_t ImageQualityCriteria.minBlurriness.setter(uint64_t result)
{
  *(_DWORD *)uint64_t v1 = result;
  *(unsigned char *)(v1 + 4) = BYTE4(result) & 1;
  return result;
}

uint64_t (*ImageQualityCriteria.minBlurriness.modify())()
{
  return nullsub_1;
}

unint64_t ImageQualityCriteria.maxBlurriness.getter()
{
  return *(unsigned int *)(v0 + 8) | ((unint64_t)*(unsigned __int8 *)(v0 + 12) << 32);
}

uint64_t ImageQualityCriteria.maxBlurriness.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 8) = result;
  *(unsigned char *)(v1 + 12) = BYTE4(result) & 1;
  return result;
}

uint64_t (*ImageQualityCriteria.maxBlurriness.modify())()
{
  return nullsub_1;
}

unint64_t ImageQualityCriteria.minExposure.getter()
{
  return *(unsigned int *)(v0 + 16) | ((unint64_t)*(unsigned __int8 *)(v0 + 20) << 32);
}

uint64_t ImageQualityCriteria.minExposure.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 16) = result;
  *(unsigned char *)(v1 + 20) = BYTE4(result) & 1;
  return result;
}

uint64_t (*ImageQualityCriteria.minExposure.modify())()
{
  return nullsub_1;
}

unint64_t ImageQualityCriteria.maxExposure.getter()
{
  return *(unsigned int *)(v0 + 24) | ((unint64_t)*(unsigned __int8 *)(v0 + 28) << 32);
}

uint64_t ImageQualityCriteria.maxExposure.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 24) = result;
  *(unsigned char *)(v1 + 28) = BYTE4(result) & 1;
  return result;
}

uint64_t (*ImageQualityCriteria.maxExposure.modify())()
{
  return nullsub_1;
}

unint64_t ImageQualityCriteria.minCardDistortion.getter()
{
  return *(unsigned int *)(v0 + 32) | ((unint64_t)*(unsigned __int8 *)(v0 + 36) << 32);
}

uint64_t ImageQualityCriteria.minCardDistortion.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 32) = result;
  *(unsigned char *)(v1 + 36) = BYTE4(result) & 1;
  return result;
}

uint64_t (*ImageQualityCriteria.minCardDistortion.modify())()
{
  return nullsub_1;
}

unint64_t ImageQualityCriteria.maxCardDistortion.getter()
{
  return *(unsigned int *)(v0 + 40) | ((unint64_t)*(unsigned __int8 *)(v0 + 44) << 32);
}

uint64_t ImageQualityCriteria.maxCardDistortion.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 40) = result;
  *(unsigned char *)(v1 + 44) = BYTE4(result) & 1;
  return result;
}

uint64_t (*ImageQualityCriteria.maxCardDistortion.modify())()
{
  return nullsub_1;
}

unint64_t ImageQualityCriteria.minFaceToImageRatio.getter()
{
  return *(unsigned int *)(v0 + 48) | ((unint64_t)*(unsigned __int8 *)(v0 + 52) << 32);
}

uint64_t ImageQualityCriteria.minFaceToImageRatio.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 48) = result;
  *(unsigned char *)(v1 + 52) = BYTE4(result) & 1;
  return result;
}

uint64_t (*ImageQualityCriteria.minFaceToImageRatio.modify())()
{
  return nullsub_1;
}

unint64_t ImageQualityCriteria.maxFaceToImageRatio.getter()
{
  return *(unsigned int *)(v0 + 56) | ((unint64_t)*(unsigned __int8 *)(v0 + 60) << 32);
}

uint64_t ImageQualityCriteria.maxFaceToImageRatio.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 56) = result;
  *(unsigned char *)(v1 + 60) = BYTE4(result) & 1;
  return result;
}

uint64_t (*ImageQualityCriteria.maxFaceToImageRatio.modify())()
{
  return nullsub_1;
}

unint64_t ImageQualityCriteria.minFaceCenteredRatio.getter()
{
  return *(unsigned int *)(v0 + 64) | ((unint64_t)*(unsigned __int8 *)(v0 + 68) << 32);
}

uint64_t ImageQualityCriteria.minFaceCenteredRatio.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 64) = result;
  *(unsigned char *)(v1 + 68) = BYTE4(result) & 1;
  return result;
}

uint64_t (*ImageQualityCriteria.minFaceCenteredRatio.modify())()
{
  return nullsub_1;
}

unint64_t ImageQualityCriteria.maxFaceCenteredRatio.getter()
{
  return *(unsigned int *)(v0 + 72) | ((unint64_t)*(unsigned __int8 *)(v0 + 76) << 32);
}

uint64_t ImageQualityCriteria.maxFaceCenteredRatio.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 72) = result;
  *(unsigned char *)(v1 + 76) = BYTE4(result) & 1;
  return result;
}

uint64_t (*ImageQualityCriteria.maxFaceCenteredRatio.modify())()
{
  return nullsub_1;
}

unint64_t ImageQualityCriteria.minHeadPitch.getter()
{
  return *(unsigned int *)(v0 + 80) | ((unint64_t)*(unsigned __int8 *)(v0 + 84) << 32);
}

uint64_t ImageQualityCriteria.minHeadPitch.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 80) = result;
  *(unsigned char *)(v1 + 84) = BYTE4(result) & 1;
  return result;
}

uint64_t (*ImageQualityCriteria.minHeadPitch.modify())()
{
  return nullsub_1;
}

unint64_t ImageQualityCriteria.maxHeadPitch.getter()
{
  return *(unsigned int *)(v0 + 88) | ((unint64_t)*(unsigned __int8 *)(v0 + 92) << 32);
}

uint64_t ImageQualityCriteria.maxHeadPitch.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 88) = result;
  *(unsigned char *)(v1 + 92) = BYTE4(result) & 1;
  return result;
}

uint64_t (*ImageQualityCriteria.maxHeadPitch.modify())()
{
  return nullsub_1;
}

unint64_t ImageQualityCriteria.minHeadRoll.getter()
{
  return *(unsigned int *)(v0 + 96) | ((unint64_t)*(unsigned __int8 *)(v0 + 100) << 32);
}

uint64_t ImageQualityCriteria.minHeadRoll.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 96) = result;
  *(unsigned char *)(v1 + 100) = BYTE4(result) & 1;
  return result;
}

uint64_t (*ImageQualityCriteria.minHeadRoll.modify())()
{
  return nullsub_1;
}

unint64_t ImageQualityCriteria.maxHeadRoll.getter()
{
  return *(unsigned int *)(v0 + 104) | ((unint64_t)*(unsigned __int8 *)(v0 + 108) << 32);
}

uint64_t ImageQualityCriteria.maxHeadRoll.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 104) = result;
  *(unsigned char *)(v1 + 108) = BYTE4(result) & 1;
  return result;
}

uint64_t (*ImageQualityCriteria.maxHeadRoll.modify())()
{
  return nullsub_1;
}

unint64_t ImageQualityCriteria.minHeadYaw.getter()
{
  return *(unsigned int *)(v0 + 112) | ((unint64_t)*(unsigned __int8 *)(v0 + 116) << 32);
}

uint64_t ImageQualityCriteria.minHeadYaw.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 112) = result;
  *(unsigned char *)(v1 + 116) = BYTE4(result) & 1;
  return result;
}

uint64_t (*ImageQualityCriteria.minHeadYaw.modify())()
{
  return nullsub_1;
}

unint64_t ImageQualityCriteria.maxHeadYaw.getter()
{
  return *(unsigned int *)(v0 + 120) | ((unint64_t)*(unsigned __int8 *)(v0 + 124) << 32);
}

uint64_t ImageQualityCriteria.maxHeadYaw.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 120) = result;
  *(unsigned char *)(v1 + 124) = BYTE4(result) & 1;
  return result;
}

uint64_t (*ImageQualityCriteria.maxHeadYaw.modify())()
{
  return nullsub_1;
}

unint64_t ImageQualityCriteria.minBlinkingConfidence.getter()
{
  return *(unsigned int *)(v0 + 128) | ((unint64_t)*(unsigned __int8 *)(v0 + 132) << 32);
}

uint64_t ImageQualityCriteria.minBlinkingConfidence.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 128) = result;
  *(unsigned char *)(v1 + 132) = BYTE4(result) & 1;
  return result;
}

uint64_t (*ImageQualityCriteria.minBlinkingConfidence.modify())()
{
  return nullsub_1;
}

unint64_t ImageQualityCriteria.maxBlinkingConfidence.getter()
{
  return *(unsigned int *)(v0 + 136) | ((unint64_t)*(unsigned __int8 *)(v0 + 140) << 32);
}

uint64_t ImageQualityCriteria.maxBlinkingConfidence.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 136) = result;
  *(unsigned char *)(v1 + 140) = BYTE4(result) & 1;
  return result;
}

uint64_t (*ImageQualityCriteria.maxBlinkingConfidence.modify())()
{
  return nullsub_1;
}

unint64_t ImageQualityCriteria.minPrescriptionConfidence.getter()
{
  return *(unsigned int *)(v0 + 144) | ((unint64_t)*(unsigned __int8 *)(v0 + 148) << 32);
}

uint64_t ImageQualityCriteria.minPrescriptionConfidence.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 144) = result;
  *(unsigned char *)(v1 + 148) = BYTE4(result) & 1;
  return result;
}

uint64_t (*ImageQualityCriteria.minPrescriptionConfidence.modify())()
{
  return nullsub_1;
}

unint64_t ImageQualityCriteria.maxPrescriptionConfidence.getter()
{
  return *(unsigned int *)(v0 + 152) | ((unint64_t)*(unsigned __int8 *)(v0 + 156) << 32);
}

uint64_t ImageQualityCriteria.maxPrescriptionConfidence.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 152) = result;
  *(unsigned char *)(v1 + 156) = BYTE4(result) & 1;
  return result;
}

uint64_t (*ImageQualityCriteria.maxPrescriptionConfidence.modify())()
{
  return nullsub_1;
}

unint64_t ImageQualityCriteria.minSunglassesConfidence.getter()
{
  return *(unsigned int *)(v0 + 160) | ((unint64_t)*(unsigned __int8 *)(v0 + 164) << 32);
}

uint64_t ImageQualityCriteria.minSunglassesConfidence.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 160) = result;
  *(unsigned char *)(v1 + 164) = BYTE4(result) & 1;
  return result;
}

uint64_t (*ImageQualityCriteria.minSunglassesConfidence.modify())()
{
  return nullsub_1;
}

unint64_t ImageQualityCriteria.maxSunglassesConfidence.getter()
{
  return *(unsigned int *)(v0 + 168) | ((unint64_t)*(unsigned __int8 *)(v0 + 172) << 32);
}

uint64_t ImageQualityCriteria.maxSunglassesConfidence.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 168) = result;
  *(unsigned char *)(v1 + 172) = BYTE4(result) & 1;
  return result;
}

uint64_t (*ImageQualityCriteria.maxSunglassesConfidence.modify())()
{
  return nullsub_1;
}

unint64_t ImageQualityCriteria.minFacemaskConfidence.getter()
{
  return *(unsigned int *)(v0 + 176) | ((unint64_t)*(unsigned __int8 *)(v0 + 180) << 32);
}

uint64_t ImageQualityCriteria.minFacemaskConfidence.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 176) = result;
  *(unsigned char *)(v1 + 180) = BYTE4(result) & 1;
  return result;
}

uint64_t (*ImageQualityCriteria.minFacemaskConfidence.modify())()
{
  return nullsub_1;
}

unint64_t ImageQualityCriteria.maxFacemaskConfidence.getter()
{
  return *(unsigned int *)(v0 + 184) | ((unint64_t)*(unsigned __int8 *)(v0 + 188) << 32);
}

uint64_t ImageQualityCriteria.maxFacemaskConfidence.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 184) = result;
  *(unsigned char *)(v1 + 188) = BYTE4(result) & 1;
  return result;
}

uint64_t (*ImageQualityCriteria.maxFacemaskConfidence.modify())()
{
  return nullsub_1;
}

unint64_t ImageQualityCriteria.minHeadgearConfidence.getter()
{
  return *(unsigned int *)(v0 + 192) | ((unint64_t)*(unsigned __int8 *)(v0 + 196) << 32);
}

uint64_t ImageQualityCriteria.minHeadgearConfidence.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 192) = result;
  *(unsigned char *)(v1 + 196) = BYTE4(result) & 1;
  return result;
}

uint64_t (*ImageQualityCriteria.minHeadgearConfidence.modify())()
{
  return nullsub_1;
}

unint64_t ImageQualityCriteria.maxHeadgearConfidence.getter()
{
  return *(unsigned int *)(v0 + 200) | ((unint64_t)*(unsigned __int8 *)(v0 + 204) << 32);
}

uint64_t ImageQualityCriteria.maxHeadgearConfidence.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 200) = result;
  *(unsigned char *)(v1 + 204) = BYTE4(result) & 1;
  return result;
}

uint64_t (*ImageQualityCriteria.maxHeadgearConfidence.modify())()
{
  return nullsub_1;
}

unint64_t ImageQualityCriteria.minFaceConfidence.getter()
{
  return *(unsigned int *)(v0 + 208) | ((unint64_t)*(unsigned __int8 *)(v0 + 212) << 32);
}

uint64_t ImageQualityCriteria.minFaceConfidence.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 208) = result;
  *(unsigned char *)(v1 + 212) = BYTE4(result) & 1;
  return result;
}

uint64_t (*ImageQualityCriteria.minFaceConfidence.modify())()
{
  return nullsub_1;
}

unint64_t ImageQualityCriteria.maxFaceConfidence.getter()
{
  return *(unsigned int *)(v0 + 216) | ((unint64_t)*(unsigned __int8 *)(v0 + 220) << 32);
}

uint64_t ImageQualityCriteria.maxFaceConfidence.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 216) = result;
  *(unsigned char *)(v1 + 220) = BYTE4(result) & 1;
  return result;
}

uint64_t (*ImageQualityCriteria.maxFaceConfidence.modify())()
{
  return nullsub_1;
}

unint64_t ImageQualityCriteria.minFaceCaptureQuality.getter()
{
  return *(unsigned int *)(v0 + 224) | ((unint64_t)*(unsigned __int8 *)(v0 + 228) << 32);
}

uint64_t ImageQualityCriteria.minFaceCaptureQuality.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 224) = result;
  *(unsigned char *)(v1 + 228) = BYTE4(result) & 1;
  return result;
}

uint64_t (*ImageQualityCriteria.minFaceCaptureQuality.modify())()
{
  return nullsub_1;
}

unint64_t ImageQualityCriteria.maxFaceCaptureQuality.getter()
{
  return *(unsigned int *)(v0 + 232) | ((unint64_t)*(unsigned __int8 *)(v0 + 236) << 32);
}

uint64_t ImageQualityCriteria.maxFaceCaptureQuality.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 232) = result;
  *(unsigned char *)(v1 + 236) = BYTE4(result) & 1;
  return result;
}

uint64_t (*ImageQualityCriteria.maxFaceCaptureQuality.modify())()
{
  return nullsub_1;
}

unint64_t ImageQualityCriteria.minDocumentSize.getter()
{
  return *(unsigned int *)(v0 + 240) | ((unint64_t)*(unsigned __int8 *)(v0 + 244) << 32);
}

uint64_t ImageQualityCriteria.minDocumentSize.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 240) = result;
  *(unsigned char *)(v1 + 244) = BYTE4(result) & 1;
  return result;
}

uint64_t (*ImageQualityCriteria.minDocumentSize.modify())()
{
  return nullsub_1;
}

unint64_t ImageQualityCriteria.maxDocumentSize.getter()
{
  return *(unsigned int *)(v0 + 248) | ((unint64_t)*(unsigned __int8 *)(v0 + 252) << 32);
}

uint64_t ImageQualityCriteria.maxDocumentSize.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 248) = result;
  *(unsigned char *)(v1 + 252) = BYTE4(result) & 1;
  return result;
}

uint64_t (*ImageQualityCriteria.maxDocumentSize.modify())()
{
  return nullsub_1;
}

unint64_t ImageQualityCriteria.minDocumentRotation.getter()
{
  return *(unsigned int *)(v0 + 256) | ((unint64_t)*(unsigned __int8 *)(v0 + 260) << 32);
}

uint64_t ImageQualityCriteria.minDocumentRotation.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 256) = result;
  *(unsigned char *)(v1 + 260) = BYTE4(result) & 1;
  return result;
}

uint64_t (*ImageQualityCriteria.minDocumentRotation.modify())()
{
  return nullsub_1;
}

unint64_t ImageQualityCriteria.maxDocumentRotation.getter()
{
  return *(unsigned int *)(v0 + 264) | ((unint64_t)*(unsigned __int8 *)(v0 + 268) << 32);
}

uint64_t ImageQualityCriteria.maxDocumentRotation.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 264) = result;
  *(unsigned char *)(v1 + 268) = BYTE4(result) & 1;
  return result;
}

uint64_t (*ImageQualityCriteria.maxDocumentRotation.modify())()
{
  return nullsub_1;
}

unint64_t ImageQualityCriteria.minDocumentSkew.getter()
{
  return *(unsigned int *)(v0 + 272) | ((unint64_t)*(unsigned __int8 *)(v0 + 276) << 32);
}

uint64_t ImageQualityCriteria.minDocumentSkew.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 272) = result;
  *(unsigned char *)(v1 + 276) = BYTE4(result) & 1;
  return result;
}

uint64_t (*ImageQualityCriteria.minDocumentSkew.modify())()
{
  return nullsub_1;
}

unint64_t ImageQualityCriteria.maxDocumentSkew.getter()
{
  return *(unsigned int *)(v0 + 280) | ((unint64_t)*(unsigned __int8 *)(v0 + 284) << 32);
}

uint64_t ImageQualityCriteria.maxDocumentSkew.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 280) = result;
  *(unsigned char *)(v1 + 284) = BYTE4(result) & 1;
  return result;
}

uint64_t (*ImageQualityCriteria.maxDocumentSkew.modify())()
{
  return nullsub_1;
}

unint64_t ImageQualityCriteria.maxLeftDrift.getter()
{
  return *(unsigned int *)(v0 + 288) | ((unint64_t)*(unsigned __int8 *)(v0 + 292) << 32);
}

uint64_t ImageQualityCriteria.maxLeftDrift.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 288) = result;
  *(unsigned char *)(v1 + 292) = BYTE4(result) & 1;
  return result;
}

uint64_t (*ImageQualityCriteria.maxLeftDrift.modify())()
{
  return nullsub_1;
}

unint64_t ImageQualityCriteria.maxRightDrift.getter()
{
  return *(unsigned int *)(v0 + 296) | ((unint64_t)*(unsigned __int8 *)(v0 + 300) << 32);
}

uint64_t ImageQualityCriteria.maxRightDrift.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 296) = result;
  *(unsigned char *)(v1 + 300) = BYTE4(result) & 1;
  return result;
}

uint64_t (*ImageQualityCriteria.maxRightDrift.modify())()
{
  return nullsub_1;
}

unint64_t ImageQualityCriteria.maxUpDrift.getter()
{
  return *(unsigned int *)(v0 + 304) | ((unint64_t)*(unsigned __int8 *)(v0 + 308) << 32);
}

uint64_t ImageQualityCriteria.maxUpDrift.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 304) = result;
  *(unsigned char *)(v1 + 308) = BYTE4(result) & 1;
  return result;
}

uint64_t (*ImageQualityCriteria.maxUpDrift.modify())()
{
  return nullsub_1;
}

unint64_t ImageQualityCriteria.maxDownDrift.getter()
{
  return *(unsigned int *)(v0 + 312) | ((unint64_t)*(unsigned __int8 *)(v0 + 316) << 32);
}

uint64_t ImageQualityCriteria.maxDownDrift.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 312) = result;
  *(unsigned char *)(v1 + 316) = BYTE4(result) & 1;
  return result;
}

uint64_t (*ImageQualityCriteria.maxDownDrift.modify())()
{
  return nullsub_1;
}

uint64_t ImageQualityCriteria.minNumFaces.getter()
{
  return *(void *)(v0 + 320);
}

uint64_t ImageQualityCriteria.minNumFaces.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 320) = result;
  *(unsigned char *)(v2 + 328) = a2 & 1;
  return result;
}

uint64_t (*ImageQualityCriteria.minNumFaces.modify())()
{
  return nullsub_1;
}

uint64_t ImageQualityCriteria.maxNumFaces.getter()
{
  return *(void *)(v0 + 336);
}

uint64_t ImageQualityCriteria.maxNumFaces.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 336) = result;
  *(unsigned char *)(v2 + 344) = a2 & 1;
  return result;
}

uint64_t (*ImageQualityCriteria.maxNumFaces.modify())()
{
  return nullsub_1;
}

uint64_t ImageQualityCriteria.minLuxLevel.getter()
{
  return *(void *)(v0 + 352);
}

uint64_t ImageQualityCriteria.minLuxLevel.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 352) = result;
  *(unsigned char *)(v2 + 360) = a2 & 1;
  return result;
}

uint64_t (*ImageQualityCriteria.minLuxLevel.modify())()
{
  return nullsub_1;
}

uint64_t ImageQualityCriteria.maxLuxLevel.getter()
{
  return *(void *)(v0 + 368);
}

uint64_t ImageQualityCriteria.maxLuxLevel.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 368) = result;
  *(unsigned char *)(v2 + 376) = a2 & 1;
  return result;
}

uint64_t (*ImageQualityCriteria.maxLuxLevel.modify())()
{
  return nullsub_1;
}

uint64_t ImageQualityCriteria.pdf417Detected.getter()
{
  return *(unsigned __int8 *)(v0 + 377);
}

uint64_t ImageQualityCriteria.pdf417Detected.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 377) = result;
  return result;
}

uint64_t (*ImageQualityCriteria.pdf417Detected.modify())()
{
  return nullsub_1;
}

uint64_t ImageQualityCriteria.isAAMVACompliant.getter()
{
  return *(unsigned __int8 *)(v0 + 378);
}

uint64_t ImageQualityCriteria.isAAMVACompliant.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 378) = result;
  return result;
}

uint64_t (*ImageQualityCriteria.isAAMVACompliant.modify())()
{
  return nullsub_1;
}

uint64_t ImageQualityCriteria.issuerNumber.getter()
{
  uint64_t v1 = *(void *)(v0 + 384);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ImageQualityCriteria.issuerNumber.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 384) = a1;
  *(void *)(v2 + 392) = a2;
  return result;
}

uint64_t (*ImageQualityCriteria.issuerNumber.modify())()
{
  return nullsub_1;
}

uint64_t ImageQualityCriteria.complexSignals.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ImageQualityCriteria.complexSignals.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 400) = a1;
  return result;
}

uint64_t (*ImageQualityCriteria.complexSignals.modify())()
{
  return nullsub_1;
}

uint64_t ImageQualityCriteria.ocrKeywords.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ImageQualityCriteria.ocrKeywords.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 408) = a1;
  return result;
}

uint64_t (*ImageQualityCriteria.ocrKeywords.modify())()
{
  return nullsub_1;
}

__n128 ImageQualityCriteria.init(minBlurriness:maxBlurriness:minExposure:maxExposure:minCardDistortion:maxCardDistortion:minFaceToImageRatio:maxFaceToImageRatio:minHeadPitch:maxHeadPitch:minHeadRoll:maxHeadRoll:minHeadYaw:maxHeadYaw:minBlinkingConfidence:maxBlinkingConfidence:minPrescriptionConfidence:maxPrescriptionConfidence:minSunglassesConfidence:maxSunglassesConfidence:minFacemaskConfidence:maxFacemaskConfidence:minHeadgearConfidence:maxHeadgearConfidence:minFaceConfidence:maxFaceConfidence:minFaceCaptureQuality:maxFaceCaptureQuality:minDocumentSize:maxDocumentSize:minDocumentRotation:maxDocumentRotation:minDocumentSkew:maxDocumentSkew:maxLeftDrift:maxRightDrift:maxUpDrift:maxDownDrift:minNumFaces:maxNumFaces:minLuxLevel:maxLuxLevel:pdf417Detected:isAAMVACompliant:issuerNumber:complexSignals:ocrKeywords:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, int a10, char a11, int a12, char a13, int a14, char a15, int a16, char a17, int a18, char a19, int a20,char a21,int a22,char a23,int a24,char a25,int a26,char a27,int a28,char a29,int a30,char a31,int a32,char a33,int a34,char a35,int a36,char a37,int a38,char a39,int a40,char a41,int a42,char a43,int a44,char a45,int a46,char a47,int a48,char a49,int a50,char a51,int a52,char a53,int a54,char a55,int a56,char a57,int a58,char a59,int a60,char a61,int a62,char a63)
{
  *(_WORD *)(a9 + 261) = v100;
  *(_WORD *)(a9 + 269) = v98;
  *(_WORD *)(a9 + 277) = v96;
  *(_WORD *)(a9 + 285) = v94;
  *(_WORD *)(a9 + 293) = v92;
  *(_WORD *)(a9 + 301) = v90;
  *(_WORD *)(a9 + 309) = v88;
  *(_WORD *)(a9 + 317) = v86;
  *(_DWORD *)(a9 + 332) = *(_DWORD *)&v85[3];
  *(_DWORD *)(a9 + 329) = *(_DWORD *)v85;
  *(_DWORD *)(a9 + 348) = *(_DWORD *)&v84[3];
  *(_DWORD *)(a9 + 345) = *(_DWORD *)v84;
  *(_DWORD *)(a9 + 364) = *(_DWORD *)&v83[3];
  *(_DWORD *)(a9 + 361) = *(_DWORD *)v83;
  *(_DWORD *)a9 = a1;
  *(unsigned char *)(a9 + 4) = BYTE4(a1) & 1;
  *(unsigned char *)(a9 + 7) = v165;
  *(_WORD *)(a9 + 5) = v164;
  *(_DWORD *)(a9 + 8) = a2;
  *(unsigned char *)(a9 + 12) = BYTE4(a2) & 1;
  *(unsigned char *)(a9 + 15) = v163;
  *(_WORD *)(a9 + 13) = v162;
  *(_DWORD *)(a9 + 16) = a3;
  *(unsigned char *)(a9 + 20) = BYTE4(a3) & 1;
  *(unsigned char *)(a9 + 23) = v161;
  *(_WORD *)(a9 + 21) = v160;
  *(_DWORD *)(a9 + 24) = a4;
  *(unsigned char *)(a9 + 28) = BYTE4(a4) & 1;
  *(unsigned char *)(a9 + 31) = v159;
  *(_WORD *)(a9 + 29) = v158;
  *(_DWORD *)(a9 + 32) = a5;
  *(unsigned char *)(a9 + 36) = BYTE4(a5) & 1;
  *(unsigned char *)(a9 + 39) = v157;
  *(_WORD *)(a9 + 37) = v156;
  *(_DWORD *)(a9 + 40) = a6;
  *(unsigned char *)(a9 + 44) = BYTE4(a6) & 1;
  *(unsigned char *)(a9 + 47) = v155;
  *(_WORD *)(a9 + 45) = v154;
  *(_DWORD *)(a9 + 48) = a7;
  *(unsigned char *)(a9 + 52) = BYTE4(a7) & 1;
  *(unsigned char *)(a9 + 55) = v153;
  *(_WORD *)(a9 + 53) = v152;
  *(_DWORD *)(a9 + 56) = a8;
  *(unsigned char *)(a9 + 60) = BYTE4(a8) & 1;
  *(unsigned char *)(a9 + 63) = v151;
  *(_WORD *)(a9 + 61) = v150;
  *(unsigned char *)(a9 + 68) = 1;
  *(unsigned char *)(a9 + 71) = v149;
  *(_WORD *)(a9 + 69) = v148;
  *(unsigned char *)(a9 + 76) = 1;
  *(unsigned char *)(a9 + 79) = v147;
  *(_WORD *)(a9 + 77) = v146;
  *(_DWORD *)(a9 + 80) = a10;
  *(unsigned char *)(a9 + 84) = a11 & 1;
  *(unsigned char *)(a9 + 87) = v145;
  *(_WORD *)(a9 + 85) = v144;
  *(_DWORD *)(a9 + 88) = a12;
  *(unsigned char *)(a9 + 92) = a13 & 1;
  *(unsigned char *)(a9 + 95) = v143;
  *(_WORD *)(a9 + 93) = v142;
  *(_DWORD *)(a9 + 96) = a14;
  *(unsigned char *)(a9 + 100) = a15 & 1;
  *(unsigned char *)(a9 + 103) = v141;
  *(_WORD *)(a9 + 101) = v140;
  *(_DWORD *)(a9 + 104) = a16;
  *(unsigned char *)(a9 + 108) = a17 & 1;
  *(unsigned char *)(a9 + 111) = v139;
  *(_WORD *)(a9 + 109) = v138;
  *(_DWORD *)(a9 + 112) = a18;
  *(unsigned char *)(a9 + 116) = a19 & 1;
  *(unsigned char *)(a9 + 119) = v137;
  *(_WORD *)(a9 + 117) = v136;
  *(_DWORD *)(a9 + 120) = a20;
  *(unsigned char *)(a9 + 124) = a21 & 1;
  *(unsigned char *)(a9 + 127) = v135;
  *(_WORD *)(a9 + 125) = v134;
  *(_DWORD *)(a9 + 128) = a22;
  *(unsigned char *)(a9 + 132) = a23 & 1;
  *(unsigned char *)(a9 + 135) = v133;
  *(_WORD *)(a9 + 133) = v132;
  *(_DWORD *)(a9 + 136) = a24;
  *(unsigned char *)(a9 + 140) = a25 & 1;
  *(unsigned char *)(a9 + 143) = v131;
  *(_WORD *)(a9 + 141) = v130;
  *(_DWORD *)(a9 + 144) = a26;
  *(unsigned char *)(a9 + 148) = a27 & 1;
  *(unsigned char *)(a9 + 151) = v129;
  *(_WORD *)(a9 + 149) = v128;
  *(_DWORD *)(a9 + 152) = a28;
  *(unsigned char *)(a9 + 156) = a29 & 1;
  *(unsigned char *)(a9 + 159) = v127;
  *(_WORD *)(a9 + 157) = v126;
  *(_DWORD *)(a9 + 160) = a30;
  *(unsigned char *)(a9 + 164) = a31 & 1;
  *(unsigned char *)(a9 + 167) = v125;
  *(_WORD *)(a9 + 165) = v124;
  *(_DWORD *)(a9 + 168) = a32;
  *(unsigned char *)(a9 + 172) = a33 & 1;
  *(unsigned char *)(a9 + 175) = v123;
  *(_WORD *)(a9 + 173) = v122;
  *(_DWORD *)(a9 + 176) = a34;
  *(unsigned char *)(a9 + 180) = a35 & 1;
  *(unsigned char *)(a9 + 183) = v121;
  *(_WORD *)(a9 + 181) = v120;
  *(_DWORD *)(a9 + 184) = a36;
  *(unsigned char *)(a9 + 188) = a37 & 1;
  *(unsigned char *)(a9 + 191) = v119;
  *(_WORD *)(a9 + 189) = v118;
  *(_DWORD *)(a9 + 192) = a38;
  *(unsigned char *)(a9 + 196) = a39 & 1;
  *(unsigned char *)(a9 + 199) = v117;
  *(_WORD *)(a9 + 197) = v116;
  *(_DWORD *)(a9 + 200) = a40;
  *(unsigned char *)(a9 + 204) = a41 & 1;
  *(unsigned char *)(a9 + 207) = v115;
  *(_WORD *)(a9 + 205) = v114;
  *(_DWORD *)(a9 + 208) = a42;
  *(unsigned char *)(a9 + 212) = a43 & 1;
  *(unsigned char *)(a9 + 215) = v113;
  *(_WORD *)(a9 + 213) = v112;
  *(_DWORD *)(a9 + 216) = a44;
  *(unsigned char *)(a9 + 220) = a45 & 1;
  *(unsigned char *)(a9 + 223) = v111;
  *(_WORD *)(a9 + 221) = v110;
  *(_DWORD *)(a9 + 224) = a46;
  *(unsigned char *)(a9 + 228) = a47 & 1;
  *(unsigned char *)(a9 + 231) = v109;
  *(_WORD *)(a9 + 229) = v108;
  *(_DWORD *)(a9 + 232) = a48;
  *(unsigned char *)(a9 + 236) = a49 & 1;
  *(unsigned char *)(a9 + 239) = v107;
  *(_WORD *)(a9 + 237) = v106;
  *(_DWORD *)(a9 + 240) = a50;
  *(unsigned char *)(a9 + 244) = a51 & 1;
  *(unsigned char *)(a9 + 247) = v105;
  *(_WORD *)(a9 + 245) = v104;
  *(_DWORD *)(a9 + 248) = a52;
  *(unsigned char *)(a9 + 252) = a53 & 1;
  *(unsigned char *)(a9 + 255) = v103;
  *(_WORD *)(a9 + 253) = v102;
  *(_DWORD *)(a9 + 256) = a54;
  *(unsigned char *)(a9 + 260) = a55 & 1;
  *(unsigned char *)(a9 + 263) = v101;
  *(_DWORD *)(a9 + 264) = a56;
  *(unsigned char *)(a9 + 268) = a57 & 1;
  *(unsigned char *)(a9 + 271) = v99;
  *(_DWORD *)(a9 + 272) = a58;
  *(unsigned char *)(a9 + 276) = a59 & 1;
  *(unsigned char *)(a9 + 279) = v97;
  *(_DWORD *)(a9 + 280) = a60;
  *(unsigned char *)(a9 + 284) = a61 & 1;
  *(unsigned char *)(a9 + 287) = v95;
  *(_DWORD *)(a9 + 288) = a62;
  *(unsigned char *)(a9 + 292) = a63 & 1;
  *(unsigned char *)(a9 + 295) = v93;
  *(_DWORD *)(a9 + 296) = a64;
  *(unsigned char *)(a9 + 300) = a65 & 1;
  *(unsigned char *)(a9 + 303) = v91;
  *(_DWORD *)(a9 + 304) = a66;
  *(unsigned char *)(a9 + 308) = a67 & 1;
  *(unsigned char *)(a9 + 311) = v89;
  *(_DWORD *)(a9 + 312) = a68;
  *(unsigned char *)(a9 + 316) = a69 & 1;
  *(unsigned char *)(a9 + 319) = v87;
  *(void *)(a9 + 320) = a70;
  *(unsigned char *)(a9 + 328) = a71 & 1;
  *(void *)(a9 + 336) = a72;
  *(unsigned char *)(a9 + 344) = a73 & 1;
  *(void *)(a9 + 352) = a74;
  *(unsigned char *)(a9 + 360) = a75 & 1;
  *(void *)(a9 + 368) = a76;
  *(unsigned char *)(a9 + 376) = a77 & 1;
  *(_WORD *)(a9 + 377) = *(_WORD *)((char *)&a77 + 1);
  *(unsigned char *)(a9 + 383) = v82;
  *(_DWORD *)(a9 + 379) = v81;
  *(void *)(a9 + 400) = a79;
  *(void *)(a9 + 408) = a80;
  __n128 result = a78;
  *(_DWORD *)(a9 + 64) = 0;
  *(_DWORD *)(a9 + 72) = 0;
  *(__n128 *)(a9 + 384) = a78;
  return result;
}

uint64_t ImageQualityCriteria.flags.getter()
{
  char v1 = *(unsigned char *)(v0 + 4);
  char v2 = *(unsigned char *)(v0 + 12);
  int v131 = *(unsigned __int8 *)(v0 + 28);
  int v132 = *(unsigned __int8 *)(v0 + 20);
  int v3 = *(unsigned __int8 *)(v0 + 44);
  int v4 = *(unsigned __int8 *)(v0 + 52);
  int v133 = *(unsigned __int8 *)(v0 + 36);
  int v134 = *(unsigned __int8 *)(v0 + 60);
  int v135 = *(unsigned __int8 *)(v0 + 68);
  int v136 = *(unsigned __int8 *)(v0 + 84);
  int v154 = *(unsigned __int8 *)(v0 + 76);
  int v155 = *(unsigned __int8 *)(v0 + 92);
  int v137 = *(unsigned __int8 *)(v0 + 100);
  int v138 = *(unsigned __int8 *)(v0 + 116);
  int v156 = *(unsigned __int8 *)(v0 + 108);
  int v157 = *(unsigned __int8 *)(v0 + 124);
  int v158 = *(unsigned __int8 *)(v0 + 140);
  int v139 = *(unsigned __int8 *)(v0 + 132);
  int v140 = *(unsigned __int8 *)(v0 + 148);
  int v147 = *(unsigned __int8 *)(v0 + 268);
  int v148 = *(unsigned __int8 *)(v0 + 276);
  int v171 = *(unsigned __int8 *)(v0 + 284);
  int v149 = *(unsigned __int8 *)(v0 + 300);
  int v150 = *(unsigned __int8 *)(v0 + 292);
  int v174 = *(unsigned __int8 *)(v0 + 308);
  int v173 = *(unsigned __int8 *)(v0 + 316);
  int v151 = *(unsigned __int8 *)(v0 + 344);
  int v152 = *(unsigned __int8 *)(v0 + 328);
  int v5 = *(unsigned __int8 *)(v0 + 360);
  int v153 = *(unsigned __int8 *)(v0 + 376);
  int v159 = *(unsigned __int8 *)(v0 + 156);
  int v160 = *(unsigned __int8 *)(v0 + 172);
  int v141 = *(unsigned __int8 *)(v0 + 164);
  int v142 = *(unsigned __int8 *)(v0 + 180);
  int v161 = *(unsigned __int8 *)(v0 + 188);
  int v162 = *(unsigned __int8 *)(v0 + 204);
  int v143 = *(unsigned __int8 *)(v0 + 196);
  int v144 = *(unsigned __int8 *)(v0 + 212);
  int v163 = *(unsigned __int8 *)(v0 + 220);
  int v145 = *(unsigned __int8 *)(v0 + 228);
  int v165 = *(unsigned __int8 *)(v0 + 236);
  int v146 = *(unsigned __int8 *)(v0 + 244);
  int v167 = *(unsigned __int8 *)(v0 + 252);
  int v169 = *(unsigned __int8 *)(v0 + 260);
  int v6 = *(unsigned __int8 *)(v0 + 377);
  int v7 = *(unsigned __int8 *)(v0 + 378);
  uint64_t v8 = *(void *)(v0 + 392);
  uint64_t v164 = *(void *)(v0 + 400);
  uint64_t v9 = *(void *)(v0 + 408);
  uint64_t v10 = sub_1D7910BCC(MEMORY[0x1E4FBC860]);
  uint64_t v11 = v10;
  if ((v1 & 1) == 0 && (v2 & 1) == 0)
  {
    uint64_t v12 = *(void *)(v10 + 16);
    uint64_t v13 = qword_1EA8419C8;
    if ((qword_1EA8419C8 & ~v12) == 0)
    {
      uint64_t v14 = v9;
      int v15 = v7;
      int v16 = v5;
      uint64_t v11 = v10;
      goto LABEL_7;
    }
    swift_release();
    type metadata accessor for MetricsFlags();
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = v13 | v12;
    uint64_t v11 = v17;
  }
  uint64_t v14 = v9;
  int v15 = v7;
  int v16 = v5;
LABEL_7:
  int v18 = v4;
  if (((v132 | v131) & 1) == 0)
  {
    uint64_t v19 = v11;
    uint64_t v20 = *(void *)(v11 + 16);
    uint64_t v21 = qword_1EA8419E8;
    if ((qword_1EA8419E8 & ~v20) == 0)
    {
      int v22 = v149;
      uint64_t v11 = v19;
      goto LABEL_12;
    }
    swift_release();
    type metadata accessor for MetricsFlags();
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = v21 | v20;
    uint64_t v11 = v23;
  }
  int v22 = v149;
LABEL_12:
  if (((v133 | v3) & 1) == 0)
  {
    uint64_t v24 = *(void *)(v11 + 16);
    uint64_t v25 = v11;
    uint64_t v26 = qword_1EA841A08;
    if ((qword_1EA841A08 & ~v24) != 0)
    {
      swift_release();
      uint64_t v27 = v26 | v24;
      type metadata accessor for MetricsFlags();
      uint64_t v11 = swift_allocObject();
      *(void *)(v11 + 16) = v27;
    }
    else
    {
      uint64_t v11 = v25;
    }
  }
  if ((v18 | v134))
  {
    uint64_t v28 = v164;
  }
  else
  {
    uint64_t v29 = *(void *)(v11 + 16);
    uint64_t v30 = v11;
    uint64_t v31 = qword_1EA841A28;
    uint64_t v28 = v164;
    if ((qword_1EA841A28 & ~v29) != 0)
    {
      swift_release();
      uint64_t v32 = v31 | v29;
      type metadata accessor for MetricsFlags();
      uint64_t v11 = swift_allocObject();
      *(void *)(v11 + 16) = v32;
    }
    else
    {
      uint64_t v11 = v30;
    }
  }
  if (((v135 | v154) & 1) == 0)
  {
    uint64_t v33 = *(void *)(v11 + 16);
    uint64_t v34 = v11;
    uint64_t v35 = qword_1EA841A48;
    if ((qword_1EA841A48 & ~v33) != 0)
    {
      swift_release();
      uint64_t v36 = v35 | v33;
      type metadata accessor for MetricsFlags();
      uint64_t v11 = swift_allocObject();
      *(void *)(v11 + 16) = v36;
    }
    else
    {
      uint64_t v11 = v34;
    }
  }
  if (((v136 | v155) & 1) == 0)
  {
    uint64_t v37 = *(void *)(v11 + 16);
    uint64_t v38 = v11;
    uint64_t v39 = qword_1EA841A68;
    if ((qword_1EA841A68 & ~v37) != 0)
    {
      swift_release();
      uint64_t v40 = v39 | v37;
      type metadata accessor for MetricsFlags();
      uint64_t v11 = swift_allocObject();
      *(void *)(v11 + 16) = v40;
    }
    else
    {
      uint64_t v11 = v38;
    }
  }
  if (((v137 | v156) & 1) == 0)
  {
    uint64_t v41 = *(void *)(v11 + 16);
    uint64_t v42 = v11;
    uint64_t v43 = qword_1EA841A88;
    if ((qword_1EA841A88 & ~v41) != 0)
    {
      swift_release();
      uint64_t v44 = v43 | v41;
      type metadata accessor for MetricsFlags();
      uint64_t v11 = swift_allocObject();
      *(void *)(v11 + 16) = v44;
    }
    else
    {
      uint64_t v11 = v42;
    }
  }
  if (((v138 | v157) & 1) == 0)
  {
    uint64_t v45 = *(void *)(v11 + 16);
    uint64_t v46 = v11;
    uint64_t v47 = qword_1EA841AA8;
    if ((qword_1EA841AA8 & ~v45) != 0)
    {
      swift_release();
      uint64_t v48 = v47 | v45;
      type metadata accessor for MetricsFlags();
      uint64_t v11 = swift_allocObject();
      *(void *)(v11 + 16) = v48;
    }
    else
    {
      uint64_t v11 = v46;
    }
  }
  if (((v139 | v158) & 1) == 0)
  {
    uint64_t v49 = *(void *)(v11 + 16);
    uint64_t v50 = v11;
    uint64_t v51 = qword_1EA841AC8;
    if ((qword_1EA841AC8 & ~v49) != 0)
    {
      swift_release();
      uint64_t v52 = v51 | v49;
      type metadata accessor for MetricsFlags();
      uint64_t v11 = swift_allocObject();
      *(void *)(v11 + 16) = v52;
    }
    else
    {
      uint64_t v11 = v50;
    }
  }
  if (((v140 | v159) & 1) == 0)
  {
    uint64_t v53 = *(void *)(v11 + 16);
    uint64_t v54 = v11;
    uint64_t v55 = qword_1EA841AE8;
    if ((qword_1EA841AE8 & ~v53) != 0)
    {
      swift_release();
      uint64_t v56 = v55 | v53;
      type metadata accessor for MetricsFlags();
      uint64_t v11 = swift_allocObject();
      *(void *)(v11 + 16) = v56;
    }
    else
    {
      uint64_t v11 = v54;
    }
  }
  if (((v141 | v160) & 1) == 0)
  {
    uint64_t v57 = *(void *)(v11 + 16);
    uint64_t v58 = v11;
    uint64_t v59 = qword_1EA841B08;
    if ((qword_1EA841B08 & ~v57) != 0)
    {
      swift_release();
      uint64_t v60 = v59 | v57;
      type metadata accessor for MetricsFlags();
      uint64_t v11 = swift_allocObject();
      *(void *)(v11 + 16) = v60;
    }
    else
    {
      uint64_t v11 = v58;
    }
  }
  if (((v142 | v161) & 1) == 0)
  {
    uint64_t v61 = *(void *)(v11 + 16);
    uint64_t v62 = v11;
    uint64_t v63 = qword_1EA841B28;
    if ((qword_1EA841B28 & ~v61) != 0)
    {
      swift_release();
      uint64_t v64 = v63 | v61;
      type metadata accessor for MetricsFlags();
      uint64_t v11 = swift_allocObject();
      *(void *)(v11 + 16) = v64;
    }
    else
    {
      uint64_t v11 = v62;
    }
  }
  if (((v143 | v162) & 1) == 0)
  {
    uint64_t v65 = *(void *)(v11 + 16);
    uint64_t v66 = v11;
    uint64_t v67 = qword_1EA841B48;
    if ((qword_1EA841B48 & ~v65) != 0)
    {
      swift_release();
      uint64_t v68 = v67 | v65;
      type metadata accessor for MetricsFlags();
      uint64_t v11 = swift_allocObject();
      *(void *)(v11 + 16) = v68;
    }
    else
    {
      uint64_t v11 = v66;
    }
  }
  if (((v144 | v163) & 1) == 0)
  {
    uint64_t v69 = *(void *)(v11 + 16);
    uint64_t v70 = v11;
    uint64_t v71 = qword_1EA841C28;
    if ((qword_1EA841C28 & ~v69) != 0)
    {
      swift_release();
      uint64_t v72 = v71 | v69;
      type metadata accessor for MetricsFlags();
      uint64_t v11 = swift_allocObject();
      *(void *)(v11 + 16) = v72;
    }
    else
    {
      uint64_t v11 = v70;
    }
  }
  if (((v145 | v165) & 1) == 0)
  {
    uint64_t v73 = *(void *)(v11 + 16);
    uint64_t v74 = v11;
    uint64_t v75 = qword_1EA841B88;
    if ((qword_1EA841B88 & ~v73) != 0)
    {
      swift_release();
      uint64_t v76 = v75 | v73;
      type metadata accessor for MetricsFlags();
      uint64_t v11 = swift_allocObject();
      *(void *)(v11 + 16) = v76;
    }
    else
    {
      uint64_t v11 = v74;
    }
  }
  if (((v146 | v167) & 1) == 0)
  {
    uint64_t v77 = *(void *)(v11 + 16);
    uint64_t v78 = v11;
    uint64_t v79 = qword_1EA841BA8;
    if ((qword_1EA841BA8 & ~v77) != 0)
    {
      swift_release();
      uint64_t v80 = v79 | v77;
      type metadata accessor for MetricsFlags();
      uint64_t v11 = swift_allocObject();
      *(void *)(v11 + 16) = v80;
    }
    else
    {
      uint64_t v11 = v78;
    }
  }
  if (((v169 | v147) & 1) == 0)
  {
    uint64_t v81 = *(void *)(v11 + 16);
    uint64_t v82 = v11;
    uint64_t v83 = qword_1EA841BC8;
    if ((qword_1EA841BC8 & ~v81) != 0)
    {
      swift_release();
      uint64_t v84 = v83 | v81;
      type metadata accessor for MetricsFlags();
      uint64_t v11 = swift_allocObject();
      *(void *)(v11 + 16) = v84;
    }
    else
    {
      uint64_t v11 = v82;
    }
  }
  if (((v148 | v171) & 1) == 0)
  {
    uint64_t v85 = *(void *)(v11 + 16);
    uint64_t v86 = v11;
    uint64_t v87 = qword_1EA841BE8;
    if ((qword_1EA841BE8 & ~v85) == 0)
    {
      int v88 = v150;
      uint64_t v11 = v86;
      goto LABEL_78;
    }
    swift_release();
    uint64_t v89 = v87 | v85;
    type metadata accessor for MetricsFlags();
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v89;
  }
  int v88 = v150;
LABEL_78:
  if ((v88 | v22 | v174 | v173)) {
    goto LABEL_83;
  }
  uint64_t v90 = *(void *)(v11 + 16);
  uint64_t v91 = v11;
  uint64_t v92 = qword_1EA841C08;
  if ((qword_1EA841C08 & ~v90) != 0)
  {
    swift_release();
    uint64_t v93 = v92 | v90;
    type metadata accessor for MetricsFlags();
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v93;
LABEL_83:
    if ((v152 | v151)) {
      goto LABEL_88;
    }
    goto LABEL_84;
  }
  uint64_t v11 = v91;
  if ((v152 | v151))
  {
LABEL_88:
    if ((v16 | v153)) {
      goto LABEL_91;
    }
    goto LABEL_89;
  }
LABEL_84:
  uint64_t v94 = *(void *)(v11 + 16);
  uint64_t v95 = v11;
  uint64_t v96 = qword_1EA841C48;
  if ((qword_1EA841C48 & ~v94) != 0)
  {
    swift_release();
    uint64_t v97 = v96 | v94;
    type metadata accessor for MetricsFlags();
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v97;
    goto LABEL_88;
  }
  uint64_t v11 = v95;
  if ((v16 | v153))
  {
LABEL_91:
    if (v6 == 2) {
      goto LABEL_92;
    }
LABEL_98:
    uint64_t v106 = *(void *)(v11 + 16);
    uint64_t v107 = v11;
    uint64_t v108 = qword_1EA841CA8;
    if ((qword_1EA841CA8 & ~v106) != 0)
    {
      swift_release();
      uint64_t v109 = v108 | v106;
      type metadata accessor for MetricsFlags();
      uint64_t v11 = swift_allocObject();
      *(void *)(v11 + 16) = v109;
      if (v15 != 2) {
        goto LABEL_102;
      }
    }
    else
    {
      uint64_t v11 = v107;
      if (v15 != 2) {
        goto LABEL_102;
      }
    }
LABEL_93:
    if (!v8) {
      goto LABEL_106;
    }
    goto LABEL_94;
  }
LABEL_89:
  uint64_t v98 = *(void *)(v11 + 16);
  uint64_t v99 = v11;
  uint64_t v100 = qword_1EA841C68;
  if ((qword_1EA841C68 & ~v98) == 0)
  {
    uint64_t v11 = v99;
    goto LABEL_91;
  }
  swift_release();
  uint64_t v105 = v100 | v98;
  type metadata accessor for MetricsFlags();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v105;
  if (v6 != 2) {
    goto LABEL_98;
  }
LABEL_92:
  if (v15 == 2) {
    goto LABEL_93;
  }
LABEL_102:
  uint64_t v110 = *(void *)(v11 + 16);
  uint64_t v111 = v11;
  uint64_t v112 = qword_1EA841CC8;
  if ((qword_1EA841CC8 & ~v110) != 0)
  {
    swift_release();
    uint64_t v113 = v112 | v110;
    type metadata accessor for MetricsFlags();
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v113;
    if (!v8) {
      goto LABEL_106;
    }
  }
  else
  {
    uint64_t v11 = v111;
    if (!v8) {
      goto LABEL_106;
    }
  }
LABEL_94:
  uint64_t v101 = *(void *)(v11 + 16);
  uint64_t v102 = v11;
  uint64_t v103 = qword_1EA841D28;
  if ((qword_1EA841D28 & ~v101) != 0)
  {
    swift_release();
    uint64_t v104 = v103 | v101;
    type metadata accessor for MetricsFlags();
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v104;
  }
  else
  {
    uint64_t v11 = v102;
  }
LABEL_106:
  if (v14)
  {
    uint64_t v114 = *(void *)(v11 + 16);
    uint64_t v115 = v11;
    uint64_t v116 = qword_1EA841E08;
    if ((qword_1EA841E08 & ~v114) != 0)
    {
      swift_release();
      uint64_t v117 = v116 | v114;
      type metadata accessor for MetricsFlags();
      uint64_t v11 = swift_allocObject();
      *(void *)(v11 + 16) = v117;
      if (!v28) {
        return v11;
      }
      goto LABEL_112;
    }
    uint64_t v11 = v115;
  }
  if (!v28) {
    return v11;
  }
LABEL_112:
  uint64_t v168 = *(void *)(v28 + 16);
  if (v168)
  {
    uint64_t v166 = v28 + 32;
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v168; ++i)
    {
      char v119 = (uint64_t *)(v166 + 32 * i);
      uint64_t v120 = v119[3];
      uint64_t v121 = *(void *)(v120 + 16);
      if (v121)
      {
        uint64_t v175 = i;
        uint64_t v122 = *v119;
        unint64_t v123 = v119[1];
        swift_bridgeObjectRetain_n();
        unint64_t v170 = v123;
        uint64_t v172 = v122;
        sub_1D7861414(v122, v123);
        swift_bridgeObjectRetain();
        __int16 v124 = (unsigned char *)(v120 + 48);
        do
        {
          if (*v124 == 2)
          {
            unint64_t v126 = *((void *)v124 - 2);
            uint64_t v125 = *((void *)v124 - 1);
            if (v126 <= 0x19)
            {
              sub_1D7953984(*((void *)v124 - 2), *((void *)v124 - 1), 2u);
              sub_1D7953984(v126, v125, 2u);
              type metadata accessor for MetricsFlags();
              uint64_t inited = swift_initStaticObject();
              sub_1D795399C(v126, v125, 2u);
              uint64_t v128 = *(void *)(v11 + 16);
              uint64_t v129 = *(void *)(inited + 16);
              swift_release();
              if ((v129 & ~v128) != 0)
              {
                swift_release();
                sub_1D795399C(v126, v125, 2u);
                uint64_t v11 = swift_allocObject();
                *(void *)(v11 + 16) = v129 | v128;
              }
              else
              {
                sub_1D795399C(v126, v125, 2u);
              }
            }
          }
          v124 += 24;
          --v121;
        }
        while (v121);
        swift_bridgeObjectRelease_n();
        sub_1D78C2774(v172, v170);
        swift_bridgeObjectRelease();
        uint64_t i = v175;
      }
    }
    swift_bridgeObjectRelease();
  }
  return v11;
}

uint64_t sub_1D7948878(char a1)
{
  uint64_t result = 0x7272756C426E696DLL;
  switch(a1)
  {
    case 1:
      return 0x7272756C4278616DLL;
    case 2:
      unsigned int v3 = 1164863853;
      return v3 | 0x736F707800000000;
    case 3:
      unsigned int v3 = 1165517165;
      return v3 | 0x736F707800000000;
    case 4:
      return 0xD000000000000011;
    case 5:
      return 0xD000000000000011;
    case 6:
      return 0xD000000000000013;
    case 7:
      return 0xD000000000000013;
    case 8:
      return 0xD000000000000014;
    case 9:
      return 0xD000000000000014;
    case 10:
      unsigned int v4 = 1215195501;
      return v4 | 0x5064616500000000;
    case 11:
      unsigned int v4 = 1215848813;
      return v4 | 0x5064616500000000;
    case 12:
      unsigned int v5 = 1215195501;
      return v5 | 0x5264616500000000;
    case 13:
      unsigned int v5 = 1215848813;
      return v5 | 0x5264616500000000;
    case 14:
      unsigned int v6 = 1215195501;
      return v6 | 0x5964616500000000;
    case 15:
      unsigned int v6 = 1215848813;
      return v6 | 0x5964616500000000;
    case 16:
    case 17:
    case 22:
    case 23:
    case 24:
    case 25:
    case 28:
    case 29:
      return 0xD000000000000015;
    case 18:
      return 0xD000000000000019;
    case 19:
      return 0xD000000000000019;
    case 20:
      return 0xD000000000000017;
    case 21:
      return 0xD000000000000017;
    case 26:
      return 0xD000000000000011;
    case 27:
      return 0xD000000000000011;
    case 30:
      unsigned int v7 = 1148086637;
      return v7 | 0x6D75636F00000000;
    case 31:
      unsigned int v7 = 1148739949;
      return v7 | 0x6D75636F00000000;
    case 32:
      return 0xD000000000000013;
    case 33:
      return 0xD000000000000013;
    case 34:
      unsigned int v8 = 1148086637;
      return v8 | 0x6D75636F00000000;
    case 35:
      unsigned int v8 = 1148739949;
      return v8 | 0x6D75636F00000000;
    case 36:
      return 0x447466654C78616DLL;
    case 37:
      return 0x746867695278616DLL;
    case 38:
      return 0x697244705578616DLL;
    case 39:
      return 0x446E776F4478616DLL;
    case 40:
      unsigned int v9 = 1315858797;
      return v9 | 0x61466D7500000000;
    case 41:
      unsigned int v9 = 1316512109;
      return v9 | 0x61466D7500000000;
    case 42:
      unsigned int v10 = 1282304365;
      goto LABEL_46;
    case 43:
      unsigned int v10 = 1282957677;
LABEL_46:
      uint64_t result = v10 | 0x654C787500000000;
      break;
    case 44:
      uint64_t result = 0x6544373134666470;
      break;
    case 45:
      uint64_t result = 0xD000000000000010;
      break;
    case 46:
      uint64_t result = 0x754E726575737369;
      break;
    case 47:
      uint64_t result = 0x5378656C706D6F63;
      break;
    case 48:
      uint64_t result = 0x6F7779654B72636FLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D7948DF4()
{
  return sub_1D7948878(*v0);
}

uint64_t sub_1D7948DFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1D795CB80(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D7948E24(uint64_t a1)
{
  unint64_t v2 = sub_1D79539B4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D7948E60(uint64_t a1)
{
  unint64_t v2 = sub_1D79539B4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ImageQualityCriteria.encode(to:)(void *a1)
{
  uint64_t v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844A18);
  uint64_t v111 = *(void *)(v114 - 8);
  MEMORY[0x1F4188790](v114, v3, v4, v5, v6, v7, v8, v9);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = (char *)*v1;
  LODWORD(v110) = *((unsigned __int8 *)v1 + 4);
  uint64_t v109 = v1[2];
  int v116 = *((unsigned __int8 *)v1 + 12);
  uint64_t v108 = v1[4];
  int v12 = *((unsigned __int8 *)v1 + 20);
  uint64_t v105 = v1[6];
  int v106 = *((unsigned __int8 *)v1 + 28);
  int v107 = v12;
  uint64_t v104 = v1[8];
  int v103 = *((unsigned __int8 *)v1 + 36);
  uint64_t v102 = v1[10];
  int v101 = *((unsigned __int8 *)v1 + 44);
  uint64_t v100 = v1[12];
  int v99 = *((unsigned __int8 *)v1 + 52);
  uint64_t v98 = v1[14];
  int v97 = *((unsigned __int8 *)v1 + 60);
  uint64_t v96 = v1[16];
  int v95 = *((unsigned __int8 *)v1 + 68);
  uint64_t v94 = v1[18];
  int v56 = *((unsigned __int8 *)v1 + 268);
  int v59 = *((unsigned __int8 *)v1 + 276);
  int v61 = *((unsigned __int8 *)v1 + 284);
  int v63 = *((unsigned __int8 *)v1 + 292);
  int v65 = *((unsigned __int8 *)v1 + 300);
  int v67 = *((unsigned __int8 *)v1 + 308);
  int v69 = *((unsigned __int8 *)v1 + 316);
  int v71 = *((unsigned __int8 *)v1 + 328);
  int v73 = *((unsigned __int8 *)v1 + 344);
  int v75 = *((unsigned __int8 *)v1 + 360);
  int v77 = *((unsigned __int8 *)v1 + 376);
  int v93 = *((unsigned __int8 *)v1 + 76);
  uint64_t v92 = v1[20];
  int v91 = *((unsigned __int8 *)v1 + 84);
  uint64_t v90 = v1[22];
  int v89 = *((unsigned __int8 *)v1 + 92);
  uint64_t v88 = v1[24];
  int v87 = *((unsigned __int8 *)v1 + 100);
  uint64_t v86 = v1[26];
  int v85 = *((unsigned __int8 *)v1 + 108);
  uint64_t v84 = v1[28];
  int v83 = *((unsigned __int8 *)v1 + 116);
  uint64_t v82 = v1[30];
  int v81 = *((unsigned __int8 *)v1 + 124);
  uint64_t v80 = v1[32];
  int v79 = *((unsigned __int8 *)v1 + 132);
  uint64_t v25 = v1[34];
  int v24 = *((unsigned __int8 *)v1 + 140);
  uint64_t v27 = v1[36];
  int v26 = *((unsigned __int8 *)v1 + 148);
  uint64_t v29 = v1[38];
  int v28 = *((unsigned __int8 *)v1 + 156);
  uint64_t v31 = v1[40];
  int v30 = *((unsigned __int8 *)v1 + 164);
  uint64_t v33 = v1[42];
  int v32 = *((unsigned __int8 *)v1 + 172);
  uint64_t v35 = v1[44];
  int v34 = *((unsigned __int8 *)v1 + 180);
  uint64_t v37 = v1[46];
  int v36 = *((unsigned __int8 *)v1 + 188);
  uint64_t v39 = v1[48];
  int v38 = *((unsigned __int8 *)v1 + 196);
  uint64_t v41 = v1[50];
  int v40 = *((unsigned __int8 *)v1 + 204);
  uint64_t v43 = v1[52];
  int v42 = *((unsigned __int8 *)v1 + 212);
  uint64_t v45 = v1[54];
  int v44 = *((unsigned __int8 *)v1 + 220);
  uint64_t v47 = v1[56];
  int v46 = *((unsigned __int8 *)v1 + 228);
  uint64_t v49 = v1[58];
  int v48 = *((unsigned __int8 *)v1 + 236);
  uint64_t v51 = v1[60];
  int v50 = *((unsigned __int8 *)v1 + 244);
  uint64_t v53 = v1[62];
  int v52 = *((unsigned __int8 *)v1 + 252);
  uint64_t v55 = v1[64];
  int v54 = *((unsigned __int8 *)v1 + 260);
  uint64_t v57 = v1[66];
  uint64_t v58 = v1[68];
  uint64_t v60 = v1[70];
  uint64_t v62 = v1[72];
  uint64_t v64 = v1[74];
  uint64_t v66 = v1[76];
  uint64_t v68 = v1[78];
  uint64_t v70 = *((void *)v1 + 40);
  uint64_t v72 = *((void *)v1 + 42);
  uint64_t v74 = *((void *)v1 + 44);
  uint64_t v76 = *((void *)v1 + 46);
  int v78 = *((unsigned __int8 *)v1 + 377);
  uint64_t v13 = *((void *)v1 + 49);
  uint64_t v14 = *((void *)v1 + 50);
  uint64_t v15 = *((void *)v1 + 51);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D79539B4();
  sub_1D7A9D6E8();
  LOBYTE(v115) = 0;
  char v117 = v110;
  uint64_t v16 = v113;
  uint64_t v112 = v11;
  sub_1D7A9D1A8();
  uint64_t v113 = v16;
  if (v16) {
    return (*(uint64_t (**)(char *, uint64_t))(v111 + 8))(v112, v114);
  }
  char v18 = v106;
  char v19 = v107;
  uint64_t v110 = v13;
  uint64_t v20 = v111;
  LOBYTE(v115) = 1;
  char v117 = v116;
  sub_1D7A9D1A8();
  LOBYTE(v115) = 2;
  char v117 = v19;
  sub_1D7A9D1A8();
  LOBYTE(v115) = 3;
  char v117 = v18;
  sub_1D7A9D1A8();
  LOBYTE(v115) = 4;
  char v117 = v103;
  sub_1D7A9D1A8();
  LOBYTE(v115) = 5;
  char v117 = v101;
  sub_1D7A9D1A8();
  LOBYTE(v115) = 6;
  char v117 = v99;
  sub_1D7A9D1A8();
  LOBYTE(v115) = 7;
  char v117 = v97;
  sub_1D7A9D1A8();
  LOBYTE(v115) = 8;
  char v117 = v95;
  sub_1D7A9D1A8();
  uint64_t v113 = 0;
  LOBYTE(v115) = 9;
  char v117 = v93;
  sub_1D7A9D1A8();
  uint64_t v113 = 0;
  LOBYTE(v115) = 10;
  char v117 = v91;
  sub_1D7A9D1A8();
  uint64_t v113 = 0;
  LOBYTE(v115) = 11;
  char v117 = v89;
  sub_1D7A9D1A8();
  uint64_t v113 = 0;
  LOBYTE(v115) = 12;
  char v117 = v87;
  sub_1D7A9D1A8();
  uint64_t v113 = 0;
  LOBYTE(v115) = 13;
  char v117 = v85;
  sub_1D7A9D1A8();
  uint64_t v113 = 0;
  LOBYTE(v115) = 14;
  char v117 = v83;
  sub_1D7A9D1A8();
  uint64_t v113 = 0;
  LOBYTE(v115) = 15;
  char v117 = v81;
  sub_1D7A9D1A8();
  uint64_t v113 = 0;
  LOBYTE(v115) = 16;
  char v117 = v79;
  sub_1D7A9D1A8();
  uint64_t v113 = 0;
  LOBYTE(v115) = 17;
  char v117 = v24;
  sub_1D7A9D1A8();
  uint64_t v113 = 0;
  LOBYTE(v115) = 18;
  char v117 = v26;
  sub_1D7A9D1A8();
  uint64_t v113 = 0;
  LOBYTE(v115) = 19;
  char v117 = v28;
  sub_1D7A9D1A8();
  uint64_t v113 = 0;
  LOBYTE(v115) = 20;
  char v117 = v30;
  sub_1D7A9D1A8();
  uint64_t v113 = 0;
  LOBYTE(v115) = 21;
  char v117 = v32;
  sub_1D7A9D1A8();
  uint64_t v113 = 0;
  LOBYTE(v115) = 22;
  char v117 = v34;
  sub_1D7A9D1A8();
  uint64_t v113 = 0;
  LOBYTE(v115) = 23;
  char v117 = v36;
  sub_1D7A9D1A8();
  uint64_t v113 = 0;
  LOBYTE(v115) = 24;
  char v117 = v38;
  sub_1D7A9D1A8();
  uint64_t v113 = 0;
  LOBYTE(v115) = 25;
  char v117 = v40;
  sub_1D7A9D1A8();
  uint64_t v113 = 0;
  LOBYTE(v115) = 26;
  char v117 = v42;
  sub_1D7A9D1A8();
  uint64_t v113 = 0;
  LOBYTE(v115) = 27;
  char v117 = v44;
  sub_1D7A9D1A8();
  uint64_t v113 = 0;
  LOBYTE(v115) = 28;
  char v117 = v46;
  sub_1D7A9D1A8();
  uint64_t v113 = 0;
  LOBYTE(v115) = 29;
  char v117 = v48;
  sub_1D7A9D1A8();
  uint64_t v113 = 0;
  LOBYTE(v115) = 30;
  char v117 = v50;
  sub_1D7A9D1A8();
  uint64_t v113 = 0;
  LOBYTE(v115) = 31;
  char v117 = v52;
  sub_1D7A9D1A8();
  uint64_t v113 = 0;
  LOBYTE(v115) = 32;
  char v117 = v54;
  sub_1D7A9D1A8();
  uint64_t v113 = 0;
  LOBYTE(v115) = 33;
  char v117 = v56;
  sub_1D7A9D1A8();
  uint64_t v113 = 0;
  LOBYTE(v115) = 34;
  char v117 = v59;
  sub_1D7A9D1A8();
  uint64_t v113 = 0;
  LOBYTE(v115) = 35;
  char v117 = v61;
  sub_1D7A9D1A8();
  uint64_t v113 = 0;
  LOBYTE(v115) = 36;
  char v117 = v63;
  sub_1D7A9D1A8();
  uint64_t v113 = 0;
  LOBYTE(v115) = 37;
  char v117 = v65;
  sub_1D7A9D1A8();
  uint64_t v113 = 0;
  LOBYTE(v115) = 38;
  char v117 = v67;
  sub_1D7A9D1A8();
  uint64_t v113 = 0;
  LOBYTE(v115) = 39;
  char v117 = v69;
  sub_1D7A9D1A8();
  uint64_t v113 = 0;
  LOBYTE(v115) = 40;
  sub_1D7A9D1B8();
  uint64_t v113 = 0;
  LOBYTE(v115) = 41;
  sub_1D7A9D1B8();
  uint64_t v113 = 0;
  LOBYTE(v115) = 42;
  sub_1D7A9D1B8();
  uint64_t v113 = 0;
  LOBYTE(v115) = 43;
  sub_1D7A9D1B8();
  uint64_t v113 = 0;
  LOBYTE(v115) = 44;
  sub_1D7A9D198();
  uint64_t v113 = 0;
  LOBYTE(v115) = 45;
  sub_1D7A9D198();
  uint64_t v113 = 0;
  LOBYTE(v115) = 46;
  sub_1D7A9D188();
  uint64_t v113 = 0;
  uint64_t v115 = v14;
  char v117 = 47;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844A28);
  sub_1D7953C90(&qword_1EA844A30, &qword_1EA844A28, (void (*)(void))sub_1D7953A08);
  uint64_t v21 = v113;
  sub_1D7A9D1C8();
  uint64_t v113 = v21;
  if (!v21)
  {
    uint64_t v115 = v15;
    char v117 = 48;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDF7900);
    sub_1D7919C34(&qword_1EBDF8230);
    uint64_t v22 = v113;
    sub_1D7A9D1C8();
    uint64_t v113 = v22;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v112, v114);
}

uint64_t ImageQualityCriteria.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844A40);
  uint64_t v5 = *(void *)(v103 - 8);
  MEMORY[0x1F4188790](v103, v6, v7, v8, v9, v10, v11, v12);
  uint64_t v14 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v454 = 1;
  char v451 = 1;
  char v448 = 1;
  char v445 = 1;
  char v442 = 1;
  char v439 = 1;
  char v436 = 1;
  char v433 = 1;
  char v430 = 1;
  char v427 = 1;
  char v424 = 1;
  char v421 = 1;
  char v418 = 1;
  char v415 = 1;
  char v412 = 1;
  char v409 = 1;
  char v406 = 1;
  char v403 = 1;
  char v400 = 1;
  char v397 = 1;
  char v394 = 1;
  char v391 = 1;
  char v388 = 1;
  char v385 = 1;
  char v382 = 1;
  char v379 = 1;
  char v376 = 1;
  char v373 = 1;
  char v370 = 1;
  char v367 = 1;
  char v364 = 1;
  char v361 = 1;
  char v358 = 1;
  char v355 = 1;
  char v352 = 1;
  char v349 = 1;
  char v346 = 1;
  char v343 = 1;
  char v340 = 1;
  char v337 = 1;
  char v334 = 1;
  char v332 = 1;
  char v330 = 1;
  char v328 = 1;
  uint64_t v15 = a1[3];
  int v139 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_1D79539B4();
  sub_1D7A9D6A8();
  uint64_t v455 = v2;
  if (v2)
  {
    int v18 = 0;
    int v19 = 0;
    int v20 = 0;
    int v21 = 0;
    int v22 = 0;
    int v23 = 0;
    int v24 = 0;
    unint64_t v138 = 0;
    unint64_t v137 = 0;
    unint64_t v146 = 0;
    unint64_t v145 = 0;
    unint64_t v144 = 0;
    unint64_t v143 = 0;
    unint64_t v142 = 0;
    unint64_t v141 = 0;
    unint64_t v140 = 0;
    unint64_t v133 = 0;
    unint64_t v129 = 0;
    unint64_t v127 = 0;
    unint64_t v125 = 0;
    unint64_t v131 = 0;
    unint64_t v136 = 0;
    unint64_t v135 = 0;
    unint64_t v134 = 0;
    unint64_t v132 = 0;
    unint64_t v130 = 0;
    unint64_t v128 = 0;
    unint64_t v126 = 0;
    unint64_t v124 = 0;
    unint64_t v123 = 0;
    unint64_t v122 = 0;
    unint64_t v121 = 0;
    unint64_t v120 = 0;
    unint64_t v118 = 0;
    unint64_t v119 = 0;
    unint64_t v116 = 0;
    unint64_t v117 = 0;
    unint64_t v114 = 0;
    unint64_t v115 = 0;
    uint64_t v112 = 0;
    unint64_t v113 = 0;
    uint64_t v110 = 0;
    uint64_t v111 = 0;
    uint64_t v109 = 0;
    uint64_t v106 = 0;
    uint64_t v107 = 0;
    uint64_t v105 = 0;
    int v108 = 2;
    int v104 = 2;
  }
  else
  {
    uint64_t v16 = v5;
    uint64_t v17 = a2;
    LOBYTE(v150) = 0;
    unint64_t v102 = sub_1D7A9D0C8();
    uint64_t v26 = HIDWORD(v102) & 1;
    char v454 = BYTE4(v102) & 1;
    LOBYTE(v150) = 1;
    unint64_t v101 = sub_1D7A9D0C8();
    uint64_t v27 = HIDWORD(v101) & 1;
    char v451 = BYTE4(v101) & 1;
    LOBYTE(v150) = 2;
    unint64_t v100 = sub_1D7A9D0C8();
    uint64_t v28 = HIDWORD(v100) & 1;
    char v448 = BYTE4(v100) & 1;
    LOBYTE(v150) = 3;
    unint64_t v29 = sub_1D7A9D0C8();
    uint64_t v98 = v27;
    unint64_t v99 = v29;
    uint64_t v30 = HIDWORD(v29) & 1;
    char v445 = BYTE4(v29) & 1;
    LOBYTE(v150) = 4;
    unint64_t v31 = sub_1D7A9D0C8();
    uint64_t v96 = v30;
    unint64_t v97 = v31;
    uint64_t v32 = HIDWORD(v31) & 1;
    char v442 = BYTE4(v31) & 1;
    LOBYTE(v150) = 5;
    unint64_t v33 = sub_1D7A9D0C8();
    uint64_t v94 = v32;
    unint64_t v95 = v33;
    uint64_t v34 = HIDWORD(v33) & 1;
    char v439 = BYTE4(v33) & 1;
    LOBYTE(v150) = 6;
    unint64_t v35 = sub_1D7A9D0C8();
    uint64_t v92 = v34;
    unint64_t v93 = v35;
    uint64_t v36 = HIDWORD(v35) & 1;
    char v436 = BYTE4(v35) & 1;
    LOBYTE(v150) = 7;
    unint64_t v37 = sub_1D7A9D0C8();
    uint64_t v455 = 0;
    unint64_t v138 = v37;
    uint64_t v91 = HIDWORD(v37) & 1;
    char v433 = BYTE4(v37) & 1;
    LOBYTE(v150) = 8;
    unint64_t v38 = sub_1D7A9D0C8();
    uint64_t v455 = 0;
    unint64_t v137 = v38;
    uint64_t v90 = HIDWORD(v38) & 1;
    char v430 = BYTE4(v38) & 1;
    LOBYTE(v150) = 9;
    unint64_t v146 = sub_1D7A9D0C8();
    uint64_t v455 = 0;
    uint64_t v89 = HIDWORD(v146) & 1;
    char v427 = BYTE4(v146) & 1;
    LOBYTE(v150) = 10;
    unint64_t v145 = sub_1D7A9D0C8();
    uint64_t v455 = 0;
    uint64_t v88 = HIDWORD(v145) & 1;
    char v424 = BYTE4(v145) & 1;
    LOBYTE(v150) = 11;
    unint64_t v144 = sub_1D7A9D0C8();
    uint64_t v455 = 0;
    uint64_t v87 = HIDWORD(v144) & 1;
    char v421 = BYTE4(v144) & 1;
    LOBYTE(v150) = 12;
    unint64_t v143 = sub_1D7A9D0C8();
    uint64_t v455 = 0;
    uint64_t v86 = HIDWORD(v143) & 1;
    char v418 = BYTE4(v143) & 1;
    LOBYTE(v150) = 13;
    unint64_t v142 = sub_1D7A9D0C8();
    uint64_t v455 = 0;
    uint64_t v85 = HIDWORD(v142) & 1;
    char v415 = BYTE4(v142) & 1;
    LOBYTE(v150) = 14;
    unint64_t v141 = sub_1D7A9D0C8();
    uint64_t v455 = 0;
    uint64_t v84 = HIDWORD(v141) & 1;
    char v412 = BYTE4(v141) & 1;
    LOBYTE(v150) = 15;
    unint64_t v140 = sub_1D7A9D0C8();
    uint64_t v455 = 0;
    uint64_t v83 = HIDWORD(v140) & 1;
    char v409 = BYTE4(v140) & 1;
    LOBYTE(v150) = 16;
    unint64_t v133 = sub_1D7A9D0C8();
    uint64_t v455 = 0;
    uint64_t v82 = HIDWORD(v133) & 1;
    char v406 = BYTE4(v133) & 1;
    LOBYTE(v150) = 17;
    unint64_t v129 = sub_1D7A9D0C8();
    uint64_t v455 = 0;
    uint64_t v81 = HIDWORD(v129) & 1;
    char v403 = BYTE4(v129) & 1;
    LOBYTE(v150) = 18;
    unint64_t v127 = sub_1D7A9D0C8();
    uint64_t v455 = 0;
    uint64_t v80 = HIDWORD(v127) & 1;
    char v400 = BYTE4(v127) & 1;
    LOBYTE(v150) = 19;
    unint64_t v125 = sub_1D7A9D0C8();
    uint64_t v455 = 0;
    uint64_t v79 = HIDWORD(v125) & 1;
    char v397 = BYTE4(v125) & 1;
    LOBYTE(v150) = 20;
    unint64_t v131 = sub_1D7A9D0C8();
    uint64_t v455 = 0;
    uint64_t v78 = HIDWORD(v131) & 1;
    char v394 = BYTE4(v131) & 1;
    LOBYTE(v150) = 21;
    unint64_t v136 = sub_1D7A9D0C8();
    uint64_t v455 = 0;
    uint64_t v77 = HIDWORD(v136) & 1;
    char v391 = BYTE4(v136) & 1;
    LOBYTE(v150) = 22;
    unint64_t v135 = sub_1D7A9D0C8();
    uint64_t v455 = 0;
    uint64_t v76 = HIDWORD(v135) & 1;
    char v388 = BYTE4(v135) & 1;
    LOBYTE(v150) = 23;
    unint64_t v134 = sub_1D7A9D0C8();
    uint64_t v455 = 0;
    uint64_t v75 = HIDWORD(v134) & 1;
    char v385 = BYTE4(v134) & 1;
    LOBYTE(v150) = 24;
    unint64_t v132 = sub_1D7A9D0C8();
    uint64_t v455 = 0;
    uint64_t v74 = HIDWORD(v132) & 1;
    char v382 = BYTE4(v132) & 1;
    LOBYTE(v150) = 25;
    unint64_t v130 = sub_1D7A9D0C8();
    uint64_t v455 = 0;
    uint64_t v73 = HIDWORD(v130) & 1;
    char v379 = BYTE4(v130) & 1;
    LOBYTE(v150) = 26;
    unint64_t v128 = sub_1D7A9D0C8();
    uint64_t v455 = 0;
    uint64_t v72 = HIDWORD(v128) & 1;
    char v376 = BYTE4(v128) & 1;
    LOBYTE(v150) = 27;
    unint64_t v126 = sub_1D7A9D0C8();
    uint64_t v455 = 0;
    uint64_t v71 = HIDWORD(v126) & 1;
    char v373 = BYTE4(v126) & 1;
    LOBYTE(v150) = 28;
    unint64_t v124 = sub_1D7A9D0C8();
    uint64_t v455 = 0;
    uint64_t v70 = HIDWORD(v124) & 1;
    char v370 = BYTE4(v124) & 1;
    LOBYTE(v150) = 29;
    unint64_t v123 = sub_1D7A9D0C8();
    uint64_t v455 = 0;
    uint64_t v69 = HIDWORD(v123) & 1;
    char v367 = BYTE4(v123) & 1;
    LOBYTE(v150) = 30;
    unint64_t v122 = sub_1D7A9D0C8();
    uint64_t v455 = 0;
    uint64_t v68 = HIDWORD(v122) & 1;
    char v364 = BYTE4(v122) & 1;
    LOBYTE(v150) = 31;
    unint64_t v121 = sub_1D7A9D0C8();
    uint64_t v455 = 0;
    uint64_t v67 = HIDWORD(v121) & 1;
    char v361 = BYTE4(v121) & 1;
    LOBYTE(v150) = 32;
    unint64_t v120 = sub_1D7A9D0C8();
    uint64_t v455 = 0;
    uint64_t v66 = HIDWORD(v120) & 1;
    char v358 = BYTE4(v120) & 1;
    LOBYTE(v150) = 33;
    unint64_t v119 = sub_1D7A9D0C8();
    uint64_t v455 = 0;
    uint64_t v65 = HIDWORD(v119) & 1;
    char v355 = BYTE4(v119) & 1;
    LOBYTE(v150) = 34;
    unint64_t v118 = sub_1D7A9D0C8();
    uint64_t v455 = 0;
    uint64_t v64 = HIDWORD(v118) & 1;
    char v352 = BYTE4(v118) & 1;
    LOBYTE(v150) = 35;
    unint64_t v117 = sub_1D7A9D0C8();
    uint64_t v455 = 0;
    uint64_t v63 = HIDWORD(v117) & 1;
    char v349 = BYTE4(v117) & 1;
    LOBYTE(v150) = 36;
    unint64_t v116 = sub_1D7A9D0C8();
    uint64_t v455 = 0;
    uint64_t v62 = HIDWORD(v116) & 1;
    char v346 = BYTE4(v116) & 1;
    LOBYTE(v150) = 37;
    unint64_t v115 = sub_1D7A9D0C8();
    uint64_t v455 = 0;
    uint64_t v61 = HIDWORD(v115) & 1;
    char v343 = BYTE4(v115) & 1;
    LOBYTE(v150) = 38;
    unint64_t v114 = sub_1D7A9D0C8();
    uint64_t v455 = 0;
    uint64_t v60 = HIDWORD(v114) & 1;
    char v340 = BYTE4(v114) & 1;
    LOBYTE(v150) = 39;
    unint64_t v113 = sub_1D7A9D0C8();
    uint64_t v455 = 0;
    uint64_t v58 = HIDWORD(v113) & 1;
    char v337 = BYTE4(v113) & 1;
    LOBYTE(v150) = 40;
    uint64_t v112 = sub_1D7A9D0D8();
    int v59 = v39;
    uint64_t v455 = 0;
    char v334 = v39 & 1;
    LOBYTE(v150) = 41;
    uint64_t v111 = sub_1D7A9D0D8();
    int v57 = v40;
    uint64_t v455 = 0;
    char v332 = v40 & 1;
    LOBYTE(v150) = 42;
    uint64_t v110 = sub_1D7A9D0D8();
    int v56 = v41;
    uint64_t v455 = 0;
    char v330 = v41 & 1;
    LOBYTE(v150) = 43;
    uint64_t v109 = sub_1D7A9D0D8();
    int v55 = v42;
    uint64_t v455 = 0;
    char v328 = v42 & 1;
    LOBYTE(v150) = 44;
    int v108 = sub_1D7A9D0B8();
    uint64_t v455 = 0;
    LOBYTE(v150) = 45;
    int v104 = sub_1D7A9D0B8();
    uint64_t v455 = 0;
    LOBYTE(v150) = 46;
    uint64_t v43 = sub_1D7A9D0A8();
    uint64_t v106 = v44;
    uint64_t v107 = v43;
    uint64_t v455 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844A28);
    LOBYTE(v147[0]) = 47;
    sub_1D7953C90(&qword_1EA844A48, &qword_1EA844A28, (void (*)(void))sub_1D7953AA4);
    swift_bridgeObjectRetain();
    uint64_t v45 = v455;
    sub_1D7A9D0E8();
    uint64_t v455 = v45;
    if (v45)
    {
      (*(void (**)(char *, uint64_t))(v16 + 8))(v14, v103);
      swift_bridgeObjectRelease();
      uint64_t v105 = 0;
    }
    else
    {
      uint64_t v46 = v150;
      uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDF7900);
      char v148 = 48;
      sub_1D7919C34(&qword_1EBDF7A30);
      uint64_t v105 = v46;
      swift_bridgeObjectRetain();
      uint64_t v47 = v455;
      sub_1D7A9D0E8();
      uint64_t v455 = v47;
      if (!v47)
      {
        (*(void (**)(char *, uint64_t))(v16 + 8))(v14, v103);
        uint64_t v103 = v149;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        BYTE4(v147[0]) = v26;
        BYTE4(v147[1]) = v98;
        BYTE4(v147[2]) = v28;
        BYTE4(v147[3]) = v96;
        BYTE4(v147[4]) = v94;
        BYTE4(v147[5]) = v92;
        BYTE4(v147[6]) = v36;
        BYTE4(v147[7]) = v91;
        BYTE4(v147[8]) = v90;
        BYTE4(v147[9]) = v89;
        BYTE4(v147[10]) = v88;
        BYTE4(v147[11]) = v87;
        BYTE4(v147[12]) = v86;
        BYTE4(v147[13]) = v85;
        LODWORD(v147[0]) = v102;
        LODWORD(v147[1]) = v101;
        LODWORD(v147[2]) = v100;
        LODWORD(v147[3]) = v99;
        LODWORD(v147[4]) = v97;
        LODWORD(v147[5]) = v95;
        LODWORD(v147[6]) = v93;
        LODWORD(v147[7]) = v138;
        LODWORD(v147[8]) = v137;
        LODWORD(v147[9]) = v146;
        LODWORD(v147[10]) = v145;
        LODWORD(v147[11]) = v144;
        LODWORD(v147[12]) = v143;
        LODWORD(v147[13]) = v142;
        LODWORD(v147[14]) = v141;
        BYTE4(v147[14]) = v84;
        LODWORD(v147[15]) = v140;
        BYTE4(v147[15]) = v83;
        LODWORD(v147[16]) = v133;
        BYTE4(v147[16]) = v82;
        LODWORD(v147[17]) = v129;
        BYTE4(v147[17]) = v81;
        int v48 = v127;
        LODWORD(v147[18]) = v127;
        BYTE4(v147[18]) = v80;
        int v49 = v125;
        LODWORD(v147[19]) = v125;
        BYTE4(v147[19]) = v79;
        int v50 = v131;
        LODWORD(v147[20]) = v131;
        BYTE4(v147[20]) = v78;
        LODWORD(v147[21]) = v136;
        BYTE4(v147[21]) = v77;
        LODWORD(v147[22]) = v135;
        BYTE4(v147[22]) = v76;
        LODWORD(v147[23]) = v134;
        BYTE4(v147[23]) = v75;
        LODWORD(v147[24]) = v132;
        BYTE4(v147[24]) = v74;
        LODWORD(v147[25]) = v130;
        BYTE4(v147[25]) = v73;
        LODWORD(v147[26]) = v128;
        BYTE4(v147[26]) = v72;
        LODWORD(v147[27]) = v126;
        BYTE4(v147[27]) = v71;
        LODWORD(v147[28]) = v124;
        BYTE4(v147[28]) = v70;
        LODWORD(v147[29]) = v123;
        BYTE4(v147[29]) = v69;
        LODWORD(v147[30]) = v122;
        BYTE4(v147[30]) = v68;
        LODWORD(v147[31]) = v121;
        BYTE4(v147[31]) = v67;
        LODWORD(v147[32]) = v120;
        BYTE4(v147[32]) = v66;
        LODWORD(v147[33]) = v119;
        BYTE4(v147[33]) = v65;
        LODWORD(v147[34]) = v118;
        BYTE4(v147[34]) = v64;
        LODWORD(v147[35]) = v117;
        BYTE4(v147[35]) = v63;
        LODWORD(v147[36]) = v116;
        BYTE4(v147[36]) = v62;
        LODWORD(v147[37]) = v115;
        BYTE4(v147[37]) = v61;
        LODWORD(v147[38]) = v114;
        BYTE4(v147[38]) = v60;
        LODWORD(v147[39]) = v113;
        BYTE4(v147[39]) = v58;
        LOBYTE(v147[41]) = v59 & 1;
        v147[40] = v112;
        v147[42] = v111;
        LOBYTE(v147[43]) = v57 & 1;
        LOBYTE(v147[45]) = v56 & 1;
        v147[44] = v110;
        v147[46] = v109;
        LOBYTE(v147[47]) = v55 & 1;
        BYTE1(v147[47]) = v108;
        BYTE2(v147[47]) = v104;
        uint64_t v51 = v106;
        v147[48] = v107;
        v147[49] = v106;
        uint64_t v52 = v105;
        v147[50] = v105;
        uint64_t v53 = v103;
        v147[51] = v103;
        sub_1D7953AF8((uint64_t)v147);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        memcpy(v17, v147, 0x1A0uLL);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v139);
        LODWORD(v150) = v102;
        int v151 = v101;
        int v155 = v100;
        int v159 = v99;
        int v163 = v97;
        int v167 = v95;
        int v171 = v93;
        int v175 = v138;
        int v179 = v137;
        int v183 = v146;
        int v187 = v145;
        int v191 = v144;
        int v195 = v143;
        int v199 = v142;
        int v203 = v141;
        int v207 = v140;
        int v211 = v133;
        int v215 = v129;
        int v219 = v48;
        int v223 = v49;
        int v227 = v50;
        BYTE4(v150) = v454;
        *(_WORD *)((char *)&v150 + 5) = v452;
        HIBYTE(v150) = v453;
        char v152 = v451;
        __int16 v153 = v449;
        char v154 = v450;
        char v156 = v448;
        char v158 = v447;
        __int16 v157 = v446;
        char v160 = v445;
        __int16 v161 = v443;
        char v162 = v444;
        char v164 = v442;
        __int16 v165 = v440;
        char v166 = v441;
        char v168 = v439;
        char v170 = v438;
        __int16 v169 = v437;
        char v172 = v436;
        char v174 = v435;
        __int16 v173 = v434;
        char v176 = v433;
        char v178 = v432;
        __int16 v177 = v431;
        char v180 = v430;
        char v182 = v429;
        __int16 v181 = v428;
        char v184 = v427;
        char v186 = v426;
        __int16 v185 = v425;
        char v188 = v424;
        char v190 = v423;
        __int16 v189 = v422;
        char v192 = v421;
        char v194 = v420;
        __int16 v193 = v419;
        char v196 = v418;
        char v198 = v417;
        __int16 v197 = v416;
        char v200 = v415;
        char v202 = v414;
        __int16 v201 = v413;
        char v204 = v412;
        char v206 = v411;
        __int16 v205 = v410;
        char v208 = v409;
        char v210 = v408;
        __int16 v209 = v407;
        char v212 = v406;
        char v214 = v405;
        __int16 v213 = v404;
        char v216 = v403;
        char v218 = v402;
        __int16 v217 = v401;
        char v220 = v400;
        char v222 = v399;
        __int16 v221 = v398;
        char v224 = v397;
        char v226 = v396;
        __int16 v225 = v395;
        char v228 = v394;
        char v230 = v393;
        __int16 v229 = v392;
        int v231 = v136;
        char v232 = v391;
        char v234 = v390;
        __int16 v233 = v389;
        int v235 = v135;
        char v236 = v388;
        char v238 = v387;
        __int16 v237 = v386;
        int v239 = v134;
        char v240 = v385;
        char v242 = v384;
        __int16 v241 = v383;
        int v243 = v132;
        char v244 = v382;
        char v246 = v381;
        __int16 v245 = v380;
        int v247 = v130;
        char v248 = v379;
        char v250 = v378;
        __int16 v249 = v377;
        int v251 = v128;
        char v252 = v376;
        char v254 = v375;
        __int16 v253 = v374;
        int v255 = v126;
        char v256 = v373;
        char v258 = v372;
        __int16 v257 = v371;
        int v259 = v124;
        char v260 = v370;
        char v262 = v369;
        __int16 v261 = v368;
        int v263 = v123;
        char v264 = v367;
        char v266 = v366;
        __int16 v265 = v365;
        int v267 = v122;
        char v268 = v364;
        char v270 = v363;
        __int16 v269 = v362;
        int v271 = v121;
        char v272 = v361;
        char v274 = v360;
        __int16 v273 = v359;
        int v275 = v120;
        char v276 = v358;
        __int16 v277 = v356;
        char v278 = v357;
        int v279 = v119;
        char v280 = v355;
        __int16 v281 = v353;
        char v282 = v354;
        int v283 = v118;
        char v284 = v352;
        __int16 v285 = v350;
        char v286 = v351;
        int v287 = v117;
        char v288 = v349;
        __int16 v289 = v347;
        char v290 = v348;
        int v291 = v116;
        char v292 = v346;
        __int16 v293 = v344;
        char v294 = v345;
        int v295 = v115;
        char v296 = v343;
        __int16 v297 = v341;
        char v298 = v342;
        int v299 = v114;
        char v300 = v340;
        __int16 v301 = v338;
        char v302 = v339;
        int v303 = v113;
        char v304 = v337;
        __int16 v305 = v335;
        char v306 = v336;
        uint64_t v307 = v112;
        char v308 = v334;
        *(_DWORD *)uint64_t v309 = *(_DWORD *)v333;
        *(_DWORD *)&v309[3] = *(_DWORD *)&v333[3];
        uint64_t v310 = v111;
        char v311 = v332;
        *(_DWORD *)uint64_t v312 = *(_DWORD *)v331;
        *(_DWORD *)&v312[3] = *(_DWORD *)&v331[3];
        uint64_t v313 = v110;
        char v314 = v330;
        *(_DWORD *)uint64_t v315 = *(_DWORD *)v329;
        *(_DWORD *)&v315[3] = *(_DWORD *)&v329[3];
        uint64_t v316 = v109;
        char v317 = v328;
        char v318 = v108;
        char v319 = v104;
        int v320 = v326;
        char v321 = v327;
        uint64_t v322 = v107;
        uint64_t v323 = v51;
        uint64_t v324 = v52;
        uint64_t v325 = v53;
        return sub_1D7953A5C((uint64_t)&v150);
      }
      (*(void (**)(char *, uint64_t))(v16 + 8))(v14, v103);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    int v19 = v101;
    int v18 = v102;
    int v21 = v99;
    int v20 = v100;
    int v22 = v97;
    int v23 = v95;
    int v24 = v93;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v139);
  LODWORD(v150) = v18;
  int v151 = v19;
  int v155 = v20;
  int v159 = v21;
  int v163 = v22;
  int v167 = v23;
  int v171 = v24;
  int v175 = v138;
  int v179 = v137;
  int v183 = v146;
  int v187 = v145;
  int v191 = v144;
  int v195 = v143;
  int v199 = v142;
  int v203 = v141;
  int v207 = v140;
  int v211 = v133;
  int v215 = v129;
  int v219 = v127;
  int v223 = v125;
  BYTE4(v150) = v454;
  *(_WORD *)((char *)&v150 + 5) = v452;
  HIBYTE(v150) = v453;
  char v152 = v451;
  __int16 v153 = v449;
  char v154 = v450;
  char v156 = v448;
  char v158 = v447;
  __int16 v157 = v446;
  char v160 = v445;
  __int16 v161 = v443;
  char v162 = v444;
  char v164 = v442;
  __int16 v165 = v440;
  char v166 = v441;
  char v168 = v439;
  char v170 = v438;
  __int16 v169 = v437;
  char v172 = v436;
  char v174 = v435;
  __int16 v173 = v434;
  char v176 = v433;
  char v178 = v432;
  __int16 v177 = v431;
  char v180 = v430;
  char v182 = v429;
  __int16 v181 = v428;
  char v184 = v427;
  char v186 = v426;
  __int16 v185 = v425;
  char v188 = v424;
  char v190 = v423;
  __int16 v189 = v422;
  char v192 = v421;
  char v194 = v420;
  __int16 v193 = v419;
  char v196 = v418;
  char v198 = v417;
  __int16 v197 = v416;
  char v200 = v415;
  char v202 = v414;
  __int16 v201 = v413;
  char v204 = v412;
  char v206 = v411;
  __int16 v205 = v410;
  char v208 = v409;
  char v210 = v408;
  __int16 v209 = v407;
  char v212 = v406;
  char v214 = v405;
  __int16 v213 = v404;
  char v216 = v403;
  char v218 = v402;
  __int16 v217 = v401;
  char v220 = v400;
  char v222 = v399;
  __int16 v221 = v398;
  char v224 = v397;
  char v226 = v396;
  __int16 v225 = v395;
  int v227 = v131;
  char v228 = v394;
  char v230 = v393;
  __int16 v229 = v392;
  int v231 = v136;
  char v232 = v391;
  char v234 = v390;
  __int16 v233 = v389;
  int v235 = v135;
  char v236 = v388;
  char v238 = v387;
  __int16 v237 = v386;
  int v239 = v134;
  char v240 = v385;
  char v242 = v384;
  __int16 v241 = v383;
  int v243 = v132;
  char v244 = v382;
  char v246 = v381;
  __int16 v245 = v380;
  int v247 = v130;
  char v248 = v379;
  char v250 = v378;
  __int16 v249 = v377;
  int v251 = v128;
  char v252 = v376;
  char v254 = v375;
  __int16 v253 = v374;
  int v255 = v126;
  char v256 = v373;
  char v258 = v372;
  __int16 v257 = v371;
  int v259 = v124;
  char v260 = v370;
  char v262 = v369;
  __int16 v261 = v368;
  int v263 = v123;
  char v264 = v367;
  char v266 = v366;
  __int16 v265 = v365;
  int v267 = v122;
  char v268 = v364;
  char v270 = v363;
  __int16 v269 = v362;
  int v271 = v121;
  char v272 = v361;
  char v274 = v360;
  __int16 v273 = v359;
  int v275 = v120;
  char v276 = v358;
  __int16 v277 = v356;
  char v278 = v357;
  int v279 = v119;
  char v280 = v355;
  __int16 v281 = v353;
  char v282 = v354;
  int v283 = v118;
  char v284 = v352;
  __int16 v285 = v350;
  char v286 = v351;
  int v287 = v117;
  char v288 = v349;
  __int16 v289 = v347;
  char v290 = v348;
  int v291 = v116;
  char v292 = v346;
  __int16 v293 = v344;
  char v294 = v345;
  int v295 = v115;
  char v296 = v343;
  __int16 v297 = v341;
  char v298 = v342;
  int v299 = v114;
  char v300 = v340;
  __int16 v301 = v338;
  char v302 = v339;
  int v303 = v113;
  char v304 = v337;
  __int16 v305 = v335;
  char v306 = v336;
  uint64_t v307 = v112;
  char v308 = v334;
  *(_DWORD *)uint64_t v309 = *(_DWORD *)v333;
  *(_DWORD *)&v309[3] = *(_DWORD *)&v333[3];
  uint64_t v310 = v111;
  char v311 = v332;
  *(_DWORD *)uint64_t v312 = *(_DWORD *)v331;
  *(_DWORD *)&v312[3] = *(_DWORD *)&v331[3];
  uint64_t v313 = v110;
  char v314 = v330;
  *(_DWORD *)uint64_t v315 = *(_DWORD *)v329;
  *(_DWORD *)&v315[3] = *(_DWORD *)&v329[3];
  uint64_t v316 = v109;
  char v317 = v328;
  char v318 = v108;
  char v319 = v104;
  int v320 = v326;
  char v321 = v327;
  uint64_t v322 = v107;
  uint64_t v323 = v106;
  uint64_t v324 = v105;
  uint64_t v325 = 0;
  return sub_1D7953A5C((uint64_t)&v150);
}

uint64_t sub_1D794C568@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return ImageQualityCriteria.init(from:)(a1, a2);
}

uint64_t sub_1D794C580(void *a1)
{
  return ImageQualityCriteria.encode(to:)(a1);
}

uint64_t ImageQualityCriteria.debugDescription.getter()
{
  char v48 = *(unsigned char *)(v0 + 4);
  char v47 = *(unsigned char *)(v0 + 12);
  char v46 = *(unsigned char *)(v0 + 20);
  char v45 = *(unsigned char *)(v0 + 28);
  char v44 = *(unsigned char *)(v0 + 36);
  char v43 = *(unsigned char *)(v0 + 44);
  char v42 = *(unsigned char *)(v0 + 52);
  char v41 = *(unsigned char *)(v0 + 60);
  char v40 = *(unsigned char *)(v0 + 68);
  char v39 = *(unsigned char *)(v0 + 76);
  char v38 = *(unsigned char *)(v0 + 84);
  char v37 = *(unsigned char *)(v0 + 92);
  char v36 = *(unsigned char *)(v0 + 100);
  char v35 = *(unsigned char *)(v0 + 108);
  char v34 = *(unsigned char *)(v0 + 116);
  char v33 = *(unsigned char *)(v0 + 124);
  char v32 = *(unsigned char *)(v0 + 132);
  char v31 = *(unsigned char *)(v0 + 140);
  char v30 = *(unsigned char *)(v0 + 148);
  char v29 = *(unsigned char *)(v0 + 156);
  char v28 = *(unsigned char *)(v0 + 164);
  char v27 = *(unsigned char *)(v0 + 172);
  char v26 = *(unsigned char *)(v0 + 180);
  char v25 = *(unsigned char *)(v0 + 188);
  char v24 = *(unsigned char *)(v0 + 196);
  char v23 = *(unsigned char *)(v0 + 204);
  char v22 = *(unsigned char *)(v0 + 212);
  char v21 = *(unsigned char *)(v0 + 220);
  char v20 = *(unsigned char *)(v0 + 228);
  char v19 = *(unsigned char *)(v0 + 236);
  char v18 = *(unsigned char *)(v0 + 244);
  char v17 = *(unsigned char *)(v0 + 252);
  char v16 = *(unsigned char *)(v0 + 260);
  char v15 = *(unsigned char *)(v0 + 268);
  char v14 = *(unsigned char *)(v0 + 276);
  char v13 = *(unsigned char *)(v0 + 284);
  char v12 = *(unsigned char *)(v0 + 292);
  char v11 = *(unsigned char *)(v0 + 300);
  char v10 = *(unsigned char *)(v0 + 308);
  char v9 = *(unsigned char *)(v0 + 316);
  char v8 = *(unsigned char *)(v0 + 328);
  char v7 = *(unsigned char *)(v0 + 344);
  char v6 = *(unsigned char *)(v0 + 360);
  char v5 = *(unsigned char *)(v0 + 376);
  uint64_t v4 = *(unsigned __int8 *)(v0 + 377);
  uint64_t v1 = *(void *)(v0 + 408);
  uint64_t v3 = *(void *)(v0 + 400);
  sub_1D7A9CC48();
  sub_1D7A9C128();
  if ((v48 & 1) == 0) {
    sub_1D7A9C5F8();
  }
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  if ((v47 & 1) == 0) {
    sub_1D7A9C5F8();
  }
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  if ((v46 & 1) == 0) {
    sub_1D7A9C5F8();
  }
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  if ((v45 & 1) == 0) {
    sub_1D7A9C5F8();
  }
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  if ((v44 & 1) == 0) {
    sub_1D7A9C5F8();
  }
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  if ((v43 & 1) == 0) {
    sub_1D7A9C5F8();
  }
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  if ((v42 & 1) == 0) {
    sub_1D7A9C5F8();
  }
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  if ((v41 & 1) == 0) {
    sub_1D7A9C5F8();
  }
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  if ((v40 & 1) == 0) {
    sub_1D7A9C5F8();
  }
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  if ((v39 & 1) == 0) {
    sub_1D7A9C5F8();
  }
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  if ((v38 & 1) == 0) {
    sub_1D7A9C5F8();
  }
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  if ((v37 & 1) == 0) {
    sub_1D7A9C5F8();
  }
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  if ((v36 & 1) == 0) {
    sub_1D7A9C5F8();
  }
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  if ((v35 & 1) == 0) {
    sub_1D7A9C5F8();
  }
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  if ((v34 & 1) == 0) {
    sub_1D7A9C5F8();
  }
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  if ((v33 & 1) == 0) {
    sub_1D7A9C5F8();
  }
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  if ((v32 & 1) == 0) {
    sub_1D7A9C5F8();
  }
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  if ((v31 & 1) == 0) {
    sub_1D7A9C5F8();
  }
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  if ((v30 & 1) == 0) {
    sub_1D7A9C5F8();
  }
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  if ((v29 & 1) == 0) {
    sub_1D7A9C5F8();
  }
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  if ((v28 & 1) == 0) {
    sub_1D7A9C5F8();
  }
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  if ((v27 & 1) == 0) {
    sub_1D7A9C5F8();
  }
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  if ((v26 & 1) == 0) {
    sub_1D7A9C5F8();
  }
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  if ((v25 & 1) == 0) {
    sub_1D7A9C5F8();
  }
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  if ((v24 & 1) == 0) {
    sub_1D7A9C5F8();
  }
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  if ((v23 & 1) == 0) {
    sub_1D7A9C5F8();
  }
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  if ((v22 & 1) == 0) {
    sub_1D7A9C5F8();
  }
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  if ((v21 & 1) == 0) {
    sub_1D7A9C5F8();
  }
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  if ((v20 & 1) == 0) {
    sub_1D7A9C5F8();
  }
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  if ((v19 & 1) == 0) {
    sub_1D7A9C5F8();
  }
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  if ((v18 & 1) == 0) {
    sub_1D7A9C5F8();
  }
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  if ((v17 & 1) == 0) {
    sub_1D7A9C5F8();
  }
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  if ((v16 & 1) == 0) {
    sub_1D7A9C5F8();
  }
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  if ((v15 & 1) == 0) {
    sub_1D7A9C5F8();
  }
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  if ((v14 & 1) == 0) {
    sub_1D7A9C5F8();
  }
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  if ((v13 & 1) == 0) {
    sub_1D7A9C5F8();
  }
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  if ((v12 & 1) == 0) {
    sub_1D7A9C5F8();
  }
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  if ((v11 & 1) == 0) {
    sub_1D7A9C5F8();
  }
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  if ((v10 & 1) == 0) {
    sub_1D7A9C5F8();
  }
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  if ((v9 & 1) == 0) {
    sub_1D7A9C5F8();
  }
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  if ((v8 & 1) == 0)
  {
    sub_1D78CDF34();
    sub_1D7A9CAE8();
  }
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  if ((v7 & 1) == 0)
  {
    sub_1D78CDF34();
    sub_1D7A9CAE8();
  }
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  if ((v6 & 1) == 0)
  {
    sub_1D78CDF34();
    sub_1D7A9CAE8();
  }
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  if ((v5 & 1) == 0)
  {
    sub_1D78CDF34();
    sub_1D7A9CAE8();
  }
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  swift_bridgeObjectRetain();
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  ImageQualityCriteria.flags.getter();
  swift_release();
  sub_1D78CDF34();
  sub_1D7A9CAE8();
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  if (v3) {
    sub_1D7A89B00(v3);
  }
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  if (v1) {
    MEMORY[0x1D947B0F0](v1, MEMORY[0x1E4FBB1A0]);
  }
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  return HIDWORD(v4);
}

uint64_t ImageQualitySettings.criteria.getter@<X0>(void *a1@<X8>)
{
  memcpy(__dst, v1, 0x1A0uLL);
  memcpy(a1, v1, 0x1A0uLL);
  return sub_1D7953AF8((uint64_t)__dst);
}

void *ImageQualitySettings.criteria.setter(const void *a1)
{
  memcpy(__dst, v1, 0x1A0uLL);
  sub_1D7953A5C((uint64_t)__dst);
  return memcpy(v1, a1, 0x1A0uLL);
}

uint64_t (*ImageQualitySettings.criteria.modify())()
{
  return nullsub_1;
}

uint64_t ImageQualitySettings.priority.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ImageQualitySettings.priority.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 416) = a1;
  return result;
}

uint64_t (*ImageQualitySettings.priority.modify())()
{
  return nullsub_1;
}

uint64_t ImageQualitySettings.metrics.getter()
{
  return swift_retain();
}

uint64_t ImageQualitySettings.metrics.setter(uint64_t a1)
{
  uint64_t result = swift_release();
  *(void *)(v1 + 424) = a1;
  return result;
}

uint64_t (*ImageQualitySettings.metrics.modify())()
{
  return nullsub_1;
}

uint64_t ImageQualitySettings.modelVersion.getter()
{
  uint64_t v1 = *(void *)(v0 + 432);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ImageQualitySettings.modelVersion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 432) = a1;
  *(void *)(v2 + 440) = a2;
  return result;
}

uint64_t (*ImageQualitySettings.modelVersion.modify())()
{
  return nullsub_1;
}

void *ImageQualitySettings.init(criteria:priority:metrics:modelVersion:)@<X0>(void *__src@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  uint64_t result = memcpy(a6, __src, 0x1A0uLL);
  a6[52] = a2;
  a6[53] = a3;
  a6[54] = a4;
  a6[55] = a5;
  return result;
}

uint64_t sub_1D794E4BC()
{
  uint64_t result = 0x6169726574697263;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x797469726F697270;
      break;
    case 2:
      uint64_t result = 0x7363697274656DLL;
      break;
    case 3:
      uint64_t result = 0x7265566C65646F6DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D794E550@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1D795DFA8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D794E578(uint64_t a1)
{
  unint64_t v2 = sub_1D7953B40();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D794E5B4(uint64_t a1)
{
  unint64_t v2 = sub_1D7953B40();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ImageQualitySettings.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844A58);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7, v8, v9, v10, v11, v12, v13);
  char v15 = (char *)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = v3[52];
  uint64_t v21 = v3[53];
  uint64_t v22 = v16;
  uint64_t v17 = v3[54];
  v20[1] = v3[55];
  _OWORD v20[2] = v17;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D7953B40();
  sub_1D7A9D6E8();
  memcpy(v23, v3, sizeof(v23));
  char v24 = 0;
  sub_1D7953B94();
  sub_1D7A9D228();
  if (!v2)
  {
    uint64_t v18 = v21;
    v23[0] = v22;
    char v24 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844A70);
    sub_1D7953C90(&qword_1EA844A78, &qword_1EA844A70, (void (*)(void))sub_1D7953BE8);
    sub_1D7A9D228();
    v23[0] = v18;
    char v24 = 2;
    type metadata accessor for MetricsFlags();
    sub_1D7953D50(&qword_1EA844A88);
    sub_1D7A9D228();
    LOBYTE(v23[0]) = 3;
    sub_1D7A9D1D8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v15, v5);
}

uint64_t ImageQualitySettings.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844A90);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7, v8, v9, v10, v11, v12, v13);
  char v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a1[3];
  char v27 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v16);
  sub_1D7953B40();
  sub_1D7A9D6A8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  }
  uint64_t v17 = v6;
  char v26 = a2;
  v32[439] = 0;
  sub_1D7953C3C();
  uint64_t v18 = v5;
  sub_1D7A9D148();
  memcpy(v30, v31, sizeof(v30));
  memcpy(v32, v31, 0x1A0uLL);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844A70);
  LOBYTE(v28[0]) = 1;
  sub_1D7953AF8((uint64_t)v30);
  sub_1D7953C90(&qword_1EA844AA0, &qword_1EA844A70, (void (*)(void))sub_1D7953CFC);
  sub_1D7A9D148();
  uint64_t v19 = v29[0];
  type metadata accessor for MetricsFlags();
  LOBYTE(v28[0]) = 2;
  sub_1D7953D50(&qword_1EA844AB0);
  swift_bridgeObjectRetain();
  sub_1D7A9D148();
  uint64_t v20 = v29[0];
  v32[438] = 3;
  swift_retain();
  uint64_t v21 = sub_1D7A9D0F8();
  uint64_t v23 = v22;
  (*(void (**)(char *, uint64_t))(v17 + 8))(v15, v18);
  memcpy(v28, v30, 0x1A0uLL);
  v28[52] = v19;
  v28[53] = v20;
  v28[54] = v21;
  v28[55] = v23;
  sub_1D7953D94((uint64_t)v28);
  swift_bridgeObjectRelease();
  swift_release();
  sub_1D7953A5C((uint64_t)v30);
  memcpy(v26, v28, 0x1C0uLL);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  memcpy(v29, v32, 0x1A0uLL);
  v29[52] = v19;
  v29[53] = v20;
  v29[54] = v21;
  v29[55] = v23;
  return sub_1D7953E04((uint64_t)v29);
}

uint64_t sub_1D794ECB0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return ImageQualitySettings.init(from:)(a1, a2);
}

uint64_t sub_1D794ECC8(void *a1)
{
  return ImageQualitySettings.encode(to:)(a1);
}

uint64_t ImageQualitySettings.debugDescription.getter()
{
  uint64_t v1 = *(void *)(v0 + 416);
  sub_1D7A9CC48();
  ImageQualityCriteria.debugDescription.getter();
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  sub_1D7A89D1C(v1);
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  sub_1D78CDF34();
  sub_1D7A9CAE8();
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  sub_1D7A9C128();
  swift_bridgeObjectRetain();
  sub_1D7A9C128();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t ImageQualityEvaluator.fallbackPriority.getter()
{
  return swift_bridgeObjectRetain();
}

void *ImageQualityEvaluator.init(criteria:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_1D7953E74(a1, (uint64_t)v4);
  sub_1D7953E74((uint64_t)v4, (uint64_t)__src);
  __src[52] = &unk_1F2F17DD0;
  return memcpy(a2, __src, 0x1A8uLL);
}

void ImageQualityEvaluator.evaluateImage(metrics:priority:)(char *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v172 = sub_1D7A9B5F8();
  uint64_t v8 = *(void *)(v172 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v172, v9, v10, v11, v12, v13, v14, v15);
  uint64_t v18 = (char *)&v134 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16, v19, v20, v21, v22, v23, v24, v25);
  int v171 = (char *)&v134 - v26;
  sub_1D7953E74(v4, (uint64_t)v183);
  uint64_t v27 = *(void *)(v4 + 416);
  sub_1D7953E74((uint64_t)v183, (uint64_t)&v184);
  if (sub_1D7953EDC((uint64_t)&v184) == 1 || !a1)
  {
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v28 = v172;
    uint64_t v29 = __swift_project_value_buffer(v172, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v18, v29, v28);
    char v30 = sub_1D7A9B5D8();
    os_log_type_t v31 = sub_1D7A9C748();
    if (os_log_type_enabled(v30, v31))
    {
      char v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v32 = 0;
      _os_log_impl(&dword_1D7853000, v30, v31, "Criteria not found, image quality checks inconclusive.", v32, 2u);
      MEMORY[0x1D947D740](v32, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v18, v172);
    *(_OWORD *)a3 = xmmword_1D7AABDD0;
  }
  else
  {
    __int16 v169 = a1;
    if (a2 && *(void *)(a2 + 16))
    {
      swift_bridgeObjectRetain();
      uint64_t v27 = a2;
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    uint64_t v33 = v254;
    if (v254)
    {
      char v34 = v169;
      uint64_t v173 = v33;
    }
    else
    {
      char v35 = v169;
      uint64_t v173 = sub_1D7860308(0);
    }
    uint64_t v175 = *(void *)(v27 + 16);
    if (!v175)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_323;
    }
    unint64_t v141 = a3;
    char v160 = &v169[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_issuerNumber];
    __int16 v161 = v245;
    unint64_t v143 = &v169[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_isAAMVACompliant];
    unint64_t v142 = &v169[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_pdf417Detected];
    int v159 = &v169[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_luxLevel];
    char v158 = &v169[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_numFaces];
    char v148 = (float *)&v169[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_downDrift];
    int v147 = (float *)&v169[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_upDrift];
    unint64_t v146 = (float *)&v169[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_rightDrift];
    unint64_t v145 = (float *)&v169[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_leftDrift];
    unint64_t v144 = (float *)&v169[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_documentSkew];
    __int16 v157 = (float *)&v169[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_documentRotation];
    char v156 = (float *)&v169[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_documentSize];
    int v155 = (float *)&v169[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_faceCaptureQuality];
    char v154 = (float *)&v169[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_headgearConfidence];
    __int16 v153 = (float *)&v169[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_facemaskConfidence];
    char v152 = (float *)&v169[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_sunglassesConfidence];
    int v151 = (float *)&v169[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_prescriptionConfidence];
    uint64_t v150 = (float *)&v169[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_blinkingConfidence];
    uint64_t v149 = (float *)&v169[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_headYaw];
    char v36 = &v169[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_headPitch];
    char v37 = &v169[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_headRoll];
    char v38 = &v169[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_faceCenteredRatio];
    *(void *)&long long v176 = v8;
    char v39 = &v169[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_faceToImageRatio];
    char v40 = &v169[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_cardDistortion];
    char v41 = &v169[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_exposure];
    char v42 = &v169[OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_blurriness];
    uint64_t v174 = v27 + 32;
    swift_bridgeObjectRetain();
    unint64_t v134 = v42;
    swift_beginAccess();
    unint64_t v135 = v41;
    swift_beginAccess();
    unint64_t v136 = v40;
    swift_beginAccess();
    unint64_t v137 = v39;
    swift_beginAccess();
    unint64_t v138 = v38;
    swift_beginAccess();
    int v139 = v37;
    swift_beginAccess();
    unint64_t v140 = v36;
    swift_beginAccess();
    swift_beginAccess();
    swift_beginAccess();
    swift_beginAccess();
    swift_beginAccess();
    swift_beginAccess();
    swift_beginAccess();
    swift_beginAccess();
    swift_beginAccess();
    swift_beginAccess();
    swift_beginAccess();
    swift_beginAccess();
    swift_beginAccess();
    swift_beginAccess();
    swift_beginAccess();
    swift_beginAccess();
    swift_beginAccess();
    swift_beginAccess();
    swift_beginAccess();
    swift_beginAccess();
    unint64_t v43 = 0;
    int v167 = (void (**)(char *, uint64_t))(v176 + 8);
    char v168 = (void (**)(char *, uint64_t, uint64_t))(v176 + 16);
    uint64_t v165 = 0x80000001D7AC4D30;
    unint64_t v166 = 0x80000001D7AC4C90;
    int v163 = (void *)(v173 + 56);
    uint64_t v164 = 0x80000001D7AC4CC0;
    uint64_t v162 = v27;
    while (*(void *)(v27 + 16) > v43)
    {
      uint64_t v44 = v174 + 24 * v43;
      uint64_t v45 = *(void *)v44;
      uint64_t v46 = *(void *)(v44 + 8);
      int v47 = *(unsigned __int8 *)(v44 + 16);
      if (v47)
      {
        if (v47 == 1)
        {
          unint64_t v48 = v43;
          uint64_t v180 = 0;
          unint64_t v181 = 0xE000000000000000;
          sub_1D7953984(v45, v46, 1u);
          sub_1D7A9CC48();
          uint64_t v177 = v180;
          *(void *)&long long v178 = v181;
          sub_1D7A9C128();
          uint64_t v180 = v45;
          unint64_t v181 = v46;
          char v182 = 1;
          sub_1D7A9CE78();
          sub_1D7A9C128();
          uint64_t v49 = v177;
          uint64_t v50 = v178;
          LOWORD(v180) = 346;
          uint64_t v51 = sub_1D7860264(0);
          unint64_t v52 = sub_1D785EAF8(v51);
          sub_1D7860544();
          uint64_t v53 = (void *)swift_allocError();
          DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, v49, v50, (__int16 *)&v180, 0, v52, 0xD000000000000065, v164, v54, 0xD000000000000020, v165, 579);
          if (qword_1EBDF9DC8 != -1) {
            swift_once();
          }
          uint64_t v55 = v172;
          uint64_t v56 = __swift_project_value_buffer(v172, (uint64_t)qword_1EBDFBE70);
          swift_beginAccess();
          int v57 = v171;
          (*v168)(v171, v56, v55);
          DIPLogError(_:message:log:)(v53, 0, 0xE000000000000000);
          _s13CoreIDVShared9AnalyticsC9sendErroryys0E0_pFZ_0(v53);
          sub_1D795399C(v45, v46, 1u);
          (*v167)(v57, v55);

          unint64_t v43 = v48;
        }
        else
        {
          switch(v45)
          {
            case 1:
              float v73 = *(float *)v135;
              if ((v189 & 1) == 0)
              {
                char v74 = v188 <= v73 ? 1 : v135[4];
                if ((v74 & 1) == 0)
                {

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  long long v133 = xmmword_1D7AAC070;
                  goto LABEL_344;
                }
              }
              if ((v191 & 1) == 0)
              {
                char v75 = v190 >= v73 ? 1 : v135[4];
                if ((v75 & 1) == 0)
                {

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  long long v133 = xmmword_1D7AAC080;
                  goto LABEL_344;
                }
              }
              break;
            case 2:
              float v76 = *(float *)v136;
              if ((v193 & 1) == 0)
              {
                char v77 = v192 <= v76 ? 1 : v136[4];
                if ((v77 & 1) == 0)
                {

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  long long v133 = xmmword_1D7AAC050;
                  goto LABEL_344;
                }
              }
              if ((v195 & 1) == 0)
              {
                char v78 = v194 >= v76 ? 1 : v136[4];
                if ((v78 & 1) == 0)
                {

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  long long v133 = xmmword_1D7AAC060;
                  goto LABEL_344;
                }
              }
              break;
            case 3:
              float v79 = *(float *)v137;
              if ((v197 & 1) == 0)
              {
                char v80 = v196 <= v79 ? 1 : v137[4];
                if ((v80 & 1) == 0)
                {

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  long long v133 = xmmword_1D7AAC040;
                  goto LABEL_344;
                }
              }
              if ((v199 & 1) == 0)
              {
                char v81 = v198 >= v79 ? 1 : v137[4];
                if ((v81 & 1) == 0)
                {

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  long long v133 = xmmword_1D7AA0AA0;
                  goto LABEL_344;
                }
              }
              break;
            case 4:
              float v82 = *(float *)v138;
              if ((v201 & 1) == 0)
              {
                char v83 = v200 <= v82 ? 1 : v138[4];
                if ((v83 & 1) == 0)
                {

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  long long v133 = xmmword_1D7AAC020;
                  goto LABEL_344;
                }
              }
              if ((v203 & 1) == 0)
              {
                char v84 = v202 >= v82 ? 1 : v138[4];
                if ((v84 & 1) == 0)
                {

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  long long v133 = xmmword_1D7AAC030;
                  goto LABEL_344;
                }
              }
              break;
            case 5:
              float v85 = *(float *)v140;
              if ((v205 & 1) == 0)
              {
                char v86 = v204 <= v85 ? 1 : v140[4];
                if ((v86 & 1) == 0)
                {

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  long long v133 = xmmword_1D7AAC000;
                  goto LABEL_344;
                }
              }
              if ((v207 & 1) == 0)
              {
                char v87 = v206 >= v85 ? 1 : v140[4];
                if ((v87 & 1) == 0)
                {

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  long long v133 = xmmword_1D7AAC010;
                  goto LABEL_344;
                }
              }
              break;
            case 6:
              float v88 = *(float *)v139;
              if ((v209 & 1) == 0)
              {
                char v89 = v208 <= v88 ? 1 : v139[4];
                if ((v89 & 1) == 0)
                {

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  long long v133 = xmmword_1D7AABFE0;
                  goto LABEL_344;
                }
              }
              if ((v211 & 1) == 0)
              {
                char v90 = v210 >= v88 ? 1 : v139[4];
                if ((v90 & 1) == 0)
                {

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  long long v133 = xmmword_1D7AABFF0;
                  goto LABEL_344;
                }
              }
              break;
            case 7:
              float v91 = *v149;
              if ((v213 & 1) == 0)
              {
                char v92 = v212 <= v91 ? 1 : *((unsigned char *)v149 + 4);
                if ((v92 & 1) == 0)
                {

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  long long v133 = xmmword_1D7AABFC0;
                  goto LABEL_344;
                }
              }
              if ((v215 & 1) == 0)
              {
                char v93 = v214 >= v91 ? 1 : *((unsigned char *)v149 + 4);
                if ((v93 & 1) == 0)
                {

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  long long v133 = xmmword_1D7AABFD0;
                  goto LABEL_344;
                }
              }
              break;
            case 8:
              float v94 = *v150;
              if ((v217 & 1) == 0)
              {
                char v95 = v216 <= v94 ? 1 : *((unsigned char *)v150 + 4);
                if ((v95 & 1) == 0)
                {

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  long long v133 = xmmword_1D7AABFA0;
                  goto LABEL_344;
                }
              }
              if ((v219 & 1) == 0)
              {
                char v96 = v218 >= v94 ? 1 : *((unsigned char *)v150 + 4);
                if ((v96 & 1) == 0)
                {

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  long long v133 = xmmword_1D7AABFB0;
                  goto LABEL_344;
                }
              }
              break;
            case 9:
              float v97 = *v151;
              if ((v221 & 1) == 0)
              {
                char v98 = v220 <= v97 ? 1 : *((unsigned char *)v151 + 4);
                if ((v98 & 1) == 0)
                {

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  long long v133 = xmmword_1D7AABF80;
                  goto LABEL_344;
                }
              }
              if ((v223 & 1) == 0)
              {
                char v99 = v222 >= v97 ? 1 : *((unsigned char *)v151 + 4);
                if ((v99 & 1) == 0)
                {

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  long long v133 = xmmword_1D7AABF90;
                  goto LABEL_344;
                }
              }
              break;
            case 10:
              float v100 = *v152;
              if ((v225 & 1) == 0)
              {
                char v101 = v224 <= v100 ? 1 : *((unsigned char *)v152 + 4);
                if ((v101 & 1) == 0)
                {

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  long long v133 = xmmword_1D7AABF60;
                  goto LABEL_344;
                }
              }
              if ((v227 & 1) == 0)
              {
                char v102 = v226 >= v100 ? 1 : *((unsigned char *)v152 + 4);
                if ((v102 & 1) == 0)
                {

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  long long v133 = xmmword_1D7AABF70;
                  goto LABEL_344;
                }
              }
              break;
            case 11:
              float v103 = *v153;
              if ((v229 & 1) == 0)
              {
                char v104 = v228 <= v103 ? 1 : *((unsigned char *)v153 + 4);
                if ((v104 & 1) == 0)
                {

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  long long v133 = xmmword_1D7AABF40;
                  goto LABEL_344;
                }
              }
              if ((v231 & 1) == 0)
              {
                char v105 = v230 >= v103 ? 1 : *((unsigned char *)v153 + 4);
                if ((v105 & 1) == 0)
                {

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  long long v133 = xmmword_1D7AABF50;
                  goto LABEL_344;
                }
              }
              break;
            case 12:
              float v106 = *v154;
              if ((v233 & 1) == 0)
              {
                char v107 = v232 <= v106 ? 1 : *((unsigned char *)v154 + 4);
                if ((v107 & 1) == 0)
                {

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  long long v133 = xmmword_1D7AABF20;
                  goto LABEL_344;
                }
              }
              if ((v235 & 1) == 0)
              {
                char v108 = v234 >= v106 ? 1 : *((unsigned char *)v154 + 4);
                if ((v108 & 1) == 0)
                {

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  long long v133 = xmmword_1D7AABF30;
                  goto LABEL_344;
                }
              }
              break;
            case 13:
              float v109 = *v155;
              if ((v237 & 1) == 0)
              {
                char v110 = v236 <= v109 ? 1 : *((unsigned char *)v155 + 4);
                if ((v110 & 1) == 0)
                {

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  long long v133 = xmmword_1D7AABF00;
                  goto LABEL_344;
                }
              }
              if ((v239 & 1) == 0)
              {
                char v111 = v238 >= v109 ? 1 : *((unsigned char *)v155 + 4);
                if ((v111 & 1) == 0)
                {

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  long long v133 = xmmword_1D7AABF10;
                  goto LABEL_344;
                }
              }
              break;
            case 14:
              float v112 = *v156;
              if ((v241 & 1) == 0)
              {
                char v113 = v240 <= v112 ? 1 : *((unsigned char *)v156 + 4);
                if ((v113 & 1) == 0)
                {

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  long long v133 = xmmword_1D7AABEE0;
                  goto LABEL_344;
                }
              }
              if ((v243 & 1) == 0)
              {
                char v114 = v242 >= v112 ? 1 : *((unsigned char *)v156 + 4);
                if ((v114 & 1) == 0)
                {

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  long long v133 = xmmword_1D7AABEF0;
                  goto LABEL_344;
                }
              }
              break;
            case 15:
              float v115 = *v157;
              if ((*(unsigned char *)v161 & 1) == 0)
              {
                char v116 = v244 <= v115 ? 1 : *((unsigned char *)v157 + 4);
                if ((v116 & 1) == 0)
                {

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  long long v133 = xmmword_1D7AABEC0;
                  goto LABEL_344;
                }
              }
              if (((_BYTE)v161[2] & 1) == 0)
              {
                char v117 = v245[1] >= v115 ? 1 : *((unsigned char *)v157 + 4);
                if ((v117 & 1) == 0)
                {

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  long long v133 = xmmword_1D7AABED0;
                  goto LABEL_344;
                }
              }
              break;
            case 16:
              if (((_BYTE)v161[6] & 1) != 0 || ((_BYTE)v144[1] & 1) != 0 || v245[5] >= *v144) {
                break;
              }

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              long long v133 = xmmword_1D7AABEB0;
              goto LABEL_344;
            case 17:
              if (((_BYTE)v161[8] & 1) != 0 || ((_BYTE)v145[1] & 1) != 0 || v245[7] >= *v145) {
                break;
              }

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              long long v133 = xmmword_1D7AABEA0;
              goto LABEL_344;
            case 18:
              if (((_BYTE)v161[10] & 1) != 0 || ((_BYTE)v146[1] & 1) != 0 || v245[9] >= *v146) {
                break;
              }

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              long long v133 = xmmword_1D7AABE90;
              goto LABEL_344;
            case 19:
              if (((_BYTE)v161[12] & 1) != 0 || ((_BYTE)v147[1] & 1) != 0 || v245[11] >= *v147) {
                break;
              }

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              long long v133 = xmmword_1D7AABE80;
              goto LABEL_344;
            case 20:
              if (((_BYTE)v161[14] & 1) != 0 || ((_BYTE)v148[1] & 1) != 0 || v245[13] >= *v148) {
                break;
              }

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              long long v133 = xmmword_1D7AABE70;
              goto LABEL_344;
            case 21:
              uint64_t v118 = *(void *)v158;
              int v119 = v158[8];
              if (((_BYTE)v161[17] & 1) == 0 && (v119 & 1) == 0 && v118 < v246) {
                goto LABEL_326;
              }
              if (((*((unsigned __int8 *)v161 + 84) | v119) & 1) != 0 || v247 >= v118) {
                break;
              }

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              long long v133 = xmmword_1D7AABE60;
              goto LABEL_344;
            case 22:
              uint64_t v120 = *(void *)v159;
              int v121 = v159[8];
              if (((_BYTE)v161[25] & 1) == 0 && (v121 & 1) == 0 && v120 < v248)
              {

                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                long long v133 = xmmword_1D7AABE30;
                goto LABEL_344;
              }
              if (((*((unsigned __int8 *)v161 + 116) | v121) & 1) == 0 && v249 < v120)
              {

                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                long long v133 = xmmword_1D7AABE40;
                goto LABEL_344;
              }
              break;
            case 23:
              if (v250 == 2) {
                break;
              }
              int v122 = *v142;
              if (v250)
              {
                if (v122 != 2 && (v122 & 1) == 0)
                {

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  long long v133 = xmmword_1D7AABDE0;
                  goto LABEL_344;
                }
              }
              else if (v122)
              {

                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                long long v133 = xmmword_1D7AABE20;
                goto LABEL_344;
              }
              break;
            case 24:
              if (v251 == 2) {
                break;
              }
              int v123 = *v143;
              if (v251)
              {
                if (v123 != 2 && (v123 & 1) == 0)
                {

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  long long v133 = xmmword_1D7AABDF0;
                  goto LABEL_344;
                }
              }
              else if (v123)
              {

                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                long long v133 = xmmword_1D7AABE10;
                goto LABEL_344;
              }
              break;
            case 25:
              if (!v253) {
                break;
              }
              unint64_t v124 = *((void *)v160 + 1);
              if (!v124) {
                break;
              }
              unint64_t v125 = v43;
              uint64_t v126 = *(void *)v160;
              uint64_t v180 = v252;
              unint64_t v181 = v253;
              sub_1D791118C();
              swift_bridgeObjectRetain();
              uint64_t v127 = sub_1D7A9CA38();
              uint64_t v129 = v128;
              uint64_t v180 = v126;
              unint64_t v181 = v124;
              if (v127 == sub_1D7A9CA38() && v129 == v130)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease_n();
                unint64_t v43 = v125;
              }
              else
              {
                char v131 = sub_1D7A9D358();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                unint64_t v43 = v125;
                if ((v131 & 1) == 0)
                {

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  long long v133 = xmmword_1D7AABE00;
                  goto LABEL_344;
                }
              }
              break;
            default:
              float v69 = *(float *)v134;
              if ((v185 & 1) == 0)
              {
                char v70 = v184 <= v69 ? 1 : v134[4];
                if ((v70 & 1) == 0)
                {

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  long long v133 = xmmword_1D7AA9710;
                  goto LABEL_344;
                }
              }
              if ((v187 & 1) == 0)
              {
                int v71 = v186 >= v69 ? 1 : v134[4];
                if (v71 != 1)
                {

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  long long v133 = xmmword_1D7AAC090;
                  goto LABEL_344;
                }
              }
              break;
          }
        }
      }
      else
      {
        uint64_t v58 = *(void *)(v173 + 16);
        if (v58)
        {
          unint64_t v170 = v43;
          sub_1D7953984(v45, v46, 0);
          sub_1D7953984(v45, v46, 0);
          swift_bridgeObjectRetain();
          int v59 = v163;
          while (1)
          {
            uint64_t v60 = *(v59 - 3);
            long long v61 = *((_OWORD *)v59 - 1);
            uint64_t v62 = *v59;
            long long v176 = v61;
            unint64_t v63 = v61;
            unint64_t v64 = 0xE400000000000000;
            unint64_t v65 = 1936941424;
            switch((uint64_t)v61)
            {
              case 0:
                break;
              case 1:
                unint64_t v64 = 0xED0000776F4C7373;
                goto LABEL_31;
              case 2:
                unint64_t v64 = 0xEE00686769487373;
LABEL_31:
                unint64_t v65 = 0x656E697272756C62;
                break;
              case 3:
                unint64_t v65 = 0x657275736F707865;
                goto LABEL_73;
              case 4:
                unint64_t v65 = 0x657275736F707865;
                goto LABEL_75;
              case 5:
                unint64_t v65 = 0xD000000000000011;
                uint64_t v66 = "cardDistortionLow";
                goto LABEL_80;
              case 6:
                unint64_t v65 = 0xD000000000000012;
                uint64_t v66 = "cardDistortionHigh";
                goto LABEL_80;
              case 7:
                unint64_t v65 = 0xD000000000000013;
                uint64_t v66 = "faceToImageRatioLow";
                goto LABEL_80;
              case 8:
                unint64_t v65 = 0xD000000000000014;
                uint64_t v66 = "faceToImageRatioHigh";
                goto LABEL_80;
              case 9:
                unint64_t v65 = 0xD000000000000014;
                uint64_t v66 = "faceCenteredRatioLow";
                goto LABEL_80;
              case 10:
                uint64_t v67 = "faceCenteredRatioHigh";
                goto LABEL_58;
              case 11:
                unint64_t v64 = 0xEC000000776F4C68;
                goto LABEL_42;
              case 12:
                unint64_t v64 = 0xED00006867694868;
LABEL_42:
                unint64_t v65 = 0x6374695064616568;
                break;
              case 13:
                unint64_t v65 = 0x6C6C6F5264616568;
                goto LABEL_73;
              case 14:
                unint64_t v65 = 0x6C6C6F5264616568;
                goto LABEL_75;
              case 15:
                unint64_t v64 = 0xEA0000000000776FLL;
                unint64_t v65 = 0x4C77615964616568;
                break;
              case 16:
                unint64_t v64 = 0xEB00000000686769;
                unint64_t v65 = 0x4877615964616568;
                break;
              case 17:
                uint64_t v67 = "blinkingConfidenceLow";
                goto LABEL_58;
              case 18:
                unint64_t v65 = 0xD000000000000016;
                uint64_t v66 = "blinkingConfidenceHigh";
                goto LABEL_80;
              case 19:
                unint64_t v65 = 0xD000000000000019;
                uint64_t v66 = "prescriptionConfidenceLow";
                goto LABEL_80;
              case 20:
                unint64_t v65 = 0xD00000000000001ALL;
                uint64_t v66 = "prescriptionConfidenceHigh";
                goto LABEL_80;
              case 21:
                unint64_t v65 = 0xD000000000000017;
                uint64_t v66 = "sunglassesConfidenceLow";
                goto LABEL_80;
              case 22:
                unint64_t v65 = 0xD000000000000018;
                uint64_t v66 = "sunglassesConfidenceHigh";
                goto LABEL_80;
              case 23:
                uint64_t v67 = "facemaskConfidenceLow";
                goto LABEL_58;
              case 24:
                unint64_t v65 = 0xD000000000000016;
                uint64_t v66 = "facemaskConfidenceHigh";
                goto LABEL_80;
              case 25:
                uint64_t v67 = "headgearConfidenceLow";
                goto LABEL_58;
              case 26:
                unint64_t v65 = 0xD000000000000016;
                uint64_t v66 = "headgearConfidenceHigh";
                goto LABEL_80;
              case 27:
                uint64_t v67 = "faceCaptureQualityLow";
LABEL_58:
                unint64_t v64 = (unint64_t)(v67 - 32) | 0x8000000000000000;
                unint64_t v65 = 0xD000000000000015;
                break;
              case 28:
                unint64_t v65 = 0xD000000000000016;
                uint64_t v66 = "faceCaptureQualityHigh";
                goto LABEL_80;
              case 29:
                unint64_t v64 = 0xEF776F4C657A6953;
                goto LABEL_65;
              case 30:
                unint64_t v65 = 0xD000000000000010;
                uint64_t v66 = "documentSizeHigh";
                goto LABEL_80;
              case 31:
                unint64_t v65 = 0xD000000000000013;
                uint64_t v66 = "documentRotatedLeft";
                goto LABEL_80;
              case 32:
                unint64_t v65 = 0xD000000000000014;
                uint64_t v66 = "documentRotatedRight";
                goto LABEL_80;
              case 33:
                unint64_t v64 = 0xEE00646577656B53;
LABEL_65:
                unint64_t v65 = 0x746E656D75636F64;
                break;
              case 34:
                unint64_t v65 = 0xD000000000000010;
                uint64_t v66 = "targetTooFarLeft";
                goto LABEL_80;
              case 35:
                unint64_t v65 = 0xD000000000000011;
                uint64_t v66 = "targetTooFarRight";
                goto LABEL_80;
              case 36:
                unint64_t v64 = 0xEE0070557261466FLL;
                unint64_t v65 = 0x6F54746567726174;
                break;
              case 37:
                unint64_t v65 = 0xD000000000000010;
                uint64_t v66 = "targetTooFarDown";
                goto LABEL_80;
              case 38:
                unint64_t v65 = 0x73656361466D756ELL;
                goto LABEL_73;
              case 39:
                unint64_t v65 = 0x73656361466D756ELL;
                goto LABEL_75;
              case 40:
                unint64_t v65 = 0x6C6576654C78756CLL;
LABEL_73:
                unint64_t v64 = 0xEB00000000776F4CLL;
                break;
              case 41:
                unint64_t v65 = 0x6C6576654C78756CLL;
LABEL_75:
                unint64_t v64 = 0xEC00000068676948;
                break;
              case 42:
                unint64_t v64 = 0xEE00646E756F4674;
                unint64_t v65 = 0x6F4E373134666470;
                break;
              case 43:
                unint64_t v64 = 0xEB00000000646E75;
                unint64_t v65 = 0x6F46373134666470;
                break;
              case 44:
                unint64_t v65 = 0xD000000000000011;
                uint64_t v66 = "notAAMVACompliant";
                goto LABEL_80;
              case 45:
                unint64_t v65 = 0xD000000000000010;
                uint64_t v66 = "isAAMVACompliant";
LABEL_80:
                unint64_t v64 = (unint64_t)(v66 - 32) | 0x8000000000000000;
                break;
              case 46:
                unint64_t v64 = 0xED0000686374616DLL;
                unint64_t v65 = 0x73694D6574617473;
                break;
              case 47:
                unint64_t v64 = 0xEC00000065766973;
                unint64_t v65 = 0x756C636E6F636E69;
                break;
              default:
                unint64_t v65 = v60;
                unint64_t v64 = v61;
                break;
            }
            if (v45 == v65 && v46 == v64) {
              break;
            }
            char v68 = sub_1D7A9D358();
            sub_1D7861414(v60, v63);
            swift_bridgeObjectRetain();
            sub_1D7861414(v60, v63);
            swift_bridgeObjectRelease();
            if (v68) {
              goto LABEL_101;
            }
            sub_1D78C2774(v60, v63);
            swift_bridgeObjectRelease();
            v59 += 4;
            if (!--v58)
            {
              swift_bridgeObjectRelease();
              sub_1D795399C(v45, v46, 0);
              sub_1D795399C(v45, v46, 0);
              uint64_t v27 = v162;
              goto LABEL_17;
            }
          }
          sub_1D7861414(v60, v61);
          swift_bridgeObjectRetain();
          sub_1D7861414(v60, v63);
          swift_bridgeObjectRelease();
LABEL_101:
          swift_bridgeObjectRelease();
          uint64_t v177 = v60;
          long long v178 = v176;
          uint64_t v179 = v62;
          char v72 = sub_1D7950DC0((uint64_t)&v177, (uint64_t)v169);
          sub_1D795399C(v45, v46, 0);
          sub_1D78C2774(v60, v63);
          swift_bridgeObjectRelease();
          uint64_t v27 = v162;
          if (v72)
          {

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            unint64_t v132 = v141;
            uint64_t *v141 = v45;
            v132[1] = v46;
            return;
          }
          sub_1D795399C(v45, v46, 0);
LABEL_17:
          unint64_t v43 = v170;
        }
      }
      if (++v43 == v175)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        a3 = v141;
LABEL_323:

        *a3 = 0;
        a3[1] = 0;
        return;
      }
    }
    __break(1u);
LABEL_326:

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    long long v133 = xmmword_1D7AABE50;
LABEL_344:
    *(_OWORD *)unint64_t v141 = v133;
  }
}

uint64_t sub_1D7950DC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(v2 + 16);
  if (!v3) {
    return 1;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = (float *)(v2 + 52);
  while (2)
  {
    uint64_t v6 = *((unsigned __int8 *)v5 - 3);
    float v7 = *v5;
    uint64_t v8 = *(void *)(v5 - 3);
    uint64_t v9 = *(void *)(v5 - 5);
    unsigned __int8 v10 = *((unsigned char *)v5 - 4);
    v14[0] = v9;
    v14[1] = v8;
    unsigned __int8 v15 = v10;
    sub_1D7953984(v9, v8, v10);
    unint64_t v11 = sub_1D7950F34((uint64_t)v14, a2);
    sub_1D795399C(v9, v8, v10);
    uint64_t v12 = 0;
    if ((v11 & 0x100000000) != 0) {
      goto LABEL_19;
    }
    switch(v6)
    {
      case 1:
        if (v7 != *(float *)&v11) {
          goto LABEL_4;
        }
        goto LABEL_16;
      case 2:
        if (v7 <= *(float *)&v11) {
          goto LABEL_16;
        }
        goto LABEL_4;
      case 3:
        if (v7 >= *(float *)&v11) {
          goto LABEL_16;
        }
        goto LABEL_4;
      case 4:
        if (v7 < *(float *)&v11) {
          goto LABEL_16;
        }
        goto LABEL_4;
      case 5:
        if (v7 <= *(float *)&v11) {
          goto LABEL_4;
        }
        goto LABEL_16;
      case 6:
        goto LABEL_19;
      default:
        if (v7 != *(float *)&v11)
        {
LABEL_16:
          uint64_t v12 = 0;
          goto LABEL_19;
        }
LABEL_4:
        v5 += 6;
        if (--v3) {
          continue;
        }
        uint64_t v12 = 1;
LABEL_19:
        swift_bridgeObjectRelease();
        break;
    }
    return v12;
  }
}

unint64_t sub_1D7950F34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D7A9B5F8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6, v7, v8, v9, v10, v11, v12);
  uint64_t v14 = &v37[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  unint64_t v15 = *(void *)a1;
  unint64_t v16 = *(void *)(a1 + 8);
  int v17 = *(unsigned __int8 *)(a1 + 16);
  if (v17 == 2 && v15 <= 0x18)
  {
    switch(v15)
    {
      case 1uLL:
        uint64_t v18 = &OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_exposure;
        goto LABEL_29;
      case 2uLL:
        uint64_t v18 = &OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_cardDistortion;
        goto LABEL_29;
      case 3uLL:
        uint64_t v18 = &OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_faceToImageRatio;
        goto LABEL_29;
      case 4uLL:
        uint64_t v18 = &OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_faceCenteredRatio;
        goto LABEL_29;
      case 5uLL:
        uint64_t v18 = &OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_headPitch;
        goto LABEL_29;
      case 6uLL:
        uint64_t v18 = &OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_headRoll;
        goto LABEL_29;
      case 7uLL:
        uint64_t v18 = &OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_headYaw;
        goto LABEL_29;
      case 8uLL:
        uint64_t v18 = &OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_blinkingConfidence;
        goto LABEL_29;
      case 9uLL:
        uint64_t v18 = &OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_prescriptionConfidence;
        goto LABEL_29;
      case 0xAuLL:
        uint64_t v18 = &OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_sunglassesConfidence;
        goto LABEL_29;
      case 0xBuLL:
        uint64_t v18 = &OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_facemaskConfidence;
        goto LABEL_29;
      case 0xCuLL:
        uint64_t v18 = &OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_headgearConfidence;
        goto LABEL_29;
      case 0xDuLL:
        uint64_t v18 = &OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_faceCaptureQuality;
        goto LABEL_29;
      case 0xEuLL:
        uint64_t v18 = &OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_documentSize;
        goto LABEL_29;
      case 0xFuLL:
        uint64_t v18 = &OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_documentRotation;
        goto LABEL_29;
      case 0x10uLL:
        uint64_t v18 = &OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_documentSkew;
        goto LABEL_29;
      case 0x11uLL:
        uint64_t v18 = &OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_leftDrift;
        goto LABEL_29;
      case 0x12uLL:
        uint64_t v18 = &OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_rightDrift;
        goto LABEL_29;
      case 0x13uLL:
        uint64_t v18 = &OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_upDrift;
        goto LABEL_29;
      case 0x14uLL:
        uint64_t v18 = &OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_downDrift;
        goto LABEL_29;
      case 0x15uLL:
        char v32 = &OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_numFaces;
        goto LABEL_33;
      case 0x16uLL:
        char v32 = &OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_luxLevel;
LABEL_33:
        uint64_t v33 = a2 + *v32;
        swift_beginAccess();
        if (*(unsigned char *)(v33 + 8)) {
          goto LABEL_8;
        }
        unsigned __int8 v29 = 0;
        float v28 = (float)*(uint64_t *)v33;
        break;
      case 0x17uLL:
        char v34 = &OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_pdf417Detected;
        goto LABEL_37;
      case 0x18uLL:
        char v34 = &OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_isAAMVACompliant;
LABEL_37:
        char v35 = (unsigned __int8 *)(a2 + *v34);
        swift_beginAccess();
        int v36 = *v35;
        if (v36 == 2) {
          goto LABEL_8;
        }
        unsigned __int8 v29 = 0;
        LODWORD(v28) = (v36 << 31 >> 31) & 0x3F800000;
        break;
      default:
        uint64_t v18 = &OBJC_IVAR____TtC13CoreIDVShared19ImageQualityMetrics_blurriness;
LABEL_29:
        uint64_t v30 = a2 + *v18;
        swift_beginAccess();
        float v28 = *(float *)v30;
        unsigned __int8 v29 = *(unsigned char *)(v30 + 4);
        break;
    }
  }
  else
  {
    uint64_t v38 = 0;
    unint64_t v39 = 0xE000000000000000;
    sub_1D7A9CC48();
    uint64_t v38 = v15;
    unint64_t v39 = v16;
    char v40 = v17;
    uint64_t v19 = IQCType.toString.getter();
    unint64_t v21 = v20;
    swift_bridgeObjectRelease();
    uint64_t v38 = v19;
    unint64_t v39 = v21;
    sub_1D7A9C128();
    uint64_t v22 = v38;
    uint64_t v23 = v39;
    LOWORD(v38) = 346;
    unint64_t v24 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    uint64_t v25 = (void *)swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, v22, v23, (__int16 *)&v38, 0, v24, 0xD000000000000065, 0x80000001D7AC4CC0, v26, 0xD00000000000001FLL, 0x80000001D7AC5370, 738);
    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v27 = __swift_project_value_buffer(v4, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v14, v27, v4);
    DIPLogError(_:message:log:)(v25, 0, 0xE000000000000000);
    _s13CoreIDVShared9AnalyticsC9sendErroryys0E0_pFZ_0(v25);
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v14, v4);

LABEL_8:
    float v28 = 0.0;
    unsigned __int8 v29 = 1;
  }
  v37[4] = v29;
  return LODWORD(v28) | ((unint64_t)v29 << 32);
}

uint64_t _s13CoreIDVShared7IQACodeO2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  switch(v3)
  {
    case 0uLL:
      if (v5) {
        goto LABEL_99;
      }
      unint64_t v3 = 0;
      char v6 = 1;
      break;
    case 1uLL:
      if (v5 != 1) {
        goto LABEL_99;
      }
      unint64_t v3 = 1;
      char v6 = 1;
      break;
    case 2uLL:
      if (v5 != 2) {
        goto LABEL_99;
      }
      char v6 = 1;
      unint64_t v3 = 2;
      break;
    case 3uLL:
      if (v5 != 3) {
        goto LABEL_99;
      }
      char v6 = 1;
      unint64_t v3 = 3;
      break;
    case 4uLL:
      if (v5 != 4) {
        goto LABEL_99;
      }
      char v6 = 1;
      unint64_t v3 = 4;
      break;
    case 5uLL:
      if (v5 != 5) {
        goto LABEL_99;
      }
      char v6 = 1;
      unint64_t v3 = 5;
      break;
    case 6uLL:
      if (v5 != 6) {
        goto LABEL_99;
      }
      char v6 = 1;
      unint64_t v3 = 6;
      break;
    case 7uLL:
      if (v5 != 7) {
        goto LABEL_99;
      }
      char v6 = 1;
      unint64_t v3 = 7;
      break;
    case 8uLL:
      if (v5 != 8) {
        goto LABEL_99;
      }
      char v6 = 1;
      unint64_t v3 = 8;
      break;
    case 9uLL:
      if (v5 != 9) {
        goto LABEL_99;
      }
      char v6 = 1;
      unint64_t v3 = 9;
      break;
    case 0xAuLL:
      if (v5 != 10) {
        goto LABEL_99;
      }
      char v6 = 1;
      unint64_t v3 = 10;
      break;
    case 0xBuLL:
      if (v5 != 11) {
        goto LABEL_99;
      }
      char v6 = 1;
      unint64_t v3 = 11;
      break;
    case 0xCuLL:
      if (v5 != 12) {
        goto LABEL_99;
      }
      char v6 = 1;
      unint64_t v3 = 12;
      break;
    case 0xDuLL:
      if (v5 != 13) {
        goto LABEL_99;
      }
      char v6 = 1;
      unint64_t v3 = 13;
      break;
    case 0xEuLL:
      if (v5 != 14) {
        goto LABEL_99;
      }
      char v6 = 1;
      unint64_t v3 = 14;
      break;
    case 0xFuLL:
      if (v5 != 15) {
        goto LABEL_99;
      }
      char v6 = 1;
      unint64_t v3 = 15;
      break;
    case 0x10uLL:
      if (v5 != 16) {
        goto LABEL_99;
      }
      char v6 = 1;
      unint64_t v3 = 16;
      break;
    case 0x11uLL:
      if (v5 != 17) {
        goto LABEL_99;
      }
      char v6 = 1;
      unint64_t v3 = 17;
      break;
    case 0x12uLL:
      if (v5 != 18) {
        goto LABEL_99;
      }
      char v6 = 1;
      unint64_t v3 = 18;
      break;
    case 0x13uLL:
      if (v5 != 19) {
        goto LABEL_99;
      }
      char v6 = 1;
      unint64_t v3 = 19;
      break;
    case 0x14uLL:
      if (v5 != 20) {
        goto LABEL_99;
      }
      char v6 = 1;
      unint64_t v3 = 20;
      break;
    case 0x15uLL:
      if (v5 != 21) {
        goto LABEL_99;
      }
      char v6 = 1;
      unint64_t v3 = 21;
      break;
    case 0x16uLL:
      if (v5 != 22) {
        goto LABEL_99;
      }
      char v6 = 1;
      unint64_t v3 = 22;
      break;
    case 0x17uLL:
      if (v5 != 23) {
        goto LABEL_99;
      }
      char v6 = 1;
      unint64_t v3 = 23;
      break;
    case 0x18uLL:
      if (v5 != 24) {
        goto LABEL_99;
      }
      char v6 = 1;
      unint64_t v3 = 24;
      break;
    case 0x19uLL:
      if (v5 != 25) {
        goto LABEL_99;
      }
      char v6 = 1;
      unint64_t v3 = 25;
      break;
    case 0x1AuLL:
      if (v5 != 26) {
        goto LABEL_99;
      }
      char v6 = 1;
      unint64_t v3 = 26;
      break;
    case 0x1BuLL:
      if (v5 != 27) {
        goto LABEL_99;
      }
      char v6 = 1;
      unint64_t v3 = 27;
      break;
    case 0x1CuLL:
      if (v5 != 28) {
        goto LABEL_99;
      }
      char v6 = 1;
      unint64_t v3 = 28;
      break;
    case 0x1DuLL:
      if (v5 != 29) {
        goto LABEL_99;
      }
      char v6 = 1;
      unint64_t v3 = 29;
      break;
    case 0x1EuLL:
      if (v5 != 30) {
        goto LABEL_99;
      }
      char v6 = 1;
      unint64_t v3 = 30;
      break;
    case 0x1FuLL:
      if (v5 != 31) {
        goto LABEL_99;
      }
      char v6 = 1;
      unint64_t v3 = 31;
      break;
    case 0x20uLL:
      if (v5 != 32) {
        goto LABEL_99;
      }
      char v6 = 1;
      unint64_t v3 = 32;
      break;
    case 0x21uLL:
      if (v5 != 33) {
        goto LABEL_99;
      }
      char v6 = 1;
      unint64_t v3 = 33;
      break;
    case 0x22uLL:
      if (v5 != 34) {
        goto LABEL_99;
      }
      char v6 = 1;
      unint64_t v3 = 34;
      break;
    case 0x23uLL:
      if (v5 != 35) {
        goto LABEL_99;
      }
      char v6 = 1;
      unint64_t v3 = 35;
      break;
    case 0x24uLL:
      if (v5 != 36) {
        goto LABEL_99;
      }
      char v6 = 1;
      unint64_t v3 = 36;
      break;
    case 0x25uLL:
      if (v5 != 37) {
        goto LABEL_99;
      }
      char v6 = 1;
      unint64_t v3 = 37;
      break;
    case 0x26uLL:
      if (v5 != 38) {
        goto LABEL_99;
      }
      char v6 = 1;
      unint64_t v3 = 38;
      break;
    case 0x27uLL:
      if (v5 != 39) {
        goto LABEL_99;
      }
      char v6 = 1;
      unint64_t v3 = 39;
      break;
    case 0x28uLL:
      if (v5 != 40) {
        goto LABEL_99;
      }
      char v6 = 1;
      unint64_t v3 = 40;
      break;
    case 0x29uLL:
      if (v5 != 41) {
        goto LABEL_99;
      }
      char v6 = 1;
      unint64_t v3 = 41;
      break;
    case 0x2AuLL:
      if (v5 != 42) {
        goto LABEL_99;
      }
      char v6 = 1;
      unint64_t v3 = 42;
      break;
    case 0x2BuLL:
      if (v5 != 43) {
        goto LABEL_99;
      }
      char v6 = 1;
      unint64_t v3 = 43;
      break;
    case 0x2CuLL:
      if (v5 != 44) {
        goto LABEL_99;
      }
      char v6 = 1;
      unint64_t v3 = 44;
      break;
    case 0x2DuLL:
      if (v5 != 45) {
        goto LABEL_99;
      }
      char v6 = 1;
      unint64_t v3 = 45;
      break;
    case 0x2EuLL:
      if (v5 != 46) {
        goto LABEL_99;
      }
      char v6 = 1;
      unint64_t v3 = 46;
      break;
    case 0x2FuLL:
      if (v5 != 47) {
        goto LABEL_99;
      }
      char v6 = 1;
      unint64_t v3 = 47;
      break;
    default:
      if (v5 >= 0x30)
      {
        if (v2 == v4 && v3 == v5) {
          char v6 = 1;
        }
        else {
          char v6 = sub_1D7A9D358();
        }
      }
      else
      {
LABEL_99:
        char v6 = 0;
      }
      sub_1D7861414(v4, v5);
      sub_1D7861414(v2, v3);
      break;
  }
  sub_1D78C2774(v2, v3);
  sub_1D78C2774(v4, v5);
  return v6 & 1;
}

unint64_t sub_1D7951958()
{
  unint64_t result = qword_1EA844440;
  if (!qword_1EA844440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844440);
  }
  return result;
}

unint64_t sub_1D79519AC()
{
  unint64_t result = qword_1EA844448;
  if (!qword_1EA844448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844448);
  }
  return result;
}

unint64_t sub_1D7951A00()
{
  unint64_t result = qword_1EA844450;
  if (!qword_1EA844450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844450);
  }
  return result;
}

unint64_t sub_1D7951A54()
{
  unint64_t result = qword_1EA844458;
  if (!qword_1EA844458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844458);
  }
  return result;
}

unint64_t sub_1D7951AA8()
{
  unint64_t result = qword_1EA844460;
  if (!qword_1EA844460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844460);
  }
  return result;
}

unint64_t sub_1D7951AFC()
{
  unint64_t result = qword_1EA844468;
  if (!qword_1EA844468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844468);
  }
  return result;
}

unint64_t sub_1D7951B50()
{
  unint64_t result = qword_1EA844470;
  if (!qword_1EA844470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844470);
  }
  return result;
}

unint64_t sub_1D7951BA4()
{
  unint64_t result = qword_1EA844478;
  if (!qword_1EA844478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844478);
  }
  return result;
}

unint64_t sub_1D7951BF8()
{
  unint64_t result = qword_1EA844480;
  if (!qword_1EA844480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844480);
  }
  return result;
}

unint64_t sub_1D7951C4C()
{
  unint64_t result = qword_1EA844488;
  if (!qword_1EA844488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844488);
  }
  return result;
}

unint64_t sub_1D7951CA0()
{
  unint64_t result = qword_1EA844490;
  if (!qword_1EA844490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844490);
  }
  return result;
}

unint64_t sub_1D7951CF4()
{
  unint64_t result = qword_1EA844498;
  if (!qword_1EA844498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844498);
  }
  return result;
}

unint64_t sub_1D7951D48()
{
  unint64_t result = qword_1EA8444A0;
  if (!qword_1EA8444A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8444A0);
  }
  return result;
}

unint64_t sub_1D7951D9C()
{
  unint64_t result = qword_1EA8444A8;
  if (!qword_1EA8444A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8444A8);
  }
  return result;
}

unint64_t sub_1D7951DF0()
{
  unint64_t result = qword_1EA8444B0;
  if (!qword_1EA8444B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8444B0);
  }
  return result;
}

unint64_t sub_1D7951E44()
{
  unint64_t result = qword_1EA8444B8;
  if (!qword_1EA8444B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8444B8);
  }
  return result;
}

unint64_t sub_1D7951E98()
{
  unint64_t result = qword_1EA8444C0;
  if (!qword_1EA8444C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8444C0);
  }
  return result;
}

unint64_t sub_1D7951EEC()
{
  unint64_t result = qword_1EA8444C8;
  if (!qword_1EA8444C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8444C8);
  }
  return result;
}

unint64_t sub_1D7951F40()
{
  unint64_t result = qword_1EA8444D0;
  if (!qword_1EA8444D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8444D0);
  }
  return result;
}

unint64_t sub_1D7951F94()
{
  unint64_t result = qword_1EA8444D8;
  if (!qword_1EA8444D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8444D8);
  }
  return result;
}

unint64_t sub_1D7951FE8()
{
  unint64_t result = qword_1EA8444E0;
  if (!qword_1EA8444E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8444E0);
  }
  return result;
}

unint64_t sub_1D795203C()
{
  unint64_t result = qword_1EA8444E8;
  if (!qword_1EA8444E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8444E8);
  }
  return result;
}

unint64_t sub_1D7952090()
{
  unint64_t result = qword_1EA8444F0;
  if (!qword_1EA8444F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8444F0);
  }
  return result;
}

unint64_t sub_1D79520E4()
{
  unint64_t result = qword_1EA8444F8;
  if (!qword_1EA8444F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8444F8);
  }
  return result;
}

unint64_t sub_1D7952138()
{
  unint64_t result = qword_1EA844500;
  if (!qword_1EA844500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844500);
  }
  return result;
}

unint64_t sub_1D795218C()
{
  unint64_t result = qword_1EA844508;
  if (!qword_1EA844508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844508);
  }
  return result;
}

unint64_t sub_1D79521E0()
{
  unint64_t result = qword_1EA844510;
  if (!qword_1EA844510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844510);
  }
  return result;
}

unint64_t sub_1D7952234()
{
  unint64_t result = qword_1EA844518;
  if (!qword_1EA844518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844518);
  }
  return result;
}

unint64_t sub_1D7952288()
{
  unint64_t result = qword_1EA844520;
  if (!qword_1EA844520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844520);
  }
  return result;
}

unint64_t sub_1D79522DC()
{
  unint64_t result = qword_1EA844528;
  if (!qword_1EA844528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844528);
  }
  return result;
}

unint64_t sub_1D7952330()
{
  unint64_t result = qword_1EA844530;
  if (!qword_1EA844530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844530);
  }
  return result;
}

unint64_t sub_1D7952384()
{
  unint64_t result = qword_1EA844538;
  if (!qword_1EA844538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844538);
  }
  return result;
}

unint64_t sub_1D79523D8()
{
  unint64_t result = qword_1EA844540;
  if (!qword_1EA844540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844540);
  }
  return result;
}

unint64_t sub_1D795242C()
{
  unint64_t result = qword_1EA844548;
  if (!qword_1EA844548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844548);
  }
  return result;
}

unint64_t sub_1D7952480()
{
  unint64_t result = qword_1EA844550;
  if (!qword_1EA844550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844550);
  }
  return result;
}

unint64_t sub_1D79524D4()
{
  unint64_t result = qword_1EA844558;
  if (!qword_1EA844558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844558);
  }
  return result;
}

unint64_t sub_1D7952528()
{
  unint64_t result = qword_1EA844560;
  if (!qword_1EA844560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844560);
  }
  return result;
}

unint64_t sub_1D795257C()
{
  unint64_t result = qword_1EA844568;
  if (!qword_1EA844568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844568);
  }
  return result;
}

unint64_t sub_1D79525D0()
{
  unint64_t result = qword_1EA844570;
  if (!qword_1EA844570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844570);
  }
  return result;
}

unint64_t sub_1D7952624()
{
  unint64_t result = qword_1EA844578;
  if (!qword_1EA844578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844578);
  }
  return result;
}

unint64_t sub_1D7952678()
{
  unint64_t result = qword_1EA844580;
  if (!qword_1EA844580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844580);
  }
  return result;
}

unint64_t sub_1D79526CC()
{
  unint64_t result = qword_1EA844588;
  if (!qword_1EA844588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844588);
  }
  return result;
}

unint64_t sub_1D7952720()
{
  unint64_t result = qword_1EA844590;
  if (!qword_1EA844590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844590);
  }
  return result;
}

unint64_t sub_1D7952774()
{
  unint64_t result = qword_1EA844598;
  if (!qword_1EA844598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844598);
  }
  return result;
}

unint64_t sub_1D79527C8()
{
  unint64_t result = qword_1EA8445A0;
  if (!qword_1EA8445A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8445A0);
  }
  return result;
}

unint64_t sub_1D795281C()
{
  unint64_t result = qword_1EA8445A8;
  if (!qword_1EA8445A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8445A8);
  }
  return result;
}

unint64_t sub_1D7952870()
{
  unint64_t result = qword_1EA8445B0;
  if (!qword_1EA8445B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8445B0);
  }
  return result;
}

unint64_t sub_1D79528C4()
{
  unint64_t result = qword_1EA8445B8;
  if (!qword_1EA8445B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8445B8);
  }
  return result;
}

unint64_t sub_1D7952918()
{
  unint64_t result = qword_1EA8445C0;
  if (!qword_1EA8445C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8445C0);
  }
  return result;
}

unint64_t sub_1D795296C()
{
  unint64_t result = qword_1EA8445C8;
  if (!qword_1EA8445C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8445C8);
  }
  return result;
}

uint64_t _s13CoreIDVShared7IQCTypeO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  int v4 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v6 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  int v7 = *(unsigned __int8 *)(a2 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    if (v4 == 1)
    {
      if (v7 == 1)
      {
        if (v3 == v6 && v2 == v5) {
          char v9 = 1;
        }
        else {
          char v9 = sub_1D7A9D358();
        }
        sub_1D7953984(v6, v5, 1u);
        sub_1D7953984(v3, v2, 1u);
        sub_1D795399C(v3, v2, 1u);
        sub_1D795399C(v6, v5, 1u);
        return v9 & 1;
      }
LABEL_10:
      sub_1D7953984(*(void *)a2, *(void *)(a2 + 8), v7);
      sub_1D7953984(v3, v2, v4);
      sub_1D795399C(v3, v2, v4);
      sub_1D795399C(v6, v5, v7);
      char v9 = 0;
      return v9 & 1;
    }
    switch(v3)
    {
      case 1:
        if (v7 != 2 || v6 != 1 || v5 != 0) {
          goto LABEL_10;
        }
        sub_1D795399C(*(void *)a1, v2, 2u);
        char v9 = 1;
        sub_1D795399C(1, 0, 2u);
        return v9 & 1;
      case 2:
        if (v7 != 2 || v6 != 2 || v5 != 0) {
          goto LABEL_10;
        }
        sub_1D795399C(*(void *)a1, v2, 2u);
        uint64_t v11 = 2;
        goto LABEL_252;
      case 3:
        if (v7 != 2 || v6 != 3 || v5 != 0) {
          goto LABEL_10;
        }
        sub_1D795399C(*(void *)a1, v2, 2u);
        uint64_t v11 = 3;
        goto LABEL_252;
      case 4:
        if (v7 != 2 || v6 != 4 || v5 != 0) {
          goto LABEL_10;
        }
        sub_1D795399C(*(void *)a1, v2, 2u);
        uint64_t v11 = 4;
        goto LABEL_252;
      case 5:
        if (v7 != 2 || v6 != 5 || v5 != 0) {
          goto LABEL_10;
        }
        sub_1D795399C(*(void *)a1, v2, 2u);
        uint64_t v11 = 5;
        goto LABEL_252;
      case 6:
        if (v7 != 2 || v6 != 6 || v5 != 0) {
          goto LABEL_10;
        }
        sub_1D795399C(*(void *)a1, v2, 2u);
        uint64_t v11 = 6;
        goto LABEL_252;
      case 7:
        if (v7 != 2 || v6 != 7 || v5 != 0) {
          goto LABEL_10;
        }
        sub_1D795399C(*(void *)a1, v2, 2u);
        uint64_t v11 = 7;
        goto LABEL_252;
      case 8:
        if (v7 != 2 || v6 != 8 || v5 != 0) {
          goto LABEL_10;
        }
        sub_1D795399C(*(void *)a1, v2, 2u);
        uint64_t v11 = 8;
        goto LABEL_252;
      case 9:
        if (v7 != 2 || v6 != 9 || v5 != 0) {
          goto LABEL_10;
        }
        sub_1D795399C(*(void *)a1, v2, 2u);
        uint64_t v11 = 9;
        goto LABEL_252;
      case 10:
        if (v7 != 2 || v6 != 10 || v5 != 0) {
          goto LABEL_10;
        }
        sub_1D795399C(*(void *)a1, v2, 2u);
        uint64_t v11 = 10;
        goto LABEL_252;
      case 11:
        if (v7 != 2 || v6 != 11 || v5 != 0) {
          goto LABEL_10;
        }
        sub_1D795399C(*(void *)a1, v2, 2u);
        uint64_t v11 = 11;
        goto LABEL_252;
      case 12:
        if (v7 != 2 || v6 != 12 || v5 != 0) {
          goto LABEL_10;
        }
        sub_1D795399C(*(void *)a1, v2, 2u);
        uint64_t v11 = 12;
        goto LABEL_252;
      case 13:
        if (v7 != 2 || v6 != 13 || v5 != 0) {
          goto LABEL_10;
        }
        sub_1D795399C(*(void *)a1, v2, 2u);
        uint64_t v11 = 13;
        goto LABEL_252;
      case 14:
        if (v7 != 2 || v6 != 14 || v5 != 0) {
          goto LABEL_10;
        }
        sub_1D795399C(*(void *)a1, v2, 2u);
        uint64_t v11 = 14;
        goto LABEL_252;
      case 15:
        if (v7 != 2 || v6 != 15 || v5 != 0) {
          goto LABEL_10;
        }
        sub_1D795399C(*(void *)a1, v2, 2u);
        uint64_t v11 = 15;
        goto LABEL_252;
      case 16:
        if (v7 != 2 || v6 != 16 || v5 != 0) {
          goto LABEL_10;
        }
        sub_1D795399C(*(void *)a1, v2, 2u);
        uint64_t v11 = 16;
        goto LABEL_252;
      case 17:
        if (v7 != 2 || v6 != 17 || v5 != 0) {
          goto LABEL_10;
        }
        sub_1D795399C(*(void *)a1, v2, 2u);
        uint64_t v11 = 17;
        goto LABEL_252;
      case 18:
        if (v7 != 2 || v6 != 18 || v5 != 0) {
          goto LABEL_10;
        }
        sub_1D795399C(*(void *)a1, v2, 2u);
        uint64_t v11 = 18;
        goto LABEL_252;
      case 19:
        if (v7 != 2 || v6 != 19 || v5 != 0) {
          goto LABEL_10;
        }
        sub_1D795399C(*(void *)a1, v2, 2u);
        uint64_t v11 = 19;
        goto LABEL_252;
      case 20:
        if (v7 != 2 || v6 != 20 || v5 != 0) {
          goto LABEL_10;
        }
        sub_1D795399C(*(void *)a1, v2, 2u);
        uint64_t v11 = 20;
        goto LABEL_252;
      case 21:
        if (v7 != 2 || v6 != 21 || v5 != 0) {
          goto LABEL_10;
        }
        sub_1D795399C(*(void *)a1, v2, 2u);
        uint64_t v11 = 21;
        goto LABEL_252;
      case 22:
        if (v7 != 2 || v6 != 22 || v5 != 0) {
          goto LABEL_10;
        }
        sub_1D795399C(*(void *)a1, v2, 2u);
        uint64_t v11 = 22;
        goto LABEL_252;
      case 23:
        if (v7 != 2 || v6 != 23 || v5 != 0) {
          goto LABEL_10;
        }
        sub_1D795399C(*(void *)a1, v2, 2u);
        uint64_t v11 = 23;
        goto LABEL_252;
      case 24:
        if (v7 != 2 || v6 != 24 || v5 != 0) {
          goto LABEL_10;
        }
        sub_1D795399C(*(void *)a1, v2, 2u);
        uint64_t v11 = 24;
        goto LABEL_252;
      case 25:
        if (v7 != 2 || v6 != 25 || v5 != 0) {
          goto LABEL_10;
        }
        sub_1D795399C(*(void *)a1, v2, 2u);
        uint64_t v11 = 25;
        goto LABEL_252;
      default:
        if (v7 != 2 || (v5 | v6) != 0) {
          goto LABEL_10;
        }
        sub_1D795399C(*(void *)a1, v2, 2u);
        uint64_t v11 = 0;
LABEL_252:
        sub_1D795399C(v11, 0, 2u);
        char v9 = 1;
        break;
    }
  }
  else
  {
    if (*(unsigned char *)(a2 + 16)) {
      goto LABEL_10;
    }
    if (v3 == v6 && v2 == v5) {
      char v9 = 1;
    }
    else {
      char v9 = sub_1D7A9D358();
    }
    sub_1D7953984(v6, v5, 0);
    sub_1D7953984(v3, v2, 0);
    sub_1D795399C(v3, v2, 0);
    sub_1D795399C(v6, v5, 0);
  }
  return v9 & 1;
}

unint64_t sub_1D7953000()
{
  unint64_t result = qword_1EA844848;
  if (!qword_1EA844848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844848);
  }
  return result;
}

unint64_t sub_1D7953054()
{
  unint64_t result = qword_1EA844850;
  if (!qword_1EA844850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844850);
  }
  return result;
}

unint64_t sub_1D79530A8()
{
  unint64_t result = qword_1EA844858;
  if (!qword_1EA844858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844858);
  }
  return result;
}

unint64_t sub_1D79530FC()
{
  unint64_t result = qword_1EA844860;
  if (!qword_1EA844860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844860);
  }
  return result;
}

unint64_t sub_1D7953150()
{
  unint64_t result = qword_1EA844868;
  if (!qword_1EA844868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844868);
  }
  return result;
}

unint64_t sub_1D79531A4()
{
  unint64_t result = qword_1EA844870;
  if (!qword_1EA844870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844870);
  }
  return result;
}

unint64_t sub_1D79531F8()
{
  unint64_t result = qword_1EA844878;
  if (!qword_1EA844878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844878);
  }
  return result;
}

unint64_t sub_1D795324C()
{
  unint64_t result = qword_1EA844880;
  if (!qword_1EA844880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844880);
  }
  return result;
}

unint64_t sub_1D79532A0()
{
  unint64_t result = qword_1EA844888;
  if (!qword_1EA844888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844888);
  }
  return result;
}

unint64_t sub_1D79532F4()
{
  unint64_t result = qword_1EA844890;
  if (!qword_1EA844890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844890);
  }
  return result;
}

unint64_t sub_1D7953348()
{
  unint64_t result = qword_1EA844898;
  if (!qword_1EA844898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844898);
  }
  return result;
}

unint64_t sub_1D795339C()
{
  unint64_t result = qword_1EA8448A0;
  if (!qword_1EA8448A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8448A0);
  }
  return result;
}

unint64_t sub_1D79533F0()
{
  unint64_t result = qword_1EA8448A8;
  if (!qword_1EA8448A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8448A8);
  }
  return result;
}

unint64_t sub_1D7953444()
{
  unint64_t result = qword_1EA8448B0;
  if (!qword_1EA8448B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8448B0);
  }
  return result;
}

unint64_t sub_1D7953498()
{
  unint64_t result = qword_1EA8448B8;
  if (!qword_1EA8448B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8448B8);
  }
  return result;
}

unint64_t sub_1D79534EC()
{
  unint64_t result = qword_1EA8448C0;
  if (!qword_1EA8448C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8448C0);
  }
  return result;
}

unint64_t sub_1D7953540()
{
  unint64_t result = qword_1EA8448C8;
  if (!qword_1EA8448C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8448C8);
  }
  return result;
}

unint64_t sub_1D7953594()
{
  unint64_t result = qword_1EA8448D0;
  if (!qword_1EA8448D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8448D0);
  }
  return result;
}

unint64_t sub_1D79535E8()
{
  unint64_t result = qword_1EA8448D8;
  if (!qword_1EA8448D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8448D8);
  }
  return result;
}

unint64_t sub_1D795363C()
{
  unint64_t result = qword_1EA8448E0;
  if (!qword_1EA8448E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8448E0);
  }
  return result;
}

unint64_t sub_1D7953690()
{
  unint64_t result = qword_1EA8448E8;
  if (!qword_1EA8448E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8448E8);
  }
  return result;
}

unint64_t sub_1D79536E4()
{
  unint64_t result = qword_1EA8448F0;
  if (!qword_1EA8448F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8448F0);
  }
  return result;
}

unint64_t sub_1D7953738()
{
  unint64_t result = qword_1EA8448F8;
  if (!qword_1EA8448F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8448F8);
  }
  return result;
}

unint64_t sub_1D795378C()
{
  unint64_t result = qword_1EA844900;
  if (!qword_1EA844900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844900);
  }
  return result;
}

unint64_t sub_1D79537E0()
{
  unint64_t result = qword_1EA844908;
  if (!qword_1EA844908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844908);
  }
  return result;
}

unint64_t sub_1D7953834()
{
  unint64_t result = qword_1EA844910;
  if (!qword_1EA844910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844910);
  }
  return result;
}

unint64_t sub_1D7953888()
{
  unint64_t result = qword_1EA844918;
  if (!qword_1EA844918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844918);
  }
  return result;
}

unint64_t sub_1D79538DC()
{
  unint64_t result = qword_1EA844920;
  if (!qword_1EA844920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844920);
  }
  return result;
}

unint64_t sub_1D7953930()
{
  unint64_t result = qword_1EA844928;
  if (!qword_1EA844928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844928);
  }
  return result;
}

uint64_t sub_1D7953984(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1D795399C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1D79539B4()
{
  unint64_t result = qword_1EA844A20;
  if (!qword_1EA844A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844A20);
  }
  return result;
}

unint64_t sub_1D7953A08()
{
  unint64_t result = qword_1EA844A38;
  if (!qword_1EA844A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844A38);
  }
  return result;
}

uint64_t sub_1D7953A5C(uint64_t a1)
{
  return a1;
}

unint64_t sub_1D7953AA4()
{
  unint64_t result = qword_1EA844A50;
  if (!qword_1EA844A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844A50);
  }
  return result;
}

uint64_t sub_1D7953AF8(uint64_t a1)
{
  return a1;
}

unint64_t sub_1D7953B40()
{
  unint64_t result = qword_1EA844A60;
  if (!qword_1EA844A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844A60);
  }
  return result;
}

unint64_t sub_1D7953B94()
{
  unint64_t result = qword_1EA844A68;
  if (!qword_1EA844A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844A68);
  }
  return result;
}

unint64_t sub_1D7953BE8()
{
  unint64_t result = qword_1EA844A80;
  if (!qword_1EA844A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844A80);
  }
  return result;
}

unint64_t sub_1D7953C3C()
{
  unint64_t result = qword_1EA844A98;
  if (!qword_1EA844A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844A98);
  }
  return result;
}

uint64_t sub_1D7953C90(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D7953CFC()
{
  unint64_t result = qword_1EA844AA8;
  if (!qword_1EA844AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844AA8);
  }
  return result;
}

uint64_t sub_1D7953D50(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for MetricsFlags();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D7953D94(uint64_t a1)
{
  return a1;
}

uint64_t sub_1D7953E04(uint64_t a1)
{
  return a1;
}

uint64_t sub_1D7953E74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA844AB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D7953EDC(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 392);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  int v2 = v1 - 1;
  if (v2 < 0) {
    int v2 = -1;
  }
  return (v2 + 1);
}

unint64_t sub_1D7953F04()
{
  unint64_t result = qword_1EBDF93B0;
  if (!qword_1EBDF93B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDF93B0);
  }
  return result;
}

unint64_t sub_1D7953F5C()
{
  unint64_t result = qword_1EA844AC0;
  if (!qword_1EA844AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844AC0);
  }
  return result;
}

unint64_t destroy for IQACode(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s13CoreIDVShared7IQACodeOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *assignWithCopy for IQACode(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for IQACode(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for IQACode(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFCF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483600);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 47;
  if (v4 >= 0x31) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for IQACode(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFD0)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483600;
    if (a3 >= 0x7FFFFFD0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFD0) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 47;
    }
  }
  return result;
}

void *sub_1D79541C8(void *result, int a2)
{
  if (a2 < 0)
  {
    *unint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for IQACode()
{
  return &type metadata for IQACode;
}

uint64_t destroy for IQCType(uint64_t a1)
{
  return sub_1D795399C(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s13CoreIDVShared7IQCTypeOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1D7953984(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for IQCType(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_1D7953984(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1D795399C(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for IQCType(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1D795399C(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for IQCType(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for IQCType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1D7954384(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1D795439C(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)unint64_t result = a2 - 2;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for IQCType()
{
  return &type metadata for IQCType;
}

uint64_t destroy for ImageQualityCriteria()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ImageQualityCriteria(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(unsigned char *)(a1 + 28) = *(unsigned char *)(a2 + 28);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  int v3 = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(_DWORD *)(a1 + 32) = v3;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 44) = *(unsigned char *)(a2 + 44);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 52) = *(unsigned char *)(a2 + 52);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 60) = *(unsigned char *)(a2 + 60);
  *(unsigned char *)(a1 + 68) = *(unsigned char *)(a2 + 68);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 84) = *(unsigned char *)(a2 + 84);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(unsigned char *)(a1 + 92) = *(unsigned char *)(a2 + 92);
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 100) = *(unsigned char *)(a2 + 100);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  int v4 = *(_DWORD *)(a2 + 104);
  *(unsigned char *)(a1 + 108) = *(unsigned char *)(a2 + 108);
  *(_DWORD *)(a1 + 104) = v4;
  int v5 = *(_DWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 116) = *(unsigned char *)(a2 + 116);
  *(_DWORD *)(a1 + 112) = v5;
  int v6 = *(_DWORD *)(a2 + 120);
  *(unsigned char *)(a1 + 124) = *(unsigned char *)(a2 + 124);
  *(_DWORD *)(a1 + 120) = v6;
  int v7 = *(_DWORD *)(a2 + 128);
  *(unsigned char *)(a1 + 132) = *(unsigned char *)(a2 + 132);
  *(_DWORD *)(a1 + 128) = v7;
  int v8 = *(_DWORD *)(a2 + 136);
  *(unsigned char *)(a1 + 140) = *(unsigned char *)(a2 + 140);
  *(_DWORD *)(a1 + 136) = v8;
  int v9 = *(_DWORD *)(a2 + 144);
  *(unsigned char *)(a1 + 148) = *(unsigned char *)(a2 + 148);
  *(_DWORD *)(a1 + 144) = v9;
  int v10 = *(_DWORD *)(a2 + 152);
  *(unsigned char *)(a1 + 156) = *(unsigned char *)(a2 + 156);
  *(_DWORD *)(a1 + 152) = v10;
  int v11 = *(_DWORD *)(a2 + 160);
  *(unsigned char *)(a1 + 164) = *(unsigned char *)(a2 + 164);
  *(_DWORD *)(a1 + 160) = v11;
  int v12 = *(_DWORD *)(a2 + 168);
  *(unsigned char *)(a1 + 172) = *(unsigned char *)(a2 + 172);
  *(_DWORD *)(a1 + 168) = v12;
  int v13 = *(_DWORD *)(a2 + 176);
  *(unsigned char *)(a1 + 180) = *(unsigned char *)(a2 + 180);
  *(_DWORD *)(a1 + 176) = v13;
  int v14 = *(_DWORD *)(a2 + 184);
  *(unsigned char *)(a1 + 188) = *(unsigned char *)(a2 + 188);
  *(_DWORD *)(a1 + 184) = v14;
  int v15 = *(_DWORD *)(a2 + 192);
  *(unsigned char *)(a1 + 196) = *(unsigned char *)(a2 + 196);
  *(_DWORD *)(a1 + 192) = v15;
  int v16 = *(_DWORD *)(a2 + 200);
  *(unsigned char *)(a1 + 204) = *(unsigned char *)(a2 + 204);
  *(_DWORD *)(a1 + 200) = v16;
  int v17 = *(_DWORD *)(a2 + 208);
  *(unsigned char *)(a1 + 212) = *(unsigned char *)(a2 + 212);
  *(_DWORD *)(a1 + 208) = v17;
  int v18 = *(_DWORD *)(a2 + 216);
  *(unsigned char *)(a1 + 220) = *(unsigned char *)(a2 + 220);
  *(_DWORD *)(a1 + 216) = v18;
  int v19 = *(_DWORD *)(a2 + 224);
  *(unsigned char *)(a1 + 228) = *(unsigned char *)(a2 + 228);
  *(_DWORD *)(a1 + 224) = v19;
  int v20 = *(_DWORD *)(a2 + 232);
  *(unsigned char *)(a1 + 236) = *(unsigned char *)(a2 + 236);
  *(_DWORD *)(a1 + 232) = v20;
  int v21 = *(_DWORD *)(a2 + 240);
  *(unsigned char *)(a1 + 244) = *(unsigned char *)(a2 + 244);
  *(_DWORD *)(a1 + 240) = v21;
  int v22 = *(_DWORD *)(a2 + 248);
  *(unsigned char *)(a1 + 252) = *(unsigned char *)(a2 + 252);
  *(_DWORD *)(a1 + 248) = v22;
  int v23 = *(_DWORD *)(a2 + 256);
  *(unsigned char *)(a1 + 260) = *(unsigned char *)(a2 + 260);
  *(_DWORD *)(a1 + 256) = v23;
  int v24 = *(_DWORD *)(a2 + 264);
  *(unsigned char *)(a1 + 268) = *(unsigned char *)(a2 + 268);
  *(_DWORD *)(a1 + 264) = v24;
  int v25 = *(_DWORD *)(a2 + 272);
  *(unsigned char *)(a1 + 276) = *(unsigned char *)(a2 + 276);
  *(_DWORD *)(a1 + 272) = v25;
  int v26 = *(_DWORD *)(a2 + 280);
  *(unsigned char *)(a1 + 284) = *(unsigned char *)(a2 + 284);
  *(_DWORD *)(a1 + 280) = v26;
  int v27 = *(_DWORD *)(a2 + 288);
  *(unsigned char *)(a1 + 292) = *(unsigned char *)(a2 + 292);
  *(_DWORD *)(a1 + 288) = v27;
  int v28 = *(_DWORD *)(a2 + 296);
  *(unsigned char *)(a1 + 300) = *(unsigned char *)(a2 + 300);
  *(_DWORD *)(a1 + 296) = v28;
  int v29 = *(_DWORD *)(a2 + 304);
  *(unsigned char *)(a1 + 308) = *(unsigned char *)(a2 + 308);
  *(_DWORD *)(a1 + 304) = v29;
  int v30 = *(_DWORD *)(a2 + 312);
  *(unsigned char *)(a1 + 316) = *(unsigned char *)(a2 + 316);
  *(_DWORD *)(a1 + 312) = v30;
  uint64_t v31 = *(void *)(a2 + 320);
  *(unsigned char *)(a1 + 328) = *(unsigned char *)(a2 + 328);
  *(void *)(a1 + 320) = v31;
  uint64_t v32 = *(void *)(a2 + 336);
  *(unsigned char *)(a1 + 344) = *(unsigned char *)(a2 + 344);
  *(void *)(a1 + 336) = v32;
  uint64_t v33 = *(void *)(a2 + 352);
  *(unsigned char *)(a1 + 360) = *(unsigned char *)(a2 + 360);
  *(void *)(a1 + 352) = v33;
  uint64_t v34 = *(void *)(a2 + 368);
  *(unsigned char *)(a1 + 376) = *(unsigned char *)(a2 + 376);
  *(void *)(a1 + 368) = v34;
  *(unsigned char *)(a1 + 377) = *(unsigned char *)(a2 + 377);
  *(unsigned char *)(a1 + 378) = *(unsigned char *)(a2 + 378);
  uint64_t v35 = *(void *)(a2 + 392);
  *(void *)(a1 + 384) = *(void *)(a2 + 384);
  *(void *)(a1 + 392) = v35;
  uint64_t v36 = *(void *)(a2 + 408);
  *(void *)(a1 + 400) = *(void *)(a2 + 400);
  *(void *)(a1 + 408) = v36;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ImageQualityCriteria(uint64_t a1, int *a2)
{
  int v4 = *a2;
  *(unsigned char *)(a1 + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)a1 = v4;
  int v5 = a2[2];
  *(unsigned char *)(a1 + 12) = *((unsigned char *)a2 + 12);
  *(_DWORD *)(a1 + 8) = v5;
  int v6 = a2[4];
  *(unsigned char *)(a1 + 20) = *((unsigned char *)a2 + 20);
  *(_DWORD *)(a1 + 16) = v6;
  int v7 = a2[6];
  *(unsigned char *)(a1 + 28) = *((unsigned char *)a2 + 28);
  *(_DWORD *)(a1 + 24) = v7;
  int v8 = a2[8];
  *(unsigned char *)(a1 + 36) = *((unsigned char *)a2 + 36);
  *(_DWORD *)(a1 + 32) = v8;
  int v9 = a2[10];
  *(unsigned char *)(a1 + 44) = *((unsigned char *)a2 + 44);
  *(_DWORD *)(a1 + 40) = v9;
  int v10 = a2[12];
  *(unsigned char *)(a1 + 52) = *((unsigned char *)a2 + 52);
  *(_DWORD *)(a1 + 48) = v10;
  int v11 = a2[14];
  *(unsigned char *)(a1 + 60) = *((unsigned char *)a2 + 60);
  *(_DWORD *)(a1 + 56) = v11;
  int v12 = a2[16];
  *(unsigned char *)(a1 + 68) = *((unsigned char *)a2 + 68);
  *(_DWORD *)(a1 + 64) = v12;
  int v13 = a2[18];
  *(unsigned char *)(a1 + 76) = *((unsigned char *)a2 + 76);
  *(_DWORD *)(a1 + 72) = v13;
  int v14 = a2[20];
  *(unsigned char *)(a1 + 84) = *((unsigned char *)a2 + 84);
  *(_DWORD *)(a1 + 80) = v14;
  int v15 = a2[22];
  *(unsigned char *)(a1 + 92) = *((unsigned char *)a2 + 92);
  *(_DWORD *)(a1 + 88) = v15;
  int v16 = a2[24];
  *(unsigned char *)(a1 + 100) = *((unsigned char *)a2 + 100);
  *(_DWORD *)(a1 + 96) = v16;
  int v17 = a2[26];
  *(unsigned char *)(a1 + 108) = *((unsigned char *)a2 + 108);
  *(_DWORD *)(a1 + 104) = v17;
  int v18 = a2[28];
  *(unsigned char *)(a1 + 116) = *((unsigned char *)a2 + 116);
  *(_DWORD *)(a1 + 112) = v18;
  int v19 = a2[30];
  *(unsigned char *)(a1 + 124) = *((unsigned char *)a2 + 124);
  *(_DWORD *)(a1 + 120) = v19;
  int v20 = a2[32];
  *(unsigned char *)(a1 + 132) = *((unsigned char *)a2 + 132);
  *(_DWORD *)(a1 + 128) = v20;
  int v21 = a2[34];
  *(unsigned char *)(a1 + 140) = *((unsigned char *)a2 + 140);
  *(_DWORD *)(a1 + 136) = v21;
  int v22 = a2[36];
  *(unsigned char *)(a1 + 148) = *((unsigned char *)a2 + 148);
  *(_DWORD *)(a1 + 144) = v22;
  int v23 = a2[38];
  *(unsigned char *)(a1 + 156) = *((unsigned char *)a2 + 156);
  *(_DWORD *)(a1 + 152) = v23;
  int v24 = a2[40];
  *(unsigned char *)(a1 + 164) = *((unsigned char *)a2 + 164);
  *(_DWORD *)(a1 + 160) = v24;
  int v25 = a2[42];
  *(unsigned char *)(a1 + 172) = *((unsigned char *)a2 + 172);
  *(_DWORD *)(a1 + 168) = v25;
  int v26 = a2[44];
  *(unsigned char *)(a1 + 180) = *((unsigned char *)a2 + 180);
  *(_DWORD *)(a1 + 176) = v26;
  int v27 = a2[46];
  *(unsigned char *)(a1 + 188) = *((unsigned char *)a2 + 188);
  *(_DWORD *)(a1 + 184) = v27;
  int v28 = a2[48];
  *(unsigned char *)(a1 + 196) = *((unsigned char *)a2 + 196);
  *(_DWORD *)(a1 + 192) = v28;
  int v29 = a2[50];
  *(unsigned char *)(a1 + 204) = *((unsigned char *)a2 + 204);
  *(_DWORD *)(a1 + 200) = v29;
  int v30 = a2[52];
  *(unsigned char *)(a1 + 212) = *((unsigned char *)a2 + 212);
  *(_DWORD *)(a1 + 208) = v30;
  int v31 = a2[54];
  *(unsigned char *)(a1 + 220) = *((unsigned char *)a2 + 220);
  *(_DWORD *)(a1 + 216) = v31;
  int v32 = a2[56];
  *(unsigned char *)(a1 + 228) = *((unsigned char *)a2 + 228);
  *(_DWORD *)(a1 + 224) = v32;
  int v33 = a2[58];
  *(unsigned char *)(a1 + 236) = *((unsigned char *)a2 + 236);
  *(_DWORD *)(a1 + 232) = v33;
  int v34 = a2[60];
  *(unsigned char *)(a1 + 244) = *((unsigned char *)a2 + 244);
  *(_DWORD *)(a1 + 240) = v34;
  int v35 = a2[62];
  *(unsigned char *)(a1 + 252) = *((unsigned char *)a2 + 252);
  *(_DWORD *)(a1 + 248) = v35;
  int v36 = a2[64];
  *(unsigned char *)(a1 + 260) = *((unsigned char *)a2 + 260);
  *(_DWORD *)(a1 + 256) = v36;
  int v37 = a2[66];
  *(unsigned char *)(a1 + 268) = *((unsigned char *)a2 + 268);
  *(_DWORD *)(a1 + 264) = v37;
  int v38 = a2[68];
  *(unsigned char *)(a1 + 276) = *((unsigned char *)a2 + 276);
  *(_DWORD *)(a1 + 272) = v38;
  int v39 = a2[70];
  *(unsigned char *)(a1 + 284) = *((unsigned char *)a2 + 284);
  *(_DWORD *)(a1 + 280) = v39;
  int v40 = a2[72];
  *(unsigned char *)(a1 + 292) = *((unsigned char *)a2 + 292);
  *(_DWORD *)(a1 + 288) = v40;
  int v41 = a2[74];
  *(unsigned char *)(a1 + 300) = *((unsigned char *)a2 + 300);
  *(_DWORD *)(a1 + 296) = v41;
  int v42 = a2[76];
  *(unsigned char *)(a1 + 308) = *((unsigned char *)a2 + 308);
  *(_DWORD *)(a1 + 304) = v42;
  int v43 = a2[78];
  *(unsigned char *)(a1 + 316) = *((unsigned char *)a2 + 316);
  *(_DWORD *)(a1 + 312) = v43;
  uint64_t v44 = *((void *)a2 + 40);
  *(unsigned char *)(a1 + 328) = *((unsigned char *)a2 + 328);
  *(void *)(a1 + 320) = v44;
  uint64_t v45 = *((void *)a2 + 42);
  *(unsigned char *)(a1 + 344) = *((unsigned char *)a2 + 344);
  *(void *)(a1 + 336) = v45;
  uint64_t v46 = *((void *)a2 + 44);
  *(unsigned char *)(a1 + 360) = *((unsigned char *)a2 + 360);
  *(void *)(a1 + 352) = v46;
  uint64_t v47 = *((void *)a2 + 46);
  *(unsigned char *)(a1 + 376) = *((unsigned char *)a2 + 376);
  *(void *)(a1 + 368) = v47;
  *(unsigned char *)(a1 + 377) = *((unsigned char *)a2 + 377);
  *(unsigned char *)(a1 + 378) = *((unsigned char *)a2 + 378);
  *(void *)(a1 + 384) = *((void *)a2 + 48);
  *(void *)(a1 + 392) = *((void *)a2 + 49);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 400) = *((void *)a2 + 50);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 408) = *((void *)a2 + 51);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy416_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x1A0uLL);
}

uint64_t assignWithTake for ImageQualityCriteria(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(unsigned char *)(a1 + 28) = *(unsigned char *)(a2 + 28);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  int v4 = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(_DWORD *)(a1 + 32) = v4;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 44) = *(unsigned char *)(a2 + 44);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 52) = *(unsigned char *)(a2 + 52);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 60) = *(unsigned char *)(a2 + 60);
  *(unsigned char *)(a1 + 68) = *(unsigned char *)(a2 + 68);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 84) = *(unsigned char *)(a2 + 84);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(unsigned char *)(a1 + 92) = *(unsigned char *)(a2 + 92);
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 100) = *(unsigned char *)(a2 + 100);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  int v5 = *(_DWORD *)(a2 + 104);
  *(unsigned char *)(a1 + 108) = *(unsigned char *)(a2 + 108);
  *(_DWORD *)(a1 + 104) = v5;
  int v6 = *(_DWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 116) = *(unsigned char *)(a2 + 116);
  *(_DWORD *)(a1 + 112) = v6;
  int v7 = *(_DWORD *)(a2 + 120);
  *(unsigned char *)(a1 + 124) = *(unsigned char *)(a2 + 124);
  *(_DWORD *)(a1 + 120) = v7;
  int v8 = *(_DWORD *)(a2 + 128);
  *(unsigned char *)(a1 + 132) = *(unsigned char *)(a2 + 132);
  *(_DWORD *)(a1 + 128) = v8;
  int v9 = *(_DWORD *)(a2 + 136);
  *(unsigned char *)(a1 + 140) = *(unsigned char *)(a2 + 140);
  *(_DWORD *)(a1 + 136) = v9;
  int v10 = *(_DWORD *)(a2 + 144);
  *(unsigned char *)(a1 + 148) = *(unsigned char *)(a2 + 148);
  *(_DWORD *)(a1 + 144) = v10;
  int v11 = *(_DWORD *)(a2 + 152);
  *(unsigned char *)(a1 + 156) = *(unsigned char *)(a2 + 156);
  *(_DWORD *)(a1 + 152) = v11;
  int v12 = *(_DWORD *)(a2 + 160);
  *(unsigned char *)(a1 + 164) = *(unsigned char *)(a2 + 164);
  *(_DWORD *)(a1 + 160) = v12;
  int v13 = *(_DWORD *)(a2 + 168);
  *(unsigned char *)(a1 + 172) = *(unsigned char *)(a2 + 172);
  *(_DWORD *)(a1 + 168) = v13;
  int v14 = *(_DWORD *)(a2 + 176);
  *(unsigned char *)(a1 + 180) = *(unsigned char *)(a2 + 180);
  *(_DWORD *)(a1 + 176) = v14;
  int v15 = *(_DWORD *)(a2 + 184);
  *(unsigned char *)(a1 + 188) = *(unsigned char *)(a2 + 188);
  *(_DWORD *)(a1 + 184) = v15;
  int v16 = *(_DWORD *)(a2 + 192);
  *(unsigned char *)(a1 + 196) = *(unsigned char *)(a2 + 196);
  *(_DWORD *)(a1 + 192) = v16;
  int v17 = *(_DWORD *)(a2 + 200);
  *(unsigned char *)(a1 + 204) = *(unsigned char *)(a2 + 204);
  *(_DWORD *)(a1 + 200) = v17;
  int v18 = *(_DWORD *)(a2 + 208);
  *(unsigned char *)(a1 + 212) = *(unsigned char *)(a2 + 212);
  *(_DWORD *)(a1 + 208) = v18;
  int v19 = *(_DWORD *)(a2 + 216);
  *(unsigned char *)(a1 + 220) = *(unsigned char *)(a2 + 220);
  *(_DWORD *)(a1 + 216) = v19;
  int v20 = *(_DWORD *)(a2 + 224);
  *(unsigned char *)(a1 + 228) = *(unsigned char *)(a2 + 228);
  *(_DWORD *)(a1 + 224) = v20;
  int v21 = *(_DWORD *)(a2 + 232);
  *(unsigned char *)(a1 + 236) = *(unsigned char *)(a2 + 236);
  *(_DWORD *)(a1 + 232) = v21;
  int v22 = *(_DWORD *)(a2 + 240);
  *(unsigned char *)(a1 + 244) = *(unsigned char *)(a2 + 244);
  *(_DWORD *)(a1 + 240) = v22;
  int v23 = *(_DWORD *)(a2 + 248);
  *(unsigned char *)(a1 + 252) = *(unsigned char *)(a2 + 252);
  *(_DWORD *)(a1 + 248) = v23;
  int v24 = *(_DWORD *)(a2 + 256);
  *(unsigned char *)(a1 + 260) = *(unsigned char *)(a2 + 260);
  *(_DWORD *)(a1 + 256) = v24;
  int v25 = *(_DWORD *)(a2 + 264);
  *(unsigned char *)(a1 + 268) = *(unsigned char *)(a2 + 268);
  *(_DWORD *)(a1 + 264) = v25;
  int v26 = *(_DWORD *)(a2 + 272);
  *(unsigned char *)(a1 + 276) = *(unsigned char *)(a2 + 276);
  *(_DWORD *)(a1 + 272) = v26;
  int v27 = *(_DWORD *)(a2 + 280);
  *(unsigned char *)(a1 + 284) = *(unsigned char *)(a2 + 284);
  *(_DWORD *)(a1 + 280) = v27;
  int v28 = *(_DWORD *)(a2 + 288);
  *(unsigned char *)(a1 + 292) = *(unsigned char *)(a2 + 292);
  *(_DWORD *)(a1 + 288) = v28;
  int v29 = *(_DWORD *)(a2 + 296);
  *(unsigned char *)(a1 + 300) = *(unsigned char *)(a2 + 300);
  *(_DWORD *)(a1 + 296) = v29;
  int v30 = *(_DWORD *)(a2 + 304);
  *(unsigned char *)(a1 + 308) = *(unsigned char *)(a2 + 308);
  *(_DWORD *)(a1 + 304) = v30;
  int v31 = *(_DWORD *)(a2 + 312);
  *(unsigned char *)(a1 + 316) = *(unsigned char *)(a2 + 316);
  *(_DWORD *)(a1 + 312) = v31;
  uint64_t v32 = *(void *)(a2 + 320);
  *(unsigned char *)(a1 + 328) = *(unsigned char *)(a2 + 328);
  *(void *)(a1 + 320) = v32;
  uint64_t v33 = *(void *)(a2 + 336);
  *(unsigned char *)(a1 + 344) = *(unsigned char *)(a2 + 344);
  *(void *)(a1 + 336) = v33;
  uint64_t v34 = *(void *)(a2 + 352);
  *(unsigned char *)(a1 + 360) = *(unsigned char *)(a2 + 360);
  *(void *)(a1 + 352) = v34;
  uint64_t v35 = *(void *)(a2 + 368);
  *(unsigned char *)(a1 + 376) = *(unsigned char *)(a2 + 376);
  *(void *)(a1 + 368) = v35;
  *(unsigned char *)(a1 + 377) = *(unsigned char *)(a2 + 377);
  *(unsigned char *)(a1 + 378) = *(unsigned char *)(a2 + 378);
  uint64_t v36 = *(void *)(a2 + 392);
  *(void *)(a1 + 384) = *(void *)(a2 + 384);
  *(void *)(a1 + 392) = v36;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 400) = *(void *)(a2 + 400);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 408) = *(void *)(a2 + 408);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ImageQualityCriteria(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 416)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 392);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ImageQualityCriteria(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 408) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 416) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 416) = 0;
    }
    if (a2) {
      *(void *)(result + 392) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageQualityCriteria()
{
  return &type metadata for ImageQualityCriteria;
}

uint64_t destroy for ImageQualitySettings()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ImageQualitySettings(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(unsigned char *)(a1 + 28) = *(unsigned char *)(a2 + 28);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  int v3 = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(_DWORD *)(a1 + 32) = v3;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 44) = *(unsigned char *)(a2 + 44);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 52) = *(unsigned char *)(a2 + 52);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 60) = *(unsigned char *)(a2 + 60);
  *(unsigned char *)(a1 + 68) = *(unsigned char *)(a2 + 68);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 84) = *(unsigned char *)(a2 + 84);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(unsigned char *)(a1 + 92) = *(unsigned char *)(a2 + 92);
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 100) = *(unsigned char *)(a2 + 100);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  int v4 = *(_DWORD *)(a2 + 104);
  *(unsigned char *)(a1 + 108) = *(unsigned char *)(a2 + 108);
  *(_DWORD *)(a1 + 104) = v4;
  int v5 = *(_DWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 116) = *(unsigned char *)(a2 + 116);
  *(_DWORD *)(a1 + 112) = v5;
  int v6 = *(_DWORD *)(a2 + 120);
  *(unsigned char *)(a1 + 124) = *(unsigned char *)(a2 + 124);
  *(_DWORD *)(a1 + 120) = v6;
  int v7 = *(_DWORD *)(a2 + 128);
  *(unsigned char *)(a1 + 132) = *(unsigned char *)(a2 + 132);
  *(_DWORD *)(a1 + 128) = v7;
  int v8 = *(_DWORD *)(a2 + 136);
  *(unsigned char *)(a1 + 140) = *(unsigned char *)(a2 + 140);
  *(_DWORD *)(a1 + 136) = v8;
  int v9 = *(_DWORD *)(a2 + 144);
  *(unsigned char *)(a1 + 148) = *(unsigned char *)(a2 + 148);
  *(_DWORD *)(a1 + 144) = v9;
  int v10 = *(_DWORD *)(a2 + 152);
  *(unsigned char *)(a1 + 156) = *(unsigned char *)(a2 + 156);
  *(_DWORD *)(a1 + 152) = v10;
  int v11 = *(_DWORD *)(a2 + 160);
  *(unsigned char *)(a1 + 164) = *(unsigned char *)(a2 + 164);
  *(_DWORD *)(a1 + 160) = v11;
  int v12 = *(_DWORD *)(a2 + 168);
  *(unsigned char *)(a1 + 172) = *(unsigned char *)(a2 + 172);
  *(_DWORD *)(a1 + 168) = v12;
  int v13 = *(_DWORD *)(a2 + 176);
  *(unsigned char *)(a1 + 180) = *(unsigned char *)(a2 + 180);
  *(_DWORD *)(a1 + 176) = v13;
  int v14 = *(_DWORD *)(a2 + 184);
  *(unsigned char *)(a1 + 188) = *(unsigned char *)(a2 + 188);
  *(_DWORD *)(a1 + 184) = v14;
  int v15 = *(_DWORD *)(a2 + 192);
  *(unsigned char *)(a1 + 196) = *(unsigned char *)(a2 + 196);
  *(_DWORD *)(a1 + 192) = v15;
  int v16 = *(_DWORD *)(a2 + 200);
  *(unsigned char *)(a1 + 204) = *(unsigned char *)(a2 + 204);
  *(_DWORD *)(a1 + 200) = v16;
  int v17 = *(_DWORD *)(a2 + 208);
  *(unsigned char *)(a1 + 212) = *(unsigned char *)(a2 + 212);
  *(_DWORD *)(a1 + 208) = v17;
  int v18 = *(_DWORD *)(a2 + 216);
  *(unsigned char *)(a1 + 220) = *(unsigned char *)(a2 + 220);
  *(_DWORD *)(a1 + 216) = v18;
  int v19 = *(_DWORD *)(a2 + 224);
  *(unsigned char *)(a1 + 228) = *(unsigned char *)(a2 + 228);
  *(_DWORD *)(a1 + 224) = v19;
  int v20 = *(_DWORD *)(a2 + 232);
  *(unsigned char *)(a1 + 236) = *(unsigned char *)(a2 + 236);
  *(_DWORD *)(a1 + 232) = v20;
  int v21 = *(_DWORD *)(a2 + 240);
  *(unsigned char *)(a1 + 244) = *(unsigned char *)(a2 + 244);
  *(_DWORD *)(a1 + 240) = v21;
  int v22 = *(_DWORD *)(a2 + 248);
  *(unsigned char *)(a1 + 252) = *(unsigned char *)(a2 + 252);
  *(_DWORD *)(a1 + 248) = v22;
  int v23 = *(_DWORD *)(a2 + 256);
  *(unsigned char *)(a1 + 260) = *(unsigned char *)(a2 + 260);
  *(_DWORD *)(a1 + 256) = v23;
  int v24 = *(_DWORD *)(a2 + 264);
  *(unsigned char *)(a1 + 268) = *(unsigned char *)(a2 + 268);
  *(_DWORD *)(a1 + 264) = v24;
  int v25 = *(_DWORD *)(a2 + 272);
  *(unsigned char *)(a1 + 276) = *(unsigned char *)(a2 + 276);
  *(_DWORD *)(a1 + 272) = v25;
  int v26 = *(_DWORD *)(a2 + 280);
  *(unsigned char *)(a1 + 284) = *(unsigned char *)(a2 + 284);
  *(_DWORD *)(a1 + 280) = v26;
  int v27 = *(_DWORD *)(a2 + 288);
  *(unsigned char *)(a1 + 292) = *(unsigned char *)(a2 + 292);
  *(_DWORD *)(a1 + 288) = v27;
  int v28 = *(_DWORD *)(a2 + 296);
  *(unsigned char *)(a1 + 300) = *(unsigned char *)(a2 + 300);
  *(_DWORD *)(a1 + 296) = v28;
  int v29 = *(_DWORD *)(a2 + 304);
  *(unsigned char *)(a1 + 308) = *(unsigned char *)(a2 + 308);
  *(_DWORD *)(a1 + 304) = v29;
  int v30 = *(_DWORD *)(a2 + 312);
  *(unsigned char *)(a1 + 316) = *(unsigned char *)(a2 + 316);
  *(_DWORD *)(a1 + 312) = v30;
  uint64_t v31 = *(void *)(a2 + 320);
  *(unsigned char *)(a1 + 328) = *(unsigned char *)(a2 + 328);
  *(void *)(a1 + 320) = v31;
  uint64_t v32 = *(void *)(a2 + 336);
  *(unsigned char *)(a1 + 344) = *(unsigned char *)(a2 + 344);
  *(void *)(a1 + 336) = v32;
  uint64_t v33 = *(void *)(a2 + 352);
  *(unsigned char *)(a1 + 360) = *(unsigned char *)(a2 + 360);
  *(void *)(a1 + 352) = v33;
  uint64_t v34 = *(void *)(a2 + 368);
  *(unsigned char *)(a1 + 376) = *(unsigned char *)(a2 + 376);
  *(void *)(a1 + 368) = v34;
  *(unsigned char *)(a1 + 377) = *(unsigned char *)(a2 + 377);
  *(unsigned char *)(a1 + 378) = *(unsigned char *)(a2 + 378);
  uint64_t v35 = *(void *)(a2 + 392);
  *(void *)(a1 + 384) = *(void *)(a2 + 384);
  *(void *)(a1 + 392) = v35;
  uint64_t v36 = *(void *)(a2 + 408);
  *(void *)(a1 + 400) = *(void *)(a2 + 400);
  *(void *)(a1 + 408) = v36;
  uint64_t v37 = *(void *)(a2 + 424);
  *(void *)(a1 + 416) = *(void *)(a2 + 416);
  *(void *)(a1 + 424) = v37;
  uint64_t v38 = *(void *)(a2 + 440);
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  *(void *)(a1 + 440) = v38;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ImageQualitySettings(uint64_t a1, int *a2)
{
  int v4 = *a2;
  *(unsigned char *)(a1 + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)a1 = v4;
  int v5 = a2[2];
  *(unsigned char *)(a1 + 12) = *((unsigned char *)a2 + 12);
  *(_DWORD *)(a1 + 8) = v5;
  int v6 = a2[4];
  *(unsigned char *)(a1 + 20) = *((unsigned char *)a2 + 20);
  *(_DWORD *)(a1 + 16) = v6;
  int v7 = a2[6];
  *(unsigned char *)(a1 + 28) = *((unsigned char *)a2 + 28);
  *(_DWORD *)(a1 + 24) = v7;
  int v8 = a2[8];
  *(unsigned char *)(a1 + 36) = *((unsigned char *)a2 + 36);
  *(_DWORD *)(a1 + 32) = v8;
  int v9 = a2[10];
  *(unsigned char *)(a1 + 44) = *((unsigned char *)a2 + 44);
  *(_DWORD *)(a1 + 40) = v9;
  int v10 = a2[12];
  *(unsigned char *)(a1 + 52) = *((unsigned char *)a2 + 52);
  *(_DWORD *)(a1 + 48) = v10;
  int v11 = a2[14];
  *(unsigned char *)(a1 + 60) = *((unsigned char *)a2 + 60);
  *(_DWORD *)(a1 + 56) = v11;
  int v12 = a2[16];
  *(unsigned char *)(a1 + 68) = *((unsigned char *)a2 + 68);
  *(_DWORD *)(a1 + 64) = v12;
  int v13 = a2[18];
  *(unsigned char *)(a1 + 76) = *((unsigned char *)a2 + 76);
  *(_DWORD *)(a1 + 72) = v13;
  int v14 = a2[20];
  *(unsigned char *)(a1 + 84) = *((unsigned char *)a2 + 84);
  *(_DWORD *)(a1 + 80) = v14;
  int v15 = a2[22];
  *(unsigned char *)(a1 + 92) = *((unsigned char *)a2 + 92);
  *(_DWORD *)(a1 + 88) = v15;
  int v16 = a2[24];
  *(unsigned char *)(a1 + 100) = *((unsigned char *)a2 + 100);
  *(_DWORD *)(a1 + 96) = v16;
  int v17 = a2[26];
  *(unsigned char *)(a1 + 108) = *((unsigned char *)a2 + 108);
  *(_DWORD *)(a1 + 104) = v17;
  int v18 = a2[28];
  *(unsigned char *)(a1 + 116) = *((unsigned char *)a2 + 116);
  *(_DWORD *)(a1 + 112) = v18;
  int v19 = a2[30];
  *(unsigned char *)(a1 + 124) = *((unsigned char *)a2 + 124);
  *(_DWORD *)(a1 + 120) = v19;
  int v20 = a2[32];
  *(unsigned char *)(a1 + 132) = *((unsigned char *)a2 + 132);
  *(_DWORD *)(a1 + 128) = v20;
  int v21 = a2[34];
  *(unsigned char *)(a1 + 140) = *((unsigned char *)a2 + 140);
  *(_DWORD *)(a1 + 136) = v21;
  int v22 = a2[36];
  *(unsigned char *)(a1 + 148) = *((unsigned char *)a2 + 148);
  *(_DWORD *)(a1 + 144) = v22;
  int v23 = a2[38];
  *(unsigned char *)(a1 + 156) = *((unsigned char *)a2 + 156);
  *(_DWORD *)(a1 + 152) = v23;
  int v24 = a2[40];
  *(unsigned char *)(a1 + 164) = *((unsigned char *)a2 + 164);
  *(_DWORD *)(a1 + 160) = v24;
  int v25 = a2[42];
  *(unsigned char *)(a1 + 172) = *((unsigned char *)a2 + 172);
  *(_DWORD *)(a1 + 168) = v25;
  int v26 = a2[44];
  *(unsigned char *)(a1 + 180) = *((unsigned char *)a2 + 180);
  *(_DWORD *)(a1 + 176) = v26;
  int v27 = a2[46];
  *(unsigned char *)(a1 + 188) = *((unsigned char *)a2 + 188);
  *(_DWORD *)(a1 + 184) = v27;
  int v28 = a2[48];
  *(unsigned char *)(a1 + 196) = *((unsigned char *)a2 + 196);
  *(_DWORD *)(a1 + 192) = v28;
  int v29 = a2[50];
  *(unsigned char *)(a1 + 204) = *((unsigned char *)a2 + 204);
  *(_DWORD *)(a1 + 200) = v29;
  int v30 = a2[52];
  *(unsigned char *)(a1 + 212) = *((unsigned char *)a2 + 212);
  *(_DWORD *)(a1 + 208) = v30;
  int v31 = a2[54];
  *(unsigned char *)(a1 + 220) = *((unsigned char *)a2 + 220);
  *(_DWORD *)(a1 + 216) = v31;
  int v32 = a2[56];
  *(unsigned char *)(a1 + 228) = *((unsigned char *)a2 + 228);
  *(_DWORD *)(a1 + 224) = v32;
  int v33 = a2[58];
  *(unsigned char *)(a1 + 236) = *((unsigned char *)a2 + 236);
  *(_DWORD *)(a1 + 232) = v33;
  int v34 = a2[60];
  *(unsigned char *)(a1 + 244) = *((unsigned char *)a2 + 244);
  *(_DWORD *)(a1 + 240) = v34;
  int v35 = a2[62];
  *(unsigned char *)(a1 + 252) = *((unsigned char *)a2 + 252);
  *(_DWORD *)(a1 + 248) = v35;
  int v36 = a2[64];
  *(unsigned char *)(a1 + 260) = *((unsigned char *)a2 + 260);
  *(_DWORD *)(a1 + 256) = v36;
  int v37 = a2[66];
  *(unsigned char *)(a1 + 268) = *((unsigned char *)a2 + 268);
  *(_DWORD *)(a1 + 264) = v37;
  int v38 = a2[68];
  *(unsigned char *)(a1 + 276) = *((unsigned char *)a2 + 276);
  *(_DWORD *)(a1 + 272) = v38;
  int v39 = a2[70];
  *(unsigned char *)(a1 + 284) = *((unsigned char *)a2 + 284);
  *(_DWORD *)(a1 + 280) = v39;
  int v40 = a2[72];
  *(unsigned char *)(a1 + 292) = *((unsigned char *)a2 + 292);
  *(_DWORD *)(a1 + 288) = v40;
  int v41 = a2[74];
  *(unsigned char *)(a1 + 300) = *((unsigned char *)a2 + 300);
  *(_DWORD *)(a1 + 296) = v41;
  int v42 = a2[76];
  *(unsigned char *)(a1 + 308) = *((unsigned char *)a2 + 308);
  *(_DWORD *)(a1 + 304) = v42;
  int v43 = a2[78];
  *(unsigned char *)(a1 + 316) = *((unsigned char *)a2 + 316);
  *(_DWORD *)(a1 + 312) = v43;
  uint64_t v44 = *((void *)a2 + 40);
  *(unsigned char *)(a1 + 328) = *((unsigned char *)a2 + 328);
  *(void *)(a1 + 320) = v44;
  uint64_t v45 = *((void *)a2 + 42);
  *(unsigned char *)(a1 + 344) = *((unsigned char *)a2 + 344);
  *(void *)(a1 + 336) = v45;
  uint64_t v46 = *((void *)a2 + 44);
  *(unsigned char *)(a1 + 360) = *((unsigned char *)a2 + 360);
  *(void *)(a1 + 352) = v46;
  uint64_t v47 = *((void *)a2 + 46);
  *(unsigned char *)(a1 + 376) = *((unsigned char *)a2 + 376);
  *(void *)(a1 + 368) = v47;
  *(unsigned char *)(a1 + 377) = *((unsigned char *)a2 + 377);
  *(unsigned char *)(a1 + 378) = *((unsigned char *)a2 + 378);
  *(void *)(a1 + 384) = *((void *)a2 + 48);
  *(void *)(a1 + 392) = *((void *)a2 + 49);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 400) = *((void *)a2 + 50);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 408) = *((void *)a2 + 51);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 416) = *((void *)a2 + 52);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 424) = *((void *)a2 + 53);
  swift_retain();
  swift_release();
  *(void *)(a1 + 432) = *((void *)a2 + 54);
  *(void *)(a1 + 440) = *((void *)a2 + 55);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy448_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x1C0uLL);
}

uint64_t assignWithTake for ImageQualitySettings(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(unsigned char *)(a1 + 28) = *(unsigned char *)(a2 + 28);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  int v4 = *(_DWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(_DWORD *)(a1 + 32) = v4;
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 44) = *(unsigned char *)(a2 + 44);
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 52) = *(unsigned char *)(a2 + 52);
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 60) = *(unsigned char *)(a2 + 60);
  *(unsigned char *)(a1 + 68) = *(unsigned char *)(a2 + 68);
  *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 76) = *(unsigned char *)(a2 + 76);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 84) = *(unsigned char *)(a2 + 84);
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(unsigned char *)(a1 + 92) = *(unsigned char *)(a2 + 92);
  *(_DWORD *)(a1 + 88) = *(_DWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 100) = *(unsigned char *)(a2 + 100);
  *(_DWORD *)(a1 + 96) = *(_DWORD *)(a2 + 96);
  int v5 = *(_DWORD *)(a2 + 104);
  *(unsigned char *)(a1 + 108) = *(unsigned char *)(a2 + 108);
  *(_DWORD *)(a1 + 104) = v5;
  int v6 = *(_DWORD *)(a2 + 112);
  *(unsigned char *)(a1 + 116) = *(unsigned char *)(a2 + 116);
  *(_DWORD *)(a1 + 112) = v6;
  int v7 = *(_DWORD *)(a2 + 120);
  *(unsigned char *)(a1 + 124) = *(unsigned char *)(a2 + 124);
  *(_DWORD *)(a1 + 120) = v7;
  int v8 = *(_DWORD *)(a2 + 128);
  *(unsigned char *)(a1 + 132) = *(unsigned char *)(a2 + 132);
  *(_DWORD *)(a1 + 128) = v8;
  int v9 = *(_DWORD *)(a2 + 136);
  *(unsigned char *)(a1 + 140) = *(unsigned char *)(a2 + 140);
  *(_DWORD *)(a1 + 136) = v9;
  int v10 = *(_DWORD *)(a2 + 144);
  *(unsigned char *)(a1 + 148) = *(unsigned char *)(a2 + 148);
  *(_DWORD *)(a1 + 144) = v10;
  int v11 = *(_DWORD *)(a2 + 152);
  *(unsigned char *)(a1 + 156) = *(unsigned char *)(a2 + 156);
  *(_DWORD *)(a1 + 152) = v11;
  int v12 = *(_DWORD *)(a2 + 160);
  *(unsigned char *)(a1 + 164) = *(unsigned char *)(a2 + 164);
  *(_DWORD *)(a1 + 160) = v12;
  int v13 = *(_DWORD *)(a2 + 168);
  *(unsigned char *)(a1 + 172) = *(unsigned char *)(a2 + 172);
  *(_DWORD *)(a1 + 168) = v13;
  int v14 = *(_DWORD *)(a2 + 176);
  *(unsigned char *)(a1 + 180) = *(unsigned char *)(a2 + 180);
  *(_DWORD *)(a1 + 176) = v14;
  int v15 = *(_DWORD *)(a2 + 184);
  *(unsigned char *)(a1 + 188) = *(unsigned char *)(a2 + 188);
  *(_DWORD *)(a1 + 184) = v15;
  int v16 = *(_DWORD *)(a2 + 192);
  *(unsigned char *)(a1 + 196) = *(unsigned char *)(a2 + 196);
  *(_DWORD *)(a1 + 192) = v16;
  int v17 = *(_DWORD *)(a2 + 200);
  *(unsigned char *)(a1 + 204) = *(unsigned char *)(a2 + 204);
  *(_DWORD *)(a1 + 200) = v17;
  int v18 = *(_DWORD *)(a2 + 208);
  *(unsigned char *)(a1 + 212) = *(unsigned char *)(a2 + 212);
  *(_DWORD *)(a1 + 208) = v18;
  int v19 = *(_DWORD *)(a2 + 216);
  *(unsigned char *)(a1 + 220) = *(unsigned char *)(a2 + 220);
  *(_DWORD *)(a1 + 216) = v19;
  int v20 = *(_DWORD *)(a2 + 224);
  *(unsigned char *)(a1 + 228) = *(unsigned char *)(a2 + 228);
  *(_DWORD *)(a1 + 224) = v20;
  int v21 = *(_DWORD *)(a2 + 232);
  *(unsigned char *)(a1 + 236) = *(unsigned char *)(a2 + 236);
  *(_DWORD *)(a1 + 232) = v21;
  int v22 = *(_DWORD *)(a2 + 240);
  *(unsigned char *)(a1 + 244) = *(unsigned char *)(a2 + 244);
  *(_DWORD *)(a1 + 240) = v22;
  int v23 = *(_DWORD *)(a2 + 248);
  *(unsigned char *)(a1 + 252) = *(unsigned char *)(a2 + 252);
  *(_DWORD *)(a1 + 248) = v23;
  int v24 = *(_DWORD *)(a2 + 256);
  *(unsigned char *)(a1 + 260) = *(unsigned char *)(a2 + 260);
  *(_DWORD *)(a1 + 256) = v24;
  int v25 = *(_DWORD *)(a2 + 264);
  *(unsigned char *)(a1 + 268) = *(unsigned char *)(a2 + 268);
  *(_DWORD *)(a1 + 264) = v25;
  int v26 = *(_DWORD *)(a2 + 272);
  *(unsigned char *)(a1 + 276) = *(unsigned char *)(a2 + 276);
  *(_DWORD *)(a1 + 272) = v26;
  int v27 = *(_DWORD *)(a2 + 280);
  *(unsigned char *)(a1 + 284) = *(unsigned char *)(a2 + 284);
  *(_DWORD *)(a1 + 280) = v27;
  int v28 = *(_DWORD *)(a2 + 288);
  *(unsigned char *)(a1 + 292) = *(unsigned char *)(a2 + 292);
  *(_DWORD *)(a1 + 288) = v28;
  int v29 = *(_DWORD *)(a2 + 296);
  *(unsigned char *)(a1 + 300) = *(unsigned char *)(a2 + 300);
  *(_DWORD *)(a1 + 296) = v29;
  int v30 = *(_DWORD *)(a2 + 304);
  *(unsigned char *)(a1 + 308) = *(unsigned char *)(a2 + 308);
  *(_DWORD *)(a1 + 304) = v30;
  int v31 = *(_DWORD *)(a2 + 312);
  *(unsigned char *)(a1 + 316) = *(unsigned char *)(a2 + 316);
  *(_DWORD *)(a1 + 312) = v31;
  uint64_t v32 = *(void *)(a2 + 320);
  *(unsigned char *)(a1 + 328) = *(unsigned char *)(a2 + 328);
  *(void *)(a1 + 320) = v32;
  uint64_t v33 = *(void *)(a2 + 336);
  *(unsigned char *)(a1 + 344) = *(unsigned char *)(a2 + 344);
  *(void *)(a1 + 336) = v33;
  uint64_t v34 = *(void *)(a2 + 352);
  *(unsigned char *)(a1 + 360) = *(unsigned char *)(a2 + 360);
  *(void *)(a1 + 352) = v34;
  uint64_t v35 = *(void *)(a2 + 368);
  *(unsigned char *)(a1 + 376) = *(unsigned char *)(a2 + 376);
  *(void *)(a1 + 368) = v35;
  *(unsigned char *)(a1 + 377) = *(unsigned char *)(a2 + 377);
  *(unsigned char *)(a1 + 378) = *(unsigned char *)(a2 + 378);
  uint64_t v36 = *(void *)(a2 + 392);
  *(void *)(a1 + 384) = *(void *)(a2 + 384);
  *(void *)(a1 + 392) = v36;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 400) = *(void *)(a2 + 400);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 408) = *(void *)(a2 + 408);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 416) = *(void *)(a2 + 416);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  swift_release();
  uint64_t v37 = *(void *)(a2 + 440);
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  *(void *)(a1 + 440) = v37;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ImageQualitySettings(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 448)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 416);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ImageQualitySettings(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 440) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 448) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 416) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 448) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageQualitySettings()
{
  return &type metadata for ImageQualitySettings;
}

uint64_t destroy for ImageQualityEvaluator(uint64_t a1)
{
  if (*(void *)(a1 + 392) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

_DWORD *initializeWithCopy for ImageQualityEvaluator(_DWORD *__dst, _DWORD *__src)
{
  if (*((void *)__src + 49) == 1)
  {
    memcpy(__dst, __src, 0x1A0uLL);
  }
  else
  {
    *__dst = *__src;
    *((unsigned char *)__dst + 4) = *((unsigned char *)__src + 4);
    __dst[2] = __src[2];
    *((unsigned char *)__dst + 12) = *((unsigned char *)__src + 12);
    __dst[4] = __src[4];
    *((unsigned char *)__dst + 20) = *((unsigned char *)__src + 20);
    *((unsigned char *)__dst + 28) = *((unsigned char *)__src + 28);
    __dst[6] = __src[6];
    int v4 = __src[8];
    *((unsigned char *)__dst + 36) = *((unsigned char *)__src + 36);
    __dst[8] = v4;
    __dst[10] = __src[10];
    *((unsigned char *)__dst + 44) = *((unsigned char *)__src + 44);
    __dst[12] = __src[12];
    *((unsigned char *)__dst + 52) = *((unsigned char *)__src + 52);
    __dst[14] = __src[14];
    *((unsigned char *)__dst + 60) = *((unsigned char *)__src + 60);
    *((unsigned char *)__dst + 68) = *((unsigned char *)__src + 68);
    __dst[16] = __src[16];
    *((unsigned char *)__dst + 76) = *((unsigned char *)__src + 76);
    __dst[18] = __src[18];
    *((unsigned char *)__dst + 84) = *((unsigned char *)__src + 84);
    __dst[20] = __src[20];
    *((unsigned char *)__dst + 92) = *((unsigned char *)__src + 92);
    __dst[22] = __src[22];
    *((unsigned char *)__dst + 100) = *((unsigned char *)__src + 100);
    __dst[24] = __src[24];
    int v5 = __src[26];
    *((unsigned char *)__dst + 108) = *((unsigned char *)__src + 108);
    __dst[26] = v5;
    int v6 = __src[28];
    *((unsigned char *)__dst + 116) = *((unsigned char *)__src + 116);
    __dst[28] = v6;
    int v7 = __src[30];
    *((unsigned char *)__dst + 124) = *((unsigned char *)__src + 124);
    __dst[30] = v7;
    int v8 = __src[32];
    *((unsigned char *)__dst + 132) = *((unsigned char *)__src + 132);
    __dst[32] = v8;
    int v9 = __src[34];
    *((unsigned char *)__dst + 140) = *((unsigned char *)__src + 140);
    __dst[34] = v9;
    int v10 = __src[36];
    *((unsigned char *)__dst + 148) = *((unsigned char *)__src + 148);
    __dst[36] = v10;
    int v11 = __src[38];
    *((unsigned char *)__dst + 156) = *((unsigned char *)__src + 156);
    __dst[38] = v11;
    int v12 = __src[40];
    *((unsigned char *)__dst + 164) = *((unsigned char *)__src + 164);
    __dst[40] = v12;
    int v13 = __src[42];
    *((unsigned char *)__dst + 172) = *((unsigned char *)__src + 172);
    __dst[42] = v13;
    int v14 = __src[44];
    *((unsigned char *)__dst + 180) = *((unsigned char *)__src + 180);
    __dst[44] = v14;
    int v15 = __src[46];
    *((unsigned char *)__dst + 188) = *((unsigned char *)__src + 188);
    __dst[46] = v15;
    int v16 = __src[48];
    *((unsigned char *)__dst + 196) = *((unsigned char *)__src + 196);
    __dst[48] = v16;
    int v17 = __src[50];
    *((unsigned char *)__dst + 204) = *((unsigned char *)__src + 204);
    __dst[50] = v17;
    int v18 = __src[52];
    *((unsigned char *)__dst + 212) = *((unsigned char *)__src + 212);
    __dst[52] = v18;
    int v19 = __src[54];
    *((unsigned char *)__dst + 220) = *((unsigned char *)__src + 220);
    __dst[54] = v19;
    int v20 = __src[56];
    *((unsigned char *)__dst + 228) = *((unsigned char *)__src + 228);
    __dst[56] = v20;
    int v21 = __src[58];
    *((unsigned char *)__dst + 236) = *((unsigned char *)__src + 236);
    __dst[58] = v21;
    int v22 = __src[60];
    *((unsigned char *)__dst + 244) = *((unsigned char *)__src + 244);
    __dst[60] = v22;
    int v23 = __src[62];
    *((unsigned char *)__dst + 252) = *((unsigned char *)__src + 252);
    __dst[62] = v23;
    int v24 = __src[64];
    *((unsigned char *)__dst + 260) = *((unsigned char *)__src + 260);
    __dst[64] = v24;
    int v25 = __src[66];
    *((unsigned char *)__dst + 268) = *((unsigned char *)__src + 268);
    __dst[66] = v25;
    int v26 = __src[68];
    *((unsigned char *)__dst + 276) = *((unsigned char *)__src + 276);
    __dst[68] = v26;
    int v27 = __src[70];
    *((unsigned char *)__dst + 284) = *((unsigned char *)__src + 284);
    __dst[70] = v27;
    int v28 = __src[72];
    *((unsigned char *)__dst + 292) = *((unsigned char *)__src + 292);
    __dst[72] = v28;
    int v29 = __src[74];
    *((unsigned char *)__dst + 300) = *((unsigned char *)__src + 300);
    __dst[74] = v29;
    int v30 = __src[76];
    *((unsigned char *)__dst + 308) = *((unsigned char *)__src + 308);
    __dst[76] = v30;
    int v31 = __src[78];
    *((unsigned char *)__dst + 316) = *((unsigned char *)__src + 316);
    __dst[78] = v31;
    uint64_t v32 = *((void *)__src + 40);
    *((unsigned char *)__dst + 328) = *((unsigned char *)__src + 328);
    *((void *)__dst + 40) = v32;
    uint64_t v33 = *((void *)__src + 42);
    *((unsigned char *)__dst + 344) = *((unsigned char *)__src + 344);
    *((void *)__dst + 42) = v33;
    uint64_t v34 = *((void *)__src + 44);
    *((unsigned char *)__dst + 360) = *((unsigned char *)__src + 360);
    *((void *)__dst + 44) = v34;
    uint64_t v35 = *((void *)__src + 46);
    *((unsigned char *)__dst + 376) = *((unsigned char *)__src + 376);
    *((void *)__dst + 46) = v35;
    *((unsigned char *)__dst + 377) = *((unsigned char *)__src + 377);
    *((unsigned char *)__dst + 378) = *((unsigned char *)__src + 378);
    uint64_t v36 = *((void *)__src + 49);
    *((void *)__dst + 48) = *((void *)__src + 48);
    *((void *)__dst + 49) = v36;
    uint64_t v37 = *((void *)__src + 51);
    *((void *)__dst + 50) = *((void *)__src + 50);
    *((void *)__dst + 51) = v37;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *((void *)__dst + 52) = *((void *)__src + 52);
  swift_bridgeObjectRetain();
  return __dst;
}

unsigned char *assignWithCopy for ImageQualityEvaluator(unsigned char *__dst, void *__src)
{
  uint64_t v4 = __src[49];
  if (*((void *)__dst + 49) != 1)
  {
    if (v4 != 1)
    {
      int v49 = *(_DWORD *)__src;
      __dst[4] = *((unsigned char *)__src + 4);
      *(_DWORD *)__dst = v49;
      int v50 = *((_DWORD *)__src + 2);
      __dst[12] = *((unsigned char *)__src + 12);
      *((_DWORD *)__dst + 2) = v50;
      int v51 = *((_DWORD *)__src + 4);
      __dst[20] = *((unsigned char *)__src + 20);
      *((_DWORD *)__dst + 4) = v51;
      int v52 = *((_DWORD *)__src + 6);
      __dst[28] = *((unsigned char *)__src + 28);
      *((_DWORD *)__dst + 6) = v52;
      int v53 = *((_DWORD *)__src + 8);
      __dst[36] = *((unsigned char *)__src + 36);
      *((_DWORD *)__dst + 8) = v53;
      int v54 = *((_DWORD *)__src + 10);
      __dst[44] = *((unsigned char *)__src + 44);
      *((_DWORD *)__dst + 10) = v54;
      int v55 = *((_DWORD *)__src + 12);
      __dst[52] = *((unsigned char *)__src + 52);
      *((_DWORD *)__dst + 12) = v55;
      int v56 = *((_DWORD *)__src + 14);
      __dst[60] = *((unsigned char *)__src + 60);
      *((_DWORD *)__dst + 14) = v56;
      int v57 = *((_DWORD *)__src + 16);
      __dst[68] = *((unsigned char *)__src + 68);
      *((_DWORD *)__dst + 16) = v57;
      int v58 = *((_DWORD *)__src + 18);
      __dst[76] = *((unsigned char *)__src + 76);
      *((_DWORD *)__dst + 18) = v58;
      int v59 = *((_DWORD *)__src + 20);
      __dst[84] = *((unsigned char *)__src + 84);
      *((_DWORD *)__dst + 20) = v59;
      int v60 = *((_DWORD *)__src + 22);
      __dst[92] = *((unsigned char *)__src + 92);
      *((_DWORD *)__dst + 22) = v60;
      int v61 = *((_DWORD *)__src + 24);
      __dst[100] = *((unsigned char *)__src + 100);
      *((_DWORD *)__dst + 24) = v61;
      int v62 = *((_DWORD *)__src + 26);
      __dst[108] = *((unsigned char *)__src + 108);
      *((_DWORD *)__dst + 26) = v62;
      int v63 = *((_DWORD *)__src + 28);
      __dst[116] = *((unsigned char *)__src + 116);
      *((_DWORD *)__dst + 28) = v63;
      int v64 = *((_DWORD *)__src + 30);
      __dst[124] = *((unsigned char *)__src + 124);
      *((_DWORD *)__dst + 30) = v64;
      int v65 = *((_DWORD *)__src + 32);
      __dst[132] = *((unsigned char *)__src + 132);
      *((_DWORD *)__dst + 32) = v65;
      int v66 = *((_DWORD *)__src + 34);
      __dst[140] = *((unsigned char *)__src + 140);
      *((_DWORD *)__dst + 34) = v66;
      int v67 = *((_DWORD *)__src + 36);
      __dst[148] = *((unsigned char *)__src + 148);
      *((_DWORD *)__dst + 36) = v67;
      int v68 = *((_DWORD *)__src + 38);
      __dst[156] = *((unsigned char *)__src + 156);
      *((_DWORD *)__dst + 38) = v68;
      int v69 = *((_DWORD *)__src + 40);
      __dst[164] = *((unsigned char *)__src + 164);
      *((_DWORD *)__dst + 40) = v69;
      int v70 = *((_DWORD *)__src + 42);
      __dst[172] = *((unsigned char *)__src + 172);
      *((_DWORD *)__dst + 42) = v70;
      int v71 = *((_DWORD *)__src + 44);
      __dst[180] = *((unsigned char *)__src + 180);
      *((_DWORD *)__dst + 44) = v71;
      int v72 = *((_DWORD *)__src + 46);
      __dst[188] = *((unsigned char *)__src + 188);
      *((_DWORD *)__dst + 46) = v72;
      int v73 = *((_DWORD *)__src + 48);
      __dst[196] = *((unsigned char *)__src + 196);
      *((_DWORD *)__dst + 48) = v73;
      int v74 = *((_DWORD *)__src + 50);
      __dst[204] = *((unsigned char *)__src + 204);
      *((_DWORD *)__dst + 50) = v74;
      int v75 = *((_DWORD *)__src + 52);
      __dst[212] = *((unsigned char *)__src + 212);
      *((_DWORD *)__dst + 52) = v75;
      int v76 = *((_DWORD *)__src + 54);
      __dst[220] = *((unsigned char *)__src + 220);
      *((_DWORD *)__dst + 54) = v76;
      int v77 = *((_DWORD *)__src + 56);
      __dst[228] = *((unsigned char *)__src + 228);
      *((_DWORD *)__dst + 56) = v77;
      int v78 = *((_DWORD *)__src + 58);
      __dst[236] = *((unsigned char *)__src + 236);
      *((_DWORD *)__dst + 58) = v78;
      int v79 = *((_DWORD *)__src + 60);
      __dst[244] = *((unsigned char *)__src + 244);
      *((_DWORD *)__dst + 60) = v79;
      int v80 = *((_DWORD *)__src + 62);
      __dst[252] = *((unsigned char *)__src + 252);
      *((_DWORD *)__dst + 62) = v80;
      int v81 = *((_DWORD *)__src + 64);
      __dst[260] = *((unsigned char *)__src + 260);
      *((_DWORD *)__dst + 64) = v81;
      int v82 = *((_DWORD *)__src + 66);
      __dst[268] = *((unsigned char *)__src + 268);
      *((_DWORD *)__dst + 66) = v82;
      int v83 = *((_DWORD *)__src + 68);
      __dst[276] = *((unsigned char *)__src + 276);
      *((_DWORD *)__dst + 68) = v83;
      int v84 = *((_DWORD *)__src + 70);
      __dst[284] = *((unsigned char *)__src + 284);
      *((_DWORD *)__dst + 70) = v84;
      int v85 = *((_DWORD *)__src + 72);
      __dst[292] = *((unsigned char *)__src + 292);
      *((_DWORD *)__dst + 72) = v85;
      int v86 = *((_DWORD *)__src + 74);
      __dst[300] = *((unsigned char *)__src + 300);
      *((_DWORD *)__dst + 74) = v86;
      int v87 = *((_DWORD *)__src + 76);
      __dst[308] = *((unsigned char *)__src + 308);
      *((_DWORD *)__dst + 76) = v87;
      int v88 = *((_DWORD *)__src + 78);
      __dst[316] = *((unsigned char *)__src + 316);
      *((_DWORD *)__dst + 78) = v88;
      uint64_t v89 = __src[40];
      __dst[328] = *((unsigned char *)__src + 328);
      *((void *)__dst + 40) = v89;
      uint64_t v90 = __src[42];
      __dst[344] = *((unsigned char *)__src + 344);
      *((void *)__dst + 42) = v90;
      uint64_t v91 = __src[44];
      __dst[360] = *((unsigned char *)__src + 360);
      *((void *)__dst + 44) = v91;
      uint64_t v92 = __src[46];
      __dst[376] = *((unsigned char *)__src + 376);
      *((void *)__dst + 46) = v92;
      __dst[377] = *((unsigned char *)__src + 377);
      __dst[378] = *((unsigned char *)__src + 378);
      *((void *)__dst + 48) = __src[48];
      *((void *)__dst + 49) = __src[49];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)__dst + 50) = __src[50];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)__dst + 51) = __src[51];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_1D79564DC((uint64_t)__dst);
    goto LABEL_6;
  }
  if (v4 == 1)
  {
LABEL_6:
    memcpy(__dst, __src, 0x1A0uLL);
    goto LABEL_8;
  }
  int v5 = *(_DWORD *)__src;
  __dst[4] = *((unsigned char *)__src + 4);
  *(_DWORD *)__dst = v5;
  int v6 = *((_DWORD *)__src + 2);
  __dst[12] = *((unsigned char *)__src + 12);
  *((_DWORD *)__dst + 2) = v6;
  int v7 = *((_DWORD *)__src + 4);
  __dst[20] = *((unsigned char *)__src + 20);
  *((_DWORD *)__dst + 4) = v7;
  int v8 = *((_DWORD *)__src + 6);
  __dst[28] = *((unsigned char *)__src + 28);
  *((_DWORD *)__dst + 6) = v8;
  int v9 = *((_DWORD *)__src + 8);
  __dst[36] = *((unsigned char *)__src + 36);
  *((_DWORD *)__dst + 8) = v9;
  int v10 = *((_DWORD *)__src + 10);
  __dst[44] = *((unsigned char *)__src + 44);
  *((_DWORD *)__dst + 10) = v10;
  int v11 = *((_DWORD *)__src + 12);
  __dst[52] = *((unsigned char *)__src + 52);
  *((_DWORD *)__dst + 12) = v11;
  int v12 = *((_DWORD *)__src + 14);
  __dst[60] = *((unsigned char *)__src + 60);
  *((_DWORD *)__dst + 14) = v12;
  int v13 = *((_DWORD *)__src + 16);
  __dst[68] = *((unsigned char *)__src + 68);
  *((_DWORD *)__dst + 16) = v13;
  int v14 = *((_DWORD *)__src + 18);
  __dst[76] = *((unsigned char *)__src + 76);
  *((_DWORD *)__dst + 18) = v14;
  int v15 = *((_DWORD *)__src + 20);
  __dst[84] = *((unsigned char *)__src + 84);
  *((_DWORD *)__dst + 20) = v15;
  int v16 = *((_DWORD *)__src + 22);
  __dst[92] = *((unsigned char *)__src + 92);
  *((_DWORD *)__dst + 22) = v16;
  int v17 = *((_DWORD *)__src + 24);
  __dst[100] = *((unsigned char *)__src + 100);
  *((_DWORD *)__dst + 24) = v17;
  int v18 = *((_DWORD *)__src + 26);
  __dst[108] = *((unsigned char *)__src + 108);
  *((_DWORD *)__dst + 26) = v18;
  int v19 = *((_DWORD *)__src + 28);
  __dst[116] = *((unsigned char *)__src + 116);
  *((_DWORD *)__dst + 28) = v19;
  int v20 = *((_DWORD *)__src + 30);
  __dst[124] = *((unsigned char *)__src + 124);
  *((_DWORD *)__dst + 30) = v20;
  int v21 = *((_DWORD *)__src + 32);
  __dst[132] = *((unsigned char *)__src + 132);
  *((_DWORD *)__dst + 32) = v21;
  int v22 = *((_DWORD *)__src + 34);
  __dst[140] = *((unsigned char *)__src + 140);
  *((_DWORD *)__dst + 34) = v22;
  int v23 = *((_DWORD *)__src + 36);
  __dst[148] = *((unsigned char *)__src + 148);
  *((_DWORD *)__dst + 36) = v23;
  int v24 = *((_DWORD *)__src + 38);
  __dst[156] = *((unsigned char *)__src + 156);
  *((_DWORD *)__dst + 38) = v24;
  int v25 = *((_DWORD *)__src + 40);
  __dst[164] = *((unsigned char *)__src + 164);
  *((_DWORD *)__dst + 40) = v25;
  int v26 = *((_DWORD *)__src + 42);
  __dst[172] = *((unsigned char *)__src + 172);
  *((_DWORD *)__dst + 42) = v26;
  int v27 = *((_DWORD *)__src + 44);
  __dst[180] = *((unsigned char *)__src + 180);
  *((_DWORD *)__dst + 44) = v27;
  int v28 = *((_DWORD *)__src + 46);
  __dst[188] = *((unsigned char *)__src + 188);
  *((_DWORD *)__dst + 46) = v28;
  int v29 = *((_DWORD *)__src + 48);
  __dst[196] = *((unsigned char *)__src + 196);
  *((_DWORD *)__dst + 48) = v29;
  int v30 = *((_DWORD *)__src + 50);
  __dst[204] = *((unsigned char *)__src + 204);
  *((_DWORD *)__dst + 50) = v30;
  int v31 = *((_DWORD *)__src + 52);
  __dst[212] = *((unsigned char *)__src + 212);
  *((_DWORD *)__dst + 52) = v31;
  int v32 = *((_DWORD *)__src + 54);
  __dst[220] = *((unsigned char *)__src + 220);
  *((_DWORD *)__dst + 54) = v32;
  int v33 = *((_DWORD *)__src + 56);
  __dst[228] = *((unsigned char *)__src + 228);
  *((_DWORD *)__dst + 56) = v33;
  int v34 = *((_DWORD *)__src + 58);
  __dst[236] = *((unsigned char *)__src + 236);
  *((_DWORD *)__dst + 58) = v34;
  int v35 = *((_DWORD *)__src + 60);
  __dst[244] = *((unsigned char *)__src + 244);
  *((_DWORD *)__dst + 60) = v35;
  int v36 = *((_DWORD *)__src + 62);
  __dst[252] = *((unsigned char *)__src + 252);
  *((_DWORD *)__dst + 62) = v36;
  int v37 = *((_DWORD *)__src + 64);
  __dst[260] = *((unsigned char *)__src + 260);
  *((_DWORD *)__dst + 64) = v37;
  int v38 = *((_DWORD *)__src + 66);
  __dst[268] = *((unsigned char *)__src + 268);
  *((_DWORD *)__dst + 66) = v38;
  int v39 = *((_DWORD *)__src + 68);
  __dst[276] = *((unsigned char *)__src + 276);
  *((_DWORD *)__dst + 68) = v39;
  int v40 = *((_DWORD *)__src + 70);
  __dst[284] = *((unsigned char *)__src + 284);
  *((_DWORD *)__dst + 70) = v40;
  int v41 = *((_DWORD *)__src + 72);
  __dst[292] = *((unsigned char *)__src + 292);
  *((_DWORD *)__dst + 72) = v41;
  int v42 = *((_DWORD *)__src + 74);
  __dst[300] = *((unsigned char *)__src + 300);
  *((_DWORD *)__dst + 74) = v42;
  int v43 = *((_DWORD *)__src + 76);
  __dst[308] = *((unsigned char *)__src + 308);
  *((_DWORD *)__dst + 76) = v43;
  int v44 = *((_DWORD *)__src + 78);
  __dst[316] = *((unsigned char *)__src + 316);
  *((_DWORD *)__dst + 78) = v44;
  uint64_t v45 = __src[40];
  __dst[328] = *((unsigned char *)__src + 328);
  *((void *)__dst + 40) = v45;
  uint64_t v46 = __src[42];
  __dst[344] = *((unsigned char *)__src + 344);
  *((void *)__dst + 42) = v46;
  uint64_t v47 = __src[44];
  __dst[360] = *((unsigned char *)__src + 360);
  *((void *)__dst + 44) = v47;
  uint64_t v48 = __src[46];
  __dst[376] = *((unsigned char *)__src + 376);
  *((void *)__dst + 46) = v48;
  __dst[377] = *((unsigned char *)__src + 377);
  __dst[378] = *((unsigned char *)__src + 378);
  *((void *)__dst + 48) = __src[48];
  *((void *)__dst + 49) = __src[49];
  *((void *)__dst + 50) = __src[50];
  *((void *)__dst + 51) = __src[51];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_8:
  *((void *)__dst + 52) = __src[52];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return __dst;
}

uint64_t sub_1D79564DC(uint64_t a1)
{
  return a1;
}

void *__swift_memcpy424_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x1A8uLL);
}

unsigned char *assignWithTake for ImageQualityEvaluator(unsigned char *__dst, unsigned char *__src)
{
  if (*((void *)__dst + 49) != 1)
  {
    if (*((void *)__src + 49) != 1)
    {
      *(_DWORD *)__dst = *(_DWORD *)__src;
      __dst[4] = __src[4];
      *((_DWORD *)__dst + 2) = *((_DWORD *)__src + 2);
      __dst[12] = __src[12];
      *((_DWORD *)__dst + 4) = *((_DWORD *)__src + 4);
      __dst[20] = __src[20];
      __dst[28] = __src[28];
      *((_DWORD *)__dst + 6) = *((_DWORD *)__src + 6);
      int v4 = *((_DWORD *)__src + 8);
      __dst[36] = __src[36];
      *((_DWORD *)__dst + 8) = v4;
      *((_DWORD *)__dst + 10) = *((_DWORD *)__src + 10);
      __dst[44] = __src[44];
      *((_DWORD *)__dst + 12) = *((_DWORD *)__src + 12);
      __dst[52] = __src[52];
      *((_DWORD *)__dst + 14) = *((_DWORD *)__src + 14);
      __dst[60] = __src[60];
      __dst[68] = __src[68];
      *((_DWORD *)__dst + 16) = *((_DWORD *)__src + 16);
      __dst[76] = __src[76];
      *((_DWORD *)__dst + 18) = *((_DWORD *)__src + 18);
      __dst[84] = __src[84];
      *((_DWORD *)__dst + 20) = *((_DWORD *)__src + 20);
      __dst[92] = __src[92];
      *((_DWORD *)__dst + 22) = *((_DWORD *)__src + 22);
      __dst[100] = __src[100];
      *((_DWORD *)__dst + 24) = *((_DWORD *)__src + 24);
      int v5 = *((_DWORD *)__src + 26);
      __dst[108] = __src[108];
      *((_DWORD *)__dst + 26) = v5;
      int v6 = *((_DWORD *)__src + 28);
      __dst[116] = __src[116];
      *((_DWORD *)__dst + 28) = v6;
      int v7 = *((_DWORD *)__src + 30);
      __dst[124] = __src[124];
      *((_DWORD *)__dst + 30) = v7;
      int v8 = *((_DWORD *)__src + 32);
      __dst[132] = __src[132];
      *((_DWORD *)__dst + 32) = v8;
      int v9 = *((_DWORD *)__src + 34);
      __dst[140] = __src[140];
      *((_DWORD *)__dst + 34) = v9;
      int v10 = *((_DWORD *)__src + 36);
      __dst[148] = __src[148];
      *((_DWORD *)__dst + 36) = v10;
      int v11 = *((_DWORD *)__src + 38);
      __dst[156] = __src[156];
      *((_DWORD *)__dst + 38) = v11;
      int v12 = *((_DWORD *)__src + 40);
      __dst[164] = __src[164];
      *((_DWORD *)__dst + 40) = v12;
      int v13 = *((_DWORD *)__src + 42);
      __dst[172] = __src[172];
      *((_DWORD *)__dst + 42) = v13;
      int v14 = *((_DWORD *)__src + 44);
      __dst[180] = __src[180];
      *((_DWORD *)__dst + 44) = v14;
      int v15 = *((_DWORD *)__src + 46);
      __dst[188] = __src[188];
      *((_DWORD *)__dst + 46) = v15;
      int v16 = *((_DWORD *)__src + 48);
      __dst[196] = __src[196];
      *((_DWORD *)__dst + 48) = v16;
      int v17 = *((_DWORD *)__src + 50);
      __dst[204] = __src[204];
      *((_DWORD *)__dst + 50) = v17;
      int v18 = *((_DWORD *)__src + 52);
      __dst[212] = __src[212];
      *((_DWORD *)__dst + 52) = v18;
      int v19 = *((_DWORD *)__src + 54);
      __dst[220] = __src[220];
      *((_DWORD *)__dst + 54) = v19;
      int v20 = *((_DWORD *)__src + 56);
      __dst[228] = __src[228];
      *((_DWORD *)__dst + 56) = v20;
      int v21 = *((_DWORD *)__src + 58);
      __dst[236] = __src[236];
      *((_DWORD *)__dst + 58) = v21;
      int v22 = *((_DWORD *)__src + 60);
      __dst[244] = __src[244];
      *((_DWORD *)__dst + 60) = v22;
      int v23 = *((_DWORD *)__src + 62);
      __dst[252] = __src[252];
      *((_DWORD *)__dst + 62) = v23;
      int v24 = *((_DWORD *)__src + 64);
      __dst[260] = __src[260];
      *((_DWORD *)__dst + 64) = v24;
      int v25 = *((_DWORD *)__src + 66);
      __dst[268] = __src[268];
      *((_DWORD *)__dst + 66) = v25;
      int v26 = *((_DWORD *)__src + 68);
      __dst[276] = __src[276];
      *((_DWORD *)__dst + 68) = v26;
      int v27 = *((_DWORD *)__src + 70);
      __dst[284] = __src[284];
      *((_DWORD *)__dst + 70) = v27;
      int v28 = *((_DWORD *)__src + 72);
      __dst[292] = __src[292];
      *((_DWORD *)__dst + 72) = v28;
      int v29 = *((_DWORD *)__src + 74);
      __dst[300] = __src[300];
      *((_DWORD *)__dst + 74) = v29;
      int v30 = *((_DWORD *)__src + 76);
      __dst[308] = __src[308];
      *((_DWORD *)__dst + 76) = v30;
      int v31 = *((_DWORD *)__src + 78);
      __dst[316] = __src[316];
      *((_DWORD *)__dst + 78) = v31;
      uint64_t v32 = *((void *)__src + 40);
      __dst[328] = __src[328];
      *((void *)__dst + 40) = v32;
      uint64_t v33 = *((void *)__src + 42);
      __dst[344] = __src[344];
      *((void *)__dst + 42) = v33;
      uint64_t v34 = *((void *)__src + 44);
      __dst[360] = __src[360];
      *((void *)__dst + 44) = v34;
      uint64_t v35 = *((void *)__src + 46);
      __dst[376] = __src[376];
      *((void *)__dst + 46) = v35;
      __dst[377] = __src[377];
      __dst[378] = __src[378];
      uint64_t v36 = *((void *)__src + 49);
      *((void *)__dst + 48) = *((void *)__src + 48);
      *((void *)__dst + 49) = v36;
      swift_bridgeObjectRelease();
      *((void *)__dst + 50) = *((void *)__src + 50);
      swift_bridgeObjectRelease();
      *((void *)__dst + 51) = *((void *)__src + 51);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1D79564DC((uint64_t)__dst);
  }
  memcpy(__dst, __src, 0x1A0uLL);
LABEL_6:
  *((void *)__dst + 52) = *((void *)__src + 52);
  swift_bridgeObjectRelease();
  return __dst;
}

uint64_t getEnumTagSinglePayload for ImageQualityEvaluator(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 424)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 416);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ImageQualityEvaluator(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 424) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 416) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 424) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageQualityEvaluator()
{
  return &type metadata for ImageQualityEvaluator;
}

unsigned char *storeEnumTagSinglePayload for ImageQualitySettings.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D7956A50);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageQualitySettings.CodingKeys()
{
  return &type metadata for ImageQualitySettings.CodingKeys;
}

ValueMetadata *type metadata accessor for ImageQualityCriteria.CodingKeys()
{
  return &type metadata for ImageQualityCriteria.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for IQCType.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 27 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 27) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE4)
  {
    unsigned int v6 = ((a2 - 229) >> 8) + 1;
    *unint64_t result = a2 + 27;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D7956B6CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 27;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IQCType.CodingKeys()
{
  return &type metadata for IQCType.CodingKeys;
}

ValueMetadata *type metadata accessor for IQCType.BlurrinessCodingKeys()
{
  return &type metadata for IQCType.BlurrinessCodingKeys;
}

ValueMetadata *type metadata accessor for IQCType.ExposureCodingKeys()
{
  return &type metadata for IQCType.ExposureCodingKeys;
}

ValueMetadata *type metadata accessor for IQCType.CardDistortionCodingKeys()
{
  return &type metadata for IQCType.CardDistortionCodingKeys;
}

ValueMetadata *type metadata accessor for IQCType.FaceToImageRatioCodingKeys()
{
  return &type metadata for IQCType.FaceToImageRatioCodingKeys;
}

ValueMetadata *type metadata accessor for IQCType.FaceCenteredRatioCodingKeys()
{
  return &type metadata for IQCType.FaceCenteredRatioCodingKeys;
}

ValueMetadata *type metadata accessor for IQCType.HeadPitchCodingKeys()
{
  return &type metadata for IQCType.HeadPitchCodingKeys;
}

ValueMetadata *type metadata accessor for IQCType.HeadRollCodingKeys()
{
  return &type metadata for IQCType.HeadRollCodingKeys;
}

ValueMetadata *type metadata accessor for IQCType.HeadYawCodingKeys()
{
  return &type metadata for IQCType.HeadYawCodingKeys;
}

ValueMetadata *type metadata accessor for IQCType.BlinkingConfidenceCodingKeys()
{
  return &type metadata for IQCType.BlinkingConfidenceCodingKeys;
}

ValueMetadata *type metadata accessor for IQCType.PrescriptionConfidenceCodingKeys()
{
  return &type metadata for IQCType.PrescriptionConfidenceCodingKeys;
}

ValueMetadata *type metadata accessor for IQCType.SunglassesConfidenceCodingKeys()
{
  return &type metadata for IQCType.SunglassesConfidenceCodingKeys;
}

ValueMetadata *type metadata accessor for IQCType.FacemaskConfidenceCodingKeys()
{
  return &type metadata for IQCType.FacemaskConfidenceCodingKeys;
}

ValueMetadata *type metadata accessor for IQCType.HeadgearConfidenceCodingKeys()
{
  return &type metadata for IQCType.HeadgearConfidenceCodingKeys;
}

ValueMetadata *type metadata accessor for IQCType.FaceCaptureQualityCodingKeys()
{
  return &type metadata for IQCType.FaceCaptureQualityCodingKeys;
}

ValueMetadata *type metadata accessor for IQCType.DocumentSizeCodingKeys()
{
  return &type metadata for IQCType.DocumentSizeCodingKeys;
}

ValueMetadata *type metadata accessor for IQCType.DocumentRotationCodingKeys()
{
  return &type metadata for IQCType.DocumentRotationCodingKeys;
}

ValueMetadata *type metadata accessor for IQCType.DocumentSkewCodingKeys()
{
  return &type metadata for IQCType.DocumentSkewCodingKeys;
}

ValueMetadata *type metadata accessor for IQCType.LeftDriftCodingKeys()
{
  return &type metadata for IQCType.LeftDriftCodingKeys;
}

ValueMetadata *type metadata accessor for IQCType.RightDriftCodingKeys()
{
  return &type metadata for IQCType.RightDriftCodingKeys;
}

ValueMetadata *type metadata accessor for IQCType.UpDriftCodingKeys()
{
  return &type metadata for IQCType.UpDriftCodingKeys;
}

ValueMetadata *type metadata accessor for IQCType.DownDriftCodingKeys()
{
  return &type metadata for IQCType.DownDriftCodingKeys;
}

ValueMetadata *type metadata accessor for IQCType.NumFacesCodingKeys()
{
  return &type metadata for IQCType.NumFacesCodingKeys;
}

ValueMetadata *type metadata accessor for IQCType.LuxLevelCodingKeys()
{
  return &type metadata for IQCType.LuxLevelCodingKeys;
}

ValueMetadata *type metadata accessor for IQCType.Pdf417DetectedCodingKeys()
{
  return &type metadata for IQCType.Pdf417DetectedCodingKeys;
}

ValueMetadata *type metadata accessor for IQCType.IsAAMVACompliantCodingKeys()
{
  return &type metadata for IQCType.IsAAMVACompliantCodingKeys;
}

ValueMetadata *type metadata accessor for IQCType.IssuerNumberCodingKeys()
{
  return &type metadata for IQCType.IssuerNumberCodingKeys;
}

ValueMetadata *type metadata accessor for IQCType.ComplexCodingKeys()
{
  return &type metadata for IQCType.ComplexCodingKeys;
}

ValueMetadata *type metadata accessor for IQCType.UnknownCodingKeys()
{
  return &type metadata for IQCType.UnknownCodingKeys;
}

uint64_t _s13CoreIDVShared20ImageQualityCriteriaV10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xD0) {
    goto LABEL_17;
  }
  if (a2 + 48 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 48) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 48;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 48;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 48;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x31;
  int v8 = v6 - 49;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s13CoreIDVShared20ImageQualityCriteriaV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 48 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 48) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xD0) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xCF)
  {
    unsigned int v6 = ((a2 - 208) >> 8) + 1;
    *unint64_t result = a2 + 48;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D7956EC4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 48;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IQACode.CodingKeys()
{
  return &type metadata for IQACode.CodingKeys;
}

ValueMetadata *type metadata accessor for IQACode.PassCodingKeys()
{
  return &type metadata for IQACode.PassCodingKeys;
}

ValueMetadata *type metadata accessor for IQACode.BlurrinessLowCodingKeys()
{
  return &type metadata for IQACode.BlurrinessLowCodingKeys;
}

ValueMetadata *type metadata accessor for IQACode.BlurrinessHighCodingKeys()
{
  return &type metadata for IQACode.BlurrinessHighCodingKeys;
}

ValueMetadata *type metadata accessor for IQACode.ExposureLowCodingKeys()
{
  return &type metadata for IQACode.ExposureLowCodingKeys;
}

ValueMetadata *type metadata accessor for IQACode.ExposureHighCodingKeys()
{
  return &type metadata for IQACode.ExposureHighCodingKeys;
}

ValueMetadata *type metadata accessor for IQACode.CardDistortionLowCodingKeys()
{
  return &type metadata for IQACode.CardDistortionLowCodingKeys;
}

ValueMetadata *type metadata accessor for IQACode.CardDistortionHighCodingKeys()
{
  return &type metadata for IQACode.CardDistortionHighCodingKeys;
}

ValueMetadata *type metadata accessor for IQACode.FaceToImageRatioLowCodingKeys()
{
  return &type metadata for IQACode.FaceToImageRatioLowCodingKeys;
}

ValueMetadata *type metadata accessor for IQACode.FaceToImageRatioHighCodingKeys()
{
  return &type metadata for IQACode.FaceToImageRatioHighCodingKeys;
}

ValueMetadata *type metadata accessor for IQACode.FaceCenteredRatioLowCodingKeys()
{
  return &type metadata for IQACode.FaceCenteredRatioLowCodingKeys;
}

ValueMetadata *type metadata accessor for IQACode.FaceCenteredRatioHighCodingKeys()
{
  return &type metadata for IQACode.FaceCenteredRatioHighCodingKeys;
}

ValueMetadata *type metadata accessor for IQACode.HeadPitchLowCodingKeys()
{
  return &type metadata for IQACode.HeadPitchLowCodingKeys;
}

ValueMetadata *type metadata accessor for IQACode.HeadPitchHighCodingKeys()
{
  return &type metadata for IQACode.HeadPitchHighCodingKeys;
}

ValueMetadata *type metadata accessor for IQACode.HeadRollLowCodingKeys()
{
  return &type metadata for IQACode.HeadRollLowCodingKeys;
}

ValueMetadata *type metadata accessor for IQACode.HeadRollHighCodingKeys()
{
  return &type metadata for IQACode.HeadRollHighCodingKeys;
}

ValueMetadata *type metadata accessor for IQACode.HeadYawLowCodingKeys()
{
  return &type metadata for IQACode.HeadYawLowCodingKeys;
}

ValueMetadata *type metadata accessor for IQACode.HeadYawHighCodingKeys()
{
  return &type metadata for IQACode.HeadYawHighCodingKeys;
}

ValueMetadata *type metadata accessor for IQACode.BlinkingConfidenceLowCodingKeys()
{
  return &type metadata for IQACode.BlinkingConfidenceLowCodingKeys;
}

ValueMetadata *type metadata accessor for IQACode.BlinkingConfidenceHighCodingKeys()
{
  return &type metadata for IQACode.BlinkingConfidenceHighCodingKeys;
}

ValueMetadata *type metadata accessor for IQACode.PrescriptionConfidenceLowCodingKeys()
{
  return &type metadata for IQACode.PrescriptionConfidenceLowCodingKeys;
}

ValueMetadata *type metadata accessor for IQACode.PrescriptionConfidenceHighCodingKeys()
{
  return &type metadata for IQACode.PrescriptionConfidenceHighCodingKeys;
}

ValueMetadata *type metadata accessor for IQACode.SunglassesConfidenceLowCodingKeys()
{
  return &type metadata for IQACode.SunglassesConfidenceLowCodingKeys;
}

ValueMetadata *type metadata accessor for IQACode.SunglassesConfidenceHighCodingKeys()
{
  return &type metadata for IQACode.SunglassesConfidenceHighCodingKeys;
}

ValueMetadata *type metadata accessor for IQACode.FacemaskConfidenceLowCodingKeys()
{
  return &type metadata for IQACode.FacemaskConfidenceLowCodingKeys;
}

ValueMetadata *type metadata accessor for IQACode.FacemaskConfidenceHighCodingKeys()
{
  return &type metadata for IQACode.FacemaskConfidenceHighCodingKeys;
}

ValueMetadata *type metadata accessor for IQACode.HeadgearConfidenceLowCodingKeys()
{
  return &type metadata for IQACode.HeadgearConfidenceLowCodingKeys;
}

ValueMetadata *type metadata accessor for IQACode.HeadgearConfidenceHighCodingKeys()
{
  return &type metadata for IQACode.HeadgearConfidenceHighCodingKeys;
}

ValueMetadata *type metadata accessor for IQACode.FaceCaptureQualityLowCodingKeys()
{
  return &type metadata for IQACode.FaceCaptureQualityLowCodingKeys;
}

ValueMetadata *type metadata accessor for IQACode.FaceCaptureQualityHighCodingKeys()
{
  return &type metadata for IQACode.FaceCaptureQualityHighCodingKeys;
}

ValueMetadata *type metadata accessor for IQACode.DocumentSizeLowCodingKeys()
{
  return &type metadata for IQACode.DocumentSizeLowCodingKeys;
}

ValueMetadata *type metadata accessor for IQACode.DocumentSizeHighCodingKeys()
{
  return &type metadata for IQACode.DocumentSizeHighCodingKeys;
}

ValueMetadata *type metadata accessor for IQACode.DocumentRotatedLeftCodingKeys()
{
  return &type metadata for IQACode.DocumentRotatedLeftCodingKeys;
}

ValueMetadata *type metadata accessor for IQACode.DocumentRotatedRightCodingKeys()
{
  return &type metadata for IQACode.DocumentRotatedRightCodingKeys;
}

ValueMetadata *type metadata accessor for IQACode.DocumentSkewedCodingKeys()
{
  return &type metadata for IQACode.DocumentSkewedCodingKeys;
}

ValueMetadata *type metadata accessor for IQACode.TargetTooFarLeftCodingKeys()
{
  return &type metadata for IQACode.TargetTooFarLeftCodingKeys;
}

ValueMetadata *type metadata accessor for IQACode.TargetTooFarRightCodingKeys()
{
  return &type metadata for IQACode.TargetTooFarRightCodingKeys;
}

ValueMetadata *type metadata accessor for IQACode.TargetTooFarUpCodingKeys()
{
  return &type metadata for IQACode.TargetTooFarUpCodingKeys;
}

ValueMetadata *type metadata accessor for IQACode.TargetTooFarDownCodingKeys()
{
  return &type metadata for IQACode.TargetTooFarDownCodingKeys;
}

ValueMetadata *type metadata accessor for IQACode.NumFacesLowCodingKeys()
{
  return &type metadata for IQACode.NumFacesLowCodingKeys;
}

ValueMetadata *type metadata accessor for IQACode.NumFacesHighCodingKeys()
{
  return &type metadata for IQACode.NumFacesHighCodingKeys;
}

ValueMetadata *type metadata accessor for IQACode.LuxLevelLowCodingKeys()
{
  return &type metadata for IQACode.LuxLevelLowCodingKeys;
}

ValueMetadata *type metadata accessor for IQACode.LuxLevelHighCodingKeys()
{
  return &type metadata for IQACode.LuxLevelHighCodingKeys;
}

ValueMetadata *type metadata accessor for IQACode.Pdf417NotFoundCodingKeys()
{
  return &type metadata for IQACode.Pdf417NotFoundCodingKeys;
}

ValueMetadata *type metadata accessor for IQACode.Pdf417FoundCodingKeys()
{
  return &type metadata for IQACode.Pdf417FoundCodingKeys;
}

ValueMetadata *type metadata accessor for IQACode.NotAAMVACompliantCodingKeys()
{
  return &type metadata for IQACode.NotAAMVACompliantCodingKeys;
}

ValueMetadata *type metadata accessor for IQACode.IsAAMVACompliantCodingKeys()
{
  return &type metadata for IQACode.IsAAMVACompliantCodingKeys;
}

ValueMetadata *type metadata accessor for IQACode.StateMismatchCodingKeys()
{
  return &type metadata for IQACode.StateMismatchCodingKeys;
}

ValueMetadata *type metadata accessor for IQACode.InconclusiveCodingKeys()
{
  return &type metadata for IQACode.InconclusiveCodingKeys;
}

unsigned char *_s13CoreIDVShared7IQCTypeO17ComplexCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1D7957298);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for IQACode.ComplexCodingKeys()
{
  return &type metadata for IQACode.ComplexCodingKeys;
}

unint64_t sub_1D79572D4()
{
  unint64_t result = qword_1EA844AC8;
  if (!qword_1EA844AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844AC8);
  }
  return result;
}

unint64_t sub_1D795732C()
{
  unint64_t result = qword_1EA844AD0;
  if (!qword_1EA844AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844AD0);
  }
  return result;
}

unint64_t sub_1D7957384()
{
  unint64_t result = qword_1EA844AD8;
  if (!qword_1EA844AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844AD8);
  }
  return result;
}

unint64_t sub_1D79573DC()
{
  unint64_t result = qword_1EA844AE0;
  if (!qword_1EA844AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844AE0);
  }
  return result;
}

unint64_t sub_1D7957434()
{
  unint64_t result = qword_1EA844AE8;
  if (!qword_1EA844AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844AE8);
  }
  return result;
}

unint64_t sub_1D795748C()
{
  unint64_t result = qword_1EA844AF0;
  if (!qword_1EA844AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844AF0);
  }
  return result;
}

unint64_t sub_1D79574E4()
{
  unint64_t result = qword_1EA844AF8;
  if (!qword_1EA844AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844AF8);
  }
  return result;
}

unint64_t sub_1D795753C()
{
  unint64_t result = qword_1EA844B00;
  if (!qword_1EA844B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844B00);
  }
  return result;
}

unint64_t sub_1D7957594()
{
  unint64_t result = qword_1EA844B08;
  if (!qword_1EA844B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844B08);
  }
  return result;
}

unint64_t sub_1D79575EC()
{
  unint64_t result = qword_1EA844B10;
  if (!qword_1EA844B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844B10);
  }
  return result;
}

unint64_t sub_1D7957644()
{
  unint64_t result = qword_1EA844B18;
  if (!qword_1EA844B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844B18);
  }
  return result;
}

unint64_t sub_1D795769C()
{
  unint64_t result = qword_1EA844B20;
  if (!qword_1EA844B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844B20);
  }
  return result;
}

unint64_t sub_1D79576F4()
{
  unint64_t result = qword_1EA844B28;
  if (!qword_1EA844B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844B28);
  }
  return result;
}

unint64_t sub_1D795774C()
{
  unint64_t result = qword_1EA844B30;
  if (!qword_1EA844B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844B30);
  }
  return result;
}

unint64_t sub_1D79577A4()
{
  unint64_t result = qword_1EA844B38;
  if (!qword_1EA844B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844B38);
  }
  return result;
}

unint64_t sub_1D79577FC()
{
  unint64_t result = qword_1EA844B40;
  if (!qword_1EA844B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844B40);
  }
  return result;
}

unint64_t sub_1D7957854()
{
  unint64_t result = qword_1EA844B48;
  if (!qword_1EA844B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844B48);
  }
  return result;
}

unint64_t sub_1D79578AC()
{
  unint64_t result = qword_1EA844B50;
  if (!qword_1EA844B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844B50);
  }
  return result;
}

unint64_t sub_1D7957904()
{
  unint64_t result = qword_1EA844B58;
  if (!qword_1EA844B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844B58);
  }
  return result;
}

unint64_t sub_1D795795C()
{
  unint64_t result = qword_1EA844B60;
  if (!qword_1EA844B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844B60);
  }
  return result;
}

unint64_t sub_1D79579B4()
{
  unint64_t result = qword_1EA844B68;
  if (!qword_1EA844B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844B68);
  }
  return result;
}

unint64_t sub_1D7957A0C()
{
  unint64_t result = qword_1EA844B70;
  if (!qword_1EA844B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844B70);
  }
  return result;
}

unint64_t sub_1D7957A64()
{
  unint64_t result = qword_1EA844B78;
  if (!qword_1EA844B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844B78);
  }
  return result;
}

unint64_t sub_1D7957ABC()
{
  unint64_t result = qword_1EA844B80;
  if (!qword_1EA844B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844B80);
  }
  return result;
}

unint64_t sub_1D7957B14()
{
  unint64_t result = qword_1EA844B88;
  if (!qword_1EA844B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844B88);
  }
  return result;
}

unint64_t sub_1D7957B6C()
{
  unint64_t result = qword_1EA844B90;
  if (!qword_1EA844B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844B90);
  }
  return result;
}

unint64_t sub_1D7957BC4()
{
  unint64_t result = qword_1EA844B98;
  if (!qword_1EA844B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844B98);
  }
  return result;
}

unint64_t sub_1D7957C1C()
{
  unint64_t result = qword_1EA844BA0;
  if (!qword_1EA844BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844BA0);
  }
  return result;
}

unint64_t sub_1D7957C74()
{
  unint64_t result = qword_1EA844BA8;
  if (!qword_1EA844BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844BA8);
  }
  return result;
}

unint64_t sub_1D7957CCC()
{
  unint64_t result = qword_1EA844BB0;
  if (!qword_1EA844BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844BB0);
  }
  return result;
}

unint64_t sub_1D7957D24()
{
  unint64_t result = qword_1EA844BB8;
  if (!qword_1EA844BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844BB8);
  }
  return result;
}

unint64_t sub_1D7957D7C()
{
  unint64_t result = qword_1EA844BC0;
  if (!qword_1EA844BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844BC0);
  }
  return result;
}

unint64_t sub_1D7957DD4()
{
  unint64_t result = qword_1EA844BC8;
  if (!qword_1EA844BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844BC8);
  }
  return result;
}

unint64_t sub_1D7957E2C()
{
  unint64_t result = qword_1EA844BD0;
  if (!qword_1EA844BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844BD0);
  }
  return result;
}

unint64_t sub_1D7957E84()
{
  unint64_t result = qword_1EA844BD8;
  if (!qword_1EA844BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844BD8);
  }
  return result;
}

unint64_t sub_1D7957EDC()
{
  unint64_t result = qword_1EA844BE0;
  if (!qword_1EA844BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844BE0);
  }
  return result;
}

unint64_t sub_1D7957F34()
{
  unint64_t result = qword_1EA844BE8;
  if (!qword_1EA844BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844BE8);
  }
  return result;
}

unint64_t sub_1D7957F8C()
{
  unint64_t result = qword_1EA844BF0;
  if (!qword_1EA844BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844BF0);
  }
  return result;
}

unint64_t sub_1D7957FE4()
{
  unint64_t result = qword_1EA844BF8;
  if (!qword_1EA844BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844BF8);
  }
  return result;
}

unint64_t sub_1D795803C()
{
  unint64_t result = qword_1EA844C00;
  if (!qword_1EA844C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844C00);
  }
  return result;
}

unint64_t sub_1D7958094()
{
  unint64_t result = qword_1EA844C08;
  if (!qword_1EA844C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844C08);
  }
  return result;
}

unint64_t sub_1D79580EC()
{
  unint64_t result = qword_1EA844C10;
  if (!qword_1EA844C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844C10);
  }
  return result;
}

unint64_t sub_1D7958144()
{
  unint64_t result = qword_1EA844C18;
  if (!qword_1EA844C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844C18);
  }
  return result;
}

unint64_t sub_1D795819C()
{
  unint64_t result = qword_1EA844C20;
  if (!qword_1EA844C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844C20);
  }
  return result;
}

unint64_t sub_1D79581F4()
{
  unint64_t result = qword_1EA844C28;
  if (!qword_1EA844C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844C28);
  }
  return result;
}

unint64_t sub_1D795824C()
{
  unint64_t result = qword_1EA844C30;
  if (!qword_1EA844C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844C30);
  }
  return result;
}

unint64_t sub_1D79582A4()
{
  unint64_t result = qword_1EA844C38;
  if (!qword_1EA844C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844C38);
  }
  return result;
}

unint64_t sub_1D79582FC()
{
  unint64_t result = qword_1EA844C40;
  if (!qword_1EA844C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844C40);
  }
  return result;
}

unint64_t sub_1D7958354()
{
  unint64_t result = qword_1EA844C48;
  if (!qword_1EA844C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844C48);
  }
  return result;
}

unint64_t sub_1D79583AC()
{
  unint64_t result = qword_1EA844C50;
  if (!qword_1EA844C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844C50);
  }
  return result;
}

unint64_t sub_1D7958404()
{
  unint64_t result = qword_1EA844C58;
  if (!qword_1EA844C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844C58);
  }
  return result;
}

unint64_t sub_1D795845C()
{
  unint64_t result = qword_1EA844C60;
  if (!qword_1EA844C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844C60);
  }
  return result;
}

unint64_t sub_1D79584B4()
{
  unint64_t result = qword_1EA844C68;
  if (!qword_1EA844C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844C68);
  }
  return result;
}

unint64_t sub_1D795850C()
{
  unint64_t result = qword_1EA844C70;
  if (!qword_1EA844C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844C70);
  }
  return result;
}

unint64_t sub_1D7958564()
{
  unint64_t result = qword_1EA844C78;
  if (!qword_1EA844C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844C78);
  }
  return result;
}

unint64_t sub_1D79585BC()
{
  unint64_t result = qword_1EA844C80;
  if (!qword_1EA844C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844C80);
  }
  return result;
}

unint64_t sub_1D7958614()
{
  unint64_t result = qword_1EA844C88;
  if (!qword_1EA844C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844C88);
  }
  return result;
}

unint64_t sub_1D795866C()
{
  unint64_t result = qword_1EA844C90;
  if (!qword_1EA844C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844C90);
  }
  return result;
}

unint64_t sub_1D79586C4()
{
  unint64_t result = qword_1EA844C98;
  if (!qword_1EA844C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844C98);
  }
  return result;
}

unint64_t sub_1D795871C()
{
  unint64_t result = qword_1EA844CA0;
  if (!qword_1EA844CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844CA0);
  }
  return result;
}

unint64_t sub_1D7958774()
{
  unint64_t result = qword_1EA844CA8;
  if (!qword_1EA844CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844CA8);
  }
  return result;
}

unint64_t sub_1D79587CC()
{
  unint64_t result = qword_1EA844CB0;
  if (!qword_1EA844CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844CB0);
  }
  return result;
}

unint64_t sub_1D7958824()
{
  unint64_t result = qword_1EA844CB8;
  if (!qword_1EA844CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844CB8);
  }
  return result;
}

unint64_t sub_1D795887C()
{
  unint64_t result = qword_1EA844CC0;
  if (!qword_1EA844CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844CC0);
  }
  return result;
}

unint64_t sub_1D79588D4()
{
  unint64_t result = qword_1EA844CC8;
  if (!qword_1EA844CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844CC8);
  }
  return result;
}

unint64_t sub_1D795892C()
{
  unint64_t result = qword_1EA844CD0;
  if (!qword_1EA844CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844CD0);
  }
  return result;
}

unint64_t sub_1D7958984()
{
  unint64_t result = qword_1EA844CD8;
  if (!qword_1EA844CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844CD8);
  }
  return result;
}

unint64_t sub_1D79589DC()
{
  unint64_t result = qword_1EA844CE0;
  if (!qword_1EA844CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844CE0);
  }
  return result;
}

unint64_t sub_1D7958A34()
{
  unint64_t result = qword_1EA844CE8;
  if (!qword_1EA844CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844CE8);
  }
  return result;
}

unint64_t sub_1D7958A8C()
{
  unint64_t result = qword_1EA844CF0;
  if (!qword_1EA844CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844CF0);
  }
  return result;
}

unint64_t sub_1D7958AE4()
{
  unint64_t result = qword_1EA844CF8;
  if (!qword_1EA844CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844CF8);
  }
  return result;
}

unint64_t sub_1D7958B3C()
{
  unint64_t result = qword_1EA844D00;
  if (!qword_1EA844D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844D00);
  }
  return result;
}

unint64_t sub_1D7958B94()
{
  unint64_t result = qword_1EA844D08;
  if (!qword_1EA844D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844D08);
  }
  return result;
}

unint64_t sub_1D7958BEC()
{
  unint64_t result = qword_1EA844D10;
  if (!qword_1EA844D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844D10);
  }
  return result;
}

unint64_t sub_1D7958C44()
{
  unint64_t result = qword_1EA844D18;
  if (!qword_1EA844D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844D18);
  }
  return result;
}

unint64_t sub_1D7958C9C()
{
  unint64_t result = qword_1EA844D20;
  if (!qword_1EA844D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844D20);
  }
  return result;
}

unint64_t sub_1D7958CF4()
{
  unint64_t result = qword_1EA844D28;
  if (!qword_1EA844D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844D28);
  }
  return result;
}

unint64_t sub_1D7958D4C()
{
  unint64_t result = qword_1EA844D30;
  if (!qword_1EA844D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844D30);
  }
  return result;
}

unint64_t sub_1D7958DA4()
{
  unint64_t result = qword_1EA844D38;
  if (!qword_1EA844D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844D38);
  }
  return result;
}

unint64_t sub_1D7958DFC()
{
  unint64_t result = qword_1EA844D40;
  if (!qword_1EA844D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844D40);
  }
  return result;
}

unint64_t sub_1D7958E54()
{
  unint64_t result = qword_1EA844D48;
  if (!qword_1EA844D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844D48);
  }
  return result;
}

unint64_t sub_1D7958EAC()
{
  unint64_t result = qword_1EA844D50;
  if (!qword_1EA844D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844D50);
  }
  return result;
}

unint64_t sub_1D7958F04()
{
  unint64_t result = qword_1EA844D58;
  if (!qword_1EA844D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844D58);
  }
  return result;
}

unint64_t sub_1D7958F5C()
{
  unint64_t result = qword_1EA844D60;
  if (!qword_1EA844D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844D60);
  }
  return result;
}

unint64_t sub_1D7958FB4()
{
  unint64_t result = qword_1EA844D68;
  if (!qword_1EA844D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844D68);
  }
  return result;
}

unint64_t sub_1D795900C()
{
  unint64_t result = qword_1EA844D70;
  if (!qword_1EA844D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844D70);
  }
  return result;
}

unint64_t sub_1D7959064()
{
  unint64_t result = qword_1EA844D78;
  if (!qword_1EA844D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844D78);
  }
  return result;
}

unint64_t sub_1D79590BC()
{
  unint64_t result = qword_1EA844D80;
  if (!qword_1EA844D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844D80);
  }
  return result;
}

unint64_t sub_1D7959114()
{
  unint64_t result = qword_1EA844D88;
  if (!qword_1EA844D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844D88);
  }
  return result;
}

unint64_t sub_1D795916C()
{
  unint64_t result = qword_1EA844D90;
  if (!qword_1EA844D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844D90);
  }
  return result;
}

unint64_t sub_1D79591C4()
{
  unint64_t result = qword_1EA844D98;
  if (!qword_1EA844D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844D98);
  }
  return result;
}

unint64_t sub_1D795921C()
{
  unint64_t result = qword_1EA844DA0;
  if (!qword_1EA844DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844DA0);
  }
  return result;
}

unint64_t sub_1D7959274()
{
  unint64_t result = qword_1EA844DA8;
  if (!qword_1EA844DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844DA8);
  }
  return result;
}

unint64_t sub_1D79592CC()
{
  unint64_t result = qword_1EA844DB0;
  if (!qword_1EA844DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844DB0);
  }
  return result;
}

unint64_t sub_1D7959324()
{
  unint64_t result = qword_1EA844DB8;
  if (!qword_1EA844DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844DB8);
  }
  return result;
}

unint64_t sub_1D795937C()
{
  unint64_t result = qword_1EA844DC0;
  if (!qword_1EA844DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844DC0);
  }
  return result;
}

unint64_t sub_1D79593D4()
{
  unint64_t result = qword_1EA844DC8;
  if (!qword_1EA844DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844DC8);
  }
  return result;
}

unint64_t sub_1D795942C()
{
  unint64_t result = qword_1EA844DD0;
  if (!qword_1EA844DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844DD0);
  }
  return result;
}

unint64_t sub_1D7959484()
{
  unint64_t result = qword_1EA844DD8;
  if (!qword_1EA844DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844DD8);
  }
  return result;
}

unint64_t sub_1D79594DC()
{
  unint64_t result = qword_1EA844DE0;
  if (!qword_1EA844DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844DE0);
  }
  return result;
}

unint64_t sub_1D7959534()
{
  unint64_t result = qword_1EA844DE8;
  if (!qword_1EA844DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844DE8);
  }
  return result;
}

unint64_t sub_1D795958C()
{
  unint64_t result = qword_1EA844DF0;
  if (!qword_1EA844DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844DF0);
  }
  return result;
}

unint64_t sub_1D79595E4()
{
  unint64_t result = qword_1EA844DF8;
  if (!qword_1EA844DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844DF8);
  }
  return result;
}

unint64_t sub_1D795963C()
{
  unint64_t result = qword_1EA844E00;
  if (!qword_1EA844E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844E00);
  }
  return result;
}

unint64_t sub_1D7959694()
{
  unint64_t result = qword_1EA844E08;
  if (!qword_1EA844E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844E08);
  }
  return result;
}

unint64_t sub_1D79596EC()
{
  unint64_t result = qword_1EA844E10;
  if (!qword_1EA844E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844E10);
  }
  return result;
}

unint64_t sub_1D7959744()
{
  unint64_t result = qword_1EA844E18;
  if (!qword_1EA844E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844E18);
  }
  return result;
}

unint64_t sub_1D795979C()
{
  unint64_t result = qword_1EA844E20;
  if (!qword_1EA844E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844E20);
  }
  return result;
}

unint64_t sub_1D79597F4()
{
  unint64_t result = qword_1EA844E28;
  if (!qword_1EA844E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844E28);
  }
  return result;
}

unint64_t sub_1D795984C()
{
  unint64_t result = qword_1EA844E30;
  if (!qword_1EA844E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844E30);
  }
  return result;
}

unint64_t sub_1D79598A4()
{
  unint64_t result = qword_1EA844E38;
  if (!qword_1EA844E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844E38);
  }
  return result;
}

unint64_t sub_1D79598FC()
{
  unint64_t result = qword_1EA844E40;
  if (!qword_1EA844E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844E40);
  }
  return result;
}

unint64_t sub_1D7959954()
{
  unint64_t result = qword_1EA844E48;
  if (!qword_1EA844E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844E48);
  }
  return result;
}

unint64_t sub_1D79599AC()
{
  unint64_t result = qword_1EA844E50;
  if (!qword_1EA844E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844E50);
  }
  return result;
}

unint64_t sub_1D7959A04()
{
  unint64_t result = qword_1EA844E58;
  if (!qword_1EA844E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844E58);
  }
  return result;
}

unint64_t sub_1D7959A5C()
{
  unint64_t result = qword_1EA844E60;
  if (!qword_1EA844E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844E60);
  }
  return result;
}

unint64_t sub_1D7959AB4()
{
  unint64_t result = qword_1EA844E68;
  if (!qword_1EA844E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844E68);
  }
  return result;
}

unint64_t sub_1D7959B0C()
{
  unint64_t result = qword_1EA844E70;
  if (!qword_1EA844E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844E70);
  }
  return result;
}

unint64_t sub_1D7959B64()
{
  unint64_t result = qword_1EA844E78;
  if (!qword_1EA844E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844E78);
  }
  return result;
}

unint64_t sub_1D7959BBC()
{
  unint64_t result = qword_1EA844E80;
  if (!qword_1EA844E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844E80);
  }
  return result;
}

unint64_t sub_1D7959C14()
{
  unint64_t result = qword_1EA844E88;
  if (!qword_1EA844E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844E88);
  }
  return result;
}

unint64_t sub_1D7959C6C()
{
  unint64_t result = qword_1EA844E90;
  if (!qword_1EA844E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844E90);
  }
  return result;
}

unint64_t sub_1D7959CC4()
{
  unint64_t result = qword_1EA844E98;
  if (!qword_1EA844E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844E98);
  }
  return result;
}

unint64_t sub_1D7959D1C()
{
  unint64_t result = qword_1EA844EA0;
  if (!qword_1EA844EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844EA0);
  }
  return result;
}

unint64_t sub_1D7959D74()
{
  unint64_t result = qword_1EA844EA8;
  if (!qword_1EA844EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844EA8);
  }
  return result;
}

unint64_t sub_1D7959DCC()
{
  unint64_t result = qword_1EA844EB0;
  if (!qword_1EA844EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844EB0);
  }
  return result;
}

unint64_t sub_1D7959E24()
{
  unint64_t result = qword_1EA844EB8;
  if (!qword_1EA844EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844EB8);
  }
  return result;
}

unint64_t sub_1D7959E7C()
{
  unint64_t result = qword_1EA844EC0;
  if (!qword_1EA844EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844EC0);
  }
  return result;
}

unint64_t sub_1D7959ED4()
{
  unint64_t result = qword_1EA844EC8;
  if (!qword_1EA844EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844EC8);
  }
  return result;
}

unint64_t sub_1D7959F2C()
{
  unint64_t result = qword_1EA844ED0;
  if (!qword_1EA844ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844ED0);
  }
  return result;
}

unint64_t sub_1D7959F84()
{
  unint64_t result = qword_1EA844ED8;
  if (!qword_1EA844ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844ED8);
  }
  return result;
}

unint64_t sub_1D7959FDC()
{
  unint64_t result = qword_1EA844EE0;
  if (!qword_1EA844EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844EE0);
  }
  return result;
}

unint64_t sub_1D795A034()
{
  unint64_t result = qword_1EA844EE8;
  if (!qword_1EA844EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844EE8);
  }
  return result;
}

unint64_t sub_1D795A08C()
{
  unint64_t result = qword_1EA844EF0;
  if (!qword_1EA844EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844EF0);
  }
  return result;
}

unint64_t sub_1D795A0E4()
{
  unint64_t result = qword_1EA844EF8;
  if (!qword_1EA844EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844EF8);
  }
  return result;
}

unint64_t sub_1D795A13C()
{
  unint64_t result = qword_1EA844F00;
  if (!qword_1EA844F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844F00);
  }
  return result;
}

unint64_t sub_1D795A194()
{
  unint64_t result = qword_1EA844F08;
  if (!qword_1EA844F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844F08);
  }
  return result;
}

unint64_t sub_1D795A1EC()
{
  unint64_t result = qword_1EA844F10;
  if (!qword_1EA844F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844F10);
  }
  return result;
}

unint64_t sub_1D795A244()
{
  unint64_t result = qword_1EA844F18;
  if (!qword_1EA844F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844F18);
  }
  return result;
}

unint64_t sub_1D795A29C()
{
  unint64_t result = qword_1EA844F20;
  if (!qword_1EA844F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844F20);
  }
  return result;
}

unint64_t sub_1D795A2F4()
{
  unint64_t result = qword_1EA844F28;
  if (!qword_1EA844F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844F28);
  }
  return result;
}

unint64_t sub_1D795A34C()
{
  unint64_t result = qword_1EA844F30;
  if (!qword_1EA844F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844F30);
  }
  return result;
}

unint64_t sub_1D795A3A4()
{
  unint64_t result = qword_1EA844F38;
  if (!qword_1EA844F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844F38);
  }
  return result;
}

unint64_t sub_1D795A3FC()
{
  unint64_t result = qword_1EA844F40;
  if (!qword_1EA844F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844F40);
  }
  return result;
}

unint64_t sub_1D795A454()
{
  unint64_t result = qword_1EA844F48;
  if (!qword_1EA844F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844F48);
  }
  return result;
}

unint64_t sub_1D795A4AC()
{
  unint64_t result = qword_1EA844F50;
  if (!qword_1EA844F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844F50);
  }
  return result;
}

unint64_t sub_1D795A504()
{
  unint64_t result = qword_1EA844F58;
  if (!qword_1EA844F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844F58);
  }
  return result;
}

unint64_t sub_1D795A55C()
{
  unint64_t result = qword_1EA844F60;
  if (!qword_1EA844F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844F60);
  }
  return result;
}

unint64_t sub_1D795A5B4()
{
  unint64_t result = qword_1EA844F68;
  if (!qword_1EA844F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844F68);
  }
  return result;
}

unint64_t sub_1D795A60C()
{
  unint64_t result = qword_1EA844F70;
  if (!qword_1EA844F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844F70);
  }
  return result;
}

unint64_t sub_1D795A664()
{
  unint64_t result = qword_1EA844F78;
  if (!qword_1EA844F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844F78);
  }
  return result;
}

unint64_t sub_1D795A6BC()
{
  unint64_t result = qword_1EA844F80;
  if (!qword_1EA844F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844F80);
  }
  return result;
}

unint64_t sub_1D795A714()
{
  unint64_t result = qword_1EA844F88;
  if (!qword_1EA844F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844F88);
  }
  return result;
}

unint64_t sub_1D795A76C()
{
  unint64_t result = qword_1EA844F90;
  if (!qword_1EA844F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844F90);
  }
  return result;
}

unint64_t sub_1D795A7C4()
{
  unint64_t result = qword_1EA844F98;
  if (!qword_1EA844F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844F98);
  }
  return result;
}

unint64_t sub_1D795A81C()
{
  unint64_t result = qword_1EA844FA0;
  if (!qword_1EA844FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844FA0);
  }
  return result;
}

unint64_t sub_1D795A874()
{
  unint64_t result = qword_1EA844FA8;
  if (!qword_1EA844FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844FA8);
  }
  return result;
}

unint64_t sub_1D795A8CC()
{
  unint64_t result = qword_1EA844FB0;
  if (!qword_1EA844FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844FB0);
  }
  return result;
}

unint64_t sub_1D795A924()
{
  unint64_t result = qword_1EA844FB8;
  if (!qword_1EA844FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844FB8);
  }
  return result;
}

unint64_t sub_1D795A97C()
{
  unint64_t result = qword_1EA844FC0;
  if (!qword_1EA844FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844FC0);
  }
  return result;
}

unint64_t sub_1D795A9D4()
{
  unint64_t result = qword_1EA844FC8;
  if (!qword_1EA844FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844FC8);
  }
  return result;
}

unint64_t sub_1D795AA2C()
{
  unint64_t result = qword_1EA844FD0;
  if (!qword_1EA844FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844FD0);
  }
  return result;
}

unint64_t sub_1D795AA84()
{
  unint64_t result = qword_1EA844FD8;
  if (!qword_1EA844FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844FD8);
  }
  return result;
}

unint64_t sub_1D795AADC()
{
  unint64_t result = qword_1EA844FE0;
  if (!qword_1EA844FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844FE0);
  }
  return result;
}

unint64_t sub_1D795AB34()
{
  unint64_t result = qword_1EA844FE8;
  if (!qword_1EA844FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844FE8);
  }
  return result;
}

unint64_t sub_1D795AB8C()
{
  unint64_t result = qword_1EA844FF0;
  if (!qword_1EA844FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844FF0);
  }
  return result;
}

unint64_t sub_1D795ABE4()
{
  unint64_t result = qword_1EA844FF8;
  if (!qword_1EA844FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA844FF8);
  }
  return result;
}

unint64_t sub_1D795AC3C()
{
  unint64_t result = qword_1EA845000;
  if (!qword_1EA845000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845000);
  }
  return result;
}

unint64_t sub_1D795AC94()
{
  unint64_t result = qword_1EA845008;
  if (!qword_1EA845008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845008);
  }
  return result;
}

uint64_t sub_1D795ACE8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1936941424 && a2 == 0xE400000000000000;
  if (v2 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656E697272756C62 && a2 == 0xED0000776F4C7373 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656E697272756C62 && a2 == 0xEE00686769487373 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x657275736F707865 && a2 == 0xEB00000000776F4CLL || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x657275736F707865 && a2 == 0xEC00000068676948 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001D7AC5060 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001D7AC5040 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D7AC5020 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001D7AC5000 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001D7AC4FE0 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001D7AC4FC0 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6374695064616568 && a2 == 0xEC000000776F4C68 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x6374695064616568 && a2 == 0xED00006867694868 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x6C6C6F5264616568 && a2 == 0xEB00000000776F4CLL || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x6C6C6F5264616568 && a2 == 0xEC00000068676948 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x4C77615964616568 && a2 == 0xEA0000000000776FLL || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0x4877615964616568 && a2 == 0xEB00000000686769 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001D7AC4FA0 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001D7AC4F80 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001D7AC4F60 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001D7AC4F40 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001D7AC4F20 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001D7AC4F00 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001D7AC4EE0 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001D7AC4EC0 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 24;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001D7AC4EA0 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 25;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001D7AC4E80 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 26;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001D7AC4E60 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 27;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001D7AC4E40 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 28;
  }
  else if (a1 == 0x746E656D75636F64 && a2 == 0xEF776F4C657A6953 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 29;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D7AC4E20 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 30;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D7AC4E00 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 31;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001D7AC4DE0 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 32;
  }
  else if (a1 == 0x746E656D75636F64 && a2 == 0xEE00646577656B53 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 33;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D7AC4DC0 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 34;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001D7AC4DA0 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 35;
  }
  else if (a1 == 0x6F54746567726174 && a2 == 0xEE0070557261466FLL || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 36;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D7AC4D80 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 37;
  }
  else if (a1 == 0x73656361466D756ELL && a2 == 0xEB00000000776F4CLL || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 38;
  }
  else if (a1 == 0x73656361466D756ELL && a2 == 0xEC00000068676948 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 39;
  }
  else if (a1 == 0x6C6576654C78756CLL && a2 == 0xEB00000000776F4CLL || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 40;
  }
  else if (a1 == 0x6C6576654C78756CLL && a2 == 0xEC00000068676948 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 41;
  }
  else if (a1 == 0x6F4E373134666470 && a2 == 0xEE00646E756F4674 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 42;
  }
  else if (a1 == 0x6F46373134666470 && a2 == 0xEB00000000646E75 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 43;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001D7AC4D60 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 44;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D7AC1090 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 45;
  }
  else if (a1 == 0x73694D6574617473 && a2 == 0xED0000686374616DLL || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 46;
  }
  else if (a1 == 0x756C636E6F636E69 && a2 == 0xEC00000065766973 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 47;
  }
  else if (a1 == 0x78656C706D6F63 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 48;
  }
  else
  {
    char v6 = sub_1D7A9D358();
    swift_bridgeObjectRelease();
    if (v6) {
      return 48;
    }
    else {
      return 49;
    }
  }
}

uint64_t sub_1D795C054(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656E697272756C62 && a2 == 0xEA00000000007373;
  if (v2 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x657275736F707865 && a2 == 0xE800000000000000 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7473694464726163 && a2 == 0xEE006E6F6974726FLL || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D7ABBBE0 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001D7ABBC00 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6374695064616568 && a2 == 0xE900000000000068 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6C6C6F5264616568 && a2 == 0xE800000000000000 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x77615964616568 && a2 == 0xE700000000000000 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001D7ABBC30 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001D7ABBC50 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001D7ABBC70 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001D7ABBC90 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001D7ABBCB0 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001D7ABBCD0 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x746E656D75636F64 && a2 == 0xEC000000657A6953 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D7ABBCF0 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0x746E656D75636F64 && a2 == 0xEC00000077656B53 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0x666972447466656CLL && a2 == 0xE900000000000074 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0x6972447468676972 && a2 == 0xEA00000000007466 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0x74666972447075 && a2 == 0xE700000000000000 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0x666972446E776F64 && a2 == 0xE900000000000074 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0x73656361466D756ELL && a2 == 0xE800000000000000 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0x6C6576654C78756CLL && a2 == 0xE800000000000000 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 0x6544373134666470 && a2 == 0xEE00646574636574 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D7AC1090 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 24;
  }
  else if (a1 == 0x754E726575737369 && a2 == 0xEC0000007265626DLL || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 25;
  }
  else if (a1 == 0x78656C706D6F63 && a2 == 0xE700000000000000 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 26;
  }
  else if (a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 27;
  }
  else
  {
    char v6 = sub_1D7A9D358();
    swift_bridgeObjectRelease();
    if (v6) {
      return 27;
    }
    else {
      return 28;
    }
  }
}

uint64_t sub_1D795CB80(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7272756C426E696DLL && a2 == 0xED00007373656E69;
  if (v2 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7272756C4278616DLL && a2 == 0xED00007373656E69 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x736F7078456E696DLL && a2 == 0xEB00000000657275 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x736F70784578616DLL && a2 == 0xEB00000000657275 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001D7AC5080 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001D7AC50A0 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D7AC50C0 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D7AC50E0 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001D7AC5100 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001D7AC5120 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x50646165486E696DLL && a2 == 0xEC00000068637469 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x506461654878616DLL && a2 == 0xEC00000068637469 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x52646165486E696DLL && a2 == 0xEB000000006C6C6FLL || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x526461654878616DLL && a2 == 0xEB000000006C6C6FLL || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x59646165486E696DLL && a2 == 0xEA00000000007761 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x596461654878616DLL && a2 == 0xEA00000000007761 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001D7AC5140 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001D7AC5160 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001D7AC5180 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001D7AC51A0 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001D7AC51C0 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001D7AC51E0 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001D7AC5200 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001D7AC5220 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001D7AC5240 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 24;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001D7AC5260 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 25;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001D7AC5280 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 26;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001D7AC52A0 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 27;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001D7AC52C0 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 28;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001D7AC52E0 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 29;
  }
  else if (a1 == 0x6D75636F446E696DLL && a2 == 0xEF657A6953746E65 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 30;
  }
  else if (a1 == 0x6D75636F4478616DLL && a2 == 0xEF657A6953746E65 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 31;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D7AC5300 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 32;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001D7AC5320 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 33;
  }
  else if (a1 == 0x6D75636F446E696DLL && a2 == 0xEF77656B53746E65 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 34;
  }
  else if (a1 == 0x6D75636F4478616DLL && a2 == 0xEF77656B53746E65 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 35;
  }
  else if (a1 == 0x447466654C78616DLL && a2 == 0xEC00000074666972 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 36;
  }
  else if (a1 == 0x746867695278616DLL && a2 == 0xED00007466697244 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 37;
  }
  else if (a1 == 0x697244705578616DLL && a2 == 0xEA00000000007466 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 38;
  }
  else if (a1 == 0x446E776F4478616DLL && a2 == 0xEC00000074666972 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 39;
  }
  else if (a1 == 0x61466D754E6E696DLL && a2 == 0xEB00000000736563 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 40;
  }
  else if (a1 == 0x61466D754E78616DLL && a2 == 0xEB00000000736563 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 41;
  }
  else if (a1 == 0x654C78754C6E696DLL && a2 == 0xEB000000006C6576 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 42;
  }
  else if (a1 == 0x654C78754C78616DLL && a2 == 0xEB000000006C6576 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 43;
  }
  else if (a1 == 0x6544373134666470 && a2 == 0xEE00646574636574 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 44;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D7AC1090 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 45;
  }
  else if (a1 == 0x754E726575737369 && a2 == 0xEC0000007265626DLL || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 46;
  }
  else if (a1 == 0x5378656C706D6F63 && a2 == 0xEE00736C616E6769 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 47;
  }
  else if (a1 == 0x6F7779654B72636FLL && a2 == 0xEB00000000736472)
  {
    swift_bridgeObjectRelease();
    return 48;
  }
  else
  {
    char v6 = sub_1D7A9D358();
    swift_bridgeObjectRelease();
    if (v6) {
      return 48;
    }
    else {
      return 49;
    }
  }
}

uint64_t sub_1D795DFA8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6169726574697263 && a2 == 0xE800000000000000;
  if (v2 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x797469726F697270 && a2 == 0xE800000000000000 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7363697274656DLL && a2 == 0xE700000000000000 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7265566C65646F6DLL && a2 == 0xEC0000006E6F6973)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1D7A9D358();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

CoreIDVShared::KeyAuthorizationCOSE_Sign1Payload::KeyPurpose_optional __swiftcall KeyAuthorizationCOSE_Sign1Payload.KeyPurpose.init(rawValue:)(Swift::String rawValue)
{
  BOOL v2 = v1;
  unint64_t v3 = sub_1D7A9D058();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *BOOL v2 = v5;
  return result;
}

unint64_t KeyAuthorizationCOSE_Sign1Payload.KeyPurpose.rawValue.getter()
{
  unint64_t result = 0xD000000000000015;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x4954505952434E45;
      break;
    case 2:
      unint64_t result = 0x4D544E4553455250;
      break;
    case 3:
      unint64_t result = 0xD00000000000001DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D795E28C(unsigned __int8 *a1, char *a2)
{
  return sub_1D799521C(*a1, *a2);
}

uint64_t sub_1D795E298()
{
  return sub_1D7A1E72C();
}

uint64_t sub_1D795E2A0()
{
  return sub_1D7A350E0();
}

uint64_t sub_1D795E2A8()
{
  return sub_1D7A1FA34();
}

CoreIDVShared::KeyAuthorizationCOSE_Sign1Payload::KeyPurpose_optional sub_1D795E2B0(Swift::String *a1)
{
  return KeyAuthorizationCOSE_Sign1Payload.KeyPurpose.init(rawValue:)(*a1);
}

void sub_1D795E2BC(unint64_t *a1@<X8>)
{
  unint64_t v2 = 0xD000000000000015;
  unint64_t v3 = 0x80000001D7ABC520;
  switch(*v1)
  {
    case 1:
      unint64_t v3 = 0xEE0059454B5F4E4FLL;
      unint64_t v2 = 0x4954505952434E45;
      goto LABEL_3;
    case 2:
      *a1 = 0x4D544E4553455250;
      a1[1] = 0xEF59454B5F544E45;
      break;
    case 3:
      *a1 = 0xD00000000000001DLL;
      a1[1] = 0x80000001D7ABC560;
      break;
    default:
LABEL_3:
      *a1 = v2;
      a1[1] = v3;
      break;
  }
}

uint64_t sub_1D795E374()
{
  return sub_1D7A9C2B8();
}

uint64_t sub_1D795E3D4()
{
  return sub_1D7A9C258();
}

CoreIDVShared::KeyAuthorizationCOSE_Sign1Payload::AuthorizerType_optional __swiftcall KeyAuthorizationCOSE_Sign1Payload.AuthorizerType.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_1D7A9D058();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

uint64_t KeyAuthorizationCOSE_Sign1Payload.AuthorizerType.rawValue.getter()
{
  unint64_t v1 = 0xD000000000000015;
  if (*v0 != 1) {
    unint64_t v1 = 0xD00000000000001DLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x595449544E454449;
  }
}

uint64_t sub_1D795E4E8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D7995108(*a1, *a2);
}

uint64_t sub_1D795E4F4()
{
  return sub_1D7A1E830();
}

uint64_t sub_1D795E4FC()
{
  sub_1D7A9C0B8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D795E598()
{
  return sub_1D7A1FB34();
}

CoreIDVShared::KeyAuthorizationCOSE_Sign1Payload::AuthorizerType_optional sub_1D795E5A0(Swift::String *a1)
{
  return KeyAuthorizationCOSE_Sign1Payload.AuthorizerType.init(rawValue:)(*a1);
}

void sub_1D795E5AC(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xEC00000059454B5FLL;
  unint64_t v4 = 0x80000001D7ABC520;
  unint64_t v5 = 0xD000000000000015;
  if (v2 != 1)
  {
    unint64_t v5 = 0xD00000000000001DLL;
    unint64_t v4 = 0x80000001D7ABC560;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x595449544E454449;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1D795E618()
{
  return sub_1D7A9C2B8();
}

uint64_t sub_1D795E678()
{
  return sub_1D7A9C258();
}

uint64_t KeyAuthorizationCOSE_Sign1Payload.publicKey.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1D7A9B458();
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t KeyAuthorizationCOSE_Sign1Payload.keyPurpose.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for KeyAuthorizationCOSE_Sign1Payload();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for KeyAuthorizationCOSE_Sign1Payload()
{
  uint64_t result = qword_1EA845058;
  if (!qword_1EA845058) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t KeyAuthorizationCOSE_Sign1Payload.authorizerType.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for KeyAuthorizationCOSE_Sign1Payload();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t KeyAuthorizationCOSE_Sign1Payload.init(publicKey:keyPurpose:authorizerType:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  char v6 = *a2;
  char v7 = *a3;
  uint64_t v8 = sub_1D7A9B458();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a4, a1, v8);
  uint64_t result = type metadata accessor for KeyAuthorizationCOSE_Sign1Payload();
  *(unsigned char *)(a4 + *(int *)(result + 20)) = v6;
  *(unsigned char *)(a4 + *(int *)(result + 24)) = v7;
  return result;
}

uint64_t sub_1D795E86C()
{
  uint64_t v1 = 0x6F7072755079656BLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x7A69726F68747561;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x654B63696C627570;
  }
}

uint64_t sub_1D795E8DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1D795FB48(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D795E904(uint64_t a1)
{
  unint64_t v2 = sub_1D795EB7C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D795E940(uint64_t a1)
{
  unint64_t v2 = sub_1D795EB7C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t KeyAuthorizationCOSE_Sign1Payload.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845010);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7, v8, v9, v10, v11, v12, v13);
  int v15 = &v18[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D795EB7C();
  sub_1D7A9D6E8();
  v18[15] = 0;
  sub_1D7A9B458();
  sub_1D795F00C(&qword_1EA843D78);
  sub_1D7A9D228();
  if (!v2)
  {
    uint64_t v16 = type metadata accessor for KeyAuthorizationCOSE_Sign1Payload();
    v18[14] = *(unsigned char *)(v3 + *(int *)(v16 + 20));
    v18[13] = 1;
    sub_1D795EBD0();
    sub_1D7A9D228();
    __int16 v18[12] = *(unsigned char *)(v3 + *(int *)(v16 + 24));
    v18[11] = 2;
    sub_1D795EC24();
    sub_1D7A9D228();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v15, v5);
}

unint64_t sub_1D795EB7C()
{
  unint64_t result = qword_1EA845018;
  if (!qword_1EA845018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845018);
  }
  return result;
}

unint64_t sub_1D795EBD0()
{
  unint64_t result = qword_1EA845020;
  if (!qword_1EA845020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845020);
  }
  return result;
}

unint64_t sub_1D795EC24()
{
  unint64_t result = qword_1EA845028;
  if (!qword_1EA845028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845028);
  }
  return result;
}

uint64_t KeyAuthorizationCOSE_Sign1Payload.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v4 = sub_1D7A9B458();
  uint64_t v41 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v5, v6, v7, v8, v9, v10, v11);
  int v43 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845030);
  uint64_t v40 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42, v13, v14, v15, v16, v17, v18, v19);
  int v21 = (char *)&v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for KeyAuthorizationCOSE_Sign1Payload();
  MEMORY[0x1F4188790](v22, v23, v24, v25, v26, v27, v28, v29);
  int v31 = (char *)&v38 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D795EB7C();
  sub_1D7A9D6A8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v32 = (uint64_t)v31;
  uint64_t v33 = v41;
  char v48 = 0;
  sub_1D795F00C(&qword_1EA843D38);
  uint64_t v34 = v42;
  sub_1D7A9D148();
  uint64_t v35 = *(void (**)(uint64_t, char *, uint64_t))(v33 + 32);
  uint64_t v36 = v43;
  int v43 = (char *)v4;
  v35(v32, v36, v4);
  char v46 = 1;
  sub_1D795F050();
  sub_1D7A9D148();
  *(unsigned char *)(v32 + *(int *)(v22 + 20)) = v47;
  char v44 = 2;
  sub_1D795F0A4();
  sub_1D7A9D148();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v21, v34);
  *(unsigned char *)(v32 + *(int *)(v22 + 24)) = v45;
  sub_1D795F0F8(v32, v39);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1D795F15C(v32);
}

uint64_t sub_1D795F00C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1D7A9B458();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D795F050()
{
  unint64_t result = qword_1EA845038;
  if (!qword_1EA845038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845038);
  }
  return result;
}

unint64_t sub_1D795F0A4()
{
  unint64_t result = qword_1EA845040;
  if (!qword_1EA845040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845040);
  }
  return result;
}

uint64_t sub_1D795F0F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for KeyAuthorizationCOSE_Sign1Payload();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D795F15C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for KeyAuthorizationCOSE_Sign1Payload();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1D795F1BC()
{
  unint64_t result = qword_1EA845048;
  if (!qword_1EA845048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845048);
  }
  return result;
}

unint64_t sub_1D795F214()
{
  unint64_t result = qword_1EA845050;
  if (!qword_1EA845050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845050);
  }
  return result;
}

uint64_t sub_1D795F268@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return KeyAuthorizationCOSE_Sign1Payload.init(from:)(a1, a2);
}

uint64_t sub_1D795F280(void *a1)
{
  return KeyAuthorizationCOSE_Sign1Payload.encode(to:)(a1);
}

void *initializeBufferWithCopyOfBuffer for KeyAuthorizationCOSE_Sign1Payload(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (void *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1D7A9B458();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
    *((unsigned char *)a1 + v8) = *((unsigned char *)a2 + v8);
  }
  return a1;
}

uint64_t destroy for KeyAuthorizationCOSE_Sign1Payload(uint64_t a1)
{
  uint64_t v2 = sub_1D7A9B458();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for KeyAuthorizationCOSE_Sign1Payload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D7A9B458();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  return a1;
}

uint64_t assignWithCopy for KeyAuthorizationCOSE_Sign1Payload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D7A9B458();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t initializeWithTake for KeyAuthorizationCOSE_Sign1Payload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D7A9B458();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for KeyAuthorizationCOSE_Sign1Payload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D7A9B458();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for KeyAuthorizationCOSE_Sign1Payload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D795F5F8);
}

uint64_t sub_1D795F5F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D7A9B458();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 3) {
      return v10 - 2;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for KeyAuthorizationCOSE_Sign1Payload(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D795F6C8);
}

uint64_t sub_1D795F6C8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1D7A9B458();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 24)) = a2 + 2;
  }
  return result;
}

uint64_t sub_1D795F784()
{
  uint64_t result = sub_1D7A9B458();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for KeyAuthorizationCOSE_Sign1Payload.KeyPurpose(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D795F8F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for KeyAuthorizationCOSE_Sign1Payload.KeyPurpose()
{
  return &type metadata for KeyAuthorizationCOSE_Sign1Payload.KeyPurpose;
}

ValueMetadata *type metadata accessor for KeyAuthorizationCOSE_Sign1Payload.AuthorizerType()
{
  return &type metadata for KeyAuthorizationCOSE_Sign1Payload.AuthorizerType;
}

unsigned char *_s13CoreIDVShared33KeyAuthorizationCOSE_Sign1PayloadV14AuthorizerTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D795FA08);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for KeyAuthorizationCOSE_Sign1Payload.CodingKeys()
{
  return &type metadata for KeyAuthorizationCOSE_Sign1Payload.CodingKeys;
}

unint64_t sub_1D795FA44()
{
  unint64_t result = qword_1EA845068;
  if (!qword_1EA845068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845068);
  }
  return result;
}

unint64_t sub_1D795FA9C()
{
  unint64_t result = qword_1EA845070;
  if (!qword_1EA845070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845070);
  }
  return result;
}

unint64_t sub_1D795FAF4()
{
  unint64_t result = qword_1EA845078;
  if (!qword_1EA845078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845078);
  }
  return result;
}

uint64_t sub_1D795FB48(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x654B63696C627570 && a2 == 0xE900000000000079;
  if (v2 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F7072755079656BLL && a2 == 0xEA00000000006573 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7A69726F68747561 && a2 == 0xEE00657079547265)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1D7A9D358();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

unint64_t sub_1D795FCDC()
{
  unint64_t result = qword_1EA845080;
  if (!qword_1EA845080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845080);
  }
  return result;
}

unint64_t sub_1D795FD30()
{
  unint64_t result = qword_1EA845088;
  if (!qword_1EA845088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845088);
  }
  return result;
}

BOOL static DeviceClass.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t DeviceClass.hash(into:)()
{
  return sub_1D7A9D5E8();
}

uint64_t sub_1D795FDC8(char a1)
{
  uint64_t result = 0x656E6F685069;
  switch(a1)
  {
    case 1:
      uint64_t result = 1685016681;
      break;
    case 2:
      uint64_t result = 1684099177;
      break;
    case 3:
      uint64_t result = 0x5654656C707061;
      break;
    case 4:
      uint64_t result = 0x4147504669;
      break;
    case 5:
      uint64_t result = 0x6863746177;
      break;
    case 6:
      uint64_t result = 0x6363416F69647561;
      break;
    case 7:
      uint64_t result = 0x656764697262;
      break;
    case 8:
      uint64_t result = 6513005;
      break;
    case 9:
      uint64_t result = 0x736944656C707061;
      break;
    case 10:
      uint64_t result = 0x447974696C616572;
      break;
    case 11:
      uint64_t result = 0x4D657475706D6F63;
      break;
    case 12:
      uint64_t result = 0x64696C61766E69;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D795FF5C(uint64_t a1)
{
  unint64_t v2 = sub_1D7961380();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D795FF98(uint64_t a1)
{
  unint64_t v2 = sub_1D7961380();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D795FFD4(uint64_t a1)
{
  unint64_t v2 = sub_1D7961578();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D7960010(uint64_t a1)
{
  unint64_t v2 = sub_1D7961578();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D796004C(uint64_t a1)
{
  unint64_t v2 = sub_1D796147C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D7960088(uint64_t a1)
{
  unint64_t v2 = sub_1D796147C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D79600C4(uint64_t a1)
{
  unint64_t v2 = sub_1D7961428();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D7960100(uint64_t a1)
{
  unint64_t v2 = sub_1D7961428();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D796013C()
{
  return sub_1D795FDC8(*v0);
}

uint64_t sub_1D7960144@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1D7963920(a1, a2);
  *a3 = result;
  return result;
}

void sub_1D796016C(unsigned char *a1@<X8>)
{
  *a1 = 13;
}

uint64_t sub_1D7960178(uint64_t a1)
{
  unint64_t v2 = sub_1D7961230();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D79601B4(uint64_t a1)
{
  unint64_t v2 = sub_1D7961230();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D79601F0(uint64_t a1)
{
  unint64_t v2 = sub_1D79612D8();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D796022C(uint64_t a1)
{
  unint64_t v2 = sub_1D79612D8();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D7960268(uint64_t a1)
{
  unint64_t v2 = sub_1D7961524();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D79602A4(uint64_t a1)
{
  unint64_t v2 = sub_1D7961524();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D79602E0(uint64_t a1)
{
  unint64_t v2 = sub_1D79615CC();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D796031C(uint64_t a1)
{
  unint64_t v2 = sub_1D79615CC();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D7960358(uint64_t a1)
{
  unint64_t v2 = sub_1D7961674();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D7960394(uint64_t a1)
{
  unint64_t v2 = sub_1D7961674();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D79603D0(uint64_t a1)
{
  unint64_t v2 = sub_1D7961620();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D796040C(uint64_t a1)
{
  unint64_t v2 = sub_1D7961620();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D7960448(uint64_t a1)
{
  unint64_t v2 = sub_1D7961284();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D7960484(uint64_t a1)
{
  unint64_t v2 = sub_1D7961284();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D79604C0(uint64_t a1)
{
  unint64_t v2 = sub_1D79613D4();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D79604FC(uint64_t a1)
{
  unint64_t v2 = sub_1D79613D4();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D7960538(uint64_t a1)
{
  unint64_t v2 = sub_1D796132C();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D7960574(uint64_t a1)
{
  unint64_t v2 = sub_1D796132C();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1D79605B0(uint64_t a1)
{
  unint64_t v2 = sub_1D79614D0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D79605EC(uint64_t a1)
{
  unint64_t v2 = sub_1D79614D0();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t DeviceClass.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845090);
  uint64_t v177 = *(void *)(v4 - 8);
  uint64_t v178 = v4;
  MEMORY[0x1F4188790](v4, v5, v6, v7, v8, v9, v10, v11);
  long long v176 = (char *)&v143 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845098);
  uint64_t v174 = *(void *)(v13 - 8);
  uint64_t v175 = v13;
  MEMORY[0x1F4188790](v13, v14, v15, v16, v17, v18, v19, v20);
  uint64_t v173 = (char *)&v143 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8450A0);
  uint64_t v171 = *(void *)(v22 - 8);
  uint64_t v172 = v22;
  MEMORY[0x1F4188790](v22, v23, v24, v25, v26, v27, v28, v29);
  unint64_t v170 = (char *)&v143 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8450A8);
  uint64_t v168 = *(void *)(v31 - 8);
  uint64_t v169 = v31;
  MEMORY[0x1F4188790](v31, v32, v33, v34, v35, v36, v37, v38);
  int v167 = (char *)&v143 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8450B0);
  uint64_t v165 = *(void *)(v40 - 8);
  uint64_t v166 = v40;
  MEMORY[0x1F4188790](v40, v41, v42, v43, v44, v45, v46, v47);
  uint64_t v164 = (char *)&v143 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v163 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8450B8);
  uint64_t v162 = *(void *)(v163 - 8);
  MEMORY[0x1F4188790](v163, v49, v50, v51, v52, v53, v54, v55);
  __int16 v161 = (char *)&v143 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v160 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8450C0);
  uint64_t v159 = *(void *)(v160 - 8);
  MEMORY[0x1F4188790](v160, v57, v58, v59, v60, v61, v62, v63);
  char v158 = (char *)&v143 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v157 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8450C8);
  uint64_t v156 = *(void *)(v157 - 8);
  MEMORY[0x1F4188790](v157, v65, v66, v67, v68, v69, v70, v71);
  int v155 = (char *)&v143 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v154 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8450D0);
  uint64_t v153 = *(void *)(v154 - 8);
  MEMORY[0x1F4188790](v154, v73, v74, v75, v76, v77, v78, v79);
  char v152 = (char *)&v143 - ((v80 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v151 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8450D8);
  uint64_t v150 = *(void *)(v151 - 8);
  MEMORY[0x1F4188790](v151, v81, v82, v83, v84, v85, v86, v87);
  uint64_t v149 = (char *)&v143 - ((v88 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v148 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8450E0);
  uint64_t v147 = *(void *)(v148 - 8);
  MEMORY[0x1F4188790](v148, v89, v90, v91, v92, v93, v94, v95);
  unint64_t v146 = (char *)&v143 - ((v96 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8450E8);
  uint64_t v145 = *(void *)(v97 - 8);
  MEMORY[0x1F4188790](v97, v98, v99, v100, v101, v102, v103, v104);
  float v106 = (char *)&v143 - ((v105 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8450F0);
  uint64_t v144 = *(void *)(v107 - 8);
  MEMORY[0x1F4188790](v107, v108, v109, v110, v111, v112, v113, v114);
  char v116 = (char *)&v143 - ((v115 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8450F8);
  uint64_t v118 = *(void *)(v117 - 8);
  uint64_t v180 = v117;
  uint64_t v181 = v118;
  MEMORY[0x1F4188790](v117, v119, v120, v121, v122, v123, v124, v125);
  uint64_t v127 = (char *)&v143 - ((v126 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v128 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D7961230();
  uint64_t v179 = v127;
  sub_1D7A9D6E8();
  switch(v128)
  {
    case 1:
      char v183 = 1;
      sub_1D7961620();
      uint64_t v130 = v179;
      uint64_t v129 = v180;
      sub_1D7A9D178();
      (*(void (**)(char *, uint64_t))(v145 + 8))(v106, v97);
      return (*(uint64_t (**)(char *, uint64_t))(v181 + 8))(v130, v129);
    case 2:
      char v184 = 2;
      sub_1D79615CC();
      char v131 = v146;
      unint64_t v132 = v179;
      uint64_t v133 = v180;
      sub_1D7A9D178();
      (*(void (**)(char *, uint64_t))(v147 + 8))(v131, v148);
      return (*(uint64_t (**)(char *, uint64_t))(v181 + 8))(v132, v133);
    case 3:
      char v185 = 3;
      sub_1D7961578();
      unint64_t v135 = v149;
      uint64_t v130 = v179;
      uint64_t v129 = v180;
      sub_1D7A9D178();
      (*(void (**)(char *, uint64_t))(v150 + 8))(v135, v151);
      return (*(uint64_t (**)(char *, uint64_t))(v181 + 8))(v130, v129);
    case 4:
      char v186 = 4;
      sub_1D7961524();
      unint64_t v136 = v152;
      uint64_t v130 = v179;
      uint64_t v129 = v180;
      sub_1D7A9D178();
      (*(void (**)(char *, uint64_t))(v153 + 8))(v136, v154);
      return (*(uint64_t (**)(char *, uint64_t))(v181 + 8))(v130, v129);
    case 5:
      char v187 = 5;
      sub_1D79614D0();
      unint64_t v137 = v155;
      uint64_t v130 = v179;
      uint64_t v129 = v180;
      sub_1D7A9D178();
      (*(void (**)(char *, uint64_t))(v156 + 8))(v137, v157);
      return (*(uint64_t (**)(char *, uint64_t))(v181 + 8))(v130, v129);
    case 6:
      char v188 = 6;
      sub_1D796147C();
      unint64_t v138 = v158;
      uint64_t v130 = v179;
      uint64_t v129 = v180;
      sub_1D7A9D178();
      (*(void (**)(char *, uint64_t))(v159 + 8))(v138, v160);
      return (*(uint64_t (**)(char *, uint64_t))(v181 + 8))(v130, v129);
    case 7:
      char v189 = 7;
      sub_1D7961428();
      int v139 = v161;
      uint64_t v130 = v179;
      uint64_t v129 = v180;
      sub_1D7A9D178();
      (*(void (**)(char *, uint64_t))(v162 + 8))(v139, v163);
      return (*(uint64_t (**)(char *, uint64_t))(v181 + 8))(v130, v129);
    case 8:
      char v190 = 8;
      sub_1D79613D4();
      unint64_t v140 = v164;
      uint64_t v130 = v179;
      uint64_t v129 = v180;
      sub_1D7A9D178();
      uint64_t v142 = v165;
      uint64_t v141 = v166;
      goto LABEL_15;
    case 9:
      char v191 = 9;
      sub_1D7961380();
      unint64_t v140 = v167;
      uint64_t v130 = v179;
      uint64_t v129 = v180;
      sub_1D7A9D178();
      uint64_t v142 = v168;
      uint64_t v141 = v169;
      goto LABEL_15;
    case 10:
      char v192 = 10;
      sub_1D796132C();
      unint64_t v140 = v170;
      uint64_t v130 = v179;
      uint64_t v129 = v180;
      sub_1D7A9D178();
      uint64_t v142 = v171;
      uint64_t v141 = v172;
      goto LABEL_15;
    case 11:
      char v193 = 11;
      sub_1D79612D8();
      unint64_t v140 = v173;
      uint64_t v130 = v179;
      uint64_t v129 = v180;
      sub_1D7A9D178();
      uint64_t v142 = v174;
      uint64_t v141 = v175;
      goto LABEL_15;
    case 12:
      char v194 = 12;
      sub_1D7961284();
      unint64_t v140 = v176;
      uint64_t v130 = v179;
      uint64_t v129 = v180;
      sub_1D7A9D178();
      uint64_t v142 = v177;
      uint64_t v141 = v178;
LABEL_15:
      (*(void (**)(char *, uint64_t))(v142 + 8))(v140, v141);
      break;
    default:
      char v182 = 0;
      sub_1D7961674();
      uint64_t v130 = v179;
      uint64_t v129 = v180;
      sub_1D7A9D178();
      (*(void (**)(char *, uint64_t))(v144 + 8))(v116, v107);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v181 + 8))(v130, v129);
}

unint64_t sub_1D7961230()
{
  unint64_t result = qword_1EA845100;
  if (!qword_1EA845100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845100);
  }
  return result;
}

unint64_t sub_1D7961284()
{
  unint64_t result = qword_1EA845108;
  if (!qword_1EA845108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845108);
  }
  return result;
}

unint64_t sub_1D79612D8()
{
  unint64_t result = qword_1EA845110;
  if (!qword_1EA845110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845110);
  }
  return result;
}

unint64_t sub_1D796132C()
{
  unint64_t result = qword_1EA845118;
  if (!qword_1EA845118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845118);
  }
  return result;
}

unint64_t sub_1D7961380()
{
  unint64_t result = qword_1EA845120;
  if (!qword_1EA845120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845120);
  }
  return result;
}

unint64_t sub_1D79613D4()
{
  unint64_t result = qword_1EA845128;
  if (!qword_1EA845128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845128);
  }
  return result;
}

unint64_t sub_1D7961428()
{
  unint64_t result = qword_1EA845130;
  if (!qword_1EA845130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845130);
  }
  return result;
}

unint64_t sub_1D796147C()
{
  unint64_t result = qword_1EA845138;
  if (!qword_1EA845138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845138);
  }
  return result;
}

unint64_t sub_1D79614D0()
{
  unint64_t result = qword_1EA845140;
  if (!qword_1EA845140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845140);
  }
  return result;
}

unint64_t sub_1D7961524()
{
  unint64_t result = qword_1EA845148;
  if (!qword_1EA845148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845148);
  }
  return result;
}

unint64_t sub_1D7961578()
{
  unint64_t result = qword_1EA845150;
  if (!qword_1EA845150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845150);
  }
  return result;
}

unint64_t sub_1D79615CC()
{
  unint64_t result = qword_1EA845158;
  if (!qword_1EA845158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845158);
  }
  return result;
}

unint64_t sub_1D7961620()
{
  unint64_t result = qword_1EA845160;
  if (!qword_1EA845160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845160);
  }
  return result;
}

unint64_t sub_1D7961674()
{
  unint64_t result = qword_1EA845168;
  if (!qword_1EA845168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845168);
  }
  return result;
}

uint64_t DeviceClass.hashValue.getter()
{
  return sub_1D7A9D628();
}

uint64_t DeviceClass.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  float v206 = a2;
  uint64_t v205 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845170);
  uint64_t v193 = *(void *)(v205 - 8);
  MEMORY[0x1F4188790](v205, v3, v4, v5, v6, v7, v8, v9);
  char v201 = (char *)&v165 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845178);
  uint64_t v191 = *(void *)(v11 - 8);
  uint64_t v192 = v11;
  MEMORY[0x1F4188790](v11, v12, v13, v14, v15, v16, v17, v18);
  float v200 = (char *)&v165 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845180);
  uint64_t v189 = *(void *)(v20 - 8);
  uint64_t v190 = v20;
  MEMORY[0x1F4188790](v20, v21, v22, v23, v24, v25, v26, v27);
  char v199 = (char *)&v165 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v188 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845188);
  uint64_t v187 = *(void *)(v188 - 8);
  MEMORY[0x1F4188790](v188, v29, v30, v31, v32, v33, v34, v35);
  float v198 = (char *)&v165 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v186 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845190);
  uint64_t v185 = *(void *)(v186 - 8);
  MEMORY[0x1F4188790](v186, v37, v38, v39, v40, v41, v42, v43);
  char v197 = (char *)&v165 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v184 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845198);
  uint64_t v183 = *(void *)(v184 - 8);
  MEMORY[0x1F4188790](v184, v45, v46, v47, v48, v49, v50, v51);
  float v196 = (char *)&v165 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v181 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8451A0);
  uint64_t v182 = *(void *)(v181 - 8);
  MEMORY[0x1F4188790](v181, v53, v54, v55, v56, v57, v58, v59);
  float v204 = (char *)&v165 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v179 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8451A8);
  uint64_t v180 = *(void *)(v179 - 8);
  MEMORY[0x1F4188790](v179, v61, v62, v63, v64, v65, v66, v67);
  char v203 = (char *)&v165 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v178 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8451B0);
  uint64_t v177 = *(void *)(v178 - 8);
  MEMORY[0x1F4188790](v178, v69, v70, v71, v72, v73, v74, v75);
  float v202 = (char *)&v165 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v176 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8451B8);
  uint64_t v175 = *(void *)(v176 - 8);
  MEMORY[0x1F4188790](v176, v77, v78, v79, v80, v81, v82, v83);
  char v195 = (char *)&v165 - ((v84 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v174 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8451C0);
  uint64_t v173 = *(void *)(v174 - 8);
  MEMORY[0x1F4188790](v174, v85, v86, v87, v88, v89, v90, v91);
  char v194 = (char *)&v165 - ((v92 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v172 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8451C8);
  uint64_t v171 = *(void *)(v172 - 8);
  MEMORY[0x1F4188790](v172, v93, v94, v95, v96, v97, v98, v99);
  uint64_t v101 = (char *)&v165 - ((v100 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8451D0);
  uint64_t v170 = *(void *)(v102 - 8);
  MEMORY[0x1F4188790](v102, v103, v104, v105, v106, v107, v108, v109);
  uint64_t v111 = (char *)&v165 - ((v110 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8451D8);
  uint64_t v113 = *(void *)(v112 - 8);
  MEMORY[0x1F4188790](v112, v114, v115, v116, v117, v118, v119, v120);
  uint64_t v122 = (char *)&v165 - ((v121 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = a1[3];
  char v207 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v123);
  sub_1D7961230();
  uint64_t v124 = v208;
  sub_1D7A9D6A8();
  if (!v124)
  {
    int v167 = v111;
    uint64_t v166 = v102;
    uint64_t v168 = v101;
    uint64_t v126 = v202;
    uint64_t v125 = v203;
    uint64_t v127 = v204;
    uint64_t v169 = 0;
    uint64_t v129 = v205;
    uint64_t v128 = v206;
    uint64_t v208 = v113;
    uint64_t v130 = sub_1D7A9D158();
    if (*(void *)(v130 + 16) == 1)
    {
      char v131 = *(unsigned char *)(v130 + 32);
      switch(v131)
      {
        case 1:
          char v210 = 1;
          sub_1D7961620();
          unint64_t v138 = v168;
          uint64_t v139 = v169;
          sub_1D7A9D088();
          if (v139) {
            goto LABEL_32;
          }
          unint64_t v140 = *(void (**)(char *, uint64_t))(v171 + 8);
          uint64_t v141 = v138;
          uint64_t v142 = &v204;
          goto LABEL_25;
        case 2:
          char v211 = 2;
          sub_1D79615CC();
          uint64_t v143 = v194;
          uint64_t v144 = v169;
          sub_1D7A9D088();
          if (v144) {
            goto LABEL_32;
          }
          unint64_t v140 = *(void (**)(char *, uint64_t))(v173 + 8);
          uint64_t v141 = v143;
          uint64_t v142 = &v206;
          goto LABEL_25;
        case 3:
          char v212 = 3;
          sub_1D7961578();
          uint64_t v145 = v195;
          uint64_t v146 = v169;
          sub_1D7A9D088();
          if (v146) {
            goto LABEL_32;
          }
          unint64_t v140 = *(void (**)(char *, uint64_t))(v175 + 8);
          uint64_t v141 = v145;
          uint64_t v142 = (char **)&v208;
          goto LABEL_25;
        case 4:
          char v213 = 4;
          sub_1D7961524();
          uint64_t v147 = v169;
          sub_1D7A9D088();
          if (v147) {
            goto LABEL_32;
          }
          unint64_t v140 = *(void (**)(char *, uint64_t))(v177 + 8);
          uint64_t v141 = v126;
          uint64_t v142 = (char **)v214;
          goto LABEL_25;
        case 5:
          v214[16] = 5;
          sub_1D79614D0();
          uint64_t v148 = v169;
          sub_1D7A9D088();
          if (v148) {
            goto LABEL_32;
          }
          (*(void (**)(char *, uint64_t))(v180 + 8))(v125, v179);
          goto LABEL_37;
        case 6:
          v214[17] = 6;
          sub_1D796147C();
          uint64_t v149 = v169;
          sub_1D7A9D088();
          if (v149) {
            goto LABEL_32;
          }
          unint64_t v140 = *(void (**)(char *, uint64_t))(v182 + 8);
          uint64_t v141 = v127;
          uint64_t v142 = (char **)&v215;
          goto LABEL_25;
        case 7:
          v214[18] = 7;
          sub_1D7961428();
          uint64_t v150 = v196;
          uint64_t v151 = v169;
          sub_1D7A9D088();
          if (v151) {
            goto LABEL_32;
          }
          unint64_t v140 = *(void (**)(char *, uint64_t))(v183 + 8);
          uint64_t v141 = v150;
          uint64_t v142 = (char **)&v216;
          goto LABEL_25;
        case 8:
          v214[19] = 8;
          sub_1D79613D4();
          char v152 = v197;
          uint64_t v153 = v169;
          sub_1D7A9D088();
          if (v153) {
            goto LABEL_32;
          }
          unint64_t v140 = *(void (**)(char *, uint64_t))(v185 + 8);
          uint64_t v141 = v152;
          uint64_t v142 = (char **)&v217;
          goto LABEL_25;
        case 9:
          v214[20] = 9;
          sub_1D7961380();
          uint64_t v154 = v198;
          uint64_t v155 = v169;
          sub_1D7A9D088();
          if (v155) {
            goto LABEL_32;
          }
          unint64_t v140 = *(void (**)(char *, uint64_t))(v187 + 8);
          uint64_t v141 = v154;
          uint64_t v142 = (char **)&v218;
LABEL_25:
          uint64_t v156 = (uint64_t)*(v142 - 32);
          goto LABEL_36;
        case 10:
          v214[21] = 10;
          sub_1D796132C();
          uint64_t v157 = v199;
          uint64_t v158 = v169;
          sub_1D7A9D088();
          if (v158) {
            goto LABEL_32;
          }
          uint64_t v160 = v189;
          uint64_t v159 = v190;
          goto LABEL_30;
        case 11:
          v214[22] = 11;
          sub_1D79612D8();
          uint64_t v157 = v200;
          uint64_t v161 = v169;
          sub_1D7A9D088();
          if (v161) {
            goto LABEL_32;
          }
          uint64_t v160 = v191;
          uint64_t v159 = v192;
LABEL_30:
          (*(void (**)(char *, uint64_t))(v160 + 8))(v157, v159);
          goto LABEL_37;
        case 12:
          v214[23] = 12;
          sub_1D7961284();
          uint64_t v162 = v201;
          uint64_t v163 = v169;
          sub_1D7A9D088();
          if (v163) {
            goto LABEL_32;
          }
          unint64_t v140 = *(void (**)(char *, uint64_t))(v193 + 8);
          uint64_t v141 = v162;
          uint64_t v156 = v129;
LABEL_36:
          v140(v141, v156);
          goto LABEL_37;
        default:
          char v209 = 0;
          sub_1D7961674();
          unint64_t v132 = v167;
          uint64_t v133 = v169;
          sub_1D7A9D088();
          if (v133)
          {
LABEL_32:
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v208 + 8))(v122, v112);
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v170 + 8))(v132, v166);
LABEL_37:
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v208 + 8))(v122, v112);
            *uint64_t v128 = v131;
          }
          break;
      }
    }
    else
    {
      uint64_t v134 = v112;
      uint64_t v135 = sub_1D7A9CCF8();
      swift_allocError();
      unint64_t v137 = v136;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA843728);
      *unint64_t v137 = &type metadata for DeviceClass;
      sub_1D7A9D098();
      sub_1D7A9CCB8();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v135 - 8) + 104))(v137, *MEMORY[0x1E4FBBA70], v135);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v208 + 8))(v122, v134);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v207);
}

uint64_t sub_1D7962578@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return DeviceClass.init(from:)(a1, a2);
}

uint64_t sub_1D7962590(void *a1)
{
  return DeviceClass.encode(to:)(a1);
}

void DeviceInformationProvider.buildVersion.getter()
{
}

id DeviceInformationProvider.chipID.getter()
{
  return sub_1D796278C(MEMORY[0x1E4FBA0A8]);
}

void DeviceInformationProvider.deviceClass.getter(char *a1@<X8>)
{
  id v2 = (id)MobileGestalt_get_current_device();
  if (v2)
  {
    uint64_t v3 = v2;
    int deviceClassNumber = MobileGestalt_get_deviceClassNumber();

    char v5 = deviceClassNumber - 1;
    if ((deviceClassNumber - 1) >= 0xC) {
      char v5 = 12;
    }
    *a1 = v5;
  }
  else
  {
    __break(1u);
  }
}

BOOL DeviceInformationProvider.isPhone.getter()
{
  DeviceInformationProvider.deviceClass.getter(&v1);
  return v1 == 0;
}

id DeviceInformationProvider.isSimulator.getter()
{
  return sub_1D79626E0(MEMORY[0x1E4FBA0B0]);
}

void DeviceInformationProvider.hardwarePlatform.getter()
{
}

id DeviceInformationProvider.isFaceIDDevice.getter()
{
  return sub_1D79626E0(MEMORY[0x1E4FBA0B8]);
}

id DeviceInformationProvider.isTouchIDDevice.getter()
{
  return sub_1D79626E0(MEMORY[0x1E4FBA0C8]);
}

id DeviceInformationProvider.isSiliconKeyAttestationSupported.getter()
{
  return sub_1D79626E0(MEMORY[0x1E4FBA0C0]);
}

id sub_1D79626E0(uint64_t (*a1)(void))
{
  id result = (id)MobileGestalt_get_current_device();
  if (result)
  {
    uint64_t v3 = result;
    uint64_t v4 = a1();

    return (id)v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void DeviceInformationProvider.productName.getter()
{
}

void DeviceInformationProvider.productType.getter()
{
}

void DeviceInformationProvider.productVersion.getter()
{
}

id DeviceInformationProvider.uniqueChipID.getter()
{
  return sub_1D796278C(MEMORY[0x1E4FBA0D0]);
}

id sub_1D796278C(uint64_t (*a1)(void))
{
  id result = (id)MobileGestalt_get_current_device();
  if (result)
  {
    uint64_t v3 = result;
    uint64_t v4 = a1();

    return (id)v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void DeviceInformationProvider.uniqueDeviceID.getter()
{
}

void DeviceInformationProvider.userAssignedDeviceName.getter()
{
}

void sub_1D7962808(uint64_t (*a1)(void))
{
  id v2 = (id)MobileGestalt_get_current_device();
  if (v2)
  {
    uint64_t v3 = v2;
    id v4 = (id)a1();

    if (v4)
    {
      sub_1D7A9BFC8();

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1D7962884(uint64_t a1, uint64_t a2)
{
}

id sub_1D796289C(uint64_t a1, uint64_t a2)
{
  return sub_1D7962A20(a1, a2, MEMORY[0x1E4FBA0A8]);
}

void sub_1D79628B4(char *a1@<X8>)
{
}

BOOL sub_1D79628CC()
{
  DeviceInformationProvider.deviceClass.getter(&v1);
  return v1 == 0;
}

id sub_1D79628FC(uint64_t a1, uint64_t a2)
{
  return sub_1D7962974(a1, a2, MEMORY[0x1E4FBA0B0]);
}

void sub_1D7962914(uint64_t a1, uint64_t a2)
{
}

id sub_1D796292C(uint64_t a1, uint64_t a2)
{
  return sub_1D7962974(a1, a2, MEMORY[0x1E4FBA0B8]);
}

id sub_1D7962944(uint64_t a1, uint64_t a2)
{
  return sub_1D7962974(a1, a2, MEMORY[0x1E4FBA0C8]);
}

id sub_1D796295C(uint64_t a1, uint64_t a2)
{
  return sub_1D7962974(a1, a2, MEMORY[0x1E4FBA0C0]);
}

id sub_1D7962974(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  id result = (id)MobileGestalt_get_current_device();
  if (result)
  {
    char v5 = result;
    uint64_t v6 = a3();

    return (id)v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1D79629C0(uint64_t a1, uint64_t a2)
{
}

void sub_1D79629D8(uint64_t a1, uint64_t a2)
{
}

void sub_1D79629F0(uint64_t a1, uint64_t a2)
{
}

id sub_1D7962A08(uint64_t a1, uint64_t a2)
{
  return sub_1D7962A20(a1, a2, MEMORY[0x1E4FBA0D0]);
}

id sub_1D7962A20(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  id result = (id)MobileGestalt_get_current_device();
  if (result)
  {
    char v5 = result;
    uint64_t v6 = a3();

    return (id)v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1D7962A6C(uint64_t a1, uint64_t a2)
{
}

void sub_1D7962A84(uint64_t a1, uint64_t a2)
{
}

void sub_1D7962A9C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  id v4 = (id)MobileGestalt_get_current_device();
  if (v4)
  {
    char v5 = v4;
    id v6 = (id)a3();

    if (v6)
    {
      sub_1D7A9BFC8();

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

unint64_t sub_1D7962B1C()
{
  unint64_t result = qword_1EA8451E0;
  if (!qword_1EA8451E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8451E0);
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceClass()
{
  return &type metadata for DeviceClass;
}

uint64_t dispatch thunk of DeviceInformationProviding.buildVersion.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of DeviceInformationProviding.chipID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of DeviceInformationProviding.deviceClass.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of DeviceInformationProviding.isPhone.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of DeviceInformationProviding.isSimulator.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of DeviceInformationProviding.hardwarePlatform.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of DeviceInformationProviding.isFaceIDDevice.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of DeviceInformationProviding.isTouchIDDevice.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of DeviceInformationProviding.isSiliconKeyAttestationSupported.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of DeviceInformationProviding.productName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of DeviceInformationProviding.productType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of DeviceInformationProviding.productVersion.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of DeviceInformationProviding.uniqueChipID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of DeviceInformationProviding.uniqueDeviceID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of DeviceInformationProviding.userAssignedDeviceName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

ValueMetadata *type metadata accessor for DeviceInformationProvider()
{
  return &type metadata for DeviceInformationProvider;
}

uint64_t getEnumTagSinglePayload for VICALCertificateInfo.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF4) {
    goto LABEL_17;
  }
  if (a2 + 12 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 12) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 12;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xD;
  int v8 = v6 - 13;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s13CoreIDVShared11DeviceClassOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *unint64_t result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D7962E20);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 12;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DeviceClass.CodingKeys()
{
  return &type metadata for DeviceClass.CodingKeys;
}

ValueMetadata *type metadata accessor for DeviceClass.IPhoneCodingKeys()
{
  return &type metadata for DeviceClass.IPhoneCodingKeys;
}

ValueMetadata *type metadata accessor for DeviceClass.IPodCodingKeys()
{
  return &type metadata for DeviceClass.IPodCodingKeys;
}

ValueMetadata *type metadata accessor for DeviceClass.IPadCodingKeys()
{
  return &type metadata for DeviceClass.IPadCodingKeys;
}

ValueMetadata *type metadata accessor for DeviceClass.AppleTVCodingKeys()
{
  return &type metadata for DeviceClass.AppleTVCodingKeys;
}

ValueMetadata *type metadata accessor for DeviceClass.IFPGACodingKeys()
{
  return &type metadata for DeviceClass.IFPGACodingKeys;
}

ValueMetadata *type metadata accessor for DeviceClass.WatchCodingKeys()
{
  return &type metadata for DeviceClass.WatchCodingKeys;
}

ValueMetadata *type metadata accessor for DeviceClass.AudioAccessoryCodingKeys()
{
  return &type metadata for DeviceClass.AudioAccessoryCodingKeys;
}

ValueMetadata *type metadata accessor for DeviceClass.BridgeCodingKeys()
{
  return &type metadata for DeviceClass.BridgeCodingKeys;
}

ValueMetadata *type metadata accessor for DeviceClass.MacCodingKeys()
{
  return &type metadata for DeviceClass.MacCodingKeys;
}

ValueMetadata *type metadata accessor for DeviceClass.AppleDisplayCodingKeys()
{
  return &type metadata for DeviceClass.AppleDisplayCodingKeys;
}

ValueMetadata *type metadata accessor for DeviceClass.RealityDeviceCodingKeys()
{
  return &type metadata for DeviceClass.RealityDeviceCodingKeys;
}

ValueMetadata *type metadata accessor for DeviceClass.ComputeModuleCodingKeys()
{
  return &type metadata for DeviceClass.ComputeModuleCodingKeys;
}

ValueMetadata *type metadata accessor for DeviceClass.InvalidCodingKeys()
{
  return &type metadata for DeviceClass.InvalidCodingKeys;
}

unint64_t sub_1D7962F2C()
{
  unint64_t result = qword_1EA8451E8;
  if (!qword_1EA8451E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8451E8);
  }
  return result;
}

unint64_t sub_1D7962F84()
{
  unint64_t result = qword_1EA8451F0;
  if (!qword_1EA8451F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8451F0);
  }
  return result;
}

unint64_t sub_1D7962FDC()
{
  unint64_t result = qword_1EA8451F8;
  if (!qword_1EA8451F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8451F8);
  }
  return result;
}

unint64_t sub_1D7963034()
{
  unint64_t result = qword_1EA845200;
  if (!qword_1EA845200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845200);
  }
  return result;
}

unint64_t sub_1D796308C()
{
  unint64_t result = qword_1EA845208;
  if (!qword_1EA845208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845208);
  }
  return result;
}

unint64_t sub_1D79630E4()
{
  unint64_t result = qword_1EA845210;
  if (!qword_1EA845210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845210);
  }
  return result;
}

unint64_t sub_1D796313C()
{
  unint64_t result = qword_1EA845218;
  if (!qword_1EA845218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845218);
  }
  return result;
}

unint64_t sub_1D7963194()
{
  unint64_t result = qword_1EA845220;
  if (!qword_1EA845220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845220);
  }
  return result;
}

unint64_t sub_1D79631EC()
{
  unint64_t result = qword_1EA845228;
  if (!qword_1EA845228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845228);
  }
  return result;
}

unint64_t sub_1D7963244()
{
  unint64_t result = qword_1EA845230;
  if (!qword_1EA845230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845230);
  }
  return result;
}

unint64_t sub_1D796329C()
{
  unint64_t result = qword_1EA845238;
  if (!qword_1EA845238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845238);
  }
  return result;
}

unint64_t sub_1D79632F4()
{
  unint64_t result = qword_1EA845240;
  if (!qword_1EA845240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845240);
  }
  return result;
}

unint64_t sub_1D796334C()
{
  unint64_t result = qword_1EA845248;
  if (!qword_1EA845248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845248);
  }
  return result;
}

unint64_t sub_1D79633A4()
{
  unint64_t result = qword_1EA845250;
  if (!qword_1EA845250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845250);
  }
  return result;
}

unint64_t sub_1D79633FC()
{
  unint64_t result = qword_1EA845258;
  if (!qword_1EA845258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845258);
  }
  return result;
}

unint64_t sub_1D7963454()
{
  unint64_t result = qword_1EA845260;
  if (!qword_1EA845260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845260);
  }
  return result;
}

unint64_t sub_1D79634AC()
{
  unint64_t result = qword_1EA845268;
  if (!qword_1EA845268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845268);
  }
  return result;
}

unint64_t sub_1D7963504()
{
  unint64_t result = qword_1EA845270;
  if (!qword_1EA845270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845270);
  }
  return result;
}

unint64_t sub_1D796355C()
{
  unint64_t result = qword_1EA845278;
  if (!qword_1EA845278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845278);
  }
  return result;
}

unint64_t sub_1D79635B4()
{
  unint64_t result = qword_1EA845280;
  if (!qword_1EA845280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845280);
  }
  return result;
}

unint64_t sub_1D796360C()
{
  unint64_t result = qword_1EA845288;
  if (!qword_1EA845288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845288);
  }
  return result;
}

unint64_t sub_1D7963664()
{
  unint64_t result = qword_1EA845290;
  if (!qword_1EA845290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845290);
  }
  return result;
}

unint64_t sub_1D79636BC()
{
  unint64_t result = qword_1EA845298;
  if (!qword_1EA845298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845298);
  }
  return result;
}

unint64_t sub_1D7963714()
{
  unint64_t result = qword_1EA8452A0;
  if (!qword_1EA8452A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8452A0);
  }
  return result;
}

unint64_t sub_1D796376C()
{
  unint64_t result = qword_1EA8452A8;
  if (!qword_1EA8452A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8452A8);
  }
  return result;
}

unint64_t sub_1D79637C4()
{
  unint64_t result = qword_1EA8452B0;
  if (!qword_1EA8452B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8452B0);
  }
  return result;
}

unint64_t sub_1D796381C()
{
  unint64_t result = qword_1EA8452B8;
  if (!qword_1EA8452B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8452B8);
  }
  return result;
}

unint64_t sub_1D7963874()
{
  unint64_t result = qword_1EA8452C0;
  if (!qword_1EA8452C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8452C0);
  }
  return result;
}

unint64_t sub_1D79638CC()
{
  unint64_t result = qword_1EA8452C8;
  if (!qword_1EA8452C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8452C8);
  }
  return result;
}

uint64_t sub_1D7963920(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656E6F685069 && a2 == 0xE600000000000000;
  if (v2 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1685016681 && a2 == 0xE400000000000000 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1684099177 && a2 == 0xE400000000000000 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x5654656C707061 && a2 == 0xE700000000000000 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4147504669 && a2 == 0xE500000000000000 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6863746177 && a2 == 0xE500000000000000 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6363416F69647561 && a2 == 0xEE0079726F737365 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x656764697262 && a2 == 0xE600000000000000 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 6513005 && a2 == 0xE300000000000000 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x736944656C707061 && a2 == 0xEC00000079616C70 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x447974696C616572 && a2 == 0xED00006563697665 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x4D657475706D6F63 && a2 == 0xED0000656C75646FLL || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x64696C61766E69 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else
  {
    char v6 = sub_1D7A9D358();
    swift_bridgeObjectRelease();
    if (v6) {
      return 12;
    }
    else {
      return 13;
    }
  }
}

uint64_t DIPSignpost.Config.init(name:log:sendTelemetry:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  *(void *)a6 = a1;
  *(void *)(a6 + 8) = a2;
  *(unsigned char *)(a6 + 16) = a3;
  uint64_t v9 = type metadata accessor for DIPSignpost.Config(0);
  uint64_t v10 = a6 + *(int *)(v9 + 20);
  uint64_t v11 = sub_1D7A9B5F8();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10, a4, v11);
  *(unsigned char *)(a6 + *(int *)(v9 + 24)) = a5;
  return result;
}

uint64_t type metadata accessor for DIPSignpost.Config(uint64_t a1)
{
  return sub_1D786E938(a1, (uint64_t *)&unk_1EBDF9968);
}

uint64_t DIPSignpost.init(_:)@<X0>(const char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1D7A9B548();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v4, v6, v7, v8, v9, v10, v11, v12);
  uint64_t v15 = ((char *)&v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v23 = MEMORY[0x1F4188790](v13, v16, v17, v18, v19, v20, v21, v22);
  uint64_t v78 = (char *)&v71 - v24;
  MEMORY[0x1F4188790](v23, v25, v26, v27, v28, v29, v30, v31);
  uint64_t v33 = ((char *)&v71 - v32);
  uint64_t v34 = sub_1D7A9B5F8();
  uint64_t v35 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34, v36, v37, v38, v39, v40, v41, v42);
  uint64_t v44 = (char *)&v71 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(v43) = *((unsigned __int8 *)a1 + 16);
  long long v73 = *(_OWORD *)a1;
  *(_OWORD *)a2 = v73;
  int v74 = v43;
  *(unsigned char *)(a2 + 16) = v43;
  uint64_t v45 = type metadata accessor for DIPSignpost.Config(0);
  (*(void (**)(char *, const char *, uint64_t))(v35 + 16))(v44, &a1[*(int *)(v45 + 20)], v34);
  uint64_t v46 = type metadata accessor for DIPSignpost(0);
  sub_1D7A9B558();
  uint64_t v76 = a2;
  uint64_t v77 = v46;
  uint64_t v47 = a2 + *(int *)(v46 + 20);
  sub_1D7A9B568();
  sub_1D7A9B528();
  uint64_t v48 = *(int *)(v45 + 24);
  uint64_t v49 = a1;
  LODWORD(v48) = a1[v48];
  uint64_t v75 = v5;
  uint64_t v50 = *(NSObject **)(v5 + 16);
  if (v48 == 1)
  {
    uint64_t v72 = *(NSObject **)(v5 + 16);
    ((void (*)(NSObject *, uint64_t, uint64_t))v50)(v33, v47, v4);
    uint64_t v50 = sub_1D7A9B568();
    os_signpost_type_t v51 = sub_1D7A9C898();
    uint64_t result = sub_1D7A9C988();
    uint64_t v53 = v4;
    if (result)
    {
      uint64_t v71 = a1;
      uint64_t v54 = (const char *)v73;
      if (v74)
      {
        if (!DWORD1(v73))
        {
          uint64_t v55 = v78;
          if (v73 >> 11 == 27)
          {
LABEL_30:
            __break(1u);
            goto LABEL_31;
          }
          if (WORD1(v73) <= 0x10u)
          {
            os_signpost_type_t v56 = v51;
            uint64_t v54 = &v79;
            goto LABEL_16;
          }
          goto LABEL_28;
        }
      }
      else
      {
        uint64_t v55 = v78;
        if ((void)v73)
        {
          os_signpost_type_t v56 = v51;
LABEL_16:
          uint64_t v62 = v72;
          ((void (*)(char *, NSObject *, uint64_t))v72)(v55, v33, v53);
          uint64_t v63 = v53;
          uint64_t v64 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v64 = 0;
          os_signpost_id_t v65 = sub_1D7A9B538();
          _os_signpost_emit_with_name_impl(&dword_1D7853000, v50, v56, v65, v54, "enableTelemetry=YES", v64, 2u);
          uint64_t v66 = v64;
          uint64_t v53 = v63;
          MEMORY[0x1D947D740](v66, -1, -1);

          uint64_t v50 = v62;
LABEL_22:
          uint64_t v61 = v75;
          (*(void (**)(char *, uint64_t))(v75 + 8))(v55, v63);
          uint64_t v60 = v76;
          uint64_t v49 = v71;
          goto LABEL_23;
        }
        __break(1u);
      }
      __break(1u);
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
LABEL_10:

    uint64_t v61 = v75;
    uint64_t v60 = v76;
    ((void (*)(char *, NSObject *, uint64_t))v72)(v78, v33, v53);
LABEL_24:
    sub_1D7A9B5B8();
    swift_allocObject();
    uint64_t v70 = sub_1D7A9B5A8();
    sub_1D7965428((uint64_t)v49);
    uint64_t result = (*(uint64_t (**)(NSObject *, uint64_t))(v61 + 8))(v33, v53);
    *(void *)(v60 + *(int *)(v77 + 28)) = v70;
    return result;
  }
  ((void (*)(NSObject *, uint64_t, uint64_t))v50)(v15, v47, v4);
  uint64_t v33 = sub_1D7A9B568();
  os_signpost_type_t v57 = sub_1D7A9C898();
  uint64_t result = sub_1D7A9C988();
  uint64_t v53 = v4;
  uint64_t v58 = v15;
  if ((result & 1) == 0)
  {

    uint64_t v33 = v15;
    uint64_t v61 = v75;
    uint64_t v60 = v76;
    uint64_t v55 = v78;
LABEL_23:
    ((void (*)(char *, NSObject *, uint64_t))v50)(v55, v33, v53);
    goto LABEL_24;
  }
  uint64_t v71 = v49;
  uint64_t v49 = (const char *)v73;
  if ((v74 & 1) == 0)
  {
    os_signpost_type_t v59 = v57;
    uint64_t v55 = v78;
    if (!(void)v73)
    {
      __break(1u);
      goto LABEL_10;
    }
LABEL_21:
    ((void (*)(char *, NSObject *, uint64_t))v50)(v55, v15, v53);
    uint64_t v63 = v53;
    uint64_t v67 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v67 = 0;
    os_signpost_id_t v68 = sub_1D7A9B538();
    _os_signpost_emit_with_name_impl(&dword_1D7853000, v33, v59, v68, v49, "", v67, 2u);
    uint64_t v69 = v67;
    uint64_t v53 = v63;
    MEMORY[0x1D947D740](v69, -1, -1);

    uint64_t v33 = v58;
    goto LABEL_22;
  }
  if (DWORD1(v73)) {
    goto LABEL_27;
  }
  os_signpost_type_t v59 = v57;
  uint64_t v55 = v78;
  if (v73 >> 11 != 27)
  {
    if (WORD1(v73) > 0x10u)
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    uint64_t v49 = &v80;
    goto LABEL_21;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for DIPSignpost(uint64_t a1)
{
  return sub_1D786E938(a1, qword_1EBDF95D0);
}

Swift::Void __swiftcall DIPSignpost.end(workflowID:isBackground:)(Swift::String_optional workflowID, Swift::Bool_optional isBackground)
{
  int v3 = *(_DWORD *)&isBackground;
  object = (char *)workflowID.value._object;
  uint64_t countAndFlagsBits = workflowID.value._countAndFlagsBits;
  uint64_t v163 = sub_1D7A9B588();
  uint64_t v165 = *(const char **)(v163 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v163, v5, v6, v7, v8, v9, v10, v11);
  uint64_t v14 = (char *)&v157 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x1F4188790](v12, v15, v16, v17, v18, v19, v20, v21);
  uint64_t v24 = (char *)&v157 - v23;
  MEMORY[0x1F4188790](v22, v25, v26, v27, v28, v29, v30, v31);
  uint64_t v33 = (char *)&v157 - v32;
  uint64_t v34 = sub_1D7A9B548();
  uint64_t v35 = *(void *)(v34 - 8);
  uint64_t v169 = v34;
  uint64_t v170 = v35;
  uint64_t v43 = MEMORY[0x1F4188790](v34, v36, v37, v38, v39, v40, v41, v42);
  uint64_t v45 = ((char *)&v157 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v53 = MEMORY[0x1F4188790](v43, v46, v47, v48, v49, v50, v51, v52);
  uint64_t v161 = (char *)&v157 - v54;
  uint64_t v62 = MEMORY[0x1F4188790](v53, v55, v56, v57, v58, v59, v60, v61);
  uint64_t v162 = (char *)&v157 - v63;
  uint64_t v71 = MEMORY[0x1F4188790](v62, v64, v65, v66, v67, v68, v69, v70);
  uint64_t v159 = (char *)&v157 - v72;
  MEMORY[0x1F4188790](v71, v73, v74, v75, v76, v77, v78, v79);
  uint64_t v164 = (char *)&v157 - v80;
  unint64_t v81 = sub_1D7A9B578();
  uint64_t v82 = *(char **)(v81 - 8);
  uint64_t v90 = MEMORY[0x1F4188790](v81, v83, v84, v85, v86, v87, v88, v89);
  uint64_t v92 = (char *)&v157 - ((v91 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = MEMORY[0x1F4188790](v90, v93, v94, v95, v96, v97, v98, v99);
  MEMORY[0x1F4188790](v100, v101, v102, v103, v104, v105, v106, v107);
  uint64_t v166 = object;
  if (!object)
  {
LABEL_7:
    uint64_t v115 = type metadata accessor for DIPSignpost(0);
    (*((void (**)(char *, uint64_t, unint64_t))v82 + 2))(v92, v2 + *(int *)(v115 + 24), v81);
    uint64_t v116 = *(const char **)v2;
    char v117 = *(unsigned char *)(v2 + 16);
    uint64_t v118 = sub_1D7A9B568();
    sub_1D7A9B598();
    LODWORD(v166) = sub_1D7A9C888();
    if (sub_1D7A9C988())
    {
      unint64_t v168 = v81;
      if (v117)
      {
        uint64_t v119 = v163;
        if (!((unint64_t)v116 >> 32))
        {
          uint64_t v120 = v165;
          if (v116 >> 11 == 27)
          {
LABEL_50:
            __break(1u);
            goto LABEL_51;
          }
          if (v116 >> 16 <= 0x10)
          {
            uint64_t v116 = &v175;
            goto LABEL_22;
          }
          goto LABEL_45;
        }
      }
      else
      {
        uint64_t v119 = v163;
        if (v116)
        {
          uint64_t v120 = v165;
LABEL_22:
          swift_retain();
          sub_1D7A9B5C8();
          swift_release();
          int v128 = (*((uint64_t (**)(const char *, uint64_t))v120 + 11))(v14, v119);
          int v129 = *MEMORY[0x1E4FBD340];
          int v167 = v82;
          if (v128 == v129)
          {
            uint64_t v130 = "[Error] Interval already ended";
          }
          else
          {
            (*((void (**)(const char *, uint64_t))v120 + 1))(v14, v119);
            uint64_t v130 = "";
          }
          uint64_t v132 = v169;
          uint64_t v131 = v170;
          uint64_t v133 = v161;
          (*(void (**)(char *, NSObject *, uint64_t))(v170 + 16))(v161, v45, v169);
          uint64_t v134 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v134 = 0;
          os_signpost_id_t v135 = sub_1D7A9B538();
          _os_signpost_emit_with_name_impl(&dword_1D7853000, v118, (os_signpost_type_t)v166, v135, v116, v130, v134, 2u);
          MEMORY[0x1D947D740](v134, -1, -1);

          unint64_t v136 = *(void (**)(NSObject *, uint64_t))(v131 + 8);
          v136(v45, v132);
          (*((void (**)(char *, unint64_t))v167 + 1))(v92, v168);
          v136(v133, v132);
          return;
        }
        __break(1u);
      }
      __break(1u);
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
LABEL_15:

    (*(void (**)(NSObject *, uint64_t))(v170 + 8))(v45, v169);
    (*((void (**)(char *, unint64_t))v82 + 1))(v92, v81);
    return;
  }
  int v167 = v82;
  unint64_t v168 = v81;
  if (v3 == 2)
  {
    uint64_t v110 = v109;
    uint64_t v111 = type metadata accessor for DIPSignpost(0);
    unint64_t v81 = (unint64_t)v167;
    unint64_t v112 = v168;
    (*((void (**)(uint64_t, uint64_t, unint64_t))v167 + 2))(v110, v2 + *(int *)(v111 + 24), v168);
    uint64_t v164 = *(char **)v2;
    char v113 = *(unsigned char *)(v2 + 16);
    uint64_t v92 = *(char **)(v2 + *(int *)(v111 + 28));
    uint64_t v82 = v166;
    swift_bridgeObjectRetain_n();
    uint64_t v45 = sub_1D7A9B568();
    uint64_t v114 = v162;
    sub_1D7A9B598();
    LODWORD(v159) = sub_1D7A9C888();
    if ((sub_1D7A9C988() & 1) == 0)
    {
      swift_bridgeObjectRelease_n();

      (*(void (**)(const char *, uint64_t))(v170 + 8))(v114, v169);
      (*(void (**)(uint64_t, unint64_t))(v81 + 8))(v110, v112);
      return;
    }
    uint64_t v158 = v110;
    if (v113)
    {
      uint64_t v2 = v163;
      uint64_t v14 = v165;
      if ((unint64_t)v164 >> 32)
      {
LABEL_46:
        __break(1u);
        goto LABEL_47;
      }
      if (v164 >> 11 == 27)
      {
LABEL_51:
        __break(1u);
        goto LABEL_52;
      }
      if (v164 >> 16 > 0x10) {
        goto LABEL_48;
      }
      uint64_t v164 = &v174;
    }
    else
    {
      uint64_t v2 = v163;
      uint64_t v14 = v165;
      if (!v164)
      {
        swift_bridgeObjectRelease_n();
        __break(1u);
        goto LABEL_7;
      }
    }
    swift_retain();
    sub_1D7A9B5C8();
    swift_release();
    if ((*((unsigned int (**)(char *, uint64_t))v14 + 11))(v24, v2) == *MEMORY[0x1E4FBD340])
    {
      char v137 = 0;
      char v138 = 0;
      uint64_t v165 = "[Error] Interval already ended";
    }
    else
    {
      (*((void (**)(char *, uint64_t))v14 + 1))(v24, v2);
      uint64_t v165 = "<workflowID>=%{public}s";
      char v138 = 2;
      char v137 = 1;
    }
    uint64_t v141 = v169;
    uint64_t v142 = v170;
    uint64_t v144 = v161;
    uint64_t v143 = v162;
    (*(void (**)(char *, const char *, uint64_t))(v170 + 16))(v161, v162, v169);
    uint64_t v145 = swift_slowAlloc();
    uint64_t v146 = swift_slowAlloc();
    uint64_t v172 = v146;
    *(unsigned char *)uint64_t v145 = v138;
    *(unsigned char *)(v145 + 1) = v137;
    *(_WORD *)(v145 + 2) = 2082;
    unint64_t v147 = (unint64_t)v166;
    swift_bridgeObjectRetain();
    uint64_t v171 = sub_1D7923300(countAndFlagsBits, v147, &v172);
    sub_1D7A9C9E8();
    swift_bridgeObjectRelease_n();
    os_signpost_id_t v148 = sub_1D7A9B538();
    _os_signpost_emit_with_name_impl(&dword_1D7853000, v45, (os_signpost_type_t)v159, v148, v164, v165, (uint8_t *)v145, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D947D740](v146, -1, -1);
    MEMORY[0x1D947D740](v145, -1, -1);

    uint64_t v149 = *(void (**)(const char *, uint64_t))(v142 + 8);
    v149(v143, v141);
    (*((void (**)(uint64_t, unint64_t))v167 + 1))(v158, v168);
    v149(v144, v141);
  }
  else
  {
    LODWORD(v161) = v3;
    uint64_t v82 = (char *)&v157 - v108;
    uint64_t v121 = type metadata accessor for DIPSignpost(0);
    uint64_t v122 = v167;
    unint64_t v123 = v168;
    (*((void (**)(char *, uint64_t, unint64_t))v167 + 2))(v82, v2 + *(int *)(v121 + 24), v168);
    uint64_t v162 = *(const char **)v2;
    uint64_t v92 = (char *)*(unsigned __int8 *)(v2 + 16);
    unint64_t v124 = (unint64_t)v166;
    swift_bridgeObjectRetain_n();
    uint64_t v118 = sub_1D7A9B568();
    uint64_t v45 = v164;
    sub_1D7A9B598();
    LODWORD(v158) = sub_1D7A9C888();
    char v125 = sub_1D7A9C988();
    uint64_t v126 = v165;
    if ((v125 & 1) == 0)
    {
      swift_bridgeObjectRelease_n();

      (*(void (**)(NSObject *, uint64_t))(v170 + 8))(v45, v169);
      (*((void (**)(char *, unint64_t))v122 + 1))(v82, v123);
      return;
    }
    uint64_t v157 = v82;
    if (v92)
    {
      uint64_t v127 = v163;
      if ((unint64_t)v162 >> 32)
      {
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
LABEL_49:
        __break(1u);
        goto LABEL_50;
      }
      if (v162 >> 11 == 27)
      {
LABEL_52:
        __break(1u);
        return;
      }
      if (v162 >> 16 > 0x10) {
        goto LABEL_49;
      }
      unint64_t v81 = v124;
      uint64_t v162 = &v173;
    }
    else
    {
      uint64_t v127 = v163;
      unint64_t v81 = v124;
      if (!v162)
      {
        swift_bridgeObjectRelease_n();
        __break(1u);
        goto LABEL_15;
      }
    }
    int v139 = v161 & 1;
    swift_retain();
    sub_1D7A9B5C8();
    swift_release();
    if ((*((unsigned int (**)(char *, uint64_t))v126 + 11))(v33, v127) == *MEMORY[0x1E4FBD340])
    {
      char v140 = 0;
      uint64_t v165 = "[Error] Interval already ended";
    }
    else
    {
      (*((void (**)(char *, uint64_t))v126 + 1))(v33, v127);
      uint64_t v165 = "<workflowID>=%{public}s <isBackground>=%{BOOL,public}d";
      char v140 = 2;
    }
    uint64_t v151 = v169;
    uint64_t v150 = v170;
    char v152 = v159;
    (*(void (**)(char *, char *, uint64_t))(v170 + 16))(v159, v164, v169);
    uint64_t v153 = swift_slowAlloc();
    uint64_t v154 = swift_slowAlloc();
    uint64_t v172 = v154;
    *(unsigned char *)uint64_t v153 = v140;
    *(unsigned char *)(v153 + 1) = v140;
    *(_WORD *)(v153 + 2) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v171 = sub_1D7923300(countAndFlagsBits, v81, &v172);
    sub_1D7A9C9E8();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v153 + 12) = 1026;
    LODWORD(v171) = v139;
    sub_1D7A9C9E8();
    os_signpost_id_t v155 = sub_1D7A9B538();
    _os_signpost_emit_with_name_impl(&dword_1D7853000, v118, (os_signpost_type_t)v158, v155, v162, v165, (uint8_t *)v153, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x1D947D740](v154, -1, -1);
    MEMORY[0x1D947D740](v153, -1, -1);

    uint64_t v156 = *(void (**)(char *, uint64_t))(v150 + 8);
    v156(v164, v151);
    (*((void (**)(char *, unint64_t))v167 + 1))(v157, v168);
    v156(v152, v151);
  }
}

Swift::Void __swiftcall DIPSignpost.end(fromCache:)(Swift::Bool fromCache)
{
  BOOL v58 = fromCache;
  uint64_t v2 = sub_1D7A9B588();
  uint64_t v56 = *(void *)(v2 - 8);
  uint64_t v57 = v2;
  MEMORY[0x1F4188790](v2, v3, v4, v5, v6, v7, v8, v9);
  uint64_t v60 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1D7A9B548();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v20 = MEMORY[0x1F4188790](v11, v13, v14, v15, v16, v17, v18, v19);
  uint64_t v59 = (char *)&v54 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20, v22, v23, v24, v25, v26, v27, v28);
  uint64_t v30 = (char *)&v54 - v29;
  uint64_t v31 = sub_1D7A9B578();
  uint64_t v32 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31, v33, v34, v35, v36, v37, v38, v39);
  uint64_t v41 = (char *)&v54 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for DIPSignpost(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v41, v1 + *(int *)(v42 + 24), v31);
  uint64_t v61 = *(const char **)v1;
  char v43 = *(unsigned char *)(v1 + 16);
  uint64_t v44 = sub_1D7A9B568();
  sub_1D7A9B598();
  int v55 = sub_1D7A9C888();
  if ((sub_1D7A9C988() & 1) == 0)
  {

    (*(void (**)(char *, uint64_t))(v12 + 8))(v30, v11);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v41, v31);
    return;
  }
  uint64_t v54 = v31;
  if (v43)
  {
    if (!((unint64_t)v61 >> 32))
    {
      if (v61 >> 11 == 27)
      {
LABEL_18:
        __break(1u);
        return;
      }
      uint64_t v45 = v60;
      if (v61 >> 16 <= 0x10)
      {
        uint64_t v61 = &v63;
        goto LABEL_10;
      }
LABEL_17:
      __break(1u);
      goto LABEL_18;
    }
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (!v61)
  {
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v45 = v60;
LABEL_10:
  swift_retain();
  sub_1D7A9B5C8();
  swift_release();
  uint64_t v47 = v56;
  uint64_t v46 = v57;
  if ((*(unsigned int (**)(char *, uint64_t))(v56 + 88))(v45, v57) == *MEMORY[0x1E4FBD340])
  {
    char v48 = 0;
    uint64_t v49 = "[Error] Interval already ended";
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v47 + 8))(v45, v46);
    uint64_t v49 = "<fromCache>=%{BOOL,public}d";
    char v48 = 1;
  }
  uint64_t v50 = v59;
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v59, v30, v11);
  uint64_t v51 = swift_slowAlloc();
  *(unsigned char *)uint64_t v51 = 0;
  *(unsigned char *)(v51 + 1) = v48;
  *(_WORD *)(v51 + 2) = 1026;
  int v62 = v58;
  sub_1D7A9C9E8();
  os_signpost_id_t v52 = sub_1D7A9B538();
  _os_signpost_emit_with_name_impl(&dword_1D7853000, v44, (os_signpost_type_t)v55, v52, v61, v49, (uint8_t *)v51, 8u);
  MEMORY[0x1D947D740](v51, -1, -1);

  uint64_t v53 = *(void (**)(char *, uint64_t))(v12 + 8);
  v53(v30, v11);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v41, v54);
  v53(v50, v11);
}

uint64_t sub_1D7965428(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DIPSignpost.Config(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *initializeBufferWithCopyOfBuffer for DIPSignpost(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    void *v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v7 = a3[5];
    uint64_t v8 = a1 + v7;
    uint64_t v9 = (uint64_t)a2 + v7;
    uint64_t v10 = sub_1D7A9B548();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = a3[6];
    uint64_t v12 = (char *)v4 + v11;
    uint64_t v13 = (uint64_t)a2 + v11;
    uint64_t v14 = sub_1D7A9B578();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    *(void *)((char *)v4 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
  }
  swift_retain();
  return v4;
}

uint64_t destroy for DIPSignpost(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1D7A9B548();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = sub_1D7A9B578();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  return swift_release();
}

uint64_t initializeWithCopy for DIPSignpost(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = a3[5];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1D7A9B548();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_1D7A9B578();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for DIPSignpost(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = a3[5];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1D7A9B548();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_1D7A9B578();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for DIPSignpost(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = a3[5];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1D7A9B548();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_1D7A9B578();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for DIPSignpost(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = a3[5];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1D7A9B548();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_1D7A9B578();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for DIPSignpost(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D7965A58);
}

uint64_t sub_1D7965A58(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1D7A9B548();
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[5];
LABEL_5:
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v11(a1 + v9, a2, v7);
  }
  uint64_t v10 = sub_1D7A9B578();
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[6];
    goto LABEL_5;
  }
  unint64_t v13 = *(void *)(a1 + a3[7]);
  if (v13 >= 0xFFFFFFFF) {
    LODWORD(v13) = -1;
  }
  return (v13 + 1);
}

uint64_t storeEnumTagSinglePayload for DIPSignpost(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D7965B7C);
}

uint64_t sub_1D7965B7C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_1D7A9B548();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
  }
  else
  {
    uint64_t result = sub_1D7A9B578();
    if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
    {
      *(void *)(a1 + a4[7]) = (a2 - 1);
      return result;
    }
    uint64_t v9 = result;
    uint64_t v10 = *(void *)(result - 8);
    uint64_t v11 = a4[6];
  }
  unint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
  return v13(a1 + v11, a2, a2, v9);
}

uint64_t sub_1D7965C88()
{
  uint64_t result = sub_1D7A9B548();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1D7A9B578();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for DIPSignpost.Config(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    void *v4 = *a2;
    uint64_t v4 = (void *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = a1 + v7;
    uint64_t v9 = (uint64_t)a2 + v7;
    uint64_t v10 = sub_1D7A9B5F8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    *((unsigned char *)v4 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  }
  return v4;
}

uint64_t destroy for DIPSignpost.Config(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_1D7A9B5F8();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  return v4(v2, v3);
}

uint64_t initializeWithCopy for DIPSignpost.Config(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1D7A9B5F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithCopy for DIPSignpost.Config(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1D7A9B5F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t initializeWithTake for DIPSignpost.Config(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1D7A9B5F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithTake for DIPSignpost.Config(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1D7A9B5F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for DIPSignpost.Config(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D796615C);
}

uint64_t sub_1D796615C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D7A9B5F8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unsigned int v12 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
    if (v12 >= 2) {
      return ((v12 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for DIPSignpost.Config(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D7966244);
}

uint64_t sub_1D7966244(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1D7A9B5F8();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unsigned int v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 24)) = a2 + 1;
  }
  return result;
}

uint64_t sub_1D7966304()
{
  uint64_t result = sub_1D7A9B5F8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

CoreIDVShared::ISO18013SessionData::Status_optional __swiftcall ISO18013SessionData.Status.init(rawValue:)(Swift::UInt rawValue)
{
  if (rawValue == 20) {
    char v2 = 2;
  }
  else {
    char v2 = 3;
  }
  if (rawValue == 11) {
    char v3 = 1;
  }
  else {
    char v3 = v2;
  }
  if (rawValue == 10) {
    char v3 = 0;
  }
  char *v1 = v3;
  return (CoreIDVShared::ISO18013SessionData::Status_optional)rawValue;
}

uint64_t ISO18013SessionData.Status.rawValue.getter()
{
  return qword_1D7AB1790[*v0];
}

BOOL sub_1D79663E4(char *a1, char *a2)
{
  return qword_1D7AB1790[*a1] == qword_1D7AB1790[*a2];
}

uint64_t sub_1D7966408()
{
  return sub_1D7A9D628();
}

uint64_t sub_1D7966458()
{
  return sub_1D7A9D5E8();
}

uint64_t sub_1D7966490()
{
  return sub_1D7A9D628();
}

CoreIDVShared::ISO18013SessionData::Status_optional sub_1D79664DC(Swift::UInt *a1)
{
  return ISO18013SessionData.Status.init(rawValue:)(*a1);
}

void sub_1D79664E4(void *a1@<X8>)
{
  *a1 = qword_1D7AB1790[*v1];
}

uint64_t sub_1D79664FC()
{
  return sub_1D7A9C2D8();
}

uint64_t sub_1D796655C()
{
  return sub_1D7A9C278();
}

uint64_t ISO18013SessionData.data.getter()
{
  uint64_t v1 = *(void *)v0;
  sub_1D786E9D8(*(void *)v0, *(void *)(v0 + 8));
  return v1;
}

void ISO18013SessionData.status.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

uint64_t ISO18013SessionData.init(data:status:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  char v4 = *a3;
  *(void *)a4 = result;
  *(void *)(a4 + 8) = a2;
  *(unsigned char *)(a4 + 16) = v4;
  return result;
}

uint64_t sub_1D79665FC()
{
  if (*v0) {
    return 0x737574617473;
  }
  else {
    return 1635017060;
  }
}

uint64_t sub_1D796662C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1D7967150(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D7966654(uint64_t a1)
{
  unint64_t v2 = sub_1D7966868();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D7966690(uint64_t a1)
{
  unint64_t v2 = sub_1D7966868();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ISO18013SessionData.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8452D0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3, v5, v6, v7, v8, v9, v10, v11);
  unint64_t v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *v1;
  uint64_t v14 = v1[1];
  int v21 = *((unsigned __int8 *)v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D7966868();
  sub_1D7A9D6E8();
  uint64_t v19 = v15;
  uint64_t v20 = v14;
  char v22 = 0;
  sub_1D7871AD8();
  uint64_t v16 = v18[1];
  sub_1D7A9D1C8();
  if (!v16)
  {
    LOBYTE(v19) = v21;
    char v22 = 1;
    sub_1D79668BC();
    sub_1D7A9D1C8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v13, v3);
}

unint64_t sub_1D7966868()
{
  unint64_t result = qword_1EA8452D8;
  if (!qword_1EA8452D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8452D8);
  }
  return result;
}

unint64_t sub_1D79668BC()
{
  unint64_t result = qword_1EA8452E0;
  if (!qword_1EA8452E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8452E0);
  }
  return result;
}

uint64_t ISO18013SessionData.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8452E8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7, v8, v9, v10, v11, v12, v13);
  uint64_t v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D7966868();
  sub_1D7A9D6A8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  char v22 = 0;
  sub_1D786073C();
  sub_1D7A9D0E8();
  uint64_t v16 = v20;
  unint64_t v17 = v21;
  char v22 = 1;
  sub_1D786E9D8(v20, v21);
  sub_1D7966B14();
  sub_1D7A9D0E8();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
  char v18 = v20;
  *(void *)a2 = v16;
  *(void *)(a2 + 8) = v17;
  *(unsigned char *)(a2 + 16) = v18;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_1D7871BDC(v16, v17);
}

unint64_t sub_1D7966B14()
{
  unint64_t result = qword_1EA8452F0;
  if (!qword_1EA8452F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8452F0);
  }
  return result;
}

unint64_t sub_1D7966B6C()
{
  unint64_t result = qword_1EA8452F8;
  if (!qword_1EA8452F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8452F8);
  }
  return result;
}

uint64_t sub_1D7966BC0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ISO18013SessionData.init(from:)(a1, a2);
}

uint64_t sub_1D7966BD8(void *a1)
{
  return ISO18013SessionData.encode(to:)(a1);
}

uint64_t *destroy for ISO18013SessionData(uint64_t *result)
{
  unint64_t v1 = result[1];
  if (v1 >> 60 != 15) {
    return (uint64_t *)sub_1D78607E8(*result, v1);
  }
  return result;
}

uint64_t _s13CoreIDVShared19ISO18013SessionDataVwCP_0(uint64_t a1, uint64_t *a2)
{
  unint64_t v4 = a2[1];
  if (v4 >> 60 == 15)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    uint64_t v5 = *a2;
    sub_1D7860790(*a2, a2[1]);
    *(void *)a1 = v5;
    *(void *)(a1 + 8) = v4;
  }
  *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
  return a1;
}

uint64_t assignWithCopy for ISO18013SessionData(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a2 + 8);
  if (*(void *)(a1 + 8) >> 60 != 15)
  {
    if (v4 >> 60 != 15)
    {
      uint64_t v6 = *(void *)a2;
      sub_1D7860790(*(void *)a2, *(void *)(a2 + 8));
      uint64_t v7 = *(void *)a1;
      unint64_t v8 = *(void *)(a1 + 8);
      *(void *)a1 = v6;
      *(void *)(a1 + 8) = v4;
      sub_1D78607E8(v7, v8);
      goto LABEL_8;
    }
    sub_1D7870C24(a1);
    goto LABEL_6;
  }
  if (v4 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  uint64_t v5 = *(void *)a2;
  sub_1D7860790(*(void *)a2, *(void *)(a2 + 8));
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
LABEL_8:
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for ISO18013SessionData(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 8);
  if (v4 >> 60 != 15)
  {
    unint64_t v5 = *(void *)(a2 + 8);
    if (v5 >> 60 != 15)
    {
      uint64_t v6 = *(void *)a1;
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v5;
      sub_1D78607E8(v6, v4);
      goto LABEL_6;
    }
    sub_1D7870C24(a1);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_6:
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for ISO18013SessionData(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 253);
  }
  if (*(unsigned __int8 *)(a1 + 16) <= 3u) {
    int v3 = 3;
  }
  else {
    int v3 = *(unsigned __int8 *)(a1 + 16);
  }
  int v4 = v3 - 4;
  if (*(unsigned __int8 *)(a1 + 16) < 3u) {
    int v5 = -1;
  }
  else {
    int v5 = v4;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ISO18013SessionData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 253;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = a2 + 3;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ISO18013SessionData()
{
  return &type metadata for ISO18013SessionData;
}

unsigned char *storeEnumTagSinglePayload for ISO18013SessionData.Status(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D7966F0CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ISO18013SessionData.Status()
{
  return &type metadata for ISO18013SessionData.Status;
}

unsigned char *storeEnumTagSinglePayload for ISO18013SessionData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D7967010);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ISO18013SessionData.CodingKeys()
{
  return &type metadata for ISO18013SessionData.CodingKeys;
}

unint64_t sub_1D796704C()
{
  unint64_t result = qword_1EA845300;
  if (!qword_1EA845300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845300);
  }
  return result;
}

unint64_t sub_1D79670A4()
{
  unint64_t result = qword_1EA845308;
  if (!qword_1EA845308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845308);
  }
  return result;
}

unint64_t sub_1D79670FC()
{
  unint64_t result = qword_1EA845310;
  if (!qword_1EA845310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845310);
  }
  return result;
}

uint64_t sub_1D7967150(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1635017060 && a2 == 0xE400000000000000;
  if (v2 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x737574617473 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1D7A9D358();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_1D796722C()
{
  unint64_t result = qword_1EA845318;
  if (!qword_1EA845318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845318);
  }
  return result;
}

void static DeviceMigrationMilestone.accountKAKCreated.getter(void *a1@<X8>)
{
  *a1 = 0x6230303661636235;
  a1[1] = 0xE800000000000000;
  a1[2] = 0xD00000000000001FLL;
  a1[3] = 0x80000001D7AC53C0;
}

void static DeviceMigrationMilestone.accountKAKRetrieved.getter(void *a1@<X8>)
{
  *a1 = 0x6265623464636264;
  a1[1] = 0xE800000000000000;
  a1[2] = 0xD000000000000021;
  a1[3] = 0x80000001D7AC53E0;
}

ValueMetadata *type metadata accessor for DeviceMigrationMilestone()
{
  return &type metadata for DeviceMigrationMilestone;
}

uint64_t sub_1D7967300()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3] >> 1;
  uint64_t result = v2 - v1;
  if (__OFSUB__(v2, v1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v4 = v0[1];
    uint64_t result = sub_1D7A9D5E8();
    BOOL v5 = __OFSUB__(v2, v1);
    uint64_t v6 = v2 - v1;
    if (!v6) {
      return sub_1D7A9D5E8();
    }
    if (!((v6 < 0) ^ v5 | (v6 == 0)))
    {
      uint64_t v7 = v4 + v1;
      do
      {
        ++v7;
        sub_1D7A9D5F8();
        --v6;
      }
      while (v6);
      return sub_1D7A9D5E8();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1D796737C()
{
  sub_1D7A9D5D8();
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3] >> 1;
  uint64_t result = v2 - v1;
  if (__OFSUB__(v2, v1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v4 = v0[1];
    uint64_t result = sub_1D7A9D5E8();
    BOOL v5 = __OFSUB__(v2, v1);
    uint64_t v6 = v2 - v1;
    if (!v6)
    {
LABEL_6:
      sub_1D7A9D5E8();
      return sub_1D7A9D628();
    }
    if (!((v6 < 0) ^ v5 | (v6 == 0)))
    {
      uint64_t v7 = v4 + v1;
      do
      {
        ++v7;
        sub_1D7A9D5F8();
        --v6;
      }
      while (v6);
      goto LABEL_6;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1D7967424()
{
  uint64_t v1 = v0[1];
  uint64_t v2 = v0[2];
  unint64_t v3 = v0[3];
  sub_1D7A9D5D8();
  unint64_t v4 = v3 >> 1;
  uint64_t result = v4 - v2;
  if (__OFSUB__(v4, v2))
  {
    __break(1u);
  }
  else
  {
    uint64_t result = sub_1D7A9D5E8();
    BOOL v6 = __OFSUB__(v4, v2);
    uint64_t v7 = v4 - v2;
    if (!v7)
    {
LABEL_6:
      sub_1D7A9D5E8();
      return sub_1D7A9D628();
    }
    if (!((v7 < 0) ^ v6 | (v7 == 0)))
    {
      uint64_t v8 = v1 + v2;
      do
      {
        ++v8;
        sub_1D7A9D5F8();
        --v7;
      }
      while (v7);
      goto LABEL_6;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1D79674BC(void *a1, void *a2)
{
  uint64_t v2 = a1[4];
  uint64_t v3 = a2[4];
  return sub_1D7932AA4(a1[1], a1[2], a1[3], a2[1], a2[2], a2[3]) & (v2 == v3);
}

unint64_t sub_1D7967504()
{
  unint64_t result = qword_1EA845320;
  if (!qword_1EA845320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845320);
  }
  return result;
}

uint64_t initializeWithCopy for ASN1BitString(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_unknownObjectRetain();
  return a1;
}

void *assignWithCopy for ASN1BitString(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  return a1;
}

uint64_t assignWithTake for ASN1BitString(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectRelease();
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for ASN1BitString()
{
  return &type metadata for ASN1BitString;
}

void static ServerEnvironment.current(suiteNameOverride:)(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  if (!a2 || a1 == 0xD00000000000001ALL && a2 == 0x80000001D7ABFB80 || (sub_1D7A9D358() & 1) != 0)
  {
    id v4 = objc_msgSend(self, sel_mainBundle);
    id v5 = objc_msgSend(v4, sel_bundleIdentifier);

    if (v5)
    {
      uint64_t v6 = sub_1D7A9BFC8();
      uint64_t v8 = v7;

      if (v6 == 0xD00000000000001ALL && v8 == 0x80000001D7ABFB80)
      {
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
      char v9 = sub_1D7A9D358();
      swift_bridgeObjectRelease();
      if (v9)
      {
LABEL_10:
        id v10 = objc_msgSend(self, sel_standardUserDefaults);
        id v18 = v10;
        if (!v10) {
          goto LABEL_17;
        }
        goto LABEL_15;
      }
    }
    id v11 = objc_allocWithZone(MEMORY[0x1E4F1CB18]);
    uint64_t v12 = (void *)sub_1D7A9BF98();
    id v13 = objc_msgSend(v11, sel_initWithSuiteName_, v12);
  }
  else
  {
    id v14 = objc_allocWithZone(MEMORY[0x1E4F1CB18]);
    swift_bridgeObjectRetain();
    uint64_t v12 = (void *)sub_1D7A9BF98();
    swift_bridgeObjectRelease();
    id v13 = objc_msgSend(v14, sel_initWithSuiteName_, v12);
  }
  id v18 = v13;

  id v10 = v18;
  if (!v18) {
    goto LABEL_17;
  }
LABEL_15:
  id v15 = v10;
  uint64_t v16 = (void *)sub_1D7A9BF98();
  id v17 = objc_msgSend(v15, sel_stringForKey_, v16);

  if (v17)
  {
    sub_1D7A9BFC8();
  }
LABEL_17:
  sub_1D7967960(a3);
}

BOOL static ServerEnvironment.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ServerEnvironment.hash(into:)()
{
  return sub_1D7A9D5E8();
}

uint64_t ServerEnvironment.hashValue.getter()
{
  return sub_1D7A9D628();
}

uint64_t sub_1D7967960@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_1D7A9C068();
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  if (v2 == 1146049104 && v4 == 0xE400000000000000 || (sub_1D7A9D358() & 1) != 0)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v6 = 0;
  }
  else if (v2 == 1414677827 && v4 == 0xE400000000000000 || (sub_1D7A9D358() & 1) != 0)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v6 = 1;
  }
  else
  {
    char v7 = sub_1D7A9C1B8();
    uint64_t result = swift_bridgeObjectRelease();
    if (v7) {
      char v6 = 2;
    }
    else {
      char v6 = 0;
    }
  }
  *a1 = v6;
  return result;
}

unint64_t sub_1D7967A8C()
{
  unint64_t result = qword_1EA845328;
  if (!qword_1EA845328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845328);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ServerEnvironment(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D7967BACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ServerEnvironment()
{
  return &type metadata for ServerEnvironment;
}

uint64_t IdentityProofingDisplayMessage.title.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t IdentityProofingDisplayMessage.messages.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t IdentityProofingDisplayMessage.primaryButtonTitle.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t IdentityProofingDisplayMessage.secondaryButtonTitle.getter()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t IdentityProofingDisplayMessage.url.getter()
{
  uint64_t v1 = *(void *)(v0 + 72);
  swift_bridgeObjectRetain();
  return v1;
}

void *IdentityProofingDisplayMessage.__allocating_init(title:messages:primaryButtonTitle:secondaryButtonTitle:url:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  unint64_t result = (void *)swift_allocObject();
  result[2] = a1;
  result[3] = a2;
  result[4] = a3;
  result[5] = a4;
  result[6] = a5;
  result[7] = a6;
  result[8] = a7;
  result[9] = a8;
  result[10] = a9;
  return result;
}

void *IdentityProofingDisplayMessage.init(title:messages:primaryButtonTitle:secondaryButtonTitle:url:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9[2] = a1;
  v9[3] = a2;
  v9[4] = a3;
  v9[5] = a4;
  v9[6] = a5;
  v9[7] = a6;
  v9[8] = a7;
  v9[9] = a8;
  v9[10] = a9;
  return v9;
}

unint64_t sub_1D7967D50(char a1)
{
  unint64_t result = 0x656C746974;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x736567617373656DLL;
      break;
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    case 4:
      unint64_t result = 7107189;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1D7967E00()
{
  return sub_1D7967D50(*v0);
}

uint64_t sub_1D7967E08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1D796887C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D7967E30(uint64_t a1)
{
  unint64_t v2 = sub_1D7968160();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D7967E6C(uint64_t a1)
{
  unint64_t v2 = sub_1D7968160();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t IdentityProofingDisplayMessage.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t IdentityProofingDisplayMessage.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1D7967F40(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845330);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7, v8, v9, v10, v11, v12, v13);
  id v15 = &v17[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D7968160();
  sub_1D7A9D6E8();
  char v19 = 0;
  sub_1D7A9D1D8();
  if (!v2)
  {
    uint64_t v18 = *(void *)(v3 + 32);
    v17[15] = 1;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDF7900);
    sub_1D7919C34(&qword_1EBDF8230);
    sub_1D7A9D228();
    v17[14] = 2;
    sub_1D7A9D1D8();
    v17[13] = 3;
    sub_1D7A9D188();
    v17[12] = 4;
    sub_1D7A9D188();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v15, v5);
}

unint64_t sub_1D7968160()
{
  unint64_t result = qword_1EA845338;
  if (!qword_1EA845338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845338);
  }
  return result;
}

uint64_t IdentityProofingDisplayMessage.__allocating_init(from:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  IdentityProofingDisplayMessage.init(from:)(a1);
  return v2;
}

void *IdentityProofingDisplayMessage.init(from:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845340);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7, v8, v9, v10, v11, v12, v13);
  id v15 = (char *)v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D7968160();
  sub_1D7A9D6A8();
  if (v2)
  {
    type metadata accessor for IdentityProofingDisplayMessage();
    swift_deallocPartialClassInstance();
  }
  else
  {
    char v28 = 0;
    v1[2] = sub_1D7A9D0F8();
    v1[3] = v16;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDF7900);
    char v27 = 1;
    sub_1D7919C34(&qword_1EBDF7A30);
    sub_1D7A9D148();
    v1[4] = v23[1];
    char v26 = 2;
    v1[5] = sub_1D7A9D0F8();
    v1[6] = v17;
    char v25 = 3;
    v1[7] = sub_1D7A9D0A8();
    v1[8] = v18;
    char v24 = 4;
    uint64_t v20 = sub_1D7A9D0A8();
    uint64_t v22 = v21;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);
    v3[9] = v20;
    v3[10] = v22;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v3;
}

uint64_t type metadata accessor for IdentityProofingDisplayMessage()
{
  return self;
}

void *sub_1D7968560@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for IdentityProofingDisplayMessage();
  uint64_t v5 = swift_allocObject();
  unint64_t result = IdentityProofingDisplayMessage.init(from:)(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_1D79685B8(void *a1)
{
  return sub_1D7967F40(a1);
}

uint64_t method lookup function for IdentityProofingDisplayMessage(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for IdentityProofingDisplayMessage);
}

uint64_t dispatch thunk of IdentityProofingDisplayMessage.__allocating_init(title:messages:primaryButtonTitle:secondaryButtonTitle:url:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of IdentityProofingDisplayMessage.encode(to:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of IdentityProofingDisplayMessage.__allocating_init(from:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

unsigned char *storeEnumTagSinglePayload for IdentityProofingDisplayMessage.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D796873CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IdentityProofingDisplayMessage.CodingKeys()
{
  return &type metadata for IdentityProofingDisplayMessage.CodingKeys;
}

unint64_t sub_1D7968778()
{
  unint64_t result = qword_1EA845348;
  if (!qword_1EA845348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845348);
  }
  return result;
}

unint64_t sub_1D79687D0()
{
  unint64_t result = qword_1EA845350;
  if (!qword_1EA845350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845350);
  }
  return result;
}

unint64_t sub_1D7968828()
{
  unint64_t result = qword_1EA845358;
  if (!qword_1EA845358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845358);
  }
  return result;
}

uint64_t sub_1D796887C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736567617373656DLL && a2 == 0xE800000000000000 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001D7AC24F0 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001D7AC2510 || (sub_1D7A9D358() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1D7A9D358();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

double AnyCodable.init(value:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(unsigned char *)a3 = 2;
  *(void *)(a3 + 8) = 0;
  *(unsigned char *)(a3 + 16) = 1;
  *(void *)(a3 + 24) = 0;
  *(unsigned char *)(a3 + 32) = 1;
  *(_DWORD *)(a3 + 36) = 0;
  *(unsigned char *)(a3 + 40) = 1;
  *(void *)(a3 + 48) = 0;
  *(unsigned char *)(a3 + 56) = 1;
  char v6 = (int *)type metadata accessor for AnyCodable();
  uint64_t v7 = a3 + v6[9];
  uint64_t v8 = sub_1D7A9B148();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  uint64_t v9 = (void *)(a3 + v6[10]);
  *uint64_t v9 = a1;
  v9[1] = a2;
  *(void *)(a3 + v6[11]) = 0;
  *(void *)(a3 + v6[12]) = 0;
  *(void *)(a3 + v6[13]) = 0;
  double result = 0.0;
  *(_OWORD *)(a3 + v6[14]) = xmmword_1D7AA0AC0;
  return result;
}

uint64_t type metadata accessor for AnyCodable()
{
  uint64_t result = qword_1EA845428;
  if (!qword_1EA845428) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t AnyCodable.init(value:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(unsigned char *)a3 = 2;
  *(void *)(a3 + 8) = 0;
  *(unsigned char *)(a3 + 16) = 1;
  *(void *)(a3 + 24) = 0;
  *(unsigned char *)(a3 + 32) = 1;
  *(_DWORD *)(a3 + 36) = 0;
  *(unsigned char *)(a3 + 40) = 1;
  *(void *)(a3 + 48) = 0;
  *(unsigned char *)(a3 + 56) = 1;
  char v6 = (int *)type metadata accessor for AnyCodable();
  uint64_t v7 = a3 + v6[9];
  uint64_t v8 = sub_1D7A9B148();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  uint64_t v10 = (void *)(a3 + v6[10]);
  *uint64_t v10 = 0;
  v10[1] = 0;
  *(void *)(a3 + v6[11]) = 0;
  *(void *)(a3 + v6[12]) = 0;
  *(void *)(a3 + v6[13]) = 0;
  uint64_t v11 = (void *)(a3 + v6[14]);
  *uint64_t v11 = a1;
  v11[1] = a2;
  return result;
}

double AnyCodable.init(value:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(unsigned char *)a2 = 2;
  *(void *)(a2 + 8) = a1;
  *(unsigned char *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = 0;
  *(unsigned char *)(a2 + 32) = 1;
  *(_DWORD *)(a2 + 36) = 0;
  *(unsigned char *)(a2 + 40) = 1;
  *(void *)(a2 + 48) = 0;
  *(unsigned char *)(a2 + 56) = 1;
  int v3 = (int *)type metadata accessor for AnyCodable();
  uint64_t v4 = a2 + v3[9];
  uint64_t v5 = sub_1D7A9B148();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  char v6 = (void *)(a2 + v3[10]);
  *char v6 = 0;
  v6[1] = 0;
  *(void *)(a2 + v3[11]) = 0;
  *(void *)(a2 + v3[12]) = 0;
  *(void *)(a2 + v3[13]) = 0;
  double result = 0.0;
  *(_OWORD *)(a2 + v3[14]) = xmmword_1D7AA0AC0;
  return result;
}

{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  double result;

  *(unsigned char *)a2 = 2;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
  *(void *)(a2 + 24) = 0;
  *(unsigned char *)(a2 + 32) = 1;
  *(_DWORD *)(a2 + 36) = 0;
  *(unsigned char *)(a2 + 40) = 1;
  *(void *)(a2 + 48) = 0;
  *(unsigned char *)(a2 + 56) = 1;
  uint64_t v4 = (int *)type metadata accessor for AnyCodable();
  uint64_t v5 = a2 + v4[9];
  char v6 = sub_1D7A9B148();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v5, a1, v6);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  uint64_t v8 = (void *)(a2 + v4[10]);
  *uint64_t v8 = 0;
  v8[1] = 0;
  *(void *)(a2 + v4[11]) = 0;
  *(void *)(a2 + v4[12]) = 0;
  *(void *)(a2 + v4[13]) = 0;
  double result = 0.0;
  *(_OWORD *)(a2 + v4[14]) = xmmword_1D7AA0AC0;
  return result;
}

{
  int *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  double result;

  *(unsigned char *)a2 = 2;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
  *(void *)(a2 + 24) = a1;
  *(unsigned char *)(a2 + 32) = 0;
  *(_DWORD *)(a2 + 36) = 0;
  *(unsigned char *)(a2 + 40) = 1;
  *(void *)(a2 + 48) = 0;
  *(unsigned char *)(a2 + 56) = 1;
  int v3 = (int *)type metadata accessor for AnyCodable();
  uint64_t v4 = a2 + v3[9];
  uint64_t v5 = sub_1D7A9B148();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  char v6 = (void *)(a2 + v3[10]);
  *char v6 = 0;
  v6[1] = 0;
  *(void *)(a2 + v3[11]) = 0;
  *(void *)(a2 + v3[12]) = 0;
  *(void *)(a2 + v3[13]) = 0;
  double result = 0.0;
  *(_OWORD *)(a2 + v3[14]) = xmmword_1D7AA0AC0;
  return result;
}

double AnyCodable.init(value:)@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  *(unsigned char *)a2 = 2;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
  *(void *)(a2 + 24) = 0;
  *(unsigned char *)(a2 + 32) = 1;
  *(_DWORD *)(a2 + 36) = 0;
  *(unsigned char *)(a2 + 40) = 1;
  *(void *)(a2 + 48) = 0;
  *(unsigned char *)(a2 + 56) = 1;
  uint64_t v4 = (int *)type metadata accessor for AnyCodable();
  uint64_t v5 = a2 + v4[9];
  uint64_t v6 = sub_1D7A9B148();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  uint64_t v7 = (void *)(a2 + v4[10]);
  *uint64_t v7 = 0;
  v7[1] = 0;
  *(void *)(a2 + v4[11]) = 0;
  *(void *)(a2 + v4[12]) = v3;
  *(void *)(a2 + v4[13]) = 0;
  double result = 0.0;
  *(_OWORD *)(a2 + v4[14]) = xmmword_1D7AA0AC0;
  return result;
}

{
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  double result;

  uint64_t v3 = *a1;
  *(unsigned char *)a2 = 2;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
  *(void *)(a2 + 24) = 0;
  *(unsigned char *)(a2 + 32) = 1;
  *(_DWORD *)(a2 + 36) = 0;
  *(unsigned char *)(a2 + 40) = 1;
  *(void *)(a2 + 48) = 0;
  *(unsigned char *)(a2 + 56) = 1;
  uint64_t v4 = (int *)type metadata accessor for AnyCodable();
  uint64_t v5 = a2 + v4[9];
  uint64_t v6 = sub_1D7A9B148();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  uint64_t v7 = (void *)(a2 + v4[10]);
  *uint64_t v7 = 0;
  v7[1] = 0;
  *(void *)(a2 + v4[11]) = v3;
  *(void *)(a2 + v4[12]) = 0;
  *(void *)(a2 + v4[13]) = 0;
  double result = 0.0;
  *(_OWORD *)(a2 + v4[14]) = xmmword_1D7AA0AC0;
  return result;
}

{
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  double result;

  uint64_t v3 = *a1;
  *(unsigned char *)a2 = 2;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
  *(void *)(a2 + 24) = 0;
  *(unsigned char *)(a2 + 32) = 1;
  *(_DWORD *)(a2 + 36) = 0;
  *(unsigned char *)(a2 + 40) = 1;
  *(void *)(a2 + 48) = 0;
  *(unsigned char *)(a2 + 56) = 1;
  uint64_t v4 = (int *)type metadata accessor for AnyCodable();
  uint64_t v5 = a2 + v4[9];
  uint64_t v6 = sub_1D7A9B148();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  uint64_t v7 = (void *)(a2 + v4[10]);
  *uint64_t v7 = 0;
  v7[1] = 0;
  *(void *)(a2 + v4[11]) = 0;
  *(void *)(a2 + v4[12]) = 0;
  *(void *)(a2 + v4[13]) = v3;
  double result = 0.0;
  *(_OWORD *)(a2 + v4[14]) = xmmword_1D7AA0AC0;
  return result;
}

CoreIDVShared::AnyCodableArray __swiftcall AnyCodableArray.init(value:)(CoreIDVShared::AnyCodableArray value)
{
  v1->value._rawValue = value.value._rawValue;
  return value;
}

double AnyCodable.init(value:)@<D0>(char a1@<W0>, uint64_t a2@<X8>)
{
  *(unsigned char *)a2 = a1;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
  *(void *)(a2 + 24) = 0;
  *(unsigned char *)(a2 + 32) = 1;
  *(_DWORD *)(a2 + 36) = 0;
  *(unsigned char *)(a2 + 40) = 1;
  *(void *)(a2 + 48) = 0;
  *(unsigned char *)(a2 + 56) = 1;
  uint64_t v3 = (int *)type metadata accessor for AnyCodable();
  uint64_t v4 = a2 + v3[9];
  uint64_t v5 = sub_1D7A9B148();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  uint64_t v6 = (void *)(a2 + v3[10]);
  *uint64_t v6 = 0;
  v6[1] = 0;
  *(void *)(a2 + v3[11]) = 0;
  *(void *)(a2 + v3[12]) = 0;
  *(void *)(a2 + v3[13]) = 0;
  double result = 0.0;
  *(_OWORD *)(a2 + v3[14]) = xmmword_1D7AA0AC0;
  return result;
}

uint64_t AnyCodable.BOOLValue.getter()
{
  return *v0;
}

uint64_t AnyCodable.intValue.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t AnyCodable.uintValue.getter()
{
  return *(void *)(v0 + 24);
}

unint64_t AnyCodable.floatValue.getter()
{
  return *(unsigned int *)(v0 + 36) | ((unint64_t)*(unsigned __int8 *)(v0 + 40) << 32);
}

uint64_t AnyCodable.doubleValue.getter()
{
  return *(void *)(v0 + 48);
}

uint64_t AnyCodable.dateValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for AnyCodable();
  return sub_1D78614F8(v1 + *(int *)(v3 + 36), a1, &qword_1EBDF9118);
}

uint64_t AnyCodable.stringValue.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for AnyCodable() + 40));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AnyCodable.arrayValue.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + *(int *)(type metadata accessor for AnyCodable() + 44));
  return swift_bridgeObjectRetain();
}

uint64_t AnyCodable.dictValue.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + *(int *)(type metadata accessor for AnyCodable() + 48));
  return swift_bridgeObjectRetain();
}

uint64_t AnyCodable.integerKeyedDictValue.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + *(int *)(type metadata accessor for AnyCodable() + 52));
  return swift_bridgeObjectRetain();
}

uint64_t AnyCodable.dataValue.getter()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for AnyCodable() + 56);
  uint64_t v2 = *(void *)v1;
  sub_1D786E9D8(*(void *)v1, *(void *)(v1 + 8));
  return v2;
}

double AnyCodable.init(value:)@<D0>(uint64_t a1@<X8>, float a2@<S0>)
{
  *(unsigned char *)a1 = 2;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  *(void *)(a1 + 24) = 0;
  *(unsigned char *)(a1 + 32) = 1;
  *(float *)(a1 + 36) = a2;
  *(unsigned char *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  *(unsigned char *)(a1 + 56) = 1;
  uint64_t v3 = (int *)type metadata accessor for AnyCodable();
  uint64_t v4 = a1 + v3[9];
  uint64_t v5 = sub_1D7A9B148();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  uint64_t v6 = (void *)(a1 + v3[10]);
  *uint64_t v6 = 0;
  v6[1] = 0;
  *(void *)(a1 + v3[11]) = 0;
  *(void *)(a1 + v3[12]) = 0;
  *(void *)(a1 + v3[13]) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + v3[14]) = xmmword_1D7AA0AC0;
  return result;
}

double AnyCodable.init(value:)@<D0>(uint64_t a1@<X8>, double a2@<D0>)
{
  *(unsigned char *)a1 = 2;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  *(void *)(a1 + 24) = 0;
  *(unsigned char *)(a1 + 32) = 1;
  *(_DWORD *)(a1 + 36) = 0;
  *(unsigned char *)(a1 + 40) = 1;
  *(double *)(a1 + 48) = a2;
  *(unsigned char *)(a1 + 56) = 0;
  uint64_t v3 = (int *)type metadata accessor for AnyCodable();
  uint64_t v4 = a1 + v3[9];
  uint64_t v5 = sub_1D7A9B148();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  uint64_t v6 = (void *)(a1 + v3[10]);
  *uint64_t v6 = 0;
  v6[1] = 0;
  *(void *)(a1 + v3[11]) = 0;
  *(void *)(a1 + v3[12]) = 0;
  *(void *)(a1 + v3[13]) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + v3[14]) = xmmword_1D7AA0AC0;
  return result;
}

uint64_t AnyCodable.init(value:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1D7A9B148();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6, v7, v8, v9, v10, v11, v12);
  uint64_t v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = (int *)type metadata accessor for AnyCodable();
  uint64_t v16 = *((void *)v15 - 1);
  MEMORY[0x1F4188790](v15, v17, v18, v19, v20, v21, v22, v23);
  char v25 = (char *)&v47 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (swift_dynamicCast())
  {
    char *v25 = v47;
    *((void *)v25 + 1) = 0;
    v25[16] = 1;
    *((void *)v25 + 3) = 0;
LABEL_7:
    v25[32] = 1;
    *((_DWORD *)v25 + 9) = 0;
    v25[40] = 1;
    *((void *)v25 + 6) = 0;
    v25[56] = 1;
LABEL_8:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(&v25[v15[9]], 1, 1, v4);
LABEL_9:
    uint64_t v30 = &v25[v15[10]];
    *(void *)uint64_t v30 = 0;
    *((void *)v30 + 1) = 0;
    goto LABEL_10;
  }
  if (swift_dynamicCast())
  {
    uint64_t v26 = v47;
    uint64_t v27 = v48;
    char *v25 = 2;
    *((void *)v25 + 1) = 0;
    v25[16] = 1;
    *((void *)v25 + 3) = 0;
    v25[32] = 1;
    *((_DWORD *)v25 + 9) = 0;
    v25[40] = 1;
    *((void *)v25 + 6) = 0;
    v25[56] = 1;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(&v25[v15[9]], 1, 1, v4);
    char v28 = &v25[v15[10]];
    *(void *)char v28 = v26;
    *((void *)v28 + 1) = v27;
LABEL_10:
    *(void *)&v25[v15[11]] = 0;
LABEL_11:
    *(void *)&v25[v15[12]] = 0;
    goto LABEL_12;
  }
  if (swift_dynamicCast())
  {
    uint64_t v29 = v47;
    char *v25 = 2;
    *((void *)v25 + 1) = v29;
    v25[16] = 0;
    *((void *)v25 + 3) = 0;
    goto LABEL_7;
  }
  if (swift_dynamicCast())
  {
    uint64_t v33 = v47;
    char *v25 = 2;
    *((void *)v25 + 1) = 0;
    v25[16] = 1;
    *((void *)v25 + 3) = v33;
    v25[32] = 0;
    *((_DWORD *)v25 + 9) = 0;
    v25[40] = 1;
LABEL_20:
    *((void *)v25 + 6) = 0;
    v25[56] = 1;
    goto LABEL_8;
  }
  if (swift_dynamicCast())
  {
    int v34 = v47;
    char *v25 = 2;
    *((void *)v25 + 1) = 0;
    v25[16] = 1;
    *((void *)v25 + 3) = 0;
    v25[32] = 1;
    *((_DWORD *)v25 + 9) = v34;
    v25[40] = 0;
    goto LABEL_20;
  }
  if (swift_dynamicCast())
  {
    uint64_t v35 = v47;
    char *v25 = 2;
    *((void *)v25 + 1) = 0;
    v25[16] = 1;
    *((void *)v25 + 3) = 0;
    v25[32] = 1;
    *((_DWORD *)v25 + 9) = 0;
    v25[40] = 1;
    *((void *)v25 + 6) = v35;
    v25[56] = 0;
    goto LABEL_8;
  }
  if (swift_dynamicCast())
  {
    uint64_t v36 = &v25[v15[9]];
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v36, v14, v4);
    char *v25 = 2;
    *((void *)v25 + 1) = 0;
    v25[16] = 1;
    *((void *)v25 + 3) = 0;
    v25[32] = 1;
    *((_DWORD *)v25 + 9) = 0;
    v25[40] = 1;
    *((void *)v25 + 6) = 0;
    v25[56] = 1;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v36, 0, 1, v4);
    goto LABEL_9;
  }
  if (swift_dynamicCast())
  {
    uint64_t v37 = v47;
    uint64_t v38 = v48;
    char *v25 = 2;
    *((void *)v25 + 1) = 0;
    v25[16] = 1;
    *((void *)v25 + 3) = 0;
    v25[32] = 1;
    *((_DWORD *)v25 + 9) = 0;
    v25[40] = 1;
    *((void *)v25 + 6) = 0;
    v25[56] = 1;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(&v25[v15[9]], 1, 1, v4);
    uint64_t v39 = &v25[v15[10]];
    *(void *)uint64_t v39 = 0;
    *((void *)v39 + 1) = 0;
    *(void *)&v25[v15[11]] = 0;
    *(void *)&v25[v15[12]] = 0;
    *(void *)&v25[v15[13]] = 0;
    uint64_t v40 = &v25[v15[14]];
    *(void *)uint64_t v40 = v37;
    *((void *)v40 + 1) = v38;
    goto LABEL_14;
  }
  if (swift_dynamicCast())
  {
    uint64_t v41 = v47;
    char *v25 = 2;
    *((void *)v25 + 1) = 0;
    v25[16] = 1;
    *((void *)v25 + 3) = 0;
    v25[32] = 1;
    *((_DWORD *)v25 + 9) = 0;
    v25[40] = 1;
    *((void *)v25 + 6) = 0;
    v25[56] = 1;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(&v25[v15[9]], 1, 1, v4);
    uint64_t v42 = &v25[v15[10]];
    *(void *)uint64_t v42 = 0;
    *((void *)v42 + 1) = 0;
    *(void *)&v25[v15[11]] = v41;
    goto LABEL_11;
  }
  if (!swift_dynamicCast())
  {
    if (!swift_dynamicCast())
    {
      sub_1D78A2748(a1);
      uint64_t v31 = 1;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v16 + 56))(a2, v31, 1, v15);
    }
    uint64_t v45 = v47;
    char *v25 = 2;
    *((void *)v25 + 1) = 0;
    v25[16] = 1;
    *((void *)v25 + 3) = 0;
    v25[32] = 1;
    *((_DWORD *)v25 + 9) = 0;
    v25[40] = 1;
    *((void *)v25 + 6) = 0;
    v25[56] = 1;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(&v25[v15[9]], 1, 1, v4);
    uint64_t v46 = &v25[v15[10]];
    *(void *)uint64_t v46 = 0;
    *((void *)v46 + 1) = 0;
    *(void *)&v25[v15[11]] = 0;
    *(void *)&v25[v15[12]] = 0;
    *(void *)&v25[v15[13]] = v45;
    goto LABEL_13;
  }
  uint64_t v43 = v47;
  char *v25 = 2;
  *((void *)v25 + 1) = 0;
  v25[16] = 1;
  *((void *)v25 + 3) = 0;
  v25[32] = 1;
  *((_DWORD *)v25 + 9) = 0;
  v25[40] = 1;
  *((void *)v25 + 6) = 0;
  v25[56] = 1;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(&v25[v15[9]], 1, 1, v4);
  uint64_t v44 = &v25[v15[10]];
  *(void *)uint64_t v44 = 0;
  *((void *)v44 + 1) = 0;
  *(void *)&v25[v15[11]] = 0;
  *(void *)&v25[v15[12]] = v43;
LABEL_12:
  *(void *)&v25[v15[13]] = 0;
LABEL_13:
  *(_OWORD *)&v25[v15[14]] = xmmword_1D7AA0AC0;
LABEL_14:
  sub_1D78A2748(a1);
  sub_1D7969D70((uint64_t)v25, a2);
  uint64_t v31 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v16 + 56))(a2, v31, 1, v15);
}

uint64_t sub_1D7969D70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AnyCodable();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t AnyCodable.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v53 = a2;
  uint64_t v52 = sub_1D7A9B5F8();
  v51[5] = *(void *)(v52 - 8);
  MEMORY[0x1F4188790](v52, v3, v4, v5, v6, v7, v8, v9);
  uint64_t v11 = (char *)v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9118);
  MEMORY[0x1F4188790](v12 - 8, v13, v14, v15, v16, v17, v18, v19);
  uint64_t v21 = (char *)v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1D7A9B148();
  uint64_t v54 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22, v23, v24, v25, v26, v27, v28, v29);
  uint64_t v31 = (char *)v51 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = (int *)type metadata accessor for AnyCodable();
  MEMORY[0x1F4188790](v32, v33, v34, v35, v36, v37, v38, v39);
  uint64_t v41 = (char *)v51 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = a1[3];
  int v55 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v42);
  uint64_t v43 = v57;
  sub_1D7A9D688();
  if (v43) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
  }
  v51[3] = v31;
  v51[4] = v21;
  v51[2] = v11;
  uint64_t v57 = v41;
  uint64_t v45 = v53;
  __swift_project_boxed_opaque_existential_1(v56, v56[3]);
  char v46 = sub_1D7A9D388();
  uint64_t v47 = (uint64_t)v57;
  *uint64_t v57 = v46 & 1;
  *(void *)(v47 + 8) = 0;
  *(unsigned char *)(v47 + 16) = 1;
  *(void *)(v47 + 24) = 0;
  *(unsigned char *)(v47 + 32) = 1;
  *(_DWORD *)(v47 + 36) = 0;
  *(unsigned char *)(v47 + 40) = 1;
  *(void *)(v47 + 48) = 0;
  *(unsigned char *)(v47 + 56) = 1;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v54 + 56))(v47 + v32[9], 1, 1, v22);
  uint64_t v48 = (void *)(v47 + v32[10]);
  *uint64_t v48 = 0;
  v48[1] = 0;
  *(void *)(v47 + v32[11]) = 0;
  *(void *)(v47 + v32[12]) = 0;
  *(void *)(v47 + v32[13]) = 0;
  *(_OWORD *)(v47 + v32[14]) = xmmword_1D7AA0AC0;
  uint64_t v49 = v45;
  uint64_t v50 = (uint64_t)v55;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
  sub_1D79776B4(v47, v49);
  __swift_destroy_boxed_opaque_existential_1(v50);
  return sub_1D7977718(v47);
}

uint64_t AnyCodable.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9118);
  MEMORY[0x1F4188790](v4 - 8, v5, v6, v7, v8, v9, v10, v11);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1D7A9B148();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14, v16, v17, v18, v19, v20, v21, v22);
  uint64_t v24 = (char *)&v35 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D7A9D6D8();
  if (*v2 == 2)
  {
    uint64_t v25 = type metadata accessor for AnyCodable();
    if (*(void *)&v2[*(int *)(v25 + 40) + 8])
    {
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v38, v39);
      sub_1D7A9D3F8();
    }
    else if (v2[16])
    {
      if (v2[32])
      {
        if (v2[40])
        {
          if (v2[56])
          {
            uint64_t v27 = (int *)v25;
            sub_1D78614F8((uint64_t)&v2[*(int *)(v25 + 36)], (uint64_t)v13, &qword_1EBDF9118);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
            {
              sub_1D7871C4C((uint64_t)v13, &qword_1EBDF9118);
              uint64_t v28 = (uint64_t *)&v2[v27[14]];
              unint64_t v29 = v28[1];
              if (v29 >> 60 == 15)
              {
                if (*(void *)&v2[v27[11]])
                {
                  uint64_t v36 = *(void *)&v2[v27[11]];
                  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v38, v39);
                  sub_1D797781C();
                }
                else if (*(void *)&v2[v27[12]])
                {
                  uint64_t v36 = *(void *)&v2[v27[12]];
                  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v38, v39);
                  sub_1D79777C8();
                }
                else
                {
                  if (!*(void *)&v2[v27[13]])
                  {
                    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9400);
                    uint64_t inited = swift_initStackObject();
                    *(_OWORD *)(inited + 16) = xmmword_1D7AA08E0;
                    *(void *)(inited + 32) = sub_1D7A9BFC8();
                    *(void *)(inited + 40) = v31;
                    *(void *)(inited + 72) = MEMORY[0x1E4FBB1A0];
                    *(void *)(inited + 48) = 0xD000000000000031;
                    *(void *)(inited + 56) = 0x80000001D7AC5490;
                    sub_1D785F2A0(inited);
                    id v32 = objc_allocWithZone(MEMORY[0x1E4F28C58]);
                    uint64_t v33 = (void *)sub_1D7A9BF98();
                    uint64_t v34 = (void *)sub_1D7A9BE98();
                    swift_bridgeObjectRelease();
                    objc_msgSend(v32, sel_initWithDomain_code_userInfo_, v33, -1, v34);

                    swift_willThrow();
                    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
                  }
                  uint64_t v36 = *(void *)&v2[v27[13]];
                  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v38, v39);
                  sub_1D7977774();
                }
              }
              else
              {
                uint64_t v36 = *v28;
                unint64_t v37 = v29;
                __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v38, v39);
                sub_1D7871AD8();
              }
              sub_1D7A9D458();
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v24, v13, v14);
              __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v38, v39);
              sub_1D7977870(&qword_1EA843E00, MEMORY[0x1E4F27928]);
              sub_1D7A9D458();
              (*(void (**)(char *, uint64_t))(v15 + 8))(v24, v14);
            }
          }
          else
          {
            __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v38, v39);
            sub_1D7A9D418();
          }
        }
        else
        {
          __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v38, v39);
          sub_1D7A9D428();
        }
      }
      else
      {
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v38, v39);
        sub_1D7A9D448();
      }
    }
    else
    {
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v38, v39);
      sub_1D7A9D438();
    }
  }
  else
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v38, v39);
    sub_1D7A9D408();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
}

NSObject_optional __swiftcall AnyCodable.asNSObject()()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9118);
  MEMORY[0x1F4188790](v1 - 8, v2, v3, v4, v5, v6, v7, v8);
  uint64_t v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1D7A9B148();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11, v13, v14, v15, v16, v17, v18, v19);
  uint64_t v21 = (char *)&v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v22 = *v0;
  if (v22 != 2)
  {
    id v24 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithBool_, v22 & 1);
    goto LABEL_15;
  }
  uint64_t v23 = type metadata accessor for AnyCodable();
  if (*(void *)&v0[*(int *)(v23 + 40) + 8])
  {
    id v24 = (id)sub_1D7A9BF98();
LABEL_15:
    uint64_t v30 = (uint64_t)v24;
    goto LABEL_16;
  }
  if ((v0[16] & 1) == 0)
  {
    id v24 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, *((void *)v0 + 1));
    goto LABEL_15;
  }
  if ((v0[32] & 1) == 0)
  {
    id v24 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithUnsignedInteger_, *((void *)v0 + 3));
    goto LABEL_15;
  }
  if ((v0[40] & 1) == 0)
  {
    int v32 = *((_DWORD *)v0 + 9);
    id v33 = objc_allocWithZone(NSNumber);
    LODWORD(v34) = v32;
    id v24 = objc_msgSend(v33, sel_initWithFloat_, v34);
    goto LABEL_15;
  }
  if ((v0[56] & 1) == 0)
  {
    id v24 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, *((double *)v0 + 6));
    goto LABEL_15;
  }
  uint64_t v26 = (int *)v23;
  sub_1D78614F8((uint64_t)&v0[*(int *)(v23 + 36)], (uint64_t)v10, &qword_1EBDF9118);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1D7871C4C((uint64_t)v10, &qword_1EBDF9118);
    uint64_t v27 = &v0[v26[14]];
    unint64_t v28 = *((void *)v27 + 1);
    if (v28 >> 60 == 15)
    {
      if (*(void *)&v0[v26[11]])
      {
        uint64_t v37 = *(void *)&v0[v26[11]];
        AnyCodableArray.asNSArray()();
        sub_1D78C4038(0, (unint64_t *)&qword_1EBDF7920);
        uint64_t v29 = sub_1D7A9C2F8();
      }
      else
      {
        if (*(void *)&v0[v26[12]])
        {
          uint64_t v37 = *(void *)&v0[v26[12]];
          AnyCodableDictionary.asNSDictionary()();
          sub_1D78C4038(0, (unint64_t *)&qword_1EBDF7920);
        }
        else
        {
          if (!*(void *)&v0[v26[13]])
          {
            uint64_t v30 = 0;
            goto LABEL_16;
          }
          uint64_t v37 = *(void *)&v0[v26[13]];
          IntegerKeyedAnyCodableDictionary.asNSDictionary()();
          sub_1D78C4038(0, (unint64_t *)&qword_1EBDF93C0);
          sub_1D78C4038(0, (unint64_t *)&qword_1EBDF7920);
          sub_1D79778B8();
        }
        uint64_t v29 = sub_1D7A9BE98();
      }
      uint64_t v30 = v29;
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v35 = *(void *)v27;
      sub_1D7860790(*(void *)v27, *((void *)v27 + 1));
      uint64_t v30 = sub_1D7A9AFF8();
      sub_1D7871BDC(v35, v28);
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v21, v10, v11);
    uint64_t v30 = sub_1D7A9B0C8();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v21, v11);
  }
LABEL_16:
  uint64_t v31 = (objc_class *)v30;
  result.value.isa = v31;
  result.is_nil = v25;
  return result;
}

uint64_t AnyCodableArray.asNSArray()()
{
  uint64_t v1 = type metadata accessor for AnyCodable() - 8;
  MEMORY[0x1F4188790](v1, v2, v3, v4, v5, v6, v7, v8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *v0;
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v20 = MEMORY[0x1E4FBC860];
  uint64_t v14 = *(void *)(v12 + 16);
  if (v14)
  {
    uint64_t v15 = v12 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v16 = *(void *)(v9 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_1D79776B4(v15, (uint64_t)v11);
      uint64_t v17 = (void *)AnyCodable.asNSObject()();
      if (v17)
      {
        id v18 = v17;
        MEMORY[0x1D947B060]();
        if (*(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1D7A9C368();
        }
        sub_1D7A9C3A8();
        sub_1D7A9C338();
      }
      sub_1D7977718((uint64_t)v11);
      v15 += v16;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease();
    return v20;
  }
  return result;
}

uint64_t AnyCodableDictionary.asNSDictionary()()
{
  uint64_t v1 = type metadata accessor for AnyCodable();
  uint64_t v84 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1 - 8, v2, v3, v4, v5, v6, v7, v8);
  uint64_t v10 = (char *)&v77 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845398);
  uint64_t v19 = MEMORY[0x1F4188790](v11 - 8, v12, v13, v14, v15, v16, v17, v18);
  uint64_t v21 = (unint64_t *)((char *)&v77 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v19, v22, v23, v24, v25, v26, v27, v28);
  uint64_t v30 = (uint64_t *)((char *)&v77 - v29);
  uint64_t v31 = *v0;
  unint64_t v32 = sub_1D785F2C8(MEMORY[0x1E4FBC860]);
  uint64_t v33 = *(void *)(v31 + 64);
  unint64_t v81 = v32;
  uint64_t v82 = v31 + 64;
  uint64_t v34 = 1 << *(unsigned char *)(v31 + 32);
  uint64_t v35 = -1;
  if (v34 < 64) {
    uint64_t v35 = ~(-1 << v34);
  }
  unint64_t v36 = v35 & v33;
  unint64_t v37 = (unint64_t)(v34 + 63) >> 6;
  unint64_t v77 = v37 - 1;
  swift_bridgeObjectRetain();
  unint64_t v38 = 0;
  int64_t v83 = v37;
  uint64_t v85 = v31;
  uint64_t v78 = v31 + 104;
  unint64_t v79 = v37 - 5;
  while (1)
  {
    uint64_t v39 = &qword_1EA8453A0;
    if (v36)
    {
LABEL_5:
      unint64_t v40 = __clz(__rbit64(v36));
      v36 &= v36 - 1;
      unint64_t v41 = v40 | (v38 << 6);
LABEL_6:
      uint64_t v42 = *(void *)(v85 + 56);
      uint64_t v43 = (void *)(*(void *)(v85 + 48) + 16 * v41);
      uint64_t v44 = v43[1];
      void *v21 = *v43;
      v21[1] = v44;
      uint64_t v45 = v42 + *(void *)(v84 + 72) * v41;
      char v46 = v39;
      uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(v39);
      sub_1D79776B4(v45, (uint64_t)v21 + *(int *)(v47 + 48));
      uint64_t v48 = *(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56);
      uint64_t v49 = v47;
      uint64_t v39 = v46;
      v48(v21, 0, 1, v49);
      swift_bridgeObjectRetain();
      goto LABEL_13;
    }
    while (1)
    {
      int64_t v50 = v38 + 1;
      if (__OFADD__(v38, 1))
      {
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
        goto LABEL_44;
      }
      if (v50 >= v83)
      {
        unint64_t v52 = v38;
      }
      else
      {
        unint64_t v51 = *(void *)(v82 + 8 * v50);
        if (v51) {
          goto LABEL_10;
        }
        unint64_t v52 = v38 + 1;
        if ((uint64_t)(v38 + 2) < v83)
        {
          unint64_t v51 = *(void *)(v82 + 8 * (v38 + 2));
          if (v51)
          {
            int64_t v50 = v38 + 2;
LABEL_10:
            unint64_t v36 = (v51 - 1) & v51;
            unint64_t v41 = __clz(__rbit64(v51)) + (v50 << 6);
            unint64_t v38 = v50;
            goto LABEL_6;
          }
          unint64_t v52 = v38 + 2;
          if ((uint64_t)(v38 + 3) < v83)
          {
            unint64_t v51 = *(void *)(v82 + 8 * (v38 + 3));
            if (v51)
            {
              int64_t v50 = v38 + 3;
              goto LABEL_10;
            }
            int64_t v50 = v38 + 4;
            unint64_t v52 = v38 + 3;
            if ((uint64_t)(v38 + 4) < v83)
            {
              unint64_t v51 = *(void *)(v82 + 8 * v50);
              if (v51) {
                goto LABEL_10;
              }
              while (v79 != v38)
              {
                unint64_t v51 = *(void *)(v78 + 8 * v38++);
                if (v51)
                {
                  int64_t v50 = v38 + 4;
                  goto LABEL_10;
                }
              }
              unint64_t v52 = v77;
            }
          }
        }
      }
      uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(v39);
      (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v21, 1, 1, v53);
      unint64_t v36 = 0;
      unint64_t v38 = v52;
LABEL_13:
      sub_1D7871D78((uint64_t)v21, (uint64_t)v30, &qword_1EA845398);
      uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(v39);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v54 - 8) + 48))(v30, 1, v54) == 1)
      {
        swift_release();
        return v81;
      }
      uint64_t v55 = *v30;
      uint64_t v56 = v30[1];
      sub_1D7969D70((uint64_t)v30 + *(int *)(v54 + 48), (uint64_t)v10);
      uint64_t v57 = (void *)AnyCodable.asNSObject()();
      if (v57) {
        break;
      }
      sub_1D7977718((uint64_t)v10);
      swift_bridgeObjectRelease();
      if (v36) {
        goto LABEL_5;
      }
    }
    id v80 = v57;
    BOOL v58 = (void *)v81;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v86 = v58;
    unint64_t v61 = sub_1D7A18684(v55, v56);
    uint64_t v62 = v58[2];
    BOOL v63 = (v60 & 1) == 0;
    uint64_t v64 = v62 + v63;
    if (__OFADD__(v62, v63)) {
      goto LABEL_42;
    }
    if (v58[3] < v64) {
      break;
    }
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      char v75 = v60;
      sub_1D7973294();
      LOBYTE(v60) = v75;
    }
LABEL_35:
    uint64_t v67 = v86;
    unint64_t v81 = (unint64_t)v86;
    if (v60)
    {
      uint64_t v68 = v86[7];

      id v69 = v80;
      *(void *)(v68 + 8 * v61) = v80;
      uint64_t v70 = v69;
    }
    else
    {
      v86[(v61 >> 6) + 8] |= 1 << v61;
      uint64_t v71 = (uint64_t *)(v67[6] + 16 * v61);
      *uint64_t v71 = v55;
      v71[1] = v56;
      uint64_t v70 = v80;
      *(void *)(v67[7] + 8 * v61) = v80;
      uint64_t v72 = v67[2];
      BOOL v73 = __OFADD__(v72, 1);
      uint64_t v74 = v72 + 1;
      if (v73) {
        goto LABEL_43;
      }
      v67[2] = v74;
      swift_bridgeObjectRetain();
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1D7977718((uint64_t)v10);
  }
  LODWORD(v81) = v60;
  sub_1D796FF58(v64, isUniquelyReferenced_nonNull_native);
  uint64_t v65 = sub_1D7A18684(v55, v56);
  int v66 = v60 & 1;
  LOBYTE(v60) = v81;
  if ((v81 & 1) == v66)
  {
    unint64_t v61 = v65;
    goto LABEL_35;
  }
LABEL_44:
  uint64_t result = sub_1D7A9D4F8();
  __break(1u);
  return result;
}

uint64_t IntegerKeyedAnyCodableDictionary.asNSDictionary()()
{
  uint64_t v1 = type metadata accessor for AnyCodable();
  uint64_t v86 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1 - 8, v2, v3, v4, v5, v6, v7, v8);
  uint64_t v10 = &v77[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8453A8);
  uint64_t v19 = MEMORY[0x1F4188790](v11 - 8, v12, v13, v14, v15, v16, v17, v18);
  uint64_t v21 = &v77[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v19, v22, v23, v24, v25, v26, v27, v28);
  uint64_t v30 = (uint64_t *)&v77[-v29];
  uint64_t v31 = *v0;
  unint64_t v32 = sub_1D785FADC(MEMORY[0x1E4FBC860]);
  uint64_t v33 = *(void *)(v31 + 64);
  uint64_t v83 = v32;
  uint64_t v84 = v31 + 64;
  uint64_t v34 = 1 << *(unsigned char *)(v31 + 32);
  uint64_t v35 = -1;
  if (v34 < 64) {
    uint64_t v35 = ~(-1 << v34);
  }
  unint64_t v36 = v35 & v33;
  unint64_t v37 = (unint64_t)(v34 + 63) >> 6;
  unint64_t v79 = v37 - 1;
  swift_bridgeObjectRetain();
  unint64_t v38 = 0;
  int64_t v85 = v37;
  uint64_t v80 = v31 + 104;
  unint64_t v81 = v37 - 5;
  while (1)
  {
    if (v36)
    {
      unint64_t v41 = __clz(__rbit64(v36));
      v36 &= v36 - 1;
      unint64_t v42 = v41 | (v38 << 6);
      goto LABEL_9;
    }
    int64_t v46 = v38 + 1;
    if (__OFADD__(v38, 1)) {
      break;
    }
    if (v46 >= v85)
    {
      unint64_t v48 = v38;
    }
    else
    {
      unint64_t v47 = *(void *)(v84 + 8 * v46);
      if (v47) {
        goto LABEL_13;
      }
      unint64_t v48 = v38 + 1;
      if ((uint64_t)(v38 + 2) < v85)
      {
        unint64_t v47 = *(void *)(v84 + 8 * (v38 + 2));
        if (v47)
        {
          int64_t v46 = v38 + 2;
          goto LABEL_13;
        }
        unint64_t v48 = v38 + 2;
        if ((uint64_t)(v38 + 3) < v85)
        {
          unint64_t v47 = *(void *)(v84 + 8 * (v38 + 3));
          if (v47)
          {
            int64_t v46 = v38 + 3;
LABEL_13:
            unint64_t v36 = (v47 - 1) & v47;
            unint64_t v42 = __clz(__rbit64(v47)) + (v46 << 6);
            unint64_t v38 = v46;
LABEL_9:
            uint64_t v43 = *(void *)(v31 + 56);
            void *v21 = *(void *)(*(void *)(v31 + 48) + 8 * v42);
            uint64_t v44 = v43 + *(void *)(v86 + 72) * v42;
            uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8453B0);
            sub_1D79776B4(v44, (uint64_t)v21 + *(int *)(v45 + 48));
            (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v21, 0, 1, v45);
            goto LABEL_16;
          }
          int64_t v46 = v38 + 4;
          unint64_t v48 = v38 + 3;
          if ((uint64_t)(v38 + 4) < v85)
          {
            unint64_t v47 = *(void *)(v84 + 8 * v46);
            if (v47) {
              goto LABEL_13;
            }
            while (v81 != v38)
            {
              unint64_t v47 = *(void *)(v80 + 8 * v38++);
              if (v47)
              {
                int64_t v46 = v38 + 4;
                goto LABEL_13;
              }
            }
            unint64_t v48 = v79;
          }
        }
      }
    }
    uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8453B0);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v21, 1, 1, v49);
    unint64_t v36 = 0;
    unint64_t v38 = v48;
LABEL_16:
    sub_1D7871D78((uint64_t)v21, (uint64_t)v30, &qword_1EA8453A8);
    uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8453B0);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v50 - 8) + 48))(v30, 1, v50) == 1)
    {
      swift_release();
      return v83;
    }
    uint64_t v51 = *v30;
    sub_1D7969D70((uint64_t)v30 + *(int *)(v50 + 48), (uint64_t)v10);
    unint64_t v52 = (unint64_t)AnyCodable.asNSObject()();
    if (v52)
    {
      uint64_t v53 = (void *)v52;
      id v54 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v51);
      uint64_t v55 = (uint64_t)v54;
      if ((v83 & 0xC000000000000001) != 0)
      {
        uint64_t v56 = (uint64_t)v54;
        if (v83 < 0) {
          uint64_t v57 = v83;
        }
        else {
          uint64_t v57 = v83 & 0xFFFFFFFFFFFFFF8;
        }
        id v58 = v53;
        uint64_t v59 = sub_1D7A9CF28();
        if (__OFADD__(v59, 1)) {
          goto LABEL_49;
        }
        uint64_t v60 = sub_1D796EC74(v57, v59 + 1);
        uint64_t v55 = v56;
      }
      else
      {
        id v61 = v53;
        uint64_t v60 = v83;
      }
      uint64_t v62 = v60;
      LODWORD(v83) = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v87 = (void *)v62;
      uint64_t v82 = (void *)v55;
      unint64_t v64 = sub_1D7A18DDC(v55);
      uint64_t v65 = *(void *)(v62 + 16);
      BOOL v66 = (v63 & 1) == 0;
      uint64_t v67 = v65 + v66;
      if (__OFADD__(v65, v66)) {
        goto LABEL_48;
      }
      if (*(void *)(v62 + 24) >= v67)
      {
        if ((v83 & 1) == 0)
        {
          int v78 = v63;
          sub_1D7973B9C();
          LOBYTE(v63) = v78;
        }
      }
      else
      {
        int v78 = v63;
        sub_1D7970EF4(v67, v83);
        unint64_t v68 = sub_1D7A18DDC((uint64_t)v82);
        int v69 = v63 & 1;
        LOBYTE(v63) = v78;
        if ((v78 & 1) != v69) {
          goto LABEL_51;
        }
        unint64_t v64 = v68;
      }
      uint64_t v70 = v87;
      uint64_t v71 = 8 * v64;
      uint64_t v83 = (uint64_t)v87;
      if (v63)
      {
        uint64_t v39 = v87[7];

        *(void *)(v39 + v71) = v53;
        unint64_t v40 = v82;
      }
      else
      {
        v87[(v64 >> 6) + 8] |= 1 << v64;
        unint64_t v40 = v82;
        *(void *)(v70[6] + v71) = v82;
        *(void *)(v70[7] + v71) = v53;
        uint64_t v72 = v70[2];
        BOOL v73 = __OFADD__(v72, 1);
        uint64_t v74 = v72 + 1;
        if (v73) {
          goto LABEL_50;
        }
        v70[2] = v74;
        id v75 = v40;
      }

      swift_bridgeObjectRelease();
    }
    sub_1D7977718((uint64_t)v10);
  }
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  sub_1D78C4038(0, (unint64_t *)&qword_1EBDF93C0);
  uint64_t result = sub_1D7A9D4F8();
  __break(1u);
  return result;
}

double AnyCodable.value.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9118);
  MEMORY[0x1F4188790](v3 - 8, v4, v5, v6, v7, v8, v9, v10);
  uint64_t v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1D7A9B148();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v22 = MEMORY[0x1F4188790](v13, v15, v16, v17, v18, v19, v20, v21);
  uint64_t v24 = (char *)&v42 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22, v25, v26, v27, v28, v29, v30, v31);
  uint64_t v33 = (char *)&v42 - v32;
  int v34 = *v1;
  if (v34 == 2)
  {
    uint64_t v35 = (int *)type metadata accessor for AnyCodable();
    unint64_t v36 = (uint64_t *)&v1[v35[10]];
    uint64_t v37 = v36[1];
    if (v37)
    {
      uint64_t v42 = *v36;
      unint64_t v43 = v37;
      swift_bridgeObjectRetain();
    }
    else if (v1[16])
    {
      if (v1[32])
      {
        if (v1[40])
        {
          if (v1[56])
          {
            sub_1D78614F8((uint64_t)&v1[v35[9]], (uint64_t)v12, &qword_1EBDF9118);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) != 1)
            {
              (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v33, v12, v13);
              (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v24, v33, v13);
              sub_1D7977870(&qword_1EA8453D8, MEMORY[0x1E4F27928]);
              sub_1D7A9CBF8();
              (*(void (**)(char *, uint64_t))(v14 + 8))(v33, v13);
              return result;
            }
            sub_1D7871C4C((uint64_t)v12, &qword_1EBDF9118);
            uint64_t v39 = (uint64_t *)&v1[v35[14]];
            unint64_t v40 = v39[1];
            if (v40 >> 60 == 15)
            {
              if (*(void *)&v1[v35[11]])
              {
                uint64_t v42 = *(void *)&v1[v35[11]];
                sub_1D79779C8();
                swift_bridgeObjectRetain();
              }
              else if (*(void *)&v1[v35[12]])
              {
                uint64_t v42 = *(void *)&v1[v35[12]];
                sub_1D7977974();
                swift_bridgeObjectRetain();
              }
              else
              {
                uint64_t v41 = *(void *)&v1[v35[13]];
                if (!v41)
                {
                  *(void *)(a1 + 32) = 0;
                  double result = 0.0;
                  *(_OWORD *)a1 = 0u;
                  *(_OWORD *)(a1 + 16) = 0u;
                  return result;
                }
                uint64_t v42 = v41;
                sub_1D7977920();
                swift_bridgeObjectRetain();
              }
            }
            else
            {
              uint64_t v42 = *v39;
              unint64_t v43 = v40;
              sub_1D7860790(v42, v40);
              sub_1D7977A1C();
            }
          }
          else
          {
            uint64_t v42 = *((void *)v1 + 6);
          }
        }
        else
        {
          LODWORD(v42) = *((_DWORD *)v1 + 9);
        }
      }
      else
      {
        uint64_t v42 = *((void *)v1 + 3);
      }
    }
    else
    {
      uint64_t v42 = *((void *)v1 + 1);
    }
  }
  else
  {
    LOBYTE(v42) = v34 & 1;
  }
  sub_1D7A9CBF8();
  return result;
}

uint64_t AnyCodable.hash(into:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (int *)type metadata accessor for AnyCodable();
  uint64_t v5 = *((void *)v4 - 1);
  MEMORY[0x1F4188790](v4, v6, v7, v8, v9, v10, v11, v12);
  uint64_t v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1D7A9B148();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15, v17, v18, v19, v20, v21, v22, v23);
  uint64_t v25 = (char *)&v46 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9118);
  MEMORY[0x1F4188790](v26 - 8, v27, v28, v29, v30, v31, v32, v33);
  uint64_t v35 = (char *)&v46 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(v34) = *v2;
  uint64_t v47 = v5;
  if (v34 != 2) {
    sub_1D7A9D5F8();
  }
  sub_1D7A9D5F8();
  if (v2[16] == 1)
  {
    sub_1D7A9D5F8();
  }
  else
  {
    sub_1D7A9D5F8();
    sub_1D7A9D5E8();
  }
  if (v2[32] == 1)
  {
    sub_1D7A9D5F8();
  }
  else
  {
    sub_1D7A9D5F8();
    sub_1D7A9D5E8();
  }
  if (v2[40] == 1)
  {
    sub_1D7A9D5F8();
  }
  else
  {
    sub_1D7A9D5F8();
    sub_1D7A9D608();
  }
  if (v2[56] == 1)
  {
    sub_1D7A9D5F8();
  }
  else
  {
    sub_1D7A9D5F8();
    sub_1D7A9D618();
  }
  sub_1D78614F8((uint64_t)&v2[v4[9]], (uint64_t)v35, &qword_1EBDF9118);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v35, 1, v15) == 1)
  {
    sub_1D7A9D5F8();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v25, v35, v15);
    sub_1D7A9D5F8();
    sub_1D7977870(&qword_1EA8453D8, MEMORY[0x1E4F27928]);
    sub_1D7A9BF08();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v25, v15);
  }
  if (*(void *)&v2[v4[10] + 8])
  {
    sub_1D7A9D5F8();
    swift_bridgeObjectRetain();
    sub_1D7A9C0B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1D7A9D5F8();
  }
  uint64_t v36 = *(void *)&v2[v4[11]];
  if (v36)
  {
    sub_1D7A9D5F8();
    sub_1D7A9D5E8();
    uint64_t v37 = *(void *)(v36 + 16);
    if (v37)
    {
      uint64_t v38 = v36 + ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80));
      uint64_t v39 = *(void *)(v47 + 72);
      swift_bridgeObjectRetain();
      do
      {
        sub_1D79776B4(v38, (uint64_t)v14);
        AnyCodable.hash(into:)(a1);
        sub_1D7977718((uint64_t)v14);
        v38 += v39;
        --v37;
      }
      while (v37);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_1D7A9D5F8();
  }
  uint64_t v40 = *(void *)&v2[v4[12]];
  sub_1D7A9D5F8();
  if (v40)
  {
    swift_bridgeObjectRetain();
    sub_1D79753A0(a1, v40);
    swift_bridgeObjectRelease();
  }
  uint64_t v41 = *(void *)&v2[v4[13]];
  sub_1D7A9D5F8();
  if (v41)
  {
    swift_bridgeObjectRetain();
    sub_1D7974FAC(a1, v41);
    swift_bridgeObjectRelease();
  }
  uint64_t v42 = (uint64_t *)&v2[v4[14]];
  unint64_t v43 = v42[1];
  if (v43 >> 60 == 15) {
    return sub_1D7A9D5F8();
  }
  uint64_t v45 = *v42;
  sub_1D7A9D5F8();
  sub_1D7860790(v45, v43);
  sub_1D7A9B038();
  return sub_1D7871BDC(v45, v43);
}

uint64_t AnyCodable.hashValue.getter()
{
  sub_1D7A9D5D8();
  AnyCodable.hash(into:)((uint64_t)v1);
  return sub_1D7A9D628();
}

uint64_t sub_1D796CB4C()
{
  sub_1D7A9D5D8();
  AnyCodable.hash(into:)((uint64_t)v1);
  return sub_1D7A9D628();
}

uint64_t sub_1D796CB90()
{
  sub_1D7A9D5D8();
  AnyCodable.hash(into:)((uint64_t)v1);
  return sub_1D7A9D628();
}

uint64_t sub_1D796CBCC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AnyCodable.init(from:)(a1, a2);
}

uint64_t sub_1D796CBE4(void *a1)
{
  return AnyCodable.encode(to:)(a1);
}

uint64_t AnyCodableArray.value.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t AnyCodableArray.init(from:)@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v5 = type metadata accessor for AnyCodable();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5, v7, v8, v9, v10, v11, v12, v13);
  uint64_t v15 = (char *)&v22[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D7A9D678();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v22, v23);
    char v16 = sub_1D7A9D2C8();
    uint64_t v24 = a2;
    unint64_t v17 = MEMORY[0x1E4FBC860];
    if ((v16 & 1) == 0)
    {
      do
      {
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v23);
        sub_1D7977870(&qword_1EA843D60, (void (*)(uint64_t))type metadata accessor for AnyCodable);
        sub_1D7A9D2B8();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v17 = sub_1D789E790(0, *(void *)(v17 + 16) + 1, 1, v17);
        }
        unint64_t v19 = *(void *)(v17 + 16);
        unint64_t v18 = *(void *)(v17 + 24);
        if (v19 >= v18 >> 1) {
          unint64_t v17 = sub_1D789E790(v18 > 1, v19 + 1, 1, v17);
        }
        *(void *)(v17 + 16) = v19 + 1;
        sub_1D7969D70((uint64_t)v15, v17+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v19);
        __swift_project_boxed_opaque_existential_1(v22, v23);
      }
      while ((sub_1D7A9D2C8() & 1) == 0);
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    *uint64_t v24 = v17;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t AnyCodableArray.encode(to:)(void *a1)
{
  uint64_t v4 = type metadata accessor for AnyCodable();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6, v7, v8, v9, v10, v11, v12);
  uint64_t v14 = &v22[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v15 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D7A9D6C8();
  uint64_t v16 = v15;
  uint64_t v17 = *(void *)(v15 + 16);
  if (v17)
  {
    uint64_t v18 = v16 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v19 = *(void *)(v5 + 72);
    uint64_t v24 = v16;
    swift_bridgeObjectRetain();
    do
    {
      sub_1D79776B4(v18, (uint64_t)v14);
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v23);
      sub_1D7977870(&qword_1EA843D90, (void (*)(uint64_t))type metadata accessor for AnyCodable);
      sub_1D7A9D2F8();
      sub_1D7977718((uint64_t)v14);
      if (v2) {
        break;
      }
      v18 += v19;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
}

uint64_t AnyCodableArray.hash(into:)(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for AnyCodable();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3 - 8, v5, v6, v7, v8, v9, v10, v11);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *v1;
  uint64_t result = sub_1D7A9D5E8();
  uint64_t v16 = *(void *)(v14 + 16);
  if (v16)
  {
    uint64_t v17 = v14 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v18 = *(void *)(v4 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_1D79776B4(v17, (uint64_t)v13);
      AnyCodable.hash(into:)(a1);
      sub_1D7977718((uint64_t)v13);
      v17 += v18;
      --v16;
    }
    while (v16);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t AnyCodableArray.hashValue.getter()
{
  uint64_t v1 = type metadata accessor for AnyCodable();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1 - 8, v3, v4, v5, v6, v7, v8, v9);
  uint64_t v11 = &v18[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v12 = *v0;
  sub_1D7A9D5D8();
  sub_1D7A9D5E8();
  uint64_t v13 = *(void *)(v12 + 16);
  if (v13)
  {
    uint64_t v14 = v12 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    uint64_t v15 = *(void *)(v2 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_1D79776B4(v14, (uint64_t)v11);
      AnyCodable.hash(into:)((uint64_t)v18);
      sub_1D7977718((uint64_t)v11);
      v14 += v15;
      --v13;
    }
    while (v13);
    swift_bridgeObjectRelease();
  }
  return sub_1D7A9D628();
}

uint64_t sub_1D796D26C()
{
  uint64_t v1 = *v0;
  sub_1D7A9D5D8();
  uint64_t v2 = *(void *)(v1 + 16);
  sub_1D7A9D5E8();
  if (v2)
  {
    uint64_t v3 = *(void *)(type metadata accessor for AnyCodable() - 8);
    uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v5 = *(void *)(v3 + 72);
    swift_bridgeObjectRetain();
    do
    {
      AnyCodable.hash(into:)((uint64_t)v7);
      v4 += v5;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  return sub_1D7A9D628();
}

uint64_t sub_1D796D33C@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  return AnyCodableArray.init(from:)(a1, a2);
}

uint64_t sub_1D796D354(void *a1)
{
  return AnyCodableArray.encode(to:)(a1);
}

uint64_t GenericCodingKeys.stringValue.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t GenericCodingKeys.stringValue.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*GenericCodingKeys.stringValue.modify())()
{
  return nullsub_1;
}

CoreIDVShared::GenericCodingKeys __swiftcall GenericCodingKeys.init(stringValue:)(Swift::String stringValue)
{
  *(Swift::String *)uint64_t v1 = stringValue;
  *(void *)(v1 + 16) = 0;
  *(unsigned char *)(v1 + 24) = 1;
  result.stringValue = stringValue;
  return result;
}

uint64_t GenericCodingKeys.intValue.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t GenericCodingKeys.intValue.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 16) = result;
  *(unsigned char *)(v2 + 24) = a2 & 1;
  return result;
}

uint64_t (*GenericCodingKeys.intValue.modify())()
{
  return nullsub_1;
}

CoreIDVShared::GenericCodingKeys_optional __swiftcall GenericCodingKeys.init(intValue:)(Swift::Int intValue)
{
  uint64_t v3 = v1;
  uint64_t v4 = sub_1D7A9D258();
  *(void *)uint64_t v3 = v4;
  *(void *)(v3 + 8) = v5;
  *(void *)(v3 + 16) = intValue;
  *(unsigned char *)(v3 + 24) = 0;
  result.value.intValue.value = v6;
  result.value.stringValue._object = v5;
  result.value.stringValue._uint64_t countAndFlagsBits = v4;
  result.value.intValue.is_nil = v7;
  return result;
}

uint64_t sub_1D796D4A4()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1D796D4D4@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = result;
  *(void *)(a3 + 8) = a2;
  *(void *)(a3 + 16) = 0;
  *(unsigned char *)(a3 + 24) = 1;
  return result;
}

uint64_t sub_1D796D4E8()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_1D796D4F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1D7A9D258();
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v5;
  *(void *)(a2 + 16) = a1;
  *(unsigned char *)(a2 + 24) = 0;
  return result;
}

uint64_t sub_1D796D550(uint64_t a1)
{
  unint64_t v2 = sub_1D7977A70();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1D796D58C(uint64_t a1)
{
  unint64_t v2 = sub_1D7977A70();
  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t AnyCodableDictionary.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  BOOL v66 = a2;
  uint64_t v3 = type metadata accessor for AnyCodable();
  uint64_t v72 = *(void *)(v3 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v3, v4, v5, v6, v7, v8, v9, v10);
  uint64_t v13 = (char *)v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11, v14, v15, v16, v17, v18, v19, v20);
  uint64_t v22 = (char *)v64 - v21;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8453E0);
  uint64_t v67 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23, v24, v25, v26, v27, v28, v29, v30);
  uint64_t v32 = (char *)v64 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D7977A70();
  uint64_t v33 = (uint64_t)v79;
  sub_1D7A9D6A8();
  uint64_t v34 = v33;
  if (v33)
  {
LABEL_2:
    uint64_t v35 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v35);
  }
  uint64_t v71 = v22;
  unint64_t v79 = v13;
  uint64_t v65 = a1;
  uint64_t v36 = (void *)sub_1D785F3E4(MEMORY[0x1E4FBC860]);
  uint64_t v37 = v32;
  uint64_t v38 = sub_1D7A9D158();
  uint64_t v39 = *(void *)(v38 + 16);
  v64[1] = v38;
  if (!v39)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v67 + 8))(v37, v23);
    uint64_t v35 = (uint64_t)v65;
    *BOOL v66 = v36;
    return __swift_destroy_boxed_opaque_existential_1(v35);
  }
  uint64_t v40 = v38;
  uint64_t v41 = sub_1D7977870(&qword_1EA843D60, (void (*)(uint64_t))type metadata accessor for AnyCodable);
  int v69 = v32;
  uint64_t v70 = v41;
  uint64_t v42 = (unsigned char *)(v40 + 56);
  uint64_t v43 = (uint64_t)v71;
  uint64_t v68 = v23;
  while (1)
  {
    uint64_t v74 = v39;
    uint64_t v44 = *((void *)v42 - 3);
    uint64_t v45 = *((void *)v42 - 2);
    char v46 = *v42;
    uint64_t v47 = *((void *)v42 - 1);
    id v75 = (void *)v44;
    uint64_t v76 = v45;
    uint64_t v77 = v47;
    char v78 = v46;
    swift_bridgeObjectRetain_n();
    sub_1D7A9D148();
    if (v34)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v67 + 8))(v37, v23);
      swift_bridgeObjectRelease();
      a1 = v65;
      goto LABEL_2;
    }
    uint64_t v73 = 0;
    uint64_t v48 = v43;
    uint64_t v49 = v3;
    swift_bridgeObjectRelease();
    sub_1D7969D70(v48, (uint64_t)v79);
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    id v75 = v36;
    unint64_t v52 = sub_1D7A18684(v44, v45);
    uint64_t v53 = v36[2];
    BOOL v54 = (v51 & 1) == 0;
    uint64_t v55 = v53 + v54;
    if (__OFADD__(v53, v54)) {
      break;
    }
    char v56 = v51;
    if (v36[3] >= v55)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_1D7973D44();
      }
    }
    else
    {
      sub_1D79711C8(v55, isUniquelyReferenced_nonNull_native);
      uint64_t v57 = sub_1D7A18684(v44, v45);
      if ((v56 & 1) != (v58 & 1)) {
        goto LABEL_22;
      }
      unint64_t v52 = v57;
    }
    uint64_t v3 = v49;
    uint64_t v36 = v75;
    uint64_t v37 = v69;
    uint64_t v43 = (uint64_t)v71;
    if (v56)
    {
      sub_1D7977AC4((uint64_t)v79, v75[7] + *(void *)(v72 + 72) * v52);
    }
    else
    {
      v75[(v52 >> 6) + 8] |= 1 << v52;
      uint64_t v59 = (uint64_t *)(v36[6] + 16 * v52);
      *uint64_t v59 = v44;
      v59[1] = v45;
      sub_1D7969D70((uint64_t)v79, v36[7] + *(void *)(v72 + 72) * v52);
      uint64_t v60 = v36[2];
      BOOL v61 = __OFADD__(v60, 1);
      uint64_t v62 = v60 + 1;
      if (v61) {
        goto LABEL_21;
      }
      v36[2] = v62;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v42 += 32;
    uint64_t v34 = v73;
    uint64_t v39 = v74 - 1;
    uint64_t v23 = v68;
    if (v74 == 1) {
      goto LABEL_17;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  uint64_t result = sub_1D7A9D4F8();
  __break(1u);
  return result;
}

uint64_t AnyCodableDictionary.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v70 = type metadata accessor for AnyCodable();
  uint64_t v68 = *(void *)(v70 - 8);
  MEMORY[0x1F4188790](v70, v5, v6, v7, v8, v9, v10, v11);
  uint64_t v13 = (char *)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845398);
  uint64_t v22 = MEMORY[0x1F4188790](v14 - 8, v15, v16, v17, v18, v19, v20, v21);
  uint64_t v24 = (int64_t *)((char *)&v64 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v22, v25, v26, v27, v28, v29, v30, v31);
  uint64_t v33 = (int64_t *)((char *)&v64 - v32);
  uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8453F0);
  uint64_t v65 = *(void *)(v76 - 8);
  MEMORY[0x1F4188790](v76, v34, v35, v36, v37, v38, v39, v40);
  uint64_t v42 = (char *)&v64 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = *v3;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D7977A70();
  uint64_t v71 = v42;
  sub_1D7A9D6E8();
  uint64_t v44 = *(void *)(v43 + 64);
  uint64_t v66 = v43 + 64;
  uint64_t v45 = 1 << *(unsigned char *)(v43 + 32);
  uint64_t v46 = -1;
  if (v45 < 64) {
    uint64_t v46 = ~(-1 << v45);
  }
  unint64_t v47 = v46 & v44;
  int64_t v67 = (unint64_t)(v45 + 63) >> 6;
  int64_t v64 = v67 - 1;
  uint64_t v69 = v43;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v49 = 0;
  while (1)
  {
    if (v47)
    {
      unint64_t v50 = __clz(__rbit64(v47));
      v47 &= v47 - 1;
      unint64_t v51 = v50 | (v49 << 6);
      goto LABEL_6;
    }
    int64_t v57 = v49 + 1;
    if (__OFADD__(v49, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v57 < v67)
    {
      unint64_t v58 = *(void *)(v66 + 8 * v57);
      if (v58) {
        goto LABEL_10;
      }
      v49 += 2;
      if (v57 + 1 >= v67)
      {
        int64_t v49 = v57;
        goto LABEL_15;
      }
      unint64_t v58 = *(void *)(v66 + 8 * v49);
      if (v58)
      {
        ++v57;
        goto LABEL_10;
      }
      if (v57 + 2 < v67) {
        break;
      }
    }
LABEL_15:
    uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8453A0);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v24, 1, 1, v59);
    unint64_t v47 = 0;
LABEL_16:
    sub_1D7871D78((uint64_t)v24, (uint64_t)v33, &qword_1EA845398);
    uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8453A0);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v60 - 8) + 48))(v33, 1, v60) != 1)
    {
      uint64_t v62 = *v33;
      uint64_t v61 = v33[1];
      sub_1D7969D70((uint64_t)v33 + *(int *)(v60 + 48), (uint64_t)v13);
      uint64_t v72 = v62;
      uint64_t v73 = v61;
      uint64_t v74 = 0;
      char v75 = 1;
      sub_1D7977870(&qword_1EA843D90, (void (*)(uint64_t))type metadata accessor for AnyCodable);
      sub_1D7A9D228();
      swift_bridgeObjectRelease();
      uint64_t result = sub_1D7977718((uint64_t)v13);
      if (!v2) {
        continue;
      }
    }
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v65 + 8))(v71, v76);
  }
  unint64_t v58 = *(void *)(v66 + 8 * (v57 + 2));
  if (v58)
  {
    v57 += 2;
    goto LABEL_10;
  }
  int64_t v63 = v57 + 3;
  if (v57 + 3 >= v67)
  {
    int64_t v49 = v57 + 2;
    goto LABEL_15;
  }
  unint64_t v58 = *(void *)(v66 + 8 * v63);
  if (v58)
  {
    v57 += 3;
LABEL_10:
    unint64_t v47 = (v58 - 1) & v58;
    unint64_t v51 = __clz(__rbit64(v58)) + (v57 << 6);
    int64_t v49 = v57;
LABEL_6:
    uint64_t v52 = *(void *)(v69 + 56);
    uint64_t v53 = (void *)(*(void *)(v69 + 48) + 16 * v51);
    uint64_t v54 = v53[1];
    *uint64_t v24 = *v53;
    v24[1] = v54;
    uint64_t v55 = v52 + *(void *)(v68 + 72) * v51;
    uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8453A0);
    sub_1D79776B4(v55, (uint64_t)v24 + *(int *)(v56 + 48));
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v24, 0, 1, v56);
    swift_bridgeObjectRetain();
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v57 = v63 + 1;
    if (__OFADD__(v63, 1)) {
      break;
    }
    if (v57 >= v67)
    {
      int64_t v49 = v64;
      goto LABEL_15;
    }
    unint64_t v58 = *(void *)(v66 + 8 * v57);
    ++v63;
    if (v58) {
      goto LABEL_10;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t AnyCodableDictionary.hash(into:)(uint64_t a1)
{
  return sub_1D796EA0C(a1, (void (*)(uint64_t, uint64_t))sub_1D79753A0);
}

uint64_t AnyCodableDictionary.hashValue.getter()
{
  return sub_1D796EA80((void (*)(unsigned char *, uint64_t))sub_1D79753A0);
}

uint64_t sub_1D796DF8C(uint64_t a1, uint64_t a2)
{
  return sub_1D796EAF8(a1, a2, (void (*)(unsigned char *, uint64_t))sub_1D79753A0);
}

uint64_t sub_1D796DFA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D796EB70(a1, a2, a3, (void (*)(uint64_t, uint64_t))sub_1D79753A0);
}

uint64_t sub_1D796DFBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D796EBE4(a1, a2, a3, (void (*)(unsigned char *, uint64_t))sub_1D79753A0);
}

uint64_t sub_1D796DFD4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return AnyCodableDictionary.init(from:)(a1, a2);
}

uint64_t sub_1D796DFEC(void *a1)
{
  return AnyCodableDictionary.encode(to:)(a1);
}

uint64_t IntegerKeyedAnyCodableDictionary.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v60 = a2;
  uint64_t v4 = type metadata accessor for AnyCodable();
  uint64_t v65 = *(void *)(v4 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v4, v5, v6, v7, v8, v9, v10, v11);
  uint64_t v71 = (uint64_t)v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12, v14, v15, v16, v17, v18, v19, v20);
  uint64_t v22 = (char *)v58 - v21;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8453E0);
  uint64_t v61 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23, v24, v25, v26, v27, v28, v29, v30);
  uint64_t v32 = (char *)v58 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D7977A70();
  sub_1D7A9D6A8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  int64_t v63 = v22;
  uint64_t v66 = 0;
  uint64_t v59 = a1;
  uint64_t v34 = (void *)sub_1D786114C(MEMORY[0x1E4FBC860]);
  int64_t v64 = v32;
  uint64_t v35 = sub_1D7A9D158();
  uint64_t v36 = *(void *)(v35 + 16);
  uint64_t v37 = v23;
  v58[1] = v35;
  if (!v36)
  {
    uint64_t v39 = v64;
LABEL_21:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v39, v37);
    uint64_t v57 = (uint64_t)v59;
    *uint64_t v60 = v34;
    return __swift_destroy_boxed_opaque_existential_1(v57);
  }
  uint64_t v38 = (unsigned char *)(v35 + 56);
  uint64_t v39 = v64;
  uint64_t v62 = v4;
  while (1)
  {
    if (*v38) {
      goto LABEL_7;
    }
    uint64_t v41 = *((void *)v38 - 2);
    uint64_t v40 = *((void *)v38 - 1);
    int64_t v67 = (void *)*((void *)v38 - 3);
    uint64_t v68 = v41;
    uint64_t v69 = v40;
    char v70 = 0;
    sub_1D7977870(&qword_1EA843D60, (void (*)(uint64_t))type metadata accessor for AnyCodable);
    swift_bridgeObjectRetain();
    uint64_t v42 = (uint64_t)v63;
    uint64_t v43 = v66;
    sub_1D7A9D148();
    uint64_t v66 = v43;
    if (v43)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v61 + 8))(v64, v37);
      swift_bridgeObjectRelease();
      a1 = v59;
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    }
    swift_bridgeObjectRelease();
    sub_1D7969D70(v42, v71);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    int64_t v67 = v34;
    unint64_t v46 = sub_1D7A18648(v40);
    uint64_t v47 = v34[2];
    BOOL v48 = (v45 & 1) == 0;
    uint64_t v49 = v47 + v48;
    if (__OFADD__(v47, v48)) {
      break;
    }
    char v50 = v45;
    if (v34[3] >= v49)
    {
      uint64_t v39 = v64;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1D7973FB0();
        uint64_t v39 = v64;
      }
      uint64_t v53 = v71;
      uint64_t v34 = v67;
      if ((v50 & 1) == 0) {
        goto LABEL_18;
      }
    }
    else
    {
      sub_1D797156C(v49, isUniquelyReferenced_nonNull_native);
      unint64_t v51 = sub_1D7A18648(v40);
      if ((v50 & 1) != (v52 & 1)) {
        goto LABEL_25;
      }
      unint64_t v46 = v51;
      uint64_t v53 = v71;
      uint64_t v39 = v64;
      uint64_t v34 = v67;
      if ((v50 & 1) == 0)
      {
LABEL_18:
        v34[(v46 >> 6) + 8] |= 1 << v46;
        *(void *)(v34[6] + 8 * v46) = v40;
        sub_1D7969D70(v53, v34[7] + *(void *)(v65 + 72) * v46);
        uint64_t v54 = v34[2];
        BOOL v55 = __OFADD__(v54, 1);
        uint64_t v56 = v54 + 1;
        if (v55) {
          goto LABEL_24;
        }
        v34[2] = v56;
        goto LABEL_6;
      }
    }
    sub_1D7977AC4(v53, v34[7] + *(void *)(v65 + 72) * v46);
LABEL_6:
    swift_bridgeObjectRelease();
LABEL_7:
    v38 += 32;
    if (!--v36) {
      goto LABEL_21;
    }
  }
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  uint64_t result = sub_1D7A9D4F8();
  __break(1u);
  return result;
}

uint64_t IntegerKeyedAnyCodableDictionary.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v72 = type metadata accessor for AnyCodable();
  uint64_t v69 = *(void *)(v72 - 8);
  MEMORY[0x1F4188790](v72, v5, v6, v7, v8, v9, v10, v11);
  uint64_t v71 = (uint64_t)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8453A8);
  uint64_t v21 = MEMORY[0x1F4188790](v13 - 8, v14, v15, v16, v17, v18, v19, v20);
  uint64_t v23 = (int64_t *)((char *)&v65 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v21, v24, v25, v26, v27, v28, v29, v30);
  unint64_t v79 = (int64_t *)((char *)&v65 - v31);
  uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8453F0);
  uint64_t v66 = *(void *)(v74 - 8);
  MEMORY[0x1F4188790](v74, v32, v33, v34, v35, v36, v37, v38);
  uint64_t v40 = (char *)&v65 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = *v3;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1D7977A70();
  uint64_t v73 = v40;
  sub_1D7A9D6E8();
  uint64_t v42 = *(void *)(v41 + 64);
  uint64_t v67 = v41 + 64;
  uint64_t v43 = 1 << *(unsigned char *)(v41 + 32);
  uint64_t v44 = -1;
  if (v43 < 64) {
    uint64_t v44 = ~(-1 << v43);
  }
  unint64_t v45 = v44 & v42;
  int64_t v68 = (unint64_t)(v43 + 63) >> 6;
  int64_t v65 = v68 - 1;
  uint64_t v70 = v41;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v47 = 0;
  BOOL v48 = &qword_1EA8453B0;
  if (!v45) {
    goto LABEL_6;
  }
LABEL_4:
  unint64_t v49 = __clz(__rbit64(v45));
  v45 &= v45 - 1;
  unint64_t v50 = v49 | (v47 << 6);
LABEL_5:
  uint64_t v51 = *(void *)(v70 + 56);
  void *v23 = *(void *)(*(void *)(v70 + 48) + 8 * v50);
  uint64_t v52 = v51 + *(void *)(v69 + 72) * v50;
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(v48);
  sub_1D79776B4(v52, (uint64_t)v23 + *(int *)(v53 + 48));
  (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v23, 0, 1, v53);
  uint64_t v54 = v79;
  while (1)
  {
    sub_1D7871D78((uint64_t)v23, (uint64_t)v54, &qword_1EA8453A8);
    uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(v48);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v58 - 8) + 48))(v54, 1, v58) == 1)
    {
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v66 + 8))(v73, v74);
    }
    int64_t v59 = v47;
    uint64_t v60 = v48;
    uint64_t v61 = *v54;
    uint64_t v62 = v71;
    sub_1D7969D70((uint64_t)v54 + *(int *)(v58 + 48), v71);
    uint64_t v75 = v61;
    uint64_t v75 = sub_1D7A9D258();
    uint64_t v76 = v63;
    uint64_t v77 = v61;
    char v78 = 0;
    sub_1D7977870(&qword_1EA843D90, (void (*)(uint64_t))type metadata accessor for AnyCodable);
    sub_1D7A9D228();
    if (v2)
    {
      sub_1D7977718(v62);
      swift_release();
      (*(void (**)(char *, uint64_t))(v66 + 8))(v73, v74);
      return swift_bridgeObjectRelease();
    }
    sub_1D7977718(v62);
    uint64_t result = swift_bridgeObjectRelease();
    BOOL v48 = v60;
    int64_t v47 = v59;
    if (v45) {
      goto LABEL_4;
    }
LABEL_6:
    int64_t v55 = v47 + 1;
    if (__OFADD__(v47, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v55 >= v68)
    {
      uint64_t v54 = v79;
      goto LABEL_11;
    }
    unint64_t v56 = *(void *)(v67 + 8 * v55);
    uint64_t v54 = v79;
    if (v56) {
      goto LABEL_9;
    }
    v47 += 2;
    if (v55 + 1 >= v68)
    {
      int64_t v47 = v55;
      goto LABEL_11;
    }
    unint64_t v56 = *(void *)(v67 + 8 * v47);
    if (v56)
    {
      ++v55;
LABEL_9:
      unint64_t v45 = (v56 - 1) & v56;
      unint64_t v50 = __clz(__rbit64(v56)) + (v55 << 6);
      int64_t v47 = v55;
      goto LABEL_5;
    }
    if (v55 + 2 < v68) {
      break;
    }
LABEL_11:
    uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(v48);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v23, 1, 1, v57);
    unint64_t v45 = 0;
  }
  unint64_t v56 = *(void *)(v67 + 8 * (v55 + 2));
  if (v56)
  {
    v55 += 2;
    goto LABEL_9;
  }
  int64_t v64 = v55 + 3;
  if (v55 + 3 >= v68)
  {
    int64_t v47 = v55 + 2;
    goto LABEL_11;
  }
  unint64_t v56 = *(void *)(v67 + 8 * v64);
  if (v56)
  {
    v55 += 3;
    goto LABEL_9;
  }
  while (1)
  {
    int64_t v55 = v64 + 1;
    if (__OFADD__(v64, 1)) {
      break;
    }
    if (v55 >= v68)
    {
      int64_t v47 = v65;
      goto LABEL_11;
    }
    unint64_t v56 = *(void *)(v67 + 8 * v55);
    ++v64;
    if (v56) {
      goto LABEL_9;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t IntegerKeyedAnyCodableDictionary.hash(into:)(uint64_t a1)
{
  return sub_1D796EA0C(a1, (void (*)(uint64_t, uint64_t))sub_1D7974FAC);
}

uint64_t sub_1D796EA0C(uint64_t a1, void (*a2)(uint64_t, uint64_t))
{
  uint64_t v5 = *v2;
  swift_bridgeObjectRetain();
  a2(a1, v5);
  return swift_bridgeObjectRelease();
}

uint64_t IntegerKeyedAnyCodableDictionary.hashValue.getter()
{
  return sub_1D796EA80((void (*)(unsigned char *, uint64_t))sub_1D7974FAC);
}

uint64_t sub_1D796EA80(void (*a1)(unsigned char *, uint64_t))
{
  uint64_t v3 = *v1;
  sub_1D7A9D5D8();
  swift_bridgeObjectRetain();
  a1(v5, v3);
  swift_bridgeObjectRelease();
  return sub_1D7A9D628();
}

uint64_t sub_1D796EAE0(uint64_t a1, uint64_t a2)
{
  return sub_1D796EAF8(a1, a2, (void (*)(unsigned char *, uint64_t))sub_1D7974FAC);
}

uint64_t sub_1D796EAF8(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *, uint64_t))
{
  uint64_t v5 = *v3;
  sub_1D7A9D5D8();
  swift_bridgeObjectRetain();
  a3(v7, v5);
  swift_bridgeObjectRelease();
  return sub_1D7A9D628();
}

uint64_t sub_1D796EB58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D796EB70(a1, a2, a3, (void (*)(uint64_t, uint64_t))sub_1D7974FAC);
}

uint64_t sub_1D796EB70(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v7 = *v4;
  swift_bridgeObjectRetain();
  a4(a1, v7);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D796EBCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D796EBE4(a1, a2, a3, (void (*)(unsigned char *, uint64_t))sub_1D7974FAC);
}

uint64_t sub_1D796EBE4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *, uint64_t))
{
  uint64_t v6 = *v4;
  sub_1D7A9D5D8();
  swift_bridgeObjectRetain();
  a4(v8, v6);
  swift_bridgeObjectRelease();
  return sub_1D7A9D628();
}

uint64_t sub_1D796EC40@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return IntegerKeyedAnyCodableDictionary.init(from:)(a1, a2);
}

uint64_t sub_1D796EC58(void *a1)
{
  return IntegerKeyedAnyCodableDictionary.encode(to:)(a1);
}

uint64_t sub_1D796EC74(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA842280);
    uint64_t v2 = sub_1D7A9CFE8();
    uint64_t v18 = v2;
    sub_1D7A9CED8();
    uint64_t v3 = sub_1D7A9CF68();
    if (v3)
    {
      uint64_t v4 = v3;
      sub_1D78C4038(0, (unint64_t *)&qword_1EBDF93C0);
      do
      {
        swift_dynamicCast();
        sub_1D78C4038(0, (unint64_t *)&qword_1EBDF7920);
        swift_dynamicCast();
        uint64_t v2 = v18;
        unint64_t v12 = *(void *)(v18 + 16);
        if (*(void *)(v18 + 24) <= v12)
        {
          sub_1D7970EF4(v12 + 1, 1);
          uint64_t v2 = v18;
        }
        uint64_t result = sub_1D7A9C948();
        uint64_t v6 = v2 + 64;
        uint64_t v7 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v8 = result & ~v7;
        unint64_t v9 = v8 >> 6;
        if (((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6))) != 0)
        {
          unint64_t v10 = __clz(__rbit64((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6)))) | v8 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v13 = 0;
          unint64_t v14 = (unint64_t)(63 - v7) >> 6;
          do
          {
            if (++v9 == v14 && (v13 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v15 = v9 == v14;
            if (v9 == v14) {
              unint64_t v9 = 0;
            }
            v13 |= v15;
            uint64_t v16 = *(void *)(v6 + 8 * v9);
          }
          while (v16 == -1);
          unint64_t v10 = __clz(__rbit64(~v16)) + (v9 << 6);
        }
        *(void *)(v6 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        uint64_t v11 = 8 * v10;
        *(void *)(*(void *)(v2 + 48) + v11) = v17;
        *(void *)(*(void *)(v2 + 56) + v11) = v4;
        ++*(void *)(v2 + 16);
        uint64_t v4 = sub_1D7A9CF68();
      }
      while (v4);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC868];
  }
  return v2;
}

uint64_t sub_1D796EEC8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF8670);
  uint64_t v6 = sub_1D7A9CFD8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v32 = v2;
  uint64_t v33 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v11) {
      break;
    }
    uint64_t v19 = (void *)(v5 + 64);
    unint64_t v20 = *(void *)(v33 + 8 * v18);
    ++v14;
    if (!v20)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v11) {
        goto LABEL_34;
      }
      unint64_t v20 = *(void *)(v33 + 8 * v14);
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v11)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v32;
          if ((a2 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v20 = *(void *)(v33 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            int64_t v14 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_43;
            }
            if (v14 >= v11) {
              goto LABEL_34;
            }
            unint64_t v20 = *(void *)(v33 + 8 * v14);
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v21;
      }
    }
LABEL_21:
    unint64_t v10 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_22:
    char v22 = *(unsigned char *)(*(void *)(v5 + 48) + v17);
    uint64_t v23 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
    if (a2) {
      sub_1D7860E50(v23, v34);
    }
    else {
      sub_1D78907D8((uint64_t)v23, (uint64_t)v34);
    }
    sub_1D7A9D5D8();
    DIPError.PropertyKey.rawValue.getter();
    sub_1D7A9C0B8();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1D7A9D628();
    uint64_t v24 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v25 = result & ~v24;
    unint64_t v26 = v25 >> 6;
    if (((-1 << v25) & ~*(void *)(v12 + 8 * (v25 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v25) & ~*(void *)(v12 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v29 = v26 == v28;
        if (v26 == v28) {
          unint64_t v26 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v12 + 8 * v26);
      }
      while (v30 == -1);
      unint64_t v15 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(unsigned char *)(*(void *)(v7 + 48) + v15) = v22;
    uint64_t result = (uint64_t)sub_1D7860E50(v34, (_OWORD *)(*(void *)(v7 + 56) + 32 * v15));
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v32;
  uint64_t v19 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
  if (v31 >= 64) {
    bzero(v19, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v19 = -1 << v31;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1D796F1D8(uint64_t a1, char a2)
{
  return sub_1D796F214(a1, a2, &qword_1EA842218);
}

uint64_t sub_1D796F1E4(uint64_t a1, char a2)
{
  return sub_1D796F214(a1, a2, &qword_1EA842238);
}

uint64_t sub_1D796F1F0(uint64_t a1, char a2)
{
  return sub_1D796F214(a1, a2, &qword_1EA842230);
}

uint64_t sub_1D796F1FC(uint64_t a1, char a2)
{
  return sub_1D796F214(a1, a2, &qword_1EA842220);
}

uint64_t sub_1D796F208(uint64_t a1, char a2)
{
  return sub_1D796F214(a1, a2, &qword_1EA8421D0);
}

uint64_t sub_1D796F214(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  char v7 = a2;
  uint64_t v8 = sub_1D7A9CFD8();
  uint64_t v9 = v8;
  if (*(void *)(v6 + 16))
  {
    uint64_t v10 = 1 << *(unsigned char *)(v6 + 32);
    uint64_t v37 = (void *)(v6 + 64);
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v6 + 64);
    int64_t v36 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v13 = v8 + 64;
    uint64_t result = swift_retain();
    int64_t v15 = 0;
    while (1)
    {
      if (v12)
      {
        unint64_t v22 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v23 = v22 | (v15 << 6);
      }
      else
      {
        int64_t v24 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v24 >= v36) {
          goto LABEL_33;
        }
        unint64_t v25 = v37[v24];
        ++v15;
        if (!v25)
        {
          int64_t v15 = v24 + 1;
          if (v24 + 1 >= v36) {
            goto LABEL_33;
          }
          unint64_t v25 = v37[v15];
          if (!v25)
          {
            int64_t v26 = v24 + 2;
            if (v26 >= v36)
            {
LABEL_33:
              swift_release();
              uint64_t v4 = v3;
              if (v7)
              {
                uint64_t v35 = 1 << *(unsigned char *)(v6 + 32);
                if (v35 >= 64) {
                  bzero(v37, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v37 = -1 << v35;
                }
                *(void *)(v6 + 16) = 0;
              }
              break;
            }
            unint64_t v25 = v37[v26];
            if (!v25)
            {
              while (1)
              {
                int64_t v15 = v26 + 1;
                if (__OFADD__(v26, 1)) {
                  goto LABEL_40;
                }
                if (v15 >= v36) {
                  goto LABEL_33;
                }
                unint64_t v25 = v37[v15];
                ++v26;
                if (v25) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v15 = v26;
          }
        }
LABEL_30:
        unint64_t v12 = (v25 - 1) & v25;
        unint64_t v23 = __clz(__rbit64(v25)) + (v15 << 6);
      }
      uint64_t v31 = 16 * v23;
      uint64_t v32 = (uint64_t *)(*(void *)(v6 + 48) + v31);
      uint64_t v34 = *v32;
      uint64_t v33 = v32[1];
      long long v38 = *(_OWORD *)(*(void *)(v6 + 56) + v31);
      if ((v7 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_retain();
      }
      sub_1D7A9D5D8();
      sub_1D7A9C0B8();
      uint64_t result = sub_1D7A9D628();
      uint64_t v16 = -1 << *(unsigned char *)(v9 + 32);
      unint64_t v17 = result & ~v16;
      unint64_t v18 = v17 >> 6;
      if (((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6))) != 0)
      {
        unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v27 = 0;
        unint64_t v28 = (unint64_t)(63 - v16) >> 6;
        do
        {
          if (++v18 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v29 = v18 == v28;
          if (v18 == v28) {
            unint64_t v18 = 0;
          }
          v27 |= v29;
          uint64_t v30 = *(void *)(v13 + 8 * v18);
        }
        while (v30 == -1);
        unint64_t v19 = __clz(__rbit64(~v30)) + (v18 << 6);
      }
      *(void *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      uint64_t v20 = 16 * v19;
      int64_t v21 = (void *)(*(void *)(v9 + 48) + v20);
      void *v21 = v34;
      v21[1] = v33;
      *(_OWORD *)(*(void *)(v9 + 56) + v20) = v38;
      ++*(void *)(v9 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v4 = v9;
  return result;
}

uint64_t sub_1D796F51C(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v51 = sub_1D7A9CEA8();
  uint64_t v5 = *(void *)(v51 - 8);
  MEMORY[0x1F4188790](v51, v6, v7, v8, v9, v10, v11, v12);
  int64_t v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845458);
  int v52 = a2;
  uint64_t v16 = sub_1D7A9CFD8();
  uint64_t v17 = v16;
  if (*(void *)(v15 + 16))
  {
    unint64_t v45 = v2;
    uint64_t v18 = 1 << *(unsigned char *)(v15 + 32);
    uint64_t v19 = *(void *)(v15 + 64);
    int64_t v47 = (void *)(v15 + 64);
    if (v18 < 64) {
      uint64_t v20 = ~(-1 << v18);
    }
    else {
      uint64_t v20 = -1;
    }
    unint64_t v21 = v20 & v19;
    int64_t v46 = (unint64_t)(v18 + 63) >> 6;
    BOOL v48 = (void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v53 = (void (**)(char *, unint64_t, uint64_t))(v5 + 32);
    uint64_t v22 = v16 + 64;
    uint64_t result = swift_retain();
    int64_t v24 = 0;
    uint64_t v49 = v15;
    unint64_t v50 = v14;
    while (1)
    {
      if (v21)
      {
        unint64_t v26 = __clz(__rbit64(v21));
        v21 &= v21 - 1;
        unint64_t v27 = v26 | (v24 << 6);
      }
      else
      {
        int64_t v28 = v24 + 1;
        if (__OFADD__(v24, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v28 >= v46) {
          goto LABEL_34;
        }
        unint64_t v29 = v47[v28];
        ++v24;
        if (!v29)
        {
          int64_t v24 = v28 + 1;
          if (v28 + 1 >= v46) {
            goto LABEL_34;
          }
          unint64_t v29 = v47[v24];
          if (!v29)
          {
            int64_t v30 = v28 + 2;
            if (v30 >= v46)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v45;
              if (v52)
              {
                uint64_t v43 = 1 << *(unsigned char *)(v15 + 32);
                if (v43 >= 64) {
                  bzero(v47, ((unint64_t)(v43 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int64_t v47 = -1 << v43;
                }
                *(void *)(v15 + 16) = 0;
              }
              break;
            }
            unint64_t v29 = v47[v30];
            if (!v29)
            {
              while (1)
              {
                int64_t v24 = v30 + 1;
                if (__OFADD__(v30, 1)) {
                  goto LABEL_41;
                }
                if (v24 >= v46) {
                  goto LABEL_34;
                }
                unint64_t v29 = v47[v24];
                ++v30;
                if (v29) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v24 = v30;
          }
        }
LABEL_21:
        unint64_t v21 = (v29 - 1) & v29;
        unint64_t v27 = __clz(__rbit64(v29)) + (v24 << 6);
      }
      uint64_t v31 = v5;
      uint64_t v32 = *(void *)(v5 + 72);
      unint64_t v33 = *(void *)(v15 + 48) + v32 * v27;
      uint64_t v34 = v50;
      uint64_t v35 = v51;
      if (v52)
      {
        (*v53)(v50, v33, v51);
        sub_1D7860E50((_OWORD *)(*(void *)(v15 + 56) + 32 * v27), v54);
      }
      else
      {
        (*v48)(v50, v33, v51);
        sub_1D78907D8(*(void *)(v15 + 56) + 32 * v27, (uint64_t)v54);
      }
      uint64_t result = sub_1D7A9BEF8();
      uint64_t v36 = -1 << *(unsigned char *)(v17 + 32);
      unint64_t v37 = result & ~v36;
      unint64_t v38 = v37 >> 6;
      if (((-1 << v37) & ~*(void *)(v22 + 8 * (v37 >> 6))) != 0)
      {
        unint64_t v25 = __clz(__rbit64((-1 << v37) & ~*(void *)(v22 + 8 * (v37 >> 6)))) | v37 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v39 = 0;
        unint64_t v40 = (unint64_t)(63 - v36) >> 6;
        do
        {
          if (++v38 == v40 && (v39 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v41 = v38 == v40;
          if (v38 == v40) {
            unint64_t v38 = 0;
          }
          v39 |= v41;
          uint64_t v42 = *(void *)(v22 + 8 * v38);
        }
        while (v42 == -1);
        unint64_t v25 = __clz(__rbit64(~v42)) + (v38 << 6);
      }
      *(void *)(v22 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
      (*v53)((char *)(*(void *)(v17 + 48) + v32 * v25), (unint64_t)v34, v35);
      uint64_t result = (uint64_t)sub_1D7860E50(v54, (_OWORD *)(*(void *)(v17 + 56) + 32 * v25));
      ++*(void *)(v17 + 16);
      uint64_t v5 = v31;
      uint64_t v15 = v49;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v17;
  return result;
}

uint64_t sub_1D796F918(uint64_t a1, char a2)
{
  return sub_1D7971F2C(a1, a2, &qword_1EA842308);
}

uint64_t sub_1D796F924(uint64_t a1, int a2)
{
  return sub_1D79718CC(a1, a2, &qword_1EA842300, &qword_1EA8422F8);
}

uint64_t sub_1D796F938(uint64_t a1, char a2)
{
  return sub_1D7971F2C(a1, a2, &qword_1EA8422E8);
}

uint64_t sub_1D796F944(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8422E0);
  uint64_t result = sub_1D7A9CFD8();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v30 = v3;
    int64_t v8 = 0;
    uint64_t v9 = (void *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v20 = v19 | (v8 << 6);
      }
      else
      {
        int64_t v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v21 >= v13) {
          goto LABEL_33;
        }
        unint64_t v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          int64_t v8 = v21 + 1;
          if (v21 + 1 >= v13) {
            goto LABEL_33;
          }
          unint64_t v22 = v9[v8];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v13)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v30;
                goto LABEL_40;
              }
              uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
              if (v29 >= 64) {
                bzero((void *)(v5 + 64), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v9 = -1 << v29;
              }
              uint64_t v3 = v30;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v8 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v13) {
                  goto LABEL_33;
                }
                unint64_t v22 = v9[v8];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v23;
          }
        }
LABEL_30:
        unint64_t v12 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      uint64_t v28 = *(void *)(*(void *)(v5 + 48) + 8 * v20);
      long long v31 = *(_OWORD *)(*(void *)(v5 + 56) + 16 * v20);
      if ((a2 & 1) == 0) {
        sub_1D7860790(v31, *((unint64_t *)&v31 + 1));
      }
      uint64_t result = sub_1D7A9D5C8();
      uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v16 = result & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v14 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v14 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v26 = v17 == v25;
          if (v17 == v25) {
            unint64_t v17 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v14 + 8 * v17);
        }
        while (v27 == -1);
        unint64_t v18 = __clz(__rbit64(~v27)) + (v17 << 6);
      }
      *(void *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(void *)(*(void *)(v7 + 48) + 8 * v18) = v28;
      *(_OWORD *)(*(void *)(v7 + 56) + 16 * v18) = v31;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1D796FC0C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8422C0);
  char v40 = a2;
  uint64_t v6 = sub_1D7A9CFD8();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    unint64_t v38 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v37 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    for (i = v5; ; uint64_t v5 = i)
    {
      if (v10)
      {
        unint64_t v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v21 = v20 | (v13 << 6);
      }
      else
      {
        int64_t v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37) {
          goto LABEL_33;
        }
        unint64_t v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          int64_t v13 = v22 + 1;
          if (v22 + 1 >= v37) {
            goto LABEL_33;
          }
          unint64_t v23 = v38[v13];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v40)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
                if (v36 >= 64) {
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v38 = -1 << v36;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v13 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v37) {
                  goto LABEL_33;
                }
                unint64_t v23 = v38[v13];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v24;
          }
        }
LABEL_30:
        unint64_t v10 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
      uint64_t v31 = *v29;
      uint64_t v30 = v29[1];
      uint64_t v32 = (uint64_t *)(*(void *)(v5 + 56) + 32 * v21);
      uint64_t v33 = *v32;
      uint64_t v34 = v32[1];
      uint64_t v35 = v32[3];
      uint64_t v41 = v32[2];
      if ((v40 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_1D7A9D5D8();
      sub_1D7A9C0B8();
      uint64_t result = sub_1D7A9D628();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v16 == v26;
          if (v16 == v26) {
            unint64_t v16 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
      void *v18 = v31;
      v18[1] = v30;
      unint64_t v19 = (void *)(*(void *)(v7 + 56) + 32 * v17);
      *unint64_t v19 = v33;
      v19[1] = v34;
      v19[2] = v41;
      v19[3] = v35;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1D796FF38(uint64_t a1, char a2)
{
  return sub_1D79705B4(a1, a2, &qword_1EBDF9668, (void (*)(uint64_t, unsigned char *))sub_1D7860E50);
}

uint64_t sub_1D796FF58(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF7928);
  char v38 = a2;
  uint64_t v6 = sub_1D7A9CFD8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v37 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v36) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v37 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void **)(*(void *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v33 = v32;
    }
    sub_1D7A9D5D8();
    sub_1D7A9C0B8();
    uint64_t result = sub_1D7A9D628();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    void *v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  int64_t v22 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1D7970268(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF99A0);
  char v40 = a2;
  uint64_t v6 = sub_1D7A9CFD8();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    char v38 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v37 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    for (i = v5; ; uint64_t v5 = i)
    {
      if (v10)
      {
        unint64_t v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v21 = v20 | (v13 << 6);
      }
      else
      {
        int64_t v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37) {
          goto LABEL_33;
        }
        unint64_t v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          int64_t v13 = v22 + 1;
          if (v22 + 1 >= v37) {
            goto LABEL_33;
          }
          unint64_t v23 = v38[v13];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v40)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
                if (v36 >= 64) {
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *char v38 = -1 << v36;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v13 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v37) {
                  goto LABEL_33;
                }
                unint64_t v23 = v38[v13];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v24;
          }
        }
LABEL_30:
        unint64_t v10 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
      uint64_t v30 = *v29;
      uint64_t v31 = v29[1];
      uint64_t v32 = *(void *)(v5 + 56) + 24 * v21;
      uint64_t v34 = *(void *)v32;
      uint64_t v33 = *(void *)(v32 + 8);
      char v35 = *(unsigned char *)(v32 + 16);
      if ((v40 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        sub_1D78E988C();
      }
      sub_1D7A9D5D8();
      sub_1D7A9C0B8();
      uint64_t result = sub_1D7A9D628();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v16 == v26;
          if (v16 == v26) {
            unint64_t v16 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
      void *v18 = v30;
      v18[1] = v31;
      uint64_t v19 = *(void *)(v7 + 56) + 24 * v17;
      *(void *)uint64_t v19 = v34;
      *(void *)(v19 + 8) = v33;
      *(unsigned char *)(v19 + 16) = v35;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1D7970594(uint64_t a1, char a2)
{
  return sub_1D79705B4(a1, a2, &qword_1EA842260, (void (*)(uint64_t, unsigned char *))sub_1D7860E50);
}

uint64_t sub_1D79705B4(uint64_t a1, char a2, uint64_t *a3, void (*a4)(uint64_t, unsigned char *))
{
  uint64_t v6 = v4;
  uint64_t v8 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  char v39 = a2;
  uint64_t v9 = sub_1D7A9CFD8();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v38 = v8 + 64;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & *(void *)(v8 + 64);
  int64_t v37 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v14 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v13)
    {
      unint64_t v19 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v20 = v19 | (v16 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v37) {
      break;
    }
    int64_t v22 = (void *)(v8 + 64);
    unint64_t v23 = *(void *)(v38 + 8 * v21);
    ++v16;
    if (!v23)
    {
      int64_t v16 = v21 + 1;
      if (v21 + 1 >= v37) {
        goto LABEL_34;
      }
      unint64_t v23 = *(void *)(v38 + 8 * v16);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v37)
        {
LABEL_34:
          swift_release();
          if ((v39 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = *(void *)(v38 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v16 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v16 >= v37) {
              goto LABEL_34;
            }
            unint64_t v23 = *(void *)(v38 + 8 * v16);
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v16 = v24;
      }
    }
LABEL_21:
    unint64_t v13 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v16 << 6);
LABEL_22:
    char v25 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v20);
    uint64_t v27 = *v25;
    uint64_t v26 = v25[1];
    uint64_t v28 = *(void *)(v8 + 56) + 32 * v20;
    if (v39)
    {
      a4(v28, v40);
    }
    else
    {
      sub_1D78907D8(v28, (uint64_t)v40);
      swift_bridgeObjectRetain();
    }
    sub_1D7A9D5D8();
    sub_1D7A9C0B8();
    uint64_t result = sub_1D7A9D628();
    uint64_t v29 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v30 = result & ~v29;
    unint64_t v31 = v30 >> 6;
    if (((-1 << v30) & ~*(void *)(v14 + 8 * (v30 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v30) & ~*(void *)(v14 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v32 = 0;
      unint64_t v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v34 = v31 == v33;
        if (v31 == v33) {
          unint64_t v31 = 0;
        }
        v32 |= v34;
        uint64_t v35 = *(void *)(v14 + 8 * v31);
      }
      while (v35 == -1);
      unint64_t v17 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(void *)(v14 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v10 + 48) + 16 * v17);
    void *v18 = v27;
    v18[1] = v26;
    uint64_t result = ((uint64_t (*)(unsigned char *, unint64_t))a4)(v40, *(void *)(v10 + 56) + 32 * v17);
    ++*(void *)(v10 + 16);
  }
  swift_release();
  int64_t v22 = (void *)(v8 + 64);
  if ((v39 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v36 = 1 << *(unsigned char *)(v8 + 32);
  if (v36 >= 64) {
    bzero(v22, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v36;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v6 = v10;
  return result;
}

uint64_t sub_1D79708E4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8422A0);
  char v34 = a2;
  uint64_t result = sub_1D7A9CFD8();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    unint64_t v33 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v32 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v32) {
          goto LABEL_33;
        }
        unint64_t v21 = v33[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v32) {
            goto LABEL_33;
          }
          unint64_t v21 = v33[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v32)
            {
LABEL_33:
              if ((v34 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
              if (v31 >= 64) {
                bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *unint64_t v33 = -1 << v31;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v21 = v33[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v32) {
                  goto LABEL_33;
                }
                unint64_t v21 = v33[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      char v27 = *(unsigned char *)(*(void *)(v5 + 48) + v19);
      uint64_t v28 = (uint64_t *)(*(void *)(v5 + 56) + 16 * v19);
      uint64_t v29 = *v28;
      uint64_t v30 = v28[1];
      if ((v34 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_1D7A9D5D8();
      sub_1D7A9D5E8();
      uint64_t result = sub_1D7A9D628();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v25 = v15 == v24;
          if (v15 == v24) {
            unint64_t v15 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(unsigned char *)(*(void *)(v7 + 48) + v16) = v27;
      unint64_t v17 = (void *)(*(void *)(v7 + 56) + 16 * v16);
      *unint64_t v17 = v29;
      v17[1] = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1D7970BCC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF93D0);
  char v42 = a2;
  uint64_t v6 = sub_1D7A9CFD8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  char v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40) {
      break;
    }
    unint64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v40) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v41 + 8 * v13);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v39;
          if ((v42 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v13 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v40) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v41 + 8 * v13);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    int64_t v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    uint64_t v35 = (uint64_t *)(*(void *)(v5 + 56) + v31);
    uint64_t v36 = *v35;
    uint64_t v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1D7A9D5D8();
    sub_1D7A9C0B8();
    uint64_t result = sub_1D7A9D628();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v16 == v28;
        if (v16 == v28) {
          unint64_t v16 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 16 * v17;
    unint64_t v19 = (void *)(*(void *)(v7 + 48) + v18);
    *unint64_t v19 = v34;
    v19[1] = v33;
    int64_t v20 = (void *)(*(void *)(v7 + 56) + v18);
    *int64_t v20 = v36;
    v20[1] = v37;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  unint64_t v24 = (void *)(v5 + 64);
  if ((v42 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v24 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1D7970EF4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA842280);
  uint64_t v6 = sub_1D7A9CFD8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v2;
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    int64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v37 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v37 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v36;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v37 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = 8 * v21;
    uint64_t v31 = *(void **)(*(void *)(v5 + 48) + v30);
    int64_t v32 = *(void **)(*(void *)(v5 + 56) + v30);
    if ((a2 & 1) == 0)
    {
      id v33 = v31;
      id v34 = v32;
    }
    uint64_t result = sub_1D7A9C948();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = 8 * v18;
    *(void *)(*(void *)(v7 + 48) + v19) = v31;
    *(void *)(*(void *)(v7 + 56) + v19) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v36;
  int64_t v23 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v23 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1D79711C8(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for AnyCodable();
  uint64_t v49 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8, v6, v7, v8, v9, v10, v11, v12);
  int64_t v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8422B8);
  int v50 = a2;
  uint64_t v16 = sub_1D7A9CFD8();
  uint64_t v17 = v16;
  if (!*(void *)(v15 + 16)) {
    goto LABEL_41;
  }
  uint64_t v18 = 1 << *(unsigned char *)(v15 + 32);
  uint64_t v19 = *(void *)(v15 + 64);
  BOOL v48 = (void *)(v15 + 64);
  if (v18 < 64) {
    uint64_t v20 = ~(-1 << v18);
  }
  else {
    uint64_t v20 = -1;
  }
  unint64_t v21 = v20 & v19;
  int64_t v46 = v2;
  int64_t v47 = (unint64_t)(v18 + 63) >> 6;
  uint64_t v22 = v16 + 64;
  uint64_t result = swift_retain();
  int64_t v24 = 0;
  while (1)
  {
    if (v21)
    {
      unint64_t v27 = __clz(__rbit64(v21));
      v21 &= v21 - 1;
      unint64_t v28 = v27 | (v24 << 6);
      goto LABEL_22;
    }
    int64_t v29 = v24 + 1;
    if (__OFADD__(v24, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v29 >= v47) {
      break;
    }
    uint64_t v30 = v48;
    unint64_t v31 = v48[v29];
    ++v24;
    if (!v31)
    {
      int64_t v24 = v29 + 1;
      if (v29 + 1 >= v47) {
        goto LABEL_34;
      }
      unint64_t v31 = v48[v24];
      if (!v31)
      {
        int64_t v32 = v29 + 2;
        if (v32 >= v47)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v46;
          if ((v50 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v31 = v48[v32];
        if (!v31)
        {
          while (1)
          {
            int64_t v24 = v32 + 1;
            if (__OFADD__(v32, 1)) {
              goto LABEL_43;
            }
            if (v24 >= v47) {
              goto LABEL_34;
            }
            unint64_t v31 = v48[v24];
            ++v32;
            if (v31) {
              goto LABEL_21;
            }
          }
        }
        int64_t v24 = v32;
      }
    }
LABEL_21:
    unint64_t v21 = (v31 - 1) & v31;
    unint64_t v28 = __clz(__rbit64(v31)) + (v24 << 6);
LABEL_22:
    id v33 = (uint64_t *)(*(void *)(v15 + 48) + 16 * v28);
    uint64_t v35 = *v33;
    uint64_t v34 = v33[1];
    uint64_t v36 = *(void *)(v49 + 72);
    uint64_t v37 = *(void *)(v15 + 56) + v36 * v28;
    if (v50)
    {
      sub_1D7969D70(v37, (uint64_t)v14);
    }
    else
    {
      sub_1D79776B4(v37, (uint64_t)v14);
      swift_bridgeObjectRetain();
    }
    sub_1D7A9D5D8();
    sub_1D7A9C0B8();
    uint64_t result = sub_1D7A9D628();
    uint64_t v38 = -1 << *(unsigned char *)(v17 + 32);
    unint64_t v39 = result & ~v38;
    unint64_t v40 = v39 >> 6;
    if (((-1 << v39) & ~*(void *)(v22 + 8 * (v39 >> 6))) != 0)
    {
      unint64_t v25 = __clz(__rbit64((-1 << v39) & ~*(void *)(v22 + 8 * (v39 >> 6)))) | v39 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v41 = 0;
      unint64_t v42 = (unint64_t)(63 - v38) >> 6;
      do
      {
        if (++v40 == v42 && (v41 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v43 = v40 == v42;
        if (v40 == v42) {
          unint64_t v40 = 0;
        }
        v41 |= v43;
        uint64_t v44 = *(void *)(v22 + 8 * v40);
      }
      while (v44 == -1);
      unint64_t v25 = __clz(__rbit64(~v44)) + (v40 << 6);
    }
    *(void *)(v22 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
    char v26 = (void *)(*(void *)(v17 + 48) + 16 * v25);
    void *v26 = v35;
    v26[1] = v34;
    uint64_t result = sub_1D7969D70((uint64_t)v14, *(void *)(v17 + 56) + v36 * v25);
    ++*(void *)(v17 + 16);
  }
  swift_release();
  uint64_t v3 = v46;
  uint64_t v30 = v48;
  if ((v50 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v45 = 1 << *(unsigned char *)(v15 + 32);
  if (v45 >= 64) {
    bzero(v30, ((unint64_t)(v45 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v30 = -1 << v45;
  }
  *(void *)(v15 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v17;
  return result;
}

uint64_t sub_1D797156C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for AnyCodable();
  uint64_t v45 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8, v6, v7, v8, v9, v10, v11, v12);
  int64_t v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA842278);
  char v16 = a2;
  uint64_t result = sub_1D7A9CFD8();
  uint64_t v18 = result;
  if (*(void *)(v15 + 16))
  {
    unint64_t v42 = v3;
    int64_t v19 = 0;
    uint64_t v20 = *(void *)(v15 + 64);
    uint64_t v44 = (void *)(v15 + 64);
    uint64_t v21 = 1 << *(unsigned char *)(v15 + 32);
    if (v21 < 64) {
      uint64_t v22 = ~(-1 << v21);
    }
    else {
      uint64_t v22 = -1;
    }
    unint64_t v23 = v22 & v20;
    int64_t v43 = (unint64_t)(v21 + 63) >> 6;
    uint64_t v24 = result + 64;
    while (1)
    {
      if (v23)
      {
        unint64_t v26 = __clz(__rbit64(v23));
        v23 &= v23 - 1;
        unint64_t v27 = v26 | (v19 << 6);
      }
      else
      {
        int64_t v28 = v19 + 1;
        if (__OFADD__(v19, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v44;
        if (v28 >= v43) {
          goto LABEL_34;
        }
        unint64_t v29 = v44[v28];
        ++v19;
        if (!v29)
        {
          int64_t v19 = v28 + 1;
          if (v28 + 1 >= v43) {
            goto LABEL_34;
          }
          unint64_t v29 = v44[v19];
          if (!v29)
          {
            int64_t v30 = v28 + 2;
            if (v30 >= v43)
            {
LABEL_34:
              if ((v16 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v42;
                goto LABEL_41;
              }
              uint64_t v41 = 1 << *(unsigned char *)(v15 + 32);
              if (v41 >= 64) {
                bzero(v44, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v44 = -1 << v41;
              }
              uint64_t v3 = v42;
              *(void *)(v15 + 16) = 0;
              break;
            }
            unint64_t v29 = v44[v30];
            if (!v29)
            {
              while (1)
              {
                int64_t v19 = v30 + 1;
                if (__OFADD__(v30, 1)) {
                  goto LABEL_43;
                }
                if (v19 >= v43) {
                  goto LABEL_34;
                }
                unint64_t v29 = v44[v19];
                ++v30;
                if (v29) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v19 = v30;
          }
        }
LABEL_21:
        unint64_t v23 = (v29 - 1) & v29;
        unint64_t v27 = __clz(__rbit64(v29)) + (v19 << 6);
      }
      uint64_t v31 = *(void *)(*(void *)(v15 + 48) + 8 * v27);
      uint64_t v32 = *(void *)(v45 + 72);
      uint64_t v33 = *(void *)(v15 + 56) + v32 * v27;
      if (v16) {
        sub_1D7969D70(v33, (uint64_t)v14);
      }
      else {
        sub_1D79776B4(v33, (uint64_t)v14);
      }
      uint64_t result = sub_1D7A9D5C8();
      uint64_t v34 = -1 << *(unsigned char *)(v18 + 32);
      unint64_t v35 = result & ~v34;
      unint64_t v36 = v35 >> 6;
      if (((-1 << v35) & ~*(void *)(v24 + 8 * (v35 >> 6))) != 0)
      {
        unint64_t v25 = __clz(__rbit64((-1 << v35) & ~*(void *)(v24 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v37 = 0;
        unint64_t v38 = (unint64_t)(63 - v34) >> 6;
        do
        {
          if (++v36 == v38 && (v37 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v39 = v36 == v38;
          if (v36 == v38) {
            unint64_t v36 = 0;
          }
          v37 |= v39;
          uint64_t v40 = *(void *)(v24 + 8 * v36);
        }
        while (v40 == -1);
        unint64_t v25 = __clz(__rbit64(~v40)) + (v36 << 6);
      }
      *(void *)(v24 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
      *(void *)(*(void *)(v18 + 48) + 8 * v25) = v31;
      uint64_t result = sub_1D7969D70((uint64_t)v14, *(void *)(v18 + 56) + v32 * v25);
      ++*(void *)(v18 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_41:
  *uint64_t v3 = v18;
  return result;
}

uint64_t sub_1D79718B8(uint64_t a1, int a2)
{
  return sub_1D79718CC(a1, a2, &qword_1EBDF9118, &qword_1EBDF93D8);
}

uint64_t sub_1D79718CC(uint64_t a1, int a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v6 = v4;
  int64_t v55 = a3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v53 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8 - 8, v9, v10, v11, v12, v13, v14, v15);
  uint64_t v17 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  int v54 = a2;
  uint64_t v19 = sub_1D7A9CFD8();
  uint64_t v20 = v19;
  if (!*(void *)(v18 + 16)) {
    goto LABEL_41;
  }
  uint64_t v21 = 1 << *(unsigned char *)(v18 + 32);
  uint64_t v22 = *(void *)(v18 + 64);
  int v52 = (void *)(v18 + 64);
  if (v21 < 64) {
    uint64_t v23 = ~(-1 << v21);
  }
  else {
    uint64_t v23 = -1;
  }
  unint64_t v24 = v23 & v22;
  int v50 = v4;
  int64_t v51 = (unint64_t)(v21 + 63) >> 6;
  uint64_t v25 = v19 + 64;
  uint64_t result = swift_retain();
  int64_t v27 = 0;
  while (1)
  {
    if (v24)
    {
      unint64_t v30 = __clz(__rbit64(v24));
      v24 &= v24 - 1;
      unint64_t v31 = v30 | (v27 << 6);
      goto LABEL_22;
    }
    int64_t v32 = v27 + 1;
    if (__OFADD__(v27, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v32 >= v51) {
      break;
    }
    uint64_t v33 = v52;
    unint64_t v34 = v52[v32];
    ++v27;
    if (!v34)
    {
      int64_t v27 = v32 + 1;
      if (v32 + 1 >= v51) {
        goto LABEL_34;
      }
      unint64_t v34 = v52[v27];
      if (!v34)
      {
        int64_t v35 = v32 + 2;
        if (v35 >= v51)
        {
LABEL_34:
          swift_release();
          uint64_t v6 = v50;
          if ((v54 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v34 = v52[v35];
        if (!v34)
        {
          while (1)
          {
            int64_t v27 = v35 + 1;
            if (__OFADD__(v35, 1)) {
              goto LABEL_43;
            }
            if (v27 >= v51) {
              goto LABEL_34;
            }
            unint64_t v34 = v52[v27];
            ++v35;
            if (v34) {
              goto LABEL_21;
            }
          }
        }
        int64_t v27 = v35;
      }
    }
LABEL_21:
    unint64_t v24 = (v34 - 1) & v34;
    unint64_t v31 = __clz(__rbit64(v34)) + (v27 << 6);
LABEL_22:
    unint64_t v36 = (uint64_t *)(*(void *)(v18 + 48) + 16 * v31);
    uint64_t v37 = *v36;
    uint64_t v38 = v36[1];
    uint64_t v39 = *(void *)(v53 + 72);
    uint64_t v40 = *(void *)(v18 + 56) + v39 * v31;
    if (v54)
    {
      sub_1D7871D78(v40, (uint64_t)v17, v55);
    }
    else
    {
      sub_1D78614F8(v40, (uint64_t)v17, v55);
      swift_bridgeObjectRetain();
    }
    sub_1D7A9D5D8();
    sub_1D7A9C0B8();
    uint64_t result = sub_1D7A9D628();
    uint64_t v41 = -1 << *(unsigned char *)(v20 + 32);
    unint64_t v42 = result & ~v41;
    unint64_t v43 = v42 >> 6;
    if (((-1 << v42) & ~*(void *)(v25 + 8 * (v42 >> 6))) != 0)
    {
      unint64_t v28 = __clz(__rbit64((-1 << v42) & ~*(void *)(v25 + 8 * (v42 >> 6)))) | v42 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v44 = 0;
      unint64_t v45 = (unint64_t)(63 - v41) >> 6;
      do
      {
        if (++v43 == v45 && (v44 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v46 = v43 == v45;
        if (v43 == v45) {
          unint64_t v43 = 0;
        }
        v44 |= v46;
        uint64_t v47 = *(void *)(v25 + 8 * v43);
      }
      while (v47 == -1);
      unint64_t v28 = __clz(__rbit64(~v47)) + (v43 << 6);
    }
    *(void *)(v25 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
    unint64_t v29 = (void *)(*(void *)(v20 + 48) + 16 * v28);
    *unint64_t v29 = v37;
    v29[1] = v38;
    uint64_t result = sub_1D7871D78((uint64_t)v17, *(void *)(v20 + 56) + v39 * v28, v55);
    ++*(void *)(v20 + 16);
  }
  swift_release();
  uint64_t v6 = v50;
  uint64_t v33 = v52;
  if ((v54 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v48 = 1 << *(unsigned char *)(v18 + 32);
  if (v48 >= 64) {
    bzero(v33, ((unint64_t)(v48 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v33 = -1 << v48;
  }
  *(void *)(v18 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v6 = v20;
  return result;
}

uint64_t sub_1D7971C80(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBDF84C0);
  uint64_t result = sub_1D7A9CFD8();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v33 = a2;
    int64_t v32 = v3;
    int64_t v8 = 0;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v30 = -1 << v10;
    uint64_t v31 = v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v16 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v17 = v16 | (v8 << 6);
      }
      else
      {
        int64_t v18 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v18 >= v13) {
          goto LABEL_31;
        }
        unint64_t v19 = v9[v18];
        ++v8;
        if (!v19)
        {
          int64_t v8 = v18 + 1;
          if (v18 + 1 >= v13) {
            goto LABEL_31;
          }
          unint64_t v19 = v9[v8];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v13)
            {
LABEL_31:
              if ((v33 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v32;
                goto LABEL_38;
              }
              if (v31 >= 64) {
                bzero((void *)(v5 + 64), 8 * v13);
              }
              else {
                *uint64_t v9 = v30;
              }
              uint64_t v3 = v32;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v19 = v9[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v8 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v13) {
                  goto LABEL_31;
                }
                unint64_t v19 = v9[v8];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v20;
          }
        }
LABEL_21:
        unint64_t v12 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v8 << 6);
      }
      uint64_t v21 = *(void *)(*(void *)(v5 + 48) + 8 * v17);
      char v22 = *(unsigned char *)(*(void *)(v5 + 56) + v17);
      uint64_t result = sub_1D7A9D5C8();
      uint64_t v23 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v24 = result & ~v23;
      unint64_t v25 = v24 >> 6;
      if (((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v28 = v25 == v27;
          if (v25 == v27) {
            unint64_t v25 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v14 + 8 * v25);
        }
        while (v29 == -1);
        unint64_t v15 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(void *)(*(void *)(v7 + 48) + 8 * v15) = v21;
      *(unsigned char *)(*(void *)(v7 + 56) + v15) = v22;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1D7971F20(uint64_t a1, char a2)
{
  return sub_1D7971F2C(a1, a2, &qword_1EA8421F0);
}

uint64_t sub_1D7971F2C(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  char v37 = a2;
  uint64_t v7 = sub_1D7A9CFD8();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v36 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v35 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v35) {
      break;
    }
    uint64_t v23 = (void *)(v6 + 64);
    unint64_t v24 = *(void *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v36 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_33:
          swift_release();
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v35) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v36 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v11 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void *)(*(void *)(v6 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1D7A9D5D8();
    sub_1D7A9C0B8();
    uint64_t result = sub_1D7A9D628();
    uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    unint64_t v19 = (void *)(*(void *)(v8 + 48) + 16 * v18);
    *unint64_t v19 = v32;
    v19[1] = v31;
    *(void *)(*(void *)(v8 + 56) + 8 * v18) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  uint64_t v23 = (void *)(v6 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v6 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v23 = -1 << v34;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v4 = v8;
  return result;
}

uint64_t sub_1D7972240(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF93E8);
  uint64_t v6 = sub_1D7A9CFD8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v11) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v14;
    if (!v23)
    {
      int64_t v14 = v21 + 1;
      if (v21 + 1 >= v11) {
        goto LABEL_34;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v14);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v14 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v14 >= v11) {
              goto LABEL_34;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v14);
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v24;
      }
    }
LABEL_21:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_22:
    uint64_t v25 = *(void *)(v5 + 48) + 40 * v20;
    if (a2)
    {
      long long v26 = *(_OWORD *)v25;
      long long v27 = *(_OWORD *)(v25 + 16);
      uint64_t v40 = *(void *)(v25 + 32);
      long long v38 = v26;
      long long v39 = v27;
      sub_1D7860E50((_OWORD *)(*(void *)(v5 + 56) + 32 * v20), v37);
    }
    else
    {
      sub_1D78A26EC(v25, (uint64_t)&v38);
      sub_1D78907D8(*(void *)(v5 + 56) + 32 * v20, (uint64_t)v37);
    }
    uint64_t result = sub_1D7A9CBD8();
    uint64_t v28 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v33 = v30 == v32;
        if (v30 == v32) {
          unint64_t v30 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v12 + 8 * v30);
      }
      while (v34 == -1);
      unint64_t v15 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t v16 = *(void *)(v7 + 48) + 40 * v15;
    long long v17 = v38;
    long long v18 = v39;
    *(void *)(v16 + 32) = v40;
    *(_OWORD *)uint64_t v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    uint64_t result = (uint64_t)sub_1D7860E50(v37, (_OWORD *)(*(void *)(v7 + 56) + 32 * v15));
    ++*(void *)(v7 + 16);
  }
  swift_release();
  int64_t v22 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1D7972558(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8421E0);
  uint64_t v6 = sub_1D7A9CFD8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  BOOL v33 = v2;
  uint64_t v34 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    unint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v34 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v34 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v33;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v34 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v34 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    unint64_t v30 = *(void **)(*(void *)(v5 + 56) + 8 * v21);
    long long v35 = *(_OWORD *)(*(void *)(v5 + 48) + 16 * v21);
    if ((a2 & 1) == 0)
    {
      sub_1D7860790(v35, *(void *)(*(void *)(v5 + 48) + 16 * v21 + 8));
      id v31 = v30;
    }
    sub_1D7A9D5D8();
    sub_1D7A9B038();
    uint64_t result = sub_1D7A9D628();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      long long v19 = v35;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      long long v19 = v35;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(_OWORD *)(*(void *)(v7 + 48) + 16 * v18) = v19;
    *(void *)(*(void *)(v7 + 56) + 8 * v18) = v30;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v33;
  unint64_t v23 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
  if (v32 >= 64) {
    bzero(v23, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v23 = -1 << v32;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

void *sub_1D7972860()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF8670);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1D7A9CFC8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    char v16 = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    sub_1D78907D8(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v20);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = v16;
    uint64_t result = sub_1D7860E50(v20, (_OWORD *)(*(void *)(v4 + 56) + 32 * v15));
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D7972A20()
{
  return sub_1D7972A5C(&qword_1EA842218);
}

void *sub_1D7972A2C()
{
  return sub_1D7972A5C(&qword_1EA842238);
}

void *sub_1D7972A38()
{
  return sub_1D7972A5C(&qword_1EA842230);
}

void *sub_1D7972A44()
{
  return sub_1D7972A5C(&qword_1EA842220);
}

void *sub_1D7972A50()
{
  return sub_1D7972A5C(&qword_1EA8421D0);
}

void *sub_1D7972A5C(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1D7A9CFC8();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  uint64_t result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    uint64_t result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v7 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 16 * v16;
    unint64_t v18 = (uint64_t *)(*(void *)(v3 + 48) + v17);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    long long v21 = *(_OWORD *)(*(void *)(v3 + 56) + v17);
    int64_t v22 = (void *)(*(void *)(v5 + 48) + v17);
    *int64_t v22 = v20;
    v22[1] = v19;
    *(_OWORD *)(*(void *)(v5 + 56) + v17) = v21;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_retain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v7 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D7972C18()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D7A9CEA8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2, v4, v5, v6, v7, v8, v9, v10);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845458);
  uint64_t v13 = *v0;
  uint64_t v14 = sub_1D7A9CFC8();
  uint64_t v15 = v14;
  if (!*(void *)(v13 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_25:
    uint64_t *v1 = v15;
    return result;
  }
  uint64_t v29 = v1;
  uint64_t result = (void *)(v14 + 64);
  unint64_t v17 = (unint64_t)((1 << *(unsigned char *)(v15 + 32)) + 63) >> 6;
  if (v15 != v13 || (unint64_t)result >= v13 + 64 + 8 * v17) {
    uint64_t result = memmove(result, (const void *)(v13 + 64), 8 * v17);
  }
  uint64_t v30 = v13 + 64;
  int64_t v18 = 0;
  *(void *)(v15 + 16) = *(void *)(v13 + 16);
  uint64_t v19 = 1 << *(unsigned char *)(v13 + 32);
  uint64_t v20 = -1;
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  unint64_t v21 = v20 & *(void *)(v13 + 64);
  int64_t v31 = (unint64_t)(v19 + 63) >> 6;
  uint64_t v32 = v3 + 16;
  while (1)
  {
    if (v21)
    {
      unint64_t v22 = __clz(__rbit64(v21));
      v21 &= v21 - 1;
      unint64_t v23 = v22 | (v18 << 6);
      goto LABEL_9;
    }
    int64_t v26 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v26 >= v31) {
      goto LABEL_23;
    }
    unint64_t v27 = *(void *)(v30 + 8 * v26);
    ++v18;
    if (!v27)
    {
      int64_t v18 = v26 + 1;
      if (v26 + 1 >= v31) {
        goto LABEL_23;
      }
      unint64_t v27 = *(void *)(v30 + 8 * v18);
      if (!v27) {
        break;
      }
    }
LABEL_22:
    unint64_t v21 = (v27 - 1) & v27;
    unint64_t v23 = __clz(__rbit64(v27)) + (v18 << 6);
LABEL_9:
    unint64_t v24 = *(void *)(v3 + 72) * v23;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v12, *(void *)(v13 + 48) + v24, v2);
    uint64_t v25 = 32 * v23;
    sub_1D78907D8(*(void *)(v13 + 56) + v25, (uint64_t)v33);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v15 + 48) + v24, v12, v2);
    uint64_t result = sub_1D7860E50(v33, (_OWORD *)(*(void *)(v15 + 56) + v25));
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v31)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v29;
    goto LABEL_25;
  }
  unint64_t v27 = *(void *)(v30 + 8 * v28);
  if (v27)
  {
    int64_t v18 = v28;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v18 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v18 >= v31) {
      goto LABEL_23;
    }
    unint64_t v27 = *(void *)(v30 + 8 * v18);
    ++v28;
    if (v27) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1D7972EC0()
{
  return sub_1D7974620(&qword_1EA842308);
}

void *sub_1D7972ECC()
{
  return sub_1D7974218(&qword_1EA842300, &qword_1EA8422F8);
}

void *sub_1D7972EE0()
{
  return sub_1D7974620(&qword_1EA8422E8);
}

void *sub_1D7972EEC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8422E0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1D7A9CFC8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 16 * v15;
    long long v19 = *(_OWORD *)(*(void *)(v2 + 56) + v18);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(_OWORD *)(*(void *)(v4 + 56) + v18) = v19;
    uint64_t result = (void *)sub_1D7860790(v19, *((unint64_t *)&v19 + 1));
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D797309C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8422C0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1D7A9CFC8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v28 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v28 >= v13) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v6 + 8 * v28);
    ++v9;
    if (!v29)
    {
      int64_t v9 = v28 + 1;
      if (v28 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v29 = *(void *)(v6 + 8 * v9);
      if (!v29) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v29 - 1) & v29;
    unint64_t v15 = __clz(__rbit64(v29)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    unint64_t v21 = (uint64_t *)(*(void *)(v2 + 56) + v20);
    uint64_t v22 = *v21;
    uint64_t v23 = v21[1];
    uint64_t v24 = v21[2];
    uint64_t v25 = v21[3];
    int64_t v26 = (void *)(*(void *)(v4 + 48) + v16);
    void *v26 = v19;
    v26[1] = v18;
    unint64_t v27 = (void *)(*(void *)(v4 + 56) + v20);
    void *v27 = v22;
    v27[1] = v23;
    v27[2] = v24;
    v27[3] = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v30 = v28 + 2;
  if (v30 >= v13) {
    goto LABEL_26;
  }
  unint64_t v29 = *(void *)(v6 + 8 * v30);
  if (v29)
  {
    int64_t v9 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v6 + 8 * v9);
    ++v30;
    if (v29) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D7973274()
{
  return sub_1D7973644(&qword_1EBDF9668, (void (*)(unsigned char *, uint64_t))sub_1D7860E50);
}

id sub_1D7973294()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF7928);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1D7A9CFC8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void **)(*(void *)(v2 + 56) + v19);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = v20;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D7973448()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF99A0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1D7A9CFC8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      int64_t v9 = v26 + 1;
      if (v26 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v27 = *(void *)(v6 + 8 * v9);
      if (!v27) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v27 - 1) & v27;
    unint64_t v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = *(void *)(v2 + 56);
    uint64_t v18 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = v18[1];
    uint64_t v20 = 24 * v15;
    uint64_t v21 = *(void *)(v17 + v20);
    uint64_t v22 = *(void *)(v17 + v20 + 8);
    char v23 = *(unsigned char *)(v17 + v20 + 16);
    int64_t v24 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v24 = *v18;
    v24[1] = v19;
    uint64_t v25 = *(void *)(v4 + 56) + v20;
    *(void *)uint64_t v25 = v21;
    *(void *)(v25 + 8) = v22;
    *(unsigned char *)(v25 + 16) = v23;
    swift_bridgeObjectRetain();
    id result = (void *)sub_1D78E988C();
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v13) {
    goto LABEL_26;
  }
  unint64_t v27 = *(void *)(v6 + 8 * v28);
  if (v27)
  {
    int64_t v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v9);
    ++v28;
    if (v27) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D7973624()
{
  return sub_1D7973644(&qword_1EA842260, (void (*)(unsigned char *, uint64_t))sub_1D7860E50);
}

void *sub_1D7973644(uint64_t *a1, void (*a2)(unsigned char *, uint64_t))
{
  uint64_t v4 = v2;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v5 = *v2;
  uint64_t v6 = sub_1D7A9CFC8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    uint64_t *v4 = v7;
    return result;
  }
  unint64_t v27 = v4;
  id result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v28 = v5 + 64;
  int64_t v11 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v5 + 64);
  int64_t v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v24 >= v15) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v28 + 8 * v24);
    ++v11;
    if (!v25)
    {
      int64_t v11 = v24 + 1;
      if (v24 + 1 >= v15) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v28 + 8 * v11);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v14 = (v25 - 1) & v25;
    unint64_t v17 = __clz(__rbit64(v25)) + (v11 << 6);
LABEL_12:
    uint64_t v18 = 16 * v17;
    uint64_t v19 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    uint64_t v22 = 32 * v17;
    sub_1D78907D8(*(void *)(v5 + 56) + 32 * v17, (uint64_t)v29);
    char v23 = (void *)(*(void *)(v7 + 48) + v18);
    void *v23 = v20;
    v23[1] = v21;
    a2(v29, *(void *)(v7 + 56) + v22);
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v15)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v4 = v27;
    goto LABEL_28;
  }
  unint64_t v25 = *(void *)(v28 + 8 * v26);
  if (v25)
  {
    int64_t v11 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v11 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v11 >= v15) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v28 + 8 * v11);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1D7973834()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8422A0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1D7A9CFC8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    unint64_t v16 = (uint64_t *)(*(void *)(v2 + 56) + 16 * v15);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    uint64_t v19 = (void *)(*(void *)(v4 + 56) + 16 * v15);
    *uint64_t v19 = v18;
    v19[1] = v17;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D79739E0()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF93D0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1D7A9CFC8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    int64_t v20 = (uint64_t *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    char v23 = (void *)(*(void *)(v4 + 48) + v16);
    void *v23 = v19;
    v23[1] = v18;
    int64_t v24 = (void *)(*(void *)(v4 + 56) + v16);
    *int64_t v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1D7973B9C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA842280);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1D7A9CFC8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = *(void **)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v16) = v18;
    id v19 = v17;
    id result = v18;
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D7973D44()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for AnyCodable();
  uint64_t v36 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8, v3, v4, v5, v6, v7, v8, v9);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8422B8);
  uint64_t v12 = *v0;
  uint64_t v13 = sub_1D7A9CFC8();
  uint64_t v14 = v13;
  if (!*(void *)(v12 + 16))
  {
    id result = (void *)swift_release();
LABEL_25:
    uint64_t *v1 = v14;
    return result;
  }
  uint64_t v34 = v1;
  id result = (void *)(v13 + 64);
  unint64_t v16 = (unint64_t)((1 << *(unsigned char *)(v14 + 32)) + 63) >> 6;
  if (v14 != v12 || (unint64_t)result >= v12 + 64 + 8 * v16) {
    id result = memmove(result, (const void *)(v12 + 64), 8 * v16);
  }
  uint64_t v35 = v12 + 64;
  int64_t v17 = 0;
  *(void *)(v14 + 16) = *(void *)(v12 + 16);
  uint64_t v18 = 1 << *(unsigned char *)(v12 + 32);
  uint64_t v19 = -1;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  unint64_t v20 = v19 & *(void *)(v12 + 64);
  int64_t v21 = (unint64_t)(v18 + 63) >> 6;
  while (1)
  {
    if (v20)
    {
      unint64_t v22 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      unint64_t v23 = v22 | (v17 << 6);
      goto LABEL_9;
    }
    int64_t v30 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v30 >= v21) {
      goto LABEL_23;
    }
    unint64_t v31 = *(void *)(v35 + 8 * v30);
    ++v17;
    if (!v31)
    {
      int64_t v17 = v30 + 1;
      if (v30 + 1 >= v21) {
        goto LABEL_23;
      }
      unint64_t v31 = *(void *)(v35 + 8 * v17);
      if (!v31) {
        break;
      }
    }
LABEL_22:
    unint64_t v20 = (v31 - 1) & v31;
    unint64_t v23 = __clz(__rbit64(v31)) + (v17 << 6);
LABEL_9:
    uint64_t v24 = 16 * v23;
    int64_t v25 = (uint64_t *)(*(void *)(v12 + 48) + 16 * v23);
    uint64_t v26 = *v25;
    uint64_t v27 = v25[1];
    unint64_t v28 = *(void *)(v36 + 72) * v23;
    sub_1D79776B4(*(void *)(v12 + 56) + v28, (uint64_t)v11);
    unint64_t v29 = (void *)(*(void *)(v14 + 48) + v24);
    *unint64_t v29 = v26;
    v29[1] = v27;
    sub_1D7969D70((uint64_t)v11, *(void *)(v14 + 56) + v28);
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v32 = v30 + 2;
  if (v32 >= v21)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v1 = v34;
    goto LABEL_25;
  }
  unint64_t v31 = *(void *)(v35 + 8 * v32);
  if (v31)
  {
    int64_t v17 = v32;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v17 = v32 + 1;
    if (__OFADD__(v32, 1)) {
      break;
    }
    if (v17 >= v21) {
      goto LABEL_23;
    }
    unint64_t v31 = *(void *)(v35 + 8 * v17);
    ++v32;
    if (v31) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1D7973FB0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for AnyCodable();
  uint64_t v32 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8, v3, v4, v5, v6, v7, v8, v9);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA842278);
  uint64_t v12 = *v0;
  uint64_t v13 = sub_1D7A9CFC8();
  uint64_t v14 = v13;
  if (!*(void *)(v12 + 16))
  {
    id result = (void *)swift_release();
LABEL_25:
    uint64_t *v1 = v14;
    return result;
  }
  unint64_t v31 = v1;
  id result = (void *)(v13 + 64);
  uint64_t v16 = v12 + 64;
  unint64_t v17 = (unint64_t)((1 << *(unsigned char *)(v14 + 32)) + 63) >> 6;
  if (v14 != v12 || (unint64_t)result >= v16 + 8 * v17) {
    id result = memmove(result, (const void *)(v12 + 64), 8 * v17);
  }
  int64_t v18 = 0;
  *(void *)(v14 + 16) = *(void *)(v12 + 16);
  uint64_t v19 = 1 << *(unsigned char *)(v12 + 32);
  uint64_t v20 = -1;
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  unint64_t v21 = v20 & *(void *)(v12 + 64);
  int64_t v22 = (unint64_t)(v19 + 63) >> 6;
  while (1)
  {
    if (v21)
    {
      unint64_t v23 = __clz(__rbit64(v21));
      v21 &= v21 - 1;
      unint64_t v24 = v23 | (v18 << 6);
      goto LABEL_9;
    }
    int64_t v28 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v28 >= v22) {
      goto LABEL_23;
    }
    unint64_t v29 = *(void *)(v16 + 8 * v28);
    ++v18;
    if (!v29)
    {
      int64_t v18 = v28 + 1;
      if (v28 + 1 >= v22) {
        goto LABEL_23;
      }
      unint64_t v29 = *(void *)(v16 + 8 * v18);
      if (!v29) {
        break;
      }
    }
LABEL_22:
    unint64_t v21 = (v29 - 1) & v29;
    unint64_t v24 = __clz(__rbit64(v29)) + (v18 << 6);
LABEL_9:
    uint64_t v25 = 8 * v24;
    uint64_t v26 = *(void *)(*(void *)(v12 + 48) + 8 * v24);
    unint64_t v27 = *(void *)(v32 + 72) * v24;
    sub_1D79776B4(*(void *)(v12 + 56) + v27, (uint64_t)v11);
    *(void *)(*(void *)(v14 + 48) + v25) = v26;
    id result = (void *)sub_1D7969D70((uint64_t)v11, *(void *)(v14 + 56) + v27);
  }
  int64_t v30 = v28 + 2;
  if (v30 >= v22)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v1 = v31;
    goto LABEL_25;
  }
  unint64_t v29 = *(void *)(v16 + 8 * v30);
  if (v29)
  {
    int64_t v18 = v30;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v18 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v18 >= v22) {
      goto LABEL_23;
    }
    unint64_t v29 = *(void *)(v16 + 8 * v18);
    ++v30;
    if (v29) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1D7974204()
{
  return sub_1D7974218(&qword_1EBDF9118, &qword_1EBDF93D8);
}

void *sub_1D7974218(uint64_t *a1, uint64_t *a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v39 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8, v6, v7, v8, v9, v10, v11, v12);
  uint64_t v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v36 = v2;
  uint64_t v15 = *v2;
  uint64_t v16 = sub_1D7A9CFC8();
  uint64_t v17 = v16;
  if (!*(void *)(v15 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v36 = v17;
    return result;
  }
  id result = (void *)(v16 + 64);
  unint64_t v19 = (unint64_t)((1 << *(unsigned char *)(v17 + 32)) + 63) >> 6;
  if (v17 != v15 || (unint64_t)result >= v15 + 64 + 8 * v19) {
    id result = memmove(result, (const void *)(v15 + 64), 8 * v19);
  }
  uint64_t v37 = v15 + 64;
  int64_t v21 = 0;
  *(void *)(v17 + 16) = *(void *)(v15 + 16);
  uint64_t v22 = 1 << *(unsigned char *)(v15 + 32);
  uint64_t v23 = -1;
  if (v22 < 64) {
    uint64_t v23 = ~(-1 << v22);
  }
  unint64_t v24 = v23 & *(void *)(v15 + 64);
  int64_t v38 = (unint64_t)(v22 + 63) >> 6;
  while (1)
  {
    if (v24)
    {
      unint64_t v25 = __clz(__rbit64(v24));
      v24 &= v24 - 1;
      unint64_t v26 = v25 | (v21 << 6);
      goto LABEL_12;
    }
    int64_t v33 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v33 >= v38) {
      goto LABEL_26;
    }
    unint64_t v34 = *(void *)(v37 + 8 * v33);
    ++v21;
    if (!v34)
    {
      int64_t v21 = v33 + 1;
      if (v33 + 1 >= v38) {
        goto LABEL_26;
      }
      unint64_t v34 = *(void *)(v37 + 8 * v21);
      if (!v34) {
        break;
      }
    }
LABEL_25:
    unint64_t v24 = (v34 - 1) & v34;
    unint64_t v26 = __clz(__rbit64(v34)) + (v21 << 6);
LABEL_12:
    uint64_t v27 = 16 * v26;
    int64_t v28 = (uint64_t *)(*(void *)(v15 + 48) + 16 * v26);
    uint64_t v29 = *v28;
    uint64_t v30 = v28[1];
    unint64_t v31 = *(void *)(v39 + 72) * v26;
    sub_1D78614F8(*(void *)(v15 + 56) + v31, (uint64_t)v14, a1);
    uint64_t v32 = (void *)(*(void *)(v17 + 48) + v27);
    *uint64_t v32 = v29;
    v32[1] = v30;
    sub_1D7871D78((uint64_t)v14, *(void *)(v17 + 56) + v31, a1);
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v35 = v33 + 2;
  if (v35 >= v38) {
    goto LABEL_26;
  }
  unint64_t v34 = *(void *)(v37 + 8 * v35);
  if (v34)
  {
    int64_t v21 = v35;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v21 = v35 + 1;
    if (__OFADD__(v35, 1)) {
      break;
    }
    if (v21 >= v38) {
      goto LABEL_26;
    }
    unint64_t v34 = *(void *)(v37 + 8 * v21);
    ++v35;
    if (v34) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D7974484()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(qword_1EBDF84C0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1D7A9CFC8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v20 = __clz(__rbit64(v18));
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = v20 + (v9 << 6);
LABEL_12:
    char v16 = *(unsigned char *)(*(void *)(v2 + 56) + v15);
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 56) + v15) = v16;
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D7974614()
{
  return sub_1D7974620(&qword_1EA8421F0);
}

void *sub_1D7974620(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1D7A9CFC8();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v7 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 16 * v16;
    unint64_t v18 = (void *)(*(void *)(v3 + 48) + 16 * v16);
    uint64_t v19 = v18[1];
    uint64_t v20 = 8 * v16;
    uint64_t v21 = *(void *)(*(void *)(v3 + 56) + v20);
    uint64_t v22 = (void *)(*(void *)(v5 + 48) + v17);
    *uint64_t v22 = *v18;
    v22[1] = v19;
    *(void *)(*(void *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v7 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D79747D0()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF93E8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1D7A9CFC8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v9);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 40 * v15;
    sub_1D78A26EC(*(void *)(v2 + 48) + 40 * v15, (uint64_t)v25);
    uint64_t v17 = 32 * v15;
    sub_1D78907D8(*(void *)(v2 + 56) + v17, (uint64_t)v24);
    uint64_t v18 = *(void *)(v4 + 48) + v16;
    long long v19 = v25[0];
    long long v20 = v25[1];
    *(void *)(v18 + 32) = v26;
    *(_OWORD *)uint64_t v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    id result = sub_1D7860E50(v24, (_OWORD *)(*(void *)(v4 + 56) + v17));
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v13) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v6 + 8 * v23);
  if (v22)
  {
    int64_t v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1D79749B8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8421E0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1D7A9CFC8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 56) + 8 * v15);
    uint64_t v18 = 16 * v15;
    long long v19 = *(_OWORD *)(*(void *)(v2 + 48) + v18);
    *(_OWORD *)(*(void *)(v4 + 48) + v18) = v19;
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    sub_1D7860790(v19, *((unint64_t *)&v19 + 1));
    id result = v17;
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

unint64_t sub_1D7974B70(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  a6[(result >> 6) + 8] |= 1 << result;
  uint64_t v6 = (void *)(a6[6] + 16 * result);
  *uint64_t v6 = a2;
  v6[1] = a3;
  unint64_t v7 = (void *)(a6[7] + 16 * result);
  *unint64_t v7 = a4;
  v7[1] = a5;
  uint64_t v8 = a6[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a6[2] = v10;
  }
  return result;
}

_OWORD *sub_1D7974BC0(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_1D7A9CEA8();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  id result = sub_1D7860E50(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

_OWORD *sub_1D7974C84(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  *uint64_t v6 = a2;
  v6[1] = a3;
  id result = sub_1D7860E50(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

unint64_t sub_1D7974CF0(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  uint64_t v5 = (void *)(a5[6] + 16 * result);
  *uint64_t v5 = a2;
  v5[1] = a3;
  *(void *)(a5[7] + 8 * result) = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

unint64_t sub_1D7974D38(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, void *a7)
{
  a7[(result >> 6) + 8] |= 1 << result;
  BOOL v7 = (void *)(a7[6] + 16 * result);
  *BOOL v7 = a2;
  v7[1] = a3;
  uint64_t v8 = a7[7] + 24 * result;
  *(void *)uint64_t v8 = a4;
  *(void *)(v8 + 8) = a5;
  *(unsigned char *)(v8 + 16) = a6 & 1;
  uint64_t v9 = a7[2];
  BOOL v10 = __OFADD__(v9, 1);
  uint64_t v11 = v9 + 1;
  if (v10) {
    __break(1u);
  }
  else {
    a7[2] = v11;
  }
  return result;
}

unint64_t sub_1D7974D90(unint64_t result, char a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  *(unsigned char *)(a5[6] + result) = a2;
  uint64_t v5 = (void *)(a5[7] + 16 * result);
  *uint64_t v5 = a3;
  v5[1] = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

uint64_t sub_1D7974DD8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = (void *)(a5[6] + 16 * a1);
  *uint64_t v8 = a2;
  v8[1] = a3;
  uint64_t v9 = a5[7];
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9118);
  uint64_t result = sub_1D7871D78(a4, v9 + *(void *)(*(void *)(v10 - 8) + 72) * a1, &qword_1EBDF9118);
  uint64_t v12 = a5[2];
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13) {
    __break(1u);
  }
  else {
    a5[2] = v14;
  }
  return result;
}

unint64_t sub_1D7974E84(unint64_t result, uint64_t a2, char a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  *(void *)(a4[6] + 8 * result) = a2;
  *(unsigned char *)(a4[7] + result) = a3;
  uint64_t v4 = a4[2];
  BOOL v5 = __OFADD__(v4, 1);
  uint64_t v6 = v4 + 1;
  if (v5) {
    __break(1u);
  }
  else {
    a4[2] = v6;
  }
  return result;
}

_OWORD *sub_1D7974EC8(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v5 = a4[6] + 40 * a1;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(void *)(v5 + 32) = *(void *)(a2 + 32);
  uint64_t result = sub_1D7860E50(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v8 = a4[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a4[2] = v10;
  }
  return result;
}

_OWORD *sub_1D7974F44(unint64_t a1, char a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(unsigned char *)(a4[6] + a1) = a2;
  uint64_t result = sub_1D7860E50(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

uint64_t sub_1D7974FAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AnyCodable();
  uint64_t v57 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4 - 8, v5, v6, v7, v8, v9, v10, v11);
  BOOL v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8453A8);
  uint64_t v22 = MEMORY[0x1F4188790](v14 - 8, v15, v16, v17, v18, v19, v20, v21);
  unint64_t v24 = (int64_t *)((char *)&v54 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v22, v25, v26, v27, v28, v29, v30, v31);
  int64_t v33 = (char *)&v54 - v32;
  uint64_t v34 = *(void *)(a2 + 64);
  uint64_t v55 = a2 + 64;
  uint64_t v35 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v36 = -1;
  if (v35 < 64) {
    uint64_t v36 = ~(-1 << v35);
  }
  unint64_t v37 = v36 & v34;
  int64_t v56 = (unint64_t)(v35 + 63) >> 6;
  int64_t v54 = v56 - 1;
  uint64_t v58 = a2;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v39 = 0;
  int64_t v59 = 0;
  if (!v37) {
    goto LABEL_6;
  }
LABEL_4:
  unint64_t v40 = __clz(__rbit64(v37));
  v37 &= v37 - 1;
  unint64_t v41 = v40 | (v59 << 6);
LABEL_5:
  uint64_t v42 = *(void *)(*(void *)(v58 + 48) + 8 * v41);
  uint64_t v43 = *(void *)(v58 + 56) + *(void *)(v57 + 72) * v41;
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8453B0);
  sub_1D79776B4(v43, (uint64_t)v24 + *(int *)(v44 + 48));
  *unint64_t v24 = v42;
  (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v24, 0, 1, v44);
  while (1)
  {
    sub_1D7871D78((uint64_t)v24, (uint64_t)v33, &qword_1EA8453A8);
    uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8453B0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v50 - 8) + 48))(v33, 1, v50) == 1)
    {
      swift_release();
      return sub_1D7A9D5E8();
    }
    sub_1D7969D70((uint64_t)&v33[*(int *)(v50 + 48)], (uint64_t)v13);
    uint64_t v51 = *(void *)(a1 + 64);
    long long v52 = *(_OWORD *)(a1 + 16);
    v60[0] = *(_OWORD *)a1;
    v60[1] = v52;
    long long v53 = *(_OWORD *)(a1 + 48);
    v60[2] = *(_OWORD *)(a1 + 32);
    uint64_t v60[3] = v53;
    uint64_t v61 = v51;
    sub_1D7A9D5E8();
    AnyCodable.hash(into:)(v60);
    sub_1D7977718((uint64_t)v13);
    uint64_t result = sub_1D7A9D628();
    v39 ^= result;
    if (v37) {
      goto LABEL_4;
    }
LABEL_6:
    int64_t v45 = v59 + 1;
    if (__OFADD__(v59, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v45 < v56)
    {
      unint64_t v46 = *(void *)(v55 + 8 * v45);
      if (v46) {
        goto LABEL_9;
      }
      int64_t v47 = v59 + 2;
      ++v59;
      if (v45 + 1 < v56)
      {
        unint64_t v46 = *(void *)(v55 + 8 * v47);
        if (v46)
        {
          ++v45;
LABEL_9:
          unint64_t v37 = (v46 - 1) & v46;
          unint64_t v41 = __clz(__rbit64(v46)) + (v45 << 6);
          int64_t v59 = v45;
          goto LABEL_5;
        }
        int64_t v48 = v45 + 2;
        int64_t v59 = v45 + 1;
        if (v45 + 2 < v56) {
          break;
        }
      }
    }
LABEL_21:
    uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8453B0);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v24, 1, 1, v49);
    unint64_t v37 = 0;
  }
  unint64_t v46 = *(void *)(v55 + 8 * v48);
  if (v46)
  {
    v45 += 2;
    goto LABEL_9;
  }
  while (1)
  {
    int64_t v45 = v48 + 1;
    if (__OFADD__(v48, 1)) {
      break;
    }
    if (v45 >= v56)
    {
      int64_t v59 = v54;
      goto LABEL_21;
    }
    unint64_t v46 = *(void *)(v55 + 8 * v45);
    ++v48;
    if (v46) {
      goto LABEL_9;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1D79753A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AnyCodable();
  uint64_t v61 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4 - 8, v5, v6, v7, v8, v9, v10, v11);
  uint64_t v63 = (uint64_t)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845398);
  uint64_t v21 = MEMORY[0x1F4188790](v13 - 8, v14, v15, v16, v17, v18, v19, v20);
  uint64_t v23 = (uint64_t *)((char *)&v57 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v21, v24, v25, v26, v27, v28, v29, v30);
  uint64_t v32 = (char *)&v57 - v31;
  uint64_t v33 = *(void *)(a2 + 64);
  uint64_t v59 = a2 + 64;
  uint64_t v34 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v35 = -1;
  if (v34 < 64) {
    uint64_t v35 = ~(-1 << v34);
  }
  unint64_t v36 = v35 & v33;
  int64_t v60 = (unint64_t)(v34 + 63) >> 6;
  int64_t v58 = v60 - 1;
  uint64_t v62 = a2;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v38 = 0;
  int64_t v64 = 0;
  if (!v36) {
    goto LABEL_6;
  }
LABEL_4:
  uint64_t v39 = v38;
  unint64_t v40 = __clz(__rbit64(v36));
  v36 &= v36 - 1;
  unint64_t v41 = v40 | (v64 << 6);
LABEL_5:
  uint64_t v42 = (uint64_t *)(*(void *)(v62 + 48) + 16 * v41);
  uint64_t v44 = *v42;
  uint64_t v43 = v42[1];
  uint64_t v45 = *(void *)(v62 + 56) + *(void *)(v61 + 72) * v41;
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8453A0);
  sub_1D79776B4(v45, (uint64_t)v23 + *(int *)(v46 + 48));
  void *v23 = v44;
  v23[1] = v43;
  (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v23, 0, 1, v46);
  swift_bridgeObjectRetain();
  uint64_t v38 = v39;
  while (1)
  {
    sub_1D7871D78((uint64_t)v23, (uint64_t)v32, &qword_1EA845398);
    uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8453A0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v52 - 8) + 48))(v32, 1, v52) == 1)
    {
      swift_release();
      return sub_1D7A9D5E8();
    }
    uint64_t v53 = v63;
    sub_1D7969D70((uint64_t)&v32[*(int *)(v52 + 48)], v63);
    uint64_t v54 = *(void *)(a1 + 64);
    long long v55 = *(_OWORD *)(a1 + 16);
    v65[0] = *(_OWORD *)a1;
    v65[1] = v55;
    long long v56 = *(_OWORD *)(a1 + 48);
    v65[2] = *(_OWORD *)(a1 + 32);
    v65[3] = v56;
    uint64_t v66 = v54;
    sub_1D7A9C0B8();
    swift_bridgeObjectRelease();
    AnyCodable.hash(into:)(v65);
    sub_1D7977718(v53);
    uint64_t result = sub_1D7A9D628();
    v38 ^= result;
    if (v36) {
      goto LABEL_4;
    }
LABEL_6:
    int64_t v47 = v64 + 1;
    if (__OFADD__(v64, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v47 < v60)
    {
      unint64_t v48 = *(void *)(v59 + 8 * v47);
      if (v48) {
        goto LABEL_9;
      }
      int64_t v49 = v64 + 2;
      ++v64;
      if (v47 + 1 < v60)
      {
        unint64_t v48 = *(void *)(v59 + 8 * v49);
        if (v48)
        {
          ++v47;
LABEL_9:
          uint64_t v39 = v38;
          unint64_t v36 = (v48 - 1) & v48;
          unint64_t v41 = __clz(__rbit64(v48)) + (v47 << 6);
          int64_t v64 = v47;
          goto LABEL_5;
        }
        int64_t v50 = v47 + 2;
        int64_t v64 = v47 + 1;
        if (v47 + 2 < v60) {
          break;
        }
      }
    }
LABEL_21:
    uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8453A0);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v23, 1, 1, v51);
    unint64_t v36 = 0;
  }
  unint64_t v48 = *(void *)(v59 + 8 * v50);
  if (v48)
  {
    v47 += 2;
    goto LABEL_9;
  }
  while (1)
  {
    int64_t v47 = v50 + 1;
    if (__OFADD__(v50, 1)) {
      break;
    }
    if (v47 >= v60)
    {
      int64_t v64 = v58;
      goto LABEL_21;
    }
    unint64_t v48 = *(void *)(v59 + 8 * v47);
    ++v50;
    if (v48) {
      goto LABEL_9;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t _s13CoreIDVShared32IntegerKeyedAnyCodableDictionaryV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v98 = type metadata accessor for AnyCodable();
  uint64_t v4 = *(void *)(v98 - 8);
  MEMORY[0x1F4188790](v98, v5, v6, v7, v8, v9, v10, v11);
  uint64_t v89 = (unsigned __int8 *)&v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845438);
  MEMORY[0x1F4188790](v95, v13, v14, v15, v16, v17, v18, v19);
  uint64_t v21 = (char *)&v87 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845440);
  uint64_t v30 = MEMORY[0x1F4188790](v22 - 8, v23, v24, v25, v26, v27, v28, v29);
  uint64_t v38 = MEMORY[0x1F4188790](v30, v31, v32, v33, v34, v35, v36, v37);
  unint64_t v40 = (char *)&v87 - v39;
  MEMORY[0x1F4188790](v38, v41, v42, v43, v44, v45, v46, v47);
  int64_t v50 = (char *)&v87 - v49;
  uint64_t v51 = *a1;
  uint64_t v52 = *(void *)(*a1 + 16);
  uint64_t v97 = *a2;
  if (v52 != *(void *)(v97 + 16)) {
    return 0;
  }
  uint64_t v88 = (unsigned __int8 *)v48;
  uint64_t v53 = *(void *)(v51 + 64);
  uint64_t v90 = v51 + 64;
  uint64_t v54 = 1 << *(unsigned char *)(v51 + 32);
  uint64_t v55 = -1;
  if (v54 < 64) {
    uint64_t v55 = ~(-1 << v54);
  }
  unint64_t v56 = v55 & v53;
  int64_t v91 = (unint64_t)(v54 + 63) >> 6;
  uint64_t v92 = v4;
  uint64_t v57 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
  int64_t v58 = (uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 48);
  uint64_t result = swift_bridgeObjectRetain_n();
  int64_t v60 = 0;
  uint64_t v94 = v51;
  uint64_t v87 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
  while (1)
  {
    if (v56)
    {
      unint64_t v61 = __clz(__rbit64(v56));
      uint64_t v62 = (v56 - 1) & v56;
      unint64_t v63 = v61 | (v60 << 6);
      goto LABEL_25;
    }
    int64_t v64 = v60 + 1;
    if (__OFADD__(v60, 1))
    {
      __break(1u);
      goto LABEL_46;
    }
    if (v64 >= v91) {
      goto LABEL_39;
    }
    unint64_t v65 = *(void *)(v90 + 8 * v64);
    ++v60;
    if (!v65)
    {
      int64_t v60 = v64 + 1;
      if (v64 + 1 >= v91) {
        goto LABEL_39;
      }
      unint64_t v65 = *(void *)(v90 + 8 * v60);
      if (!v65)
      {
        int64_t v60 = v64 + 2;
        if (v64 + 2 >= v91) {
          goto LABEL_39;
        }
        unint64_t v65 = *(void *)(v90 + 8 * v60);
        if (!v65)
        {
          int64_t v60 = v64 + 3;
          if (v64 + 3 >= v91) {
            goto LABEL_39;
          }
          unint64_t v65 = *(void *)(v90 + 8 * v60);
          if (!v65)
          {
            int64_t v60 = v64 + 4;
            if (v64 + 4 >= v91) {
              goto LABEL_39;
            }
            unint64_t v65 = *(void *)(v90 + 8 * v60);
            if (!v65) {
              break;
            }
          }
        }
      }
    }
LABEL_24:
    uint64_t v62 = (v65 - 1) & v65;
    unint64_t v63 = __clz(__rbit64(v65)) + (v60 << 6);
LABEL_25:
    uint64_t v67 = *(void *)(*(void *)(v51 + 48) + 8 * v63);
    uint64_t v68 = *(void *)(v51 + 16);
    unint64_t v96 = v62;
    if (v68 && (unint64_t v69 = sub_1D7A18648(v67), (v70 & 1) != 0))
    {
      uint64_t v71 = *(void *)(v51 + 56);
      uint64_t v72 = v92;
      sub_1D79776B4(v71 + *(void *)(v92 + 72) * v69, (uint64_t)v50);
      uint64_t v73 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v72 + 56);
      v73(v50, 0, 1, v98);
    }
    else
    {
      uint64_t v73 = *v57;
      (*v57)(v50, 1, 1, v98);
    }
    if (*(void *)(v97 + 16) && (unint64_t v74 = sub_1D7A18648(v67), (v75 & 1) != 0))
    {
      sub_1D79776B4(*(void *)(v97 + 56) + *(void *)(v92 + 72) * v74, (uint64_t)v40);
      uint64_t v76 = 0;
    }
    else
    {
      uint64_t v76 = 1;
    }
    uint64_t v77 = v98;
    v73(v40, v76, 1, v98);
    uint64_t v78 = (uint64_t)&v21[*(int *)(v95 + 48)];
    sub_1D78614F8((uint64_t)v50, (uint64_t)v21, &qword_1EA845440);
    sub_1D78614F8((uint64_t)v40, v78, &qword_1EA845440);
    unint64_t v79 = *v58;
    if ((*v58)(v21, 1, v77) == 1)
    {
      sub_1D7871C4C((uint64_t)v40, &qword_1EA845440);
      sub_1D7871C4C((uint64_t)v50, &qword_1EA845440);
      int v80 = v79((char *)v78, 1, v98);
      uint64_t v51 = v94;
      if (v80 != 1) {
        goto LABEL_41;
      }
      uint64_t result = sub_1D7871C4C((uint64_t)v21, &qword_1EA845440);
      unint64_t v56 = v96;
    }
    else
    {
      int64_t v93 = v60;
      uint64_t v81 = v98;
      uint64_t v82 = v88;
      sub_1D78614F8((uint64_t)v21, (uint64_t)v88, &qword_1EA845440);
      int v83 = v79((char *)v78, 1, v81);
      uint64_t v51 = v94;
      if (v83 == 1)
      {
        sub_1D7871C4C((uint64_t)v40, &qword_1EA845440);
        sub_1D7871C4C((uint64_t)v50, &qword_1EA845440);
        sub_1D7977718((uint64_t)v82);
LABEL_41:
        sub_1D7871C4C((uint64_t)v21, &qword_1EA845438);
LABEL_42:
        swift_release();
        swift_bridgeObjectRelease();
        return 0;
      }
      uint64_t v84 = v78;
      int64_t v85 = v89;
      sub_1D7969D70(v84, (uint64_t)v89);
      char v86 = _s13CoreIDVShared10AnyCodableV2eeoiySbAC_ACtFZ_0(v82, v85);
      sub_1D7977718((uint64_t)v85);
      sub_1D7871C4C((uint64_t)v40, &qword_1EA845440);
      sub_1D7871C4C((uint64_t)v50, &qword_1EA845440);
      sub_1D7977718((uint64_t)v82);
      uint64_t result = sub_1D7871C4C((uint64_t)v21, &qword_1EA845440);
      uint64_t v57 = v87;
      int64_t v60 = v93;
      unint64_t v56 = v96;
      if ((v86 & 1) == 0) {
        goto LABEL_42;
      }
    }
  }
  int64_t v66 = v64 + 5;
  if (v66 >= v91)
  {
LABEL_39:
    swift_release();
    swift_bridgeObjectRelease();
    return 1;
  }
  unint64_t v65 = *(void *)(v90 + 8 * v66);
  if (v65)
  {
    int64_t v60 = v66;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v60 = v66 + 1;
    if (__OFADD__(v66, 1)) {
      break;
    }
    if (v60 >= v91) {
      goto LABEL_39;
    }
    unint64_t v65 = *(void *)(v90 + 8 * v60);
    ++v66;
    if (v65) {
      goto LABEL_24;
    }
  }
LABEL_46:
  __break(1u);
  return result;
}

uint64_t _s13CoreIDVShared20AnyCodableDictionaryV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for AnyCodable();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v6, v7, v8, v9, v10, v11, v12);
  uint64_t v87 = (uint64_t)&v86 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845438);
  MEMORY[0x1F4188790](v95, v14, v15, v16, v17, v18, v19, v20);
  uint64_t v22 = (char *)&v86 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845440);
  uint64_t v31 = MEMORY[0x1F4188790](v23 - 8, v24, v25, v26, v27, v28, v29, v30);
  uint64_t v33 = (char *)&v86 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = MEMORY[0x1F4188790](v31, v34, v35, v36, v37, v38, v39, v40);
  MEMORY[0x1F4188790](v41, v42, v43, v44, v45, v46, v47, v48);
  uint64_t v51 = (char *)&v86 - v50;
  uint64_t v52 = *a1;
  uint64_t v53 = *a2;
  if (*(void *)(*a1 + 16) != *(void *)(*a2 + 16)) {
    return 0;
  }
  uint64_t v97 = (char *)v49;
  uint64_t v93 = v53;
  uint64_t v54 = *(void *)(v52 + 64);
  uint64_t v88 = v52 + 64;
  uint64_t v55 = 1 << *(unsigned char *)(v52 + 32);
  uint64_t v56 = -1;
  if (v55 < 64) {
    uint64_t v56 = ~(-1 << v55);
  }
  unint64_t v57 = v56 & v54;
  int64_t v89 = (unint64_t)(v55 + 63) >> 6;
  uint64_t v90 = v5;
  uint64_t v99 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  uint64_t v92 = (unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  uint64_t result = swift_bridgeObjectRetain_n();
  int64_t v59 = 0;
  uint64_t v91 = v52;
  uint64_t v94 = v33;
  unint64_t v96 = v51;
  uint64_t v60 = (uint64_t)v51;
  while (v57)
  {
    unint64_t v61 = __clz(__rbit64(v57));
    v57 &= v57 - 1;
    unint64_t v62 = v61 | (v59 << 6);
LABEL_25:
    int64_t v98 = v59;
    int64_t v66 = (uint64_t *)(*(void *)(v52 + 48) + 16 * v62);
    uint64_t v68 = *v66;
    uint64_t v67 = v66[1];
    if (*(void *)(v52 + 16))
    {
      swift_bridgeObjectRetain();
      uint64_t v69 = sub_1D7A18684(v68, v67);
      if (v70)
      {
        uint64_t v71 = *(void *)(v52 + 56);
        uint64_t v72 = v90;
        sub_1D79776B4(v71 + *(void *)(v90 + 72) * v69, (uint64_t)v51);
        uint64_t v73 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v72 + 56);
        v73(v51, 0, 1, v4);
      }
      else
      {
        uint64_t v73 = *v99;
        (*v99)(v51, 1, 1, v4);
      }
    }
    else
    {
      uint64_t v73 = *v99;
      (*v99)(v51, 1, 1, v4);
      swift_bridgeObjectRetain();
    }
    uint64_t v74 = v93;
    if (*(void *)(v93 + 16) && (uint64_t v75 = sub_1D7A18684(v68, v67), (v76 & 1) != 0))
    {
      sub_1D79776B4(*(void *)(v74 + 56) + *(void *)(v90 + 72) * v75, (uint64_t)v97);
      uint64_t v77 = 0;
    }
    else
    {
      uint64_t v77 = 1;
    }
    uint64_t v78 = (uint64_t)v94;
    uint64_t v79 = (uint64_t)v97;
    v73(v97, v77, 1, v4);
    swift_bridgeObjectRelease();
    uint64_t v80 = (uint64_t)&v22[*(int *)(v95 + 48)];
    sub_1D78614F8(v60, (uint64_t)v22, &qword_1EA845440);
    sub_1D78614F8(v79, v80, &qword_1EA845440);
    uint64_t v81 = *v92;
    if ((*v92)(v22, 1, v4) == 1)
    {
      sub_1D7871C4C(v79, &qword_1EA845440);
      sub_1D7871C4C(v60, &qword_1EA845440);
      unsigned int v82 = v81((char *)v80, 1, v4);
      uint64_t v52 = v91;
      if (v82 != 1) {
        goto LABEL_42;
      }
      uint64_t v51 = (char *)v60;
      uint64_t result = sub_1D7871C4C((uint64_t)v22, &qword_1EA845440);
      int64_t v59 = v98;
    }
    else
    {
      sub_1D78614F8((uint64_t)v22, v78, &qword_1EA845440);
      if (v81((char *)v80, 1, v4) == 1)
      {
        sub_1D7871C4C((uint64_t)v97, &qword_1EA845440);
        sub_1D7871C4C((uint64_t)v96, &qword_1EA845440);
        sub_1D7977718(v78);
LABEL_42:
        sub_1D7871C4C((uint64_t)v22, &qword_1EA845438);
LABEL_43:
        swift_release();
        swift_bridgeObjectRelease();
        return 0;
      }
      uint64_t v83 = v80;
      uint64_t v84 = v87;
      sub_1D7969D70(v83, v87);
      char v85 = _s13CoreIDVShared10AnyCodableV2eeoiySbAC_ACtFZ_0(v78, v84);
      sub_1D7977718(v84);
      sub_1D7871C4C((uint64_t)v97, &qword_1EA845440);
      uint64_t v51 = v96;
      sub_1D7871C4C((uint64_t)v96, &qword_1EA845440);
      sub_1D7977718(v78);
      uint64_t result = sub_1D7871C4C((uint64_t)v22, &qword_1EA845440);
      uint64_t v52 = v91;
      int64_t v59 = v98;
      if ((v85 & 1) == 0) {
        goto LABEL_43;
      }
    }
  }
  int64_t v63 = v59 + 1;
  if (__OFADD__(v59, 1))
  {
    __break(1u);
    goto LABEL_47;
  }
  if (v63 >= v89) {
    goto LABEL_40;
  }
  unint64_t v64 = *(void *)(v88 + 8 * v63);
  ++v59;
  if (v64) {
    goto LABEL_24;
  }
  int64_t v59 = v63 + 1;
  if (v63 + 1 >= v89) {
    goto LABEL_40;
  }
  unint64_t v64 = *(void *)(v88 + 8 * v59);
  if (v64) {
    goto LABEL_24;
  }
  int64_t v59 = v63 + 2;
  if (v63 + 2 >= v89) {
    goto LABEL_40;
  }
  unint64_t v64 = *(void *)(v88 + 8 * v59);
  if (v64) {
    goto LABEL_24;
  }
  int64_t v59 = v63 + 3;
  if (v63 + 3 >= v89) {
    goto LABEL_40;
  }
  unint64_t v64 = *(void *)(v88 + 8 * v59);
  if (v64) {
    goto LABEL_24;
  }
  int64_t v59 = v63 + 4;
  if (v63 + 4 >= v89) {
    goto LABEL_40;
  }
  unint64_t v64 = *(void *)(v88 + 8 * v59);
  if (v64)
  {
LABEL_24:
    unint64_t v57 = (v64 - 1) & v64;
    unint64_t v62 = __clz(__rbit64(v64)) + (v59 << 6);
    goto LABEL_25;
  }
  int64_t v65 = v63 + 5;
  if (v65 >= v89)
  {
LABEL_40:
    swift_release();
    swift_bridgeObjectRelease();
    return 1;
  }
  unint64_t v64 = *(void *)(v88 + 8 * v65);
  if (v64)
  {
    int64_t v59 = v65;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v59 = v65 + 1;
    if (__OFADD__(v65, 1)) {
      break;
    }
    if (v59 >= v89) {
      goto LABEL_40;
    }
    unint64_t v64 = *(void *)(v88 + 8 * v59);
    ++v65;
    if (v64) {
      goto LABEL_24;
    }
  }
LABEL_47:
  __break(1u);
  return result;
}

uint64_t _s13CoreIDVShared15AnyCodableArrayV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for AnyCodable() - 8;
  uint64_t v12 = MEMORY[0x1F4188790](v4, v5, v6, v7, v8, v9, v10, v11);
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12, v15, v16, v17, v18, v19, v20, v21);
  uint64_t v24 = (char *)&v35 - v23;
  uint64_t v25 = *a1;
  uint64_t v26 = *a2;
  uint64_t v27 = *(void *)(v25 + 16);
  if (v27 != *(void *)(*a2 + 16))
  {
    char v33 = 0;
    return v33 & 1;
  }
  if (!v27)
  {
    char v33 = 1;
    return v33 & 1;
  }
  unint64_t v28 = 0;
  unint64_t v29 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  uint64_t v30 = *(void *)(v22 + 72);
  uint64_t v31 = v27 - 1;
  while (1)
  {
    uint64_t result = sub_1D79776B4(v25 + v29, (uint64_t)v24);
    if (v28 >= *(void *)(v26 + 16)) {
      break;
    }
    sub_1D79776B4(v26 + v29, (uint64_t)v14);
    char v33 = _s13CoreIDVShared10AnyCodableV2eeoiySbAC_ACtFZ_0(v24, v14);
    sub_1D7977718((uint64_t)v14);
    sub_1D7977718((uint64_t)v24);
    if (v33)
    {
      v29 += v30;
      if (v31 != v28++) {
        continue;
      }
    }
    return v33 & 1;
  }
  __break(1u);
  return result;
}

uint64_t _s13CoreIDVShared10AnyCodableV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4 = sub_1D7A9B148();
  uint64_t v301 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4, v5, v6, v7, v8, v9, v10, v11);
  char v298 = (char *)&v293 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9118);
  MEMORY[0x1F4188790](v13 - 8, v14, v15, v16, v17, v18, v19, v20);
  char v300 = (char *)&v293 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v299 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA845448);
  MEMORY[0x1F4188790](v299, v22, v23, v24, v25, v26, v27, v28);
  uint64_t v302 = (uint64_t)&v293 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for AnyCodable();
  uint64_t v38 = MEMORY[0x1F4188790](v30, v31, v32, v33, v34, v35, v36, v37);
  uint64_t v309 = (uint64_t)&v293 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = MEMORY[0x1F4188790](v38, v40, v41, v42, v43, v44, v45, v46);
  uint64_t v49 = (char *)&v293 - v48;
  uint64_t v57 = MEMORY[0x1F4188790](v47, v50, v51, v52, v53, v54, v55, v56);
  char v306 = (char *)&v293 - v58;
  uint64_t v66 = MEMORY[0x1F4188790](v57, v59, v60, v61, v62, v63, v64, v65);
  int v303 = (char *)&v293 - v67;
  uint64_t v75 = MEMORY[0x1F4188790](v66, v68, v69, v70, v71, v72, v73, v74);
  uint64_t v310 = (uint64_t)&v293 - v76;
  uint64_t v84 = MEMORY[0x1F4188790](v75, v77, v78, v79, v80, v81, v82, v83);
  __int16 v305 = (char *)&v293 - v85;
  uint64_t v93 = MEMORY[0x1F4188790](v84, v86, v87, v88, v89, v90, v91, v92);
  uint64_t v101 = MEMORY[0x1F4188790](v93, v94, v95, v96, v97, v98, v99, v100);
  uint64_t v109 = MEMORY[0x1F4188790](v101, v102, v103, v104, v105, v106, v107, v108);
  uint64_t v314 = (uint64_t)&v293 - v110;
  uint64_t v118 = MEMORY[0x1F4188790](v109, v111, v112, v113, v114, v115, v116, v117);
  uint64_t v307 = (char *)&v293 - v119;
  uint64_t v127 = MEMORY[0x1F4188790](v118, v120, v121, v122, v123, v124, v125, v126);
  uint64_t v315 = (uint64_t)&v293 - v128;
  uint64_t v136 = MEMORY[0x1F4188790](v127, v129, v130, v131, v132, v133, v134, v135);
  uint64_t v313 = (uint64_t)&v293 - v137;
  uint64_t v145 = MEMORY[0x1F4188790](v136, v138, v139, v140, v141, v142, v143, v144);
  uint64_t v308 = (uint64_t)&v293 - v146;
  uint64_t v154 = MEMORY[0x1F4188790](v145, v147, v148, v149, v150, v151, v152, v153);
  uint64_t v162 = MEMORY[0x1F4188790](v154, v155, v156, v157, v158, v159, v160, v161);
  uint64_t v164 = (float *)((char *)&v293 - v163);
  uint64_t v172 = MEMORY[0x1F4188790](v162, v165, v166, v167, v168, v169, v170, v171);
  char v174 = (float *)((char *)&v293 - v173);
  uint64_t v182 = MEMORY[0x1F4188790](v172, v175, v176, v177, v178, v179, v180, v181);
  uint64_t v184 = (char *)&v293 - v183;
  uint64_t v192 = MEMORY[0x1F4188790](v182, v185, v186, v187, v188, v189, v190, v191);
  char v194 = (char *)&v293 - v193;
  uint64_t v202 = MEMORY[0x1F4188790](v192, v195, v196, v197, v198, v199, v200, v201);
  float v204 = (char *)&v293 - v203;
  uint64_t v212 = MEMORY[0x1F4188790](v202, v205, v206, v207, v208, v209, v210, v211);
  float v214 = (char *)&v293 - v213;
  int v215 = *a1;
  int v216 = *a2;
  uint64_t v311 = v218;
  uint64_t v312 = v217;
  uint64_t v304 = v219;
  if (v215 == 2)
  {
    if (v216 == 2)
    {
      uint64_t v295 = v4;
      char v296 = (int *)v212;
      float v220 = a1;
      sub_1D79776B4((uint64_t)a1, (uint64_t)&v293 - v213);
      uint64_t v221 = (uint64_t)a2;
      uint64_t v222 = (uint64_t)a2;
      uint64_t v223 = (uint64_t)v220;
      sub_1D79776B4(v222, (uint64_t)v204);
      goto LABEL_7;
    }
    goto LABEL_5;
  }
  if (v216 == 2)
  {
LABEL_5:
    float v224 = a1;
    sub_1D79776B4((uint64_t)a1, (uint64_t)&v293 - v213);
    uint64_t v221 = (uint64_t)a2;
    uint64_t v225 = (uint64_t)a2;
    uint64_t v223 = (uint64_t)v224;
    sub_1D79776B4(v225, (uint64_t)v204);
LABEL_10:
    sub_1D7977718((uint64_t)v204);
    sub_1D7977718((uint64_t)v214);
    goto LABEL_11;
  }
  uint64_t v295 = v4;
  char v296 = (int *)v212;
  float v226 = v49;
  char v227 = a1;
  LODWORD(v297) = ((v215 & 1) == 0) ^ v216;
  sub_1D79776B4((uint64_t)a1, (uint64_t)&v293 - v213);
  uint64_t v221 = (uint64_t)a2;
  uint64_t v228 = (uint64_t)a2;
  uint64_t v223 = (uint64_t)v227;
  uint64_t v49 = v226;
  sub_1D79776B4(v228, (uint64_t)v204);
  if ((v297 & 1) == 0) {
    goto LABEL_10;
  }
LABEL_7:
  __int16 v297 = v49;
  uint64_t v294 = *((void *)v214 + 1);
  char v229 = v214[16];
  sub_1D7977718((uint64_t)v214);
  uint64_t v230 = *((void *)v204 + 1);
  char v231 = v204[16];
  sub_1D7977718((uint64_t)v204);
  if (v229)
  {
    uint64_t v49 = v297;
    if (v231)
    {
      sub_1D79776B4(v223, (uint64_t)v194);
      sub_1D79776B4(v221, (uint64_t)v184);
      uint64_t v232 = (uint64_t)v307;
      goto LABEL_34;
    }
    goto LABEL_11;
  }
  uint64_t v49 = v297;
  if (v231)
  {
LABEL_11:
    sub_1D79776B4(v223, (uint64_t)v194);
    sub_1D79776B4(v221, (uint64_t)v184);
    uint64_t v232 = (uint64_t)v307;
LABEL_12:
    sub_1D7977718((uint64_t)v184);
    sub_1D7977718((uint64_t)v194);
    uint64_t v233 = v315;
    goto LABEL_13;
  }
  sub_1D79776B4(v223, (uint64_t)v194);
  sub_1D79776B4(v221, (uint64_t)v184);
  BOOL v248 = v294 == v230;
  uint64_t v232 = (uint64_t)v307;
  if (!v248) {
    goto LABEL_12;
  }
LABEL_34:
  uint64_t v249 = *((void *)v194 + 3);
  char v250 = v194[32];
  sub_1D7977718((uint64_t)v194);
  uint64_t v251 = *((void *)v184 + 3);
  char v252 = v184[32];
  sub_1D7977718((uint64_t)v184);
  if (v250)
  {
    uint64_t v49 = v297;
    uint64_t v233 = v315;
    if (v252)
    {
      sub_1D79776B4(v223, (uint64_t)v174);
      uint64_t v234 = v221;
      sub_1D79776B4(v221, (uint64_t)v164);
      goto LABEL_40;
    }
    goto LABEL_13;
  }
  uint64_t v49 = v297;
  uint64_t v233 = v315;
  if (v252)
  {
LABEL_13:
    sub_1D79776B4(v223, (uint64_t)v174);
    uint64_t v234 = v221;
    sub_1D79776B4(v221, (uint64_t)v164);
LABEL_14:
    sub_1D7977718((uint64_t)v164);
    sub_1D7977718((uint64_t)v174);
    uint64_t v236 = (uint64_t)v305;
    uint64_t v235 = (uint64_t)v306;
    uint64_t v237 = v314;
    uint64_t v238 = v304;
    goto LABEL_15;
  }
  sub_1D79776B4(v223, (uint64_t)v174);
  sub_1D79776B4(v221, (uint64_t)v164);
  BOOL v248 = v249 == v251;
  uint64_t v234 = v221;
  if (!v248) {
    goto LABEL_14;
  }
LABEL_40:
  float v253 = v174[9];
  char v254 = *((unsigned char *)v174 + 40);
  sub_1D7977718((uint64_t)v174);
  float v255 = v164[9];
  char v256 = *((unsigned char *)v164 + 40);
  sub_1D7977718((uint64_t)v164);
  uint64_t v237 = v314;
  if (v254)
  {
    uint64_t v236 = (uint64_t)v305;
    uint64_t v235 = (uint64_t)v306;
    uint64_t v233 = v315;
    uint64_t v238 = v304;
    if (v256)
    {
      sub_1D79776B4(v223, v304);
      uint64_t v239 = v308;
      sub_1D79776B4(v234, v308);
      goto LABEL_45;
    }
    goto LABEL_15;
  }
  uint64_t v236 = (uint64_t)v305;
  uint64_t v235 = (uint64_t)v306;
  uint64_t v233 = v315;
  uint64_t v238 = v304;
  if (v256)
  {
LABEL_15:
    sub_1D79776B4(v223, v238);
    uint64_t v239 = v308;
    sub_1D79776B4(v234, v308);
LABEL_16:
    sub_1D7977718(v239);
    sub_1D7977718(v238);
    goto LABEL_17;
  }
  sub_1D79776B4(v223, v304);
  uint64_t v239 = v308;
  sub_1D79776B4(v234, v308);
  if (v253 != v255) {
    goto LABEL_16;
  }
LABEL_45:
  double v257 = *(double *)(v238 + 48);
  char v258 = *(unsigned char *)(v238 + 56);
  sub_1D7977718(v238);
  double v259 = *(double *)(v239 + 48);
  uint64_t v260 = v239;
  char v261 = *(unsigned char *)(v239 + 56);
  sub_1D7977718(v260);
  if (v258)
  {
    uint64_t v233 = v315;
    if (v261)
    {
      uint64_t v240 = v313;
      sub_1D79776B4(v223, v313);
      sub_1D79776B4(v234, v233);
      goto LABEL_50;
    }
    goto LABEL_17;
  }
  uint64_t v233 = v315;
  if (v261)
  {
LABEL_17:
    uint64_t v240 = v313;
    sub_1D79776B4(v223, v313);
    sub_1D79776B4(v234, v233);
LABEL_18:
    sub_1D7977718(v233);
    sub_1D7977718(v240);
LABEL_19:
    sub_1D79776B4(v223, v232);
    sub_1D79776B4(v234, v237);
LABEL_20:
    sub_1D7977718(v237);
    sub_1D7977718(v232);
LABEL_21:
    uint64_t v241 = v310;
    uint64_t v242 = v312;
    sub_1D79776B4(v223, v312);
    uint64_t v243 = v311;
    sub_1D79776B4(v234, v311);
    goto LABEL_22;
  }
  uint64_t v240 = v313;
  sub_1D79776B4(v223, v313);
  sub_1D79776B4(v234, v233);
  if (v257 != v259) {
    goto LABEL_18;
  }
LABEL_50:
  uint64_t v262 = v296[9];
  uint64_t v263 = v240 + v262;
  uint64_t v264 = v233 + v262;
  uint64_t v265 = v302;
  uint64_t v266 = v302 + *(int *)(v299 + 48);
  sub_1D78614F8(v263, v302, &qword_1EBDF9118);
  uint64_t v308 = v266;
  sub_1D78614F8(v264, v266, &qword_1EBDF9118);
  int v267 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v301 + 48);
  uint64_t v268 = v295;
  if (v267(v265, 1, v295) == 1)
  {
    sub_1D7977718(v315);
    sub_1D7977718(v313);
    if (v267(v308, 1, v268) == 1)
    {
      sub_1D7871C4C(v302, &qword_1EBDF9118);
      sub_1D79776B4(v223, v232);
      uint64_t v237 = v314;
      sub_1D79776B4(v234, v314);
      goto LABEL_57;
    }
    goto LABEL_55;
  }
  sub_1D78614F8(v265, (uint64_t)v300, &qword_1EBDF9118);
  if (v267(v308, 1, v268) == 1)
  {
    sub_1D7977718(v315);
    sub_1D7977718(v313);
    (*(void (**)(char *, uint64_t))(v301 + 8))(v300, v268);
LABEL_55:
    sub_1D7871C4C(v302, &qword_1EA845448);
    uint64_t v237 = v314;
    goto LABEL_19;
  }
  uint64_t v269 = v301;
  (*(void (**)(char *, uint64_t, uint64_t))(v301 + 32))(v298, v308, v268);
  sub_1D7977870(&qword_1EA845450, MEMORY[0x1E4F27928]);
  LODWORD(v308) = sub_1D7A9BF88();
  char v270 = *(void (**)(char *, uint64_t))(v269 + 8);
  v270(v298, v268);
  sub_1D7977718(v315);
  sub_1D7977718(v313);
  v270(v300, v268);
  sub_1D7871C4C(v265, &qword_1EBDF9118);
  sub_1D79776B4(v223, v232);
  uint64_t v237 = v314;
  sub_1D79776B4(v234, v314);
  if ((v308 & 1) == 0) {
    goto LABEL_20;
  }
LABEL_57:
  int v271 = v296;
  uint64_t v272 = v296[10];
  __int16 v273 = (void *)(v232 + v272);
  uint64_t v274 = *(void *)(v232 + v272 + 8);
  int v275 = (void *)(v237 + v272);
  uint64_t v276 = v237;
  uint64_t v277 = v275[1];
  if (!v274)
  {
    swift_bridgeObjectRetain();
    sub_1D7977718(v276);
    sub_1D7977718(v232);
    if (!v277) {
      goto LABEL_64;
    }
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  if (!v277)
  {
    swift_bridgeObjectRetain();
    sub_1D7977718(v314);
    sub_1D7977718(v232);
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  if (*v273 == *v275 && v274 == v277)
  {
    swift_bridgeObjectRetain();
    sub_1D7977718(v314);
    sub_1D7977718(v232);
    swift_bridgeObjectRelease();
LABEL_64:
    uint64_t v242 = v312;
    sub_1D79776B4(v223, v312);
    uint64_t v243 = v311;
    sub_1D79776B4(v234, v311);
    goto LABEL_67;
  }
  LODWORD(v315) = sub_1D7A9D358();
  swift_bridgeObjectRetain();
  sub_1D7977718(v314);
  sub_1D7977718(v232);
  swift_bridgeObjectRelease();
  uint64_t v242 = v312;
  sub_1D79776B4(v223, v312);
  uint64_t v243 = v311;
  sub_1D79776B4(v234, v311);
  uint64_t v241 = v310;
  if ((v315 & 1) == 0)
  {
LABEL_22:
    sub_1D7977718(v243);
    sub_1D7977718(v242);
    uint64_t v244 = (uint64_t)v303;
LABEL_23:
    sub_1D79776B4(v223, v236);
    sub_1D79776B4(v234, v241);
LABEL_24:
    sub_1D7977718(v241);
    sub_1D7977718(v236);
LABEL_25:
    sub_1D79776B4(v223, v244);
    sub_1D79776B4(v234, v235);
LABEL_26:
    sub_1D7977718(v235);
    sub_1D7977718(v244);
LABEL_27:
    uint64_t v245 = v309;
    sub_1D79776B4(v223, (uint64_t)v49);
    sub_1D79776B4(v234, v245);
    goto LABEL_28;
  }
LABEL_67:
  uint64_t v278 = v271[11];
  uint64_t v279 = *(void *)(v243 + v278);
  if (!*(void *)(v242 + v278))
  {
    swift_bridgeObjectRetain();
    sub_1D7977718(v243);
    sub_1D7977718(v242);
    if (!v279)
    {
      swift_bridgeObjectRelease();
      sub_1D79776B4(v223, v236);
      uint64_t v241 = v310;
      sub_1D79776B4(v234, v310);
      uint64_t v244 = (uint64_t)v303;
      goto LABEL_76;
    }
    goto LABEL_74;
  }
  v317[0] = *(void *)(v242 + v278);
  if (!v279)
  {
    swift_bridgeObjectRetain_n();
    sub_1D7977718(v311);
    sub_1D7977718(v312);
    swift_bridgeObjectRelease();
LABEL_74:
    uint64_t v244 = (uint64_t)v303;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v241 = v310;
    goto LABEL_23;
  }
  uint64_t v316 = v279;
  swift_bridgeObjectRetain_n();
  char v280 = _s13CoreIDVShared15AnyCodableArrayV2eeoiySbAC_ACtFZ_0(v317, &v316);
  sub_1D7977718(v311);
  sub_1D7977718(v312);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D79776B4(v223, v236);
  uint64_t v241 = v310;
  sub_1D79776B4(v234, v310);
  uint64_t v244 = (uint64_t)v303;
  if ((v280 & 1) == 0) {
    goto LABEL_24;
  }
LABEL_76:
  uint64_t v281 = v271[12];
  uint64_t v282 = *(void *)(v241 + v281);
  if (!*(void *)(v236 + v281))
  {
    swift_bridgeObjectRetain();
    sub_1D7977718(v310);
    sub_1D7977718(v236);
    if (!v282)
    {
      swift_bridgeObjectRelease();
      sub_1D79776B4(v223, v244);
      sub_1D79776B4(v234, v235);
      goto LABEL_85;
    }
    goto LABEL_83;
  }
  v317[0] = *(void *)(v236 + v281);
  if (!v282)
  {
    swift_bridgeObjectRetain_n();
    sub_1D7977718(v310);
    sub_1D7977718(v236);
    swift_bridgeObjectRelease();
LABEL_83:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_25;
  }
  uint64_t v316 = v282;
  swift_bridgeObjectRetain_n();
  char v283 = _s13CoreIDVShared20AnyCodableDictionaryV2eeoiySbAC_ACtFZ_0(v317, &v316);
  sub_1D7977718(v310);
  sub_1D7977718(v236);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D79776B4(v223, v244);
  sub_1D79776B4(v234, v235);
  if ((v283 & 1) == 0) {
    goto LABEL_26;
  }
LABEL_85:
  uint64_t v284 = v271[13];
  uint64_t v285 = *(void *)(v235 + v284);
  if (*(void *)(v244 + v284))
  {
    v317[0] = *(void *)(v244 + v284);
    if (v285)
    {
      uint64_t v316 = v285;
      swift_bridgeObjectRetain_n();
      char v286 = _s13CoreIDVShared32IntegerKeyedAnyCodableDictionaryV2eeoiySbAC_ACtFZ_0(v317, &v316);
      sub_1D7977718(v235);
      sub_1D7977718(v244);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1D79776B4(v223, (uint64_t)v49);
      uint64_t v245 = v309;
      sub_1D79776B4(v234, v309);
      if (v286) {
        goto LABEL_94;
      }
LABEL_28:
      sub_1D7977718(v245);
      sub_1D7977718((uint64_t)v49);
      goto LABEL_29;
    }
    swift_bridgeObjectRetain_n();
    sub_1D7977718(v235);
    sub_1D7977718(v244);
    swift_bridgeObjectRelease();
    goto LABEL_92;
  }
  swift_bridgeObjectRetain();
  sub_1D7977718(v235);
  sub_1D7977718(v244);
  if (v285)
  {
LABEL_92:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v49 = v297;
    goto LABEL_27;
  }
  swift_bridgeObjectRelease();
  uint64_t v49 = v297;
  sub_1D79776B4(v223, (uint64_t)v297);
  uint64_t v245 = v309;
  sub_1D79776B4(v234, v309);
LABEL_94:
  uint64_t v287 = v271[14];
  uint64_t v289 = *(void *)&v49[v287];
  unint64_t v288 = *(void *)&v49[v287 + 8];
  char v290 = (uint64_t *)(v245 + v287);
  uint64_t v291 = *v290;
  unint64_t v292 = v290[1];
  if (v288 >> 60 == 15)
  {
    sub_1D786E9D8(v291, v292);
    sub_1D7977718(v309);
    sub_1D7977718((uint64_t)v297);
    if (v292 >> 60 == 15)
    {
      sub_1D7871BDC(v289, v288);
      char v246 = 1;
      return v246 & 1;
    }
  }
  else
  {
    if (v292 >> 60 != 15)
    {
      sub_1D786E9D8(v289, v288);
      sub_1D786E9D8(v291, v292);
      sub_1D786E9D8(v289, v288);
      char v246 = sub_1D788583C(v289, v288, v291, v292);
      sub_1D7871BDC(v291, v292);
      sub_1D7871BDC(v289, v288);
      sub_1D7977718(v309);
      sub_1D7977718((uint64_t)v297);
      sub_1D7871BDC(v289, v288);
      return v246 & 1;
    }
    sub_1D7860790(v289, v288);
    sub_1D7860790(v289, v288);
    sub_1D7977718(v309);
    sub_1D7977718((uint64_t)v297);
    sub_1D7871BDC(v289, v288);
  }
  sub_1D7871BDC(v289, v288);
  sub_1D7871BDC(v291, v292);
LABEL_29:
  char v246 = 0;
  return v246 & 1;
}

unint64_t sub_1D79775B8()
{
  unint64_t result = qword_1EA845360;
  if (!qword_1EA845360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845360);
  }
  return result;
}

unint64_t sub_1D797760C()
{
  unint64_t result = qword_1EA845368;
  if (!qword_1EA845368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845368);
  }
  return result;
}

unint64_t sub_1D7977660()
{
  unint64_t result = qword_1EA845370;
  if (!qword_1EA845370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845370);
  }
  return result;
}

uint64_t sub_1D79776B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AnyCodable();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D7977718(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AnyCodable();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1D7977774()
{
  unint64_t result = qword_1EA845378;
  if (!qword_1EA845378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845378);
  }
  return result;
}

unint64_t sub_1D79777C8()
{
  unint64_t result = qword_1EA845380;
  if (!qword_1EA845380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845380);
  }
  return result;
}

unint64_t sub_1D797781C()
{
  unint64_t result = qword_1EA845388;
  if (!qword_1EA845388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845388);
  }
  return result;
}

uint64_t sub_1D7977870(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D79778B8()
{
  unint64_t result = qword_1EA845390;
  if (!qword_1EA845390)
  {
    sub_1D78C4038(255, (unint64_t *)&qword_1EBDF93C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845390);
  }
  return result;
}

unint64_t sub_1D7977920()
{
  unint64_t result = qword_1EA8453B8;
  if (!qword_1EA8453B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8453B8);
  }
  return result;
}

unint64_t sub_1D7977974()
{
  unint64_t result = qword_1EA8453C0;
  if (!qword_1EA8453C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8453C0);
  }
  return result;
}

unint64_t sub_1D79779C8()
{
  unint64_t result = qword_1EA8453C8;
  if (!qword_1EA8453C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8453C8);
  }
  return result;
}

unint64_t sub_1D7977A1C()
{
  unint64_t result = qword_1EA8453D0;
  if (!qword_1EA8453D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8453D0);
  }
  return result;
}

unint64_t sub_1D7977A70()
{
  unint64_t result = qword_1EA8453E8;
  if (!qword_1EA8453E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8453E8);
  }
  return result;
}

uint64_t sub_1D7977AC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AnyCodable();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D7977B28()
{
  return sub_1D7977870(&qword_1EA8453F8, (void (*)(uint64_t))type metadata accessor for AnyCodable);
}

unint64_t sub_1D7977B74()
{
  unint64_t result = qword_1EA845400;
  if (!qword_1EA845400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845400);
  }
  return result;
}

unint64_t sub_1D7977BCC()
{
  unint64_t result = qword_1EA845408;
  if (!qword_1EA845408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845408);
  }
  return result;
}

unint64_t sub_1D7977C24()
{
  unint64_t result = qword_1EA845410;
  if (!qword_1EA845410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845410);
  }
  return result;
}

unint64_t sub_1D7977C7C()
{
  unint64_t result = qword_1EA845418;
  if (!qword_1EA845418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845418);
  }
  return result;
}

unint64_t sub_1D7977CD4()
{
  unint64_t result = qword_1EA845420;
  if (!qword_1EA845420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845420);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for AnyCodable(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    void *v4 = *a2;
    uint64_t v4 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(void *)(a1 + 8) = a2[1];
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    *(void *)(a1 + 24) = a2[3];
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    *(_DWORD *)(a1 + 36) = *((_DWORD *)a2 + 9);
    *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
    *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
    *(void *)(a1 + 48) = a2[6];
    uint64_t v7 = a3[9];
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_1D7A9B148();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9118);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    uint64_t v14 = a3[10];
    uint64_t v15 = a3[11];
    uint64_t v16 = (void *)((char *)v4 + v14);
    uint64_t v17 = (uint64_t *)((char *)a2 + v14);
    uint64_t v18 = v17[1];
    *uint64_t v16 = *v17;
    v16[1] = v18;
    *(void *)((char *)v4 + v15) = *(uint64_t *)((char *)a2 + v15);
    uint64_t v19 = a3[13];
    *(void *)((char *)v4 + a3[12]) = *(uint64_t *)((char *)a2 + a3[12]);
    *(void *)((char *)v4 + v19) = *(uint64_t *)((char *)a2 + v19);
    uint64_t v20 = a3[14];
    uint64_t v21 = (char *)v4 + v20;
    uint64_t v22 = (_OWORD *)((char *)a2 + v20);
    unint64_t v23 = *(uint64_t *)((char *)a2 + v20 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v23 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v21 = *v22;
    }
    else
    {
      uint64_t v24 = *(void *)v22;
      sub_1D7860790(v24, v23);
      *(void *)uint64_t v21 = v24;
      *((void *)v21 + 1) = v23;
    }
  }
  return v4;
}

uint64_t destroy for AnyCodable(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = sub_1D7A9B148();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v8 = (uint64_t *)(a1 + *(int *)(a2 + 56));
  unint64_t v9 = v8[1];
  if (v9 >> 60 != 15)
  {
    uint64_t v10 = *v8;
    return sub_1D78607E8(v10, v9);
  }
  return result;
}

uint64_t initializeWithCopy for AnyCodable(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v6 = a3[9];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_1D7A9B148();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9118);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[10];
  uint64_t v13 = a3[11];
  uint64_t v14 = (void *)(a1 + v12);
  uint64_t v15 = (void *)(a2 + v12);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  uint64_t v17 = a3[13];
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  *(void *)(a1 + v17) = *(void *)(a2 + v17);
  uint64_t v18 = a3[14];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = (_OWORD *)(a2 + v18);
  unint64_t v21 = *(void *)(a2 + v18 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v21 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v19 = *v20;
  }
  else
  {
    uint64_t v22 = *(void *)v20;
    sub_1D7860790(v22, v21);
    *(void *)uint64_t v19 = v22;
    *(void *)(v19 + 8) = v21;
  }
  return a1;
}

uint64_t assignWithCopy for AnyCodable(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v7;
  LODWORD(v7) = *(_DWORD *)(a2 + 36);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(_DWORD *)(a1 + 36) = v7;
  uint64_t v8 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v8;
  uint64_t v9 = a3[9];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  uint64_t v12 = sub_1D7A9B148();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9118);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 24))(v10, v11, v12);
LABEL_7:
  uint64_t v18 = a3[10];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (void *)(a2 + v18);
  *uint64_t v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[14];
  uint64_t v22 = (uint64_t *)(a1 + v21);
  unint64_t v23 = (uint64_t *)(a2 + v21);
  unint64_t v24 = *(void *)(a2 + v21 + 8);
  if (*(void *)(a1 + v21 + 8) >> 60 != 15)
  {
    if (v24 >> 60 != 15)
    {
      uint64_t v26 = *v23;
      sub_1D7860790(v26, v24);
      uint64_t v27 = *v22;
      unint64_t v28 = v22[1];
      *uint64_t v22 = v26;
      v22[1] = v24;
      sub_1D78607E8(v27, v28);
      return a1;
    }
    sub_1D7870C24((uint64_t)v22);
    goto LABEL_12;
  }
  if (v24 >> 60 == 15)
  {
LABEL_12:
    *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
    return a1;
  }
  uint64_t v25 = *v23;
  sub_1D7860790(v25, v24);
  *uint64_t v22 = v25;
  v22[1] = v24;
  return a1;
}

uint64_t initializeWithTake for AnyCodable(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v6 = a3[9];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_1D7A9B148();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9118);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  uint64_t v13 = a3[13];
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  *(_OWORD *)(a1 + a3[14]) = *(_OWORD *)(a2 + a3[14]);
  return a1;
}

uint64_t assignWithTake for AnyCodable(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v6 = a3[9];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = sub_1D7A9B148();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9118);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[10];
  int v16 = (void *)(a1 + v15);
  uint64_t v17 = (uint64_t *)(a2 + v15);
  uint64_t v19 = *v17;
  uint64_t v18 = v17[1];
  *int v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  swift_bridgeObjectRelease();
  uint64_t v20 = a3[14];
  uint64_t v21 = (uint64_t *)(a1 + v20);
  uint64_t v22 = (uint64_t *)(a2 + v20);
  unint64_t v23 = *(void *)(a1 + v20 + 8);
  if (v23 >> 60 != 15)
  {
    unint64_t v24 = v22[1];
    if (v24 >> 60 != 15)
    {
      uint64_t v25 = *v21;
      uint64_t *v21 = *v22;
      v21[1] = v24;
      sub_1D78607E8(v25, v23);
      return a1;
    }
    sub_1D7870C24((uint64_t)v21);
  }
  *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  return a1;
}

uint64_t getEnumTagSinglePayload for AnyCodable(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D797896C);
}

uint64_t sub_1D797896C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9118);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 36);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 40) + 8);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    int v13 = v12 - 1;
    if (v13 < 0) {
      int v13 = -1;
    }
    return (v13 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for AnyCodable(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D7978A58);
}

uint64_t sub_1D7978A58(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF9118);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 36);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 40) + 8) = a2;
  }
  return result;
}

void sub_1D7978B20()
{
  sub_1D787010C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

ValueMetadata *type metadata accessor for AnyCodableArray()
{
  return &type metadata for AnyCodableArray;
}

uint64_t destroy for GenericCodingKeys()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for GenericCodingKeys(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for GenericCodingKeys(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for GenericCodingKeys(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for GenericCodingKeys(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GenericCodingKeys(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GenericCodingKeys()
{
  return &type metadata for GenericCodingKeys;
}

ValueMetadata *type metadata accessor for AnyCodableDictionary()
{
  return &type metadata for AnyCodableDictionary;
}

ValueMetadata *type metadata accessor for IntegerKeyedAnyCodableDictionary()
{
  return &type metadata for IntegerKeyedAnyCodableDictionary;
}

uint64_t sub_1D7978DD0()
{
  return sub_1D7978F60(&qword_1EA845460, &qword_1EA845468);
}

uint64_t sub_1D7978DF8()
{
  return sub_1D7978F60(&qword_1EA845470, &qword_1EA845478);
}

uint64_t sub_1D7978E20()
{
  return sub_1D7978F60(&qword_1EA845480, &qword_1EA845488);
}

uint64_t sub_1D7978E48()
{
  return sub_1D7978F60(&qword_1EA845490, &qword_1EA845498);
}

uint64_t sub_1D7978E70()
{
  return sub_1D7978F60(&qword_1EA8454A0, &qword_1EA8454A8);
}

uint64_t sub_1D7978E98()
{
  return sub_1D7978F60(&qword_1EA8454B0, &qword_1EA8454B8);
}

uint64_t sub_1D7978EC0()
{
  return sub_1D7978F60(&qword_1EA8454C0, &qword_1EA8454C8);
}

uint64_t sub_1D7978EE8()
{
  return sub_1D7978F60(&qword_1EA8454D0, &qword_1EA8454D8);
}

uint64_t sub_1D7978F10()
{
  return sub_1D7978F60(&qword_1EA8454E0, &qword_1EA8454E8);
}

uint64_t sub_1D7978F38()
{
  return sub_1D7978F60(&qword_1EA8454F0, qword_1EA8454F8);
}

uint64_t sub_1D7978F60(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D7978FB0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1D7979040(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7
    && *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x18uLL
    && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    uint64_t v8 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_1D79790F8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_1D7979124(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_1D7979174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_1D79791C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_1D7979214(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_1D7979264(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_1D79793C0(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x1D79795D8);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        int v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t type metadata accessor for IntegerBytesCollection()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1D7979618()
{
  return swift_getWitnessTable();
}

uint64_t sub_1D7979634()
{
  return MEMORY[0x1E4FBB568];
}

uint64_t sub_1D7979640()
{
  return MEMORY[0x1E4FBB5A0];
}

uint64_t sub_1D797964C()
{
  return sub_1D7A9BF08();
}

uint64_t sub_1D7979660()
{
  return sub_1D7A9BF88() & 1;
}

uint64_t sub_1D7979694()
{
  return sub_1D7A9D628();
}

uint64_t sub_1D79796EC()
{
  return sub_1D7A9D628();
}

uint64_t sub_1D7979730()
{
  return sub_1D7979660();
}

uint64_t sub_1D797973C(uint64_t result)
{
  if (__OFSUB__(result, 1))
  {
    __break(1u);
  }
  else if ((unint64_t)(result - 0x1000000000000001) >> 61 == 7)
  {
    sub_1D78CDF34();
    return sub_1D7A9CAF8();
  }
  __break(1u);
  return result;
}

uint64_t sub_1D79797C4()
{
  return sub_1D7A2C724();
}

uint64_t sub_1D79797D0(uint64_t a1, uint64_t a2)
{
  uint64_t v110 = (char *)a1;
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v108 = *(char **)(a2 + 24);
  uint64_t v4 = *(void *)(*((void *)v108 + 1) + 24);
  swift_getAssociatedTypeWitness();
  uint64_t v106 = v4;
  uint64_t v109 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v12 = MEMORY[0x1F4188790](AssociatedTypeWitness, v5, v6, v7, v8, v9, v10, v11);
  uint64_t v112 = (char *)&v102 - v13;
  uint64_t v14 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v12, v15, v16, v17, v18, v19, v20, v21);
  unint64_t v23 = (char *)&v102 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = swift_checkMetadataState();
  uint64_t v114 = *(void *)(v24 - 8);
  uint64_t v32 = MEMORY[0x1F4188790](v24, v25, v26, v27, v28, v29, v30, v31);
  uint64_t v102 = (char *)&v102 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = MEMORY[0x1F4188790](v32, v34, v35, v36, v37, v38, v39, v40);
  uint64_t v103 = (char *)&v102 - v42;
  uint64_t v50 = MEMORY[0x1F4188790](v41, v43, v44, v45, v46, v47, v48, v49);
  uint64_t v111 = (char *)&v102 - v51;
  uint64_t v59 = MEMORY[0x1F4188790](v50, v52, v53, v54, v55, v56, v57, v58);
  uint64_t v61 = (char *)&v102 - v60;
  uint64_t v69 = MEMORY[0x1F4188790](v59, v62, v63, v64, v65, v66, v67, v68);
  uint64_t v71 = (char *)&v102 - v70;
  MEMORY[0x1F4188790](v69, v72, v73, v74, v75, v76, v77, v78);
  uint64_t v80 = (char *)&v102 - v79;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v23, v2, v3);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_1D7A9CA88();
  sub_1D797973C((uint64_t)v110);
  sub_1D7A9CAA8();
  uint64_t v81 = *(void (**)(char *, uint64_t))(v14 + 8);
  uint64_t v105 = v3;
  v81(v23, v3);
  uint64_t v82 = v114;
  uint64_t v83 = *(void (**)(char *, uint64_t))(v114 + 8);
  v83(v71, v24);
  uint64_t v104 = swift_getAssociatedConformanceWitness();
  sub_1D7A9D4B8();
  sub_1D7A9D338();
  uint64_t v110 = v80;
  sub_1D7A9CA98();
  v83(v71, v24);
  uint64_t v84 = v111;
  uint64_t v85 = *(void (**)(char *, char *, uint64_t))(v82 + 16);
  uint64_t v108 = v61;
  uint64_t v86 = v61;
  uint64_t v87 = v85;
  uint64_t v114 = v82 + 16;
  v85(v111, v86, v24);
  if (sub_1D7A9CAD8())
  {
    sub_1D7A9D4B8();
    sub_1D7A9D338();
    swift_getAssociatedConformanceWitness();
    char v88 = sub_1D7A9BF68();
    v83(v71, v24);
    if ((v88 & 1) == 0) {
      goto LABEL_16;
    }
  }
  uint64_t v89 = sub_1D7A9CAC8();
  uint64_t v90 = (uint64_t)v110;
  if (v89 < 8)
  {
LABEL_15:
    uint64_t v100 = sub_1D7A9CAB8();
    v83(v84, v24);
    v83(v108, v24);
    v83((char *)v90, v24);
    return v100;
  }
  uint64_t v91 = v103;
  v87(v103, v84, v24);
  unsigned __int8 v115 = -1;
  char v92 = sub_1D7A9CAD8();
  uint64_t v93 = sub_1D7A9CAC8();
  if ((v92 & 1) == 0)
  {
    if (v93 < 9)
    {
      sub_1D7A9CAB8();
      uint64_t v84 = v111;
      goto LABEL_14;
    }
LABEL_10:
    sub_1D797B240();
    sub_1D7A9CA88();
    swift_getAssociatedConformanceWitness();
    char v99 = sub_1D7A9BF58();
    v83(v71, v24);
    uint64_t v84 = v111;
    if (v99) {
      goto LABEL_16;
    }
    goto LABEL_14;
  }
  if (v93 > 8) {
    goto LABEL_10;
  }
  sub_1D7A9D4B8();
  sub_1D7A9D338();
  swift_getAssociatedConformanceWitness();
  char v94 = sub_1D7A9BF48();
  v83(v71, v24);
  unsigned int v95 = v115;
  uint64_t v96 = v102;
  v87(v102, v91, v24);
  if ((v94 & 1) == 0)
  {
    v83(v96, v24);
    uint64_t v84 = v111;
    goto LABEL_14;
  }
  unsigned __int8 v97 = sub_1D7A9CAB8();
  v83(v96, v24);
  BOOL v98 = v95 >= v97;
  uint64_t v84 = v111;
  if (v98)
  {
LABEL_14:
    v83(v91, v24);
    uint64_t v90 = (uint64_t)v110;
    goto LABEL_15;
  }
LABEL_16:
  uint64_t result = sub_1D7A9CF88();
  __break(1u);
  return result;
}

uint64_t sub_1D7979FE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for IntegerBytesCollection.Index();
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41842B8](a1, a2, a3, a4, WitnessTable);
}

uint64_t sub_1D797A074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for IntegerBytesCollection.Index();
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F41842C8](a1, a2, a3, a4, WitnessTable);
}

uint64_t sub_1D797A0FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D797A5B4(a1, a2, a3, MEMORY[0x1E4FBB618]);
}

void *sub_1D797A114(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1D797A680(a1, a2, a3, MEMORY[0x1E4FBB618]);
}

uint64_t sub_1D797A130()
{
  swift_getWitnessTable();
  return sub_1D7A9C668();
}

uint64_t sub_1D797A1B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1D79797C4();
  *a1 = result;
  return result;
}

uint64_t sub_1D797A1E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1D797ADBC();
  *a1 = result;
  return result;
}

void (*sub_1D797A210(void *a1, uint64_t *a2, uint64_t a3))(void *a1)
{
  uint64_t v6 = malloc(0x30uLL);
  *a1 = v6;
  uint64_t v7 = sub_1D797A2D0((uint64_t)v6, *a2, a3);
  v6[40] = v8;
  *((void *)v6 + 4) = v7;
  return sub_1D797A288;
}

void sub_1D797A288(void *a1)
{
  unint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t (*sub_1D797A2D0(uint64_t a1, uint64_t a2, uint64_t a3))(void)
{
  return nullsub_1;
}

uint64_t sub_1D797A31C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  type metadata accessor for IntegerBytesCollection.Index();
  uint64_t v3 = swift_getWitnessTable();
  return MEMORY[0x1F41842C0](a1, WitnessTable, v3);
}

void sub_1D797A3B8(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(_WORD *)(a1 + 8) = 256;
}

uint64_t sub_1D797A3C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  type metadata accessor for IntegerBytesCollection.Index();
  uint64_t v7 = swift_getWitnessTable();
  return MEMORY[0x1F41842B8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1D797A474(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  type metadata accessor for IntegerBytesCollection.Index();
  uint64_t v7 = swift_getWitnessTable();
  return MEMORY[0x1F41842C8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_1D797A518(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D797AFD0(a1, a2, a3, a4, MEMORY[0x1E4FBB6A0], MEMORY[0x1E4FBAFC8]);
}

uint64_t sub_1D797A558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D797AFD0(a1, a2, a3, a4, MEMORY[0x1E4FBB010], MEMORY[0x1E4FBAFD8]);
}

uint64_t sub_1D797A59C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D797A5B4(a1, a2, a3, MEMORY[0x1E4FBB610]);
}

uint64_t sub_1D797A5B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t WitnessTable = swift_getWitnessTable();
  type metadata accessor for IntegerBytesCollection.Index();
  uint64_t v7 = swift_getWitnessTable();
  return a4(a1, a2, WitnessTable, v7);
}

void *sub_1D797A668(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1D797A680(a1, a2, a3, MEMORY[0x1E4FBB610]);
}

void *sub_1D797A680(void *a1, uint64_t a2, uint64_t a3, void *(*a4)(uint64_t *__return_ptr, void *, uint64_t, uint64_t, uint64_t))
{
  uint64_t WitnessTable = swift_getWitnessTable();
  type metadata accessor for IntegerBytesCollection.Index();
  uint64_t v8 = swift_getWitnessTable();
  uint64_t result = a4(&v10, a1, a2, WitnessTable, v8);
  *a1 = v10;
  return result;
}

uint64_t sub_1D797A728@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(a1 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a2, v2, a1);
  uint64_t v6 = sub_1D79797C4();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, a1);
  swift_getWitnessTable();
  uint64_t result = sub_1D7A9CE88();
  *(void *)(a2 + *(int *)(result + 36)) = v6;
  return result;
}

uint64_t sub_1D797A814(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F4184360](a1, WitnessTable);
}

uint64_t sub_1D797A868()
{
  return 2;
}

uint64_t sub_1D797A870(uint64_t a1)
{
  swift_getWitnessTable();
  uint64_t v3 = sub_1D797B294();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8))(v1, a1);
  return v3;
}

uint64_t sub_1D797A900()
{
  return sub_1D7A9C238();
}

uint64_t sub_1D797A924()
{
  return sub_1D7A9D5E8();
}

uint64_t sub_1D797A94C()
{
  return sub_1D7A9D628();
}

uint64_t sub_1D797A994()
{
  return sub_1D797A94C();
}

uint64_t sub_1D797A99C()
{
  return sub_1D797A924();
}

uint64_t sub_1D797A9A4()
{
  return sub_1D7A9D628();
}

uint64_t sub_1D797A9E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x1F4184840](a1, a2, a3, WitnessTable);
}

BOOL sub_1D797AA50(uint64_t a1, uint64_t a2)
{
  return a2 < a1;
}

BOOL sub_1D797AA5C(uint64_t a1, uint64_t a2)
{
  return a1 < a2;
}

BOOL sub_1D797AA68(uint64_t a1, uint64_t a2)
{
  return a1 >= a2;
}

BOOL sub_1D797AA74(uint64_t a1, uint64_t a2)
{
  return a2 >= a1;
}

BOOL sub_1D797AA80(uint64_t *a1, uint64_t *a2)
{
  return sub_1D797AA50(*a1, *a2);
}

BOOL sub_1D797AA8C(uint64_t *a1, uint64_t *a2)
{
  return sub_1D797AA68(*a1, *a2);
}

BOOL sub_1D797AA98(uint64_t *a1, uint64_t *a2)
{
  return sub_1D797AA74(*a1, *a2);
}

BOOL sub_1D797AAA4(uint64_t *a1, uint64_t *a2)
{
  return sub_1D797AA5C(*a1, *a2);
}

uint64_t sub_1D797AAB0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = __OFSUB__(a2, a1);
  uint64_t result = a2 - a1;
  if (v2) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D797AAC0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1D797AAB0(*a1, *v2);
  *a2 = result;
  return result;
}

uint64_t sub_1D797AAF0()
{
  return sub_1D7A9CA18();
}

uint64_t sub_1D797AB10()
{
  return swift_getWitnessTable();
}

uint64_t sub_1D797AB2C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1D797AB48()
{
  return swift_getWitnessTable();
}

uint64_t sub_1D797AB64()
{
  return sub_1D797ACD4();
}

unint64_t sub_1D797AB7C()
{
  unint64_t result = qword_1EA845580;
  if (!qword_1EA845580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA845580);
  }
  return result;
}

uint64_t sub_1D797ABD0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1D797ABEC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1D797AC08()
{
  return sub_1D797ACD4();
}

uint64_t sub_1D797AC20()
{
  return swift_getWitnessTable();
}

uint64_t sub_1D797AC84()
{
  return swift_getWitnessTable();
}

uint64_t sub_1D797ACA0()
{
  return swift_getWitnessTable();
}

uint64_t sub_1D797ACBC()
{
  return sub_1D797ACD4();
}

uint64_t sub_1D797ACD4()
{
  return swift_getWitnessTable();
}

uint64_t sub_1D797AD40()
{
  return swift_getWitnessTable();
}

uint64_t type metadata accessor for IntegerBytesCollection.Index()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1D797ADBC()
{
  return 0;
}

uint64_t sub_1D797ADC4(uint64_t a1, uint64_t a2)
{
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v5 = sub_1D7A9C6F8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v5, v7, v8, v9, v10, v11, v12, v13);
  uint64_t v16 = (char *)v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14, v17, v18, v19, v20, v21, v22, v23);
  uint64_t v25 = (char *)v31 - v24;
  v31[1] = AssociatedConformanceWitness;
  LOBYTE(AssociatedConformanceWitness) = sub_1D7A9BF78();
  uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v26(v25, a1, v5);
  v26(v16, a2, v5);
  if ((AssociatedConformanceWitness & 1) == 0)
  {
    uint64_t v30 = *(void (**)(char *, uint64_t))(v6 + 8);
    v30(v16, v5);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v30)(v25, v5);
    goto LABEL_5;
  }
  char v27 = sub_1D7A9BF78();
  uint64_t v28 = *(void (**)(char *, uint64_t))(v6 + 8);
  v28(v16, v5);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v28)(v25, v5);
  if ((v27 & 1) == 0) {
LABEL_5:
  }
    __break(1u);
  return result;
}

uint64_t sub_1D797AFD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t), uint64_t (*a6)(char *, char *, uint64_t, uint64_t))
{
  uint64_t v37 = a6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v11 = a5(0, AssociatedTypeWitness, AssociatedConformanceWitness);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v20 = MEMORY[0x1F4188790](v11, v13, v14, v15, v16, v17, v18, v19);
  uint64_t v22 = (char *)&v36 - v21;
  uint64_t v23 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](v20, v24, v25, v26, v27, v28, v29, v30);
  uint64_t v32 = (char *)&v36 - v31;
  char v33 = sub_1D7A9BF78();
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v32, a1, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v22, a2, v11);
  if ((v33 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v22, v11);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v32, AssociatedTypeWitness);
    goto LABEL_5;
  }
  char v34 = v37(v32, &v22[*(int *)(v11 + 36)], AssociatedTypeWitness, AssociatedConformanceWitness);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v22, v11);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v32, AssociatedTypeWitness);
  if ((v34 & 1) == 0) {
LABEL_5:
  }
    __break(1u);
  return result;
}

unint64_t sub_1D797B240()
{
  unint64_t result = qword_1EA845588[0];
  if (!qword_1EA845588[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EA845588);
  }
  return result;
}

uint64_t DIPTrustKey.encryptedPrivateKey.getter()
{
  uint64_t v1 = *(void *)v0;
  sub_1D7860790(*(void *)v0, *(void *)(v0 + 8));
  return v1;
}

uint64_t DIPTrustKey.attestation.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_1D7860790(v1, *(void *)(v0 + 24));
  return v1;
}

uint64_t DIPTrustKey.publicKey.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  sub_1D7860790(v1, *(void *)(v0 + 40));
  return v1;
}

uint64_t DIPTrustKey.keyBlob.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  sub_1D7860790(v1, *(void *)(v0 + 56));
  return v1;
}

uint64_t DIPTrustKey.baaCertificate.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  sub_1D7860790(v1, *(void *)(v0 + 72));
  return v1;
}

uint64_t DIPTrustKey.init(encryptedPrivateKey:attestation:publicKey:keyBlob:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[9] = a8;
  v8[10] = v10;
  v8[7] = a6;
  v8[8] = a7;
  __int16 v8[5] = a4;
  v8[6] = a5;
  v8[3] = a2;
  v8[4] = a3;
  v8[2] = a1;
  return MEMORY[0x1F4188298](sub_1D797B3DC, 0, 0);
}

uint64_t sub_1D797B3DC()
{
  uint64_t v1 = v0[9];
  unint64_t v2 = v0[10];
  uint64_t v4 = v0[7];
  unint64_t v3 = v0[8];
  uint64_t v6 = v0[5];
  unint64_t v5 = v0[6];
  sub_1D7860790(v0[3], v0[4]);
  sub_1D7860790(v6, v5);
  sub_1D7860790(v4, v3);
  sub_1D7860790(v1, v2);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[11] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1D797B4BC;
  uint64_t v8 = v0[7];
  uint64_t v9 = v0[8];
  uint64_t v10 = v0[5];
  uint64_t v11 = v0[6];
  return sub_1D797B85C(14, v8, v9, v10, v11);
}

uint64_t sub_1D797B4BC(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 96) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v7 = sub_1D797B778;
  }
  else
  {
    *(void *)(v6 + 104) = a2;
    *(void *)(v6 + 112) = a1;
    uint64_t v7 = sub_1D797B5F0;
  }
  return MEMORY[0x1F4188298](v7, 0, 0);
}

uint64_t sub_1D797B5F0()
{
  unint64_t v12 = v0[13];
  uint64_t v13 = v0[14];
  uint64_t v2 = v0[9];
  unint64_t v1 = v0[10];
  uint64_t v3 = v0[7];
  unint64_t v4 = v0[8];
  uint64_t v6 = v0[5];
  unint64_t v5 = v0[6];
  uint64_t v7 = v0[3];
  unint64_t v8 = v0[4];
  uint64_t v9 = (uint64_t *)v0[2];
  sub_1D7860790(v13, v12);
  sub_1D7860790(v7, v8);
  sub_1D7860790(v6, v5);
  sub_1D7860790(v3, v4);
  sub_1D7860790(v2, v1);
  sub_1D7860790(v13, v12);
  sub_1D78607E8(v2, v1);
  sub_1D78607E8(v3, v4);
  sub_1D78607E8(v6, v5);
  sub_1D78607E8(v7, v8);
  sub_1D78607E8(v13, v12);
  *uint64_t v9 = v7;
  v9[1] = v8;
  uint64_t v9[2] = v6;
  v9[3] = v5;
  v9[4] = v3;
  v9[5] = v4;
  v9[6] = v2;
  v9[7] = v1;
  v9[8] = v13;
  v9[9] = v12;
  sub_1D78607E8(v7, v8);
  sub_1D78607E8(v6, v5);
  sub_1D78607E8(v3, v4);
  sub_1D78607E8(v2, v1);
  sub_1D78607E8(v13, v12);
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_1D797B778()
{
  uint64_t v1 = v0[9];
  unint64_t v2 = v0[10];
  uint64_t v4 = v0[7];
  unint64_t v3 = v0[8];
  uint64_t v6 = v0[5];
  unint64_t v5 = v0[6];
  uint64_t v8 = v0[3];
  unint64_t v7 = v0[4];
  sub_1D78607E8(v1, v2);
  sub_1D78607E8(v4, v3);
  sub_1D78607E8(v6, v5);
  sub_1D78607E8(v8, v7);
  sub_1D78607E8(v8, v7);
  sub_1D78607E8(v6, v5);
  sub_1D78607E8(v4, v3);
  sub_1D78607E8(v1, v2);
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_1D797B85C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[69] = a5;
  v5[68] = a4;
  v5[67] = a3;
  v5[66] = a2;
  v5[65] = a1;
  uint64_t v6 = sub_1D7A9B5F8();
  v5[70] = v6;
  v5[71] = *(void *)(v6 - 8);
  unsigned char v5[72] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D797B92C, 0, 0);
}

uint64_t sub_1D797B92C()
{
  unint64_t v1 = v0[69];
  uint64_t v2 = v0[68];
  unint64_t v3 = v0[67];
  uint64_t v4 = v0[66];
  uint64_t v5 = v0[65];
  v0[73] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1CA58]), sel_init);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA843A50);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D7AB2700;
  *(void *)(inited + 32) = sub_1D7A9BFC8();
  *(void *)(inited + 40) = v7;
  uint64_t v8 = MEMORY[0x1E4FBB550];
  *(void *)(inited + 72) = MEMORY[0x1E4FBB550];
  *(void *)(inited + 48) = 1;
  *(void *)(inited + 80) = sub_1D7A9BFC8();
  *(void *)(inited + 88) = v9;
  *(void *)(inited + 120) = v8;
  *(void *)(inited + 96) = 0;
  *(void *)(inited + 128) = sub_1D7A9BFC8();
  *(void *)(inited + 136) = v10;
  uint64_t v11 = MEMORY[0x1E4F277C0];
  *(void *)(inited + 168) = MEMORY[0x1E4F277C0];
  *(void *)(inited + 144) = v2;
  *(void *)(inited + 152) = v1;
  *(void *)(inited + 176) = sub_1D7A9BFC8();
  *(void *)(inited + 184) = v12;
  *(void *)(inited + 216) = v11;
  *(void *)(inited + 192) = v4;
  *(void *)(inited + 200) = v3;
  *(void *)(inited + 224) = sub_1D7A9BFC8();
  *(void *)(inited + 232) = v13;
  *(void *)(inited + 264) = v8;
  *(void *)(inited + 240) = v5;
  *(void *)(inited + 272) = sub_1D7A9BFC8();
  *(void *)(inited + 280) = v14;
  *(void *)(inited + 312) = v8;
  *(void *)(inited + 288) = 1;
  *(void *)(inited + 320) = sub_1D7A9BFC8();
  *(void *)(inited + 328) = v15;
  *(void *)(inited + 360) = v11;
  *(_OWORD *)(inited + 336) = xmmword_1D7AA0AB0;
  *(void *)(inited + 368) = sub_1D7A9BFC8();
  *(void *)(inited + 376) = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDF7930);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1D7AA4EB0;
  *(void *)(v17 + 32) = sub_1D7A9BFC8();
  *(void *)(v17 + 40) = v18;
  *(void *)(v17 + 48) = sub_1D7A9BFC8();
  *(void *)(v17 + 56) = v19;
  *(void *)(v17 + 64) = sub_1D7A9BFC8();
  *(void *)(v17 + 72) = v20;
  *(void *)(v17 + 80) = sub_1D7A9BFC8();
  *(void *)(v17 + 88) = v21;
  *(void *)(v17 + 96) = sub_1D7A9BFC8();
  *(void *)(v17 + 104) = v22;
  *(void *)(v17 + 112) = sub_1D7A9BFC8();
  *(void *)(v17 + 120) = v23;
  *(void *)(inited + 408) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDF7900);
  *(void *)(inited + 384) = v17;
  sub_1D7860790(v2, v1);
  sub_1D7860790(v4, v3);
  unint64_t v24 = sub_1D785F740(inited);
  v0[74] = v24;
  swift_beginAccess();
  uint64_t v25 = (void (*)(uint64_t))off_1EA843928;
  if (off_1EA843928)
  {
    uint64_t v26 = swift_retain();
    v25(v26);
    sub_1D78EEA8C((uint64_t)v25);
    uint64_t v27 = (ValueMetadata *)v0[57];
    uint64_t v28 = (_UNKNOWN **)v0[58];
  }
  else
  {
    uint64_t v27 = &type metadata for DeviceIdentityCommon;
    uint64_t v28 = &protocol witness table for DeviceIdentityCommon;
    v0[57] = &type metadata for DeviceIdentityCommon;
    v0[58] = &protocol witness table for DeviceIdentityCommon;
    uint64_t v29 = swift_allocObject();
    v0[54] = v29;
    *(void *)(v29 + 40) = &type metadata for DeviceInformationProvider;
    *(void *)(v29 + 48) = &protocol witness table for DeviceInformationProvider;
  }
  __swift_project_boxed_opaque_existential_1(v0 + 54, (uint64_t)v27);
  uint64_t v32 = (uint64_t (*)(unint64_t, ValueMetadata *, _UNKNOWN **))((char *)v28[3] + *(int *)v28[3]);
  uint64_t v30 = (void *)swift_task_alloc();
  v0[75] = v30;
  *uint64_t v30 = v0;
  v30[1] = sub_1D797BD14;
  return v32(v24, v27, v28);
}

uint64_t sub_1D797BD14(void *a1, uint64_t a2)
{
  uint64_t v5 = *v3;
  *(void *)(v5 + 608) = a2;
  *(void *)(v5 + 616) = v2;
  swift_task_dealloc();
  if (v2)
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = sub_1D797C394;
  }
  else
  {

    swift_bridgeObjectRelease();
    uint64_t v6 = sub_1D797BE60;
  }
  return MEMORY[0x1F4188298](v6, 0, 0);
}

uint64_t sub_1D797BE60()
{
  uint64_t v49 = v0;
  unint64_t v1 = v0[76];
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 54));
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1D7A9CFB8();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v4 = (SEL *)&unk_1E6A87000;
    if (!v3) {
      goto LABEL_15;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v4 = (SEL *)&unk_1E6A87000;
    if (!v3) {
      goto LABEL_15;
    }
  }
  if (v3 < 1)
  {
    __break(1u);
    return result;
  }
  uint64_t v5 = 0;
  uint64_t v6 = v0[71];
  unint64_t v44 = v1 & 0xC000000000000001;
  uint64_t v41 = v0[76] + 32;
  uint64_t v43 = (void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = (void (**)(uint64_t, uint64_t))(v6 + 8);
  uint64_t v46 = v3;
  uint64_t v42 = v0;
  do
  {
    if (v44) {
      uint64_t v7 = (__SecCertificate *)MEMORY[0x1D947BA10](v5, v0[76]);
    }
    else {
      uint64_t v7 = (__SecCertificate *)*(id *)(v41 + 8 * v5);
    }
    uint64_t v8 = (void *)v0[73];
    uint64_t v47 = v7;
    CFDataRef v9 = SecCertificateCopyData(v7);
    uint64_t v10 = sub_1D7A9B028();
    unint64_t v12 = v11;

    uint64_t v13 = (void *)sub_1D7A9AFF8();
    objc_msgSend(v8, v4[254], v13);

    if (qword_1EBDF9DC8 != -1) {
      swift_once();
    }
    uint64_t v14 = v0[72];
    uint64_t v15 = v0[70];
    uint64_t v16 = __swift_project_value_buffer(v15, (uint64_t)qword_1EBDFBE70);
    swift_beginAccess();
    (*v43)(v14, v16, v15);
    sub_1D7860790(v10, v12);
    sub_1D7860790(v10, v12);
    uint64_t v17 = sub_1D7A9B5D8();
    os_log_type_t v18 = sub_1D7A9C748();
    BOOL v19 = os_log_type_enabled(v17, v18);
    uint64_t v20 = v0[72];
    uint64_t v21 = v0[70];
    if (v19)
    {
      uint64_t v22 = swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      v48[0] = v23;
      *(_DWORD *)uint64_t v22 = 136446210;
      uint64_t v24 = sub_1D7A9B008();
      *(void *)(v22 + 4) = sub_1D7923300(v24, v25, v48);
      swift_bridgeObjectRelease();
      sub_1D78607E8(v10, v12);
      sub_1D78607E8(v10, v12);
      _os_log_impl(&dword_1D7853000, v17, v18, "Creating baaCertificates: [%{public}s]", (uint8_t *)v22, 0xCu);
      swift_arrayDestroy();
      uint64_t v26 = v23;
      uint64_t v4 = (SEL *)&unk_1E6A87000;
      uint64_t v0 = v42;
      MEMORY[0x1D947D740](v26, -1, -1);
      MEMORY[0x1D947D740](v22, -1, -1);

      sub_1D78607E8(v10, v12);
    }
    else
    {
      sub_1D78607E8(v10, v12);
      sub_1D78607E8(v10, v12);
      sub_1D78607E8(v10, v12);
    }
    (*v45)(v20, v21);
    ++v5;
  }
  while (v46 != v5);
LABEL_15:
  swift_bridgeObjectRelease();
  uint64_t v27 = sub_1D7A9AFB8();
  uint64_t v29 = (void *)v0[73];
  if (v28 >> 60 == 15)
  {
    LOWORD(v48[0]) = 122;
    unint64_t v30 = sub_1D785EAF8(MEMORY[0x1E4FBC860]);
    sub_1D7860544();
    swift_allocError();
    DIPError.init(_:fromError:code:forceCode:properties:file:function:line:)(0, 0xD000000000000020, 0x80000001D7AC57E0, (__int16 *)v48, 0, v30, 0xD000000000000054, 0x80000001D7AC5810, v31, 0xD000000000000034, 0x80000001D7AC5870, 73);
    swift_willThrow();

    swift_task_dealloc();
    uint64_t v32 = (uint64_t (*)(void))v0[1];
    return v32();
  }
  else
  {
    uint64_t v33 = v27;
    unint64_t v34 = v28;
    uint64_t v35 = (void *)sub_1D7A9AFF8();
    objc_msgSend(v29, v4[254], v35);

    id v36 = v29;
    uint64_t v37 = sub_1D7A9B028();
    uint64_t v39 = v38;

    sub_1D7871BDC(v33, v34);
    swift_task_dealloc();
    uint64_t v40 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
    return v40(v37, v39);
  }
}